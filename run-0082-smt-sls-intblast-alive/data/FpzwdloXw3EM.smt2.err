ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:04:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28767 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FpzwdloXw3EM.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             718093
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   111.111     10000        49          0            1        2)
(sat.ddfw       1      1    57.477     20001        98          1            1        3)
(smt.stats    0    101   5950    601  1279/1154/113      91/13     9   18   52.26)
(smt.stats    1    202   8007   2142  2520/2280/114     191/13    10   19   52.46)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 72057594037927935 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 2 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 2 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 0 := 36028797018963969 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 72057594037927935 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 1&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 1 := 2 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 1 := 36028797018963969 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963967&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 2&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963964&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963964&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4&36028797018963962
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 4 := 36028797018963965 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 36028797018963963 := 36028797018963969 << 55
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 36028797018963962 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 36028797018963961 := 36028797018963968&36028797018963962
(sat.ddfw       1      1   70.4225     40001       196          2            1        5)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 4 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 8 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 16 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 32 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 64 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 128 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 128 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 256 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 512 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 1024 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 2048 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 4096 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 8192 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 16384 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 32768 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 65536 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 131072 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 16384 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 32768 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 65536 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 131072 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 262144 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 262144 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 524288 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 1048576 := 36028797018963968&36028797018963962
(smt.stats    2    313   9918   3149  2733/2315/115     335/17    11   19   53.24)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 6291455 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 6291454 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 6291456 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 6291456 := 36028797018963968&36028797018963962
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 36028797018963968&36028797018963962
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 6291456 := 36028797018963968&36028797018963962
(smt.stats    3    414  10781   4086  2843/2491/237     555/38    12   45   53.54)
(smt.stats    4    525  13588   7860  2928/2673/268     833/116    15   66   53.74)
(sat.ddfw       1      1   56.1798     70001       343          3            1        8)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 4&1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 4&1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 72057594037927933&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927933 := 72057594037927933 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 72057594037927933&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927933 := 72057594037927933 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 72057594037927933&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927933 := 72057594037927933 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 72057594037927933&1
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 72057594037927933 := 72057594037927933 << 1
(smt.stats    5    647  18414  10778  3077/2798/275     972/157    17   68   53.86)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&1
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 4194304 := 0 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  22546  15189  3146/2851/282    1137/158    18   69   53.98)
(sat.ddfw       1      1   44.6429    110001       539          4            1       12)
ramon: poll                 wall=1.000s usage=0.976s mem=56196KiB load=0.98 rootload=0.96
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&1
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 4194304 := 0 << 1
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 9248&1
band: (band[56] (shl[56] (bv2int %1) (mod #106 56)) (if (= #629 55) 1 (if #631 3 #788))) 1 := 9248&1
(smt.stats    7    859  25977  19322  3218/2941/293    1383/286    21   79   54.10)
(smt.stats    8    981  28476  23712  3316/3023/308    1573/346    23  143   54.30)
(sat.ddfw       1      1   37.3685    160000       784          5            1       17)
(smt.stats    9   1115  33685  31716  3415/3116/313    1893/418    24  154   54.49)
(smt.stats   10   1216  35132  37574  3420/3123/314    2028/449    25  156   54.49)
(smt.stats   11   1327  37180  42819  3478/3126/314    2198/451    25  156   54.58)
(sat.ddfw       1      1   31.9664    220001      1078          6            1       23)
ramon: poll                 wall=2.000s usage=1.977s mem=56852KiB load=1.00 rootload=1.00
(smt.stats   12   1449  40724  52104  3614/3214/314    2524/457    25  156   54.68)
(sat.ddfw       1      1   27.9553    290001      1421          7            1       30)
(smt.stats   13   1583  44305  57716  3720/3412/324    2732/574    27  182   54.89)
ramon: poll                 wall=3.002s usage=2.984s mem=57020KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   24.8139    370001      1813          8            1       38)
(smt.stats   14   1730  48709  64369  3802/3455/324    2924/577    27  182   54.99)
(smt.stats   15   1831  52565  67455  3879/3555/324    3057/577    27  182   54.99)
ramon: poll                 wall=4.000s usage=3.976s mem=57432KiB load=0.99 rootload=0.99
(smt.stats   16   1942  55610  74537  3907/3600/325    3247/615    28  184   54.99)
(sat.ddfw       1      1   22.3547    460001      2254          9            1       47)
(smt.stats   17   2064  58975  81327  3941/3629/329    3503/779    29  186   54.99)
(smt.stats   18   2198  63213  92677  3976/3677/330    3662/796    31  207   55.18)
(sat.ddfw       1      1   20.3211    560001      2745         10            1       57)
ramon: poll                 wall=5.000s usage=4.978s mem=57404KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   19   2345  66343 101317  4066/3731/331    3845/813    32  207   55.30)
(smt.stats   20   2506  69869 114693  4089/3792/332    4195/835    33  213   55.30)
(smt.stats   21   2607  70287 118734  4096/3798/332    4306/835    33  213   55.40)
(smt.stats   22   2718  74987 129621  4147/3803/332    4530/839    33  213   55.40)
ramon: poll                 wall=6.000s usage=5.939s mem=57864KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   18.3547    670001      3284         11            1       68)
(smt.stats   23   2840  78103 137734  4263/3923/332    4838/841    33  213   55.49)
(smt.stats   24   2974  79130 144026  4270/3972/333    5012/1081    34  216   55.53)
ramon: poll                 wall=7.000s usage=6.942s mem=58096KiB load=1.00 rootload=1.01
(smt.stats   25   3121  83085 151982  4415/4112/334    5247/1131    35  219   55.63)
(sat.ddfw       1      1   16.9157    790001      3872         12            1       80)
(smt.stats   26   3282  85423 164690  4431/4124/335    5459/1131    35  219   55.63)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 0 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 36028797018963956 := 0 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 0 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 36028797018963956 := 0 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 24019198013341694 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 36028797021068282 << 2
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 0 := 36028797021068282 << 2
(smt.stats   27   3459  88974 175207  4502/4184/347    5773/1172    36  219   55.81)
(smt.stats   28   3560  91053 180246  4585/4245/347    5995/1268    37  227   55.91)
(smt.stats   29   3671  94074 188664  4785/4287/347    6439/1280    37  227   56.05)
ramon: poll                 wall=8.000s usage=7.942s mem=58312KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   15.6872    920001      4509         13            1       93)
(smt.stats   30   3793  97948 198954  4940/4495/347    6758/1280    37  227   56.24)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3927 100058 204313  5248/4940/348    7022/1591    38  228   56.34)
ramon: poll                 wall=9.000s usage=8.943s mem=58692KiB load=1.00 rootload=1.00
(smt.stats   32   4074 105092 217047  5505/5177/349    7634/1599    38  228   56.34)
(smt.stats   33   4235 110195 233228  5688/5208/349    7929/1800    39  233   56.45)
(smt.stats   34   4412 113226 241495  5829/5515/349    8282/1800    39  233   56.58)
(sat.ddfw       1      1   14.6275   1060001      5196         14            1      108)
(smt.stats   35   4606 116525 250703  5885/5542/351    8694/1910    40  243   56.67)
ramon: poll                 wall=10.000s usage=9.993s mem=59104KiB load=1.05 rootload=1.05
(smt.stats   36   4707 118204 258157  5922/5593/351    8883/1910    40  243   56.77)
(smt.stats   37   4818 121657 270001  6037/5619/351    9051/1912    40  243   56.89)
(smt.stats   38   4940 123113 280498  6050/5730/351    9239/1912    40  243   56.99)
ramon: poll                 wall=11.000s usage=10.993s mem=59160KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.7099   1210001      5931         15            1      123)
(smt.delete-inactive-clauses  :num-deleted-clauses 1140)
(smt.stats   39   5074 125178 289860  6074/5736/351    8323/1913    40  243   56.99)
(smt.stats   40   5221 127864 297623  6083/5763/351    8478/1913    40  243   56.99)
(smt.stats   41   5382 130936 316429  6124/5767/351    8678/1913    40  243   56.99)
ramon: poll                 wall=12.000s usage=11.993s mem=59492KiB load=1.00 rootload=1.00
(smt.stats   42   5559 135142 340018  6148/5819/354    8927/2118    41  245   56.99)
(sat.ddfw       1      1   12.9074   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=13.169s mem=59312KiB load=1.18 rootload=1.18
ramon: poll                 wall=14.000s usage=14.171s mem=59328KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.1803   1540001      7549         17            1      156)
(smt.stats   43   5753 144215 359894  6272/5841/354    9274/2132    42  251   57.39)
(smt.stats   44   5966 152547 385020  6283/5963/354    9791/2132    42  251   57.39)
(smt.stats   45   6067 155576 392753  6303/5977/354   10033/2132    42  251   57.39)
(smt.stats   46   6178 159750 406109  6359/6011/354   10188/2136    42  251   57.39)
ramon: poll                 wall=15.000s usage=15.253s mem=59788KiB load=1.08 rootload=1.08
(smt.stats   47   6300 162534 420912  6389/6054/355   10455/2344    43  256   57.39)
(smt.stats   48   6434 166660 450283  6424/6078/355   10667/2345    43  256   57.51)
(sat.ddfw       1      1   11.7348   1720001      8431         18            1      174)
(smt.stats   49   6581 169579 468520  6434/6108/355   10911/2345    43  256   57.61)
(smt.stats   50   6742 178034 510633  6442/6122/355   11233/2345    43  256   57.61)
ramon: poll                 wall=16.000s usage=16.382s mem=59828KiB load=1.13 rootload=1.13
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6919 182642 537519  6457/6129/355   11568/2347    43  256   57.61)
(smt.stats   52   7113 187020 559059  6464/6142/355   11823/2348    43  256   57.61)
(smt.stats   53   7326 190338 570783  6552/6154/355   12152/2352    43  256   57.70)
(sat.ddfw       1      1   11.2954   1910001      9362         19            1      193)
ramon: poll                 wall=17.000s usage=17.439s mem=60256KiB load=1.06 rootload=1.06
(smt.stats   54   7560 193231 590546  6570/6247/357   12443/2736    44  274   57.80)
(smt.stats   55   7661 197469 616523  6570/6250/358   12635/2829    45  275   57.80)
(smt.stats   56   7772 200186 624794  6570/6250/358   12796/2829    45  275   57.90)
(smt.stats   57   7894 202408 645286  6580/6254/358   12970/2829    45  275   57.80)
(smt.stats   58   8028 203818 657589  6590/6270/359   13162/2886    46  278   57.80)
ramon: poll                 wall=18.000s usage=18.439s mem=60376KiB load=1.00 rootload=1.00
(smt.stats   59   8175 207540 670276  6656/6276/359   13383/2887    46  278   58.25)
(smt.stats   60   8336 209420 676646  6686/6340/360   13562/2931    47  283   58.25)
(sat.ddfw       1      1   10.7227   2110001     10343         20            1      214)
(smt.stats   61   8513 212268 699622  6742/6384/360   13860/2931    47  283   58.34)
ramon: poll                 wall=19.000s usage=19.434s mem=60212KiB load=1.00 rootload=0.99
(smt.stats   62   8707 216200 717309  6789/6430/360   14071/2933    47  283   58.34)
(smt.stats   63   8920 220675 748136  6906/6484/360   14342/2934    47  283   58.34)
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206608&255
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206608&255
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206608&255
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 1 := 4206608&255
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206592&255
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 18374686479675830272 := 18014398508828156 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206592&255
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 18374686479675830272 := 18014398508828174 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206592&255
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 18374686479675830272 := 18014398508828158 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4206592&255
shl: (shl[64] (bv2int %1) (mod (+ #106 #399) 64)) 18374686479675830272 := 18014398508828158 << 8
ramon: poll                 wall=20.000s usage=20.569s mem=60428KiB load=1.13 rootload=1.14
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4203520&255
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 18014398508825086 := 15199648742391844 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4203520&255
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 18014398508825088 := 15199648742391844 << 8
band: (band[56] (shl[64] (bv2int %1) (mod #400 64)) (if (= #807 63) 0 (if #809 1 #939))) 0 := 4203520&255
shl: (shl[56] (bv2int %1) (mod (bv2int %0) 56)) 18014398508825088 := 15199648742391844 << 8
(smt.stats   64   9154 224807 770708  6984/6597/360   14715/2941    47  283   58.44)
ramon: end                  Fri Nov  1 22:05:05 2024
ramon: root.execname        z3
ramon: root.utime           20.620s
ramon: root.stime           0.010s
ramon: group.total          20.643s
ramon: group.utime          20.627s
ramon: group.stime          0.016s
ramon: group.mempeak        60944KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.03
