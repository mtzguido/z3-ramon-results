ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:40:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27961 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1379
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/XRMv1uDF78ex.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             839961
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   111.111     10000        49          0            1        2)
(smt.stats    0    101   2450    531  1021/918/101      95/26     6   19   51.77)
(sat.ddfw       1      1   53.1968     20001        98          1            1        3)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 2&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 17179869183 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 17179869183 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 2&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 4 := 4&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 4 := 4&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 17179869182&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 2 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934592 := 8589934593 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8589934592 := 8589934593 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934592 := 8589934593 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 1 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 2&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 8 := 8&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8 := 9 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 2&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 1&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 8589934592 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934593 := 10737418241 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934593 := 10737418241 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 1 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 7 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 6 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 4 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 8 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 3 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 2 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 2 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 2 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 5 := 8589934592&8
(smt.stats    1    202   3847   1232  1537/1330/139     193/32     8   29   52.16)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&8
band: (band[34] (shl[34] (bv2int %0) (mod #104 34)) (if (or #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 ...) 0 (if #588 1 #596))) 4 := 8589934592&8
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8589934592 := 12884901889 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8589934592 := 12884901889 << 32
(sat.ddfw       1      1   55.2486     40001       196          2            1        5)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 8589934592&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 8589934592 := 12884901889 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 4294967296&4
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934600 := 12884901889 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 4294967296&4
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8589934600 := 12884901889 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 4 := 4294967296&4
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 4 := 4294967296&4
(smt.stats    2    313   6294   2948  1616/1439/194     315/41    13   44   52.35)
(smt.stats    3    414   7773   5089  1673/1518/219     420/50    17   56   52.45)
(smt.stats    4    525   9536   7829  1835/1642/231     614/84    21   82   52.74)
(smt.stats    5    647  12124  12109  1867/1664/235     779/103    22   87   52.74)
(sat.ddfw       1      1   49.2611     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14073  17338  1888/1685/235     937/103    22   87   52.87)
(smt.stats    7    859  16491  21525  1910/1705/235    1103/104    22   87   53.07)
(smt.stats    8    981  18491  26329  1936/1733/246    1276/136    24   94   53.16)
ramon: poll                 wall=1.000s usage=0.867s mem=55264KiB load=0.87 rootload=0.85
(sat.ddfw       1      1    42.508    110001       539          4            1       12)
(smt.stats    9   1115  21046  30875  1988/1752/247    1486/170    25  122   53.16)
(smt.stats   10   1216  24425  35883  2033/1806/247    1611/190    26  126   53.26)
(sat.ddfw       1      1   37.0089    160000       784          5            1       17)
(smt.stats   11   1327  28959  43613  2051/1844/250    1724/199    27  128   53.36)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33276  50982  2059/1848/250    1904/200    27  128   53.36)
(smt.stats   13   1583  37680  58858  2078/1870/250    2170/200    27  128   53.36)
(sat.ddfw       1      1   32.4857    220001      1078          6            1       23)
(smt.stats   14   1730  43654  70319  2083/1875/250    2354/200    27  128   53.61)
ramon: poll                 wall=2.000s usage=1.865s mem=55864KiB load=1.00 rootload=1.00
(smt.stats   15   1831  46896  77532  2099/1885/250    2502/200    27  128   53.61)
(smt.stats   16   1942  49971  84518  2102/1890/250    2666/200    27  128   53.61)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 12884901897&1
(smt.stats   17   2064  51362  87412  2139/1909/268    2790/253    28  129   53.71)
(sat.ddfw       1      1    28.866    290001      1421          7            1       30)
(smt.stats   18   2198  52653  91614  2439/2079/268    3010/253    28  129   53.99)
(smt.stats   19   2345  53081  92379  2511/2302/268    3143/334    29  153   54.20)
(smt.stats   20   2506  55549 100701  2994/2716/268    3472/334    29  153   54.20)
(smt.stats   21   2607  56274 102128  3054/2796/268    3603/334    29  153   54.39)
ramon: poll                 wall=3.000s usage=2.868s mem=56856KiB load=1.00 rootload=1.00
(smt.stats   22   2718  56889 104399  3295/3035/268    3735/334    29  153   54.55)
(sat.ddfw       1      1   25.9656    370001      1813          8            1       38)
(smt.stats   23   2840  57577 106662  3643/3325/268    3906/334    29  153   54.55)
(smt.stats   24   2974  57885 107291  3847/3627/268    4060/334    29  153   54.75)
(smt.stats   25   3121  62403 140532  4240/4035/268    4559/334    29  153   54.93)
(smt.stats   26   3282  67907 185221  4259/4039/269    4814/876    30  156   54.93)
(sat.ddfw       1      1   23.5849    460001      2254          9            1       47)
ramon: poll                 wall=4.000s usage=3.867s mem=57064KiB load=1.00 rootload=1.00
(smt.stats   27   3459  71909 213226  4303/4073/270    5209/907    31  156   55.02)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560  72786 217601  4311/4102/271    5530/1041    32  157   55.12)
(smt.stats   29   3671  74506 226449  4335/4102/271    5749/1041    32  157   55.12)
(smt.stats   30   3793  75465 230649  4348/4137/271    6036/1041    32  157   55.12)
(smt.stats   31   3927  76692 240665  4382/4143/271    6304/1041    32  157   55.12)
(sat.ddfw       1      1   21.5703    560001      2745         10            1       57)
(smt.stats   32   4074  78545 256096  4393/4173/271    6525/1043    32  157   55.12)
(smt.stats   33   4235  79337 260000  4403/4190/271    6726/1043    32  157   55.12)
ramon: poll                 wall=5.000s usage=4.909s mem=57548KiB load=1.04 rootload=1.04
(smt.stats   34   4412  80826 274122  4431/4198/271    6999/1043    32  157   55.12)
(smt.stats   35   4606  86350 335965  4443/4228/272    7290/1780    33  161   55.38)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 4294967296&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 8589934592&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 8589934592&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 8589934592&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 2 := 8589934592&2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 12884901888&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 7056631267328 := 1643 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 4294967296&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 7048041332736 := 1641 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 12884901888&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 7056631267328 := 1643 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 12884901888&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 7056631267328 := 1643 << 31
(smt.stats   36   4707  87787 347238  4493/4236/272    7462/1787    33  161   55.38)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 0&4
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 12884901925 := 0 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 0&2
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 12884901925 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 0&2
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 12884901925 := 0 << 31
(smt.stats   37   4818  89277 352306  4601/4304/282    7606/1898    34  163   55.38)
(smt.stats   38   4940  90363 373489  4652/4408/287    7764/1899    34  163   55.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 272)
(smt.stats   39   5074  92363 388714  4704/4466/290    7682/1936    35  164   55.77)
(sat.ddfw       1      1   20.0767    670001      3284         11            1       68)
(smt.stats   40   5221  96699 427940  4712/4477/291    7904/1945    36  168   55.77)
(smt.stats   41   5382 100069 462029  4739/4490/291    8290/1945    36  168   55.87)
ramon: poll                 wall=6.000s usage=6.030s mem=57948KiB load=1.12 rootload=1.12
(smt.stats   42   5559 101437 476235  4742/4504/291    8703/1945    36  168   55.87)
(smt.stats   43   5753 103683 499563  4742/4504/291    8945/1945    36  168   55.97)
(sat.ddfw       1      1   18.6133    790001      3872         12            1       80)
(smt.stats   44   5966 109369 560725  4810/4523/292    9265/2275    37  168   56.06)
(smt.stats   45   6067 111097 575022  4843/4591/292    9476/2275    37  168   56.06)
ramon: poll                 wall=7.000s usage=7.029s mem=58180KiB load=1.00 rootload=1.00
(smt.stats   46   6178 113684 605482  4881/4612/292    9663/2275    37  168   56.06)
(smt.stats   47   6300 117066 649373  4893/4652/292    9825/2275    37  168   56.06)
(sat.ddfw       1      1   17.3195    920001      4509         13            1       93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 119255 674379  4928/4690/294   10120/2345    38  175   56.16)
(smt.stats   49   6581 123740 688839  4936/4692/294   10293/2345    38  175   56.16)
ramon: poll                 wall=8.000s usage=8.028s mem=58392KiB load=1.00 rootload=1.00
(smt.stats   50   6742 126251 710770  5024/4784/296   10569/2390    39  189   56.25)
(smt.stats   51   6919 128361 732941  5070/4790/296   10796/2393    39  189   56.35)
(sat.ddfw       1      1   16.2037   1060001      5196         14            1      108)
ramon: poll                 wall=9.002s usage=9.113s mem=58848KiB load=1.08 rootload=1.09
(smt.stats   52   7113 132262 761366  5119/4845/296   11168/2425    40  191   56.35)
(smt.stats   53   7326 135046 793307  5153/4901/296   11506/2426    40  191   56.44)
(smt.stats   54   7560 139686 816991  5201/4954/298   11831/2506    41  191   56.72)
(sat.ddfw       1      1   15.3988   1210001      5931         15            1      123)
ramon: poll                 wall=10.000s usage=10.133s mem=59044KiB load=1.02 rootload=1.02
(smt.stats   55   7661 142992 836532  5264/4965/298   12000/2508    41  191   56.82)
(smt.stats   56   7772 144275 842965  5323/5037/298   12149/2526    42  196   56.82)
(smt.stats   57   7894 147279 882585  5344/5087/298   12295/2526    42  196   56.91)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 72&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869256 := 8589934595 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 72&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869256 := 8589934595 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 72&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869256 := 8589934595 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869248 := 8589934595 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #725 #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 ...) 0 (if #755 1 #821))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869248 := 8589934595 << 27
(smt.stats   58   8028 149056 903639  5388/5140/306   12504/2540    43  200   56.91)
ramon: poll                 wall=11.000s usage=11.130s mem=59208KiB load=1.00 rootload=0.99
(smt.stats   59   8175 152059 923990  5489/5142/306   12768/2543    43  200   56.91)
(sat.ddfw       1      1   14.4757   1370001      6715         16            1      139)
(smt.stats   60   8336 157202 997497  5538/5262/306   13013/2546    43  200   56.91)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   61   8513 158847 1024468  5583/5314/306   13317/2614    44  205   57.17)
ramon: poll                 wall=12.000s usage=12.129s mem=59516KiB load=1.00 rootload=1.00
(smt.stats   62   8707 161465 1046915  5721/5337/306   13679/2616    44  205   57.28)
(sat.ddfw       1      1   13.6491   1540001      7549         17            1      156)
(smt.stats   63   8920 164325 1096106  5788/5479/306   14029/2620    44  205   57.37)
ramon: poll                 wall=13.000s usage=13.128s mem=59656KiB load=1.00 rootload=1.00
(smt.stats   64   9154 167643 1134329  5843/5554/306   14365/2620    44  205   57.47)
(smt.stats   65   9411 172333 1190017  5917/5662/307   14785/2910    45  206   57.47)
ramon: poll                 wall=14.000s usage=14.128s mem=59792KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    12.918   1720001      8431         18            1      174)
(smt.stats   66   9512 173316 1205907  5921/5673/307   15015/2910    45  206   57.56)
(smt.stats   67   9623 175724 1227499  5997/5675/308   15171/2910    45  206   57.56)
(smt.stats   68   9745 176967 1245964  6039/5761/308   15293/2960    46  212   57.56)
(smt.stats   69   9879 178539 1267495  6056/5804/308   15450/2961    46  212   57.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   70  10026 180730 1299081  6063/5815/308   15661/2961    46  212   57.56)
(smt.stats   71  10187 181491 1308443  6063/5815/308   15838/2961    46  212   57.56)
ramon: poll                 wall=15.000s usage=15.171s mem=59988KiB load=1.04 rootload=1.04
(smt.stats   72  10364 184544 1347875  6082/5821/308   16036/2961    46  212   57.66)
(smt.stats   73  10558 187778 1375513  6160/5861/308   16451/2968    46  212   57.75)
(sat.ddfw       1      1   12.3811   1910001      9362         19            1      193)
(smt.stats   74  10771 190229 1414847  6184/5923/308   16793/2968    46  212   57.75)
ramon: poll                 wall=16.000s usage=16.349s mem=60020KiB load=1.18 rootload=1.18
(smt.stats   75  11005 193636 1453252  6352/6101/311   17202/3041    47  216   57.85)
ramon: poll                 wall=17.000s usage=17.349s mem=60140KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.7716   2110001     10343         20            1      214)
(smt.stats   76  11262 197171 1480282  6511/6208/312   17525/3043    47  216   57.94)
ramon: poll                 wall=18.002s usage=18.569s mem=60400KiB load=1.22 rootload=1.22
(smt.stats   77  11544 200481 1525705  6635/6318/312   17852/3046    47  216   57.94)
(smt.stats   78  11645 202202 1546235  6661/6401/312   18033/3124    48  240   58.04)
(smt.stats   79  11756 204230 1555081  6679/6412/312   18209/3124    48  240   58.04)
(sat.ddfw       1      1   11.2958   2320001     11372         21            1      235)
(smt.stats   80  11878 208196 1588527  6702/6449/312   18411/3124    48  240   58.49)
ramon: poll                 wall=19.000s usage=19.584s mem=60480KiB load=1.02 rootload=1.01
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   81  12012 208915 1607928  6705/6454/312   18569/3125    48  240   58.59)
(smt.stats   82  12159 210182 1618088  6717/6462/312   18738/3125    48  240   58.49)
(smt.stats   83  12320 212782 1637530  6755/6467/312   18971/3125    48  240   58.49)
ramon: poll                 wall=20.000s usage=20.584s mem=60736KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:40:31 2024
ramon: root.execname        z3
ramon: root.utime           20.640s
ramon: root.stime           0.010s
ramon: group.total          20.658s
ramon: group.utime          20.642s
ramon: group.stime          0.016s
ramon: group.mempeak        60996KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.03
