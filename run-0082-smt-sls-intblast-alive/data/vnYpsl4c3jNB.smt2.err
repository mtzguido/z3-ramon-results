ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:16:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27185 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/vnYpsl4c3jNB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             957404
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3091   1843  1183/1060/100      92/4     5   15   51.97)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 4&60713509627
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 4 := 5 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1       100     10000        49          0            1        2)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 4&60713509627
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 4 := 268435456 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 4&60713509627
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 4 := 268435456 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 68719476736&60713509627
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 68719476737 := 68719476737 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 68719476736&60713509627
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 68719476737 := 68719476737 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 68719476736&60713509627
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 68719476737 << 36
(smt.stats    1    202   4641   3003  1651/1490/123     188/14     8   22   52.26)
(sat.ddfw       1      1   52.9153     20001        98          1            1        3)
(sat.ddfw       1      1   54.0541     40001       196          2            1        5)
(smt.stats    2    313   5041   3305  1999/1789/123     302/28     8   22   52.55)
(smt.stats    3    438   7051   5426  2495/2265/128     452/102    10   25   52.66)
(smt.stats    4    549   8801   7969  2797/2562/129     551/143    12   29   52.75)
(smt.stats    5    671  10610  10884  2850/2578/129     694/146    12   29   52.75)
(sat.ddfw       1      1   47.2441     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    772  12003  13693  2928/2695/131     797/188    13   30   52.85)
(smt.stats    7    883  14704  17039  2966/2726/132     906/195    14   32   52.95)
(smt.stats    8   1005  17007  19682  3019/2763/134    1027/198    15   33   52.95)
(smt.stats    9   1139  20560  24846  3049/2790/134    1168/207    16   33   53.06)
ramon: poll                 wall=1.000s usage=1.060s mem=55104KiB load=1.06 rootload=1.05
(sat.ddfw       1      1   40.2414    110001       539          4            1       12)
(smt.stats   10   1240  22276  29672  3146/2851/134    1274/212    16   33   53.06)
(smt.stats   11   1351  23424  32379  3178/2919/135    1382/222    17   34   53.06)
(smt.stats   12   1473  24099  36560  3212/2969/136    1502/237    18   36   53.06)
(smt.stats   13   1607  25364  41355  3242/2979/138    1674/238    18   36   53.16)
(smt.stats   14   1754  28317  50111  3264/3017/147    1817/277    19   41   53.27)
(smt.stats   15   1855  29336  54041  3324/3026/147    1920/390    20   43   53.27)
(sat.ddfw       1      1   34.6493    160000       784          5            1       17)
(smt.stats   16   1966  30069  57046  3363/3085/147    2038/390    20   43   53.27)
(smt.stats   17   2088  30689  59558  3365/3118/147    2159/390    20   43   53.27)
(smt.stats   18   2222  31238  63480  3368/3121/147    2312/390    20   43   53.37)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710655&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710655&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710647&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710647&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710639&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 62170633858247 := 124341267716480&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501376 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501376 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501568 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91502592 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501356 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501356 := 62170725359618&62170633858264
(smt.stats   19   2369  33906  69068  3423/3167/201    2476/438    21   54   53.79)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501356 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501356 := 62170725359620&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725359744&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725360256&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725360512&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501568 := 62170725360256&62170633858264
(smt.stats   20   2530  36008  74797  3506/3217/251    2688/441    21   54   53.79)
(smt.stats   21   2631  37220  78598  3577/3288/253    2777/472    22   83   53.89)
(smt.stats   22   2742  39251  83522  3629/3351/254    2912/473    22   83   54.08)
(smt.stats   23   2864  41430  89295  3685/3391/254    3028/499    23   92   54.08)
(smt.stats   24   2998  42456  93765  3693/3446/255    3162/503    24   94   54.08)
ramon: poll                 wall=2.000s usage=2.201s mem=56424KiB load=1.14 rootload=1.13
(sat.ddfw       1      1   30.3342    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   25   3145  45724 101298  3711/3460/255    3306/503    24   94   54.08)
(smt.stats   26   3306  50239 117384  3765/3502/256    3479/523    25  100   54.17)
(smt.stats   27   3483  53136 124874  3827/3517/256    3674/523    25  100   54.17)
(smt.stats   28   3584  56296 131205  3849/3576/256    3772/524    25  100   54.27)
(smt.stats   29   3695  57478 136081  3884/3600/256    3884/524    25  100   54.37)
(smt.stats   30   3817  59296 143157  3897/3629/256    4032/524    25  100   54.37)
(smt.stats   31   3951  62656 154289  3915/3658/257    4206/565    26  102   54.65)
(smt.stats   32   4098  64643 162915  3923/3666/258    4366/565    26  102   54.65)
(sat.ddfw       1      1   26.9334    290001      1421          7            1       30)
(smt.stats   33   4259  70712 179190  3935/3676/260    4520/583    28  115   54.65)
(smt.stats   34   4436  75303 190442  3939/3680/260    4712/583    28  115   54.65)
ramon: poll                 wall=3.003s usage=3.346s mem=56932KiB load=1.14 rootload=1.15
(smt.stats   35   4632  78416 203350  3962/3689/260    4935/583    28  115   54.75)
(smt.stats   36   4736  80832 210707  3966/3707/260    5045/583    28  115   54.94)
(smt.stats   37   4847  84555 216179  3967/3708/260    5183/583    28  115   54.94)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 2 := 520&7
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 520&7
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 281474976711176 := 521 << 3
(smt.stats   38   4969  86831 220189  4025/3724/266    5310/637    29  117   54.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 34)
(sat.ddfw       1      1   24.1036    370001      1813          8            1       38)
(smt.stats   39   5103  90448 227788  4055/3784/266    5435/637    29  117   55.03)
(smt.stats   40   5250  95506 237587  4079/3798/266    5643/638    29  117   55.23)
(smt.stats   41   5411  99502 249777  4151/3831/266    5899/645    29  117   55.23)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 62170633857024 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91502592 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
ramon: poll                 wall=4.000s usage=4.386s mem=57540KiB load=1.04 rootload=1.04
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094157824&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91506688 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91514880 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91506688 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91514880 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91564032 := 215890094155776&62170633858264
(smt.stats   42   5588 103370 260078  4248/3892/266    6157/650    29  117   55.32)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91514880 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91498496 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 157696 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 485376 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 485376 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 1271808 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 748032 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
(sat.ddfw       1      1   21.8235    460001      2254          9            1       47)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 805529600 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 805529600 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 807102464 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 808151040 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 808151040 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 807626752 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 807102464 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 806053888 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 535521280 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 535521280 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 535521280 := 215890094156288&62170633858264
(smt.stats   43   5782 106519 278259  4770/4184/386    6698/782    30  128   56.02)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 273377280 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 273377280 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 520841762 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 520841728 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 520841216 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 403400704 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 403400704 := 215890094156288&62170633858264
(smt.stats   44   5995 109882 292912  5262/4993/476    7406/966    31  150   56.50)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   45   6096 115044 310153  5278/5004/476    7524/966    31  150   56.50)
(smt.stats   46   6207 119500 321457  5297/5016/477    6048/1264    32 1858   56.60)
(smt.stats   47   6329 126858 353669  5307/5045/477    6158/1354    33 1864   56.60)
ramon: poll                 wall=5.000s usage=5.407s mem=59072KiB load=1.02 rootload=1.01
(sat.ddfw       1      1   19.9283    560001      2745         10            1       57)
(smt.stats   48   6463 133067 377505  5315/5055/477    7007/1354    33 1864   56.69)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 640&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 1688849860264576 := 215890289233920 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 640&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 1688849860264576 := 215890289233920 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 896&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 1970324836975488 := 215890289233920 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 896&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 1970324836975488 := 215890289233920 << 1
(smt.stats   49   6610 137266 388201  5384/5089/478    7647/2120    34 1864   56.98)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 215890289238016&1
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 0 := 107945144619008 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 268443648&1
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 0 := 134221824 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 268443648&1
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 0 := 134221824 << 1
(smt.stats   50   6771 140979 400892  5485/5187/484    7874/2141    35 1866   57.30)
(smt.stats   51   6948 144063 414995  5547/5257/491    8159/2142    35 1866   57.50)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 104 := 178&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 178&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 194&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 194&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 146&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 146&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 130&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 130&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 112 := 114&113
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 281474976710770 := 0 << 7
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 112 := 114&113
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 281474976710770 := 0 << 7
(smt.stats   52   7142 149461 434070  5741/5416/501    8522/2282    36 1870   57.78)
ramon: poll                 wall=6.000s usage=6.408s mem=59852KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.3456    670001      3284         11            1       68)
(smt.stats   53   7355 152069 441455  5806/5468/516    8708/2354    37 1900   57.78)
(smt.stats   54   7589 159074 463141  5901/5569/524    9330/2416    38 1926   57.97)
(smt.stats   55   7690 161586 480342  5983/5694/524    9507/2416    38 1926   57.97)
ramon: poll                 wall=7.000s usage=7.411s mem=60516KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.9827    790001      3872         12            1       80)
(smt.stats   56   7801 166074 511205  5986/5699/524    9898/2657    39 1969   57.97)
(smt.stats   57   7923 169765 541345  6018/5731/525   10404/2670    40 1971   58.07)
(smt.stats   58   8057 178250 579534  6020/5733/525   10896/2670    40 1971   58.50)
(smt.stats   59   8204 188096 628592  6025/5738/530   11036/3181    41 1990   58.50)
ramon: poll                 wall=8.000s usage=8.451s mem=61116KiB load=1.04 rootload=1.04
(smt.stats   60   8365 201487 692545  6026/5739/530   11217/3181    41 1990   58.50)
(sat.ddfw       1      1    16.002    920001      4509         13            1       93)
(smt.stats   61   8542 210360 738942  6033/5746/530   11476/3181    41 1990   58.98)
(smt.stats   62   8736 221091 790984  6041/5754/530   11802/3181    41 1990   58.98)
(smt.stats   63   8949 228004 827145  6069/5782/531   12417/3426    42 2002   59.09)
ramon: poll                 wall=9.000s usage=9.461s mem=61256KiB load=1.01 rootload=1.01
(smt.stats   64   9183 238259 891847  6091/5804/531   12737/3426    42 2002   59.09)
(sat.ddfw       1      1   14.9381   1060001      5196         14            1      108)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions      )
(smt.stats   65   9440 246716 936243  6118/5818/531   13257/3428    42 2002   59.18)
(smt.stats   66   9541 248706 943008  6136/5847/531   13467/3428    42 2002   59.18)
(smt.stats   67   9652 252699 957582  6158/5849/531   13596/3431    42 2002   59.28)
ramon: poll                 wall=10.000s usage=10.462s mem=61496KiB load=1.00 rootload=1.00
(smt.stats   68   9774 256478 967690  6231/5878/531   13759/3441    42 2002   59.28)
(smt.stats   69   9908 258763 980468  6279/5990/531   13994/3441    42 2002   59.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
(sat.ddfw       1      1   14.0213   1210001      5931         15            1      123)
(smt.stats   70  10055 265163 1006846  6304/6002/537   14443/3990    43 2006   59.38)
ramon: poll                 wall=11.000s usage=11.459s mem=62024KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   71  10216 269822 1030175  6334/6036/537   14951/3990    43 2006   59.47)
(smt.stats   72  10393 276815 1073439  6369/6056/537   15358/4304    44 2031   59.47)
(smt.stats   73  10587 285140 1120515  6375/6087/538   15757/4527    45 2040   59.47)
ramon: poll                 wall=12.000s usage=12.459s mem=62156KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.2089   1370001      6715         16            1      139)
(smt.stats   74  10800 304367 1230545  6375/6087/538   15975/4527    45 2040   59.47)
(smt.stats   75  11034 316637 1300560  6389/6102/549   15304/4641    46 3332   60.15)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 0&14
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 0 := 16385 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 0&14
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 0 := 107945144620579 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 0&14
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 0 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 0&14
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 0 << 4
(smt.stats   76  11291 324566 1353985  6468/6157/555   15690/5130    47 3333   60.25)
ramon: poll                 wall=13.000s usage=13.459s mem=62376KiB load=1.00 rootload=1.00
(smt.stats   77  11573 327666 1370959  6626/6257/563   15974/5144    47 3333   60.25)
(smt.stats   78  11674 329311 1381034  6686/6365/563   16074/5147    47 3333   60.35)
(smt.stats   79  11785 332566 1394362  6727/6401/563   16160/5178    48 3347   60.35)
(sat.ddfw       1      1   12.4826   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=14.458s mem=62504KiB load=1.00 rootload=1.00
(smt.stats   80  11907 337966 1410905  6817/6455/565   16297/5182    48 3347   60.44)
(smt.stats   81  12041 342665 1437525  6825/6524/568   16752/5188    49 3351   60.54)
(smt.stats   82  12188 351314 1491597  6826/6525/568   16939/5188    49 3351   60.54)
ramon: poll                 wall=15.000s usage=15.457s mem=62680KiB load=1.00 rootload=0.99
(smt.stats   83  12349 356281 1522488  6831/6530/569   17050/5260    50 3402   60.54)
(sat.ddfw       1      1    11.825   1720001      8431         18            1      174)
(smt.stats   84  12526 361163 1559865  6836/6534/570   17309/5300    51 3412   60.54)
(smt.stats   85  12720 363545 1574454  6853/6549/571   17531/5304    51 3412   60.63)
(smt.stats   86  12933 371063 1622626  6892/6572/572   17964/5304    51 3412   60.63)
ramon: poll                 wall=16.000s usage=16.457s mem=62788KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.2366   1910001      9362         19            1      193)
ramon: poll                 wall=17.003s usage=17.461s mem=63160KiB load=1.00 rootload=1.01
(smt.stats   87  13167 376161 1643361  7301/6593/572   18410/5423    52 3413   60.92)
(smt.stats   88  13424 381729 1687865  8109/7807/574   19507/5581    53 3418   61.20)
ramon: poll                 wall=18.000s usage=18.460s mem=63660KiB load=1.00 rootload=1.00
(smt.stats   89  13706 390727 1735675  8124/7821/574   20547/5582    53 3418   62.05)
(sat.ddfw       1      1   10.7216   2110001     10343         20            1      214)
ramon: poll                 wall=19.000s usage=19.461s mem=64956KiB load=1.00 rootload=1.00
(smt.stats   90  14016 398697 1778972  8203/7831/575   21474/5840    54 3420   62.23)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   91  14117 401672 1788557  8445/7920/575   21650/5850    54 3420   62.33)
ramon: poll                 wall=20.000s usage=20.438s mem=65028KiB load=0.98 rootload=0.98
ramon: end                  Fri Nov  1 23:16:36 2024
ramon: root.execname        z3
ramon: root.utime           20.420s
ramon: root.stime           0.020s
ramon: group.total          20.453s
ramon: group.utime          20.425s
ramon: group.stime          0.028s
ramon: group.mempeak        65284KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              1.02
