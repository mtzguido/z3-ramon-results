ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:19:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28449 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/MVAXXOBrJhrZ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             767814
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    109.89     10000        49          0            1        2)
(smt.stats    0    101   2044    710  1032/870/100     103/18     6   16   51.76)
(sat.ddfw       1      1   56.1854     20001        98          1            1        3)
(smt.stats    1    202   2626   1639  1371/1207/103     216/29     8   19   51.86)
(smt.stats    2    313   3180   2607  1417/1286/117     351/48    11   27   51.86)
(sat.ddfw       1      1   56.8182     40001       196          2            1        5)
(smt.stats    3    414   3854   3738  1544/1330/118     456/59    12   31   51.95)
(smt.stats    4    525   4662   5177  1607/1459/127     557/85    14   34   52.06)
(smt.stats    5    647   5476   7212  1660/1484/127     680/98    15   37   52.06)
(sat.ddfw       1      1   49.0196     70001       343          3            1        8)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   6704   7923  1682/1520/127     786/99    15   37   52.15)
(smt.stats    7    859   7100   8505  1830/1631/127     905/100    15   37   52.25)
ramon: poll                 wall=1.003s usage=0.935s mem=54220KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   41.6667    110001       539          4            1       12)
(smt.stats    8    981   7729  10967  1977/1795/127    1038/100    15   37   52.25)
(smt.stats    9   1115   8670  14571  2032/1861/127    1197/100    15   37   52.25)
(smt.stats   10   1216   9321  16217  2060/1894/127    1312/102    15   37   52.25)
(smt.stats   11   1327   9912  18823  2101/1933/127    1441/102    15   37   52.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  11682  21830  2112/1970/130    1570/182    16   41   52.36)
(smt.stats   13   1583  13698  25061  2163/1981/135    1716/182    16   41   52.45)
(smt.stats   14   1730  17863  28648  2167/2021/135    1862/197    17   51   52.45)
(sat.ddfw       1      1   35.4101    160000       784          5            1       17)
(smt.stats   15   1831  19453  31136  2176/2025/135    1971/197    17   51   52.45)
(smt.stats   16   1942  20248  33798  2192/2041/135    2086/197    17   51   52.55)
(smt.stats   17   2064  21551  36293  2195/2049/138    2207/207    18   54   52.65)
(smt.stats   18   2198  23576  39490  2207/2061/138    2341/207    18   54   52.65)
(smt.stats   19   2345  25450  43250  2218/2066/139    2485/209    19   55   52.65)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179869181&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869181 := 17179869183 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179869181&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869181 := 17179869183 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179869181&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869181 := 17179869183 << 16
(smt.stats   20   2506  26846  46847  2245/2102/145    2653/211    20   57   52.65)
(smt.stats   21   2607  27448  50766  2263/2105/145    2763/212    20   57   52.75)
(smt.stats   22   2718  28067  54119  2276/2120/145    2881/212    20   57   52.75)
(smt.stats   23   2840  29173  57348  2280/2135/145    3016/212    20   57   52.75)
(smt.stats   24   2974  30555  60598  2290/2140/145    3153/212    20   57   52.75)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 3 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 2 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8192&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 1 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8192&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8193 := 1 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8193&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 51539615745 := 4194305 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179852801&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 281474976694273 := 17179869183 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179852800&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179860992 := 17179869183 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179852800&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179860992 := 17179869183 << 14
ramon: poll                 wall=2.000s usage=1.916s mem=55084KiB load=0.98 rootload=0.97
(sat.ddfw       1      1   31.1047    220001      1078          6            1       23)
(smt.stats   25   3121  31654  61957  2384/2168/163    3304/239    21   59   53.33)
(sat.ddfw       1      1   27.6571    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.912s mem=55748KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   24.8293    370001      1813          8            1       38)
(smt.stats   26   3282  32389  64140  2777/2360/169    3473/241    21   59   53.81)
ramon: poll                 wall=4.000s usage=3.914s mem=56036KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   22.5394    460001      2254          9            1       47)
(sat.ddfw       1      1   20.6186    560001      2745         10            1       57)
ramon: poll                 wall=5.004s usage=4.911s mem=56440KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   18.8712    670001      3284         11            1       68)
ramon: poll                 wall=6.000s usage=5.845s mem=57068KiB load=0.94 rootload=0.94
ramon: poll                 wall=7.003s usage=6.747s mem=57404KiB load=0.90 rootload=0.90
(sat.ddfw       1      1   17.1282    790001      3872         12            1       80)
(smt.stats   27   3459  32815  64442  3030/2873/169    3650/252    22   68   55.24)
(smt.stats   28   3560  33718  67062  3961/3808/178    3920/252    22   68   54.76)
ramon: poll                 wall=8.000s usage=7.741s mem=57776KiB load=1.00 rootload=0.99
(smt.stats   29   3671  34096  68448  4250/3812/178    4035/255    22   68   54.76)
(sat.ddfw       1      1   16.0138    920001      4509         13            1       93)
(smt.stats   30   3793  34700  69716  4533/4131/178    4161/255    22   68   54.87)
(smt.stats   31   3927  35749  76081  4977/4600/178    4407/420    23   84   54.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4074  38937  95992  5023/4861/180    4591/567    24   87   55.18)
(smt.stats   33   4235  41627 108961  5240/5076/181    4997/777    25   89   55.28)
ramon: poll                 wall=9.000s usage=8.741s mem=58184KiB load=1.00 rootload=1.00
(smt.stats   34   4412  42913 119124  5880/5244/181    5183/792    25   89   55.37)
(sat.ddfw       1      1   15.0424   1060001      5196         14            1      108)
(smt.stats   35   4606  45408 133565  6071/5896/181    5452/794    25   89   55.37)
(smt.stats   36   4707  45967 138700  6092/5943/181    5584/794    25   89   55.47)
(smt.stats   37   4818  46806 145255  6097/5948/181    5732/794    25   89   55.47)
(smt.stats   38   4940  47632 150186  6100/5951/181    5900/794    25   89   55.47)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   39   5074  50206 158172  6105/5954/181    6037/794    25   89   55.47)
(smt.stats   40   5221  52640 184460  6119/5959/181    6186/794    25   89   55.47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions    )
(smt.stats   41   5382  55316 213718  6133/5984/182    6364/1060    26   90   55.47)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 3423253755&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 3423253755 := 3423253755 << 2
ramon: poll                 band: wall=10.000s usage=9.741s mem=58352KiB load=1.00 rootload=1.00(
band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 3423253756&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 3423253756 := 3423253755 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 3873912632&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 3873912632 := 3425350907 << 2
(smt.stats   42   5559  57513 243558  6164/5998/182    6655/1063    26   90   55.47)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16712913900&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 4178228475 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16687748076&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 4171937019 << 2
(smt.stats   43   5753  60310 260682  6268/6115/193    6924/1179    27   91   55.57)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16685276721&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 16685276721 := 4171319180 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16687748074&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 16687748074 := 4171937018 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 16374464500 := 3488265466 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 16374464500 := 3488265466 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374730520&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 8187365260 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16634777368&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 8317388684 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16638971672&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17131092782 := 8319485836 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16640207348&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17132328458 := 8320103674 << 1
(smt.stats   44   5966  62041 279452  6322/6165/204    7129/1238    29  103   55.74)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 27
(smt.stats   45   6067  62952 289596  6436/6204/209    7204/1395    30  293   55.84)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 33
(smt.stats   46   6178  64444 303944  6615/6292/229    7314/1402    30  293   56.03)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 25
(smt.stats   47   6300  66453 312997  6656/6456/271    7448/1419    31  304   56.22)
(sat.ddfw       1      1   14.1857   1210001      5931         15            1      123)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 0 := 1048587 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 0 := 1048587 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 9007293744021504 := 1048587 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 9007293744021504 := 1048587 << 21
(smt.stats   48   6434  69169 323410  6807/6599/285    7604/1460    33  312   56.31)
ramon: poll                 wall=11.000s usage=10.741s mem=58720KiB load=1.00 rootload=1.00
(smt.stats   49   6581  73557 335815  6843/6633/285    7773/1460    33  312   56.31)
(smt.stats   50   6742  75873 351982  6911/6701/303    8044/1471    34  312   56.31)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17054023680 := 17116939262 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 4294967296&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17054015488 := 17116939261 << 32
ramon: poll                 wall=12.003s usage=11.744s mem=59020KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.4071   1370001      6715         16            1      139)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17054056448 := 17116939266 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17054056448 := 17116939266 << 32
(smt.stats   51   6919  79989 366108  7017/6706/303    8211/1599    35  335   56.60)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 11405493133&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1128096990093 := 17179641060 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 11405493133&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1128096990093 := 17179641060 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 11404312576&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 15278260232 := 17179637054 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 3292528640&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 10280517633 := 17179026978 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 11404312576&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 15278260225 := 17179637054 << 21
(smt.stats   52   7113  84185 381234  7117/6855/313    8444/1611    36  336   56.70)
ramon: poll                 wall=13.000s usage=12.737s mem=59192KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   12.7046   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=13.737s mem=59212KiB load=1.00 rootload=1.00
(smt.stats   53   7326  87287 387502  7338/7123/319    8676/1654    37  347   56.79)
(sat.ddfw       1      1   12.0781   1720001      8431         18            1      174)
ramon: poll                 wall=15.000s usage=14.934s mem=59276KiB load=1.20 rootload=1.20
ramon: poll                 wall=16.000s usage=15.994s mem=59424KiB load=1.06 rootload=1.06
(smt.stats   54   7560  88678 392983  7532/7126/319    8913/1655    37  347   56.98)
(sat.ddfw       1      1   11.4977   1910001      9362         19            1      193)
ramon: poll                 wall=17.000s usage=16.984s mem=59716KiB load=0.99 rootload=0.98
(smt.stats   55   7661  89079 394146  7717/7435/319    9024/1681    38  349   56.98)
ramon: poll                 wall=18.000s usage=18.019s mem=59472KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   10.9739   2110001     10343         20            1      214)
(smt.stats   56   7772  91566 408019  7923/7575/319    9177/1685    38  349   57.08)
ramon: poll                 wall=19.000s usage=19.150s mem=59552KiB load=1.13 rootload=1.13
(sat.ddfw       1      1   10.5528   2320001     11372         21            1      235)
ramon: poll                 wall=20.000s usage=20.151s mem=59836KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:19:22 2024
ramon: root.execname        z3
ramon: root.utime           20.180s
ramon: root.stime           0.020s
ramon: group.total          20.215s
ramon: group.utime          20.191s
ramon: group.stime          0.024s
ramon: group.mempeak        59852KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.01
