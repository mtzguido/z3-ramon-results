ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:03:40 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28356 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1359
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/kCNNwSlE9t9a.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             518161
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   208/208     0/0  63       0    18.53   0.00)
(sat.stats    102    666    0   208/208   102/39  63       0    18.72   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 629 :time 0.00)
(sat.stats    102    666    0   208/208   102/39  63       0    18.72   0.01)
(sat.stats    102    666    0   208/208   102/39  63       0    18.72   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 353618.82 :time 0.00)
(sat.stats    102    666    0   208/208    54/39  63       0    18.82   0.01)
(sat.stats    112    837    1   208/208    64/47  63       0    18.82   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    115    900    2   208/208    67/47  63       0    18.82   0.01)
(sat.stats    118   1027    3   208/208    70/50  63       0    18.82   0.01)
(sat.stats    135   1940    4   208/208    87/61  63       0    18.82   0.01)
(sat.stats    138   2115    5   208/208    90/61  63       0    18.82   0.01)
(sat.stats    141   2235    6   208/208    93/61  63       0    18.82   0.01)
(sat.stats    144   2369    7   208/208    96/61  63       0    18.82   0.01)
(sat.stats    147   2477    8   208/208    99/61  63       0    18.82   0.01)
(sat.stats    150   2604    9   208/208   102/61  63       0    18.82   0.01)
(sat.stats    153   2750   10   208/208   105/61  63       0    18.82   0.01)
(sat.stats    156   2867   11   208/208   108/61  63       0    18.82   0.01)
(sat.stats    159   2983   12   208/208   111/61  63       0    18.82   0.01)
(sat.stats    210   5422   29   208/208   162/99  63       0    18.95   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2034 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats      :decisions     :clauses/bin      :units        :memory       )
(sat.stats    400  10912   44   389/389   354/186  72       0    19.62   0.17)
ramon: poll                 wall=1.000s usage=0.999s mem=22200KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 7754 :time 0.00)
(sat.stats   1422  40029   45  6315/6315  1476/300  73       0    21.38   1.11)
(sat.stats   1425  40135   46  6315/6315  1479/300  73       0    21.38   1.11)
(sat.stats   1428  40219   47  6315/6315  1482/300  73       0    21.38   1.12)
(sat.stats   1989  50959   54  6606/6606  2066/525  73       0    21.47   1.31)
 (sat-cleaner :elim-literals 2 :elim-clauses 2 :cost 12802 :time 0.00)
lshr: (lshr[38] (bv2int %0) (+ 38 (* 274877906943 #58))) 0 := 0 >>l 16
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 0&274873712640
lshr: (lshr[64] (* 33554432 (bv2int %0)) (mod (+ 63 #531 #535) 64)) 274877875891 := 0 >>l 41
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 1 := 1&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 2 := 2&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 4 := 4&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 8 := 8&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 16 := 16&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 32 := 32&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 64 := 64&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 128 := 128&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 256 := 256&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 512 := 512&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 1024 := 1024&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 2048 := 2048&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 4096 := 4096&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 8192 := 8192&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 16384 := 16384&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 32768 := 32768&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 65536 := 65536&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 131072 := 131072&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 262144 := 262144&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 524288 := 524288&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 1048576 := 1048576&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 2097152 := 2097152&274873712640
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 24963 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 5950 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 28880 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 4 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 8 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 758112 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 1733056 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 1017216 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 3141120 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 256 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 2297856 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 3072 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 2048 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 1425408 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 8192 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 3244032 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 1966080 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 65536 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 1048576 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 262144 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 524288 := 274873712640&4194303
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #82 37) 37778931862819722756096 (if #448 18889465931409861378048 #520))) 0 := 4194303&274873712640
band: (band[38] (if (= #246 63) 2535301200447235430956551634944 (if #420 1267650600223617715478275817472 #417)) (lshr[64] (* 33554432 #63) (mod #538 64))) 2097152 := 274873712640&4194303
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 14265 :time 0.00)
(sat.stats   2478  60739   69  9073/9070  2646/646 354       0    23.49   1.60)
ramon: poll                 wall=2.000s usage=1.994s mem=25176KiB load=0.99 rootload=0.99
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   4284 109236  197 12662/12659  4378/1043 354       0    25.46   2.73)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 28500 :time 0.00)
ramon: poll                 wall=3.000s usage=2.993s mem=27276KiB load=1.00 rootload=1.00
(sat.stats   5608 142024  331 14578/14574  5185/1221 376       0    26.76   3.41)
ramon: poll                 wall=4.000s usage=3.992s mem=27860KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.991s mem=28880KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.990s mem=29560KiB load=1.00 rootload=1.00
(sat.stats   8319 178248  490 34277/34273  6756/1272 376       0    28.91   6.08)
ramon: poll                 wall=7.000s usage=6.989s mem=30768KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.988s mem=32616KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.988s mem=34576KiB load=1.00 rootload=1.00
(sat.stats  12347 230355  736 63491/63487  9077/1301 376       0    35.84   9.91)
ramon: poll                 wall=10.000s usage=9.987s mem=37008KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.001s usage=10.987s mem=41108KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.982s mem=41460KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.980s mem=43348KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 57815 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 58998 :time 0.00)
ramon: poll                 wall=14.000s usage=13.979s mem=46092KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 43 :elim-clauses 5 :cost 59860 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 60807 :time 0.00)
ramon: poll                 wall=15.000s usage=14.978s mem=46176KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.978s mem=46272KiB load=1.00 rootload=1.00
(sat.stats  18206 366993 1291 82087/82083 12579/1942 403       0    46.83  16.82)
ramon: poll                 wall=17.000s usage=16.977s mem=47028KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.976s mem=46848KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.976s mem=47444KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.975s mem=47552KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:04:00 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.986s
ramon: group.utime          19.962s
ramon: group.stime          0.024s
ramon: group.mempeak        47808KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
