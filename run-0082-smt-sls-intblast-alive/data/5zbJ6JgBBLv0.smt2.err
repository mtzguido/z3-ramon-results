ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:41:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29361 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5zbJ6JgBBLv0.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             635916
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   78.7402     10000        49          0            1        2)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 1 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 1 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 1 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1 := 1&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 1 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 3 := 3&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 3 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 3 := 3&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 3 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 15 := 32&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 14 := 32&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 4 := 32&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 4 := 32&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 8 := 32&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 33&15
(smt.stats    0    101   3873    492  1331/1204/118      92/20     7   25   52.06)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 33&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 34&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 34 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 32&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 32&15
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 1 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 32&15
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 1 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&15
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 1 := 9007199254740992 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&15
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 1 := 9007199254740992 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 1 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 2 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 4 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 8 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 8 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 32&15
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 1 := 2 << 4
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 2 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 76861433640456464&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 2 := 76861433640456464&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 2 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 2 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057056&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 2 := 9607679205057056&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057056&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 2 := 9607679205057056&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057056&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 2 := 9607679205057056&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 1 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 16&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 1 := 16&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057056&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 1 := 9607679205057056&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057056&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 1 := 9607679205057056&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057056&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 8 := 9607679205057056&15
(sat.ddfw       1      1   39.8446     20001        98          1            1        3)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057040&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 8 := 9607679205057040&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057040&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 4 := 9607679205057040&15
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057040&15
band: (band[57] (shl[57] (bv2int %0) (mod #103 57)) (if (= #627 56) 1 (if #629 3 #789))) 4 := 9607679205057040&15
(smt.stats    1    202   8180   2087  1820/1629/163     187/24    10   37   52.35)
(smt.stats    2    313  10999   5681  1865/1683/180     297/29    12   47   52.44)
(smt.stats    3    414  13000   9680  1967/1774/185     423/40    15   52   52.54)
(sat.ddfw       1      1   45.3515     40001       196          2            1        5)
(smt.stats    4    525  13698  10965  2336/2083/195     541/105    17   66   52.73)
(smt.stats    5    647  16397  13891  2870/2589/196     668/146    19   67   52.92)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057057&1
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057057&1
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9007199254741168&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 9007199254741168 := 9007199254741170 << 1
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9007199254741056&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 9007199254741056 := 9007199254741058 << 1
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9007199254741104&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 9007199254741104 := 9007199254741106 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  18483  16682  2920/2594/200     801/154    20   68   53.22)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 9607679205057040&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 9607679205057040 := 9607679205057042 << 1
(sat.ddfw       1      1   41.2088     70001       343          3            1        8)
ramon: poll                 wall=1.027s usage=0.873s mem=55672KiB load=0.85 rootload=0.84
(smt.stats    7    859  19784  17899  3080/2677/211     938/168    21   70   53.51)
(smt.stats    8    981  21556  20135  3155/2818/211    1121/187    22   72   53.51)
(sat.ddfw       1      1   35.3982    110001       539          4            1       12)
(smt.stats    9   1115  27110  26620  3167/2880/211    1281/187    22   72   53.51)
(smt.stats   10   1216  29889  30308  3212/2928/212    1378/226    23   80   53.64)
(smt.stats   11   1327  32865  36227  3246/2937/212    1508/226    23   80   53.74)
(smt.stats   12   1449  36540  40833  3255/2975/215    1700/245    24   85   53.74)
(smt.stats   13   1583  39191  45684  3265/2982/217    1847/297    25   95   53.84)
(sat.ddfw       1      1   33.2219    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   14   1730  44093  58252  3292/3006/222    2014/326    27  106   53.94)
(smt.stats   15   1831  45457  63503  3332/3021/222    2122/328    27  106   53.94)
(smt.stats   16   1942  49141  72106  3358/3068/222    2283/328    27  106   54.04)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 4 := 6&7
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 4 := 6&7
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 6&7
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 6&7
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 6&7
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 6&7
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 6&7
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 6&7
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 6 := 6&7
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 6 := 9007199254740992 << 3
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 2&7
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 2 := 9007199254740992 << 3
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 2&7
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 2 := 9007199254740992 << 3
(smt.stats   17   2064  51177  79307  3407/3112/255    2417/336    28  140   54.13)
ramon: poll                 wall=2.000s usage=1.882s mem=56220KiB load=1.04 rootload=1.04
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&7
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 9607679205057058 := 108086391056891904 << 3
(sat.ddfw       1      1   29.0843    220001      1078          6            1       23)
(smt.stats   18   2198  54453  87395  3447/3118/255    2578/338    28  140   54.23)
(smt.stats   19   2345  55850  92078  3475/3172/260    2727/349    29  146   54.23)
(smt.stats   20   2506  60185 104289  3509/3206/263    2999/359    31  148   54.34)
(smt.stats   21   2607  62205 111547  3567/3252/265    3110/388    32  156   54.49)
(smt.stats   22   2718  65801 120818  3581/3267/266    3239/388    32  156   54.49)
(sat.ddfw       1      1   25.6975    290001      1421          7            1       30)
(smt.stats   23   2840  70643 133615  3589/3288/266    3381/391    33  160   54.49)
(smt.stats   24   2974  73679 142355  3603/3298/266    3578/391    33  160   54.72)
ramon: poll                 wall=3.000s usage=2.840s mem=56776KiB load=0.96 rootload=0.96
(smt.stats   25   3121  77081 156520  3606/3305/266    3753/391    33  160   54.72)
(smt.stats   26   3282  78986 164605  3636/3326/267    3964/419    34  173   54.72)
(smt.stats   27   3459  81459 175341  3648/3332/267    4168/420    34  173   54.72)
(smt.stats   28   3560  82964 179194  3655/3344/268    4281/423    35  185   54.72)
(smt.stats   29   3671  85861 193811  3657/3351/268    4405/423    35  185   54.72)
(sat.ddfw       1      1   23.0083    370001      1813          8            1       38)
(smt.stats   30   3793  88498 201172  3665/3355/268    4550/423    35  185   54.81)
(smt.stats   31   3927  91342 213986  3681/3372/269    4734/438    36  191   54.81)
(smt.stats   32   4074  96290 221990  3697/3384/269    4918/438    36  191   55.11)
(smt.stats   33   4235 101753 235299  3701/3386/269    5115/438    36  191   55.11)
ramon: poll                 wall=4.000s usage=3.842s mem=57184KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   34   4412 106460 248578  3709/3396/269    5329/438    36  191   55.11)
(smt.stats   35   4606 111566 265745  3709/3396/269    5571/438    36  191   55.20)
(smt.stats   36   4707 113796 276390  3709/3396/269    5680/438    36  191   55.20)
(sat.ddfw       1      1   20.8092    460001      2254          9            1       47)
(smt.stats   37   4818 116592 290517  3709/3396/269    5797/438    36  191   55.20)
(smt.stats   38   4940 118260 299178  3716/3403/274    5959/460    37  209   55.20)
(smt.delete-inactive-clauses  :num-deleted-clauses 237)
(smt.stats   39   5074 119090 306130  3716/3403/274    5859/460    37  209   55.44)
(smt.stats   40   5221 120885 318148  3721/3406/274    6022/460    37  209   55.44)
ramon: poll                 wall=5.000s usage=4.880s mem=57636KiB load=1.04 rootload=1.04
(smt.stats   41   5382 123950 328400  3770/3429/274    6331/455    38  225   55.54)
(smt.stats   42   5559 126984 340600  3795/3464/274    6542/455    38  225   55.54)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 9&3
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2 := 9&3
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 3 := 9&3
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1 := 9&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 9 := 2 << 2
(sat.ddfw       1      1   19.1718    560001      2745         10            1       57)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1 := 9&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 1297036692682702857 := 2 << 2
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1 := 9&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 1152921504606846985 := 2 << 2
(smt.stats   43   5753 132645 361662  3858/3515/280    6813/484    39  243   55.63)
(smt.stats   44   5966 136142 377324  3921/3596/281    7120/484    39  243   55.73)
(smt.stats   45   6067 137644 382827  3928/3606/282    7312/492    40  245   55.73)
(smt.stats   46   6178 140276 390373  3955/3610/282    7434/494    40  245   56.02)
ramon: poll                 wall=6.000s usage=5.870s mem=58260KiB load=0.99 rootload=0.99
(smt.stats   47   6300 144352 399374  3999/3675/283    7563/512    41  271   56.02)
(smt.stats   48   6434 146124 408300  4043/3689/283    7703/514    41  271   56.02)
(sat.ddfw       1      1   17.5495    670001      3284         11            1       68)
(smt.stats   49   6581 150524 418069  4048/3725/284    7887/514    41  271   56.12)
(smt.stats   50   6742 155566 436689  4049/3726/284    8100/524    42  273   56.12)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&8589934591
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 0 := 0 << 33
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&8589934591
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 8589932753 := 0 << 33
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&8589934591
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 0 := 0 << 33
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&8589934591
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 8589932609 := 0 << 33
(smt.stats   51   6919 157659 445846  4173/3729/284    8437/526    42  273   56.21)
ramon: poll                 wall=7.000s usage=6.870s mem=58560KiB load=1.00 rootload=1.00
(smt.stats   52   7113 162691 464935  4195/3869/290    8726/541    43  274   56.21)
(smt.stats   53   7326 168045 498372  4198/3872/290    9020/541    43  274   56.33)
(sat.ddfw       1      1   16.2031    790001      3872         12            1       80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   54   7560 173789 522100  4247/3909/290    9354/549    44  275   56.52)
(smt.stats   55   7661 175509 530976  4249/3911/293    9517/567    45  283   56.52)
(smt.stats   56   7772 176806 550523  4252/3914/293    9632/567    45  283   56.52)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 0 := 2 << 8
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 0 := 3 << 8
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 0 := 0&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 0 := 3 << 8
(smt.stats   57   7894 178562 560599  4305/3923/293    9813/568    45  283   56.61)
(smt.stats   58   8028 180022 566298  4330/3976/299   10040/581    46  284   56.61)
ramon: poll                 wall=8.000s usage=7.870s mem=59016KiB load=1.00 rootload=1.00
(smt.stats   59   8175 181955 578874  4339/3988/299   10243/581    46  284   56.61)
(smt.stats   60   8336 185387 602399  4342/3997/299   10548/581    46  284   56.71)
(smt.stats   61   8513 188061 614534  4366/4009/299   10775/622    47  287   56.71)
(sat.ddfw       1      1   15.0185    920001      4509         13            1       93)
(smt.stats   62   8707 192150 634018  4435/4041/301   11128/623    47  287   56.92)
(smt.stats   63   8920 195804 653362  4473/4109/301   11409/664    48  288   56.92)
ramon: poll                 wall=9.000s usage=8.870s mem=59164KiB load=1.00 rootload=0.99
(smt.stats   64   9154 199233 666530  4497/4126/302   11721/667    48  288   57.02)
(smt.stats   65   9411 203984 684522  4544/4162/302   12052/688    49  288   57.42)
(smt.stats   66   9512 205222 692091  4560/4209/304   12262/688    49  288   57.51)
ramon: poll                 wall=10.000s usage=9.870s mem=60236KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.9958   1060001      5196         14            1      108)
(smt.stats   67   9623 207501 703464  4619/4215/304   12453/688    49  288   57.92)
(smt.stats   68   9745 209342 711297  4716/4272/304   12639/713    50  300   58.01)
(smt.stats   69   9879 211062 722804  4789/4376/304   12853/713    50  300   58.11)
ramon: poll                 wall=11.000s usage=10.869s mem=60268KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 213162 737969  4815/4440/304   13052/716    50  300   58.11)
(smt.stats   71  10187 217055 760070  4818/4466/304   13270/716    50  300   58.11)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 12 := 131328&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 8 := 131328&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 8 := 131328&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 16 := 131328&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 16 := 131328&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 32 := 131328&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 32 := 131328&131071
(sat.ddfw       1      1   13.1027   1210001      5931         15            1      123)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 64 := 131328&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 128 := 131328&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 256 := 131328&131071
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 2305843009213825280 := 9007199254741505 << 17
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 320 := 131584&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 384 := 131584&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 320 := 131584&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 384 := 131584&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1792 := 131584&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1792 := 131584&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1792 := 131584&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 1792 := 131840&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 131584&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 133120&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 133632&131071
shl: (shl[64] (bv2int %0) (mod (+ #103 #398) 64)) 2305843009213827584 := 9007199254741514 << 17
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 135168&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 135680&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 137216&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 137728&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 137216&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 134656&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 137216&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 137728&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 141824&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 141824&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 150016&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 154368&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 150272&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 150016&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 166400&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 166400&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 269056&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 268800&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 330240&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 199168&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 199168&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2560 := 133888&131071
(smt.stats   72  10364 219309 771682  5154/4645/362   13689/782    51  302   58.82)
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2688 := 133632&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2688 := 133632&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2688 := 133632&131071
band: (band[57] (shl[64] (bv2int %0) (mod #399 64)) (if (= #808 63) 0 (if #810 1 #939))) 2624 := 133632&131071
(smt.stats   73  10558 221326 776923  5368/4785/452   14271/785    51  302   59.01)
ramon: poll                 wall=12.000s usage=11.870s mem=61012KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   74  10771 222835 785359  5867/5096/462   14796/786    51  302   59.20)
(smt.stats   75  11005 225814 806926  6194/5514/462   15791/788    51  302   59.40)
ramon: poll                 wall=13.000s usage=12.871s mem=62008KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    12.339   1370001      6715         16            1      139)
(smt.stats   76  11262 230220 836786  6214/5823/462   16297/998    52  333   59.78)
(smt.stats   77  11544 236458 880520  6759/6223/462   17115/999    52  333   59.78)
ramon: poll                 wall=14.000s usage=13.868s mem=62272KiB load=1.00 rootload=1.00
(smt.stats   78  11645 240692 902163  6824/6443/464   17680/1510    53  336   59.78)
(smt.stats   79  11756 243643 920536  6876/6517/466   18271/1513    53  336   59.93)
(smt.stats   80  11878 247383 941128  6938/6571/469   18906/1660    54  355   60.02)
(sat.ddfw       1      1   11.6486   1540001      7549         17            1      156)
(smt.stats   81  12012 250023 961158  6951/6597/473   19894/1660    54  355   60.12)
ramon: poll                 wall=15.003s usage=14.946s mem=62460KiB load=1.08 rootload=1.08
(smt.stats   82  12159 255223 987198  7099/6599/473   20804/1663    54  355   60.31)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12320 258389 1001585  7185/6767/473   21099/2202    55  375   60.31)
ramon: poll                 wall=16.000s usage=16.038s mem=62728KiB load=1.10 rootload=1.09
(smt.stats   84  12497 263003 1028633  7269/6904/474   21847/2204    55  375   60.50)
(smt.stats   85  12691 271662 1060848  7291/6923/474   22128/2208    55  375   60.50)
(sat.ddfw       1      1   11.0409   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=17.089s mem=62864KiB load=1.05 rootload=1.05
(smt.stats   86  12904 278350 1103857  7498/6972/474   23409/2357    56  383   60.60)
(smt.stats   87  13138 286689 1160195  7597/7207/476   24144/2358    56  383   60.69)
ramon: poll                 wall=18.000s usage=18.088s mem=63100KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5526   1910001      9362         19            1      193)
(smt.stats   88  13395 294228 1188560  7725/7259/476   24837/2741    57  387   60.79)
ramon: poll                 wall=19.007s usage=19.097s mem=63304KiB load=1.00 rootload=1.00
(smt.stats   89  13677 306306 1261776  7765/7408/476   25654/2741    57  387   60.79)
(smt.stats   90  13987 313848 1312474  7937/7564/478   27337/3165    58  391   61.74)
(smt.stats   91  14088 317196 1331997  7948/7589/478   27541/3165    58  391   61.74)
(sat.ddfw       1      1   10.0427   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.086s mem=63744KiB load=1.00 rootload=1.00
(smt.stats   92  14199 320010 1341556  8017/7625/479   27668/3497    59  396   61.74)
ramon: end                  Fri Nov  1 21:41:35 2024
ramon: root.execname        z3
ramon: root.utime           20.120s
ramon: root.stime           0.030s
ramon: group.total          20.160s
ramon: group.utime          20.128s
ramon: group.stime          0.032s
ramon: group.mempeak        64260KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.00
