ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:14:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28258 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1360
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rdqnPlWWLyZE.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             550961
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   234/234     0/0  58       0    18.53   0.00)
(sat.stats    256   6785    0   234/234   256/126  58       0    18.93   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1377 :time 0.00)
(sat.stats    256   6785    0   234/234   256/126  58       0    18.93   0.03)
(sat.stats    256   6785    0   234/234   256/126  58       0    18.93   0.03)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 6 :time 0.00)
 (sat-probing :cost 741818.93 :time 0.00)
(sat.stats    256   6785    0   240/240   253/127  58       0    18.93   0.03)
(sat.stats    335   7277    1   240/240   332/184  58       0    19.02   0.03)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    338   7285    2   240/240   335/184  58       0    19.02   0.03)
(sat.stats    341   7411    3   240/240   338/185  58       0    19.02   0.03)
(sat.stats    344   7690    4   240/240   341/186  58       0    19.02   0.03)
(sat.stats    347   7805    5   240/240   344/186  58       0    19.02   0.03)
(sat.stats    350   8029    6   240/240   347/186  58       0    19.02   0.03)
(sat.stats    353   8132    7   240/240   350/187  58       0    19.02   0.03)
(sat.stats    356   8260    8   240/240   353/187  58       0    19.02   0.03)
(sat.stats    359   8418    9   240/240   356/187  58       0    19.02   0.04)
(sat.stats    363   8623   10   240/240   360/189  58       0    19.02   0.04)
(sat.stats    366   8765   11   240/240   363/190  58       0    19.02   0.04)
(sat.stats    369   8899   12   240/240   366/191  58       0    19.02   0.04)
(sat.stats    372   9037   13   240/240   369/193  58       0    19.02   0.04)
(sat.stats    375   9189   14   240/240   372/196  58       0    19.02   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3858 :time 0.00)
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 29 := 29 >>l 29
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 124 := 403694&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 115 := 607745&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 168 := 175&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 160 := 176&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 80 := 176&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 64 := 176&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 128 := 176&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 2 := 176&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 176&862104227676160
lshr: (lshr[64] (bv2int %0) (mod (+ #65 #710) 64)) 176 := 94489280519 >>l 29
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 176&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 57 := 862104227676160&176
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 176&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 40 := 862104227676160&176
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 176&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 66 := 862104227676160&176
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 176&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 16 := 862104227676160&176
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 176&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 32 := 862104227676160&176
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 176&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 64 := 862104227676160&176
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 176&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 128 := 862104227676160&176
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 176&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 4 := 862104227676160&176
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5447 :time 0.00)
(sat.stats    611  19044   23   859/855   608/271 175       0    20.61   0.20)
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 64 := 125&862104227676160
 (sat-cleaner :elim-literals 21 :elim-clauses 2 :cost 6302 :time 0.00)
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 2 := 126&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 256 := 258&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 512 := 742&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 1024 := 1091&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 2048 := 2119&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 1875968 := 3237959&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 4096 := 1906247&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 507904 := 874823&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 2654208 := 2931143&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 655360 := 3786311&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 65536 := 3675335&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 65536 := 3753671&862104227676160
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    836  23253   37  4991/4987   936/415 180       0    22.53   0.34)
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 524288 := 3740615&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 1048576 := 3740615&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 2097152 := 3740615&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 262144 := 4133111&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 131072 := 4152695&862104227676160
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 4146167&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 1085184 := 862104227676160&4146167
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 4131071&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 3217408 := 862104227676160&4131071
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 4131071&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 512 := 862104227676160&4131071
band: (band[51] (lshr[51] (bv2int %0) (mod #65 51)) (if (= #466 50) 806738795975846394698993238016 (if #468 403369397987923197349496619008 #566))) 0 := 4131071&862104227676160
band: (band[51] (if (= #581 63) 13217608433268267330748305211654144 (if #583 6608804216634133665374152605827072 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 1024 := 862104227676160&4131071
(sat.stats   1200  26915   67 11535/11531  1457/572 180       0    25.14   0.61)
ramon: poll                 wall=1.000s usage=0.910s mem=28380KiB load=0.91 rootload=0.90
(sat.stats   1629  35933   82 18935/18931  1891/683 180       0    28.44   1.18)
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 13942 :time 0.00)
ramon: poll                 wall=2.000s usage=1.908s mem=35348KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.907s mem=36476KiB load=1.00 rootload=1.00
(sat.stats   2611  54865  135 73147/73143  3674/1545 302       0    35.74   3.47)
ramon: poll                 wall=4.000s usage=3.905s mem=37892KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.904s mem=39260KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.902s mem=40496KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.899s mem=41812KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.894s mem=45068KiB load=0.99 rootload=0.99
ramon: poll                 wall=9.005s usage=8.901s mem=45584KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.892s mem=45936KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.889s mem=47236KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.888s mem=50276KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.887s mem=50532KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.885s mem=54596KiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.884s mem=55356KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 3 :cost 25999 :time 0.00)
ramon: poll                 wall=16.000s usage=15.881s mem=56472KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 17 :elim-clauses 0 :cost 26535 :time 0.00)
ramon: poll                 wall=17.000s usage=16.880s mem=56492KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.879s mem=56752KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.878s mem=56752KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1101 :elim-clauses 2 :cost 28885 :time 0.00)
ramon: poll                 wall=20.000s usage=19.876s mem=56620KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:15:06 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.030s
ramon: group.total          19.972s
ramon: group.utime          19.932s
ramon: group.stime          0.040s
ramon: group.mempeak        56876KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.093s
ramon: loadavg              0.99
