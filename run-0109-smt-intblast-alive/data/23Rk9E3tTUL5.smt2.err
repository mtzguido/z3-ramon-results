ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:21:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42957 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/23Rk9E3tTUL5.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2764895
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3975    330  1070/931/102     101/16     5   17   19.14)
(smt.stats    1    202   5370   1008  1418/1289/108     204/58     6   32   19.33)
(smt.stats    2    313   8898   3671  1894/1700/112     342/70     7   35   19.43)
(smt.stats    3    414  11497   7553  1983/1813/114     449/92     9   41   19.52)
(smt.stats    4    525  13402  10040  2106/1865/121     568/96    10   47   19.52)
(smt.stats    5    647  15866  12302  2278/2049/121     687/103    11   47   19.62)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17714  14238  2333/2131/123     798/107    12   50   19.62)
(smt.stats    7    859  19675  19170  2428/2161/123     937/111    12   50   19.72)
(smt.stats    8    981  21786  22255  2459/2244/125    1092/139    13   53   19.81)
(smt.stats    9   1115  24037  25268  2521/2267/126    1331/162    14   54   19.81)
(smt.stats   10   1216  25903  27889  2531/2324/126    1451/208    15   57   19.91)
(smt.stats   11   1327  27111  31692  2552/2330/128    1570/216    17   64   19.91)
ramon: poll                 wall=1.000s usage=0.947s mem=21020KiB load=0.95 rootload=0.94
(smt.stats   12   1449  27826  36362  2637/2363/128    1715/217    17   64   20.01)
(smt.stats   13   1583  29154  40081  2714/2441/132    1874/226    18   64   20.01)
(smt.stats   14   1730  30439  47819  2790/2520/132    2043/249    19   73   20.01)
(smt.stats   15   1831  31900  53235  2816/2612/133    2157/264    20   73   20.01)
(smt.stats   16   1942  33610  57562  2827/2615/134    2266/267    21   74   20.10)
(smt.stats   17   2064  34923  59883  2900/2628/134    2398/272    21   74   20.10)
(smt.stats   18   2198  35867  65202  2916/2706/134    2533/272    21   74   20.10)
(smt.stats   19   2345  38659  75652  2924/2720/134    2672/272    21   74   20.25)
(smt.stats   20   2506  40856  79136  2930/2725/134    2845/272    21   74   20.25)
(smt.stats   21   2607  41900  82730  2935/2726/135    2951/271    22   79   20.25)
(smt.stats   22   2718  42798  86837  2979/2733/135    3068/275    22   79   20.25)
(smt.stats   23   2840  43602  90550  3041/2780/135    3188/275    22   79   20.25)
(smt.stats   24   2974  44590  97891  3098/2861/135    3326/276    22   79   20.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   25   3121  45184 100317  3104/2899/135    3492/276    22   79   20.35)
(smt.stats   26   3282  45744 106955  3110/2899/135    3674/277    22   79   20.35)
ramon: poll                 wall=2.000s usage=1.945s mem=21476KiB load=1.00 rootload=1.00
(smt.stats   27   3459  46777 112043  3260/2907/135    3882/278    22   79   20.35)
(smt.stats   28   3560  47583 114098  3319/3083/135    3995/279    22   79   20.55)
(smt.stats   29   3671  48357 118542  3431/3180/135    4115/281    22   79   20.55)
(smt.stats   30   3793  49308 121859  3551/3260/135    4234/286    22   79   20.55)
(smt.stats   31   3927  50122 128518  3588/3372/135    4404/287    22   79   20.55)
(smt.stats   32   4074  50588 131982  3598/3393/135    4549/287    22   79   20.65)
(smt.stats   33   4235  51140 137637  3610/3397/135    4712/287    22   79   20.65)
(smt.stats   34   4412  52231 144102  3638/3414/135    4942/287    22   79   20.65)
(smt.stats   35   4606  53475 150190  3651/3436/135    5160/287    22   79   20.74)
(smt.stats   36   4707  53704 151799  3654/3449/135    5262/287    22   79   20.74)
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 1 := 8589934453&1
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 17179869045 := 1189 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 1289&1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 1289&1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 1288&1
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 8589935880 := 1189 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 2378&1
shl: (shl[33] (bv2int %0) (mod (bv2int %0) 33)) 926 := 1189 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 2378&1
shl: (shl[33] (bv2int %0) (mod (bv2int %0) 33)) 926 := 1189 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 2378&1
band: (band[33] (shl[33] (bv2int %0) (mod #113 33)) (if (= #566 32) 1 (if #568 3 #656))) 1 := 2378&1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 2378&1
band: (band[33] (shl[33] (bv2int %0) (mod #113 33)) (if (= #566 32) 1 (if #568 3 #656))) 1 := 2378&1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 1 := 2378&1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 1 := 2378&1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 1 := 2378&1
(smt.stats   37   4818  54035 155202  3688/3449/135    5378/288    22   79   20.84)
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2046 := 8589934453&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2046 := 8589934454&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2032 := 8589934454&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2032 := 8589934453&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2032 := 8589934454&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2046 := 8589934453&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2046 := 8589934454&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2038 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2036 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2032 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 4 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 16 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 32 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 64 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 128 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 8 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 16 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 32 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 64 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 128 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 16 := 8589934505&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 16 := 8589934504&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 16 := 8589934454&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 16 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 16 := 8589934453&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 128 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 256 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 128 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 256 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 16 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 128 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 256 := 8589934464&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 128 := 8589934453&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 512 := 8589934454&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 128 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 264 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 264 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 16 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 24 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 24 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 48 := 8589934460&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 48 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 56 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 56 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 112 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 248 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 376 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 240 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 376 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 376 := 8589934460&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 376 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 376 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 376 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 632 := 8589934456&2047
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 1912 := 8589934456&2047
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 17179869048 := 1199 << 11
(smt.stats   38   4940  55759 163319  3851/3615/308    5545/404    23   85   21.33)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=3.000s usage=2.924s mem=22576KiB load=0.98 rootload=0.97
(smt.stats   39   5074  57873 171833  3839/3629/310    5691/426    24  124   21.43)
(smt.stats   40   5221  60573 177491  3855/3630/310    5837/426    24  124   21.43)
(smt.stats   41   5382  63213 183967  4066/3648/310    6041/440    25  128   21.53)
(smt.stats   42   5559  69040 192815  4100/3864/310    6342/444    25  128   21.62)
ramon: poll                 wall=4.000s usage=3.924s mem=22996KiB load=1.00 rootload=1.00
(smt.stats   43   5753  74285 202722  4324/4091/311    6734/551    26  134   21.72)
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2 := 2684356608&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 2684356608&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 2684356608&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 2684358656&2147483647
(smt.stats   44   5966  78609 211182  4459/4224/312    7048/558    26  134   21.91)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   45   6068  79663 217670  4517/4307/327    7211/614    27  154   21.91)
(smt.stats   46   6179  82483 226076  4601/4313/327    7386/618    27  154   22.01)
(smt.stats   47   6301  84669 232237  4810/4410/327    7566/623    27  154   22.10)
ramon: poll                 wall=5.000s usage=4.900s mem=23360KiB load=0.98 rootload=0.98
(smt.stats   48   6435  85738 238351  5110/4816/329    7804/695    28  162   22.20)
(smt.stats   49   6582  88218 249574  5275/5019/331    8168/699    28  162   22.20)
(smt.stats   50   6743  92201 262466  5361/5092/331    8570/701    28  162   22.29)
ramon: poll                 wall=6.000s usage=5.888s mem=23576KiB load=0.99 rootload=0.99
(smt.stats   51   6920  95731 273410  5528/5172/331    8841/838    29  166   22.29)
(smt.stats   52   7114  99107 282903  5788/5407/331    9125/840    29  166   22.78)
(smt.stats   53   7327 102674 303099  6140/5732/331    9316/848    29  166   22.78)
ramon: poll                 wall=7.000s usage=6.888s mem=24108KiB load=1.00 rootload=1.00
(smt.stats   54   7561 107016 325289  6326/6037/332    9752/968    30  174   22.87)
(smt.stats   55   7662 109703 332093  6466/6156/332   10031/974    30  174   22.87)
(smt.stats   56   7773 112240 339144  6632/6264/332   10200/980    30  174   22.97)
ramon: poll                 wall=8.000s usage=7.888s mem=24356KiB load=1.00 rootload=1.00
(smt.stats   57   7895 113601 341593  6867/6450/332   10401/986    30  174   23.06)
(smt.stats   58   8029 116195 350225  7151/6787/332   10587/996    30  174   23.33)
(smt.stats   59   8176 119344 363978  7433/7020/332   10832/997    30  174   23.33)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8337 123691 378050  7577/7272/332   11261/1004    30  174   23.42)
ramon: poll                 wall=9.000s usage=8.888s mem=24848KiB load=1.00 rootload=0.99
(smt.stats   61   8514 126444 395827  7729/7499/337   12104/1374    31  175   23.62)
(smt.stats   62   8708 129586 408443  7883/7553/338   12485/1375    31  175   23.81)
(smt.stats   63   8921 132803 416438  8548/7792/338   12862/1656    32  192   23.90)
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 6 := 11&7
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 6 := 10&7
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 6 := 10&7
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 6 := 10&7
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 6 := 14&7
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 8589934606 := 8053063923 << 3
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 6 := 14&7
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 8589934606 := 8053063923 << 3
ramon: poll                 wall=10.000s usage=9.887s mem=25432KiB load=1.00 rootload=1.00
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 14 := 38&15
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 14 := 30&15
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 8589934622 := 8053063924 << 4
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 14 := 30&15
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 8589934622 := 8053063924 << 4
(smt.stats   64   9155 137817 433437  8641/8360/349   13432/1668    32  192   24.09)
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 0 := 34&1
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 8589934626 := 8053063921 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 2 := 34&3
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 8589934626 := 8053063922 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 30 := 30&31
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 8589934622 := 8053063925 << 5
band: (band[33] (shl[64] (bv2int %0) (mod #669 64)) (if (= #689 63) 0 (if #691 1 #844))) 30 := 30&31
shl: (shl[64] (bv2int %0) (mod (+ #113 #668 #664) 64)) 8589934622 := 8053063925 << 5
(smt.stats   65   9412 141652 450597  9103/8441/359   14144/1805    33  233   24.28)
(smt.stats   66   9513 144155 458111  9227/8964/370   15041/1805    33  233   24.47)
(smt.stats   67   9624 147489 475709  9287/8990/370   15246/2084    34  241   24.57)
(smt.stats   68   9746 150591 490570  9398/9048/370   15587/2089    34  241   24.57)
ramon: poll                 wall=11.000s usage=10.887s mem=26016KiB load=1.00 rootload=1.00
(smt.stats   69   9880 154033 501871  9542/9158/370   16007/2093    34  241   24.67)
(smt.delete-inactive-clauses  :num-deleted-clauses 21)
(smt.stats   70  10027 155905 521113  9579/9321/371   17039/2336    35  242   24.76)
(smt.stats   71  10188 159910 552502  9705/9332/371   17693/2341    35  242   25.01)
ramon: poll                 wall=12.000s usage=11.887s mem=26524KiB load=1.00 rootload=1.00
(smt.stats   72  10365 164837 585893  9885/9473/371   18179/2345    35  242   25.10)
(smt.stats   73  10559 169009 602738 10005/9660/371   18438/2347    35  242   25.22)
ramon: poll                 wall=13.000s usage=12.887s mem=26724KiB load=1.00 rootload=1.00
(smt.stats   74  10772 173255 618273 10203/9795/371   18762/2355    35  242   25.32)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   75  11006 177038 638630 10470/10026/371   20063/2355    35  242   25.51)
ramon: poll                 wall=14.000s usage=13.886s mem=27032KiB load=1.00 rootload=1.00
(smt.stats   76  11263 180023 647847 10924/10262/371   20732/2355    35  242   25.80)
ramon: poll                 wall=15.000s usage=14.886s mem=27312KiB load=1.00 rootload=1.00
(smt.stats   77  11545 185137 676653 11311/10735/371   21240/2364    35  242   25.99)
(smt.stats   78  11646 187689 685542 11492/11107/371   21465/2364    35  242   26.18)
ramon: poll                 wall=16.000s usage=15.886s mem=27848KiB load=1.00 rootload=1.00
(smt.stats   79  11757 189900 698242 11685/11301/371   22061/2364    35  242   26.18)
(smt.stats   80  11879 194626 713976 11842/11431/371   22409/2368    35  242   26.28)
ramon: poll                 wall=17.000s usage=16.886s mem=27872KiB load=1.00 rootload=0.99
(smt.stats   81  12013 198111 734974 11956/11689/372   23429/3082    36  244   26.37)
(smt.stats   82  12160 204319 757769 12070/11713/372   24582/3082    36  244   26.56)
(smt.stats   83  12321 211298 772800 12240/11823/372   25494/3084    36  244   26.66)
ramon: poll                 wall=18.000s usage=17.886s mem=28268KiB load=1.00 rootload=1.00
(smt.stats   84  12498 216709 793607 12334/12025/372   26901/3085    36  244   26.85)
(smt.stats   85  12692 229301 849130 12349/12095/372   27305/3085    36  244   26.95)
(smt.stats   86  12905 244659 912158 12351/12097/373   27797/3553    37  258   27.06)
ramon: poll                 wall=19.000s usage=18.885s mem=28716KiB load=1.00 rootload=1.00
(smt.stats   87  13139 249817 958964 12411/12112/377   29448/3669    38  262   27.34)
(smt.stats   88  13396 256868 982154 12693/12178/377   30923/3672    38  262   27.63)
ramon: poll                 wall=20.000s usage=19.885s mem=29108KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:21:28 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.010s
ramon: group.total          19.943s
ramon: group.utime          19.927s
ramon: group.stime          0.016s
ramon: group.mempeak        29620KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.058s
ramon: loadavg              0.99
