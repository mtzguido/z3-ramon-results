ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:02:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41715 MiB
ramon: sys.mem.avail        61385 MiB
ramon: sys.nprocs           1322
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6N1MU5uW2GDa.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3687222
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts      :learned/bin    :gc          :time)
(sat.stats          :decisions  :clauses/bin  :units        :memory       )
(sat.stats      0      0    0    58/57     0/0  42       0    18.24   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 55 :time 0.00)
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685247 := 284319 << 45
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&1583296743997440
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 0 := 45 << 45
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 99 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 136 :time 0.00)
 (sat-cleaner :elim-literals 6 :elim-clauses 3 :cost 178 :time 0.00)
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1935140464885760 := 7027959 << 6
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 118 :time 0.00)
(sat.stats    178   2041    0   156/155   159/123  67       0    18.62   0.04)
(sat.stats    178   2041    0   160/159   159/123  67       0    18.62   0.04)
(sat.stats    178   2041    0   160/159   159/123  67       0    18.62   0.04)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :elim-bin 41 :time 0.00)
 (sat-probing :cost 185418.62 :time 0.00)
(sat.stats    178   2041    0    41/40   159/126  67       0    18.62   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 151 :time 0.00)
(sat.stats    182   2257    1    40/39   160/126  68       0    18.62   0.04)
(sat.stats :conflicts    :restarts    :learned/bin        :gc          :time)
(sat.stats       :decisions     :clauses/bin    :units        :memory       )
(sat.stats    185   2332    2    46/45   163/126  68       0    18.62   0.04)
(sat.stats    188   2359    3    62/61   166/126  68       0    18.62   0.05)
(sat.stats    191   2372    4    68/67   169/126  68       0    18.62   0.05)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 208 :time 0.00)
(sat.stats    195   2401    5    87/86   172/127  70       0    18.72   0.05)
(sat.stats    198   2551    6   122/121   176/127  70       0    18.72   0.05)
(sat.stats    201   2643    7   143/142   181/127  70       0    18.72   0.05)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    204   2698    8   145/144   184/127  70       0    18.72   0.05)
(sat.stats    207   2764    9   147/146   187/127  70       0    18.72   0.06)
(sat.stats    210   2842   10   147/146   190/127  70       0    18.72   0.06)
(sat.stats    213   2914   11   147/146   193/127  70       0    18.72   0.06)
(sat.stats    216   2992   12   147/146   196/127  70       0    18.72   0.06)
(sat.stats    219   3069   13   147/146   199/127  70       0    18.72   0.06)
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 479 :time 0.00)
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 1 << 1
 (sat-cleaner :elim-literals 12 :elim-clauses 67 :cost 525 :time 0.00)
(sat.stats    400   6902   30   364/362   300/222  83       0    18.72   0.08)
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 26 := 26 << 26
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 50 := 50 << 50
(sat.stats    487   9042   31   869/843   410/303  83       0    19.40   0.09)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 654 :time 0.00)
 (sat-cleaner :elim-literals 11 :elim-clauses 3 :cost 716 :time 0.00)
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 18 := 18 << 18
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 16 := 16 << 16
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 4 := 4 << 4
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 3 := 3 << 3
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2 := 2 << 2
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 9 := 9 << 9
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 27 := 27 << 27
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 15 := 15 << 15
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 49 := 49 << 49
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 7 := 7 << 7
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 48 := 48 << 48
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 5 := 5 << 5
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 24 := 24 << 24
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 14 := 14 << 14
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 12 := 12 << 12
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 8 := 8 << 8
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 10 := 10 << 10
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 11 := 11 << 11
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    754  16600   71  1635/1593   691/331  90       0    20.05   0.17)
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 46 := 46 << 46
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 47 := 47 << 47
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 13 := 13 << 13
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 44 := 44 << 44
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 17 := 17 << 17
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 43 := 43 << 43
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 23 := 23 << 23
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 42 := 42 << 42
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 25 := 25 << 25
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 41 := 41 << 41
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 40 := 40 << 40
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 22 := 22 << 22
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 20 := 20 << 20
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 21 := 21 << 21
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 19 := 19 << 19
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 28 := 28 << 28
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 30 := 30 << 30
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 29 := 29 << 29
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 39 := 39 << 39
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 31 := 31 << 31
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 38 := 38 << 38
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 32 := 32 << 32
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 37 := 37 << 37
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 33 := 33 << 33
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 36 := 36 << 36
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 35 := 35 << 35
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 34 := 34 << 34
 (sat-cleaner :elim-literals 518 :elim-clauses 0 :cost 3878 :time 0.00)
(sat.stats   1220  31823   99  1954/1909  1158/352 227       0    21.05   0.34)
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&21440476741632
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 0 := 39 << 39
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5364 :time 0.00)
(sat.stats   1599  41897  222  2010/1965  1537/379 230       0    21.33   0.46)
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&2111062325329920
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 47 := 47 << 47
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&774056185954304
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 24189255811072 := 44 << 44
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 8435 :time 0.00)
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 27487790694400 := 50 << 50
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 56294995342103875 := 48 << 48
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&896
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 1970324836974592 := 7 << 7
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&2048
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 1024 := 8 << 8
 (sat-cleaner :elim-literals 15 :elim-clauses 6 :cost 10001 :time 0.00)
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 256 := 1 << 1
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&8
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 512 := 2 << 2
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&24
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 768 := 3 << 3
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&64
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 1024 := 4 << 4
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&160
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 1280 := 5 << 5
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&384
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 1536 := 6 << 6
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&4718592
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 72 := 18 << 18
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&9961472
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 76 := 19 << 19
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&20971520
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 80 := 20 << 20
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&10240
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 40 := 10 << 10
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&22528
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 44 := 11 << 11
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&49152
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 48 := 12 << 12
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&2228224
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 68 := 17 << 17
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&106496
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 52 := 13 << 13
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&229376
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 56 := 14 << 14
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&1048576
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 64 := 16 << 16
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&491520
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 60 := 15 << 15
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&4608
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 36 := 9 << 9
(sat.stats   2641  87140  353  2258/2211  2570/406 256       0    22.42   0.89)
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&584115552256
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 136 := 34 << 34
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 12111 :time 0.00)
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&283467841536
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 33792 := 33 << 33
ramon: poll                 wall=1.000s usage=0.998s mem=23824KiB load=1.00 rootload=0.98
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&15569256448
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 29696 := 29 << 29
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&137438953472
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 32768 := 32 << 32
 (sat-cleaner :elim-literals 1 :elim-clauses 5 :cost 12621 :time 0.00)
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&44040192
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 90194313216 := 21 << 21
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&43980465111040
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 171798691840 := 40 << 40
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&5085241278464
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 158913789952 := 37 << 37
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&10445360463872
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 163208757248 := 38 << 38
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&2473901162496
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 154618822656 := 36 << 36
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&1202590842880
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 150323855360 := 35 << 35
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&66571993088
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 133143986176 := 31 << 31
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&32212254720
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 128849018880 := 30 << 30
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&92274688
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 94489280512 := 22 << 22
 (sat-cleaner :elim-literals 1957 :elim-clauses 0 :cost 15512 :time 0.00)
(sat.stats   4024 146271  394  2424/2378  3935/546 352       0    23.37   1.44)
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&90159953477632
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 85983232 := 41 << 41
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&562949953421312
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 102760448 := 49 << 49
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&184717953466368
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 88080384 := 42 << 42
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&985162418487296
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 96468992 := 46 << 46
band: (band[51] (if (or #328 #329 #330 #331 #332 #333 #334 #335 #336 #337 #338 #339 #340 #341 #342 #343 ...) 0 1) (shl[51] (bv2int %0) (mod #36 51))) 0 := 0&378231999954944
shl: (shl[64] (bv2int %0) (mod (+ #36 #584) 64)) 90177536 := 43 << 43
ramon: poll                 wall=2.000s usage=1.998s mem=25872KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.998s mem=26764KiB load=1.00 rootload=1.00
(sat.stats   5739 187124  409 11256/11210  4861/630 352       0    25.99   3.82)
ramon: poll                 wall=4.000s usage=3.998s mem=27532KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.998s mem=28132KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.997s mem=28428KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=29196KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=29708KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=30220KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 4 :elim-clauses 2 :cost 24560 :time 0.00)
ramon: poll                 wall=10.000s usage=9.997s mem=31500KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.997s mem=32012KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin         :gc         :time )
(sat.stats     :decisions    :clauses/bin         :units         :memory       )
(sat.stats   8092 213679  515 42075/42029  6046/861 378       0    30.97  11.90)
ramon: poll                 wall=12.000s usage=11.989s mem=32440KiB load=0.99 rootload=0.99
ramon: poll                 wall=13.000s usage=12.989s mem=32952KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 58 :elim-clauses 10 :cost 27639 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 27930 :time 0.00)
ramon: poll                 wall=14.000s usage=13.989s mem=33208KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.989s mem=33464KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.989s mem=33464KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.988s mem=33720KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.988s mem=33976KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.988s mem=33976KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.988s mem=34744KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:02:38 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.997s
ramon: group.utime          19.973s
ramon: group.stime          0.024s
ramon: group.mempeak        35000KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
