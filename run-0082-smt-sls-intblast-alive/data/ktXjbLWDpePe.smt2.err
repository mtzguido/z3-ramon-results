ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:01:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27477 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ktXjbLWDpePe.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             910180
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   133.333     10000        49          0            1        2)
(smt.stats    0    101   6951   1965  1438/1190/90     100/8     1   13   52.00)
(smt.stats    1    202   8144   3032  2124/1920/90     201/8     1   13   52.19)
(sat.ddfw       1      1   78.1328     20001        98          1            1        3)
(smt.stats    2    313  10437   5618  2353/1945/93     296/13     3   17   52.29)
(smt.stats    3    414  12834   7616  2497/2256/99     395/15     5   17   52.39)
(smt.stats    4    525  13667  10193  2508/2265/99     503/15     5   17   52.39)
(smt.stats    5    647  16222  12577  2650/2388/100     611/29     7   26   52.50)
(sat.ddfw       1      1   76.6284     40001       196          2            1        5)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&9223372036854775807
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&9223372036854775807
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931435 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931423 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931419 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931392 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931392 := 1016962226931435&2033924453862912
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931328 := 1016962226931435&2033924453862912
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862912
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 31 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 27 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862876
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862876
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862880
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862875
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862876
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775808 := 2033924453862874 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775808 := 2033924453862874 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 9223372036854775808 := 2033924453862874 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&1996220534831972352
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 1016962226931436 := 1016962226931437 << 50
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862880
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862919
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453862912
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924712693760
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924712693760
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033959072432128
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033959072432128
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2251799813685248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 2251799813685248 := 2033924453862874 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2251799813685248
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 1016962226931436 := 1016962226946050 << 50
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2251799813685248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 2251799813685248 := 2033924453892100 << 49
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2251799813685248
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 1016962226931436 := 1016962226946050 << 50
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2033924453863424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931264 := 1016962226931435&2040693581152256
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931200 := 1016962226931435&2040693581152256
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18143  15342  2753/2471/192     707/39     9   46   53.01)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226931008 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930688 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930688 := 1016962226931435&2034097048257536
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930944 := 1016962226931435&2034097048257536
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930688 := 1016962226931435&2034097048257536
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1016962226930688 := 1016962226931435&2034096779820032
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034097048256512
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 17592186044416 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034097048256512
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034097048256512
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034097585127424
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034098658869248
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034098658869248
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034098658869248
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034105101320192
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034100806352896
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034105101320192
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034113691254784
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034113691254784
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034113691254784
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1011550697553920 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 8796093022208 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 26388279066624 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 290271069732864 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 562949953388544 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 307863255777280 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 589338232487936 := 1016962226931435&2034096511385600
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 870813209198592 := 1016962226931435&2034096511385600
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #915 #916) 64)) 2034096511385600 := 2033924453924868 << 49
(smt.stats    7    859  20442  20645  2933/2665/343     824/59    11   81   53.61)
(smt.stats    8    981  23216  24420  2974/2705/346     908/58    13   91   53.61)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 1&2034096511385616
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385616
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692808 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385616
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692808 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385616
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692808 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 63 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 62 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #118))) 62 := 1017048255692802 << 1
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511385604
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511385604
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511385604
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511385604
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511385604
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 1&2034096511385604
(sat.ddfw       1      1   48.1541     70001       343          3            1        8)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511418372
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511418372
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 0 := 1&2034096511418372
band: (band[63] (if (= #122 62) 1 (if #592 3 #770)) (shl[63] (bv2int %0) (+ 63 #773))) 1 := 1&2034096511418372
(smt.stats    9   1115  26952  29451  3051/2758/355    1001/74    14  105   53.83)
ramon: poll                 wall=1.000s usage=0.905s mem=56372KiB load=0.91 rootload=0.87
(sat.ddfw       1      1   36.3306    110001       539          4            1       12)
(smt.stats   10   1216  28273  30884  3162/2786/375    1130/89    15  109   54.31)
(sat.ddfw       1      1   30.6742    160000       784          5            1       17)
(smt.stats   11   1327  29886  37322  3526/3053/375    1278/93    15  109   54.41)
ramon: poll                 wall=2.000s usage=1.860s mem=56948KiB load=0.95 rootload=0.96
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33209  44172  3727/3438/385    1451/142    17  112   54.50)
(smt.stats   13   1583  37415  52041  3759/3468/387    1637/192    18  142   54.60)
(sat.ddfw       1      1   26.2932    220001      1078          6            1       23)
(smt.stats   14   1730  42070  57729  3946/3479/387    1862/215    18  142   54.69)
(smt.stats   15   1831  45823  66461  4030/3675/390    2037/333    19  148   54.96)
ramon: poll                 wall=3.000s usage=2.793s mem=57208KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   22.7199    290001      1421          7            1       30)
(smt.stats   16   1942  46760  70038  4456/4169/391    2248/407    20  149   55.05)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 2 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 2 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 3 := 8330954563022322253&668503069687809
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 5 := 8330954563022322253&774056185954305
(smt.stats   17   2065  50522  77064  4630/4204/392    2559/516    21  150   55.26)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 5 := 8330954563022322253&809532615819265
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 9 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 9 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 1 := 8330954563022322253&809532615819267
(smt.stats   18   2199  54655  86083  4770/4393/413    2819/575    22  155   55.36)
ramon: poll                 wall=4.000s usage=3.729s mem=57800KiB load=0.94 rootload=0.93
(sat.ddfw       1      1   20.1106    370001      1813          8            1       38)
(smt.stats   19   2346  62930 102104  4867/4510/428    3227/652    23  158   55.60)
(smt.stats   20   2507  68954 111094  4972/4679/441    3456/826    24  158   55.70)
(smt.stats   21   2608  77087 128803  4996/4709/443    3573/884    26  180   55.80)
(smt.stats   22   2719  86192 151067  5011/4724/443    3671/884    26  180   55.80)
(smt.stats   23   2841  93876 170357  5029/4742/443    3794/884    26  180   56.00)
(smt.stats   24   2975  98277 183331  5060/4773/447    4050/917    27  192   56.00)
ramon: poll                 wall=5.000s usage=4.690s mem=58312KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   17.8607    460001      2254          9            1       47)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532800 := 1041369320377790281&809532615819264
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532800 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532800 := 1041369320377790281&809532615819776
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3122 104128 198871  5136/4794/448    4323/1010    28  212   56.19)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371533056 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819840
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703555371532864 := 1041369320377790281&809532615819840
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592758272 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592758272 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592758272 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703556445274624 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592758272 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703567182692864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703567182692864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703567182692864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703567182692864 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703584362562048 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703618722300416 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703618722300416 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703618722300416 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703601542431232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809532615819776
(smt.stats   26   3283 107322 208613  5387/5031/494    4591/1107    29  229   56.39)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809515435985408
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809515435985408
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703559129631232 := 1041369320377790281&809515435985408
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 703558592793088 := 1041369320377790281&809515435985408
(smt.stats   27   3460 117649 227719  5607/5320/520    4961/1188    31  249   56.66)
ramon: poll                 wall=6.000s usage=5.592s mem=58884KiB load=0.90 rootload=0.90
(smt.stats   28   3561 125256 248394  5614/5327/520    5165/1188    31  249   56.66)
(sat.ddfw       1      1   16.3345    560001      2745         10            1       57)
(smt.stats   29   3672 130165 263589  5652/5365/521    5370/1421    32  253   56.66)
(smt.stats   30   3794 136139 274865  5753/5380/523    5620/1448    33  266   56.78)
ramon: poll                 wall=7.000s usage=6.591s mem=59396KiB load=1.00 rootload=1.00
(smt.stats   31   3928 141811 288122  5859/5534/529    5883/1535    34  269   57.11)
(smt.stats   32   4075 146936 309362  5883/5596/533    6194/1591    35  304   57.22)
(sat.ddfw       1      1   15.0871    670001      3284         11            1       68)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 81920 := 2082738640755580563&70368744177664
(smt.stats   33   4236 153083 334044  6180/5607/535    6581/1664    36  313   57.32)
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 35184372089088 := 2082738640755580563&422212465065984
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 35184372089088 := 2082738640755580563&422212465065984
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 35184372089088 := 2082738640755580563&422212465065984
band: (band[63] (if (= #783 63) 0 (if #785 1 #909)) (shl[64] (* 2 #431) (mod #917 64))) 35184372089088 := 2082738640755580563&422212465065984
(smt.stats   34   4413 156883 349063  6580/6293/547    7049/1873    38  338   57.41)
ramon: poll                 wall=8.000s usage=7.590s mem=59908KiB load=1.00 rootload=1.00
(smt.stats   35   4607 163944 375799  6723/6323/554    7718/1878    38  338   57.72)
(sat.ddfw       1      1   14.0187    790001      3872         12            1       80)
(smt.stats   36   4708 168136 394068  6988/6549/554    8121/2172    39  379   57.81)
ramon: poll                 wall=9.000s usage=8.593s mem=60420KiB load=1.00 rootload=1.00
(smt.stats   37   4819 173072 411917  7122/6691/555    8361/2298    40  382   57.93)
(smt.stats   38   4941 177851 423285  7278/6826/555    8854/2303    40  382   58.02)
(smt.delete-inactive-clauses  :num-deleted-clauses 216)
ramon: poll                 wall=10.000s usage=9.587s mem=60676KiB load=0.99 rootload=0.99
(sat.ddfw       1      1    13.089    920001      4509         13            1       93)
(smt.stats   39   5075 184293 441579  7397/6972/555    8991/2305    40  382   58.22)
ramon: poll                 wall=11.003s usage=10.593s mem=60932KiB load=1.00 rootload=1.00
(smt.stats   40   5222 188210 453128  7649/7093/555    9306/2310    40  382   58.31)
(sat.ddfw       1      1   12.2721   1060001      5196         14            1      108)
(smt.stats   41   5383 195787 490426  7810/7346/555    9774/2315    40  382   58.41)
ramon: poll                 wall=12.000s usage=11.595s mem=60932KiB load=1.01 rootload=1.01
(smt.stats   42   5560 201952 502427  7835/7518/555    9951/2315    40  382   58.41)
(smt.stats   43   5754 209238 523256  7876/7537/555   10299/2318    40  382   58.89)
(smt.stats   44   5967 219107 551715  7930/7580/555   10539/2325    40  382   58.89)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6068 222851 581517  8002/7680/555   10814/2325    40  382   59.08)
ramon: poll                 wall=13.000s usage=12.594s mem=61188KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.5562   1210001      5931         15            1      123)
(smt.stats   46   6179 230010 618779  8126/7781/556   10964/2829    41  435   59.08)
(smt.stats   47   6301 236375 637082  8216/7783/556   11224/2832    41  435   59.27)
ramon: poll                 wall=14.000s usage=13.722s mem=61704KiB load=1.13 rootload=1.13
(smt.stats   48   6435 241023 649042  8417/7907/556   11536/2839    41  435   59.44)
(smt.stats   49   6582 247095 661093  8459/8100/557   11875/3052    42  436   59.54)
(sat.ddfw       1      1   10.9372   1370001      6715         16            1      139)
ramon: poll                 wall=15.003s usage=14.900s mem=61976KiB load=1.17 rootload=1.18
(smt.stats   50   6743 255850 677373  8630/8121/557   12205/3063    42  436   59.73)
ramon: poll                 wall=16.000s usage=15.892s mem=62316KiB load=1.00 rootload=0.99
(smt.stats   51   6920 262303 695463  8867/8334/557   12567/3068    42  436   59.82)
(sat.ddfw       1      1    10.369   1540001      7549         17            1      156)
(smt.stats   52   7114 271876 735619  8904/8559/558   13075/3380    43  439   59.82)
ramon: poll                 wall=17.000s usage=16.891s mem=62264KiB load=1.00 rootload=1.00
(smt.stats   53   7327 289485 815532  9080/8564/558   13539/3394    43  439   59.92)
ramon: poll                 wall=18.000s usage=17.881s mem=62632KiB load=0.99 rootload=0.99
(smt.stats   54   7561 299017 860768  9179/8834/559   14094/3626    44  441   60.02)
(sat.ddfw       1      1   9.84306   1720001      8431         18            1      174)
(smt.stats   55   7662 305347 887090  9193/8848/559   14369/3626    44  441   60.11)
ramon: poll                 wall=19.003s usage=18.942s mem=62644KiB load=1.06 rootload=1.06
(smt.stats   56   7773 316464 936865  9253/8855/559   14618/3626    44  441   60.71)
(smt.stats   57   7895 323915 971938  9391/8926/559   15094/3641    44  441   60.80)
ramon: poll                 wall=20.003s usage=19.971s mem=62740KiB load=1.03 rootload=1.02
(smt.stats   58   8029 328519 994189  9491/9069/560   15455/3886    45  447   60.80)
ramon: end                  Fri Nov  1 23:01:47 2024
ramon: root.execname        z3
ramon: root.utime           20.000s
ramon: root.stime           0.050s
ramon: group.total          20.061s
ramon: group.utime          20.009s
ramon: group.stime          0.052s
ramon: group.mempeak        62996KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.097s
ramon: loadavg              1.00
