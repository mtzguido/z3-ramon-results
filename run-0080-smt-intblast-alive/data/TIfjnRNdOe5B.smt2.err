ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:26:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25579 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/TIfjnRNdOe5B.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             45070
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4421    484  1118/994/98     106/12     6   16   19.16)
(smt.stats    1    202   6035   1103  1563/1414/100     205/25     8   20   19.35)
(smt.stats    2    313   7749   1530  1717/1497/100     324/29     8   20   19.35)
(smt.stats    3    414   8149   1931  1820/1624/101     428/31     9   22   19.64)
(smt.stats    4    525  10431   2865  2065/1889/111     594/88    10   40   19.64)
(smt.stats    5    647  14333   4779  2285/2026/111     800/120    11   40   19.74)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  18748   8416  2373/2144/111     931/122    11   40   19.74)
(smt.stats    7    859  21847  11528  2389/2209/114    1076/257    12   44   19.74)
(smt.stats    8    981  24713  14403  2465/2259/114    1217/263    12   44   19.84)
ramon: poll                 wall=1.000s usage=0.929s mem=21036KiB load=0.93 rootload=0.92
(smt.stats    9   1115  26068  18500  2794/2568/118    1343/312    13   53   19.93)
(smt.stats   10   1216  28252  20905  2890/2600/118    1461/313    13   53   20.03)
(smt.stats   11   1327  30071  23894  2938/2719/121    1573/320    14   55   20.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  33251  27198  2951/2723/121    1700/329    15   57   20.03)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 2199023255552 := 207 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 2199023255552 := 207 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 2199023255552 := 207 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 1 := 312&1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 310&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 310 := 207 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 1 := 828&1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 828&1
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2196275209206 := 207 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 828&1
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2196275209206 := 207 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 828&1
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 1 := 828&1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 828&1
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 1 := 828&1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 1 := 828&1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 1 := 828&1
(smt.stats   13   1583  36317  31218  3014/2748/121    1830/331    15   57   20.13)
(smt.stats   14   1730  42000  34551  3044/2815/153    1977/339    17   66   20.22)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 4 := 1 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 3 := 1 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 3 := 1 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 2&0
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2196275209206 := 1 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 2&0
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2196275209206 := 1 << 1
(smt.stats   15   1831  42761  36560  3097/2837/157    2068/341    18   77   20.32)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 8&1
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 1 := 8&1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 8&1
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 1 := 8&1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 1 := 8&1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 1 := 8&1
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 1 := 314&1374023298
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 312&1374023298
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 2199023255864 := 32 << 32
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 130 := 130&1374023298
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 2199023255682 := 32 << 32
(smt.stats   16   1942  44820  40460  3127/2882/168    2179/345    19   82   20.32)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046102 := 2196275209186&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046100 := 2196275209186&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046096 := 2196275209186&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046088 := 2196275209186&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046080 := 2196275209186&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 1024 := 2196275209186&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046096 := 2196275209186&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046096 := 2196275209200&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275209186&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275209186&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046144 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046208 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046208 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046208 := 2196275209344&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046144 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046144 := 2196275209280&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046144 := 2196275209280&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046144 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046144 := 2196275209280&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046144 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046144 := 2196275209280&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046208 := 2196275209280&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046208 := 2196275209344&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046208 := 2196275209344&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209344&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209248&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209248&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209248&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046112 := 2196275209248&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046594 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275209216&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275210240&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275209800&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275210240&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275211264&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275210240&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275211264&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046336 := 2196275215360&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046338 := 2196275215360&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046338 := 2196275215360&2748046596
(smt.stats   17   2064  48100  44862  3266/2909/173    2345/356    19   82   20.75)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046594 := 2196275215360&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046594 := 2196275223552&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046594 := 2196275215360&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046594 := 2196275215362&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275215614&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275215360&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275215616&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275240192&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275289344&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275249146&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275223808&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275232760&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275191040&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275134458&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275191040&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275191040&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275191040&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275191040&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275191040&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275191040&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275191040&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275518720&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275584256&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275584256&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275724282&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275592448&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275585018&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275649792&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275649792&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2196275650554&2748046596
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2748047104&2748046596
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 4400794558208 := 74 << 33
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2748047354&2748046596
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 2201771302906 := 74 << 33
(smt.stats   18   2198  50843  57591  3488/3007/283    2668/379    20  105   21.15)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2748047104&2748046596
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 2748047104 := 156 << 33
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2748046592 := 2748047354&2748046596
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 2748047354 := 156 << 33
(smt.stats   19   2345  53325  64225  3656/3267/358    3053/441    21  120   21.25)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 6300168 := 1340029796352&2748046596
(smt.stats   20   2506  57343  74363  3862/3616/364    3771/742    23  127   21.44)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 324&351749964337
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 2199023255876 := 163 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 324&351749964337
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 324 := 163 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 324&351749964337
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 324 := 163 << 40
(smt.stats   21   2607  62050  82398  3894/3648/371    4063/744    23  127   21.54)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 321&87937491084
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 6597069766977 := 161 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 314&87937491084
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 314&87937491084
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 312&87937491084
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 320&87937491084
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 6597069766976 := 161 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 320&87937491084
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 6597069766976 := 161 << 38
(smt.stats   22   2718  65791  93631  3981/3653/371    4472/918    24  134   22.04)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2754871302 := 274877906944&87937491084
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2754871302 := 274877906944&87937491084
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2754871302 := 274877906944&87937491084
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2754871302 := 274877906944&87937491084
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2754871302 := 274877906944&87937491084
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2754871302 := 274877906944&87937491084
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2754871302 := 274877906944&87937491084
(smt.stats   23   2840  68173  99803  4207/3749/381    4934/1138    25  136   22.13)
(smt.stats   24   2974  70846 109569  4529/3974/381    5597/1147    25  136   22.33)
(smt.stats   25   3121  76237 131785  4845/4309/381    6109/1363    26  136   22.52)
ramon: poll                 wall=2.000s usage=1.927s mem=23780KiB load=1.00 rootload=0.99
(smt.stats   26   3282  84618 163234  5014/4767/382    6524/1531    27  140   22.63)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 1340029796352&2748046596
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2196275209166 := 156 << 33
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 1340029796352&2748046596
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2196275209166 := 156 << 33
(smt.stats   27   3459  91275 196046  5045/4795/391    7706/2311    28  149   22.82)
(smt.stats   28   3560  93445 204887  5164/4804/393    8053/2312    28  149   22.92)
ramon: poll                 wall=3.000s usage=2.927s mem=24380KiB load=1.00 rootload=1.00
(smt.stats   29   3671  94991 209349  5612/4993/393    8252/2470    29  188   23.20)
ramon: poll                 wall=4.000s usage=3.927s mem=24520KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793 100386 234077  5803/5364/393    8733/2472    29  188   23.20)
ramon: poll                 wall=5.000s usage=4.926s mem=24608KiB load=1.00 rootload=1.00
(smt.stats   31   3927 104537 256664  5808/5559/395    9680/2766    30  199   23.49)
(smt.stats   32   4074 109421 275107  5824/5573/403   10358/2882    31  213   23.69)
(smt.stats   33   4235 115931 310106  6052/5757/404   11062/3396    33  264   23.79)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 4489217 := 2196277069809&5367278
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069057&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069057&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069057&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069057&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069073&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069073&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069073&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069089&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069121&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069073&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069185&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069089&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2196277069057&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2392321&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2392321&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2392321&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2392321&2683639
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2392065 := 2392321&2683639
(smt.stats   34   4412 121097 327997  6260/5961/440   11516/3452    34  272   23.88)
(smt.stats   35   4606 131275 388137  6295/6044/446   12261/3785    35  285   23.98)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 274877906944&40
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 48653389529088 := 48 << 7
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 274876858368&40
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 48653388480512 := 48 << 7
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2196275209167 := 48 << 7
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 2196275209167 := 48 << 7
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 40 := 6144&40
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 6 := 6144&40
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 2 := 6144&40
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 38 := 6144&40
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 4 := 6144&40
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 32 := 6144&40
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 16 := 6144&40
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 6144&40
band: (band[41] (shl[41] (bv2int %0) (mod #101 41)) (if (= #576 40) 0 (if #578 1 #689))) 24 := 6144&40
(smt.stats   36   4707 136294 409341  6397/6124/507   12501/3947    36  298   24.17)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 12 := 6144&40
(smt.stats   37   4818 139041 418530  6477/6207/509   12684/3949    36  298   24.37)
(smt.stats   38   4940 143193 434433  6589/6301/512   12986/3973    37  343   24.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 240)
ramon: poll                 wall=6.000s usage=5.926s mem=26168KiB load=1.00 rootload=1.00
(smt.stats   39   5074 153269 492228  6591/6303/512   13347/3973    37  343   24.76)
(smt.stats   40   5221 160854 538196  6596/6305/513   13946/4228    38  344   24.85)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 1924145348608&87937491084
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 37 := 79 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 1924145348608&87937491084
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 37 := 79 << 38
(smt.stats   41   5382 170636 581018  6652/6316/514   14677/4241    39  347   25.05)
(smt.stats   42   5559 183304 610004  6680/6390/520   14978/4393    40  348   25.05)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 0 := 52&655
(smt.stats   43   5753 191788 651768  6702/6392/520   15379/4460    41  350   25.14)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 4 := 52&655
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 52 := 52 << 11
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 4 := 36&655
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 36 := 52 << 11
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 4 := 36&655
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 36 := 52 << 11
(smt.stats   44   5966 197505 674153  6795/6501/526   16072/4529    42  357   25.34)
(smt.stats   45   6067 202499 700355  6843/6537/527   16747/4529    42  357   25.43)
ramon: poll                 wall=7.000s usage=6.926s mem=26968KiB load=1.00 rootload=0.99
(smt.stats   46   6178 205795 718551  6980/6580/529   17024/4784    43  363   25.53)
band: (band[41] (shl[64] (bv2int %0) (mod #318 64)) (if (or #709 #710) 0 (if #711 1 #854))) 2 := 2196275134983&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #317) 64)) 92356228612615 := 44 << 3
(smt.stats   47   6300 209689 739669  7074/6768/541   17414/4824    44  387   25.81)
(smt.stats   48   6434 213373 759268  7128/6821/544   17873/5069    45  407   25.81)
ramon: poll                 wall=8.000s usage=7.926s mem=27496KiB load=1.00 rootload=1.00
(smt.stats   49   6581 220350 783909  7202/6865/560   18516/5074    45  407   26.10)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 227741 815294  7362/6896/560   19060/5088    45  407   26.20)
(smt.stats   51   6919 232912 858071  7379/7057/560   19386/5435    46  430   26.20)
ramon: poll                 wall=9.002s usage=8.928s mem=27740KiB load=1.00 rootload=1.00
(smt.stats   52   7113 237543 893729  7411/7089/562   20238/5471    47  450   26.58)
(smt.stats   53   7326 252664 997706  7416/7103/562   21070/5471    47  450   26.68)
ramon: poll                 wall=10.000s usage=9.926s mem=28484KiB load=1.00 rootload=1.00
(smt.stats   54   7560 260556 1069461  7428/7115/562   22075/5471    47  450   26.87)
(smt.stats   55   7661 268133 1134623  7429/7116/562   22381/5471    47  450   26.87)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   56   7772 275144 1216307  7446/7129/562   22824/5471    47  450   26.87)
(smt.stats   57   7894 282632 1307399  7446/7129/562   23012/5471    47  450   27.31)
(smt.stats   58   8028 287311 1347366  7462/7139/563   23556/6047    48  468   27.50)
ramon: poll                 wall=11.000s usage=10.925s mem=29084KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.925s mem=29192KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.925s mem=29192KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.925s mem=29236KiB load=1.00 rootload=1.00
(smt.stats   59   8175 292694 1365825  7729/7154/563   23903/6053    48  468   27.59)
ramon: poll                 wall=15.000s usage=14.924s mem=29312KiB load=1.00 rootload=1.00
(smt.stats   60   8336 301253 1392536  7987/7465/563   24428/6059    48  468   27.78)
ramon: poll                 wall=16.000s usage=15.924s mem=29644KiB load=1.00 rootload=1.00
(smt.stats   61   8513 308540 1416607  8212/7892/564   24974/6167    49  491   28.02)
(smt.stats   62   8707 318079 1443989  8380/7980/565   25550/6180    49  491   28.02)
ramon: poll                 wall=17.000s usage=16.924s mem=29656KiB load=1.00 rootload=1.00
(smt.stats   63   8920 327104 1482089  8546/8092/565   26364/6313    50  492   28.21)
ramon: poll                 wall=18.000s usage=17.924s mem=30020KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.002s usage=18.925s mem=30188KiB load=1.00 rootload=1.00
(smt.stats   64   9154 337405 1515724  8819/8281/565   27362/6318    50  492   28.60)
ramon: poll                 wall=20.000s usage=19.923s mem=30312KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 18:26:55 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.999s
ramon: group.utime          19.975s
ramon: group.stime          0.024s
ramon: group.mempeak        30568KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.00
