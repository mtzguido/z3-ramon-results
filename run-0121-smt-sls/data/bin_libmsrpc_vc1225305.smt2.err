ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:21:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25347 MiB
ramon: sys.mem.avail        62136 MiB
ramon: sys.nprocs           1211
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libmsrpc_vc1225305.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1328961
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
tabu (if (and (bvsle bv[4294967295:32] #14223) (not #18311)) (bvadd bv[1:32] (if #14219 bv[0:32] v539449524)) (if (and #8330 #8413) bv[0:32] v539449524))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      61      7    156.25     10000         0          0          131      412)
(sat.ddfw      39     40   106.505     20118         0          1          196      901)
(sat.ddfw      33     58   139.035     40000         0          2           46     1407)
(sat.ddfw      33    227   136.986     70000         0          3           12     1810)
(sat.ddfw      21    349   109.696    110039         0          4           69     2331)
(sat.ddfw      14     75   90.9782    160077         0          5          104     2721)
(sat.ddfw       4    395   67.9207    220051         1          6           93     3055)
ramon: poll                 wall=1.000s usage=0.911s mem=22592KiB load=0.91 rootload=0.90
(sat.ddfw       4   1025   60.6999    290038         1          7           45     3289)
(sat.ddfw       4   1025   49.7586    370000         2          8            4     3405)
ramon: poll                 wall=2.000s usage=1.910s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       4   1025   41.6448    460036         3          9           23     3441)
(sat.ddfw       4   1025   35.9289    560026         3         10           20     3466)
ramon: poll                 wall=3.000s usage=2.910s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   31.2249    670000         4         11            4     3488)
ramon: poll                 wall=4.000s usage=3.910s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   28.4024    790000         5         12           21     3510)
ramon: poll                 wall=5.000s usage=4.909s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   25.1548    920000         6         13            8     3532)
ramon: poll                 wall=6.000s usage=5.908s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   22.6479   1060032         7         14           21     3562)
ramon: poll                 wall=7.002s usage=6.907s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   21.1919   1210028         7         15           19     3687)
ramon: poll                 wall=8.000s usage=7.904s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   18.6896   1370011         7         16           26     3968)
ramon: poll                 wall=9.000s usage=8.904s mem=22576KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.904s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   17.0244   1540000         9         17            8     4114)
ramon: poll                 wall=11.000s usage=10.904s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025    15.517   1720013        10         18           14     4138)
ramon: poll                 wall=12.000s usage=11.904s mem=22576KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.903s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   14.3619   1910006        12         19           15     4191)
ramon: poll                 wall=14.000s usage=13.903s mem=22576KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.903s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   13.4347   2110008        13         20           10     4239)
ramon: poll                 wall=16.000s usage=15.903s mem=22576KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.903s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   12.0356   2320005        14         21            7     4286)
ramon: poll                 wall=18.000s usage=17.903s mem=22576KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.902s mem=22576KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   11.3436   2540002        15         22           10     4453)
ramon: poll                 wall=20.000s usage=19.902s mem=22576KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:21:38 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.000s
ramon: group.total          19.954s
ramon: group.utime          19.950s
ramon: group.stime          0.004s
ramon: group.mempeak        22832KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              1.00
