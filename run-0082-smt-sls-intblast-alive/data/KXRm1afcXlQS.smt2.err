ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:14:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28584 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KXRm1afcXlQS.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             754068
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 5 := 4 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854775808 := 4 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 5 := 4 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 5 := 4 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 5 := 4 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387904
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 3 := 2 << 61
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427387904 := 4 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387904
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 3 := 2 << 61
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 5 := 4 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387904
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427387905 := 2 << 61
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427387904 := 4 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387904
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427387905 := 2 << 61
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   77.5194     10000        49          0            1        2)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&509
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 509 := 508 << 60
(smt.stats    0    101    657    644  1259/1127/103     103/22     6   15   51.85)
(sat.ddfw       1      1   38.0266     20001        98          1            1        3)
(sat.ddfw       1      1   43.3839     40001       196          2            1        5)
(sat.ddfw       1      1   40.1606     70001       343          3            1        8)
(smt.stats    1    202   1134   1061  1456/1171/103     210/24     6   15   52.33)
ramon: poll                 wall=1.002s usage=0.888s mem=54856KiB load=0.89 rootload=0.88
(sat.ddfw       1      1   35.1494    110001       539          4            1       12)
(sat.ddfw       1      1   30.4872    160000       784          5            1       17)
(smt.stats    2    313   1505   1577  1624/1447/103     325/25     6   15   52.90)
ramon: poll                 wall=2.000s usage=1.937s mem=55264KiB load=1.05 rootload=1.04
(smt.stats    3    414   2004   3504  2074/1928/114     461/52     7   16   52.61)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 1&4611686018427387903
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 1&12728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854788536 := 13835058055282164330 << 62
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 1&12728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854788536 := 13835058055282164330 << 62
(smt.stats    4    525   3857   5639  2147/1969/119     562/113     9   32   52.71)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 1&2305843009213693952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 11529215046068469760 := 9223372036854784746 << 62
(smt.stats    5    647   5268   7662  2206/2050/135     686/128    11   39   52.81)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748   6829   8602  2235/2064/140     783/134    12   40   52.81)
(sat.ddfw       1      1   26.8701    220001      1078          6            1       23)
(smt.stats    7    859   7496  10177  2364/2182/141     883/144    13   44   52.90)
(smt.stats    8    981   8302  11689  2577/2303/141    1001/162    14   44   53.00)
(smt.stats    9   1115   9206  12948  2683/2439/141    1126/169    14   44   53.00)
ramon: poll                 wall=3.000s usage=2.933s mem=55760KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    23.948    290001      1421          7            1       30)
(smt.stats   10   1216   9954  15823  2834/2679/150     876/210    15  402   53.09)
(smt.stats   11   1361  14177  26017  2896/2751/162     784/225    19  589   53.09)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393182
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 626 := 6917529027641084495 << 1
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393182
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 9223372036854775807 := 6917529027641084495 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations           :lemmas        :deletions     )
(smt.stats   12   1483  15176  28514  2941/2795/170     861/238    20  643   53.19)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393889
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169697 := 13835058055282169384 << 55
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393889
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169697 := 13835058055282169384 << 55
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393889
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169697 := 13835058055282169384 << 55
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393889
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169697 := 13835058055282169384 << 55
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393890
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169698 := 13835058055282169384 << 55
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393890
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169698 := 13835058055282169384 << 55
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&1441151880758558720
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 9223372036854775807 := 6917529027641084692 << 56
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&1441151880758558720
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 9223372036854775807 := 6917529027641084692 << 56
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&1441151880758558720
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 9223372036854775806 := 6917529027641084692 << 56
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&1441151880758558720
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 6917529027641085024 := 6917529027641084692 << 56
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&1441151880758558720
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 6917529027641085015 := 6917529027641084692 << 56
(smt.stats   13   1617  16917  31085  2996/2803/170     999/242    20  643   53.29)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&369
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 369 := 13835058055282169372 << 61
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&368
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 368 := 13835058055282169372 << 61
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&141
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 141 := 13835058055282169372 << 61
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&0
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1764 := 6917529027641084686 << 62
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&0
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1763 := 6917529027641084686 << 62
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&0
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1637 := 6917529027641084686 << 62
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&12728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854788536 := 13835058055282169376 << 59
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&12728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854788536 := 13835058055282169376 << 59
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&12729
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854788537 := 13835058055282169376 << 59
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&12729
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854788537 := 13835058055282169376 << 59
(smt.stats   14   1764  20332  35978  3050/2845/180    1148/247    21  645   53.41)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&0
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1152921504606846977 := 6917529027641084688 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&0
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427393567 := 6917529027641084688 << 60
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&0
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427392332 := 6917529027641084688 << 60
(smt.stats   15   1865  22093  38148  3093/2934/202    1241/253    23  652   53.50)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&9223372036854775807
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 18446744073709551615 := 13835058055282169486 << 4
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&9223372036854775807
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 18446744073709551615 := 13835058055282169486 << 4
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&9223372036854775806
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 18446744073709551614 := 13835058055282169486 << 4
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393940
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169748 := 13835058055282169486 << 4
(smt.stats   16   1976  24408  40493  3112/2934/202    1353/253    23  652   53.50)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393940
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169748 := 13835058055282169486 << 4
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&92384
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427486864 := 6917529027641084743 << 5
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&92384
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427486864 := 6917529027641084743 << 5
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&92384
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427486864 := 6917529027641084743 << 5
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&92384
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427486863 := 6917529027641084743 << 5
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&92384
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427395860 := 6917529027641084743 << 5
(smt.stats   17   2098  26824  44897  3148/2963/207    1474/255    24  653   53.60)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427387903 := 13835058055282169482 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427387903 := 13835058055282169482 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427387903 := 13835058055282169482 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427387903 := 13835058055282169482 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&369280
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427387905 := 6917529027641084741 << 7
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&369280
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 369280 := 13835058055282169482 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&369280
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427387905 := 6917529027641084741 << 7
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427387903 := 13835058055282169482 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&369280
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427387905 := 6917529027641084741 << 7
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427387903 := 13835058055282169482 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&369280
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427395860 := 6917529027641084741 << 7
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427387903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427387903 := 13835058055282169482 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&369280
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427395860 := 6917529027641084741 << 7
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&369279
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 369279 := 13835058055282169482 << 6
(smt.stats   18   2232  29678  47244  3184/2987/212    1608/257    25  654   53.70)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&92193
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 92193 := 13835058055282169474 << 10
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5900288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 5900288 := 13835058055282169474 << 10
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5900288
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1152921504606846976 := 6917529027641084737 << 11
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 1152921504606846975 := 13835058055282169474 << 10
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5900288
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1152921504606846976 := 6917529027641084737 << 11
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 1152921504606846975 := 13835058055282169474 << 10
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5900288
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1152921504606846976 := 6917529027641084737 << 11
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5900289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 5900289 := 13835058055282169474 << 10
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5900288
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1152921504606846977 := 6917529027641084737 << 11
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 1152921504606846975 := 13835058055282169474 << 10
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 1152921504606846975 := 13835058055282169474 << 10
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5900288
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1152921504606846977 := 6917529027641084737 << 11
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&368768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 368768 := 13835058055282169474 << 10
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&5900288
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1152921504606846977 := 6917529027641084737 << 11
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018433281617
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018433281617 := 13835058055282169474 << 10
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4683743612465315839
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4683743612465315839 := 13835058055282169474 << 10
(smt.stats   19   2379  33269  52745  3252/3031/222    1755/261    26  656   53.70)
(smt.stats   20   2540  37506  57331  3271/3097/232    1912/263    27  658   53.79)
(sat.ddfw       1      1   21.3961    370001      1813          8            1       38)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&9223372036854775807
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854775807 := 13835058055282169426 << 34
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&9223372036854775807
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854775807 := 13835058055282169426 << 34
(smt.stats   21   2642  39828  60598  3282/3104/232    2011/263    28  658   54.02)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427472752
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427472752 := 13835058055282169426 << 34
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393911
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427393911 := 13835058055282169426 << 34
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393911
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427393911 := 13835058055282169426 << 34
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393911
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427393911 := 13835058055282169426 << 34
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393911
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 4611686018427393911 := 13835058055282169426 << 34
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&98165772517376
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 91424 := 6917529027641084713 << 35
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&98165772517376
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 91424 := 6917529027641084713 << 35
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&98165772517376
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 91424 := 6917529027641084713 << 35
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&98165772517376
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 91423 := 6917529027641084713 << 35
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&98165772517376
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 1791 := 6917529027641084713 << 35
(smt.stats   22   2753  41733  63457  3369/3142/237    2121/270    29  659   54.11)
ramon: poll                 wall=4.000s usage=3.907s mem=56612KiB load=0.97 rootload=0.97
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393940
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169748 := 13835058055282169484 << 5
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393940
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169748 := 13835058055282169484 << 5
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&4611686018427393940
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 13835058055282169748 := 13835058055282169484 << 5
(smt.stats   23   2875  44376  66816  3380/3197/242    2241/271    30  660   54.21)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&184704
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 6917529027641085075 := 6917529027641084742 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&184704
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 6917529027641085074 := 6917529027641084742 << 6
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&184704
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 6917529027641085065 := 6917529027641084742 << 6
(smt.stats   24   3009  46612  69121  3419/3217/247    2374/272    31  661   54.21)
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&184833
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 184833 := 13835058055282169488 << 3
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&2637
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854778445 := 13835058055282169488 << 3
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&2644
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #1225 #1226) 64)) 9223372036854778452 := 13835058055282169488 << 3
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&46208
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 99230924406785 := 6917529027641084744 << 4
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&46208
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 99230924406785 := 6917529027641084744 << 4
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&46208
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427390001 := 6917529027641084744 << 4
band: (band[63] (if (or #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 #917 #918 #919 #920 #921 #922 ...) 0 1) (shl[64] (* 2 #110) (mod #1227 64))) 0 := 0&46208
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #108))) 4611686018427390060 := 6917529027641084744 << 4
(smt.stats   25   3156  49566  74398  3458/3244/252    2519/274    32  662   54.30)
(sat.ddfw       1      1   19.4175    460001      2254          9            1       47)
(smt.stats   26   3317  54623  80526  3492/3293/266    2626/287    34  710   54.49)
ramon: poll                 wall=5.000s usage=4.951s mem=57196KiB load=1.04 rootload=1.04
(smt.stats   27   3494  59081  90207  3583/3401/267    2792/294    35  710   54.49)
(smt.stats   28   3595  62492  93479  3588/3404/267    2894/294    35  710   54.59)
(sat.ddfw       1      1   17.7809    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.059s mem=57208KiB load=1.11 rootload=1.10
(smt.stats   29   3706  65010  97305  3690/3418/267    3007/299    35  710   54.79)
(sat.ddfw       1      1   16.4745    670001      3284         11            1       68)
(smt.stats   30   3828  66499  99198  3966/3552/267    3129/309    35  710   54.88)
ramon: poll                 wall=7.002s usage=7.258s mem=57380KiB load=1.20 rootload=1.20
(sat.ddfw       1      1   15.7315    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=8.295s mem=57424KiB load=1.04 rootload=1.04
(smt.stats   31   3962  68195 102227  4198/3798/267    3262/316    35  710   55.07)
ramon: poll                 wall=9.000s usage=9.271s mem=57580KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   14.5528    920001      4509         13            1       93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4109  71628 106822  4383/4115/268    3389/330    36  711   55.36)
ramon: poll                 wall=10.000s usage=10.271s mem=57848KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.5593   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=11.255s mem=58064KiB load=0.98 rootload=0.98
(smt.stats   33   4270  72369 108250  4768/4379/268    3553/342    36  711   55.64)
(sat.ddfw       1      1   12.7043   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=12.247s mem=57976KiB load=0.99 rootload=0.99
ramon: poll                 wall=13.000s usage=13.229s mem=58072KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   11.9358   1370001      6715         16            1      139)
(smt.stats   34   4447  73890 111548  5339/4963/268    3734/348    36  711   55.83)
ramon: poll                 wall=14.002s usage=14.483s mem=58172KiB load=1.25 rootload=1.26
(smt.stats   35   4641  76803 116421  5644/5275/268    3952/354    36  711   55.93)
(sat.ddfw       1      1   11.6192   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=15.718s mem=58240KiB load=1.24 rootload=1.23
(smt.stats   36   4742  77976 118121  5779/5482/268    4064/356    36  711   56.03)
ramon: poll                 wall=16.000s usage=16.802s mem=58452KiB load=1.08 rootload=1.09
(smt.stats   37   4853  80681 122911  6133/5772/268    4179/360    36  711   56.03)
(sat.ddfw       1      1   11.0477   1720001      8431         18            1      174)
(smt.stats   38   4975  82896 127232  6324/6142/270    4301/430    37  718   56.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 361)
ramon: poll                 wall=17.000s usage=17.964s mem=58516KiB load=1.16 rootload=1.16
ramon: poll                 wall=18.000s usage=19.028s mem=58524KiB load=1.06 rootload=1.06
(sat.ddfw       1      1    10.572   1910001      9362         19            1      193)
(smt.stats   39   5109  86192 130547  6438/6146/270    4148/434    37  718   56.12)
ramon: poll                 wall=19.000s usage=20.166s mem=58636KiB load=1.14 rootload=1.14
(sat.ddfw       1      1   10.1683   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=21.168s mem=58724KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:15:18 2024
ramon: root.execname        z3
ramon: root.utime           21.220s
ramon: root.stime           0.010s
ramon: group.total          21.242s
ramon: group.utime          21.222s
ramon: group.stime          0.020s
ramon: group.mempeak        58980KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.06
