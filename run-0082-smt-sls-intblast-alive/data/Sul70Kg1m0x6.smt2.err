ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:32:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28166 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Sul70Kg1m0x6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             812856
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   95.2381     10000        49          0            1        2)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 130767450754&1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 130767450754&1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 94 << 39
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 94 << 39
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 94 << 39
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 94 << 39
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 130767450754&1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 130767450754&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 1 := 905969664 << 39
(sat.ddfw       1      1    49.266     20001        98          1            1        3)
(smt.stats    0    101   3952    674  1260/1109/91     102/7     4   14   52.24)
(sat.ddfw       1      1   49.7512     40001       196          2            1        5)
(sat.ddfw       1      1   43.0416     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.841s mem=54716KiB load=0.84 rootload=0.84
(sat.ddfw       1      1   36.6972    110001       539          4            1       12)
(smt.stats    1    202   4217    747  2160/1953/96     203/8     5   15   52.72)
(sat.ddfw       1      1   31.3867    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.841s mem=54876KiB load=1.00 rootload=1.00
(smt.stats    2    313   4864   1572  2454/2240/96     341/8     6   15   52.82)
(sat.ddfw       1      1    27.473    220001      1078          6            1       23)
(smt.stats    3    414   5896   3029  2747/2510/96     458/9     6   15   52.82)
(smt.stats    4    528   8497   5328  2930/2722/104     610/100     9   23   52.82)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&1644232716
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028798663196684 := 1644232718 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797018963968 := 1644232718 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797018963968 := 1677721503 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797018963968 := 1644232718 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797018963968 := 1644232718 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62354 := 62354&62354
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 36028797019026322 := 1644232718 << 18
(smt.stats    5    650  12922   9513  3023/2772/111     743/104    10   28   52.93)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&36028797013458944
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 1055806040571882 := 1055806040571883 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&36028797013458944
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 1055806040571882 := 1055806040571883 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17182490624
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 17048335251 := 1055668601683978 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&36028797013458944
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 402653185 := 1055806040571883 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&8796080963584
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 402653185 := 1055668635172818 << 18
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62353 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62352 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62336 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 62208 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 61952 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 61440 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 57344 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 3072 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 2048 := 62354&26405479645184
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&26405479645184
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62354 := 26405479645184&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&26405479645184
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62353 := 26405479645184&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62354 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62354 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62353 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62354 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62353 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62348 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62344 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 62336 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 256 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 16 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 16 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 64 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 528 := 17180131328&62354
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    751  14303  10716  3237/2961/128     846/108    11   32   53.26)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 35 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 32 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 128 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 128 := 17180131328&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17194549248
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 128 := 17194549248&62354
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 62354&17180131328
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 256 := 17180131328&62354
(smt.stats    7    862  15413  12038  3340/3008/170    1046/122    12   44   53.36)
(smt.stats    8    984  17028  17679  3682/3444/200    1441/254    16   63   53.46)
(sat.ddfw       1      1   24.3056    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.841s mem=55628KiB load=1.00 rootload=0.99
(smt.stats    9   1118  18967  23859  3777/3468/202    1586/351    17   63   53.55)
(smt.stats   10   1219  21394  32073  3847/3600/202    1705/356    18   64   53.65)
(smt.stats   11   1330  24843  40552  3868/3619/203    1804/371    19   65   53.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  27851  50413  3889/3640/213    1661/376    21  343   53.74)
(smt.stats   13   1586  32195  60921  3909/3643/213    1976/378    21  343   53.74)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927679 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927678 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927676 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927672 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 16345927664 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536489472 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536489472 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481282 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481284 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481284 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481284 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481284 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536497664 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481282 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481282 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481282 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481281 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481288 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481296 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481312 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481344 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481408 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481536 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536482304 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483328 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536482560 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536482560 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481408 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481408 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344606207
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605696
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605696
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605185
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344606207
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605696
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659348800000
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659348799488
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&316659344605696
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22884123136
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22875734528
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928319
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928288
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928319
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928303
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22875734528
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22850829259
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22850829824
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928319
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879928303
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22850829824
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22850829824
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879927295
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879927279
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879926784
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879925120
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879926912
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879926912
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879927215
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879926912
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879890415
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879890304
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483960 := 16345931344&22879906304
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483952 := 16345931344&22879906304
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879906304
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879816192
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536483840 := 16345931344&22879799808
(smt.stats   14   1733  35715  70362  4191/3663/213    2274/518    22  347   54.32)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879666688
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22879666688
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22878880256
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22878618112
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22878364160
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22860005888
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22783459840
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22717399552
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 22717399552 := 1207959536 << 36
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22717399552
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 22717399552 := 1207959536 << 36
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 5536481792 := 16345931344&22716613120
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 22716613120 := 1207959481 << 36
(smt.stats   15   1834  38441  80922  4362/3917/418    2530/569    23  388   54.72)
(sat.ddfw       1      1   21.8162    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.840s mem=57184KiB load=1.00 rootload=0.99
(smt.stats   16   1945  40899  86551  4440/4192/453    2849/833    25  428   54.91)
(smt.stats   17   2067  45604  99742  4462/4214/455    2986/866    27  429   55.03)
(smt.stats   18   2201  52041 116075  4619/4268/460    3116/883    29  431   55.13)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 0&22817013760
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9151314465633861632 := 1337006844018671 << 1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 0&22817013760
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9151314465633861632 := 1337006911127526 << 1
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 0&22817013760
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9151314465633861632 := 1337006911127526 << 1
(sat.ddfw       1      1   19.7195    460001      2254          9            1       47)
(smt.stats   19   2348  55462 122927  4824/4404/460    3310/895    29  431   55.23)
ramon: poll                 wall=5.000s usage=4.837s mem=57644KiB load=1.00 rootload=0.99
(smt.stats   20   2509  61128 132982  4963/4701/467    3701/921    30  432   55.45)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2610  65722 143947  5039/4721/467    3843/1053    31  435   55.60)
(smt.stats   22   2721  72039 157856  5083/4791/469    3992/1090    33  436   55.70)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18080858112
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18080858112 := 68973 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18080858112
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18080858112 := 68973 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18080858112
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18080858112 := 68973 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18037604352
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18037604352 := 68808 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&18037604352
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 18037604352 := 68808 << 3
(smt.stats   23   2843  78315 173007  5141/4874/477    4155/1092    33  436   55.70)
(smt.stats   24   2977  83536 185537  5159/4893/482    4364/1174    35  463   55.79)
(sat.ddfw       1      1   18.0083    560001      2745         10            1       57)
(smt.stats   25   3124  90819 204748  5225/4959/486    4533/1212    37  471   55.79)
ramon: poll                 wall=6.000s usage=5.840s mem=58100KiB load=1.00 rootload=1.00
(smt.stats   26   3285 103147 254478  5237/4970/491    4736/1216    38  482   56.03)
(smt.stats   27   3462 116281 307181  5252/4985/494    5008/1245    40  495   56.03)
(smt.stats   28   3563 120495 322964  5266/4999/494    5282/1245    40  495   56.16)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #954) 64)) 9187343239835811840 := 83820549 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 4284987826583111 := 83867134 << 54
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 4284987826337316&0
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 4284987826583111 := 83867134 << 54
(sat.ddfw       1      1   16.5513    670001      3284         11            1       68)
(smt.stats   29   3674 125320 343407  5398/5057/495    5506/1335    42  508   56.73)
ramon: poll                 wall=7.000s usage=6.835s mem=59040KiB load=1.00 rootload=1.00
(smt.stats   30   3796 129924 363978  5556/5160/505    5743/1341    43  510   56.82)
(smt.stats   31   3930 134172 375325  5735/5302/505    6017/1376    44  510   56.92)
(smt.stats   32   4077 141573 402477  5750/5479/509    6237/1430    45  514   57.21)
(sat.ddfw       1      1   15.3139    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.834s mem=59312KiB load=1.00 rootload=1.00
(smt.stats   33   4238 155484 461388  5751/5480/509    6424/1441    46  522   57.21)
(smt.stats   34   4415 162010 484654  5807/5500/510    6701/1515    47  527   57.30)
(smt.stats   35   4609 172528 510166  5909/5620/510    7029/1515    47  527   57.41)
(smt.stats   36   4710 179158 532098  5926/5637/510    7205/1515    47  527   57.41)
ramon: poll                 wall=9.000s usage=8.923s mem=60008KiB load=1.09 rootload=1.08
(smt.stats   37   4821 184091 544662  6011/5640/510    7385/1519    47  527   57.64)
(smt.stats   38   4943 188012 556166  6185/5896/511    7611/1638    48  533   57.64)
(smt.delete-inactive-clauses  :num-deleted-clauses 141)
(sat.ddfw       1      1   14.2575    920001      4509         13            1       93)
(smt.stats   39   5077 200305 575302  6189/5898/511    7667/1639    48  533   57.64)
(smt.stats   40   5224 208900 610057  6215/5926/512    7871/1699    49  534   58.05)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   41   5385 219187 644403  6290/5989/513    8337/1892    50  534   58.15)
ramon: poll                 wall=10.000s usage=10.116s mem=60396KiB load=1.19 rootload=1.20
(smt.stats   42   5562 225238 660157  6359/6057/515    8856/1898    50  534   58.24)
(smt.stats   43   5758 237305 701690  6376/6087/517    9276/2098    52  562   58.47)
(sat.ddfw       1      1   13.3346   1060001      5196         14            1      108)
(smt.stats   44   5971 245086 724579  6392/6100/518    9683/2123    53  576   58.47)
(smt.stats   45   6072 249944 742499  6396/6107/519    9786/2220    54  578   58.47)
ramon: poll                 wall=11.000s usage=11.153s mem=60692KiB load=1.04 rootload=1.03
(smt.stats   46   6183 252660 754901  6532/6211/519   10010/2220    54  578   58.56)
(smt.stats   47   6305 259030 780939  6589/6227/519   10215/2260    55  581   58.66)
(smt.stats   48   6439 263341 800584  6779/6452/521   10526/2306    56  582   58.76)
ramon: poll                 wall=12.000s usage=12.152s mem=61008KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    12.523   1210001      5931         15            1      123)
(smt.stats   49   6586 269162 826842  6877/6474/522   10827/2309    56  582   58.85)
ramon: poll                 wall=13.000s usage=13.151s mem=61204KiB load=1.00 rootload=1.00
(smt.stats   50   6747 275751 857148  7150/6582/522   11205/2358    57  590   59.04)
(sat.ddfw       1      1   11.7985   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=14.148s mem=61516KiB load=1.00 rootload=1.00
(smt.stats   51   6924 283407 891760  7380/6837/522   12132/2375    57  590   59.23)
ramon: poll                 wall=15.000s usage=15.146s mem=61724KiB load=1.00 rootload=1.00
(smt.stats   52   7118 295565 922490  7548/7074/523   12731/2635    58  595   59.43)
(sat.ddfw       1      1   11.1636   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=16.147s mem=62060KiB load=1.00 rootload=1.00
(smt.stats   53   7331 303878 954832  8049/7229/524   13315/2738    59  600   59.81)
ramon: poll                 wall=17.000s usage=17.174s mem=62284KiB load=1.03 rootload=1.03
(sat.ddfw       1      1   10.6157   1720001      8431         18            1      174)
(smt.stats   54   7565 312075 993486  8242/7914/537   14817/2939    60  601   60.58)
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 1 := 1&24
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&24
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 3518437410209722 := 3 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&24
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 3518437410209722 := 3 << 3
band: (band[55] (if (or #796 #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807) 0 (if #808 1 #910)) (shl[64] (bv2int %0) (mod #955 64))) 0 := 1&24
band: (band[55] (shl[55] (bv2int %0) (mod #110 55)) (if (or #628 #629) 0 (if #630 1 #779))) 1 := 24&1
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   55   7668 314927 1005619  8280/7945/553   15257/3456    61  621   60.77)
ramon: poll                 wall=18.000s usage=18.225s mem=62772KiB load=1.05 rootload=1.05
(smt.stats   56   7779 318000 1014790  8332/7953/553   15687/3457    61  621   60.88)
(sat.ddfw       1      1   10.1572   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=19.205s mem=62892KiB load=0.98 rootload=0.98
(smt.stats   57   7901 320695 1020349  8663/8011/553   15886/3467    61  621   60.98)
(smt.stats   58   8035 326864 1045404  8739/8406/553   16192/3637    62  625   60.98)
(smt.stats   59   8182 336272 1113731  8754/8421/553   16454/3637    62  625   60.98)
ramon: poll                 wall=20.000s usage=20.202s mem=63060KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:32:33 2024
ramon: root.execname        z3
ramon: root.utime           20.240s
ramon: root.stime           0.020s
ramon: group.total          20.269s
ramon: group.utime          20.245s
ramon: group.stime          0.024s
ramon: group.mempeak        63324KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.01
