ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:33:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29488 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/30sajcb0kZAE.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             609465
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    70.922     10000        49          0            1        2)
(sat.ddfw       1      1   34.4862     20001        98          1            1        3)
(smt.stats    0    101   3224    461  1313/1163/111     100/13     7   16   52.24)
(sat.ddfw       1      1   33.3333     40001       196          2            1        5)
(smt.stats    1    202   5496   2174  2167/1971/114     215/27     9   23   52.34)
(smt.stats    2    313   6987   5918  2310/2075/115     330/31    10   23   52.44)
(smt.stats    3    414   8450   9550  2352/2155/117     446/55    12   25   52.53)
(sat.ddfw       1      1   30.8325     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.821s mem=54544KiB load=0.82 rootload=0.81
(smt.stats    4    525   9164  10978  2442/2239/119     575/86    13   32   52.53)
(smt.stats    5    647  11438  13705  2449/2246/121     692/88    15   32   52.53)
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 288230376151711743&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 288230376151711745 := 0 >>l 48
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 1 := 0 >>l 48
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 1 := 0 >>l 48
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 1 := 18446744073709551552 >>l 48
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 65534 := 65535&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[58] (bv2int %0) (mod (bv2int %1) 58)) 0 := 4398046511104 >>l 42
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 1 := 281474976710592 >>l 48
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 1 := 1&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[58] (bv2int %0) (mod (bv2int %1) 58)) 1 := 4398046511104 >>l 42
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 1 := 1&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2 := 2&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4 := 4&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 8 := 8&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 16 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 32 := 32&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[58] (bv2int %0) (mod (bv2int %1) 58)) 2 := 4398046511104 >>l 42
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2 := 2&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4 := 4&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 8 := 8&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 16 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 32 := 32&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 64 := 64&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 128 := 128&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 256 := 256&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 512 := 512&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 1024 := 1024&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2048 := 2048&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4096 := 4096&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 8192 := 8192&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 16384 := 16384&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 32768 := 32768&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 128 := 128&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 256 := 256&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 512 := 512&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 1024 := 1024&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2048 := 2048&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4096 := 4096&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 8192 := 8192&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 16384 := 16384&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2048 := 2048&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4096 := 4096&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 8192 := 8192&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4096 := 4096&131072
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  12807  15584  2750/2482/215     796/89    16   36   53.12)
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2048 := 2048&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2048 := 2048&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2048 := 2048&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2048 := 2048&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4096 := 4096&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 8192 := 8192&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4096 := 4096&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4096 := 4096&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 256 := 256&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 256 := 256&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 512 := 512&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 256 := 256&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 16 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 32 := 32&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 32 := 32&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 32 := 32&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4 := 4&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 8 := 8&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 4 := 4&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 2 := 2&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[58] (bv2int %0) (mod (bv2int %1) 58)) 2 := 4398046511104 >>l 42
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 1 := 1&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 40 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 32 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 1&131072
lshr: (lshr[58] (bv2int %0) (mod (bv2int %1) 58)) 41 := 4398046511104 >>l 42
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 40 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 32 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 2 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 16 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 32 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 40 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 40 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 38 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 32 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 32 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 41&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 16 := 41&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 31&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 16 := 31&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 32&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 16 := 32&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 16&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 16 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 16&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 16 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 16&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 12 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 16&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 8 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 16&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 4 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 16&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 4 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 16&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 8 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 16&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 8 := 16&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 24&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 8 := 24&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 32&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 2 := 32&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 34&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 2 := 34&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 32&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 4 := 32&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 36&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 4 := 36&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 32&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 4 := 32&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 36&131072
band: (band[58] (lshr[58] (bv2int %0) (mod #105 58)) (if (= #513 57) 288230376151711744 (if #515 144115188075855872 #627))) 4 := 36&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 1 := 36&131072
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 1 := 37&131072
(smt.stats    7    859  14766  20821  3080/2825/340     944/139    20   88   53.32)
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 42&0
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 42 := 2048 >>l 6
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 42&0
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 42 := 2048 >>l 6
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 42&0
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 42 := 2048 >>l 6
(smt.stats    8    983  16193  24406  3219/2947/360    1120/194    22  116   53.75)
(sat.ddfw       1      1   28.0112    110001       539          4            1       12)
(smt.stats    9   1117  19538  32139  3435/3120/368    1328/213    24  126   53.95)
(smt.stats   10   1218  21559  38170  3451/3128/370    1469/235    26  133   54.04)
(smt.stats   11   1329  24169  43030  3557/3220/371    1606/244    27  133   54.25)
ramon: poll                 wall=2.003s usage=1.826s mem=56384KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   25.1125    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  26183  49218  3572/3249/375    1858/246    28  140   54.44)
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 0 := 0&0
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 288230376151711744 := 288511851128422400 >>l 6
(smt.stats   13   1585  27998  54097  3601/3260/376    2042/271    29  148   54.92)
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 144115188075855872 := 144115188075855872&144115188075855872
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 432345564227567616 := 9223372036854777856 >>l 8
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 144115188075855872 := 288230376151711713&144115188075855872
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 288230376151711713 := 9223372036854773760 >>l 8
band: (band[58] (lshr[64] (* 64 #104) (mod #351 64)) (if (= #650 63) 36893488147419103232 (if #652 18446744073709551616 #776))) 144115188075855872 := 148618787703226370&144115188075855872
lshr: (lshr[64] (* 64 (bv2int %0)) (mod (+ 6 #105 #350) 64)) 148618787703226370 := 288230376151711808 >>l 8
(smt.stats   14   1732  29603  56753  3721/3287/377    2321/296    30  150   55.11)
(sat.ddfw       1      1   22.4723    220001      1078          6            1       23)
(smt.stats   15   1833  31089  62771  3988/3472/382    2530/296    30  150   55.24)
(smt.stats   16   1944  32276  66244  4016/3687/382    2705/309    31  151   55.24)
ramon: poll                 wall=3.000s usage=2.767s mem=57684KiB load=0.94 rootload=0.94
(smt.stats   17   2066  34969  72288  4031/3703/383    3181/490    32  158   55.33)
(smt.stats   18   2200  38572  79213  4151/3713/383    3466/494    32  158   55.43)
(sat.ddfw       1      1   19.7183    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.739s mem=57720KiB load=0.97 rootload=0.97
(smt.stats   19   2347  41088  85540  4350/3842/383    3897/497    32  158   55.62)
(sat.ddfw       1      1   17.8174    370001      1813          8            1       38)
(smt.stats   20   2513  44250  96278  4624/4291/389    4562/605    33  158   55.82)
(smt.stats   21   2614  47251 106982  4632/4306/389    4733/605    33  158   55.82)
ramon: poll                 wall=5.000s usage=4.740s mem=58452KiB load=1.00 rootload=1.00
(smt.stats   22   2725  51331 117964  4717/4318/389    4929/694    34  163   55.91)
(sat.ddfw       1      1   16.3369    460001      2254          9            1       47)
(smt.stats   23   2847  58799 140070  4892/4505/390    5387/731    35  167   56.01)
ramon: poll                 wall=6.000s usage=5.737s mem=58588KiB load=1.00 rootload=1.00
(smt.stats   24   2981  63784 153995  4969/4635/391    6112/749    36  170   56.29)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3128  66821 165572  5018/4687/392    6523/1074    37  170   56.29)
(sat.ddfw       1      1   15.0625    560001      2745         10            1       57)
(smt.stats   26   3289  69812 178711  5087/4721/394    6861/1155    38  180   56.38)
ramon: poll                 wall=7.003s usage=6.783s mem=58776KiB load=1.04 rootload=1.04
(smt.stats   27   3466  73212 194060  5188/4782/394    7251/1155    38  180   56.48)
(smt.stats   28   3567  75838 203717  5230/4859/394    7458/1158    38  180   56.48)
(smt.stats   29   3678  78016 210704  5320/4911/394    7597/1158    38  180   56.48)
(sat.ddfw       1      1   13.9435    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.821s mem=58964KiB load=1.04 rootload=1.04
(smt.stats   30   3800  82023 221557  5343/5000/394    7893/1158    38  180   56.58)
(smt.stats   31   3934  85464 232631  5410/5011/394    8152/1160    38  180   56.67)
(smt.stats   32   4081  91363 253064  5425/5093/395    8472/1343    39  184   56.77)
(smt.stats   33   4242  96543 268061  5454/5121/395    8727/1343    39  184   56.93)
(smt.stats   34   4419 102219 283892  5456/5123/399    9027/1472    40  193   57.03)
ramon: poll                 wall=9.000s usage=8.817s mem=59348KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.9969    790001      3872         12            1       80)
(smt.stats   35   4613 106392 296197  5545/5125/399    9302/1508    41  213   57.03)
(smt.stats   36   4714 108923 304938  5572/5217/399    9434/1508    41  213   57.03)
(smt.stats   37   4825 110998 312410  5701/5292/399    9551/1508    41  213   57.16)
ramon: poll                 wall=10.000s usage=9.818s mem=59552KiB load=1.00 rootload=1.00
(smt.stats   38   4947 114287 325643  5786/5370/399    9743/1510    41  213   57.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 464)
(smt.stats   39   5081 117224 342277  5850/5482/400    9514/1595    42  213   57.16)
(sat.ddfw       1      1   12.1689    920001      4509         13            1       93)
(smt.stats   40   5228 120371 355833  5986/5528/400    9730/1595    42  213   57.25)
ramon: poll                 wall=11.000s usage=10.861s mem=59624KiB load=1.04 rootload=1.04
(smt.stats   41   5389 124491 375075  6032/5662/400    9965/1595    42  213   57.35)
(smt.stats   42   5566 127415 392300  6086/5705/400   10247/1595    42  213   57.35)
ramon: poll                 wall=12.000s usage=11.859s mem=59900KiB load=1.00 rootload=1.00
(smt.stats   43   5760 133141 418092  6189/5780/401   10814/1652    43  214   57.44)
(sat.ddfw       1      1   11.4202   1060001      5196         14            1      108)
(smt.stats   44   5973 141425 442863  6254/5915/402   11372/1842    44  215   57.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6074 145452 450785  6314/5922/402   11536/1843    44  215   57.79)
ramon: poll                 wall=13.000s usage=12.860s mem=60368KiB load=1.00 rootload=1.00
(smt.stats   46   6185 149327 457984  6377/5986/402   11667/1847    44  215   57.88)
(smt.stats   47   6307 153307 471495  6505/6062/402   11888/1847    44  215   57.88)
(smt.stats   48   6441 156029 491848  6630/6212/402   12204/1848    44  215   57.98)
(sat.ddfw       1      1   10.7635   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.861s mem=60544KiB load=1.00 rootload=1.00
(smt.stats   49   6588 160821 506419  6676/6303/403   12882/1938    45  219   58.07)
ramon: poll                 wall=15.000s usage=14.860s mem=60580KiB load=1.00 rootload=1.00
(smt.stats   50   6749 166673 523712  6868/6370/403   13279/1939    45  219   58.17)
(smt.stats   51   6926 171470 547382  6894/6530/403   13675/1939    45  219   58.23)
(sat.ddfw       1      1   10.1723   1370001      6715         16            1      139)
(smt.stats   52   7120 174910 562502  6970/6557/403   14002/1939    45  219   58.32)
ramon: poll                 wall=16.000s usage=15.860s mem=60832KiB load=1.00 rootload=1.00
(smt.stats   53   7333 177481 589641  7039/6652/403   14281/1939    45  219   58.42)
(smt.stats   54   7567 188107 601772  7153/6710/403   14607/1939    45  219   58.42)
(smt.stats   55   7668 191644 608480  7182/6831/403   14716/1939    45  219   58.42)
ramon: poll                 wall=17.000s usage=16.859s mem=60964KiB load=1.00 rootload=1.00
(smt.stats   56   7779 196503 627446  7214/6855/403   14861/1939    45  219   58.42)
(smt.stats   57   7901 199651 640016  7232/6887/403   14982/1939    45  219   58.42)
(smt.stats   58   8035 202503 647932  7240/6898/403   15135/1939    45  219   58.42)
(smt.stats   59   8182 205800 654828  7274/6911/403   15289/1940    45  219   58.51)
(sat.ddfw       1      1   9.64867   1540001      7549         17            1      156)
(smt.stats   60   8343 211025 665396  7365/6941/403   15461/1942    45  219   58.90)
ramon: poll                 wall=18.000s usage=17.856s mem=61176KiB load=1.00 rootload=0.99
(smt.stats   61   8520 216460 678432  7417/7035/404   15663/2224    46  219   58.99)
(smt.stats   62   8714 224010 691819  7629/7090/404   15891/2227    46  219   58.99)
ramon: poll                 wall=19.000s usage=18.857s mem=61228KiB load=1.00 rootload=1.00
(smt.stats   63   8927 232824 714500  7759/7345/404   16133/2229    46  219   59.09)
(smt.stats   64   9161 236031 740920  7771/7427/404   16544/2229    46  219   59.19)
(sat.ddfw       1      1    9.1645   1720001      8431         18            1      174)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9418 242243 759931  7786/7442/404   16882/2229    46  219   59.19)
(smt.stats   66   9519 244090 771153  7789/7445/404   17177/2229    46  219   59.39)
ramon: poll                 wall=20.003s usage=19.862s mem=61696KiB load=1.00 rootload=1.01
ramon: end                  Fri Nov  1 21:34:05 2024
ramon: root.execname        z3
ramon: root.utime           19.850s
ramon: root.stime           0.000s
ramon: group.total          19.864s
ramon: group.utime          19.856s
ramon: group.stime          0.008s
ramon: group.mempeak        61952KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              0.99
