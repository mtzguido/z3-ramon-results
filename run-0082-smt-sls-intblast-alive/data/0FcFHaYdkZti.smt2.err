ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:26:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29638 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0FcFHaYdkZti.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             584340
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4639   1086  1232/1090/91      97/13     3   13   51.95)
(smt.stats    1    202   5805   2402  1835/1648/94     192/14     5   17   52.15)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 11 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 10 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&47
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&47
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&46
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&19
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&32
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&19
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&32
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&128
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&128
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&59
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&58
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&56
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&59
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&128
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&32
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&32
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&40
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&40
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   66.6667     10000        49          0            1        2)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&40
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&40
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&34
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&34
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&42
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 34 := 2047&42
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&65
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&65
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&65
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&33
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9007199254740993 := 11 << 11
(smt.stats    2    313   7268   4196  1998/1796/209     334/25     6   39   52.64)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9007199254740993 := 11 << 11
(smt.stats    3    414   8588   6362  2037/1833/219     429/39     8   57   52.74)
(smt.stats    4    525  10013  10010  2526/2277/234     543/70    10   75   53.04)
(sat.ddfw       1      1   35.3392     20001        98          1            1        3)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 4 := 2 << 2
(smt.stats    5    647  15653  16729  2619/2350/237     674/74    11   95   53.26)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 4 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 2 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 2 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 7 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 2 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 2 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 64 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 128 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 128 := 2 << 2
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    749  16981  20079  2694/2416/269     843/88    12  107   53.36)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2 := 3&8
(smt.stats    7    860  21839  27964  2756/2468/271    1009/102    13  110   53.47)
(sat.ddfw       1      1   38.0952     40001       196          2            1        5)
(smt.stats    8    982  25345  34213  2783/2489/271    1195/102    13  110   53.58)
(smt.stats    9   1116  31075  42053  2798/2502/289    1393/117    14  112   53.71)
(smt.stats   10   1217  35327  49374  2808/2515/290    1554/169    16  132   53.92)
(smt.stats   11   1328  36163  54835  2822/2527/292    1737/178    17  135   53.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  38791  60706  2829/2534/293    1909/178    17  135   53.92)
(sat.ddfw       1      1   34.9243     70001       343          3            1        8)
ramon: poll                 wall=1.003s usage=0.790s mem=56124KiB load=0.79 rootload=0.78
(smt.stats   13   1585  44297  70488  2845/2550/294    2067/196    19  144   54.06)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&512
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 512 := 4503599627370496 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&512
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 512 := 4503599627370496 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&384
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 384 := 2251799813685275 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&384
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 384 := 2251799813685275 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 641 := 160 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 320 := 160 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 320&1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 320 := 160 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 320&1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 157 := 160 << 1
(smt.stats   14   1732  46912  76812  2881/2582/306    2250/201    20  144   54.55)
(smt.stats   15   1833  50087  84042  2925/2617/306    2364/202    20  144   54.55)
(sat.ddfw       1      1   31.5457    110001       539          4            1       12)
(smt.stats   16   1944  53747  93369  2943/2640/308    2538/212    22  150   54.55)
(smt.stats   17   2066  56223  98230  2967/2664/309    2713/213    22  150   54.64)
(smt.stats   18   2200  60192 110847  2975/2672/309    2846/244    23  160   54.64)
(sat.ddfw       1      1   28.2161    160000       784          5            1       17)
(smt.stats   19   2347  63624 116423  3041/2709/311    3135/255    24  168   54.83)
ramon: poll                 wall=2.000s usage=1.789s mem=57052KiB load=1.00 rootload=1.00
(smt.stats   20   2508  66587 123258  3105/2800/315    3460/267    25  172   55.02)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 36 := 63&9007199254740977
(smt.stats   21   2609  70662 134302  3145/2836/317    3658/308    26  182   55.12)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 45 := 63&9007199254740989
(sat.ddfw       1      1   25.2955    220001      1078          6            1       23)
(smt.stats   22   2720  72908 146005  3243/2857/317    3925/312    26  182   55.23)
(smt.stats   23   2842  75861 157592  3400/3009/319    4340/322    27  183   55.32)
ramon: poll                 wall=3.000s usage=2.789s mem=57708KiB load=1.00 rootload=1.00
(smt.stats   24   2976  79039 164984  3536/3107/319    4746/354    28  194   55.32)
(sat.ddfw       1      1   22.7939    290001      1421          7            1       30)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 25 := 63&9007199254740829
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 25 := 63&9007199254740829
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 25 := 63&9007199254740829
(smt.stats   25   3123  84110 178287  3608/3247/319    5424/358    28  194   55.43)
(smt.stats   26   3284  90102 189472  3634/3324/327    5649/471    29  195   55.55)
(smt.stats   27   3461  97146 212086  3688/3382/330    6167/521    31  201   55.71)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&9007199254740990
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 9007199254740990&1
(smt.stats   28   3562  99129 217782  3716/3404/331    6555/521    31  201   55.81)
(smt.stats   29   3673 103755 233311  3728/3418/332    6615/742    32  382   55.81)
(sat.ddfw       1      1   20.6772    370001      1813          8            1       38)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 20 := 63&4503599627370448
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 16 := 63&4503599627370448
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 4503599627370448 := 4503599627370448 << 6
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 16 := 63&4503599627370448
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 4503599627370448 := 4503599627370448 << 6
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 16 := 63&4503599627370448
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 4503599627370448 := 4503599627370448 << 6
ramon: poll                 wall=4.000s usage=3.788s mem=58004KiB load=1.00 rootload=1.00
(smt.stats   30   3795 107465 244100  3784/3419/332    6828/742    32  382   55.90)
(smt.stats   31   3929 109267 249033  4072/3496/337    7203/745    32  382   56.10)
(sat.ddfw       1      1   18.8838    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076 113278 260367  4103/3791/337    7636/745    32  382   56.10)
ramon: poll                 wall=5.000s usage=4.788s mem=58624KiB load=1.00 rootload=1.00
(smt.stats   33   4237 120323 275654  4108/3797/339    7988/832    33  383   56.37)
(smt.stats   34   4414 127493 295018  4199/3808/339    8531/862    34  405   56.54)
(smt.stats   35   4608 137207 322910  4213/3900/339    9049/862    34  405   56.54)
(smt.stats   36   4709 145113 348336  4230/3913/339    9203/862    34  405   56.78)
(sat.ddfw       1      1    17.343    560001      2745         10            1       57)
(smt.stats   37   4820 149396 359442  4275/3924/339    9505/866    34  405   56.78)
ramon: poll                 wall=6.000s usage=5.788s mem=58920KiB load=1.00 rootload=1.00
(smt.stats   38   4942 152936 371395  4302/3989/344    9874/1038    35  424   56.87)
(smt.delete-inactive-clauses  :num-deleted-clauses 397)
(smt.stats   39   5076 156123 380873  4310/3997/344    9848/1038    35  424   56.87)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5223 162186 409422  4312/3999/344   10044/1038    35  424   56.87)
(smt.stats   41   5384 169366 439870  4315/4002/344   10330/1112    36  492   56.99)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 7&9007199254740224
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9007199254740224 := 4503599627370498 << 3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 7&9007199254740224
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9007199254740224 := 4503599627370498 << 3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 7&9007199254740224
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 36028797018963200 := 4503599627370498 << 3
(smt.stats   42   5561 172537 451382  4399/4003/344   10810/1113    36  492   57.08)
(sat.ddfw       1      1   16.0093    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.788s mem=59228KiB load=1.00 rootload=0.99
(smt.stats   43   5755 176674 476215  4738/4133/349   11366/1174    37  493   57.08)
(smt.stats   44   5968 180620 488482  4775/4450/349   11748/1187    38  493   57.18)
(smt.stats   45   6069 184602 497887  4786/4468/349   12058/1187    38  493   57.18)
(smt.stats   46   6180 188530 509827  4833/4482/350   12334/1256    39  493   57.27)
ramon: poll                 wall=8.000s usage=7.786s mem=59552KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.8588    790001      3872         12            1       80)
(smt.stats   47   6302 193191 521308  4971/4594/351   12707/1259    39  493   57.47)
(smt.stats   48   6436 195690 528207  5046/4689/351   13323/1259    39  493   57.47)
(smt.stats   49   6583 200306 542949  5066/4752/351   14049/1259    39  493   57.47)
ramon: poll                 wall=9.000s usage=8.786s mem=59860KiB load=1.00 rootload=1.00
(smt.stats   50   6744 206142 575456  5073/4759/354   14573/1421    40  493   57.57)
(sat.ddfw       1      1   13.8667    920001      4509         13            1       93)
(smt.stats   51   6921 212807 614560  5076/4762/354   15197/1421    40  493   57.99)
(smt.stats   52   7115 219411 651007  5085/4766/354   15649/1544    41  498   58.08)
(smt.stats   53   7328 225997 678617  5126/4775/354   16305/1553    41  498   58.18)
ramon: poll                 wall=10.000s usage=9.786s mem=60236KiB load=1.00 rootload=1.00
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2251799813685240 := 2251799813685247&9007199254740800
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2251799813685240 := 2251799813685247&9007199254740736
(smt.stats   54   7562 231236 697890  5244/4820/354   17328/1556    41  498   58.37)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2251799813684966 := 2251799813685247&9007199254740326
(smt.stats   55   7663 234075 711392  5296/4951/354   17719/1558    41  498   58.47)
(sat.ddfw       1      1   12.9942   1060001      5196         14            1      108)
(smt.stats   56   7774 236551 725117  5389/5016/359   18179/1748    42  499   58.56)
ramon: poll                 wall=11.003s usage=10.788s mem=61136KiB load=1.00 rootload=1.01
(smt.stats   57   7896 239280 736409  5722/5105/359   18386/1748    42  499   59.27)
(smt.stats   58   8030 242524 750943  5729/5416/359   18977/1748    42  499   59.27)
(smt.stats   59   8177 245989 762452  5829/5418/359   19317/1841    43  499   59.37)
ramon: poll                 wall=12.003s usage=11.886s mem=62056KiB load=1.10 rootload=1.09
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8338 249239 783327  6047/5518/359   19912/1842    43  499   59.56)
(sat.ddfw       1      1     12.29   1210001      5931         15            1      123)
(smt.stats   61   8515 251303 794110  6185/5745/359   20368/1842    43  499   59.65)
ramon: poll                 wall=13.000s usage=12.886s mem=62092KiB load=1.00 rootload=1.00
(smt.stats   62   8709 253997 805920  6475/5962/359   20862/1843    43  499   59.65)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875787440 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875788944 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2251799813683600 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875789072 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875787536 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875787536 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875787536 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536872208 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536872720 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536872208 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536870672 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536870672 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536870672 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536870672 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1808 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1808 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1808 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1808 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 5904 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 7952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 7952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 16144 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 12048 := 4503599627370495&9007199254740752
(smt.stats   63   8922 258282 836025  6852/6491/452   21616/1950    44  501   60.07)
(smt.stats   64   9156 265014 856254  6892/6555/458   22406/1953    44  501   60.26)
(sat.ddfw       1      1   11.5841   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=13.885s mem=62632KiB load=1.00 rootload=1.00
(smt.stats   65   9413 280240 919403  6915/6573/458   23546/1955    44  501   60.36)
(smt.stats   66   9514 282121 931159  6906/6593/460   24455/2224    45  531   60.45)
(smt.stats   67   9625 289386 954754  6955/6630/460   24968/2224    45  531   60.55)
ramon: poll                 wall=15.000s usage=14.882s mem=62972KiB load=1.00 rootload=1.00
(smt.stats   68   9747 295171 980378  7037/6631/460   25640/2225    45  531   60.64)
(sat.ddfw       1      1   10.9663   1540001      7549         17            1      156)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   69   9881 300150 1000221  7130/6714/460   26065/2496    46  533   60.74)
ramon: poll                 wall=16.000s usage=15.883s mem=63452KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 3959)
(smt.stats   70  10028 303660 1017608  7239/6867/460   22977/2498    46  533   60.84)
(smt.stats   71  10189 307211 1033671  7548/6935/460   23370/2500    46  533   60.84)
ramon: poll                 wall=17.000s usage=16.882s mem=63492KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.4179   1720001      8431         18            1      174)
(smt.stats   72  10366 310887 1057106  7928/7266/460   23979/2501    46  533   61.03)
ramon: poll                 wall=18.000s usage=17.882s mem=63720KiB load=1.00 rootload=1.00
(smt.stats   73  10560 314814 1084845  8325/7630/460   24655/2505    46  533   61.84)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1125900980597192 := 2251799813685247&2251799813685512
(smt.stats   74  10773 317408 1103871  8795/8039/460   25155/2506    46  533   61.93)
ramon: poll                 wall=19.000s usage=18.882s mem=64020KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    9.9253   1910001      9362         19            1      193)
(smt.stats   75  11007 319327 1113609  9272/8489/460   25763/2508    46  533   62.21)
ramon: poll                 wall=20.003s usage=19.885s mem=64272KiB load=1.00 rootload=1.00
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875789704 := 2251799813685247&2251799813685512
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875789576 := 2251799813685247&2251799813685512
ramon: end                  Fri Nov  1 21:26:54 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.951s
ramon: group.utime          19.939s
ramon: group.stime          0.012s
ramon: group.mempeak        64784KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              0.99
