ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:22:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41295 MiB
ramon: sys.mem.avail        61383 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Dx876Z7xV8XM.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3749037
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   226/226     0/0  64       0    18.50   0.00)
(sat.stats    101    472    0   226/226   101/28  64       0    18.84   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 277 :time 0.00)
(sat.stats    101    472    0   226/226   101/28  64       0    18.84   0.00)
(sat.stats    101    472    0   226/226   101/28  64       0    18.84   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 354418.84 :time 0.00)
(sat.stats    101    472    0   228/228    37/27  64       0    18.84   0.01)
(sat.stats    168   1624    1   228/228   104/80  64       0    18.94   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    171   1667    2   228/228   107/80  64       0    18.94   0.01)
(sat.stats    174   1701    3   228/228   110/80  64       0    18.94   0.01)
(sat.stats    177   1743    4   228/228   113/80  64       0    18.94   0.01)
(sat.stats    180   1778    5   228/228   116/80  64       0    18.94   0.01)
(sat.stats    183   1807    6   228/228   119/80  64       0    18.94   0.01)
(sat.stats    186   1864    7   228/228   122/80  64       0    18.94   0.01)
(sat.stats    189   1907    8   228/228   125/83  64       0    18.94   0.01)
(sat.stats    193   1949    9   228/228   129/87  64       0    18.94   0.01)
(sat.stats    196   2000   10   228/228   132/90  64       0    18.94   0.01)
(sat.stats    199   2055   11   228/228   135/93  64       0    18.94   0.01)
(sat.stats    202   2116   12   228/228   138/96  64       0    18.94   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    224   2599   13   228/228   160/116  64       0    18.94   0.01)
(sat.stats    314   5883   30   228/228   250/160  64       0    19.04   0.02)
(sat.stats    487   9319   55   234/234   423/229  64       0    19.61   0.17)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 3823 :time 0.00)
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 0&70368744177663
lshr: (lshr[64] (mod (div #77 2) 70368744177664) (mod (+ 46 #698 #700) 64)) 23 := 23 >>l 46
 (sat-cleaner :elim-literals 9 :elim-clauses 73 :cost 4329 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4177 :time 0.00)
 (sat-cleaner :elim-literals 26 :elim-clauses 37 :cost 4464 :time 0.00)
(sat.stats    714  25457   81   406/405   444/197  96       0    20.00   0.28)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5703 :time 0.00)
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #80))) 0 := 1034240 >>l 42
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 0&140737488355296
lshr: (lshr[64] (mod (div #77 2) 70368744177664) (mod (+ 46 #698 #700) 64)) 18446462598732866368 := 295797 >>l 41
 (sat-cleaner :elim-literals 4 :elim-clauses 2 :cost 6639 :time 0.00)
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #80))) 2 := 1 >>l 46
 (sat-cleaner :elim-literals 12 :elim-clauses 1 :cost 8690 :time 0.00)
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 0&140737488355326
lshr: (lshr[64] (mod (div #77 2) 70368744177664) (mod (+ 46 #698 #700) 64)) 281474976705366 := 0 >>l 45
(sat.stats   1208  73074  118  1923/1916   975/346 120       0    20.80   0.56)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11703 :time 0.00)
 (sat-cleaner :elim-literals 54 :elim-clauses 1 :cost 13644 :time 0.00)
(sat.stats   2005  95205  167  4304/4297  1803/760 128       0    21.21   0.77)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 16612 :time 0.00)
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #80))) 8276 := 65970700087729 >>l 38
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 14 := 240&140737488354816
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 1 := 240&140737488354816
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 240&140737488354816
lshr: (lshr[64] (mod (div #77 2) 70368744177664) (mod (+ 46 #698 #700) 64)) 0 := 32985349622979 >>l 37
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 1 := 1&140737488354816
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 1&140737488354816
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 1 := 140737488354816&1
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 3&140737488354816
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 2 := 140737488354816&3
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 11&140737488354816
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 4 := 140737488354816&11
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 11&140737488354816
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 8 := 140737488354816&11
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 19&140737488354816
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 16 := 140737488354816&19
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 35&140737488354816
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 32 := 140737488354816&35
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 67&140737488354816
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 64 := 140737488354816&67
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 2 := 95&140737488354816
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 44 := 95&140737488354816
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 40 := 95&140737488354816
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 32 := 95&140737488354816
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 16 := 95&140737488354816
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 64 := 95&140737488354816
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 32 := 61&140737488354816
ramon: poll                 wall=1.003s usage=0.952s mem=23560KiB load=0.95 rootload=0.94
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 20325 :time 0.00)
 (sat-cleaner :elim-literals 7 :elim-clauses 0 :cost 21177 :time 0.00)
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #80))) 31 := 136339441845684 >>l 45
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 3&140737488355324
lshr: (lshr[64] (mod (div #77 2) 70368744177664) (mod (+ 46 #698 #700) 64)) 13 := 68307159116014 >>l 44
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats     :decisions     :clauses/bin       :units         :memory       )
(sat.stats   2601 119598  184  9298/9286  2512/960 247       0    22.88   1.14)
 (sat-cleaner :elim-literals 27 :elim-clauses 3 :cost 24931 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 31573 :time 0.00)
ramon: poll                 wall=2.000s usage=1.949s mem=25972KiB load=1.00 rootload=0.99
(sat.stats   3597 191395  253 21172/21161  3697/1364 265       0    25.36   2.17)
ramon: poll                 wall=3.000s usage=2.949s mem=26640KiB load=1.00 rootload=1.00
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #80))) 131666517426180 := 116273354637316 >>l 43
ramon: poll                 wall=4.000s usage=3.948s mem=30148KiB load=1.00 rootload=1.00
(sat.stats   6105 240480  320 57546/57534  5503/1961 265       0    30.17   4.17)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 45517 :time 0.00)
ramon: poll                 wall=5.000s usage=4.948s mem=32412KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.948s mem=33600KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.948s mem=34996KiB load=1.00 rootload=1.00
(sat.stats   8204 300209  417 105099/105087  6865/2474 278       0    33.99   7.94)
ramon: poll                 wall=8.000s usage=7.939s mem=35472KiB load=0.99 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 54084 :time 0.00)
ramon: poll                 wall=9.000s usage=8.939s mem=35828KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.939s mem=35848KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.939s mem=35868KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.938s mem=35920KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.938s mem=40640KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.938s mem=44900KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.938s mem=48000KiB load=1.00 rootload=1.00
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #80))) 3 := 105553116266537 >>l 28
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
lshr: (lshr[64] (mod (div #77 2) 70368744177664) (mod (+ 46 #698 #700) 64)) 52776558133268 := 52776558133268 >>l 27
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 73472 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 142336 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 18432 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 352256 := 393216&140737487831040
ramon: poll                 wall=16.003s usage=15.940s mem=49436KiB load=1.00 rootload=1.00
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 245760 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 393216 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 360448 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 262144 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 343168 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 352000 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 98816 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 366592 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 1024 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 4096 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 73728 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 311296 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 32768 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 65536 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 4096 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 640 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 512 := 393216&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 131072 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 262144 := 140737487831040&393216
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 0 := 393216&140737487831040
band: (band[47] (if (= #567 63) 649037107316844230194275186376704 (if #569 324518553658422115097137593188352 #693)) (lshr[64] (mod #444 70368744177664) (mod #701 64))) 65536 := 140737487831040&393216
ramon: poll                 wall=17.000s usage=16.937s mem=50988KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.937s mem=52780KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.936s mem=54096KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 77538 :time 0.00)
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 32768 := 524286&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 16640 := 524286&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 16384 := 524287&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 8704 := 524287&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 8192 := 524287&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 4096 := 524287&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 1152 := 524287&140737487831040
band: (band[47] (lshr[47] (bv2int %0) (+ 47 #462)) (if (= #67 46) 4951760157141450730852319232 (if #466 2475880078570725365426159616 #556))) 1024 := 524287&140737487831040
ramon: poll                 wall=20.000s usage=19.936s mem=55264KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:23:15 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.040s
ramon: group.total          19.991s
ramon: group.utime          19.943s
ramon: group.stime          0.048s
ramon: group.mempeak        55520KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.055s
ramon: loadavg              1.00
