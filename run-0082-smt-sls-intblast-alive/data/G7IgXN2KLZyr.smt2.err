ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:05:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28873 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/G7IgXN2KLZyr.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             720377
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   104.167     10000        49          0            1        2)
(smt.stats    0    101   4303    941  1172/1052/101      91/16     6   25   51.76)
(smt.stats    1    202   7326   2816  1567/1411/105     188/17     8   36   52.16)
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&17592185520127
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&17592185520127
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&17592185520127
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&17592185520127
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&262144
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 63 #579 #583) 64)) 9223354444668993536 := 9223372036854251520 >>l 46
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&262144
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 63 #579 #583) 64)) 9223354444668993536 := 9223372036854251520 >>l 46
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&262144
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 63 #579 #583) 64)) 9223354444668993536 := 9223372036854251520 >>l 46
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&17592185257984
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 63 #579 #583) 64)) 9223372036853989376 := 9223372036854251520 >>l 46
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&262144
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 63 #579 #583) 64)) 9223354444668993536 := 9223372036854251520 >>l 46
(sat.ddfw       1      1   55.8715     20001        98          1            1        3)
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 1 := 131072&1
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&1
lshr: (lshr[44] (bv2int %1) (+ 44 (* 17592186044415 #108))) 17592186044415 := 134217728 >>l 27
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&1
lshr: (lshr[44] (bv2int %1) (+ 44 (* 17592186044415 #108))) 134217729 := 134217728 >>l 27
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&1
lshr: (lshr[44] (bv2int %1) (+ 44 (* 17592186044415 #108))) 134217729 := 134217728 >>l 27
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&1
lshr: (lshr[44] (bv2int %1) (+ 44 (* 17592186044415 #108))) 134217729 := 134217728 >>l 27
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&1
lshr: (lshr[44] (bv2int %1) (+ 44 (* 17592186044415 #108))) 134217729 := 134217728 >>l 27
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 1 := 131072&1
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&1
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 1 := 131072&1
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 2 := 131072&2
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 1 := 131072&1
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&1
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 1 := 131072&1
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&2
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 2 := 131072&2
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&4
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 4 := 131072&4
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&8
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 8 := 131072&8
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&16
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 16 := 131072&16
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&32
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 32 := 131072&32
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&64
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 64 := 131072&64
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&128
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 128 := 131072&128
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&256
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 256 := 131072&256
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&512
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 512 := 131072&512
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&1024
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 1024 := 131072&1024
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&2048
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 2048 := 131072&2048
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&4096
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 4096 := 131072&4096
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&8192
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 8192 := 131072&8192
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&16384
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 16384 := 131072&16384
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&8192
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 8192 := 131072&8192
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&16384
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 16384 := 131072&16384
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&32768
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 32768 := 131072&32768
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&65536
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 65536 := 131072&65536
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 4096 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 1024 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 128 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 256 := 131072&131071
(smt.stats    2    313   8750   5293  2453/2218/213     268/29    13   75   52.75)
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 128 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 1024 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 512 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 80 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 64 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 61 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 64 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 16 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 16 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 16 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 16 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 16 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 32 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 32 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 32 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 1 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 2 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&131071
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 8 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 1 := 131072&4
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 131072&4
band: (band[44] (if (= #112 43) 8796093022208 (if #481 4398046511104 #565)) (lshr[44] (bv2int %1) (+ 44 #568))) 4 := 131072&4
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 1 := 131072&1
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 4 := 131072&4
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 8 := 131072&8
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 16 := 131072&16
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 32 := 131072&32
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 64 := 131072&64
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 128 := 131072&128
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 256 := 131072&256
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 512 := 131072&512
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 1024 := 131072&1024
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 2048 := 131072&2048
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 4096 := 131072&4096
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 8192 := 131072&8192
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 512 := 131072&512
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 8192 := 131072&8192
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 16384 := 131072&16384
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 32768 := 131072&32768
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 65536 := 131072&65536
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 81920 := 131072&81920
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 98304 := 131072&98304
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 81920 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 98304 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 66048 := 131072&131071
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 66048 := 131072&131071
(smt.stats    3    414   9639   7906  2611/2324/336     427/65    15  100   53.04)
(sat.ddfw       1      1   57.6369     40001       196          2            1        5)
(smt.stats    4    525  11019  10648  2672/2433/359     628/89    16  108   53.43)
(sat.ddfw       1      1   50.0835     70001       343          3            1        8)
(smt.stats    5    647  11930  11969  2771/2468/362     798/177    17  109   53.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  13671  14584  2867/2637/365     886/209    19  125   53.52)
(smt.stats    7    859  16270  20845  2944/2700/367    1035/219    20  133   53.62)
(smt.stats    8    981  19159  26366  2977/2723/368    1174/243    21  168   53.74)
(sat.ddfw       1      1   42.9646    110001       539          4            1       12)
(smt.stats    9   1115  24053  32491  2990/2749/371    1330/286    22  170   53.83)
ramon: poll                 wall=1.003s usage=0.978s mem=56012KiB load=0.98 rootload=0.96
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 1&262144
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 63 #579 #583) 64)) 87960930484224 := 9223372036854251520 >>l 63
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 0 := 1&262144
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 63 #579 #583) 64)) 87960930484224 := 9223372036854251520 >>l 63
(smt.stats   10   1216  28042  38457  3008/2758/372    1433/302    24  180   53.95)
(smt.stats   11   1327  30679  41948  3104/2823/378    1614/307    25  181   54.05)
(smt.stats   12   1449  33209  46972  3140/2864/380    1796/338    26  182   54.05)
(sat.ddfw       1      1   36.8452    160000       784          5            1       17)
(smt.stats   13   1583  37517  54323  3196/2898/380    1951/351    27  183   54.24)
(smt.stats   14   1730  41339  63909  3295/2998/381    2106/363    28  183   54.24)
(smt.stats   15   1831  43591  71101  3409/3063/381    2223/365    28  183   54.33)
(smt.stats   16   1942  45250  76386  3473/3213/384    2367/378    29  184   54.33)
(sat.ddfw       1      1   32.2413    220001      1078          6            1       23)
(smt.stats   17   2064  47585  82543  3497/3225/385    2563/379    29  184   54.43)
ramon: poll                 wall=2.000s usage=1.970s mem=56792KiB load=0.99 rootload=0.99
(smt.stats   18   2198  51058  90170  3530/3266/387    2764/432    30  195   54.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   19   2345  55619 101663  3553/3292/389    2987/471    32  205   54.59)
(smt.stats   20   2506  59370 112337  3584/3302/389    3244/473    32  205   54.59)
(sat.ddfw       1      1   28.5831    290001      1421          7            1       30)
(smt.stats   21   2607  62176 119278  3652/3324/389    3408/475    32  205   54.79)
(smt.stats   22   2718  64847 127929  3715/3397/389    3561/478    32  205   54.79)
(smt.stats   23   2840  66428 136636  3724/3463/389    3736/478    32  205   54.88)
(smt.stats   24   2974  68580 144582  3733/3466/391    3987/606    33  207   54.88)
ramon: poll                 wall=3.000s usage=2.965s mem=57256KiB load=0.99 rootload=0.99
(smt.stats   25   3121  71805 156031  3746/3479/393    4231/609    33  207   54.98)
(sat.ddfw       1      1    25.641    370001      1813          8            1       38)
(smt.stats   26   3282  76133 169466  3785/3494/393    4503/643    34  219   54.98)
(smt.stats   27   3459  80314 177890  3903/3549/393    4756/644    34  219   55.07)
(smt.stats   28   3560  81883 184419  3942/3663/393    4883/645    34  219   55.18)
(sat.ddfw       1      1   23.2138    460001      2254          9            1       47)
(smt.stats   29   3671  84508 191396  4034/3710/393    5003/650    34  219   55.18)
ramon: poll                 wall=4.000s usage=3.964s mem=57664KiB load=1.00 rootload=1.00
(smt.stats   30   3793  87839 203435  4134/3785/393    5130/654    34  219   55.18)
(smt.stats   31   3927  91221 212732  4144/3883/393    5313/654    34  219   55.40)
(smt.stats   32   4074  93081 218565  4147/3886/393    5484/654    34  219   55.52)
(smt.stats   33   4235  94979 228757  4173/3892/394    5703/740    35  219   55.52)
(smt.stats   34   4412  98578 242996  4332/3977/394    5996/742    35  219   55.62)
(sat.ddfw       1      1   21.2314    560001      2745         10            1       57)
ramon: poll                 wall=5.000s usage=4.961s mem=58084KiB load=1.00 rootload=1.00
(smt.stats   35   4606 103036 255821  4468/4078/394    6369/751    35  219   55.71)
(smt.stats   36   4707 106151 266922  4551/4198/394    6604/755    35  219   55.81)
(smt.stats   37   4818 109137 281160  4603/4330/396    6821/900    36  220   55.81)
(smt.stats   38   4940 112722 292137  4618/4341/397    7024/901    36  220   55.91)
(sat.ddfw       1      1    19.566    670001      3284         11            1       68)
(smt.delete-inactive-clauses  :num-deleted-clauses 100)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   39   5074 115015 302023  4651/4375/398    7106/927    37  238   55.91)
(smt.stats   40   5221 119856 321891  4662/4383/398    7325/929    37  238   56.01)
(smt.stats   41   5382 122553 337470  4730/4426/399    7523/957    38  245   56.01)
ramon: poll                 wall=6.000s usage=5.965s mem=58472KiB load=1.00 rootload=1.00
(smt.stats   42   5559 126023 355847  4765/4475/399    7704/957    38  245   56.23)
(smt.stats   43   5753 129272 369430  4916/4528/399    7961/984    39  248   56.33)
(smt.stats   44   5966 132256 387761  4948/4646/401    8348/1000    40  258   56.42)
(smt.stats   45   6067 135032 400084  4988/4674/402    8547/1003    40  258   56.52)
(sat.ddfw       1      1   18.0859    790001      3872         12            1       80)
(smt.stats   46   6178 138075 412611  5017/4719/405    8714/1026    41  297   56.52)
(smt.stats   47   6300 141984 423462  5033/4731/405    8952/1026    41  297   56.81)
(smt.stats   48   6434 144343 433050  5033/4731/405    9195/1026    41  297   56.81)
ramon: poll                 wall=7.000s usage=6.959s mem=59028KiB load=0.99 rootload=0.99
(smt.stats   49   6581 147643 446103  5102/4733/408    9371/1052    42  300   56.91)
(smt.stats   50   6742 149767 456033  5234/4824/408    9662/1054    42  300   57.01)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6919 153284 476203  5306/5004/410   10058/1149    43  316   57.11)
(sat.ddfw       1      1   16.8111    920001      4509         13            1       93)
(smt.stats   52   7113 158003 496692  5368/5016/414   10654/1149    43  316   57.20)
ramon: poll                 wall=8.000s usage=7.959s mem=59540KiB load=1.00 rootload=1.00
(smt.stats   53   7326 162428 519538  5456/5086/414   10968/1149    43  316   57.30)
(smt.stats   54   7560 167606 546484  5469/5163/414   11315/1262    44  339   57.30)
(smt.stats   55   7661 169599 557717  5535/5167/414   11432/1266    44  339   57.54)
(smt.stats   56   7772 171524 571297  5562/5256/414   11577/1266    44  339   57.54)
(smt.stats   57   7894 174543 594953  5571/5269/414   11772/1266    44  339   57.54)
(smt.stats   58   8028 177126 606883  5618/5269/414   11984/1268    44  339   57.54)
(sat.ddfw       1      1   15.6951   1060001      5196         14            1      108)
(smt.stats   59   8175 178771 620858  5683/5326/414   12172/1268    44  339   57.74)
ramon: poll                 wall=9.000s usage=8.957s mem=60052KiB load=1.00 rootload=1.00
(smt.stats   60   8336 181811 645636  5710/5397/414   12430/1268    44  339   57.74)
(smt.stats   61   8513 186775 671357  5803/5444/414   12971/1270    44  339   57.83)
(smt.stats   62   8707 195844 709668  5810/5498/415   13376/1375    45  343   57.93)
(smt.stats   63   8920 203572 726961  5820/5508/416   13678/1419    46  347   57.93)
ramon: poll                 wall=10.000s usage=10.077s mem=60344KiB load=1.12 rootload=1.12
(sat.ddfw       1      1   14.9091   1210001      5931         15            1      123)
(smt.stats   64   9154 209812 746370  6023/5510/416   14376/1428    46  347   58.43)
(smt.stats   65   9411 215699 772975  6159/5724/417   15149/1434    46  347   58.63)
(smt.stats   66   9512 217435 781803  6170/5857/417   16122/1523    47  349   58.73)
ramon: poll                 wall=11.000s usage=11.073s mem=60664KiB load=1.00 rootload=0.99
(smt.stats   67   9623 219799 796021  6230/5884/417   16500/1527    47  349   58.82)
(sat.ddfw       1      1   14.0179   1370001      6715         16            1      139)
(smt.stats   68   9745 224110 806458  6279/5922/417   16800/1532    47  349   58.92)
ramon: poll                 wall=12.003s usage=12.106s mem=61084KiB load=1.03 rootload=1.04
(smt.stats   69   9879 228226 824343  6424/6014/417   17313/1538    47  349   58.92)
(smt.delete-inactive-clauses  :num-deleted-clauses 435)
(smt.stats   70  10026 231103 835466  6472/6132/417   17216/1540    47  349   59.01)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10187 235554 860279  6539/6181/417   17721/1545    47  349   59.01)
(sat.ddfw       1      1   13.4867   1540001      7549         17            1      156)
(smt.stats   72  10364 240407 886117  6650/6270/417   18331/1557    47  349   59.11)
(smt.stats   73  10558 243615 897888  6831/6373/417   18860/1562    47  349   59.20)
ramon: poll                 wall=13.003s usage=13.397s mem=61464KiB load=1.29 rootload=1.29
(smt.stats   74  10771 246715 914799  7036/6547/417   19222/1562    47  349   59.30)
(smt.stats   75  11005 249873 941408  7186/6752/417   19691/1563    47  349   59.39)
(smt.stats   76  11262 255706 972339  7228/6885/417   20312/1563    47  349   59.39)
(sat.ddfw       1      1   12.8829   1720001      8431         18            1      174)
ramon: poll                 wall=14.003s usage=14.468s mem=61720KiB load=1.07 rootload=1.07
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11544 260841 1010631  7321/6933/417   21160/1565    47  349   59.58)
(smt.stats   78  11645 262718 1023316  7359/7013/417   21360/1565    47  349   59.58)
(smt.stats   79  11756 264595 1037868  7409/7062/417   21582/1567    47  349   59.58)
(smt.stats   80  11878 267322 1051994  7439/7109/417   21866/1568    47  349   59.58)
band: (band[44] (if (= #298 63) 9223372036854775808 (if #459 4611686018427387904 #456)) (lshr[64] (* 524288 #282) (mod #586 64))) 209 := 16384&4398046773248
(smt.stats   81  12012 270070 1066121  7513/7138/417   22248/1569    47  349   59.68)
(smt.stats   82  12159 271463 1073728  7616/7204/417   22561/1569    47  349   59.68)
ramon: poll                 wall=15.000s usage=15.423s mem=61976KiB load=0.96 rootload=0.95
(smt.stats   83  12320 274962 1083573  7721/7309/417   22834/1572    47  349   59.78)
(smt.stats   84  12497 278404 1098763  7822/7445/417   23389/1573    47  349   59.77)
(sat.ddfw       1      1   12.1421   1910001      9362         19            1      193)
(smt.stats   85  12691 283703 1140452  7847/7520/418   24004/2386    48  351   59.87)
ramon: poll                 wall=16.000s usage=16.422s mem=62536KiB load=1.00 rootload=1.00
(smt.stats   86  12904 287707 1159839  7920/7542/418   24418/2386    48  351   59.87)
(smt.stats   87  13138 294657 1198711  8011/7630/418   25289/2388    48  351   60.06)
(smt.stats   88  13395 300670 1259280  8084/7706/418   25624/2389    48  351   60.06)
ramon: poll                 wall=17.000s usage=17.419s mem=62536KiB load=1.00 rootload=1.00
(smt.stats   89  13677 306625 1286007  8200/7776/418   26232/2390    48  351   60.15)
(sat.ddfw       1      1    11.548   2110001     10343         20            1      214)
(smt.stats   90  13987 316268 1335014  8380/7908/418   27013/2396    48  351   60.84)
(smt.stats   91  14088 318609 1345411  8410/8094/418   27157/2396    48  351   60.94)
ramon: poll                 wall=18.000s usage=18.419s mem=62792KiB load=1.00 rootload=1.00
(smt.stats   92  14199 320660 1362895  8413/8101/418   27533/2396    48  351   61.07)
(smt.stats   93  14321 325057 1392571  8421/8109/418   27850/2396    48  351   61.07)
(smt.stats   94  14455 328474 1422631  8423/8111/418   28308/2396    48  351   61.07)
(smt.stats   95  14602 331844 1440179  8545/8113/418   28563/2399    48  351   61.27)
(sat.ddfw       1      1    11.066   2320001     11372         21            1      235)
ramon: poll                 wall=19.000s usage=19.473s mem=63304KiB load=1.05 rootload=1.05
(smt.stats   96  14763 337809 1473285  8718/8252/418   29166/2406    48  351   61.37)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   97  14940 342476 1496757  8866/8420/418   29580/2408    48  351   61.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
ramon: poll                 wall=20.000s usage=20.573s mem=63780KiB load=1.10 rootload=1.10
ramon: end                  Fri Nov  1 22:05:45 2024
ramon: root.execname        z3
ramon: root.utime           20.550s
ramon: root.stime           0.020s
ramon: group.total          20.583s
ramon: group.utime          20.559s
ramon: group.stime          0.024s
ramon: group.mempeak        64036KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.03
