ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:44:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29251 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1389
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7EKzAcLqBot2.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             646378
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   60.6061     10000        49          0            1        2)
(sat.ddfw       1      1   30.6779     20001        98          1            1        3)
(smt.stats    0    101   4755    483  1198/1013/97     100/14     5   14   52.07)
(sat.ddfw       1      1   31.2989     40001       196          2            1        5)
ramon: poll                 wall=1.000s usage=0.720s mem=54640KiB load=0.72 rootload=0.71
(sat.ddfw       1      1     31.25     70001       343          3            1        8)
(smt.stats    1    202   5084    775  1984/1774/98     207/15     6   16   52.46)
(smt.stats    2    313   6742   1696  2235/2051/104     340/29     8   26   52.46)
(sat.ddfw       1      1   29.0065    110001       539          4            1       12)
(smt.stats    3    414   8227   2362  2406/2128/104     450/30     8   26   52.46)
(smt.stats    4    525   8583   4587  2717/2265/109     574/69     9   29   52.57)
(smt.stats    5    647   9887   6902  2882/2628/112     710/115    11   35   52.67)
(sat.ddfw       1      1   26.1775    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.707s mem=55048KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  10320   7751  3009/2706/112     827/116    11   35   52.77)
(smt.stats    7    859  11138   8826  3137/2836/112     969/119    11   35   52.77)
(smt.stats    8    981  11995  10706  3239/2963/112    1100/122    11   35   52.77)
(smt.stats    9   1115  13825  14048  3318/3044/112    1240/122    11   35   52.88)
(sat.ddfw       1      1   23.1396    220001      1078          6            1       23)
(smt.stats   10   1216  15826  17051  3390/3166/113    1366/192    12   38   52.88)
(smt.stats   11   1327  17676  18175  3415/3189/113    1476/192    12   38   52.98)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  20526  20579  3420/3196/114    1603/203    13   39   52.98)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1087&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1087&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1092&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1092&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1089 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1936&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1090&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1092&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1096&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1104&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1120&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1104&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1104&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1120&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1120&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1088 := 1152&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1152 := 1154&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1152 := 1920&1099511627775
(smt.stats   13   1583  22110  23348  3494/3203/122    1763/248    14   45   53.42)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1086 := 1087&1099511627775
(smt.stats   14   1730  22586  23743  3491/3264/192    1913/253    15   59   53.52)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 64 := 1088&1099511627775
ramon: poll                 wall=3.000s usage=2.683s mem=55820KiB load=0.98 rootload=0.98
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 64 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 64 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 960 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 892 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 64 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1088&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 32&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 128&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 128&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 256&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 512&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1028&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1048 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1040 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1024 := 1056&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1056 := 1060&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 260 := 512&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 4 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 260 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 260 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 260 := 516&1099511627775
(smt.stats   15   1831  25053  31697  4103/3849/267    2076/315    17   83   53.71)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 516 := 580&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 60 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 36 := 516&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 516 := 518&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 542 := 646&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 534 := 646&1099511627775
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 518 := 646&1099511627775
(smt.stats   16   1942  27223  39257  4199/3972/285    2368/363    19   92   53.93)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16384&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 32768&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16384&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
(smt.stats   17   2064  30779  45596  4257/3982/286    2594/513    20   94   54.05)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 6144&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4096&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 10240&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8192&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16384&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 65536&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 131072&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 262144&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 524288&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 524288&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 1048576&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 524288&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 1048576&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 2097152&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 1048576&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4194304&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4194304&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8388608&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 8388608&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4194304&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16777216&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 4194304&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16777216&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 33554432&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16777216&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 33554432&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 67108864&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 16777216&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 67108864&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 134217728&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 134217728&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 268435456&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 67108864&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 134217728&2199023255551
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 268435456&2199023255551
(sat.ddfw       1      1   21.0273    290001      1421          7            1       30)
(smt.stats   18   2198  32450  53024  4419/4021/326    2858/517    20   94   55.22)
(smt.stats   19   2345  33075  53970  4695/4328/471    3220/562    21  131   55.31)
(smt.stats   20   2506  37454  71016  5100/4867/476    4167/778    22  133   55.70)
ramon: poll                 wall=4.000s usage=3.682s mem=58236KiB load=1.00 rootload=0.99
(smt.stats   21   2607  43338  95159  5336/4952/476    5033/1241    23  140   55.90)
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 1 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 9 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 17 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 17 := 4026662913&4398046511103
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 9 := 4026662913&4398046511103
(sat.ddfw       1      1   19.1847    370001      1813          8            1       38)
(smt.stats   22   2718  48249 113679  5475/5217/500    5417/1686    25  153   56.10)
(smt.stats   23   2840  52146 126639  5632/5275/500    5655/1690    25  153   56.19)
(smt.stats   24   2974  55917 136831  5854/5607/502    6646/1732    26  154   56.29)
(smt.stats   25   3121  69299 174833  5858/5609/504    6880/2149    27  159   56.49)
(smt.stats   26   3282  80574 212074  5966/5643/506    7406/2473    29  174   56.59)
ramon: poll                 wall=5.000s usage=4.814s mem=59024KiB load=1.13 rootload=1.13
(sat.ddfw       1      1   17.6022    460001      2254          9            1       47)
(smt.stats   27   3459  86739 237862  6385/6138/510    8674/2689    30  175   56.87)
(smt.stats   28   3560  92897 258120  6457/6154/512    8866/2696    30  175   57.09)
ramon: poll                 wall=6.002s usage=5.947s mem=59316KiB load=1.13 rootload=1.13
(sat.ddfw       1      1    16.742    560001      2745         10            1       57)
(smt.stats   29   3671  95769 266681  6589/6342/514    9113/2846    31  191   57.18)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   30   3793 101701 295694  6732/6407/527   10195/2942    33  199   57.37)
(smt.stats   31   3927 105013 313841  6827/6581/531   10659/3439    34  239   57.37)
ramon: poll                 wall=7.000s usage=7.010s mem=60352KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   15.6383    670001      3284         11            1       68)
(smt.stats   32   4075 110140 326102  7001/6745/532   11136/3713    35  244   57.46)
(smt.stats   33   4236 113951 358719  7140/6892/533   11388/3936    36  246   57.55)
(smt.stats   34   4413 121437 430135  7142/6896/533   11750/3936    36  246   57.65)
ramon: poll                 wall=8.000s usage=8.006s mem=60164KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   14.4805    790001      3872         12            1       80)
(smt.stats   35   4607 126809 456372  7419/6916/534   12280/4138    37  252   57.76)
ramon: poll                 wall=9.000s usage=9.005s mem=60200KiB load=1.00 rootload=1.00
(smt.stats   36   4708 129446 476439  7719/7269/534   12571/4147    37  252   57.85)
(smt.stats   37   4819 132954 496695  8050/7524/535   12884/4326    38  266   57.85)
(sat.ddfw       1      1   13.4799    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=10.088s mem=60372KiB load=1.08 rootload=1.08
(smt.stats   38   4941 135760 511258  8280/8022/539   13484/4369    39  271   57.96)
(smt.delete-inactive-clauses  :num-deleted-clauses 82)
(smt.stats   39   5075 141290 535394  8349/8093/546   13837/4431    40  281   58.49)
(smt.stats   40   5222 145148 553022  8433/8128/546   14350/4564    41  319   58.70)
ramon: poll                 wall=11.002s usage=11.169s mem=60860KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   12.7714   1060001      5196         14            1      108)
(smt.stats   41   5383 148290 573438  8826/8315/546   14928/4570    41  319   58.79)
ramon: poll                 wall=12.000s usage=12.166s mem=61272KiB load=1.00 rootload=1.00
(smt.stats   42   5560 156046 616115  9034/8753/550   15740/4967    42  328   58.98)
(sat.ddfw       1      1   12.1193   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=13.245s mem=61540KiB load=1.08 rootload=1.07
(smt.stats   43   5754 163005 653890  9322/8802/550   16442/5346    43  354   59.08)
(smt.stats   44   5967 170998 686584  9736/9482/551   16921/5614    44  358   59.18)
(smt.stats   45   6068 175142 711228  9774/9487/553   17679/5617    44  358   59.27)
ramon: poll                 wall=14.000s usage=14.245s mem=61872KiB load=1.00 rootload=1.00
band: (band[43] (shl[64] (bv2int %0) (mod #326 64)) (if (= #719 63) 0 (if #721 1 #864))) 0 := 2048&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #325) 64)) 2048 := 603 << 1
(smt.stats   46   6179 180051 715638  9798/9532/553   17787/5855    45  368   59.27)
(sat.ddfw       1      1    11.396   1370001      6715         16            1      139)
(smt.stats   47   6301 183506 739377  9839/9558/558   17970/5855    45  368   59.43)
(smt.stats   48   6435 185448 748452  9977/9664/561   18265/5865    46  369   59.65)
(smt.stats   49   6582 187440 770720 10139/9853/563   18504/5865    46  369   59.75)
ramon: poll                 wall=15.000s usage=15.245s mem=62252KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   50   6743 194969 830268 10342/10022/567   19214/5909    47  410   59.94)
(smt.stats   51   6920 203174 877513 10351/10031/570   19775/6175    49  436   60.04)
(smt.stats   52   7114 209865 894642 10409/10055/572   20259/6179    49  436   60.56)
(sat.ddfw       1      1   10.7643   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=16.245s mem=62600KiB load=1.00 rootload=1.00
(smt.stats   53   7327 218782 924669 10558/10127/572   20606/6292    50  467   60.66)
ramon: poll                 wall=17.000s usage=17.244s mem=63400KiB load=1.00 rootload=1.00
(smt.stats   54   7561 232651 987132 10597/10277/580   21609/6383    51  472   61.04)
(smt.stats   55   7662 237639 1000355 10636/10310/581   21823/6581    52  513   61.04)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   56   7773 243869 1025863 10803/10428/582   22015/6588    52  513   61.04)
(sat.ddfw       1      1   10.1989   1720001      8431         18            1      174)
(smt.stats   57   7895 250854 1055432 10955/10632/584   22305/6618    54  536   61.16)
ramon: poll                 wall=18.000s usage=18.242s mem=63416KiB load=1.00 rootload=1.00
(smt.stats   58   8029 259762 1076876 10975/10650/584   22677/6618    54  536   61.16)
(smt.stats   59   8176 269906 1136051 11078/10699/585   23308/6829    55  554   61.27)
ramon: poll                 wall=19.000s usage=19.285s mem=63772KiB load=1.04 rootload=1.04
(smt.stats   60   8337 277682 1176176 11256/10770/585   23978/6836    55  554   61.46)
(sat.ddfw       1      1   9.71867   1910001      9362         19            1      193)
(smt.stats   61   8514 284890 1205765 11400/10957/585   24691/6838    55  554   61.65)
ramon: poll                 wall=20.000s usage=20.277s mem=64508KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 21:44:35 2024
ramon: root.execname        z3
ramon: root.utime           20.310s
ramon: root.stime           0.020s
ramon: group.total          20.339s
ramon: group.utime          20.319s
ramon: group.stime          0.020s
ramon: group.mempeak        64516KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.01
