ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:52:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40788 MiB
ramon: sys.mem.avail        61708 MiB
ramon: sys.nprocs           1251
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mYvV1DliGWW8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3072899
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   6231    439  1356/1221/98     100/25     6   17   19.26)
(smt.stats    1    202   8560   3835  2132/1922/99     197/25     7   18   19.45)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 285&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 285&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 289&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 288&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4 := 292&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 64 := 384&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 128 := 512&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 128 := 512&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 128 := 640&1023
(smt.stats    2    313   9958   5277  2303/1947/100     365/40     8   19   19.85)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 100 := 390&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 102 := 390&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 23 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 23 := 347&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 19 := 347&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 19 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 19 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 19 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 23 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 23 := 351&1023
(smt.stats    3    414  11531   8113  2406/2198/214     628/116    10   43   19.95)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 384&1
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423872 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 384&1
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423872 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 320&1
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423808 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 320&1
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423808 := 1 << 1
(smt.stats    4    525  12619  10139  2445/2223/225     843/218    11   84   20.34)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 3 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 3 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1 := 2&1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 1 := 2&1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 1 := 2&1
(smt.stats    5    647  14499  13081  2565/2327/247     992/254    13   96   20.54)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 98&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 34 := 98&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 66 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 66 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 66 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 66 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423554 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423554 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 2 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 102 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 102 := 52 << 52
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  17074  17397  2711/2446/259    1163/294    15   98   20.64)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 1 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 2 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 4503599627370495 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 4503599627370494 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 4503599627370492 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 8 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 16 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 32 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 64 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 128 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 256 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 512 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 1024 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 2048 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 4096 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 8192 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 144 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 144 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1024 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 2048 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4096 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8192 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16384 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 32768 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 65536 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 2048 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4096 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8192 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16384 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 32768 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 65536 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 131072 := 238690780250636288&9007199254740991
(smt.stats    7    859  18876  21412  2943/2631/384    1326/307    17  127   21.36)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 64512 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 32768 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 32768 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 2048 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4096 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8192 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16384 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16384 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 5888 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 5632 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 5632 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4608 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8448 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8448 := 238690780250636288&9007199254740991
(smt.stats    8    981  20449  26147  3447/2799/453    1692/406    18  143   21.55)
(smt.stats    9   1115  24083  33928  3526/3225/464    1982/537    21  189   21.74)
(smt.stats   10   1216  30544  47480  3531/3230/465    2130/566    22  208   21.84)
(smt.stats   11   1327  34463  58356  3608/3288/470    2320/591    24  220   22.04)
(smt.stats   12   1449  37933  66345  3656/3335/479    2455/678    27  250   22.52)
(smt.stats   13   1583  43624  79668  3682/3359/482    2812/678    27  250   22.52)
ramon: poll                 wall=1.000s usage=0.993s mem=24116KiB load=0.99 rootload=0.98
(smt.stats   14   1730  48816  93901  3713/3364/482    3078/832    28  265   22.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   15   1831  51618 101912  3819/3402/482    3285/834    28  265   22.63)
(smt.stats   16   1942  54765 110273  3904/3501/482    3721/839    28  265   22.82)
(smt.stats   17   2064  58991 119086  3974/3607/485    4080/919    29  266   22.91)
(smt.stats   18   2198  62988 131502  4066/3740/486    4389/1006    31  270   22.91)
ramon: poll                 wall=2.000s usage=1.993s mem=24552KiB load=1.00 rootload=1.00
(smt.stats   19   2345  68502 144156  4204/3750/486    4732/1012    31  270   23.10)
(smt.stats   20   2506  73071 157060  4277/3955/490    5180/1172    32  270   23.62)
(smt.stats   21   2607  77406 171661  4279/3957/490    5335/1172    32  270   23.62)
(smt.stats   22   2718  80611 184912  4286/3963/492    5522/1229    33  274   23.62)
(smt.stats   23   2840  86199 201535  4356/4028/495    5791/1248    34  278   23.84)
(smt.stats   24   2974  90817 226698  4383/4061/500    6274/1430    36  280   23.84)
ramon: poll                 wall=3.000s usage=2.993s mem=25320KiB load=1.00 rootload=1.00
(smt.stats   25   3121  98605 247127  4393/4071/500    6494/1430    36  280   23.94)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282 110689 278187  4407/4085/501    6727/1504    38  300   23.94)
(smt.stats   27   3459 118329 300733  4417/4095/501    7002/1504    38  300   24.03)
(smt.stats   28   3560 123053 310493  4523/4172/503    7201/1514    39  314   24.13)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 576460752303423250&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 576460752303423369 := 576460752303423369 << 1
(smt.stats   29   3671 127652 322487  4542/4182/503    7424/1515    39  314   24.13)
(smt.stats   30   3793 131212 335186  4562/4215/505    7588/1529    40  314   24.24)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 7 := 576460752303423371&7
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 7 := 576460752303423371&7
(smt.stats   31   3927 138672 351613  4602/4237/506    7843/1581    41  325   24.24)
(smt.stats   32   4074 143069 367053  4613/4266/513    8209/1581    41  325   24.34)
(smt.stats   33   4235 151769 390926  4631/4274/513    8370/1639    42  375   24.43)
ramon: poll                 wall=4.000s usage=3.993s mem=26052KiB load=1.00 rootload=1.00
(smt.stats   34   4412 156287 400327  4904/4291/513    8663/1645    42  375   24.53)
(smt.stats   35   4606 165563 418744  4938/4591/513    9001/1645    42  375   24.53)
(smt.stats   36   4707 169636 433147  4943/4596/516    9168/1706    43  379   24.82)
(smt.stats   37   4818 173899 448653  4943/4596/516    9301/1706    43  379   24.82)
(smt.stats   38   4940 177063 463992  4948/4601/517    9678/1740    44  385   24.92)
(smt.delete-inactive-clauses  :num-deleted-clauses 18)
(smt.stats   39   5074 180291 475362  5052/4658/518    9931/1790    45  393   24.92)
ramon: poll                 wall=5.000s usage=4.993s mem=26880KiB load=1.00 rootload=1.00
(smt.stats   40   5221 185222 488928  5209/4720/518   10401/1799    45  393   25.11)
(smt.stats   41   5382 189354 501844  5407/5052/520   10903/1900    46  405   25.20)
ramon: poll                 wall=6.000s usage=5.993s mem=26880KiB load=1.00 rootload=1.00
(smt.stats   42   5559 193934 514893  5501/5078/520   11313/1902    46  405   25.30)
ramon: poll                 wall=7.000s usage=6.993s mem=27136KiB load=1.00 rootload=1.00
(smt.stats   43   5753 201066 534997  5829/5368/521   11703/1908    46  405   25.39)
(smt.stats   44   5966 209188 558754  6045/5502/521   12525/2009    47  405   25.58)
ramon: poll                 wall=8.000s usage=7.987s mem=27136KiB load=0.99 rootload=0.99
(smt.stats   45   6067 213183 572207  6155/5714/521   12934/2012    47  405   25.67)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6178 217922 588934  6290/5943/523   13604/2150    48  405   25.86)
ramon: poll                 wall=9.000s usage=8.987s mem=27648KiB load=1.00 rootload=1.00
(smt.stats   47   6300 225490 613408  6363/5947/523   14174/2152    48  405   25.86)
(smt.stats   48   6434 232057 638395  6460/6043/523   14473/2248    49  409   25.86)
(smt.stats   49   6581 236371 657231  6511/6157/531   15100/2314    50  421   25.96)
ramon: poll                 wall=10.000s usage=9.987s mem=27648KiB load=1.00 rootload=1.00
(smt.stats   50   6742 242004 679952  6637/6176/531   15667/2328    50  421   26.05)
(smt.stats   51   6919 248913 712671  6791/6309/531   16402/2516    51  459   26.25)
ramon: poll                 wall=11.000s usage=10.987s mem=27904KiB load=1.00 rootload=1.00
(smt.stats   52   7113 254623 733469  6810/6456/531   16937/2516    51  459   26.34)
(smt.stats   53   7326 265711 783317  6902/6485/534   17784/2804    53  471   26.34)
ramon: poll                 wall=12.000s usage=11.987s mem=28160KiB load=1.00 rootload=1.00
(smt.stats   54   7560 272624 821038  7173/6578/534   18395/2813    53  471   26.53)
(smt.stats   55   7661 276865 849126  7384/6895/534   18708/2824    53  471   26.72)
(smt.stats   56   7772 281011 870255  7404/7048/534   18924/2825    53  471   26.72)
ramon: poll                 wall=13.000s usage=12.987s mem=28416KiB load=1.00 rootload=1.00
(smt.stats   57   7894 285691 891029  7444/7080/534   19467/2827    53  471   26.82)
(smt.stats   58   8028 289671 913147  7466/7104/534   19824/2827    53  471   26.82)
ramon: poll                 wall=14.000s usage=13.987s mem=28672KiB load=1.00 rootload=1.00
(smt.stats   59   8175 296104 930784  7608/7122/534   20308/2833    53  471   27.01)
ramon: poll                 wall=15.000s usage=14.987s mem=28672KiB load=1.00 rootload=1.00
(smt.stats   60   8336 301292 954786  7975/7388/534   20927/2833    53  471   27.20)
ramon: poll                 wall=16.000s usage=15.987s mem=28928KiB load=1.00 rootload=1.00
(smt.stats   61   8513 304080 966566  8240/7664/534   21926/2834    53  471   27.39)
ramon: poll                 wall=17.000s usage=16.987s mem=29184KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8707 313477 1029548  8552/8039/536   22941/3354    54  477   27.70)
ramon: poll                 wall=18.000s usage=17.986s mem=29440KiB load=1.00 rootload=1.00
(smt.stats   63   8920 321973 1085990  8775/8225/536   23992/3421    55  477   27.70)
ramon: poll                 wall=19.000s usage=18.965s mem=29624KiB load=0.98 rootload=0.97
(smt.stats   64   9154 328528 1119586  8899/8540/538   25182/3682    56  479   27.89)
(smt.stats   65   9411 341261 1158306  8951/8567/538   25726/3684    56  479   28.08)
(smt.stats   66   9512 343622 1168949  8975/8623/538   26439/3885    57  480   28.08)
(smt.stats   67   9623 349346 1196594  9039/8632/538   27020/3888    57  480   28.18)
ramon: poll                 wall=20.000s usage=19.965s mem=30160KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:52:54 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.980s
ramon: group.utime          19.964s
ramon: group.stime          0.016s
ramon: group.mempeak        30416KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
