ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:02:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28246 MiB
ramon: sys.mem.avail        61763 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/HfTFwG7jBINq.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4158134
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1662    340   760/625/113     121/10     4   17   18.89)
(smt.stats    1    202   3252   1063  1160/1055/119     221/21     5   35   18.89)
(smt.stats    2    321   4263   3275  1362/1258/121     390/36     6   36   18.98)
ramon: poll                 wall=1.000s usage=0.919s mem=20092KiB load=0.92 rootload=0.91
(smt.stats    3    422   5130   4782  1426/1313/124     527/50     8   38   19.08)
(smt.stats    4    533   6756   6592  1706/1571/128     653/69    10   46   19.18)
(smt.stats    5    655   7512   7515  1799/1588/128     792/69    10   46   19.37)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    756   8080   8258  2005/1818/129     938/116    11   46   19.37)
(smt.stats    7    867   8390   8680  2145/1941/129    1075/116    11   46   19.46)
ramon: poll                 wall=2.000s usage=1.916s mem=20648KiB load=1.00 rootload=1.00
(smt.stats    8    989   9249  11121  2533/2401/131    1334/160    12   49   19.56)
(smt.stats    9   1123  11123  13143  2615/2407/131    1554/164    12   49   19.56)
(smt.stats   10   1224  12114  14603  2747/2533/131    1724/166    12   49   19.65)
(smt.stats   11   1335  14796  16828  2872/2655/131    1965/167    12   49   19.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1457  17441  19785  2955/2819/134    2202/295    13   49   19.75)
(smt.stats   13   1591  19550  24267  3024/2827/134    2411/296    13   49   19.94)
(smt.stats   14   1738  21213  29769  3163/2909/134    2631/351    14   50   19.94)
ramon: poll                 wall=3.000s usage=2.915s mem=21048KiB load=1.00 rootload=1.00
(smt.stats   15   1839  22463  32975  3276/3063/134    2762/352    14   50   19.94)
(smt.stats   16   1950  23520  35336  3384/3156/134    2906/352    14   50   20.04)
(smt.stats   17   2072  24856  39329  3491/3330/136    3035/361    15   52   20.18)
(smt.stats   18   2206  26301  43043  3605/3377/136    3293/361    15   52   20.18)
(smt.stats   19   2353  27801  46558  3759/3624/137    3544/371    16   54   20.28)
(smt.stats   20   2514  29702  52174  3816/3640/137    3730/372    16   54   20.28)
(smt.stats   21   2615  31087  53242  3895/3696/137    3857/372    16   54   20.45)
(smt.stats   22   2726  33179  56199  3968/3773/137    4003/372    16   54   20.45)
(smt.stats   23   2848  35083  59600  4053/3866/137    4124/372    16   54   20.55)
(smt.stats   24   2982  36356  62714  4081/3924/139    4293/382    17   60   20.55)
(smt.stats   25   3129  38073  65812  4093/3956/139    4444/382    17   60   20.55)
ramon: poll                 wall=4.000s usage=3.911s mem=21792KiB load=1.00 rootload=0.99
(smt.stats   26   3290  39269  71935  4163/3959/139    4742/382    17   60   20.65)
(smt.stats   27   3467  41760  80525  4235/4082/139    5347/382    17   60   20.74)
(smt.stats   28   3568  43017  84665  4264/4109/139    5631/382    17   60   20.74)
(smt.stats   29   3679  44191  87178  4341/4166/139    5833/382    17   60   20.84)
(smt.stats   30   3801  44900  89260  4477/4287/139    6029/384    17   60   20.84)
(smt.stats   31   3935  46475  92689  4550/4357/139    6188/384    17   60   20.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4082  48119  99695  4645/4452/139    6486/385    17   60   20.93)
(smt.stats   33   4243  49427 109506  4692/4522/139    6661/385    17   60   21.17)
(smt.stats   34   4420  51880 116381  4793/4622/140    6955/634    18   60   21.17)
(smt.stats   35   4614  54018 123418  4855/4674/140    7282/634    18   60   21.27)
(smt.stats   36   4715  55832 128057  4896/4743/140    7383/635    18   60   21.27)
ramon: poll                 wall=5.000s usage=4.909s mem=22500KiB load=1.00 rootload=1.00
(smt.stats   37   4826  57098 132175  4988/4788/140    7500/635    18   60   21.27)
(smt.stats   38   4948  58570 137164  5031/4886/142    7619/679    19   64   21.36)
(smt.delete-inactive-clauses  :num-deleted-clauses 98)
(smt.stats   39   5082  62869 144295  5032/4899/142    7654/679    19   64   21.36)
(smt.stats   40   5229  69951 159295  5041/4900/142    7800/679    19   64   21.46)
(smt.stats   41   5390  78585 174113  5063/4916/142    7979/680    19   64   21.94)
(smt.stats   42   5567  82487 181489  5067/4931/142    8171/680    19   64   22.04)
(smt.stats   43   5761  88335 191832  5082/4939/142    8377/680    19   64   22.13)
(smt.stats   44   5974  90110 198647  5091/4954/142    8601/680    19   64   22.23)
(smt.stats   45   6075  91449 201824  5157/4958/142    8900/680    19   64   22.23)
(smt.stats   46   6186  93275 205224  5216/5065/142    9102/680    19   64   22.23)
(smt.stats   47   6308  95820 214555  5281/5086/142    9333/681    19   64   22.32)
(smt.stats   48   6442  96620 216309  5356/5170/142    9650/682    19   64   22.32)
(smt.stats   49   6589  97643 222280  5444/5255/142    9882/683    19   64   22.42)
ramon: poll                 wall=6.000s usage=5.907s mem=23776KiB load=1.00 rootload=1.00
(smt.stats   50   6750  98308 227525  5568/5342/142   10059/683    19   64   22.51)
(smt.stats   51   6927  98661 228766  5753/5573/142   10260/683    19   64   22.51)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions    )
(smt.stats   52   7121 101124 232699  5931/5671/142   10682/683    19   64   22.61)
ramon: poll                 wall=7.000s usage=6.907s mem=23968KiB load=1.00 rootload=1.00
(smt.stats   53   7334 104060 239009  6068/5813/142   10988/683    19   64   22.61)
(smt.stats   54   7568 107469 251017  6118/5969/142   11275/683    19   64   22.71)
(smt.stats   55   7669 108687 253190  6156/6007/142   11418/683    19   64   22.71)
(smt.stats   56   7780 110225 256674  6215/6046/142   11546/685    19   64   22.71)
(smt.stats   57   7902 111486 260279  6269/6089/142   11704/685    19   64   22.80)
(smt.stats   58   8036 112498 262270  6348/6144/142   11846/685    19   64   22.80)
ramon: poll                 wall=8.000s usage=7.907s mem=24172KiB load=1.00 rootload=1.00
(smt.stats   59   8183 113423 265313  6461/6232/142   12052/686    19   64   22.80)
(smt.stats   60   8344 114890 268757  6588/6376/142   12235/687    19   64   22.99)
ramon: poll                 wall=9.000s usage=8.906s mem=24316KiB load=1.00 rootload=1.00
(smt.stats   61   8521 116364 275086  6723/6505/142   12479/687    19   64   22.99)
(smt.stats   62   8715 117775 283829  6845/6600/142   12704/687    19   64   22.99)
ramon: poll                 wall=10.000s usage=9.906s mem=24352KiB load=1.00 rootload=1.00
(smt.stats   63   8928 119268 290088  6966/6733/142   12939/687    19   64   23.09)
(smt.stats   64   9162 121098 298453  7036/6864/142   13210/687    19   64   23.09)
(smt.stats   65   9419 123858 308774  7080/6916/142   13599/687    19   64   23.18)
(smt.stats   66   9520 124714 313594  7097/6948/142   13726/688    19   64   23.18)
(smt.stats   67   9631 125439 315793  7160/6971/142   13865/688    19   64   23.28)
(smt.stats   68   9753 126368 319419  7213/7054/142   14032/688    19   64   23.28)
ramon: poll                 wall=11.000s usage=10.906s mem=24660KiB load=1.00 rootload=1.00
(smt.stats   69   9887 127186 323927  7299/7099/142   14214/688    19   64   23.28)
(smt.delete-inactive-clauses  :num-deleted-clauses 195)
(smt.stats   70  10034 128687 334636  7370/7184/142   14230/688    19   64   23.28)
(smt.stats   71  10195 130106 341987  7398/7240/142   14507/688    19   64   23.37)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   72  10372 132064 348434  7450/7283/142   14733/689    19   64   23.37)
(smt.stats   73  10566 133611 353099  7464/7329/142   14971/689    19   64   24.20)
(smt.stats   74  10779 135305 359296  7488/7341/142   15225/689    19   64   24.20)
(smt.stats   75  11013 137467 370301  7545/7360/142   15520/691    19   64   24.20)
(smt.stats   76  11270 139962 389632  7659/7416/142   15906/692    19   64   24.30)
(smt.stats   77  11552 143907 404105  7696/7527/142   16296/692    19   64   24.39)
(smt.stats   78  11653 146359 418062  7700/7567/142   16472/692    19   64   24.49)
ramon: poll                 wall=12.004s usage=11.908s mem=26004KiB load=1.00 rootload=1.00
(smt.stats   79  11764 147429 420504  7760/7567/142   16653/694    19   64   24.49)
(smt.stats   80  11886 148383 426076  7801/7644/142   16882/694    19   64   24.59)
(smt.stats   81  12020 149267 431771  7811/7677/142   17048/694    19   64   24.59)
(smt.stats   82  12167 151782 444540  7843/7686/142   17252/694    19   64   24.59)
(smt.stats   83  12328 153490 456593  7859/7714/142   17575/695    19   64   24.68)
(smt.stats   84  12505 156170 464278  7883/7733/142   17814/697    19   64   24.68)
(smt.stats   85  12699 158356 475318  7951/7753/142   18062/698    19   64   24.68)
(smt.stats   86  12912 160987 485591  8018/7825/142   18340/698    19   64   24.87)
(smt.stats   87  13146 164128 491454  8059/7889/142   18738/698    19   64   24.97)
ramon: poll                 wall=13.000s usage=12.904s mem=26436KiB load=1.00 rootload=0.99
(smt.stats   88  13403 166992 497097  8225/7957/142   19329/699    19   64   24.97)
(smt.stats   89  13685 170587 506564  8278/8103/142   20045/699    19   64   25.06)
(smt.stats   90  13995 173953 522745  8470/8195/142   20573/700    19   64   25.25)
(smt.stats   91  14096 175473 526623  8492/8355/142   20881/700    19   64   25.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   92  14207 176581 534130  8525/8364/142   21058/700    19   64   25.36)
(smt.stats   93  14329 178006 539859  8563/8400/142   21236/700    19   64   25.36)
(smt.stats   94  14463 179475 551780  8588/8448/142   21408/700    19   64   25.36)
(smt.stats   95  14610 181009 558789  8656/8468/147   21599/1500    20   75   25.45)
(smt.stats   96  14771 182294 565315  8744/8538/147   21784/1500    20   75   25.45)
(smt.stats   97  14948 184566 571180  8768/8632/147   21971/1500    20   75   25.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 1572)
(smt.stats   98  15142 187968 581760  8793/8641/147   20676/1500    20   75   25.55)
ramon: poll                 wall=14.000s usage=13.904s mem=27068KiB load=1.00 rootload=1.00
(smt.stats   99  15355 191648 605853  8870/8665/147   20929/1503    20   75   25.55)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas            :deletions    )
(smt.stats  100  15589 194957 612651  8938/8751/147   21251/1503    20   75   25.55)
(smt.stats  101  15846 202471 670621  9007/8829/147   21589/1504    20   75   25.64)
(smt.stats  102  16128 207121 677712  9166/8883/147   21916/1505    20   75   25.64)
(smt.stats  103  16438 210528 714799  9368/9058/147   22270/1505    20   75   25.74)
ramon: poll                 wall=15.000s usage=14.903s mem=27448KiB load=1.00 rootload=1.00
(smt.stats  104  16778 213216 735135  9485/9250/147   22757/1506    20   75   25.85)
(smt.stats  105  16879 214345 740830  9499/9360/147   22864/1506    20   75   25.85)
(smt.stats  106  16990 215720 752655  9535/9381/147   23011/1507    20   75   25.94)
(smt.stats  107  17112 216543 755154  9570/9410/147   23142/1507    20   75   25.94)
(smt.stats  108  17246 217855 759159  9579/9447/147   23285/1507    20   75   25.94)
(smt.stats  109  17393 219351 766654  9585/9449/147   23471/1507    20   75   26.04)
(smt.stats  110  17554 220878 772960  9588/9456/147   23725/1507    20   75   26.04)
(smt.stats  111  17731 223573 781353  9591/9459/147   24084/1507    20   75   26.04)
(smt.stats  112  17925 225785 795055  9613/9459/147   24349/1507    20   75   26.14)
(smt.stats  113  18138 228529 803188  9621/9487/147   24595/1507    20   75   27.68)
(smt.stats  114  18372 231189 811508  9626/9491/147   24964/1507    20   75   27.68)
(smt.stats  115  18629 234009 822102  9639/9498/147   25294/1507    20   75   27.78)
(smt.stats  116  18911 239277 834581  9651/9515/147   25593/1507    20   75   27.87)
ramon: poll                 wall=16.000s usage=15.902s mem=29612KiB load=1.00 rootload=0.99
(smt.stats  117  19221 242325 850006  9723/9523/147   26040/1507    20   75   27.97)
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 738197504 := 738197504&738197530
lshr: (lshr[32] (bv2int %1) (mod (+ 31 #411 #412) 32)) 2885681178 := 0 >>l 5
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 738197504 := 738197504&738197530
lshr: (lshr[32] (bv2int %1) (mod (+ 31 #411 #412) 32)) 2885681178 := 0 >>l 5
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 26 := 738197504&26
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 1 := 738197504&26
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&26
lshr: (lshr[32] (bv2int %1) (mod (+ 31 #411 #412) 32)) 26 := 26 >>l 5
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&26
lshr: (lshr[32] (bv2int %1) (mod (+ 31 #411 #412) 32)) 26 := 26 >>l 5
(smt.stats  118  19561 247493 868223  9784/9648/158   26474/1957    21   78   28.07)
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&1
lshr: (lshr[31] (bv2int %1) (+ 31 (* 2147483647 #110))) 33 := 32 >>l 5
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&1
lshr: (lshr[31] (bv2int %1) (+ 31 (* 2147483647 #110))) 31 := 32 >>l 5
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 1 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 4 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 8 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 16 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 32 := 738197504&32
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 64 := 738197504&64
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 128 := 738197504&128
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 256 := 738197504&256
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 512 := 738197504&512
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 1024 := 738197504&1024
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 64 := 738197504&64
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 128 := 738197504&128
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 256 := 738197504&256
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 512 := 738197504&512
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 1024 := 738197504&1024
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 2048 := 738197504&2048
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 4096 := 738197504&4096
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 8192 := 738197504&8192
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 16384 := 738197504&16384
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 32768 := 738197504&32768
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 65536 := 738197504&65536
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 131072 := 738197504&131072
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 262144 := 738197504&262144
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 524288 := 738197504&524288
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 1048576 := 738197504&1048576
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 2097152 := 738197504&2097152
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 4194304 := 738197504&4194304
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 8388608 := 738197504&8388608
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 16777216 := 738197504&16777216
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 33554432 := 738197504&33554432
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 128 := 738197504&128
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 256 := 738197504&256
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 512 := 738197504&512
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 1024 := 738197504&1024
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 2048 := 738197504&2048
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 4096 := 738197504&4096
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 384 := 738197504&384
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 256 := 738197504&256
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 256 := 738197504&256
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 128 := 738197504&128
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 128 := 738197504&128
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 64 := 738197504&64
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 32 := 738197504&32
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&1
lshr: (lshr[31] (bv2int %1) (+ 31 (* 2147483647 #110))) 27 := 32 >>l 5
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 1 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 8 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 16 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 8 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&19
lshr: (lshr[31] (bv2int %1) (+ 31 (* 2147483647 #110))) 27 := 608 >>l 5
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&27
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 1 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&27
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 2 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&27
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 4 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&27
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 8 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&27
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 16 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&27
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 4 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&27
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 8 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&27
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 16 := 738197504&27
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&32
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 32 := 738197504&32
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&64
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 64 := 738197504&64
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&128
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 128 := 738197504&128
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&256
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 256 := 738197504&256
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&512
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 512 := 738197504&512
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&1024
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 1024 := 738197504&1024
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&2048
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 2048 := 738197504&2048
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&4096
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 4096 := 738197504&4096
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&8192
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 8192 := 738197504&8192
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&16384
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 16384 := 738197504&16384
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&32768
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 32768 := 738197504&32768
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&65536
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 65536 := 738197504&65536
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&131072
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 131072 := 738197504&131072
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&262144
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 262144 := 738197504&262144
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&524288
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 524288 := 738197504&524288
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&1048576
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 1048576 := 738197504&1048576
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&2097152
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 2097152 := 738197504&2097152
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&4194304
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 4194304 := 738197504&4194304
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&55312384
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 10485760 := 738197504&55312384
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&55312383
lshr: (lshr[31] (bv2int %1) (+ 31 (* 2147483647 #110))) 55312384 := 1769996287 >>l 5
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&55312383
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 51904512 := 738197504&55312383
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&50331648
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 50331648 := 738197504&50331648
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&55312384
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 50331648 := 738197504&55312384
band: (band[31] (if (= #259 31) 4611685973330231296 (if #320 2305842986665115648 #319)) (lshr[32] (bv2int %1) (mod #415 32))) 0 := 738197504&9437184
band: (band[31] (if (= #114 30) 2305842986665115648 (if #340 1152921493332557824 #398)) (lshr[31] (bv2int %1) (+ 31 #401))) 9437184 := 738197504&9437184
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas            :deletions    )
(smt.stats  119  19934 254843 889657 10222/10031/428   27469/1970    21   78   29.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  120  20035 257227 902626 10246/10054/432   27720/1970    21   78   29.53)
(smt.stats  121  20146 260632 915490 10272/10067/433   27927/1970    21   78   29.62)
(smt.stats  122  20268 264214 921701 10244/10095/433   28078/2286    22  157   29.62)
(smt.stats  123  20402 268500 940591 10276/10124/433   28292/2286    22  157   29.72)
(smt.stats  124  20549 273469 965203 10307/10154/433   28497/2286    22  157   29.72)
ramon: poll                 wall=17.000s usage=16.901s mem=31500KiB load=1.00 rootload=0.98
(smt.stats  125  20710 278112 975775 10425/10177/433   28768/2286    22  157   29.81)
(smt.stats  126  20887 283089 993645 10484/10308/433   28983/2288    22  157   29.81)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  127  21081 287735 1030212 10499/10359/437   29317/2397    23  162   29.91)
(smt.stats  128  21294 292852 1043592 10531/10364/437   29552/2398    23  162   29.91)
(smt.stats  129  21528 298450 1060448 10621/10442/438   29831/2398    23  162   30.00)
(smt.stats  130  21785 305796 1093911 10721/10503/438   30213/2409    24  194   30.00)
ramon: poll                 wall=18.000s usage=17.899s mem=31888KiB load=1.00 rootload=1.00
(smt.stats  131  22067 313292 1126306 10907/10745/440   30855/2413    24  194   30.23)
(smt.stats  132  22377 325328 1167201 10940/10782/440   31334/2650    25  197   30.32)
(smt.stats  133  22717 337552 1215704 11158/10877/441   32194/2743    26  197   30.42)
ramon: poll                 wall=19.000s usage=18.899s mem=32296KiB load=1.00 rootload=1.00
(smt.stats  134  23090 346622 1253069 11419/11042/441   32910/2743    26  197   30.51)
(smt.stats  135  23500 354182 1314652 11810/11672/447   33877/2830    27  205   30.70)
(smt.stats  136  23601 356075 1324387 11831/11675/447   34035/2830    27  205   30.70)
(smt.stats  137  23712 358599 1345781 11847/11694/447   34228/2830    27  205   30.70)
(smt.stats  138  23834 361471 1363765 11918/11714/447   34418/2830    27  205   30.80)
(smt.stats  139  23968 364967 1379536 12054/11902/448   34698/2861    28  238   30.90)
ramon: poll                 wall=20.000s usage=19.899s mem=32824KiB load=1.00 rootload=1.00
(smt.stats  140  24115 368766 1398856 12141/11997/449   34891/2863    28  238   30.90)
ramon: end                  Fri Nov  1 18:03:10 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.984s
ramon: group.utime          19.952s
ramon: group.stime          0.032s
ramon: group.mempeak        33336KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.086s
ramon: loadavg              0.99
