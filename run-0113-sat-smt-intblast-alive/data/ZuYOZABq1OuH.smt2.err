ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:11:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40418 MiB
ramon: sys.mem.avail        61378 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ZuYOZABq1OuH.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3895136
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   256/256     0/0  69       0    18.52   0.00)
(sat.stats    103    645    0   256/256   103/29  69       0    18.89   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 390 :time 0.00)
(sat.stats    103    645    0   256/256   103/29  69       0    18.89   0.01)
(sat.stats    103    645    0   256/256   103/29  69       0    18.89   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 404618.89 :time 0.00)
(sat.stats    103    645    0   256/256    49/29  69       0    18.89   0.01)
(sat.stats    106    659    1   256/256    52/32  69       0    18.89   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    176   1852    2   256/256   122/83  69       0    18.99   0.01)
(sat.stats    179   1894    3   256/256   125/83  69       0    18.99   0.01)
(sat.stats    182   1940    4   256/256   128/83  69       0    18.99   0.01)
(sat.stats    185   2010    5   256/256   131/83  69       0    18.99   0.01)
(sat.stats    188   2085    6   256/256   134/83  69       0    18.99   0.01)
(sat.stats    191   2166    7   256/256   137/83  69       0    18.99   0.01)
(sat.stats    194   2225    8   256/256   140/85  69       0    18.99   0.01)
(sat.stats    197   2241    9   256/256   143/88  69       0    18.99   0.01)
(sat.stats    200   2263   10   256/256   146/91  69       0    18.99   0.01)
(sat.stats    203   2296   11   256/256   149/94  69       0    18.99   0.01)
(sat.stats    206   2339   12   256/256   152/97  69       0    18.99   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    209   2372   13   256/256   155/100  69       0    18.99   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2123 :time 0.00)
(sat.stats    330   4361   14   261/261   275/146  73       0    19.78   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2674 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3232 :time 0.00)
 (sat-cleaner :elim-literals 8 :elim-clauses 0 :cost 3769 :time 0.00)
(sat.stats    550   7038   33   502/502   497/218  82       0    19.87   0.15)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6082 :time 0.00)
(sat.stats    754  14558   71  2362/2361   706/242  83       0    20.26   0.39)
ramon: poll                 wall=1.000s usage=0.996s mem=22200KiB load=1.00 rootload=0.99
(sat.stats   1176  34330   82  5354/5353  1137/273  83       0    20.94   1.00)
(sat.stats   1903  51312  131  6584/6583  1871/462  83       0    21.26   1.42)
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   2501  59630  135  8167/8166  2489/506  83       0    21.46   1.91)
ramon: poll                 wall=2.000s usage=1.991s mem=23060KiB load=0.99 rootload=0.99
ramon: poll                 wall=3.002s usage=2.991s mem=23736KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 23771 :time 0.00)
(sat.stats   3754  95781  193 13168/13167  3806/686  85       0    22.75   3.29)
ramon: poll                 wall=4.000s usage=3.974s mem=24268KiB load=0.98 rootload=0.98
(sat.stats   5502 122703  323 15357/15356  4882/887  85       0    23.25   4.18)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 34674 :time 0.00)
ramon: poll                 wall=5.000s usage=4.973s mem=24660KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.956s mem=25184KiB load=0.98 rootload=0.99
(sat.stats   8399 175914  449 19858/19857  6594/1106  85       0    24.06   6.15)
 (sat-cleaner :elim-literals 91 :elim-clauses 1 :cost 44428 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 46361 :time 0.00)
ramon: poll                 wall=7.000s usage=6.940s mem=25676KiB load=0.98 rootload=0.98
ramon: poll                 wall=8.000s usage=7.935s mem=25836KiB load=0.99 rootload=1.00
ramon: poll                 wall=9.000s usage=8.898s mem=26420KiB load=0.96 rootload=0.96
(sat.stats  13297 239235  664 28887/28886  9331/1368  92       0    25.92   9.49)
 (sat-cleaner :elim-literals 465 :elim-clauses 2 :cost 60516 :time 0.00)
ramon: poll                 wall=10.000s usage=9.894s mem=27384KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.892s mem=28028KiB load=1.00 rootload=1.00
(sat.stats  18205 299031 1120 31982/31981 12116/1943  93       0    27.20  11.96)
 (sat-cleaner :elim-literals 14 :elim-clauses 0 :cost 79935 :time 0.00)
ramon: poll                 wall=12.000s usage=11.887s mem=28144KiB load=1.00 rootload=0.99
lshr: (lshr[62] (bv2int %1) (mod (bv2int %0) 62)) 0 := 28107 >>l 49
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 0&4611686018427379712
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 2 #60 #341) 64)) 117864 := 117864 >>l 51
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 979 := 2495&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 1746 := 4716&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 2334 := 4715&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 3800 := 4715&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 2640 := 4715&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 3664 := 4703&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 4 := 4671&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 2336 := 4607&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 3776 := 4607&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 1536 := 4607&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 2560 := 4095&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 384 := 4095&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 256 := 4095&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 3072 := 4095&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 2048 := 4095&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 4096 := 4112&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4625&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 4599 := 4625&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4625&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 4520 := 4625&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4626&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 3554 := 4626&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4626&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 1028 := 4626&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4626&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 3776 := 4626&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4626&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 16 := 4626&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4626&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 32 := 4626&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4626&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 128 := 4626&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4626&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 1536 := 4626&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4626&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 256 := 4626&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4860&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 1260 := 4860&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4860&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 1256 := 4860&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4861&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 3296 := 4861&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4861&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 3264 := 4861&4611686018427379712
band: (band[62] (lshr[62] (bv2int %1) (mod #60 62)) (if (= #500 61) 5316911983139663489309385231907684352 (if #502 2658455991569831744654692615953842176 #622))) 0 := 4861&4611686018427379712
band: (band[62] (lshr[64] (* 4 #67) (mod #342 64)) (if (= #645 63) 42535295865117307914475081855261474816 (if #647 21267647932558653957237540927630737408 #771))) 3200 := 4861&4611686018427379712
ramon: poll                 wall=13.000s usage=12.863s mem=30312KiB load=0.98 rootload=0.97
ramon: poll                 wall=14.000s usage=13.839s mem=30452KiB load=0.98 rootload=0.98
ramon: poll                 wall=15.000s usage=14.837s mem=31088KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.835s mem=32160KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.834s mem=32836KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.834s mem=33760KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.002s usage=18.836s mem=34516KiB load=1.00 rootload=1.01
ramon: poll                 wall=20.000s usage=19.828s mem=35488KiB load=0.99 rootload=0.99
ramon: end                  Wed Dec 25 16:12:15 2024
ramon: root.execname        z3
ramon: root.utime           19.810s
ramon: root.stime           0.020s
ramon: group.total          19.839s
ramon: group.utime          19.815s
ramon: group.stime          0.024s
ramon: group.mempeak        35500KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              0.99
