ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:45:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40941 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1251
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/hhCEVwIkyPPL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3049030
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   4231    752  1335/1183/106      99/13     4   16   19.23)
(smt.stats    1    202   5484   1147  2064/1877/109     207/17     5   18   19.55)
(smt.stats    2    313   7170   2724  2539/2315/116     304/25    11   28   19.55)
ramon: poll                 wall=1.000s usage=0.953s mem=20872KiB load=0.95 rootload=0.94
(smt.stats    3    414   8905   4415  2562/2332/116     403/28    11   28   19.83)
(smt.stats    4    525  10598   5929  3001/2751/120     516/64    13   32   19.93)
(smt.stats    5    647  13281  10907  3076/2761/120     641/63    14   34   20.13)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  15111  13367  3173/2922/122     744/71    15   37   20.13)
(smt.stats    7    859  17232  16525  3287/2959/122     854/71    15   37   20.22)
(smt.stats    8    981  18881  19475  3353/3095/130     956/91    16   40   20.22)
ramon: poll                 wall=2.003s usage=1.955s mem=21576KiB load=1.00 rootload=1.00
(smt.stats    9   1115  20774  22941  3470/3127/130    1102/94    16   40   20.46)
(smt.stats   10   1216  21872  26931  3575/3262/130    1209/94    16   40   20.46)
(smt.stats   11   1327  24371  32002  3710/3373/130    1319/94    16   40   20.46)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  25668  36909  3740/3471/132    1450/112    17   43   20.56)
(smt.stats   13   1583  29149  42311  3772/3501/134    1584/112    17   43   20.56)
(smt.stats   14   1730  31019  48003  3820/3536/135    1735/122    19   45   20.75)
ramon: poll                 wall=3.000s usage=2.952s mem=21892KiB load=1.00 rootload=1.00
(smt.stats   15   1831  32445  51591  3953/3585/135    1840/122    19   45   20.99)
(smt.stats   16   1942  33921  55317  4083/3780/135    1958/122    19   45   20.89)
(smt.stats   17   2064  37495  59818  4088/3824/135    2083/122    19   45   20.89)
(smt.stats   18   2198  40274  63999  4179/3825/135    2218/122    19   45   20.99)
(smt.stats   19   2345  43520  70602  4277/3943/135    2362/122    19   45   20.99)
(smt.stats   20   2506  45161  76859  4388/4016/135    2528/122    19   45   21.08)
ramon: poll                 wall=4.000s usage=3.952s mem=22272KiB load=1.00 rootload=1.00
(smt.stats   21   2607  46162  80703  4440/4139/135    2632/122    19   45   21.08)
(smt.stats   22   2718  47571  87223  4475/4180/135    2746/123    19   45   21.18)
(smt.stats   23   2840  48430  90476  4668/4240/135    2870/126    19   45   21.18)
(smt.stats   24   2974  49714  94088  4805/4483/135    3014/126    19   45   21.43)
(smt.stats   25   3121  52926 108305  4831/4563/136    3167/157    20   46   21.43)
(smt.stats   26   3282  56174 124881  4861/4577/136    3342/157    20   46   21.53)
ramon: poll                 wall=5.000s usage=4.952s mem=22804KiB load=1.00 rootload=1.00
(smt.stats   27   3459  58718 136930  4921/4613/136    3524/157    20   46   21.62)
(smt.stats   28   3560  59567 138707  4927/4661/136    3634/158    20   46   21.62)
(smt.stats   29   3671  63294 144134  4929/4665/136    3744/158    20   46   21.72)
(smt.stats   30   3793  67764 150795  4939/4668/136    3872/158    20   46   21.72)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3583 := 3583&370109126
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3584 := 3584&370109126
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4096 := 4096&370109126
(smt.stats   31   3927  72161 157415  4953/4689/147    4004/201    21   49   21.81)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4096 := 4096&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 9215 := 9215&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8192 := 8192&47373968183
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 4611686018427396096 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8192 := 8192&47373968183
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 4611686018427396096 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8192 := 8192&47373968183
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 4611686018427396096 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8192 := 8192&47373968183
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 4611686018427396096 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3500 := 3583&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3500 := 3583&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3502 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3504 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3520 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3584 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3504 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3504 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3504 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3504 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3504 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3584 := 3598&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3584 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3584 := 3584&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2944 := 2944&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2560 := 2560&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2560 := 2560&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 32 := 96&47373968183
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 4611686018427388000 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 256 := 256&47373968183
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 4611686018427388160 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 32 := 96&47373968183
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 4611686018427388000 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 32 := 96&47373968183
shl: (shl[64] (bv2int %0) (mod (+ #114 #838) 64)) 4611686018427388000 := 2305842819717823445 << 36
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  74179 163132  5043/4760/222    4150/211    22   76   21.99)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8192 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 16384 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 32768 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 65536 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 131072 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 262144 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 524288 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1048576 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2097152 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4194304 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8388608 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 16777216 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 33554432 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 67108864 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 134217728 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 268435456 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 536870912 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1073741824 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2147483648 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4294967296 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8589934592 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 17179869184 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 34359738368 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 262144 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 262144 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 524288 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1048576 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2097152 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8388608 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 16777216 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3932160 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3670016 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 3145728 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2097152 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2097152 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8388608 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8388608 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8388608 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8388608 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 67108864 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 67108864 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 67108864 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 67108864 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 67108864 := 1344251165088415744&47373968183
(smt.stats   33   4235  77138 169188  5134/4853/311    4351/238    23  100   22.80)
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 134217728 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 134217728 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 134217728 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 268435456 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 536870912 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1073741824 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 2147483648 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 536870912 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 536870912 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1073741824 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8589934592 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 17179869184 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 34359738368 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 25769803776 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 17179869184 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 17179869184 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 17179869184 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8589934592 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8589934592 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4294967296 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 33554432 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 1048576 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 524288 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4194304 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 507904 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 491520 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 458752 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 393216 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 507904 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 507904 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 491520 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 458752 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 393216 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 262144 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 32768 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 32768 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 65536 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 131072 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 131072 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 98304 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 12 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
shl: (shl[61] (bv2int %0) (mod (bv2int %0) 61)) 84 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 8 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
shl: (shl[61] (bv2int %0) (mod (bv2int %0) 61)) 47373968182 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 4 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
shl: (shl[61] (bv2int %0) (mod (bv2int %0) 61)) 9576 := 2305842819717823445 << 36
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 1 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 2 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 47373968180 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 8 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 16 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 32 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 192 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 192 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 139 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 138 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 138 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 138 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 138 := 1344251165088415744&47373968183
band: (band[61] (shl[64] (bv2int %0) (mod #839 64)) (if (= #853 63) 0 (if #855 1 #980))) 0 := 1344251165088415744&47373968183
band: (band[61] (shl[61] (bv2int %0) (mod #114 61)) (if (= #654 60) 1 (if #656 2 #828))) 136 := 1344251165088415744&47373968183
(smt.stats   34   4412  79287 173131  5395/4971/428    4693/250    23  100   23.18)
(smt.stats   35   4606  82081 181856  5440/5124/508    4928/378    24  142   23.57)
ramon: poll                 wall=6.000s usage=5.951s mem=24972KiB load=1.00 rootload=1.00
(smt.stats   36   4707  83379 185229  5654/5223/508    5025/378    24  142   23.66)
(smt.stats   37   4818  87825 197247  5668/5400/509    5141/410    25  147   23.66)
(smt.stats   38   4940  93258 214692  5724/5446/511    5346/479    27  154   24.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 5)
(smt.stats   39   5074  97148 226953  5761/5462/511    5555/490    27  154   24.27)
(smt.stats   40   5221 102834 242349  5796/5511/514    5773/571    28  165   24.46)
ramon: poll                 wall=7.000s usage=6.951s mem=25892KiB load=1.00 rootload=1.00
(smt.stats   41   5382 109935 264160  5850/5555/516    5969/636    29  171   24.46)
(smt.stats   42   5559 115297 277914  5890/5594/517    6212/652    30  174   24.56)
(smt.stats   43   5753 127413 310037  5912/5625/517    6420/694    31  175   24.66)
(smt.stats   44   5966 139829 339301  5934/5651/518    6662/740    32  178   24.85)
(smt.stats   45   6067 143716 348799  5938/5655/519    6801/740    32  178   24.85)
(smt.stats   46   6178 148139 360374  5954/5671/520    6935/740    32  178   24.85)
ramon: poll                 wall=8.000s usage=7.951s mem=26536KiB load=1.00 rootload=1.00
(smt.stats   47   6300 151840 371623  5999/5676/520    7092/788    33  190   25.04)
ramon: poll                 wall=9.000s usage=8.951s mem=26704KiB load=1.00 rootload=1.00
(smt.stats   48   6434 154215 381976  6113/5738/520    7277/793    33  190   25.13)
(smt.stats   49   6581 160870 398123  6173/5867/524    7445/835    34  203   25.13)
ramon: poll                 wall=10.000s usage=9.951s mem=26788KiB load=1.00 rootload=1.00
(smt.stats   50   6742 167154 407749  6316/5910/524    7652/863    35  206   25.23)
(smt.stats   51   6919 178203 434951  6413/6099/524    7901/863    35  206   25.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 185406 453005  6469/6140/524    8170/869    35  206   25.42)
ramon: poll                 wall=11.000s usage=10.948s mem=26988KiB load=1.00 rootload=1.00
(smt.stats   53   7326 190180 468564  6741/6284/526    8429/973    36  207   25.51)
(smt.stats   54   7560 194626 484793  6861/6522/529    8743/978    37  231   25.61)
ramon: poll                 wall=12.000s usage=11.948s mem=27228KiB load=1.00 rootload=1.00
(smt.stats   55   7661 196591 496054  6953/6666/530    8901/1056    38  233   25.70)
(smt.stats   56   7772 200384 509956  7007/6670/530    9127/1056    38  233   25.80)
ramon: poll                 wall=13.000s usage=12.948s mem=27572KiB load=1.00 rootload=1.00
(smt.stats   57   7894 204232 517422  7111/6737/530    9305/1059    38  233   25.90)
(smt.stats   58   8028 208470 528760  7189/6891/530    9513/1060    38  233   26.65)
(smt.stats   59   8175 215493 556516  7226/6911/530    9676/1060    38  233   26.65)
(smt.stats   60   8336 224379 579217  7233/6946/530    9872/1060    38  233   26.75)
ramon: poll                 wall=14.000s usage=13.948s mem=28460KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8513 229782 600742  7238/6951/532   10149/1345    39  234   26.75)
(smt.stats   62   8707 236309 617454  7248/6953/532   10413/1345    39  234   26.75)
ramon: poll                 wall=15.000s usage=14.948s mem=29376KiB load=1.00 rootload=1.00
(smt.stats   63   8920 240789 626537  7546/6967/532   10773/1392    40  238   27.31)
ramon: poll                 wall=16.000s usage=15.947s mem=29392KiB load=1.00 rootload=1.00
(smt.stats   64   9154 245776 638502  7687/7297/532   11059/1392    40  238   27.60)
ramon: poll                 wall=17.000s usage=16.947s mem=29396KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.947s mem=29504KiB load=1.00 rootload=1.00
(smt.stats   65   9411 248529 641675  8211/7683/532   11496/1395    40  238   27.69)
ramon: poll                 wall=19.000s usage=18.947s mem=29508KiB load=1.00 rootload=1.00
(smt.stats   66   9512 250604 648293  8408/8080/544   11792/1523    41  262   27.84)
ramon: poll                 wall=20.000s usage=19.947s mem=29708KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:45:29 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.988s
ramon: group.stime          0.012s
ramon: group.mempeak        29964KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.054s
ramon: loadavg              1.00
