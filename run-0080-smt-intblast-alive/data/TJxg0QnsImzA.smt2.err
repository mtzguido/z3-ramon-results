ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:26:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25556 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/TJxg0QnsImzA.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             45274
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 2&1
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 1 := 137438953470 << 1
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 2&1
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 1 := 137438953470 << 1
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 2&68719476735
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 137438953471 := 137438953470 << 1
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 2&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719476738 := 4 << 1
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 2&68719476732
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 2&68719476732
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&68719476732
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 68719476733 := 68719476735 << 2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 2&68719476735
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&68719476735
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 9 := 4 << 1
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&8
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 2 << 2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&8
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 2 << 2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&45812984488
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 1 := 2&45812984488
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 2&45812984488
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 2&45812984488
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&45812984488
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2 := 2&45812984488
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&68719476732
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 51539607550 := 51539607551 << 2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&45812984488
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 1 := 2&45812984488
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&45812984488
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2 := 2&45812984488
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&4
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2 := 2&4
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&8
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 1 := 2&8
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 2&8
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 2&4
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 2&4
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 2&8
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 2&4
(smt.stats    0    101   4060    705  1119/1013/150      88/13    11   28   19.18)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 4&2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 4&2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 4&2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 4&2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 4&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719476738 := 34359738370 << 2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719476739 := 34359738370 << 2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 4&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 137438953474 := 68719476738 << 2
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 4&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 137438953474 := 68719476738 << 2
(smt.stats    1    202   5662   1325  1338/1210/164     184/23    14   33   19.28)
(smt.stats    2    313   8706   2525  1677/1494/167     288/26    16   35   19.48)
(smt.stats    3    415  10990   3871  2084/1886/175     393/33    18   42   19.67)
(smt.stats    4    526  13211   5266  2181/1979/180     483/54    21   55   19.67)
(smt.stats    5    648  18183   7257  2210/1981/181     608/58    21   55   19.77)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    749  21097   8605  2375/2051/181     718/65    22   58   19.86)
(smt.stats    7    860  24050  10386  2453/2196/181     864/67    22   58   19.86)
(smt.stats    8    982  27482  13577  2623/2276/181     989/79    22   58   19.96)
(smt.stats    9   1116  29850  16614  2684/2437/181    1156/84    22   58   19.96)
(smt.stats   10   1217  32103  19608  2718/2484/184    1260/122    23   65   19.96)
(smt.stats   11   1328  34267  23473  2752/2522/184    1379/123    23   65   20.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  37167  27158  2802/2582/187    1501/141    24   67   20.06)
(smt.stats   13   1584  40492  30406  2823/2588/188    1644/143    25   69   20.06)
(smt.stats   14   1731  43748  34937  2881/2638/190    1798/155    27   76   20.25)
(smt.stats   15   1832  46295  38332  2890/2665/190    1913/155    27   76   20.25)
(smt.stats   16   1943  48863  42571  2894/2672/190    2023/155    27   76   20.25)
(smt.stats   17   2065  50631  46668  2909/2679/190    2171/155    27   76   20.25)
(smt.stats   18   2199  52736  50976  2950/2695/190    2312/155    27   76   20.25)
(smt.stats   19   2346  55334  58786  2995/2767/192    2460/192    28   81   20.25)
(smt.stats   20   2507  58598  66118  3000/2774/193    2628/192    28   81   20.41)
(smt.stats   21   2608  60214  70516  3002/2775/193    2762/192    29   83   20.41)
(smt.stats   22   2719  61823  74540  3011/2781/193    2889/192    29   83   20.41)
(smt.stats   23   2841  65614  79473  3018/2788/193    3010/192    29   83   20.41)
(smt.stats   24   2975  68859  84238  3026/2800/193    3154/192    29   83   20.41)
ramon: poll                 wall=1.000s usage=0.998s mem=21572KiB load=1.00 rootload=0.98
(smt.stats   25   3122  70723  88192  3031/2805/194    3298/236    30   85   20.41)
(smt.stats   26   3283  73311  95883  3039/2809/194    3462/238    30   85   20.41)
(smt.stats   27   3460  75423 105576  3058/2816/194    3651/238    30   85   20.51)
(smt.stats   28   3561  76209 109433  3063/2836/194    3758/238    30   85   20.51)
(smt.stats   29   3672  78634 114835  3070/2839/194    3868/239    30   85   20.51)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 9022724&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 4960295250984697857 := 8 << 23
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 9022724&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 18446744004990074881 := 34359738366 << 23
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 9022724&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 5 := 0 << 24
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 9022724&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 5 := 0 << 24
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 9022724&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 5 := 0 << 24
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 9022724&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 5 := 0 << 24
(smt.stats   30   3794  80122 118244  3107/2847/194    4002/243    30   85   20.76)
(smt.stats   31   3928  82396 123048  3143/2909/207    4160/267    31   87   20.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4075  84406 129609  3150/2913/207    4314/267    31   87   20.76)
(smt.stats   33   4236  87689 140044  3160/2921/207    4471/293    32   98   20.76)
(smt.stats   34   4413  91087 146697  3163/2929/208    4655/305    33  100   20.76)
(smt.stats   35   4607  92408 156071  3193/2952/212    4867/305    33  100   20.85)
(smt.stats   36   4708  94517 160658  3204/2954/212    4971/305    33  100   20.95)
(smt.stats   37   4819  97543 167492  3236/2982/212    5078/317    34  106   20.95)
(smt.stats   38   4941  99534 173324  3256/3012/212    5195/318    34  106   20.95)
(smt.delete-inactive-clauses  :num-deleted-clauses 119)
(smt.stats   39   5075 100649 179267  3276/3024/212    5215/318    34  106   20.95)
(smt.stats   40   5222 101803 185589  3328/3045/212    5358/318    34  106   20.95)
(smt.stats   41   5383 105628 194609  3376/3108/212    5520/319    34  106   20.95)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 8 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 16 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 64 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 128 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 256 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 512 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 256 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 512 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2048 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 4096 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 8192 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 16384 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 16384 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32768 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 131072 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 262144 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 524288 := 36957080080&38654705665
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1048576 := 36957080080&38654705665
(smt.stats   42   5560 107555 200761  3429/3187/255    5713/338    35  118   21.59)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 36957080080&6
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 36957080080&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 6 := 8589926910 << 35
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 36957080080&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 6 := 8194 << 35
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 36957080080&4098
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 4098 := 8053064162 << 35
(smt.stats   43   5754 112502 209314  3477/3204/257    5922/341    35  118   21.59)
ramon: poll                 wall=2.000s usage=1.997s mem=22836KiB load=1.00 rootload=1.00
(smt.stats   44   5967 114379 217156  3650/3405/269    6167/360    36  124   21.69)
(smt.stats   45   6068 115886 222311  3661/3410/269    6291/360    36  124   21.69)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 4&38654705712
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 4&38654705672
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 4&38654705672
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 4&38654705672
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 0 := 56371445761 << 3
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 4&40802189312
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 0 := 65229815808 << 3
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 4&40802189312
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 0 := 65229815808 << 3
(smt.stats   46   6179 117981 228095  3697/3444/281    6400/383    37  132   21.78)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 0 := 0 << 21
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 22
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 0 := 0 << 21
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 22
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 0 := 0 << 21
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 22
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 0 := 0 << 21
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 22
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&1
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 288230376151711746 := 0 << 21
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 288230376151711746 := 0 << 21
(smt.stats   47   6302 119915 235953  3773/3515/298    6580/385    37  132   22.01)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 56 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 48 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 16 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 8 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36045848576
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 6 := 2255681&36045848576
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2255677 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2255676 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2255672 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2255664 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2255648 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 64 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 128 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 256 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 512 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 1024 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 128 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 256 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 512 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 1024 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2048 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 4096 := 2255681&36041654272
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2255681&36041654272
band: (band[36] (if (= #109 35) 1 (if #563 2 #660)) (shl[36] (bv2int %0) (+ 36 #663))) 2252800 := 2255681&36041654272
(smt.stats   48   6436 122211 243702  3926/3664/401    6758/462    38  183   22.35)
(smt.stats   49   6583 124218 251937  3965/3695/408    6955/462    38  183   22.54)
(smt.stats   50   6744 126606 261105  3997/3721/409    7132/462    38  183   22.64)
(smt.stats   51   6921 129369 269628  4011/3725/409    7359/494    39  194   22.64)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7115 136411 279817  4025/3747/409    7586/495    39  194   22.64)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32768 := 2309817505&37580963896
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32768 := 2309817505&37580963896
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32768 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32768 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580963896
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580963896
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 131072 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 262144 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 524288 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1048576 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2097152 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 4194304 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 8388608 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 16777216 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 16777216 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 8388608 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32768 := 2309817505&37580963896
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 32768 := 2309817505&37580963904
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580964240
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580964240
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580963896
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580963904
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 131072 := 2309817505&37580963904
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 524288 := 2309817505&37580963904
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 1048576 := 2309817505&37580963904
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 2097152 := 2309817505&37580963904
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 524288 := 2309817505&37580963904
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580963904
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580964240
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580964240
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580963896
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580963896
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 65536 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 66816 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 67072 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 67584 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 69632 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 66816 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 67584 := 2309817505&37580964096
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 69632 := 2309817505&37580964096
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 69632 := 2309817505&37580964096
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 67072 := 2309817505&37580964096
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 67840 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 67840 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 67584 := 2309817505&37580967936
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 67584 := 2309817505&37580967936
(smt.stats   53   7328 144174 294773  4276/3855/473    7944/546    40  197   22.93)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 66624 := 2309817505&37580964096
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 66624 := 2309817505&37580967936
ramon: poll                 wall=3.000s usage=2.997s mem=24348KiB load=1.00 rootload=1.00
(smt.stats   54   7562 149580 318909  4382/4088/523    8631/743    41  231   23.33)
(smt.stats   55   7663 153163 328623  4516/4186/525    8887/744    41  231   23.42)
(smt.stats   56   7774 156377 345220  4568/4221/529    9044/851    42  243   23.61)
(smt.stats   57   7896 158729 352208  4577/4272/530    9306/851    42  243   23.91)
(smt.stats   58   8030 160884 362344  4589/4284/533    9745/940    43  256   24.00)
ramon: poll                 wall=4.000s usage=3.995s mem=25440KiB load=1.00 rootload=0.99
(smt.stats   59   8177 166767 377692  4697/4285/534   10172/951    43  256   24.29)
(smt.stats   60   8338 171080 393169  4908/4429/535   10728/995    44  267   24.49)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8515 175569 412673  5035/4680/536   11409/1001    44  267   24.58)
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 18043736 := 18045449&37580964123
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 18043736 := 18045449&37580964122
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 18043736 := 18045449&37580964122
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 18043736 := 18045449&37580964122
band: (band[36] (if (= #300 63) 1 (if #540 2 #759)) (shl[64] (* 2 #283) (mod #774 64))) 18043736 := 18045449&37580964122
ramon: poll                 wall=5.000s usage=4.994s mem=26168KiB load=1.00 rootload=1.00
(smt.stats   62   8709 184810 440433  5234/4744/536   12063/1113    45  269   24.68)
(smt.stats   63   8922 193503 476945  5341/4945/536   12452/1115    45  269   24.87)
(smt.stats   64   9156 200782 496361  5532/5043/537   13278/1324    46  276   25.06)
ramon: poll                 wall=6.000s usage=5.994s mem=26676KiB load=1.00 rootload=1.00
(smt.stats   65   9413 206426 527777  6362/5335/537   14551/1338    46  276   25.35)
(smt.stats   66   9514 209830 543927  6380/6071/538   15382/1563    47  280   25.45)
(smt.stats   67   9625 214326 559887  6482/6094/538   16695/1568    47  280   25.64)
(smt.stats   68   9747 217164 569521  6500/6187/538   16967/1568    47  280   25.64)
(smt.stats   69   9881 221452 592038  6546/6239/542   17374/2196    48  280   25.73)
(smt.delete-inactive-clauses  :num-deleted-clauses 15)
(smt.stats   70  10028 224935 604911  6649/6321/542   17868/2196    48  280   25.83)
(smt.stats   71  10189 229718 634442  6668/6340/543   18920/2196    48  280   26.03)
ramon: poll                 wall=7.000s usage=6.993s mem=27724KiB load=1.00 rootload=1.00
(smt.stats   72  10366 239016 652893  6756/6378/545   19520/2464    49  286   26.22)
(smt.stats   73  10560 245347 679956  6843/6441/545   20401/2470    49  286   26.32)
ramon: poll                 wall=8.000s usage=7.992s mem=27940KiB load=1.00 rootload=1.00
(smt.stats   74  10773 256027 718663  6989/6544/545   21470/2655    50  289   26.51)
ramon: poll                 wall=9.000s usage=8.991s mem=28160KiB load=1.00 rootload=1.00
(smt.stats   75  11007 262497 745160  7330/6715/545   22341/2667    50  289   26.70)
(smt.stats   76  11264 268708 802268  7508/7174/550   23715/3217    51  299   26.81)
(smt.stats   77  11546 274153 865798  7620/7266/558   25025/3385    52  335   27.09)
ramon: poll                 wall=10.000s usage=9.990s mem=28636KiB load=1.00 rootload=1.00
(smt.stats   78  11647 277592 887116  7662/7287/561   25250/3389    52  335   27.19)
(smt.stats   79  11758 281061 902797  7688/7315/562   25437/3391    52  335   27.19)
(smt.stats   80  11880 284108 928938  7761/7346/563   25790/3392    52  335   27.31)
ramon: poll                 wall=11.000s usage=10.988s mem=29184KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   81  12014 288449 952029  7799/7437/565   27141/3514    53  432   27.60)
(smt.stats   82  12161 293779 972689  7866/7440/565   27480/3520    53  432   27.80)
ramon: poll                 wall=12.000s usage=11.986s mem=29452KiB load=1.00 rootload=1.00
(smt.stats   83  12322 298000 987269  7957/7550/565   27846/3521    53  432   27.99)
(smt.stats   84  12499 301629 1006892  8145/7783/567   28554/3802    54  462   28.18)
ramon: poll                 wall=13.000s usage=12.984s mem=29836KiB load=1.00 rootload=0.99
(smt.stats   85  12693 309153 1049013  8339/7786/568   29241/3808    54  462   28.28)
(smt.stats   86  12906 319157 1105209  8389/8027/570   30767/4237    55  494   28.47)
ramon: poll                 wall=14.000s usage=13.983s mem=30072KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   87  13140 323907 1119913  8559/8033/570   31474/4239    55  494   28.65)
ramon: poll                 wall=15.000s usage=14.981s mem=30468KiB load=1.00 rootload=1.00
(smt.stats   88  13397 335551 1191960  8624/8232/570   34097/4239    55  494   28.84)
(smt.stats   89  13679 346657 1232236  8840/8293/570   35762/4248    55  494   29.03)
ramon: poll                 wall=16.000s usage=15.972s mem=30860KiB load=0.99 rootload=0.99
(smt.stats   90  13989 357988 1307577  8944/8532/571   37063/5058    56  507   29.42)
(smt.stats   91  14090 360433 1318216  8974/8587/571   37260/5059    56  507   29.42)
ramon: poll                 wall=17.000s usage=16.968s mem=31252KiB load=1.00 rootload=0.99
(smt.stats   92  14201 362191 1339211  8993/8627/571   37541/5059    56  507   29.42)
(smt.stats   93  14323 368787 1367320  9156/8635/571   38156/5063    56  507   29.52)
(smt.stats   94  14457 372727 1400328  9248/8801/571   38631/5065    56  507   29.52)
ramon: poll                 wall=18.000s usage=17.966s mem=31356KiB load=1.00 rootload=1.00
(smt.stats   95  14604 377395 1433989  9328/8913/571   39019/5069    56  507   29.52)
(smt.stats   96  14765 385060 1486007  9378/8983/571   39743/5072    56  507   29.73)
(smt.stats   97  14942 389608 1515817  9449/9072/571   40090/5072    56  507   29.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 233)
(smt.stats   98  15136 396107 1553189  9496/9079/571   40711/5073    56  507   29.92)
ramon: poll                 wall=19.000s usage=18.965s mem=31664KiB load=1.00 rootload=1.00
(smt.stats   99  15349 406114 1604595  9627/9124/571   41252/5080    56  507   30.12)
(smt.stats  100  15583 416109 1658105  9669/9292/572   42693/5989    57  534   30.32)
ramon: poll                 wall=20.000s usage=19.962s mem=31772KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:26:57 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.970s
ramon: group.utime          19.950s
ramon: group.stime          0.020s
ramon: group.mempeak        32028KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
