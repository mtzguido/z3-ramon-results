ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:29:12 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41347 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Xci09FA8ZAfM.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2997591
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   3461    447  1246/1071/105     110/17     3   16   19.14)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2475 := 2476&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2474 := 2476&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2464 := 2468&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2468 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2464 := 2468&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2468 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2464 := 2468&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2468 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421310&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421310&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421308&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421296&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421279&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421280&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421248&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421056&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421310&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421311&2475
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 0&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421312 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 49152 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 0&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 18446181123756130304 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 0&2475
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421312 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
(smt.stats    1    202   7163   1879  1573/1422/147     212/56     6   33   19.43)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 49152&2475
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 12 << 12
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 4094&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 4094 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 4094&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 4094 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 4&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 4&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 4 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 2&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1 := 1 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 2&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 2&1
(smt.stats    2    313  10302   3203  1792/1625/185     323/68    10   51   19.62)
(smt.stats    3    414  10949   3846  2270/2041/196     420/124    13   63   19.93)
(smt.stats    4    525  13757   5764  2344/2106/198     525/131    15   70   20.02)
(smt.stats    5    647  17751   7697  2416/2167/199     659/137    16   70   20.31)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  21567   9908  2798/2465/199     799/144    16   70   20.31)
(smt.stats    7    859  27161  13057  2836/2562/202     920/163    18   75   20.42)
(smt.stats    8    981  29822  16549  2866/2589/211    1063/190    20   93   20.42)
(smt.stats    9   1115  33874  21551  2877/2596/211    1212/190    20   93   20.52)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421288&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421288 := 562949953421284 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421284&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421284 := 562949953421284 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421284&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421284 := 562949953421284 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421200&2
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421311 := 562949953421284 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421200&2
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421311 := 562949953421284 << 2
(smt.stats   10   1216  38469  24499  2909/2599/211    1331/191    20   93   20.61)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2 := 562949953421200&2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 2 := 562949953421200&2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421200&2
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 2 := 562949953421200&2
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421200&2
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 562949953421200&2
(smt.stats   11   1327  41610  27935  2969/2680/242    1455/208    21   95   20.71)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  47961  34236  2991/2703/243    1586/216    23  102   20.71)
(smt.stats   13   1583  54145  38536  3024/2730/245    1804/226    24  108   21.00)
(smt.stats   14   1730  58996  44208  3065/2744/245    1978/226    24  108   21.00)
ramon: poll                 wall=1.000s usage=1.000s mem=22224KiB load=1.00 rootload=0.98
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 3 := 81102443&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 3 := 162204859&162204825
(smt.stats   15   1831  62440  48379  3095/2800/246    2095/231    25  111   21.00)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 324409675&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409675&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409687&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409687&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409699&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324409699&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324410247&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324410215&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324411395&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324411395&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324411395&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 324534275&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 325058563&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 325058563&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 325320707&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 325320707&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 327155715&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 335548419&162204825
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2251800149233667 := 562949953421310 << 28
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 562949950795779&162204825
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 336592903&162204825
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2305843009550286855 := 562949953421310 << 28
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949416550400&162204825
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953413125 := 562949953421310 << 28
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949416550400&162204825
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421305 := 562949953421310 << 28
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949416550400&162204825
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421305 := 562949953421310 << 28
(smt.stats   16   1942  65962  53073  3211/2915/328    2276/264    26  129   21.48)
(smt.stats   17   2064  68673  58314  3280/2977/335    2451/265    26  129   21.58)
(smt.stats   18   2198  72349  65538  3290/2991/336    2588/290    27  170   21.58)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1 := 562949953302531&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 2814749766987779 := 562949953421283 << 1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421254&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 562949953421254&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421254&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 1 := 562949953421254&1
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421296&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421296 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421296&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421296 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421296&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421296 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421292&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421288&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421288 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421292&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421288&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 562949953421288 := 562949953421285 << 3
(smt.stats   19   2345  78427  73577  3339/3030/345    2809/339    29  173   21.68)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562942705664004 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562942705664004 := 562949953421285 << 3
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 3 := 562949953421096&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 2 := 562949953421096&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 4 := 562949953421096&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 4 := 562949953421096&4
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 562949953421096&4
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 1 (if #620 2 #756))) 4 := 562949953421096&4
(smt.stats   20   2506  83943  80587  3420/3112/369    3085/362    30  199   21.87)
(smt.stats   21   2607  89420  87407  3438/3129/370    3315/364    30  199   21.87)
(smt.stats   22   2718  95379  94947  3465/3131/370    3535/411    31  204   22.08)
(smt.stats   23   2840 101509 102830  3541/3216/370    3720/411    31  204   22.18)
(smt.stats   24   2974 108444 111539  3550/3217/371    3941/460    32  212   22.42)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 16 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 32 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 64 := 1632&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 16 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 16 := 1664&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 4 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 0 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 8 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1608 := 1640&81102412
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 1640 := 562949953421309 << 27
(smt.stats   25   3121 113928 121595  3702/3356/403    4229/502    33  221   22.52)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 328 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 584 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 200 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 200 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 72 := 1640&81102412
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1608 := 1640&81102412
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 3940649673950824 := 562949953421309 << 27
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1608 := 1640&81102412
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 3940649673950824 := 562949953421309 << 27
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1608 := 1640&81102412
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 3940649673950824 := 562949953421309 << 27
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1536 := 1642&324409650
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1570 := 1642&324409650
(smt.stats   26   3282 122982 132077  3869/3453/466    4546/513    33  221   22.88)
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1058 := 1642&324409650
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1058 := 1642&324409650
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 1058 := 1642&324409650
band: (band[49] (shl[64] (bv2int %0) (mod #767 64)) (if (= #781 63) 0 (if #783 1 #920))) 34 := 1642&324409650
shl: (shl[64] (bv2int %0) (mod (+ #114 #766) 64)) 3940649673950826 := 562949953421311 << 29
(smt.stats   27   3459 133787 149351  3923/3548/466    4896/566    34  235   23.07)
ramon: poll                 wall=2.000s usage=1.991s mem=24748KiB load=0.99 rootload=0.98
(smt.stats   28   3560 138124 158064  3987/3610/479    5243/603    35  237   23.07)
(smt.stats   29   3671 142572 167791  4022/3663/479    5675/605    35  237   23.27)
(smt.stats   30   3793 150319 181413  4103/3734/479    5802/712    36  255   23.36)
(smt.stats   31   3927 157547 195566  4120/3770/479    6065/712    36  255   23.46)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 167841 206086  4213/3848/482    6331/749    37  264   23.55)
(smt.stats   33   4236 176136 223524  4241/3875/484    6750/767    38  277   23.75)
(smt.stats   34   4413 184737 241554  4268/3902/485    7416/880    39  292   23.85)
(smt.stats   35   4607 192931 254219  4327/3905/485    7852/880    39  292   23.94)
(smt.stats   36   4708 201910 277188  4338/3972/485    8022/880    39  292   23.94)
ramon: poll                 wall=3.000s usage=2.991s mem=25292KiB load=1.00 rootload=1.00
(smt.stats   37   4819 206754 290316  4368/3996/485    8193/880    39  292   24.05)
(smt.stats   38   4941 214910 310085  4374/4002/486    8459/977    40  296   24.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 37)
(smt.stats   39   5075 220935 321275  4447/4062/487    8943/1026    41  296   24.33)
ramon: poll                 wall=4.000s usage=3.991s mem=25812KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.990s mem=26028KiB load=1.00 rootload=1.00
(smt.stats   40   5222 228727 335966  4723/4099/487    9253/1032    41  296   24.62)
ramon: poll                 wall=6.000s usage=5.990s mem=26472KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.990s mem=26540KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.003s usage=7.991s mem=26576KiB load=1.00 rootload=1.00
(smt.stats   41   5383 235810 351268  5137/4753/490    9838/1056    42  301   24.90)
ramon: poll                 wall=9.000s usage=8.988s mem=26816KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5560 243012 365723  5250/4762/490   10606/1058    42  301   25.19)
ramon: poll                 wall=10.000s usage=9.988s mem=26892KiB load=1.00 rootload=1.00
(smt.stats   43   5754 257304 395316  5534/4880/490   11239/1306    43  301   25.38)
ramon: poll                 wall=11.000s usage=10.988s mem=27000KiB load=1.00 rootload=1.00
(smt.stats   44   5967 269417 423557  5706/5248/491   11977/1445    44  301   25.73)
ramon: poll                 wall=12.000s usage=11.988s mem=27612KiB load=1.00 rootload=1.00
(smt.stats   45   6068 274948 441181  5746/5332/495   12475/1448    44  301   25.82)
(smt.stats   46   6179 282128 468264  5788/5396/497   12655/1647    45  307   25.82)
ramon: poll                 wall=13.000s usage=12.987s mem=27616KiB load=1.00 rootload=1.00
(smt.stats   47   6301 286294 478446  5855/5434/499   12882/1716    46  309   26.11)
ramon: poll                 wall=14.000s usage=13.987s mem=27628KiB load=1.00 rootload=1.00
(smt.stats   48   6435 287017 482890  6245/5866/508   13259/1716    46  309   26.11)
ramon: poll                 wall=15.000s usage=14.986s mem=27800KiB load=1.00 rootload=1.00
(smt.stats   49   6582 291958 502668  6272/5882/509   14142/1718    46  309   26.30)
ramon: poll                 wall=16.000s usage=15.986s mem=27972KiB load=1.00 rootload=1.00
(smt.stats   50   6743 299667 530368  6381/5913/509   14847/1952    47  342   26.40)
ramon: poll                 wall=17.000s usage=16.986s mem=28376KiB load=1.00 rootload=1.00
(smt.stats   51   6920 310324 571961  6560/6020/510   16256/2039    48  352   26.68)
ramon: poll                 wall=18.000s usage=17.986s mem=28508KiB load=1.00 rootload=1.00
(smt.stats   52   7114 319237 599329  6659/6221/511   17184/2116    49  352   26.87)
(smt.stats   53   7327 334245 635430  6700/6303/511   17648/2118    49  352   26.87)
(smt.stats   54   7561 344819 673148  6730/6337/514   18791/2255    50  352   26.97)
(smt.stats   55   7662 352999 701737  6739/6359/514   19008/2255    50  352   26.97)
(smt.stats   56   7773 360921 720811  6787/6372/514   19222/2389    51  367   27.07)
ramon: poll                 wall=19.000s usage=18.985s mem=28692KiB load=1.00 rootload=1.00
(smt.stats   57   7895 367282 741293  6860/6434/514   19807/2389    51  367   27.07)
(smt.stats   58   8029 374698 758424  6883/6491/517   20236/2530    52  369   27.16)
(smt.stats   59   8176 382033 797764  6904/6528/517   20660/2530    52  369   27.26)
(smt.stats   60   8337 386939 819305  7012/6535/518   20897/2636    53  405   27.45)
ramon: poll                 wall=20.003s usage=19.988s mem=29084KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:29:32 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.991s
ramon: group.utime          19.959s
ramon: group.stime          0.032s
ramon: group.mempeak        29340KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
