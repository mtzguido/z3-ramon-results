ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:05:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24650 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/sAg0HmLT5ReV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             168684
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&58
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&58
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&15569256453
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 15569256453 := 15569256451 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&23
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 23 := 21 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&23
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 23 := 21 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&58
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&34359738335
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 34359738368 := 56 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 34359738368 := 91 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 34359738368 := 91 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 72057594037927936 := 34359738336 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&34292629504
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738367 := 34359738336 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&117440512
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 117440513 := 56 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 811040 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 811040 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 811039 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 811038 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 811036 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 811008 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 811040 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 811039 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 30 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 28 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 24 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&117440512
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738367 := 56 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&117440512
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 1 := 117440512&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&117440512
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 2 := 117440512&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&117440512
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 4 := 117440512&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&117440512
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 811040 := 117440512&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 29 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 414 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 192 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 208 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 192 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 128 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 144 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 128 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 512 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 1024 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 1024 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 2048 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 4096 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 8192 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 8192 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 1024 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 2048 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 4096 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 8192 := 811040&117440512
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 8192 := 811040&117440512
(smt.stats    0    101   2359   1085  1142/1040/213     132/19    11   41   19.55)
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 8192 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 16384 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 32768 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 65536 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 131072 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 262144 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 524288 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 65536 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 524288 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 65536 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 131072 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 65536 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 131072 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 524288 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 262144 := 811040&171966464
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 32768 := 811040&171966464
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 32768 := 811040&171966464
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 32768 := 811040&171966464
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 32768 := 811040&171966464
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 16384 := 811040&171966464
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 512 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 400 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 384 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 384 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 384 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 272 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 272 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 256 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 256 := 811040&188743680
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738367 := 147546 << 21
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738367 := 720986 << 21
(smt.stats    1    202   4850   3094  1743/1518/271     328/88    14   53   20.03)
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 4825 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 811008 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 4828 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 4864 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 5120 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 6144 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 8192 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 16384 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 32768 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 8192 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 65536 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 131072 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 262144 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 524288 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 786432 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 786432 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 589824 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 589824 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 589824 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 8192 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 32772 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 32832 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 32896 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 33024 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 33280 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 32856 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 32856 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 32856 := 188743680&811040
(smt.stats    2    313   6539   5603  1914/1645/329     533/123    18   66   20.51)
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 32768 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 16384 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&188743680
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 16384 := 188743680&811040
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 811040&190840832
band: (band[35] (shl[35] (bv2int %0) (mod #110 35)) (if (= #567 34) 0 (if #569 1 #661))) 16384 := 190840832&811040
(smt.stats    3    414   7933   8018  2021/1784/400     706/129    19   80   20.61)
(smt.stats    4    525  10966  11979  2324/1948/419    1051/249    21   97   20.80)
(smt.stats    5    648  17098  25223  2390/2190/420    1258/310    23  100   21.39)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    749  21223  31966  2586/2272/420    1488/316    23  100   21.49)
(smt.stats    7    860  25436  41349  2761/2415/420    1744/322    23  100   21.58)
(smt.stats    8    982  29030  48765  2859/2594/420    2135/325    23  100   21.68)
ramon: poll                 wall=1.000s usage=0.993s mem=22988KiB load=0.99 rootload=0.96
(smt.stats    9   1116  33390  59988  2901/2687/422    2368/518    24  104   21.68)
(smt.stats   10   1217  37114  67811  3047/2709/423    2796/544    25  108   21.88)
(smt.stats   11   1328  38997  73224  3292/2849/423    3086/673    26  109   22.08)
(smt.stats   12   1450  42277  85335  3418/3212/447    3765/865    28  144   22.17)
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 1&6291456
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 405032602173440 := 2 << 2
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 1&5242880
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 405066960863232 := 2 << 2
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 1&8
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 2 << 2
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   13   1584  46714  95681  3464/3235/454    4131/1171    29  207   22.37)
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 1&8
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 2 << 2
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 1&8
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 2 << 2
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 0&3
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 3 := 1 << 1
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 0&2
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 0 := 1 << 1
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 0&3
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 3 := 1 << 1
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 2 := 1 << 1
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 0&2
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 1 << 1
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 0&175636480
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 175636480 := 1 << 1
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 0&175636480
shl: (shl[64] (bv2int %0) (mod (+ #110 #892) 64)) 175636480 := 1 << 1
(smt.stats   14   1731  49651 107928  3842/3483/466    4417/1206    30  217   22.86)
(smt.stats   15   1832  51726 118099  4005/3711/483    4823/1298    32  247   23.15)
(smt.stats   16   1943  55996 129023  4067/3762/488    5614/1347    33  251   23.43)
(smt.stats   17   2065  60174 148476  4091/3779/491    6582/1445    34  283   23.63)
ramon: poll                 wall=2.000s usage=1.993s mem=25132KiB load=1.00 rootload=0.99
(smt.stats   18   2200  65297 173123  4221/3832/493    7262/1578    35  285   23.82)
(smt.stats   19   2347  69050 187187  4285/3956/496    7799/1673    36  293   24.01)
(smt.stats   20   2508  74705 200683  4405/4079/499    8761/1718    37  326   24.30)
(smt.stats   21   2609  79504 208596  4540/4097/499    9174/1802    38  343   24.40)
ramon: poll                 wall=3.000s usage=2.992s mem=25884KiB load=1.00 rootload=1.00
(smt.stats   22   2720  84346 219057  4688/4242/499    9632/1806    38  343   24.49)
(smt.stats   23   2842  88747 230871  4895/4581/501   10566/1885    39  344   24.68)
(smt.stats   24   2976  92493 241827  4969/4655/502   11534/2084    40  346   24.83)
ramon: poll                 wall=4.000s usage=3.992s mem=26400KiB load=1.00 rootload=1.00
(smt.stats   25   3123 100769 264014  4981/4667/502   12111/2085    40  346   24.93)
(smt.stats   26   3284 107368 287547  5194/4829/504   13155/2320    41  358   25.12)
ramon: poll                 wall=5.000s usage=4.991s mem=27184KiB load=1.00 rootload=1.00
(smt.stats   27   3461 113126 306406  5418/5104/506   14283/2322    41  358   25.30)
(smt.stats   28   3562 117311 320958  5437/5115/511   14904/2498    42  359   25.40)
(smt.stats   29   3673 121071 334893  5616/5148/511   15233/2514    42  359   25.49)
(smt.stats   30   3795 124425 344083  5897/5366/512   15614/2640    43  369   25.49)
(smt.stats   31   3929 128255 357879  6135/5601/512   16059/2648    43  369   25.60)
ramon: poll                 wall=6.000s usage=5.988s mem=27232KiB load=1.00 rootload=1.00
(smt.stats   32   4076 132849 374959  6149/5836/516   17188/2648    43  369   25.73)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4237 143609 405175  6168/5855/517   18080/2867    44  407   25.84)
(smt.stats   34   4414 149966 423437  6187/5861/517   18898/2941    45  414   26.12)
(smt.stats   35   4608 160466 471966  6194/5881/517   20234/2941    45  414   26.22)
ramon: poll                 wall=7.000s usage=6.988s mem=27672KiB load=1.00 rootload=1.00
(smt.stats   36   4709 165515 498679  6265/5883/517   21035/2945    45  414   26.31)
(smt.stats   37   4820 171244 529523  6405/5969/517   21326/2950    45  414   26.31)
(smt.stats   38   4942 175428 549429  6464/6151/518   22144/3327    46  417   26.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 118)
(smt.stats   39   5076 179774 568848  6561/6161/519   22738/3330    46  417   26.56)
ramon: poll                 wall=8.000s usage=7.988s mem=28176KiB load=1.00 rootload=1.00
(smt.stats   40   5223 184891 598592  6778/6283/519   23373/3337    46  417   26.75)
(smt.stats   41   5384 189671 618270  6960/6487/519   23978/3478    47  426   26.85)
ramon: poll                 wall=9.000s usage=8.987s mem=28636KiB load=1.00 rootload=0.99
(smt.stats   42   5561 196031 635097  7120/6757/522   24775/3484    47  426   26.94)
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 3244161&34359715433
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 3244161&34359715433
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 3244161&34359715432
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 3244161&34359715433
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 3244161&34359715433
band: (band[35] (if (or #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 ...) 0 (if #708 1 #772)) (shl[64] (bv2int %0) (mod #893 64))) 0 := 3244161&34359713792
(smt.stats   43   5755 203872 669854  7197/6846/522   25511/3487    47  426   27.04)
(smt.stats   44   5968 209697 694630  7251/6917/527   26277/3667    48  442   27.14)
(smt.stats   45   6069 213579 715840  7267/6954/528   26556/3667    48  442   27.14)
(smt.stats   46   6180 219722 768793  7276/6963/528   27323/3667    48  442   27.31)
ramon: poll                 wall=10.000s usage=9.987s mem=28804KiB load=1.00 rootload=1.00
(smt.stats   47   6302 223141 798902  7434/6964/528   27645/3897    49  442   27.57)
(smt.stats   48   6436 225742 813817  7593/7170/528   28500/3903    49  442   27.57)
(smt.stats   49   6583 234633 851941  7594/7281/529   29395/3903    49  442   27.76)
ramon: poll                 wall=11.000s usage=10.987s mem=29452KiB load=1.00 rootload=1.00
(smt.stats   50   6744 242580 894830  7676/7294/532   30651/4124    50  443   27.86)
(smt.stats   51   6921 248958 928762  7968/7655/533   31435/4258    51  534   28.15)
(smt.stats   52   7115 258018 956894  8028/7662/533   32549/4259    51  534   28.25)
ramon: poll                 wall=12.000s usage=11.987s mem=29888KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7328 266799 994036  8393/7774/533   33414/4267    51  534   28.34)
(smt.stats   54   7562 278601 1039924  8494/8115/533   34296/4270    51  534   28.63)
ramon: poll                 wall=13.000s usage=12.986s mem=30232KiB load=1.00 rootload=1.00
(smt.stats   55   7663 284127 1065483  8519/8206/533   35129/4270    51  534   28.63)
(smt.stats   56   7774 293001 1106056  8531/8218/533   36184/4270    51  534   28.75)
(smt.stats   57   7896 297985 1145207  8538/8225/533   36754/4270    51  534   28.85)
(smt.stats   58   8030 301505 1170973  8548/8235/536   37893/4895    52  539   28.94)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   59   8177 309523 1220133  8550/8237/536   38091/4895    52  539   29.06)
ramon: poll                 wall=14.000s usage=13.986s mem=31180KiB load=1.00 rootload=1.00
(smt.stats   60   8338 313389 1254302  8662/8240/536   38517/4895    52  539   29.15)
(smt.stats   61   8515 316112 1275599  8762/8354/536   39237/5050    53  563   29.15)
(smt.stats   62   8709 324339 1320509  8778/8463/538   39949/5050    53  563   29.34)
(smt.stats   63   8923 330313 1354536  8792/8477/539   40629/5167    54  643   29.54)
ramon: poll                 wall=15.000s usage=14.986s mem=31312KiB load=1.00 rootload=1.00
(smt.stats   64   9157 340287 1389685  8878/8553/540   41919/5174    54  643   29.85)
(smt.stats   65   9414 351379 1452320  8936/8583/540   43682/5174    54  643   30.05)
(smt.stats   66   9515 354761 1463445  8981/8634/540   44454/5478    55  644   30.14)
ramon: poll                 wall=16.000s usage=15.985s mem=31704KiB load=1.00 rootload=1.00
(smt.stats   67   9626 359251 1487936  9069/8675/540   45382/5483    55  644   30.24)
(smt.stats   68   9748 364121 1513035  9215/8773/540   45923/5488    55  644   30.24)
(smt.stats   69   9882 370171 1545665  9337/8916/540   46792/5491    55  644   30.48)
ramon: poll                 wall=17.000s usage=16.985s mem=32096KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 561)
(smt.stats   70  10029 376449 1575708  9386/9069/541   47310/5734    56  656   30.77)
(smt.stats   71  10190 382521 1611776  9507/9078/541   48814/5740    56  656   30.77)
(smt.stats   72  10367 388210 1641700  9686/9226/541   49825/5749    56  656   30.96)
ramon: poll                 wall=18.000s usage=17.985s mem=32528KiB load=1.00 rootload=1.00
(smt.stats   73  10561 392308 1676625  9786/9424/542   50844/5749    56  656   31.06)
(smt.stats   74  10774 398671 1716842  9941/9486/542   51750/6186    57  676   31.25)
(smt.stats   75  11008 407532 1777776 10159/9748/544   53165/6192    57  676   31.34)
ramon: poll                 wall=19.000s usage=18.985s mem=33000KiB load=1.00 rootload=1.00
(smt.stats   76  11265 418209 1864412 10204/9879/545   54397/6447    58  697   31.54)
(smt.stats   77  11547 427487 1905529 10321/9910/545   56134/6450    58  697   31.74)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   78  11648 431506 1917456 10421/10032/545   56578/6452    58  697   31.83)
ramon: poll                 wall=20.000s usage=19.984s mem=33412KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:05:20 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.997s
ramon: group.utime          19.957s
ramon: group.stime          0.040s
ramon: group.mempeak        33668KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
