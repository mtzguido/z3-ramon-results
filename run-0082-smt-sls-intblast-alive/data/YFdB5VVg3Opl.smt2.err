ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:41:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28019 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YFdB5VVg3Opl.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             844442
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 34359738368 := 22 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 34359738368 := 34359738337 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&126681115
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&126681115
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 58 := 4194303&58
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 58 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 58 := 4194303&58
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 58 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 58 := 4194303&58
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 58 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 4194303 := 4194303&126681115
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&239075329
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 34359738368 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&239075328
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&34229714944
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 34359738337 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&239075328
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 57 << 22
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&239075328
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1 := 57 << 22
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   123.457     10000        49          0            1        2)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 4194296 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4194303 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4194302 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 2 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 1 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 2 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 8 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4194288 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 32 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 64 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 128 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 256 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 512 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 1024 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 2048 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4096 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 8192 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16384 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 32768 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 65536 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 131072 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 262144 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 131072 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 262144 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 524288 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 1048576 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 2097152 := 4194304&4194303
(smt.stats    0    101   2464   1338  1122/1019/182     101/15     8   35   52.55)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 4194296 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 4194288 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1026 := 4194303&4194304
(sat.ddfw       1      1   58.4854     20001        98          1            1        3)
(smt.stats    1    202   3375   2617  1801/1477/198     245/33    10   40   52.65)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 442 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1018 := 4194303&8388608
(sat.ddfw       1      1   57.1429     40001       196          2            1        5)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 442 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 442 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 410 := 4194303&8388608
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 410 := 4194303&34229714944
(sat.ddfw       1      1   48.1541     70001       343          3            1        8)
(smt.stats    2    313   4982   5324  2060/1693/198     439/36    10   40   52.95)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 41 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 36 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 36 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 36 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 32 := 4194303&4194304
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 2048 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 4096 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 8192 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16384 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 5120 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 5120 := 4194304&4194303
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 4194303&4194304
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 5120 := 4194304&4194303
(smt.stats    3    414   6491   9611  2189/2029/253     763/83    15   56   53.04)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&222298148
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497509
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497504
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497505
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497505
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&83886113
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&83886009
(smt.stats    4    525   8238  15970  2372/2165/257    1019/206    17   68   53.14)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&75497505
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&83886113
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&100663329
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&100663329
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&134217761
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&100663329
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&134217761
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&335544369
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&285212705
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&285212705
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&285212705
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&276824049
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&268435489
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 18073490817057 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&268435489
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 18176570032161 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&268435489
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 18176570032161 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 33 := 268435455&268435489
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 18176570032161 := 4341778 << 28
(smt.stats    5    647  10877  25628  2527/2304/331    1217/346    20   84   53.34)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 4341777 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 4341777 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 4341777 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 4341777 := 4341778 << 28
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 8388608 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16777216 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 33554432 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 67108864 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 134217728 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 67108864 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 67108864 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 67108864 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 134217728 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16777216 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 33554432 := 4831838208&268435455
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 0 := 268435455&4831838208
band: (band[35] (shl[35] (bv2int %0) (mod #109 35)) (if (= #565 34) 1 (if #567 3 #660))) 16777216 := 4831838208&268435455
ramon: poll                 wall=1.000s usage=0.988s mem=55676KiB load=0.99 rootload=0.96
(sat.ddfw       1      1   40.2414    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  11599  28191  2674/2414/382    1379/369    21   88   53.63)
(smt.stats    7    859  13708  37322  2857/2637/393    1746/382    22  101   53.72)
(smt.stats    8    981  18471  52897  2877/2683/394    2293/512    23  101   53.83)
(sat.ddfw       1      1    38.051    160000       784          5            1       17)
(smt.stats    9   1115  25199  70992  2920/2714/398    2636/845    26  114   53.94)
(sat.ddfw       1      1   33.4827    220001      1078          6            1       23)
(smt.stats   10   1216  27290  79481  3079/2766/400    2811/852    27  116   54.51)
ramon: poll                 wall=2.007s usage=2.093s mem=57132KiB load=1.10 rootload=1.10
(sat.ddfw       1      1   28.8541    290001      1421          7            1       30)
(smt.stats   11   1327  28197  82277  3249/2873/400    2975/868    28  116   54.70)
(smt.stats   12   1449  30379  91514  3310/3104/403    3304/925    29  119   54.70)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1 := 65535&83886081
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 87961014108161 := 4300921 << 16
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1 := 65535&83886081
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 87961014108161 := 4300921 << 16
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 1 := 65535&83886081
shl: (shl[64] (bv2int %0) (mod (+ #109 #888) 64)) 87961014108161 := 4300921 << 16
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   13   1583  32859 103420  3447/3239/409    3529/1013    30  125   54.84)
ramon: poll                 wall=3.000s usage=3.084s mem=57760KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   25.3807    370001      1813          8            1       38)
(smt.stats   14   1730  35559 117213  3697/3342/410    3873/1022    30  125   54.93)
(smt.stats   15   1831  37057 125363  3780/3504/410    4062/1062    31  127   55.22)
(sat.ddfw       1      1   22.6244    460001      2254          9            1       47)
ramon: poll                 wall=4.000s usage=4.082s mem=57760KiB load=1.00 rootload=1.00
(smt.stats   16   1942  37533 127631  4009/3666/410    4194/1062    31  127   55.41)
(sat.ddfw       1      1   20.7125    560001      2745         10            1       57)
(smt.stats   17   2064  40166 139154  4206/3993/411    4876/1199    32  130   55.32)
ramon: poll                 wall=5.000s usage=5.096s mem=58032KiB load=1.01 rootload=1.01
(smt.stats   18   2198  45400 156092  4264/4036/411    5236/1200    32  130   55.89)
(sat.ddfw       1      1   18.8712    670001      3284         11            1       68)
ramon: poll                 wall=6.003s usage=6.099s mem=58448KiB load=1.00 rootload=1.00
(smt.stats   19   2345  49834 172060  4514/4289/412    5749/1363    33  130   55.79)
(smt.stats   20   2506  53122 178837  4678/4328/412    6578/1367    33  130   55.98)
(smt.stats   21   2607  57695 202362  4711/4470/412    6836/1368    33  130   55.98)
(sat.ddfw       1      1    17.336    790001      3872         12            1       80)
ramon: poll                 wall=7.003s usage=7.090s mem=58624KiB load=0.99 rootload=1.00
(smt.stats   22   2718  62811 228236  4759/4515/412    7407/1371    33  130   56.20)
(smt.stats   23   2840  66951 235590  4949/4543/412    7646/1375    33  130   56.29)
(smt.stats   24   2974  71029 251948  5218/4987/417    8333/1729    34  133   56.39)
ramon: poll                 wall=8.000s usage=8.083s mem=58820KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   16.0454    920001      4509         13            1       93)
(smt.stats   25   3121  77385 295047  5245/4989/418    9004/1921    35  148   56.49)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122727
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122726
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122734
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122814
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122798
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122878
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122814
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122814
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122814
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423123198
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17423122942
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179869182 := 17179869183&17356014334
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179868174 := 17179869183&17221796462
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17179868174 := 17179869183&17221796462
(smt.stats   26   3282  81870 324374  5664/5082/418    9425/2000    36  154   56.77)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092140 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092142 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092398 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092398 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092398 := 17179869183&17221796270
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 17163092398 := 17179869183&17221796270
(smt.stats   27   3459  84719 341848  6148/5912/508   10620/2090    37  164   57.06)
ramon: poll                 wall=9.000s usage=9.081s mem=59604KiB load=1.00 rootload=0.99
(smt.stats   28   3560  88704 354215  6144/5914/509   11117/2816    38  226   57.15)
(sat.ddfw       1      1   14.9381   1060001      5196         14            1      108)
(smt.stats   29   3671  95062 393664  6168/5937/509   11617/2816    38  226   57.38)
(smt.stats   30   3793 100398 418314  6219/5977/511   11997/3206    39  230   57.49)
(smt.stats   31   3927 107680 442754  6243/5985/512   12463/3336    40  235   57.69)
ramon: poll                 wall=10.000s usage=10.076s mem=60140KiB load=0.99 rootload=1.00
(smt.stats   32   4074 113464 455683  6331/6065/512   13150/3336    40  235   57.79)
(sat.ddfw       1      1    14.159   1210001      5931         15            1      123)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4235 121962 486288  6401/6077/514   13919/3338    40  235   58.00)
ramon: poll                 wall=11.000s usage=11.143s mem=60592KiB load=1.07 rootload=1.06
(smt.stats   34   4412 131211 525723  6510/6244/521   14795/3785    42  243   58.19)
(sat.ddfw       1      1   13.4363   1370001      6715         16            1      139)
ramon: poll                 wall=12.000s usage=12.216s mem=60852KiB load=1.07 rootload=1.08
(smt.stats   35   4606 138398 566695  6549/6267/523   15897/3787    42  243   58.54)
(smt.stats   36   4708 141618 583097  6641/6375/524   16258/3939    43  270   58.54)
(smt.stats   37   4819 146426 609147  6649/6377/525   16759/3940    43  270   58.54)
(smt.stats   38   4941 150338 628249  6664/6398/527   17461/4080    44  294   58.76)
(smt.delete-inactive-clauses  :num-deleted-clauses 1004)
ramon: poll                 wall=13.003s usage=13.218s mem=61224KiB load=1.00 rootload=1.00
(smt.stats   39   5075 155729 651164  6674/6408/530   17026/4080    44  294   58.76)
(smt.stats   40   5222 161159 690633  6744/6415/531   17913/4238    45  342   59.08)
(sat.ddfw       1      1   12.6225   1540001      7549         17            1      156)
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 3 := 1073741823&3573547007
band: (band[35] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #706 1 #772)) (shl[64] (bv2int %0) (mod #889 64))) 3 := 1073741823&3573547007
(smt.stats   41   5383 167169 735687  6928/6621/533   18436/4365    47  385   59.17)
ramon: poll                 wall=14.000s usage=14.213s mem=61616KiB load=1.00 rootload=0.99
(smt.stats   42   5560 173457 765727  6945/6678/537   19256/4365    47  385   59.17)
ramon: poll                 wall=15.000s usage=15.214s mem=61916KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   11.9111   1720001      8431         18            1      174)
(smt.stats   43   5754 183186 823120  7179/6687/540   20071/4578    48  436   59.46)
ramon: poll                 wall=16.000s usage=16.211s mem=61800KiB load=1.00 rootload=0.99
(smt.stats   44   5967 190050 857709  7533/6977/540   20653/4656    49  467   59.55)
(sat.ddfw       1      1    11.284   1910001      9362         19            1      193)
(smt.stats   45   6068 193918 877329  7567/7289/540   21066/4658    49  467   59.55)
ramon: poll                 wall=17.000s usage=17.264s mem=62144KiB load=1.05 rootload=1.05
(smt.stats   46   6179 196373 891135  7727/7313/540   21373/4665    49  467   59.71)
(smt.stats   47   6301 196972 894874  8081/7618/540   21581/4667    49  467   59.82)
(smt.stats   48   6435 199049 914320  8654/8000/540   22938/4671    49  467   60.10)
ramon: poll                 wall=18.000s usage=18.267s mem=62832KiB load=1.00 rootload=1.00
(smt.stats   49   6582 201566 926411  8702/8397/541   24544/5000    50  469   60.30)
(smt.stats   50   6743 206814 996143  8731/8461/541   25766/5000    50  469   60.39)
(sat.ddfw       1      1   10.7107   2110001     10343         20            1      214)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   51   6920 212153 1027395  8753/8481/541   26156/5000    50  469   60.82)
ramon: poll                 wall=19.000s usage=19.340s mem=63112KiB load=1.07 rootload=1.08
(smt.stats   52   7114 217737 1066178  8810/8537/545   27233/5548    51  474   60.94)
ramon: poll                 wall=20.000s usage=20.424s mem=63524KiB load=1.08 rootload=1.08
ramon: end                  Fri Nov  1 22:41:49 2024
ramon: root.execname        z3
ramon: root.utime           20.410s
ramon: root.stime           0.020s
ramon: group.total          20.442s
ramon: group.utime          20.414s
ramon: group.stime          0.028s
ramon: group.mempeak        63784KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.021s
ramon: loadavg              1.02
