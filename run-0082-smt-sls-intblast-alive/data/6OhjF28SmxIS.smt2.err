ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:42:11 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29337 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6OhjF28SmxIS.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             639114
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   108.696     10000        49          0            1        2)
(smt.stats    0    101   5638    529  1303/1170/103      90/17     8   22   51.98)
(sat.ddfw       1      1   42.5574     20001        98          1            1        3)
(sat.ddfw       1      1   44.0529     40001       196          2            1        5)
(smt.stats    1    202   6397    773  1959/1748/103     201/22     8   22   52.37)
(smt.stats    2    313   9320   1741  2219/1955/103     352/25     8   22   52.37)
(smt.stats    3    414  10038   2208  2885/2137/103     454/76     8   22   52.50)
(smt.stats    4    525  11716   3803  2997/2753/105     588/138    10   23   52.62)
(sat.ddfw       1      1   38.1194     70001       343          3            1        8)
(smt.stats    5    647  15128   7339  3085/2761/105     733/138    10   23   52.62)
ramon: poll                 wall=1.000s usage=0.881s mem=54708KiB load=0.88 rootload=0.87
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17429  10851  3106/2857/106     851/163    11   25   52.71)
(smt.stats    7    859  20034  16948  3107/2863/106     961/163    11   25   52.81)
(smt.stats    8    981  23098  22717  3108/2864/106    1083/163    11   25   52.94)
(smt.stats    9   1115  24819  28211  3116/2872/108    1221/175    12   28   52.94)
(smt.stats   10   1216  26598  31310  3139/2879/108    1337/176    12   28   52.94)
(smt.stats   11   1327  29175  36493  3175/2909/108    1449/177    12   28   53.03)
(sat.ddfw       1      1   32.5998    110001       539          4            1       12)
(smt.stats   12   1449  32721  40870  3188/2935/108    1573/177    12   28   53.17)
(smt.stats   13   1583  34489  48711  3209/2960/116    1710/196    13   29   53.17)
(smt.stats   14   1730  36268  56102  3216/2963/116    1847/223    14   38   53.17)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 0&144115188075855870
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 0 := 144115188075855871 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 0&144115188075855870
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 0 := 144115188075855871 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 0&144115188075855870
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 0 := 144115188075855871 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 0&144115188075855870
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 0 := 144115188075855871 << 1
(smt.stats   15   1831  38592  58419  3251/2982/116    1943/224    14   38   53.17)
(smt.stats   16   1942  39181  61131  3272/3012/121    2064/227    15   39   53.27)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 1 := 1&2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 144115188075855874 := 0 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 144115188075855874 := 0 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 144115188075855874 := 0 << 1
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 2 := 0 << 2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 2 := 0 << 2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 1&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 2 := 0 << 2
(smt.stats   17   2064  42243  66654  3332/3035/121    2195/241    16   39   53.43)
(smt.stats   18   2198  44443  73371  3365/3095/132    2329/243    18   46   53.53)
(smt.stats   19   2345  47974  78479  3382/3108/134    2482/243    19   47   53.77)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&62
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&61
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&61
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&60
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 288230376151711744 := 72057594037927968 << 6
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 74309393851613184 := 37154696925806592 << 7
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 4755801206503243776 := 72057594037927968 << 6
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 74309393851613184 := 37154696925806592 << 7
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 74309393851613184 := 37154696925806592 << 7
(sat.ddfw       1      1   29.0861    160000       784          5            1       17)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 74309393851613184 := 37154696925806592 << 7
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 1 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 1 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 2 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 4 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 63 := 63&2287542667870720
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 1 := 63&128
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 63&2287542667870720
band: (band[57] (if (= #109 56) 0 (if #626 1 #785)) (shl[57] (bv2int %1) (+ 57 #788))) 2 := 63&2287542667870720
(smt.stats   20   2506  51489  84779  3468/3189/184    2663/254    21   59   53.97)
ramon: poll                 wall=2.000s usage=1.932s mem=56040KiB load=1.05 rootload=1.05
(smt.stats   21   2607  52767  88477  3492/3210/185    2770/256    21   59   53.97)
(smt.stats   22   2718  54666  96391  3551/3243/189    2851/271    22   83   54.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   23   2840  56794 101961  3606/3286/189    3000/284    23   98   54.06)
(smt.stats   24   2974  58495 106407  3624/3337/190    3125/306    24  103   54.06)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9367487224930631682 := 144115188075855872 << 16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9367487224930631682 := 144115188075855872 << 16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9655717601082343426 := 144115188075855872 << 16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 65535&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 15132094747964866562 := 144115188075855872 << 16
(smt.stats   25   3121  63969 115232  3659/3374/197    3284/311    25  109   54.21)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 1 := 36028797018963967&2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&2
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&8
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&32
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&64
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&32
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&128
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&16
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&16
(sat.ddfw       1      1   26.4322    220001      1078          6            1       23)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 3 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 2 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 36028797018963967&4
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&12
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&12
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&12
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&36
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&36
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&36
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&132
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&260
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&260
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&260
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&132
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&260
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&132
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&1028
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&1028
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&2052
(smt.stats   26   3282  66445 122757  3883/3551/312    3522/338    26  126   55.01)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 4 := 36028797018963967&516
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&518
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 516 := 36028797018963967&516
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 7493989779944505860 := 217316553447719174 << 55
ramon: poll                 wall=3.000s usage=2.928s mem=57296KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   23.0187    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.931s mem=57296KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.4656    370001      1813          8            1       38)
(sat.ddfw       1      1   18.3936    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.932s mem=57304KiB load=1.00 rootload=1.01
(smt.stats   27   3459  69391 132912  3993/3590/332    3809/352    26  126   55.10)
(smt.stats   28   3560  71737 138086  4024/3734/344    3923/382    27  139   55.10)
(smt.stats   29   3671  76471 146357  4033/3747/344    4030/382    27  139   55.10)
(smt.stats   30   3793  80497 158765  4057/3766/344    4138/394    28  146   55.20)
ramon: poll                 wall=6.000s usage=5.929s mem=57364KiB load=1.00 rootload=0.99
(smt.stats   31   3927  82889 164667  4084/3781/344    4283/395    28  146   55.20)
(sat.ddfw       1      1   16.7056    560001      2745         10            1       57)
(smt.stats   32   4074  85217 172090  4114/3802/344    4461/398    28  146   55.20)
(smt.stats   33   4235  90539 189807  4128/3835/344    4624/398    28  146   55.20)
(smt.stats   34   4412  98498 207795  4133/3844/345    4827/452    29  147   55.67)
(smt.stats   35   4606  99344 215884  4149/3860/345    5029/452    29  147   55.67)
(smt.stats   36   4707 104554 227583  4159/3861/345    5174/453    29  147   55.67)
(smt.stats   37   4818 111853 242136  4167/3874/345    5313/454    29  147   55.67)
(smt.stats   38   4940 114839 252060  4168/3879/345    5582/454    29  147   55.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 146)
(smt.stats   39   5074 121926 258554  4171/3882/347    5562/515    30  155   55.77)
ramon: poll                 wall=7.000s usage=6.928s mem=57968KiB load=1.00 rootload=1.00
(smt.stats   40   5221 126485 270337  4204/3905/350    5707/519    31  158   55.93)
(sat.ddfw       1      1   15.3097    670001      3284         11            1       68)
(smt.stats   41   5382 135688 291966  4237/3938/350    5884/519    31  158   55.93)
(smt.stats   42   5559 138935 301917  4325/4004/353    6093/519    32  167   56.27)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   43   5753 144521 322499  4328/4004/357    6303/535    33  173   56.27)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&8192
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 576460752303431680 := 0 << 13
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&8192
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 576460752303431680 := 0 << 13
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&8192
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 576460752303431680 := 0 << 13
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&8192
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 576460752303431680 := 0 << 13
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 1 := 0 << 14
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 1 := 0 << 14
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 1 := 0 << 14
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 8191&0
shl: (shl[57] (bv2int %1) (+ 57 (* 144115188075855871 #105))) 1 := 0 << 14
ramon: poll                 wall=8.000s usage=7.927s mem=58708KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.1243    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.930s mem=58944KiB load=1.00 rootload=1.00
(smt.stats   44   5966 150854 333703  4456/4023/357    6648/541    33  173   56.78)
(smt.stats   45   6067 152464 336858  4521/4191/372    6754/594    34  184   56.78)
(smt.stats   46   6178 160984 352128  4526/4199/372    6898/594    34  184   56.88)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 7&72057594037929984
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9439544818968561664 := 144115188075855872 << 3
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 7&72057594037929984
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9583660007044417536 := 144115188075855872 << 3
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 7&72057594037929984
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 56 #870 #874) 64)) 9583660007044417536 := 144115188075855872 << 3
(smt.stats   47   6300 166293 366196  4572/4241/378    7124/673    36  191   56.88)
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&2048
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&2048
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&2048
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&4096
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&4096
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&8192
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&8192
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&8192
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&32768
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&32768
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&65536
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&65536
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&131072
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&16384
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&65536
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&131072
band: (band[57] (if (= #405 63) 0 (if #603 1 #863)) (shl[64] (* 2 #388) (mod #878 64))) 0 := 34359738367&262144
(smt.stats   48   6434 172002 382796  4727/4351/440    7363/722    37  205   57.19)
ramon: poll                 wall=10.000s usage=9.929s mem=59528KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.1114    920001      4509         13            1       93)
(smt.stats   49   6581 178963 394139  4784/4428/467    7617/803    38  212   57.48)
(smt.stats   50   6742 185814 410387  4874/4441/467    7825/806    38  212   57.48)
ramon: poll                 wall=11.000s usage=10.930s mem=59768KiB load=1.00 rootload=1.00
(smt.stats   51   6919 194637 430111  4987/4536/467    8135/811    38  212   57.58)
(sat.ddfw       1      1    12.242   1060001      5196         14            1      108)
(smt.stats   52   7113 201477 451508  5023/4667/471    8642/893    39  214   57.86)
ramon: poll                 wall=12.000s usage=11.929s mem=60284KiB load=1.00 rootload=1.00
(smt.stats   53   7326 209442 481369  5257/4712/471    9239/1060    40  228   58.32)
(smt.stats   54   7560 218683 512099  5294/4945/480    9615/1215    41  230   58.42)
ramon: poll                 wall=13.000s usage=12.929s mem=60552KiB load=1.00 rootload=1.00
(smt.stats   55   7661 224877 526677  5416/5015/480    9726/1216    41  230   58.53)
(sat.ddfw       1      1   11.4855   1210001      5931         15            1      123)
(smt.stats   56   7772 229499 539982  5451/5070/480    9860/1309    42  254   58.53)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   57   7894 233724 553761  5477/5108/483   10030/1325    43  256   58.63)
(smt.stats   58   8028 236872 564049  5498/5119/484   10391/1325    43  256   58.82)
ramon: poll                 wall=14.000s usage=13.927s mem=60996KiB load=1.00 rootload=1.00
(smt.stats   59   8175 244906 591549  5637/5173/485   10628/1447    44  275   58.91)
(smt.stats   60   8336 253244 621023  5765/5264/485   10902/1490    45  275   58.91)
(sat.ddfw       1      1   10.8086   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=14.929s mem=61136KiB load=1.00 rootload=1.00
(smt.stats   61   8513 257876 640665  5797/5409/485   11372/1490    45  275   58.91)
(smt.stats   62   8707 270716 682360  5801/5422/486   11769/1565    46  280   59.01)
(smt.stats   63   8921 280115 714052  5820/5439/492   12191/1659    47  283   59.11)
ramon: poll                 wall=16.000s usage=15.927s mem=61484KiB load=1.00 rootload=1.00
(smt.stats   64   9155 289178 741532  5962/5566/497   12522/1671    48  336   59.30)
(sat.ddfw       1      1   10.2157   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=16.993s mem=61816KiB load=1.07 rootload=1.07
(smt.stats   65   9412 303408 769307  6094/5600/497   13089/1680    48  336   59.49)
(smt.stats   66   9513 306094 779338  6113/5726/499   13463/1774    49  346   59.59)
(smt.stats   67   9624 308083 790432  6131/5740/501   13590/1775    49  346   59.59)
(smt.stats   68   9746 312572 801430  6175/5759/501   13754/1777    49  346   60.18)
ramon: poll                 wall=18.000s usage=18.031s mem=62116KiB load=1.04 rootload=1.03
(sat.ddfw       1      1    9.7429   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=19.031s mem=62204KiB load=1.00 rootload=1.00
(smt.stats   69   9880 320179 814630  6413/5804/501   14009/1865    50  359   60.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 158)
(smt.stats   70  10027 326800 835437  6474/6087/503   14245/1948    51  371   60.47)
ramon: poll                 wall=20.000s usage=20.069s mem=62608KiB load=1.04 rootload=1.04
ramon: end                  Fri Nov  1 21:42:31 2024
ramon: root.execname        z3
ramon: root.utime           20.140s
ramon: root.stime           0.010s
ramon: group.total          20.155s
ramon: group.utime          20.143s
ramon: group.stime          0.012s
ramon: group.mempeak        62880KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.107s
ramon: loadavg              1.00
