ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:35:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29448 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/3sPhieXbXB44.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             617526
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1        80     10000        49          0            1        2)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1 := 72057594037927935&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187280&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 0&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 72057594037927936 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187280&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187311&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187311&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187296&18014398509481983
(sat.ddfw       1      1   36.6337     20001        98          1            1        3)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 15 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 15 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481983 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481982 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481980 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 0&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 72057594037927936 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 0&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 72057594037927936 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 0&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 72057594037927936 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481979 := 18014398509481984&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481978 := 63050394783187278&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481976 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481968 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481979 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481979 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481978 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481976 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481968 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481952 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481920 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481960 := 18014398509481984&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481960 := 18014398509481992&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481960 := 18014398509481960&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 90071992547409896 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037927935 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037927935 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 1 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 3 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 63050394783187278 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 18014398509481983 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 18014398509481982 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 18014398509481980 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 18014398509481976 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 8 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 16 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 64 := 36028797018963968&18014398509481983
(smt.stats    0    101   4869    991  1411/1225/176     104/21     9   33   52.77)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 36028797018963969 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 204 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 264 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 64 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 64 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 8 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 8 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 8 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 8 := 36028797018963968&18014398509481983
(sat.ddfw       1      1   40.4858     40001       196          2            1        5)
(smt.stats    1    202   6295   2625  2704/2392/244     251/56    13   49   52.98)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 2 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 2 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 1 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 128 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 128 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 16 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 64 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 64 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 4 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 16 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 16 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 128 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 128 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 256 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 512 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1024 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2048 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2048 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2048 := 36028797018963968&18014398509481983
(smt.stats    2    313   7729   4863  2814/2542/334     397/75    18   73   53.65)
(smt.stats    3    414   8078   5521  2993/2622/334     642/75    18   73   53.55)
(sat.ddfw       1      1   36.8098     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.858s mem=55936KiB load=0.86 rootload=0.84
(smt.stats    4    525  12163   9854  3139/2859/352     929/187    23   97   53.79)
(sat.ddfw       1      1   31.9234    110001       539          4            1       12)
(smt.stats    5    647  16829  18488  3190/2919/355    1162/268    25  100   53.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  20677  26726  3277/3001/361    1294/302    29  109   54.09)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 52 := 36028797018964084&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 36028797018964084 := 7 << 7
(smt.stats    7    859  25136  33985  3338/3027/368    1563/334    33  128   54.20)
(sat.ddfw       1      1   27.9324    160000       784          5            1       17)
(smt.stats    8    982  28371  39301  3451/3170/372    1997/468    34  129   54.39)
ramon: poll                 wall=2.002s usage=1.858s mem=56744KiB load=1.00 rootload=1.00
(smt.stats    9   1116  33090  47505  3490/3189/372    2358/506    35  131   54.51)
(smt.stats   10   1217  38580  59167  3506/3218/372    2562/507    35  131   54.61)
(sat.ddfw       1      1   24.6007    220001      1078          6            1       23)
(smt.stats   11   1328  43746  70420  3546/3265/374    2816/709    37  137   54.72)
(smt.stats   12   1450  49007  79493  3553/3272/374    3120/709    37  137   54.83)
ramon: poll                 wall=3.000s usage=2.857s mem=57116KiB load=1.00 rootload=1.00
(smt.stats   13   1584  55301 102175  3558/3277/374    3567/709    37  137   54.93)
(sat.ddfw       1      1   21.8818    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   14   1731  58875 112713  3646/3293/376    3777/1079    38  138   55.03)
ramon: poll                 wall=4.000s usage=3.857s mem=57428KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.6609    370001      1813          8            1       38)
(smt.stats   15   1832  59453 115347  3794/3449/376    3918/1082    38  138   55.30)
(smt.stats   16   1943  60917 122465  4066/3759/377    4257/1134    39  138   55.30)
(smt.stats   17   2065  64481 131147  4096/3783/377    4427/1134    39  138   55.57)
(smt.stats   18   2199  69820 152686  4118/3804/378    4692/1200    41  142   55.67)
ramon: poll                 wall=5.000s usage=4.857s mem=58268KiB load=1.00 rootload=1.00
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 252201579132747776 := 7 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 16248987455552749568 := 7 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 16248987455552749568 := 7 << 7
(sat.ddfw       1      1   17.8394    460001      2254          9            1       47)
(smt.stats   19   2346  74372 163369  4209/3869/378    5043/1202    41  142   55.88)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 8064&63
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 9 := 63 << 7
(smt.stats   20   2507  79954 176797  4261/3950/390    5431/1243    43  154   55.98)
(smt.stats   21   2608  83380 190054  4302/3962/391    5670/1245    43  154   56.08)
ramon: poll                 wall=6.000s usage=5.857s mem=58572KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   16.3372    560001      2745         10            1       57)
(smt.stats   22   2719  86828 201081  4340/4014/392    5910/1340    44  164   56.08)
(smt.stats   23   2841  90122 214212  4354/4034/392    6069/1379    45  166   56.08)
ramon: poll                 wall=7.000s usage=6.853s mem=58668KiB load=1.00 rootload=1.00
(smt.stats   24   2975  92441 225594  4368/4048/392    6327/1379    45  166   56.31)
(sat.ddfw       1      1   15.0376    670001      3284         11            1       68)
ramon: poll                 wall=8.002s usage=7.859s mem=58824KiB load=1.00 rootload=1.00
(smt.stats   25   3122  97405 235086  4427/4060/393    6736/1453    46  170   56.50)
(sat.ddfw       1      1   13.9357    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.853s mem=58892KiB load=1.00 rootload=1.00
(smt.stats   26   3283 101646 246630  4462/4132/393    7099/1455    46  170   56.78)
ramon: poll                 wall=10.000s usage=9.855s mem=59180KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.9741    920001      4509         13            1       93)
(smt.stats   27   3460 108068 266543  4538/4226/394    7720/1593    47  178   56.88)
(smt.stats   28   3561 111152 277001  4557/4229/394    7922/1594    47  178   56.88)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2 := 896&63
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1 := 896&63
(smt.stats   29   3672 114022 286274  4612/4250/394    8200/1595    47  178   56.97)
ramon: poll                 wall=11.000s usage=10.902s mem=59396KiB load=1.05 rootload=1.05
(smt.stats   30   3794 116687 294496  4665/4349/408    8478/1666    48  179   57.17)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 5 := 640&15
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 5 := 640&15
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 4 := 640&15
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 4 := 640&15
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 640&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 640 := 5 << 5
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 640&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 640 := 5 << 5
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 640&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 640 := 5 << 5
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 640&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 640 := 5 << 5
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 7 := 7 << 7
(smt.stats   31   3928 118973 303884  4711/4355/408    8796/1672    48  179   57.17)
(sat.ddfw       1      1   12.2506   1060001      5196         14            1      108)
(smt.stats   32   4075 124752 314500  4744/4418/413    9032/1756    49  196   57.31)
ramon: poll                 wall=12.000s usage=11.902s mem=59812KiB load=1.00 rootload=1.00
(smt.stats   33   4236 134647 359812  4770/4454/413    9253/1756    49  196   57.31)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   34   4413 146135 424948  4774/4458/413    9468/1792    50  196   57.59)
ramon: poll                 wall=13.000s usage=12.902s mem=59676KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.4934   1210001      5931         15            1      123)
(smt.stats   35   4607 149719 439528  4808/4464/413    9877/1793    50  196   57.69)
ramon: poll                 wall=14.000s usage=13.896s mem=59796KiB load=0.99 rootload=0.99
(smt.stats   36   4708 153446 454024  4831/4493/413   10043/1795    50  196   57.69)
(sat.ddfw       1      1   10.8159   1370001      6715         16            1      139)
(smt.stats   37   4819 157735 469980  4911/4537/413   10252/1795    50  196   57.78)
ramon: poll                 wall=15.000s usage=14.875s mem=60056KiB load=0.98 rootload=0.98
(smt.stats   38   4941 162954 490797  4952/4607/414   10766/1907    51  198   57.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
ramon: poll                 wall=16.006s usage=15.862s mem=60344KiB load=0.98 rootload=0.98
(smt.stats   39   5075 166811 503759  4958/4640/414   11088/1907    51  198   57.88)
(sat.ddfw       1      1   10.3375   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=16.949s mem=60364KiB load=1.09 rootload=1.09
(smt.stats   40   5222 171673 522122  4987/4665/415   11353/2044    52  210   57.88)
(smt.stats   41   5383 177838 538890  5009/4675/415   11653/2044    52  210   57.97)
ramon: poll                 wall=18.000s usage=17.947s mem=60464KiB load=1.00 rootload=1.00
(smt.stats   42   5560 182141 559658  5055/4712/415   12040/2044    52  210   57.97)
(sat.ddfw       1      1   9.78686   1720001      8431         18            1      174)
(smt.stats   43   5754 188681 585306  5063/4747/415   12636/2044    52  210   58.07)
ramon: poll                 wall=19.000s usage=18.906s mem=60680KiB load=0.96 rootload=0.96
(smt.stats   44   5967 194852 618979  5071/4748/416   13197/2152    53  215   58.16)
(smt.stats   45   6068 197420 627899  5076/4757/416   13390/2152    53  215   58.30)
(smt.stats   46   6179 200628 642333  5080/4763/416   13562/2152    53  215   58.32)
ramon: poll                 wall=20.000s usage=19.864s mem=60696KiB load=0.96 rootload=0.96
ramon: end                  Fri Nov  1 21:36:19 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.020s
ramon: group.total          19.912s
ramon: group.utime          19.892s
ramon: group.stime          0.020s
ramon: group.mempeak        61208KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              0.99
