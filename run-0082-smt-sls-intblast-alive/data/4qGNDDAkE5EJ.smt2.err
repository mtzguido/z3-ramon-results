ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:38:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29428 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/4qGNDDAkE5EJ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             626911
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   87.7193     10000        49          0            1        2)
(sat.ddfw       1      1   44.4489     20001        98          1            1        3)
(smt.stats    0    101   4418    284  1083/951/103      95/15     6   35   52.04)
(sat.ddfw       1      1    45.977     40001       196          2            1        5)
(smt.stats    1    202   5290    988  1934/1738/105     208/26     8   37   52.23)
(sat.ddfw       1      1   39.4737     70001       343          3            1        8)
(smt.stats    2    313   5977   2082  2069/1895/109     348/40     9   44   52.23)
ramon: poll                 wall=1.000s usage=0.952s mem=54580KiB load=0.95 rootload=0.94
(smt.stats    3    414   7594   2756  2183/2007/113     450/49    11   48   52.34)
(sat.ddfw       1      1   36.9344    110001       539          4            1       12)
(smt.stats    4    525   9395   4191  2245/2064/117     573/67    12   56   52.43)
(smt.stats    5    647  12838   6349  2523/2312/122     708/93    16   58   52.63)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  14740   8154  2580/2350/123     811/95    17   58   52.63)
(sat.ddfw       1      1    31.665    160000       784          5            1       17)
(smt.stats    7    859  16717   8903  2680/2415/123     928/102    18   59   52.63)
(smt.stats    8    981  20002  10676  2830/2624/124    1045/105    19   61   52.73)
ramon: poll                 wall=2.000s usage=2.018s mem=54800KiB load=1.07 rootload=1.07
(smt.stats    9   1115  22464  12710  2905/2632/124    1208/110    19   61   52.73)
(sat.ddfw       1      1   26.9304    220001      1078          6            1       23)
(smt.stats   10   1216  23779  14482  2987/2754/125    1330/138    20   62   52.84)
(smt.stats   11   1327  27681  17099  3030/2790/125    1454/138    20   62   52.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30130  19310  3055/2839/125    1572/138    20   62   52.95)
(smt.stats   13   1583  32925  21085  3145/2879/125    1722/142    20   62   52.95)
(smt.stats   14   1730  33660  24176  3213/2969/125    1877/142    20   62   53.05)
(sat.ddfw       1      1   25.0806    290001      1421          7            1       30)
ramon: poll                 wall=3.002s usage=3.153s mem=55104KiB load=1.13 rootload=1.13
(smt.stats   15   1831  34213  25503  3270/3034/131    2019/214    21   66   53.05)
(smt.stats   16   1942  35613  29665  3324/3076/131    2140/215    21   66   53.05)
(smt.stats   17   2064  38165  33623  3356/3129/131    2280/257    22   70   53.15)
(smt.stats   18   2198  41633  41156  3391/3159/131    2420/257    22   70   53.25)
(smt.stats   19   2345  44214  45538  3456/3197/132    2585/274    23   71   53.25)
(sat.ddfw       1      1   21.5575    370001      1813          8            1       38)
(smt.stats   20   2506  46872  50434  3510/3260/136    2753/295    24   71   53.25)
ramon: poll                 wall=4.000s usage=4.113s mem=55512KiB load=0.96 rootload=0.96
(smt.stats   21   2607  47839  55188  3580/3317/136    2858/295    24   71   53.36)
(smt.stats   22   2718  50735  58663  3628/3375/136    2983/295    24   71   53.36)
(smt.stats   23   2840  53660  61632  3806/3426/136    3119/295    24   71   53.46)
(sat.ddfw       1      1   19.2184    460001      2254          9            1       47)
(smt.stats   24   2974  56561  65679  3952/3647/136    3274/295    24   71   53.55)
ramon: poll                 wall=5.000s usage=5.037s mem=55864KiB load=0.92 rootload=0.93
(smt.stats   25   3121  58050  72889  3998/3757/136    3444/296    24   71   53.55)
(smt.stats   26   3282  60561  76908  4021/3794/136    3620/296    24   71   53.65)
(smt.stats   27   3459  63391  80589  4143/3834/136    3807/299    24   71   53.78)
(sat.ddfw       1      1   17.2236    560001      2745         10            1       57)
(smt.stats   28   3560  64601  83612  4231/3988/136    3982/301    24   71   53.88)
ramon: poll                 wall=6.000s usage=6.015s mem=55852KiB load=0.98 rootload=0.98
(smt.stats   29   3671  66268  91155  4337/4059/136    4134/302    24   71   53.88)
(smt.stats   30   3793  67717  98771  4428/4136/136    4290/304    24   71   53.88)
(smt.stats   31   3927  71717 103487  4435/4222/137    4418/445    25   75   54.20)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  74027 109796  4440/4232/137    4577/445    25   75   54.11)
(smt.stats   33   4235  75586 113872  4460/4239/137    4750/445    25   75   54.11)
ramon: poll                 wall=7.000s usage=6.957s mem=56488KiB load=0.94 rootload=0.94
(sat.ddfw       1      1    15.594    670001      3284         11            1       68)
(smt.stats   34   4412  76756 118943  4630/4258/137    4935/446    25   75   54.20)
(smt.stats   35   4606  81112 126359  4658/4438/137    5139/446    25   75   54.20)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 17179870152&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2305843026393564104 := 317 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 3 := 34091302466&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 17179870152&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2305843026393564104 := 317 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 3 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1269 := 317 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1269 := 317 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 3 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 2 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1268&3
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 1 := 1268&3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1265&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1265&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1266&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 4294967297266 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 9520&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359747888 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1265&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 1266&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359739634 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1265 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1265 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1268 := 316 << 1
(smt.stats   36   4707  82132 129817  4748/4503/185    5278/487    26   80   54.39)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 1269 := 316 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 632&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 632&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 1 := 632&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 632&1
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 1 := 632&1
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 358&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 360&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 360&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 364&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 68719477100 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 360&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 362&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 368&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 372&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359738740 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 4 := 628&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 628 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 361 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 629 := 318 << 3
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 4 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 4 := 2544&7
(smt.stats   37   4818  84218 133152  4845/4584/216    5432/516    27   95   54.69)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 4 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 4 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2544&7
band: (band[35] (shl[35] (bv2int %0) (mod #100 35)) (if (= #556 34) 1 (if #558 3 #652))) 1 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 2 := 2544&7
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 8 := 2553&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2553&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 68719479289 := 319 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2545&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2545&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2545&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9 := 2545&15
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 2545&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 4329327036913 := 319 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 2545&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 68719479281 := 319 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 1 := 2609&255
(smt.stats   38   4940  86602 137194  4916/4639/236    5592/523    27   95   54.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 8)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 5 := 2565&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2305843043573434885 := 283 << 3
(smt.stats   39   5074  88805 140869  4953/4710/262    5734/523    27   95   54.88)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 256 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 256 := 2320&1023
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 272 := 2320&1023
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2320 := 290 << 10
(smt.stats   40   5221  92404 146047  5000/4728/262    5902/555    28  106   55.21)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 240 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 224 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 128 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16 := 2304&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 2304&255
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2304 := 288 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 32 := 2080&255
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2080 := 288 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 32 := 2080&255
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 2080 := 288 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 73728&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 73728&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 73728&255
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 64 := 73728&255
(smt.stats   41   5382  95826 151778  5193/4888/310    6218/582    29  112   55.31)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 32 := 73728&255
ramon: poll                 wall=8.000s usage=7.925s mem=57588KiB load=0.97 rootload=0.95
(smt.stats   42   5559  97953 159727  5223/4981/329    6463/655    30  131   55.50)
(sat.ddfw       1      1   14.4265    790001      3872         12            1       80)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 0 := 160&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 160 := 107 << 2
(smt.stats   43   5753 103365 171307  5279/5036/332    6769/667    31  136   55.59)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 98 := 98&536870911
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 98 := 134 << 29
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 98 := 102&536870911
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 98 := 98&536870911
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359738466 := 134 << 29
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 98 := 98&536870911
shl: (shl[64] (bv2int %0) (mod (+ #100 #285) 64)) 34359738466 := 134 << 29
(smt.stats   44   5966 108540 183239  5358/5050/334    7154/713    32  141   55.69)
ramon: poll                 wall=9.000s usage=8.922s mem=57988KiB load=1.00 rootload=1.00
(smt.stats   45   6067 110873 189047  5437/5146/346    7406/786    33  155   55.88)
(smt.stats   46   6178 114920 200134  5479/5232/349    7506/827    34  172   56.09)
(smt.stats   47   6300 118633 208421  5494/5243/349    7720/827    34  172   56.09)
(sat.ddfw       1      1   13.3896    920001      4509         13            1       93)
(smt.stats   48   6434 121415 215997  5555/5296/349    7909/855    35  176   56.31)
ramon: poll                 wall=10.000s usage=9.913s mem=58620KiB load=0.99 rootload=0.99
(smt.stats   49   6581 124637 223914  5632/5330/352    8336/946    36  185   56.40)
ramon: poll                 wall=11.000s usage=10.891s mem=58840KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   12.4888   1060001      5196         14            1      108)
(smt.stats   50   6742 127463 233062  5841/5442/355    8630/955    36  185   56.59)
(smt.stats   51   6919 130836 243657  5989/5731/356    8954/1056    37  199   56.89)
ramon: poll                 wall=12.000s usage=11.818s mem=59464KiB load=0.93 rootload=0.93
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7113 134240 255201  6148/5890/358    9488/1060    37  199   56.98)
(sat.ddfw       1      1   11.6396   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.818s mem=59580KiB load=1.00 rootload=1.00
(smt.stats   53   7326 140083 275330  6331/5898/358    9912/1068    37  199   57.37)
ramon: poll                 wall=14.000s usage=13.876s mem=59712KiB load=1.06 rootload=1.06
(smt.stats   54   7560 146507 303504  6550/6104/358   10666/1195    38  203   57.56)
(sat.ddfw       1      1   11.0857   1370001      6715         16            1      139)
(smt.stats   55   7661 148967 313136  6611/6298/362   10850/1403    39  211   57.56)
ramon: poll                 wall=15.000s usage=14.879s mem=59896KiB load=1.00 rootload=1.00
(smt.stats   56   7772 150965 320275  6718/6402/362   10997/1404    39  211   57.65)
ramon: poll                 wall=16.000s usage=15.879s mem=60000KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.4802   1540001      7549         17            1      156)
(smt.stats   57   7894 153996 328489  6837/6474/362   11297/1407    39  211   57.65)
(smt.stats   58   8028 156193 342393  6888/6630/365   11833/1441    40  216   57.75)
(smt.stats   59   8175 160760 365392  6946/6677/365   12135/1441    40  216   57.75)
ramon: poll                 wall=17.000s usage=16.876s mem=60104KiB load=1.00 rootload=0.99
(smt.stats   60   8336 170923 403481  6953/6684/365   12427/1592    41  255   57.86)
(smt.stats   61   8513 177898 430426  6967/6698/366   13242/1642    42  264   57.96)
(smt.stats   62   8707 185680 462960  6995/6711/366   13625/1643    42  264   57.96)
ramon: poll                 wall=18.000s usage=17.873s mem=60496KiB load=1.00 rootload=1.00
(smt.stats   63   8920 193875 492522  7103/6804/367   14103/1701    43  264   58.07)
(sat.ddfw       1      1   9.92118   1720001      8431         18            1      174)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 211 := 34359738367&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 211 := 34359738367&8589934591
(smt.stats   64   9154 201393 521900  7166/6838/368   14641/1779    44  267   58.07)
(smt.stats   65   9411 209094 547998  7208/6914/368   15077/1780    44  267   58.57)
(smt.stats   66   9512 211847 558974  7315/6947/368   15305/1785    44  267   58.57)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9223 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9231 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9247 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9247 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9791 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 9791 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10367 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10367 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10495 := 34359738367&17179869183
(smt.stats   67   9623 214464 570008  7475/7047/368   15575/1788    44  267   58.79)
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
ramon: poll                 wall=19.000s usage=18.856s mem=61088KiB load=0.98 rootload=0.99
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 10751 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 11263 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 12287 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 12287 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 12287 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 12287 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 14335 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 14335 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 14335 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16383 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16383 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 14335 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16383 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 16383 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 51199 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 53247 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134096895 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134098943 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134094847 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134094847 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 114687 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 90111 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134152191 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134152191 := 34359738367&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #286 64)) (if (= #671 63) 0 (if #673 1 #824))) 134152191 := 34359738367&17179869183
(smt.stats   68   9745 217023 593894  7717/7389/505   16004/1872    45  272   59.18)
(smt.stats   69   9879 218482 605085  7910/7462/505   16200/1971    46  300   59.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 142)
ramon: poll                 wall=20.000s usage=19.852s mem=61720KiB load=1.00 rootload=0.99
(smt.stats   70  10026 220687 616223  8384/7966/505   16465/1972    46  300   59.37)
ramon: end                  Fri Nov  1 21:38:56 2024
ramon: root.execname        z3
ramon: root.utime           19.870s
ramon: root.stime           0.010s
ramon: group.total          19.893s
ramon: group.utime          19.873s
ramon: group.stime          0.020s
ramon: group.mempeak        61988KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.044s
ramon: loadavg              0.99
