ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:01:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27555 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/l4wmvMWioSqa.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             911138
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   94.3396     10000        49          0            1        2)
(smt.stats    0    101   4503    740  1189/1065/114      88/12    10   20   51.96)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 70368744177666 := 70368744177668 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 70368744177666 := 70368744177668 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 2 := 4 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088834 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 2 := 4 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088834 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 468361 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&2
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 4 := 468361&4
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8 := 468361&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 8 := 10 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 16 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 64 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 128 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 256 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 512 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 128 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 256 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 512 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 1024 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2048 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 4096 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8192 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8192 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 16384 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 65536 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 65536 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 131072 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 262144 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 512 := 468361&524802
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 30 := 468361&30
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 16 := 468361&16
(smt.stats    1    202   6639   2781  1555/1315/114     203/28    10   20   52.56)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&2
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 2 := 16 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 2 := 16 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 1 := 468361&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 1 := 2 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 1 := 468361&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 1 := 2 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 70368744177663 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 70368744177663 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 70368744177663 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 1 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 4 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 4 := 468361&35184439721984
(sat.ddfw       1      1   46.3009     20001        98          1            1        3)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184439721983 := 35184439197825 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 1 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 1 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 4 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 468360 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 468352 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 468224 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 4 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 8 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 467968 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 466944 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 458752 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 16 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 32 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 64 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 128 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 256 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 32 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 32 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 64 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 64 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 128 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 16 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 16 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 16 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 512 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 1024 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 512 := 468361&35184439721984
(smt.stats    2    313   9038   6629  1722/1564/336     324/62    18   82   52.89)
(smt.stats    3    414  10965   9114  2147/1954/343     428/77    21   91   52.98)
(sat.ddfw       1      1   46.2963     40001       196          2            1        5)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 1&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088833 := 35184372088832 << 1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 1&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088833 := 35184372088832 << 1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 1&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088833 := 35184372088832 << 1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 1&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088320 := 35184372088832 << 1
(smt.stats    4    525  12665  11312  2556/2312/353     508/93    23  107   53.08)
(smt.stats    5    647  17047  15273  2624/2362/359     636/104    24  111   53.57)
(sat.ddfw       1      1   39.8406     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  21391  20114  2667/2402/360     742/111    25  114   53.57)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 140737488355328 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373952 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373952 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373952 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373953 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373953 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373953 := 70368744177664 << 43
(smt.stats    7    859  23404  24186  2707/2463/366     859/118    26  118   53.66)
(smt.stats    8    981  25442  27325  2726/2482/373     979/140    27  130   53.76)
ramon: poll                 wall=1.000s usage=0.988s mem=56140KiB load=0.99 rootload=0.96
(smt.stats    9   1115  29865  34511  2753/2499/376    1117/142    28  135   53.97)
(smt.stats   10   1216  32040  39117  2806/2547/378    1235/162    30  137   54.07)
(sat.ddfw       1      1   33.7838    110001       539          4            1       12)
(smt.stats   11   1327  34853  43326  2850/2578/378    1395/164    30  137   54.17)
(smt.stats   12   1449  37040  47708  2884/2619/385    1557/177    31  138   54.30)
(sat.ddfw       1      1   32.9809    160000       784          5            1       17)
(smt.stats   13   1583  38772  50414  3070/2622/385    1834/213    32  146   54.49)
(smt.stats   14   1730  39605  53072  3430/2853/385    2130/215    32  146   54.70)
(smt.stats   15   1831  40666  57266  3612/3203/385    2479/215    32  146   54.80)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 793090 := 31431202750837&793104
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 793090 := 31431202750837&793104
(smt.stats   16   1942  43078  67275  3715/3454/386    2761/268    33  149   54.90)
ramon: poll                 wall=2.000s usage=2.011s mem=57324KiB load=1.02 rootload=1.02
(smt.stats   17   2064  45728  73711  3765/3463/388    3423/279    34  153   55.09)
(sat.ddfw       1      1   26.3625    220001      1078          6            1       23)
(smt.stats   18   2198  48678  84275  3931/3539/388    3802/293    34  153   55.19)
ramon: poll                 wall=3.002s usage=3.021s mem=57940KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   22.9961    290001      1421          7            1       30)
(smt.stats   19   2345  50551  90596  4084/3703/389    4210/619    35  155   55.38)
(smt.stats   20   2506  52400  95383  4397/4065/389    4623/619    35  155   55.38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   21   2607  54929 104979  4413/4151/389    4878/619    35  155   55.38)
(smt.stats   22   2718  58598 111066  4625/4155/389    5076/627    35  155   55.47)
(smt.stats   23   2840  63076 133049  4948/4450/389    5807/631    35  155   55.77)
(sat.ddfw       1      1   20.4761    370001      1813          8            1       38)
(smt.stats   24   2974  67090 152214  5115/4703/389    6483/633    35  155   55.87)
ramon: poll                 wall=4.006s usage=4.018s mem=58244KiB load=0.99 rootload=0.99
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559154
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559154
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559154
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559170
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559166
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559166
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559154
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559172
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559176
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559172
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559176
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559172
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559172
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559176
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&1048578
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&1048578
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&1048578
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&1081346
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704966455298 := 70368744177664 << 44
(smt.stats   25   3121  70605 167930  5260/4958/432    7356/1068    36  165   56.25)
(smt.stats   26   3282  74800 179056  5327/5002/462    7833/1388    37  180   56.35)
(smt.stats   27   3459  79835 193629  5387/5105/462    8107/1395    37  180   56.35)
(smt.stats   28   3560  82184 201612  5427/5162/463    8295/1576    38  180   56.45)
(sat.ddfw       1      1   18.3524    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.978s mem=58664KiB load=0.97 rootload=0.97
(smt.stats   29   3671  86218 229771  5493/5182/465    8466/1661    39  186   56.45)
(smt.stats   30   3793  90854 257090  5515/5248/465    8799/1661    39  186   56.67)
(smt.stats   31   3927  95527 278192  5544/5261/466    9097/1929    40  189   56.79)
ramon: poll                 wall=6.000s usage=5.910s mem=59436KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   16.4177    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4074  99331 303012  5632/5286/468   10186/2398    41  211   57.08)
(smt.stats   33   4235 102878 318540  5852/5431/468   10767/2405    41  211   57.17)
ramon: poll                 wall=7.000s usage=6.842s mem=59584KiB load=0.93 rootload=0.94
(smt.stats   34   4412 108064 354515  5975/5689/468   11203/2406    41  211   57.17)
(sat.ddfw       1      1   15.1078    670001      3284         11            1       68)
(smt.stats   35   4606 112773 397127  6021/5743/473   11643/2923    43  236   57.27)
(smt.stats   36   4707 116775 419177  6054/5767/473   11829/2923    43  236   57.27)
ramon: poll                 wall=8.000s usage=7.790s mem=60200KiB load=0.95 rootload=0.94
(smt.stats   37   4818 120476 430730  6198/5783/473   12064/2933    43  236   57.45)
(smt.stats   38   4940 123982 443962  6322/6035/474   12415/3165    44  240   57.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   39   5074 128226 458993  6345/6044/474   12758/3165    44  240   57.65)
(sat.ddfw       1      1   13.8249    790001      3872         12            1       80)
(smt.stats   40   5221 133128 476015  6429/6124/475   13045/3251    45  240   57.74)
ramon: poll                 wall=9.000s usage=8.743s mem=60400KiB load=0.95 rootload=0.96
(smt.stats   41   5382 141001 525049  6533/6202/476   13730/3513    46  240   58.06)
(smt.stats   42   5559 144697 550001  6578/6275/481   14242/3601    47  257   58.25)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 56 := 57&35184440246368
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 56 := 57&35184440246368
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 56 := 57&35184439197928
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 56 := 57&35184439197944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 35184439197944 := 8 << 5
(smt.stats   43   5753 150770 586908  6680/6353/485   15360/3622    48  268   58.45)
ramon: poll                 wall=10.000s usage=9.718s mem=60976KiB load=0.97 rootload=0.97
(smt.stats   44   5966 157847 625041  6699/6394/490   15767/3622    48  268   58.54)
(sat.ddfw       1      1   12.8408    920001      4509         13            1       93)
(smt.stats   45   6067 163527 665168  6744/6430/492   16049/3658    49  286   58.54)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 481 := 31431202750837&4194304
(smt.stats   46   6178 166800 683930  6848/6513/493   16274/3751    50  288   58.64)
(smt.stats   47   6300 169170 697626  6932/6560/493   16509/3756    50  288   58.74)
ramon: poll                 wall=11.000s usage=10.666s mem=61144KiB load=0.95 rootload=0.95
(smt.stats   48   6434 172868 730670  6986/6672/495   17168/3911    51  297   58.74)
(sat.ddfw       1      1    12.013   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=11.647s mem=61656KiB load=0.98 rootload=0.98
(smt.stats   49   6581 177646 760134  7009/6680/495   17690/3911    51  297   59.12)
ramon: poll                 wall=13.000s usage=12.637s mem=61656KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   11.2486   1210001      5931         15            1      123)
(smt.stats   50   6742 181553 769335  7314/6778/495   18149/3919    51  297   59.22)
ramon: poll                 wall=14.000s usage=13.601s mem=61824KiB load=0.96 rootload=0.96
(smt.stats   51   6919 187134 796054  7606/7030/495   18824/3922    51  297   59.41)
ramon: poll                 wall=15.000s usage=14.609s mem=61872KiB load=1.01 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 193970 812580  7703/7320/495   19244/3925    51  297   59.50)
(sat.ddfw       1      1   10.5645   1370001      6715         16            1      139)
(smt.stats   53   7326 201574 864323  7774/7404/496   19571/4318    52  301   59.68)
ramon: poll                 wall=16.000s usage=15.610s mem=62388KiB load=1.00 rootload=1.00
(smt.stats   54   7560 211020 918917  7840/7511/498   21014/4372    53  303   60.14)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70367128813568
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462509056
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462509056
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462511104
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462509056
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462511104
(smt.stats   55   7661 214483 934331  7907/7529/498   21285/4588    54  304   60.24)
(smt.stats   56   7772 219456 962112  7995/7613/503   21950/4589    54  304   60.43)
ramon: poll                 wall=17.000s usage=16.610s mem=62784KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.0106   1540001      7549         17            1      156)
(smt.stats   57   7894 225272 992389  8120/7686/503   22582/4736    55  305   60.73)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8028 229385 1008833  8197/7865/503   23441/4736    55  305   60.82)
(smt.stats   59   8175 233530 1039463  8224/7897/503   23900/4736    55  305   60.92)
ramon: poll                 wall=18.002s usage=17.613s mem=63324KiB load=1.00 rootload=1.00
(smt.stats   60   8336 235286 1045438  8529/7921/503   24112/4736    55  305   61.01)
(sat.ddfw       1      1   9.50671   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=18.608s mem=63476KiB load=1.00 rootload=1.00
(smt.stats   61   8513 237066 1066453  8809/8334/503   24406/4736    55  305   61.11)
(smt.stats   62   8707 242681 1126411  8864/8509/503   24845/4739    55  305   61.11)
(smt.stats   63   8920 249355 1191583  8874/8554/504   25806/5182    56  313   61.20)
ramon: poll                 wall=20.000s usage=19.686s mem=63828KiB load=1.08 rootload=1.08
ramon: end                  Fri Nov  1 23:02:05 2024
ramon: root.execname        z3
ramon: root.utime           19.660s
ramon: root.stime           0.030s
ramon: group.total          19.698s
ramon: group.utime          19.662s
ramon: group.stime          0.036s
ramon: group.mempeak        64084KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              0.98
