ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:50:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41925 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1340
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/26RZwYJH8Jxi.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3650209
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   222/222     0/0  58       0    18.52   0.00)
(sat.stats    101    633    0   222/222   101/35  58       0    18.81   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 505 :time 0.00)
(sat.stats    101    633    0   222/222   101/35  58       0    18.81   0.01)
(sat.stats    101    633    0   222/222   101/35  58       0    18.81   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 435218.81 :time 0.00)
(sat.stats    101    633    0   222/222   101/35  58       0    18.81   0.01)
(sat.stats    283   3445    1   222/222   283/160  58       0    19.11   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    286   3548    2   222/222   286/160  58       0    19.11   0.01)
(sat.stats    311   4113    3   223/223   311/180  58       0    19.21   0.01)
(sat.stats    315   4221    4   223/223   315/182  58       0    19.21   0.01)
(sat.stats    318   4253    5   223/223   318/185  58       0    19.21   0.02)
(sat.stats    321   4277    6   223/223   321/188  58       0    19.21   0.02)
(sat.stats    324   4289    7   223/223   324/191  58       0    19.21   0.02)
(sat.stats    327   4381    8   223/223   327/191  58       0    19.21   0.02)
(sat.stats    330   4482    9   223/223   330/191  58       0    19.21   0.02)
(sat.stats    333   4581   10   223/223   333/191  58       0    19.21   0.02)
(sat.stats    342   4893   11   223/223   342/191  58       0    19.21   0.02)
(sat.stats    345   5002   12   223/223   345/191  58       0    19.21   0.02)
(sat.stats    348   5132   13   227/227   348/193  58       0    19.60   0.03)
(sat.stats    351   5139   14   227/227   351/196  58       0    19.60   0.03)
(sat.stats    473   6499   28   227/227   473/263  58       0    19.60   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3853 :time 0.00)
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 0 := 60 >>l 15
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 0&35183298347008
lshr: (lshr[64] (bv2int %0) (mod (+ #62 #728) 64)) 18038112776269856769 := 60 >>l 15
 (sat-cleaner :elim-literals 46 :elim-clauses 0 :cost 4357 :time 0.00)
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 1 := 1&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1 := 35183298347008&1
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 2&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 2 := 35183298347008&2
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 2 := 6&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 4 := 1073099550&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 25672 := 1073574822&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 63240 := 1073574815&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 16 := 20&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 32 := 36&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 64 := 68&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 128 := 132&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 256 := 1056405&35183298347008
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    714  16277   48  2226/2224   772/373  94       0    21.12   0.18)
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 256 := 1056118&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 4608 := 1056118&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 14336 := 1056118&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 41984 := 1056118&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 8192 := 1056118&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 4096 := 1056118&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 8192 := 1047765&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 16384 := 16455&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 32768 := 33015&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 65536 := 75703&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 131072 := 131863&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 262144 := 265063&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 524288 := 525703&35183298347008
(sat.stats   1116  44335   61 18153/18151  1479/681  94       0    25.26   0.49)
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 1048576 := 1054903&35183298347008
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1049380 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1048584 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1052480 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1050640 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1048704 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1048608 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1053184 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1048832 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1049600 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1052672 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1054903&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1050624 := 35183298347008&1054903
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1057575&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1056768 := 35183298347008&1057575
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 9590 :time 0.00)
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1075980&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1064960 := 35183298347008&1075980
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1091550&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1081344 := 35183298347008&1091550
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9953 :time 0.00)
ramon: poll                 wall=1.002s usage=0.942s mem=28660KiB load=0.94 rootload=0.93
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1089615&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 589824 := 35183298347008&1089615
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1089615&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 655360 := 35183298347008&1089615
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1089615&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 1048576 := 35183298347008&1089615
band: (band[45] (lshr[45] (bv2int %0) (mod #62 45)) (if (= #496 44) 618970019642672545263517696 (if #498 309485009821336272631758848 #584))) 0 := 1089615&35183298347008
band: (band[45] (if (= #599 63) 324518553658408280039082311024640 (if #601 162259276829204140019541155512320 #725)) (lshr[64] (bv2int %0) (mod #729 64))) 786432 := 35183298347008&1089615
ramon: poll                 wall=2.000s usage=1.939s mem=30512KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 342 :elim-clauses 2 :cost 12491 :time 0.00)
 (sat-cleaner :elim-literals 458 :elim-clauses 2 :cost 12675 :time 0.00)
ramon: poll                 wall=3.000s usage=2.939s mem=30528KiB load=1.00 rootload=1.00
(sat.stats   2001  79503  177 44256/44254  2521/1159 343       0    28.92   3.76)
ramon: poll                 wall=4.000s usage=3.939s mem=32388KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.938s mem=58920KiB load=1.00 rootload=0.98
ramon: poll                 wall=6.000s usage=5.938s mem=67344KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.938s mem=90352KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.937s mem=96852KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.937s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.937s mem=102MiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.936s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.934s mem=109MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.931s mem=112MiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.927s mem=117MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.925s mem=152MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.922s mem=154MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.918s mem=158MiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.916s mem=159MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.912s mem=161MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.909s mem=165MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:50:23 2024
ramon: root.execname        z3
ramon: root.utime           19.880s
ramon: root.stime           0.080s
ramon: group.total          19.975s
ramon: group.utime          19.887s
ramon: group.stime          0.088s
ramon: group.mempeak        183MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.00
