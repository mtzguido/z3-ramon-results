ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:25:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41401 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Vf646H0XBkXV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2986193
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   1609    234  1325/1175/110     108/13     6   17   19.06)
(smt.stats    1    202   5196   2144  1556/1395/113     214/15     8   23   19.35)
(smt.stats    2    313   7115   4420  2194/1992/115     321/24     9   31   19.45)
(smt.stats    3    414   9442   6377  2458/2231/115     420/24     9   31   19.55)
(smt.stats    4    525   9673   7054  2742/2491/116     497/27    10   33   19.65)
(smt.stats    5    647  11514   9234  2780/2524/118     632/44    12   35   19.74)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  12549  11231  2827/2567/119     741/51    13   35   19.74)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 2 := 4 << 1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 2 := 4 << 1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711743
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 2 := 576460752303423486 << 1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711740
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 0 := 288230376151711743 << 2
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711740
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 0 := 288230376151711743 << 2
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711740
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 0 := 288230376151711743 << 2
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&288230376151711740
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&288230376151711740
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711740
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 0 := 288230376151711743 << 2
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&4
band: (band[58] (if (= #114 57) 0 (if #636 1 #798)) (shl[58] (bv2int %0) (+ 58 #801))) 1 := 1&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&52
band: (band[58] (if (= #114 57) 0 (if #636 1 #798)) (shl[58] (bv2int %0) (+ 58 #801))) 1 := 1&52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&52
band: (band[58] (if (= #114 57) 0 (if #636 1 #798)) (shl[58] (bv2int %0) (+ 58 #801))) 1 := 1&52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&52
band: (band[58] (if (= #114 57) 0 (if #636 1 #798)) (shl[58] (bv2int %0) (+ 58 #801))) 1 := 1&52
(smt.stats    7    859  13489  14430  2912/2653/157     854/61    14   37   19.93)
(smt.stats    8    982  14081  18199  2944/2682/166     920/73    17  104   19.93)
(smt.stats    9   1116  18592  23604  2948/2686/169    1055/73    17  104   20.03)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3 := 91184883872368261&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 91184883872368261&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 1441151880758558726 := 0 << 57
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 91184883872368261&288230376151711742
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&288230376151711742
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3 := 91184883872368261&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 91184883872368261&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 1441151880758558726 := 0 << 57
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 91184883872368261&288230376151711742
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&288230376151711742
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&288230376151711488
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 256 := 91184883872368261&258
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 512 := 91184883872368261&520
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 1152921504606847496 := 0 << 57
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 512 := 91184883872368261&520
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 1152921504606847496 := 0 << 57
(smt.stats   10   1217  20192  26175  2985/2715/197    1156/79    20  122   20.23)
(smt.stats   11   1328  22852  31922  3049/2764/197    1288/79    20  122   20.44)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   12   1450  24221  35205  3090/2808/207    1430/92    21  125   20.63)
(smt.stats   13   1584  26234  38991  3156/2818/209    1555/103    22  140   20.63)
ramon: poll                 wall=1.000s usage=0.919s mem=22140KiB load=0.92 rootload=0.91
(smt.stats   14   1731  30009  45435  3177/2897/212    1706/110    23  142   20.73)
(smt.stats   15   1832  32427  50261  3184/2903/212    1809/110    24  146   20.73)
(smt.stats   16   1943  34940  56583  3193/2910/212    1922/110    24  146   20.82)
(smt.stats   17   2065  36998  62455  3209/2911/213    2050/114    25  147   20.93)
(smt.stats   18   2199  39045  67436  3242/2928/213    2205/115    25  147   20.93)
(smt.stats   19   2346  44145  76819  3243/2960/214    2351/128    26  150   20.93)
(smt.stats   20   2507  47527  86248  3256/2971/216    2533/132    27  154   20.93)
(smt.stats   21   2608  50452  92730  3257/2972/216    2654/132    27  154   20.93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   22   2719  53989 102710  3258/2973/216    2783/132    27  154   21.02)
(smt.stats   23   2841  57879 116542  3262/2976/216    2918/132    27  154   21.02)
(smt.stats   24   2975  60577 123981  3271/2981/216    3054/132    27  154   21.12)
(smt.stats   25   3122  65355 134567  3273/2987/216    3208/132    27  154   21.12)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156614
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156614
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156614
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156672
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156672
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738157056
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738351616
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738351616
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047741497344
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047741497344
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047758274560
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047758274560
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047825383424
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89051851915264
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738351616
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047741497344
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047758274560
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047825383424
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89051851915264
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89051851915264
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89060441849856
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047758274560
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047825383424
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89051851915264
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89060441849856
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&105553116266496
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764748260522590208 := 178095476313220 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764748260522590208 := 178095476313220 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764748260522590208 := 178095476313220 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764748260522590208 := 178095476313220 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&316659348799488
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764924182383034368 := 178095476313256 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&281474976710656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764888998010945536 := 178095476313348 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&281474976710656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764888998010945536 := 178095476313348 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&281474976710656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764888998010945536 := 178095476313348 << 47
ramon: poll                 wall=2.000s usage=1.918s mem=22936KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.918s mem=22936KiB load=1.00 rootload=1.00
(smt.stats   26   3283  67560 139174  3457/3058/309    3404/162    28  159   21.50)
(smt.stats   27   3460  70339 148011  3710/3423/315    3762/243    29  178   21.89)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 16 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 32 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 64 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 128 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 130 := 89047738156609&201326596
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 130 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 130 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 36 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 40 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&134217732
(smt.stats   28   3561  72076 154002  3825/3519/358    4026/249    29  178   21.98)
ramon: poll                 wall=4.000s usage=3.918s mem=23392KiB load=1.00 rootload=1.00
(smt.stats   29   3672  73661 158111  3957/3532/368    4173/252    29  178   22.08)
(smt.stats   30   3794  77055 168570  3991/3704/373    4376/321    30  193   22.08)
(smt.stats   31   3928  81608 180974  4020/3717/374    4541/322    30  193   22.08)
(smt.stats   32   4075  86241 193314  4025/3738/377    4829/390    31  215   22.27)
ramon: poll                 wall=5.000s usage=4.918s mem=23648KiB load=1.00 rootload=0.99
(smt.stats   33   4236  94388 212680  4072/3742/377    5004/431    32  229   22.36)
(smt.stats   34   4413  98986 225917  4157/3836/377    5222/434    32  229   22.50)
(smt.stats   35   4607 104952 239940  4260/3886/380    5538/511    33  234   22.69)
ramon: poll                 wall=6.000s usage=5.918s mem=24220KiB load=1.00 rootload=1.00
(smt.stats   36   4708 107798 248650  4413/3992/382    5684/515    33  234   22.69)
(smt.stats   37   4819 111221 256888  4729/4221/382    5841/562    34  249   22.79)
(smt.stats   38   4941 115000 265521  4847/4454/382    6084/569    34  249   22.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 198)
(smt.stats   39   5075 117946 275867  4885/4566/382    6106/569    34  249   22.88)
ramon: poll                 wall=7.000s usage=6.918s mem=24476KiB load=1.00 rootload=1.00
(smt.stats   40   5222 120789 285828  5078/4634/382    6311/569    34  249   23.07)
(smt.stats   41   5383 124079 298222  5259/4919/384    6573/722    35  250   23.17)
ramon: poll                 wall=8.000s usage=7.918s mem=24988KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   42   5560 128782 309764  5383/5011/384    6793/726    35  250   23.26)
(smt.stats   43   5754 134358 329394  5473/5146/384    7068/834    36  251   23.26)
ramon: poll                 wall=9.000s usage=8.918s mem=24988KiB load=1.00 rootload=1.00
(smt.stats   44   5967 142719 358073  5536/5193/384    7382/836    36  251   23.36)
(smt.stats   45   6068 145665 368419  5597/5252/384    7512/837    36  251   23.36)
(smt.stats   46   6179 149284 382468  5690/5332/384    7673/839    36  251   23.36)
(smt.stats   47   6301 152391 388714  5781/5401/384    7809/840    36  251   23.36)
(smt.stats   48   6435 155869 401619  5902/5551/384    7979/841    36  251   23.46)
ramon: poll                 wall=10.000s usage=9.918s mem=24988KiB load=1.00 rootload=1.00
(smt.stats   49   6582 161045 421602  5974/5662/385    8180/975    37  253   23.46)
(smt.stats   50   6743 167878 455974  6008/5701/385    8363/979    37  253   23.46)
(smt.stats   51   6920 171041 476375  6011/5720/385    8632/979    37  253   23.55)
(smt.stats   52   7114 176842 495452  6127/5727/385    8905/983    37  253   23.55)
(smt.stats   53   7327 181323 513100  6255/5861/385    9191/983    37  253   23.65)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 331728&524288
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 331728&524288
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 331728&524288
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 331728&524288
ramon: poll                 wall=11.002s usage=10.918s mem=25244KiB load=1.00 rootload=1.00
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 331728&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 6917529027641606144 := 432345564227616770 << 19
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 331728&1572864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 6917529027642654720 := 432345564227616770 << 19
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 331728&1572864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 7205759403794366464 := 432345564227618818 << 19
(smt.stats   54   7561 185533 538649  6362/5994/385    9605/989    37  253   23.76)
(smt.stats   55   7662 186902 545995  6372/6068/395    9725/1115    38  255   23.86)
(smt.stats   56   7773 188893 558350  6424/6100/396    9869/1116    38  255   23.86)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   57   7895 191937 574886  6498/6153/396   10080/1116    38  255   23.95)
ramon: poll                 wall=12.003s usage=11.921s mem=25500KiB load=1.00 rootload=1.00
(smt.stats   58   8029 193700 582084  6596/6206/396   10281/1178    39  257   24.05)
(smt.stats   59   8176 196175 594817  6691/6337/396   10443/1181    39  257   24.14)
(smt.stats   60   8337 201955 616979  6711/6412/396   10665/1182    39  257   24.14)
(smt.stats   61   8514 206971 636259  6813/6516/397   10920/1289    40  258   24.24)
ramon: poll                 wall=13.000s usage=12.917s mem=25756KiB load=1.00 rootload=1.00
(smt.stats   62   8708 213371 653600  6952/6524/397   11284/1293    40  258   24.33)
(smt.stats   63   8921 218502 679531  7253/6725/397   11689/1299    40  258   24.52)
ramon: poll                 wall=14.000s usage=13.917s mem=26268KiB load=1.00 rootload=1.00
(smt.stats   64   9155 224145 697829  7330/7014/399   12084/1438    41  259   24.81)
(smt.stats   65   9412 232402 724579  7414/7082/400   12556/1505    42  264   25.00)
(smt.stats   66   9513 235882 745047  7423/7091/405   12666/1522    43  282   25.41)
ramon: poll                 wall=15.000s usage=14.917s mem=27160KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.917s mem=27160KiB load=1.00 rootload=1.00
(smt.stats   67   9624 238006 752584  7543/7094/405   12825/1527    43  282   25.61)
ramon: poll                 wall=17.000s usage=16.917s mem=27416KiB load=1.00 rootload=1.00
(smt.stats   68   9746 240290 761293  7872/7419/405   12996/1531    43  282   25.70)
ramon: poll                 wall=18.000s usage=17.917s mem=27500KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.917s mem=27500KiB load=1.00 rootload=1.00
(smt.stats   69   9880 242356 770497  8402/7753/405   13189/1534    43  282   25.89)
(smt.delete-inactive-clauses  :num-deleted-clauses 479)
ramon: poll                 wall=20.000s usage=19.917s mem=27756KiB load=1.00 rootload=1.00
(smt.stats   70  10027 245699 788732  8776/8439/406   12880/1615    44  287   25.99)
ramon: end                  Tue Dec 24 15:26:16 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.003s
ramon: group.utime          19.987s
ramon: group.stime          0.016s
ramon: group.mempeak        28012KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.086s
ramon: loadavg              1.00
