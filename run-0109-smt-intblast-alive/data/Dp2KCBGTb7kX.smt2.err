ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:49:41 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42293 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Dp2KCBGTb7kX.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2863298
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    103   5065    491  1307/1185/110     101/11     5   20   19.25)
(smt.stats    1    204   7652   1287  2204/2003/112     201/19     7   24   19.34)
(smt.stats    2    315  10375   3618  2317/2032/112     326/26     7   24   19.45)
(smt.stats    3    416  12291   5026  2353/2141/118     422/34     8   25   19.45)
(smt.stats    4    527  14319   6476  2444/2225/124     529/49     9   31   19.54)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&72057594037927809
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&72057594037927935
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&36028797018963967
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 108086391056891903 := 108086391056891776 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&36028797018963967
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 108086391056891903 := 108086391056891776 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&0
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 72057594037927936 := 256 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&0
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 72057594037927936 := 72057594037927808 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&0
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 72057594037927936 := 72057594037927808 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 72057594037927937 := 72057594037927936 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 4 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 8 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 8 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1 := 36028797018963968&1
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 7 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1 := 36028797018963968&1
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 2 := 36028797018963968&2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&4
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 4 := 36028797018963968&4
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2 := 4 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 36028797018963968&1
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 2 := 36028797018963968&2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 4 := 36028797018963968&4
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 8 := 36028797018963968&8
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 16 := 36028797018963968&16
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 32 := 36028797018963968&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 64 := 36028797018963968&64
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 128 := 36028797018963968&128
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 256 := 36028797018963968&256
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 512 := 36028797018963968&512
(smt.stats    5    649  16492   8540  2773/2412/148     649/53    11   42   20.34)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&6
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 7 := 27 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 36028797018963968&7
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    750  19209  11326  2873/2566/207     808/93    13   60   20.34)
(smt.stats    7    861  24047  15901  2878/2625/213     920/99    14   62   20.34)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1 := 36028797018963968&8
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 2 := 36028797018963968&8
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 8 := 36028797018963968&8
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&16
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16 := 36028797018963968&16
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 36028797018963968&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&64
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 64 := 36028797018963968&64
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&128
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 128 := 36028797018963968&128
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&256
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 256 := 36028797018963968&256
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&512
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 512 := 36028797018963968&512
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1024
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1024 := 36028797018963968&1024
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2048
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 2048 := 36028797018963968&2048
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&4096
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 4096 := 36028797018963968&4096
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8192
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 8192 := 36028797018963968&8192
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&16384
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16384 := 36028797018963968&16384
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&32768
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32768 := 36028797018963968&32768
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&65536
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 65536 := 36028797018963968&65536
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&131072
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 131072 := 36028797018963968&131072
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&262144
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 262144 := 36028797018963968&262144
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&524288
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 524288 := 36028797018963968&524288
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1048576
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1048576 := 36028797018963968&1048576
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2097152
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 2097152 := 36028797018963968&2097152
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&4194304
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 4194304 := 36028797018963968&4194304
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8388608
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 8388608 := 36028797018963968&8388608
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&16777216
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16777216 := 36028797018963968&16777216
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&33554432
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 33554432 := 36028797018963968&33554432
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&67108864
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 67108864 := 36028797018963968&67108864
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&134217728
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 134217728 := 36028797018963968&134217728
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&268435456
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 268435456 := 36028797018963968&268435456
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&536870912
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 536870912 := 36028797018963968&536870912
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1073741824
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1073741824 := 36028797018963968&1073741824
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1073741824
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1073741824 := 36028797018963968&1073741824
(smt.stats    8    983  25536  18679  3013/2761/363    1108/143    16   96   21.07)
(smt.stats    9   1117  26897  22494  3035/2776/367    1239/147    17  102   21.17)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 2 := 1664 >>l 57
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 2251799813685249 >>l 50
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 2 := 144115188075855744 >>l 57
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 2251799813685251 >>l 50
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 3377699720527871 >>l 50
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 128&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 128&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 128&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 128&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&31
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 26 := 128&31
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&31
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 26 := 128&31
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 26 := 128&30
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 25 := 128&30
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 28 := 128&30
(smt.stats   10   1218  29446  26989  3101/2829/392    1508/155    19  104   21.27)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 24 := 128&30
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 24 := 128&30
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&63
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16 := 128&63
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&63
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16 := 128&63
(smt.stats   11   1329  31063  31433  3218/2934/416    1709/276    21  120   21.36)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&5
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 5 := 9223372036854775680 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 32 := 72057594037927935 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 15 := 9223372036854775680 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 32 := 72057594037927935 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&5
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 5 := 9223372036854775680 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 32 := 72057594037927935 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&5
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 5 := 4323455642275676288 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&7
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 20 := 33776997205278721 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&10
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 10 := 4611686018427386240 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&7
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 26 := 36028797018963943 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&5
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 5 := 6917529027641081984 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&12
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 12 := 32&12
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&8
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 8 := 9223372036854775680 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 8 := 32&15
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  33226  37225  3262/2979/432    1987/354    23  131   21.56)
(smt.stats   13   1585  38258  45667  3331/3041/434    2178/394    24  137   21.74)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 2 := 4&385
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&385
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 4467570830351532417 := 4467570830351532416 >>l 62
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&27
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 27 := 4467570830351532416 >>l 62
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&2
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 2 := 4467570830351532416 >>l 62
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 30 := 36028797018963971 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 31 := 36028797018963969 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 31 := 72057594037927935 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 29 := 36028797018963969 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 9 := 36028797018963971 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 4&1
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 4&1
(smt.stats   14   1732  42801  57049  3391/3068/436    2421/417    25  141   21.84)
ramon: poll                 wall=1.000s usage=0.923s mem=23308KiB load=0.92 rootload=0.91
(smt.stats   15   1833  44560  65380  3432/3134/452    2570/435    26  146   21.84)
(smt.stats   16   1944  46613  72831  3504/3193/458    2723/453    28  150   22.04)
(smt.stats   17   2066  48543  79254  3544/3224/461    2930/481    29  166   22.04)
(smt.stats   18   2200  52943  90217  3578/3235/461    3193/482    29  166   22.14)
(smt.stats   19   2347  58933 108251  3594/3278/464    3440/557    30  167   22.31)
(smt.stats   20   2508  62183 116102  3621/3301/466    3697/585    31  169   22.40)
(smt.stats   21   2609  64815 119903  3700/3360/467    3863/630    32  174   22.50)
(smt.stats   22   2720  68014 126193  3776/3429/468    4039/641    33  176   22.50)
(smt.stats   23   2842  70128 133147  3822/3485/470    4191/643    33  176   22.60)
(smt.stats   24   2976  72539 140866  3847/3513/478    4464/701    34  185   22.69)
ramon: poll                 wall=2.003s usage=1.927s mem=24312KiB load=1.00 rootload=1.00
(smt.stats   25   3123  74315 148028  3873/3528/478    4655/703    34  185   22.69)
(smt.stats   26   3284  78309 158736  3901/3555/478    4878/704    34  185   22.88)
(smt.stats   27   3461  85586 184073  3929/3589/483    5110/727    36  199   22.88)
(smt.stats   28   3562  88065 190080  3956/3611/488    5278/738    37  199   23.07)
ramon: poll                 wall=3.000s usage=2.922s mem=25396KiB load=1.00 rootload=1.00
(smt.stats   29   3673  91897 198317  4103/3632/491    5521/790    38  209   23.36)
(smt.stats   30   3795  96381 209165  4199/3804/492    5744/795    38  209   23.55)
ramon: poll                 wall=4.000s usage=3.921s mem=25444KiB load=1.00 rootload=1.00
(smt.stats   31   3929 101920 216927  4344/3930/492    6204/858    39  210   23.64)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076 106577 225224  4371/4024/492    6511/858    39  210   23.64)
(smt.stats   33   4237 111254 237561  4394/4039/493    6994/1035    40  211   23.74)
(smt.stats   34   4414 119571 256076  4419/4061/493    7233/1036    40  211   23.89)
ramon: poll                 wall=5.000s usage=4.921s mem=25720KiB load=1.00 rootload=1.00
(smt.stats   35   4608 123209 261868  4552/4081/493    7451/1039    40  211   24.08)
(smt.stats   36   4709 124703 265518  4702/4295/493    7569/1040    40  211   24.08)
(smt.stats   37   4820 127666 273518  4759/4396/493    7713/1040    40  211   24.08)
ramon: poll                 wall=6.000s usage=5.921s mem=25524KiB load=1.00 rootload=1.00
(smt.stats   38   4942 131861 288097  4775/4426/493    7922/1041    40  211   24.09)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5076 138422 302972  4778/4439/501    8392/1166    41  225   24.18)
(smt.stats   40   5223 148061 323806  4796/4443/501    8679/1167    41  225   24.18)
(smt.stats   41   5384 154398 346346  4829/4490/503    8977/1309    42  231   24.28)
(smt.stats   42   5561 158710 357444  4892/4534/504    9280/1311    42  231   24.37)
ramon: poll                 wall=7.000s usage=6.919s mem=25876KiB load=1.00 rootload=1.00
(smt.stats   43   5755 165561 373526  5023/4563/504    9526/1366    43  235   24.37)
(smt.stats   44   5968 172411 388128  5156/4722/504    9960/1370    43  235   24.47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6069 174885 396077  5165/4824/505   10145/1404    44  238   24.47)
(smt.stats   46   6180 180216 407176  5236/4827/505   10377/1406    44  238   24.47)
(smt.stats   47   6302 185398 427175  5269/4917/505   10679/1406    44  238   24.47)
(smt.stats   48   6436 190423 442662  5337/4933/505   10921/1407    44  238   24.57)
ramon: poll                 wall=8.003s usage=7.922s mem=26188KiB load=1.00 rootload=1.00
(smt.stats   49   6583 196756 466724  5368/5019/505   11175/1409    44  238   24.57)
(smt.stats   50   6744 202091 484358  5437/5072/506   11478/1535    45  238   24.66)
(smt.stats   51   6921 205769 501926  5609/5267/507   11775/1536    45  238   24.57)
(smt.stats   52   7115 211443 519957  5722/5272/508   12005/1538    45  238   24.57)
(smt.stats   53   7328 219162 539821  6035/5418/508   12433/1572    46  242   24.76)
ramon: poll                 wall=9.000s usage=8.918s mem=26512KiB load=1.00 rootload=1.00
(smt.stats   54   7562 226922 560995  6133/5719/508   13094/1576    46  242   24.95)
(smt.stats   55   7663 230853 580904  6144/5802/508   13234/1576    46  242   25.05)
(smt.stats   56   7774 233752 596293  6176/5810/508   13390/1577    46  242   25.05)
(smt.stats   57   7896 236569 606715  6211/5859/508   13577/1577    46  242   25.05)
(smt.stats   58   8030 239106 621203  6234/5884/508   13834/1577    46  242   25.05)
(smt.stats   59   8177 243369 630992  6329/5907/508   14046/1578    46  242   25.15)
ramon: poll                 wall=10.000s usage=9.918s mem=26652KiB load=1.00 rootload=1.00
(smt.stats   60   8338 247016 645320  6472/6059/508   14276/1579    46  242   25.35)
(smt.stats   61   8515 250768 661645  6563/6163/508   14588/1579    46  242   25.44)
(smt.stats   62   8709 256947 679829  6794/6254/508   14957/1582    46  242   25.44)
(smt.stats   63   8922 262244 694605  7037/6526/508   15232/1587    46  242   25.54)
ramon: poll                 wall=11.000s usage=10.917s mem=27376KiB load=1.00 rootload=0.99
(smt.stats   64   9156 273955 713909  7150/6730/508   15946/1587    46  242   25.73)
ramon: poll                 wall=12.000s usage=11.916s mem=27592KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9413 285299 747962  7425/6853/508   16644/1590    46  242   25.92)
(smt.stats   66   9514 287207 759779  7484/7140/508   16983/1590    46  242   25.92)
(smt.stats   67   9625 293960 781530  7509/7141/508   17277/1590    46  242   26.02)
(smt.stats   68   9747 298981 808894  7524/7180/510   17638/2252    47  251   26.02)
(smt.stats   69   9881 303140 827259  7537/7188/511   17863/2253    47  251   26.02)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   70  10028 306764 847702  7555/7200/511   18091/2256    47  251   26.02)
(smt.stats   71  10189 310644 861457  7653/7219/511   18288/2288    48  261   26.14)
ramon: poll                 wall=13.000s usage=12.915s mem=27748KiB load=1.00 rootload=1.00
(smt.stats   72  10366 316710 879925  7771/7332/511   18600/2288    48  261   26.24)
(smt.stats   73  10560 322436 906830  7853/7502/513   19022/2368    49  277   26.33)
(smt.stats   74  10773 329955 944503  7873/7522/513   19414/2368    49  277   26.52)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 2 := 2&3
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 3 := 720575940379279616 >>l 63
(smt.stats   75  11007 339030 978969  7911/7545/513   20115/2370    49  277   26.52)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 2&185
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 185 := 0 >>l 63
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 2&185
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 185 := 0 >>l 63
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11264 345954 1023727  7983/7594/519   20483/2596    50  278   26.62)
ramon: poll                 wall=14.000s usage=13.915s mem=28240KiB load=1.00 rootload=1.00
(smt.stats   77  11546 351615 1055390  8099/7651/519   20917/2602    50  278   26.71)
(smt.stats   78  11647 354297 1070921  8167/7772/519   21206/2698    51  278   26.71)
(smt.stats   79  11758 357969 1091423  8198/7837/521   21396/2699    51  278   26.71)
(smt.stats   80  11880 363608 1116803  8206/7854/521   21569/2699    51  278   26.71)
(smt.stats   81  12014 366429 1129670  8220/7868/521   22197/2759    52  282   26.81)
ramon: poll                 wall=15.000s usage=14.915s mem=28420KiB load=1.00 rootload=1.00
(smt.stats   82  12161 371367 1165350  8227/7873/521   22578/2759    52  282   26.81)
(smt.stats   83  12322 374397 1182829  8307/7886/521   22802/2760    52  282   26.91)
(smt.stats   84  12499 377264 1198402  8404/8052/522   23017/2885    53  284   27.00)
(smt.stats   85  12693 384201 1225198  8405/8053/522   23360/2885    53  284   27.00)
(smt.stats   86  12906 394048 1249807  8526/8054/522   23668/2887    53  284   27.09)
ramon: poll                 wall=16.000s usage=15.915s mem=28952KiB load=1.00 rootload=1.00
(smt.stats   87  13140 397280 1272720  8609/8204/522   23917/2891    53  284   27.19)
(smt.stats   88  13397 403367 1295684  8691/8281/522   24305/2891    53  284   27.39)
(smt.stats   89  13679 413209 1344884  8728/8355/522   24757/2896    53  284   27.39)
ramon: poll                 wall=17.000s usage=16.914s mem=29120KiB load=1.00 rootload=1.00
(smt.stats   90  13989 421094 1382474  8858/8391/522   25290/2898    53  284   27.48)
(smt.stats   91  14090 425084 1396648  8883/8518/522   25528/2899    53  284   27.48)
(smt.stats   92  14201 429834 1418054  8924/8537/522   25900/2903    53  284   27.58)
(smt.stats   93  14323 435699 1433580  8963/8599/522   26153/2903    53  284   27.58)
ramon: poll                 wall=18.000s usage=17.914s mem=29288KiB load=1.00 rootload=1.00
(smt.stats   94  14457 439136 1449372  9050/8639/522   26740/2904    53  284   27.67)
(smt.stats   95  14604 442115 1461614  9086/8702/522   27005/2905    53  284   27.67)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   96  14765 446881 1487781  9166/8749/522   27456/2911    53  284   27.77)
ramon: poll                 wall=19.000s usage=18.914s mem=29540KiB load=1.00 rootload=1.00
(smt.stats   97  14942 452153 1507839  9297/8833/522   27862/2917    53  284   27.86)
(smt.delete-inactive-clauses  :num-deleted-clauses 155)
(smt.stats   98  15136 457894 1546118  9315/8943/522   28241/2917    53  284   27.96)
(smt.stats   99  15349 463922 1574759  9484/8999/522   28673/2919    53  284   27.96)
ramon: poll                 wall=20.000s usage=19.913s mem=29772KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:50:01 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.968s
ramon: group.utime          19.956s
ramon: group.stime          0.012s
ramon: group.mempeak        30540KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.054s
ramon: loadavg              1.00
