ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:13:40 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24396 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zNcDGPupmmzS.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             194868
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1058    325  1157/985/99     108/9     4   16   19.08)
(smt.stats    1    202   2615   1386  1719/1560/102     208/20     6   20   19.17)
(smt.stats    2    313   4814   2262  1817/1661/103     326/38     7   21   19.17)
(smt.stats    3    414   6116   4608  2185/1682/104     429/71     8   21   19.37)
(smt.stats    4    525   7319   6149  2446/2234/112     539/97    10   24   19.47)
(smt.stats    5    647  12623   9644  2474/2256/115     666/108    13   27   19.57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  15285  11811  2488/2272/115     775/114    14   28   19.67)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&1476395008
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 1099511627776 := 18446744073692774400 >>l 38
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&1476395008
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 1099511627776 := 18446744073692774400 >>l 38
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&1476395008
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 1099511627776 := 18446744073692774400 >>l 38
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&1476395008
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 1099511627776 := 18446744073692774400 >>l 38
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&1476395008
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 1099511627776 := 18446744073692774400 >>l 38
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 67108863&1476395008
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 1099511627775 := 1099511627775 >>l 14
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 90112&1476395008
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 1476395008 := 1476395009 >>l 14
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 90112&1476395008
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #477 39) 12094627905536 (if #479 6047313952768 #555))) 1 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 1 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 1 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 90112&1476395008
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #477 39) 12094627905536 (if #479 6047313952768 #555))) 2 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 90112&1476395008
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #477 39) 12094627905536 (if #479 6047313952768 #555))) 4 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 90112&1476395008
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #477 39) 12094627905536 (if #479 6047313952768 #555))) 8 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 90112&1476395008
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #477 39) 12094627905536 (if #479 6047313952768 #555))) 16 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 90112&1476395008
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #477 39) 12094627905536 (if #479 6047313952768 #555))) 32 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 90112&1476395008
band: (band[40] (lshr[40] (bv2int %1) (mod #100 40)) (if (= #477 39) 12094627905536 (if #479 6047313952768 #555))) 64 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 90112&1476395008
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 90114 := 1476395009 >>l 14
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 4 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 64 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 128 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 256 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 512 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 1024 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2048 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 4096 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8192 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16384 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32768 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 65536 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 131072 := 131072&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 262144 := 262144&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 524288 := 524288&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 1048576 := 1048576&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2097152 := 2097152&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2097152 := 2097152&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 4194304 := 4194304&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8388608 := 8388608&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16777216 := 16777216&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 33554432 := 33554432&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90128&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90128&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16 := 90128&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32 := 90128&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32 := 90128&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32 := 90128&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32 := 90160&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 512 := 90128&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 512 := 90128&1476395008
(smt.stats    7    859  16551  14308  2715/2449/264     954/141    15   39   20.66)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2560 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2560 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2048 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 4096 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8192 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16384 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32768 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 65536 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32768 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 65536 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 4096 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 4096 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 4096 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8192 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8192 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8192 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8192 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32768 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32768 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32768 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16384 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16384 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16384 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2048 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2048 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2048 := 90112&1476395008
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 2048 := 90112&1476395008
(smt.stats    8    981  18261  21163  2772/2552/361    1095/274    19  137   20.75)
(smt.stats    9   1115  23568  26990  2794/2574/366    1242/309    20  148   20.85)
(smt.stats   10   1216  27516  37597  2806/2586/368    1359/312    21  152   20.95)
(smt.stats   11   1327  30646  46500  2892/2644/368    1509/316    22  154   20.95)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33708  54132  2914/2674/368    1691/317    22  154   21.04)
(smt.stats   13   1583  36869  62245  2943/2700/369    1880/368    23  158   21.14)
(smt.stats   14   1730  39786  72387  3015/2729/370    2067/388    24  158   21.55)
(smt.stats   15   1831  41870  78909  3144/2797/371    2200/395    25  160   21.55)
ramon: poll                 wall=1.000s usage=0.931s mem=22868KiB load=0.93 rootload=0.92
(smt.stats   16   1942  45369  86941  3193/2949/371    2343/395    25  160   21.55)
(smt.stats   17   2064  49256  97702  3204/2963/371    2586/395    25  160   21.55)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 94858452993&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 94858452993&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 94891933697&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 94757715969&738197504
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 1194269343745 := 1614539092039565312 >>l 39
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 94757715969&738197504
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 94757715969 := 1616229041377902592 >>l 39
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 94489354241&738197504
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 94489354241 := 1616229041377902592 >>l 39
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 94489354241&738197504
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 94489354241 := 1616229041377902592 >>l 39
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 81921&738197504
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 1099511627775 := 2684387329 >>l 15
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 81921&738197504
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 738197505 := 2684420095 >>l 15
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 81921&738197504
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 738197505 := 2684420095 >>l 15
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 35 := 81921&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 35 := 81921&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 35 := 81921&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 36 := 82945&738197504
(smt.stats   18   2198  53879 110969  3271/3002/392    2801/452    26  165   21.74)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 35 := 81921&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 38 := 83140&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 38 := 83140&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 38 := 83140&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 38 := 83140&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 38 := 83140&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 38 := 83140&738197504
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 38 := 83140&738197504
(smt.stats   19   2345  56562 118290  3508/3232/424    3110/488    27  174   22.03)
(smt.stats   20   2506  59364 127314  3619/3368/429    3464/500    28  177   22.13)
(smt.stats   21   2607  62932 138257  3731/3380/429    3734/507    28  177   22.13)
(smt.stats   22   2718  68028 155534  3768/3499/429    4138/624    29  187   22.41)
(smt.stats   23   2840  72814 173090  3778/3528/429    4274/624    29  187   22.41)
(smt.stats   24   2974  76534 185336  3862/3543/430    4620/724    30  190   22.54)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 1073750220&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 45207521161388236 := 45206970348601344 >>l 24
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 73932&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 1099511701708 := 0 >>l 24
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 73932&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 1099511701708 := 0 >>l 24
(smt.stats   25   3121  79758 199229  3900/3631/435    5159/828    31  197   22.64)
ramon: poll                 wall=2.000s usage=1.930s mem=24048KiB load=1.00 rootload=0.99
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 64 := 77965&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 64 := 77965&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 64 := 78029&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 128 := 78029&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 4096 := 78029&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 1024 := 78029&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 1024 := 78029&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 1024 := 78029&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 65536 := 77965&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 256 := 77965&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 256 := 78029&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 256 := 78221&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 36 := 78157&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 36 := 78157&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32 := 78157&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 32 := 78157&92274688
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 78157&92274688
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 1099511705933 := 0 >>l 42
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 78157&92274688
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 78157 := 0 >>l 42
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 78157&92274688
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 78157 := 0 >>l 42
(smt.stats   26   3282  83426 214417  4130/3736/441    5428/921    32  204   22.83)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 78221&92274688
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 90440 := 20505165825 >>l 18
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 78221&92274688
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 83139 := 20505427967 >>l 18
(smt.stats   27   3459  86785 229557  4266/3907/491    5844/946    33  217   23.02)
(smt.stats   28   3560  89510 236972  4287/4022/496    6232/997    34  218   23.12)
(smt.stats   29   3671  92371 241915  4490/4024/496    6518/997    34  218   23.32)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793  95006 248523  4749/4260/496    6774/1070    35  218   23.41)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 16777216 := 1879048327&188978561024
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8388608 := 1879048326&188978561024
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8388608 := 1879048326&188978561024
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8388608 := 1879048326&188978561024
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 8388608 := 1879048326&188978561024
(smt.stats   31   3927  97879 256309  4906/4639/509    7638/1075    35  218   23.61)
(smt.stats   32   4074  99949 262944  4920/4643/509    7871/1075    35  218   23.61)
(smt.stats   33   4235 104807 283922  4947/4663/510    8480/1210    36  226   23.71)
ramon: poll                 wall=3.000s usage=2.929s mem=25036KiB load=1.00 rootload=0.99
(smt.stats   34   4412 109618 304786  5184/4688/510    9010/1341    37  226   23.80)
(smt.stats   35   4606 114892 336400  5203/4938/517    9707/1494    38  231   23.90)
(smt.stats   36   4707 118843 355198  5206/4941/518   10056/1590    39  254   24.01)
(smt.stats   37   4818 124730 385597  5210/4945/518   10375/1590    39  254   24.10)
(smt.stats   38   4940 129556 415113  5236/4967/520   10889/1792    41  279   24.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 237)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 111&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 111 := 0 >>l 25
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 111&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 111 := 0 >>l 25
(smt.stats   39   5074 133367 434595  5264/4979/520   10962/1792    41  279   24.10)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 0 >>l 25
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&0
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 83139 := 0 >>l 1
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&0
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 0 >>l 25
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&0
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 83139 := 0 >>l 1
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&755914244096
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 0 >>l 29
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&755914244096
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 90440 := 0 >>l 5
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&755914244096
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 0 >>l 29
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&755914244096
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 83139 := 0 >>l 5
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&755914244096
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 549722259456 >>l 29
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&755914244096
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 536870912 >>l 29
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&755914244096
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 536870912 >>l 29
(smt.stats   40   5221 136404 449025  5376/5039/525   11202/1845    42  280   24.24)
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&5905580032
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 0 >>l 36
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&5905580032
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 83139 := 0 >>l 12
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&5905580032
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 0 >>l 36
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&5905580032
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 83139 := 0 >>l 12
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&5905580032
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 5713268576354304 >>l 36
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&5905580032
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 5713268542799872 >>l 36
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&5905580032
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 4466765987840 >>l 36
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&2952790016
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 893353197568 >>l 37
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&2952790016
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 824667275264 >>l 37
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&2952790016
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 549218942976 >>l 37
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&2952790016
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 275414777856 >>l 37
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&2952790016
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 83140 := 4096 >>l 13
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&2952790016
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 129 := 4096 >>l 13
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&2952790016
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 129 := 4096 >>l 13
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&1476395008
lshr: (lshr[40] (bv2int %1) (mod (bv2int %0) 40)) 1 := 8192 >>l 14
band: (band[40] (lshr[64] (* 16777216 #99) (mod #278 64)) (if (= #578 63) 405828369621610135552 (if #580 202914184810805067776 #704))) 0 := 0&1476395008
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 24 #100 #277) 64)) 0 := 275414777856 >>l 38
(smt.stats   41   5382 140622 466378  5512/5129/540   11511/1860    42  280   24.37)
(smt.stats   42   5559 144780 482241  5590/5280/560   11841/1888    43  287   24.46)
ramon: poll                 wall=4.000s usage=3.929s mem=26320KiB load=1.00 rootload=1.00
(smt.stats   43   5753 150182 505026  5682/5308/560   12081/1893    43  287   24.65)
(smt.stats   44   5966 155402 531774  6606/6299/561   12787/1970    44  287   24.93)
(smt.stats   45   6067 161685 542854  6614/6307/561   13033/1970    44  287   24.93)
(smt.stats   46   6178 167019 569043  6618/6311/561   13268/2106    45  308   25.03)
ramon: poll                 wall=5.000s usage=4.929s mem=26832KiB load=1.00 rootload=1.00
(smt.stats   47   6300 170833 581902  6711/6313/561   13473/2114    45  308   25.22)
(smt.stats   48   6434 175066 600864  6910/6603/562   13922/2219    46  311   25.22)
(smt.stats   49   6581 178907 622710  6927/6610/565   14877/2220    46  311   25.32)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 187482 668053  6940/6629/565   15265/2220    46  311   25.41)
(smt.stats   51   6919 199485 722054  6989/6682/566   15830/2578    48  335   25.41)
ramon: poll                 wall=6.000s usage=5.920s mem=27036KiB load=0.99 rootload=0.99
(smt.stats   52   7113 203642 743146  7088/6686/566   16348/2579    48  335   25.51)
(smt.stats   53   7326 208064 757790  7344/6822/566   16581/2582    48  335   25.60)
(smt.stats   54   7560 213780 791669  7437/7084/568   17223/2759    49  336   25.70)
(smt.stats   55   7661 217157 808092  7516/7152/568   17381/2759    49  336   25.70)
(smt.stats   56   7772 221530 828374  7594/7231/569   17603/2816    50  348   25.79)
(smt.stats   57   7894 225671 843425  7628/7281/569   17822/2816    50  348   25.89)
ramon: poll                 wall=7.000s usage=6.919s mem=27360KiB load=1.00 rootload=1.00
(smt.stats   58   8028 231364 869919  7702/7389/570   18477/2956    51  373   25.98)
(smt.stats   59   8175 235848 886939  7736/7393/570   18769/2956    51  373   26.08)
(smt.stats   60   8336 240714 915090  7805/7470/571   19196/2995    52  375   26.08)
(smt.stats   61   8513 245089 944825  7869/7540/572   19790/2995    52  375   26.18)
ramon: poll                 wall=8.000s usage=7.919s mem=27736KiB load=1.00 rootload=1.00
(smt.stats   62   8707 252008 977429  8083/7560/572   20218/3003    52  375   26.37)
ramon: poll                 wall=9.000s usage=8.919s mem=27976KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 256847 1004740  8305/7817/572   20884/3048    53  392   26.56)
(smt.stats   64   9154 265351 1049279  8339/8006/572   21948/3051    53  392   26.80)
ramon: poll                 wall=10.000s usage=9.919s mem=28492KiB load=1.00 rootload=0.99
(smt.stats   65   9411 273007 1074800  8531/8061/572   22530/3052    53  392   26.80)
(smt.stats   66   9512 275091 1087571  8574/8247/572   22831/3052    53  392   26.90)
(smt.stats   67   9623 277203 1100000  8700/8263/572   22989/3052    53  392   26.90)
(smt.stats   68   9745 280603 1127863  8746/8417/572   23283/3052    53  392   26.99)
(smt.stats   69   9879 285494 1155622  8810/8437/572   23827/3052    53  392   27.09)
(smt.delete-inactive-clauses  :num-deleted-clauses 21)
(smt.stats   70  10026 288984 1182564  8842/8520/572   24102/3052    53  392   27.27)
(smt.stats   71  10187 290511 1202987  8856/8533/572   24297/3052    53  392   27.27)
(smt.stats   72  10364 294146 1245017  8913/8556/572   24604/3052    53  392   27.36)
ramon: poll                 wall=11.000s usage=10.918s mem=28964KiB load=1.00 rootload=1.00
(smt.stats   73  10558 299205 1282197  9018/8603/572   25348/3052    53  392   27.46)
(smt.stats   74  10771 307461 1357111  9039/8710/572   25897/3052    53  392   27.65)
ramon: poll                 wall=12.000s usage=11.918s mem=29500KiB load=1.00 rootload=1.00
(smt.stats   75  11005 315498 1399763  9199/8771/572   26405/3056    53  392   27.65)
(smt.stats   76  11262 328358 1482653  9259/8905/572   27661/3058    53  392   27.86)
ramon: poll                 wall=13.000s usage=12.918s mem=29568KiB load=1.00 rootload=1.00
(smt.stats   77  11544 340218 1547905  9304/8954/574   29035/4127    54  397   28.05)
(smt.stats   78  11645 342141 1579877  9309/8994/575   29243/4127    54  397   28.05)
(smt.stats   79  11756 348554 1667231  9310/8995/575   29447/4127    54  397   28.05)
(smt.stats   80  11878 352767 1732302  9311/8996/575   29717/4225    55  434   28.15)
(smt.stats   81  12012 358605 1775879  9320/9005/575   30642/4225    55  434   28.15)
ramon: poll                 wall=14.000s usage=13.906s mem=29704KiB load=0.99 rootload=0.99
(smt.stats   82  12159 362860 1804426  9446/9010/576   30899/4326    56  444   28.24)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12320 365704 1832409  9825/9150/576   31211/4329    56  444   28.43)
(smt.stats   84  12497 369164 1852770 10031/9529/576   31498/4329    56  444   28.55)
ramon: poll                 wall=15.000s usage=14.905s mem=30140KiB load=1.00 rootload=1.00
(smt.stats   85  12691 377778 1910835 10054/9739/576   32454/4329    56  444   28.64)
(smt.stats   86  12904 385401 1976018 10073/9746/576   32926/4329    56  444   28.64)
(smt.stats   87  13138 392909 2028079 10098/9774/576   34086/4329    56  444   28.74)
(smt.stats   88  13395 402915 2113691 10131/9805/577   35092/4599    57  453   28.84)
ramon: poll                 wall=16.000s usage=15.905s mem=30524KiB load=1.00 rootload=1.00
(smt.stats   89  13677 411610 2175902 10229/9827/577   36770/4604    57  453   29.03)
(smt.stats   90  13987 420084 2236434 10277/9923/577   37904/4607    57  453   29.12)
(smt.stats   91  14088 424487 2260339 10307/9973/577   38053/4607    57  453   29.12)
(smt.stats   92  14199 428727 2296200 10334/9992/577   38222/4607    57  453   29.12)
ramon: poll                 wall=17.000s usage=16.905s mem=30788KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   93  14321 431879 2330752 10407/10028/577   38413/4608    57  453   29.12)
(smt.stats   94  14455 434491 2365571 10452/10105/577   38668/4608    57  453   29.22)
(smt.stats   95  14602 438664 2405409 10464/10149/577   39567/4608    57  453   29.31)
(smt.stats   96  14763 442452 2446852 10481/10155/578   39962/5203    58  461   29.41)
(smt.stats   97  14940 446694 2469985 10578/10170/578   40161/5204    58  461   29.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 3821)
ramon: poll                 wall=18.000s usage=17.905s mem=31104KiB load=1.00 rootload=1.00
(smt.stats   98  15134 453013 2538965 10600/10279/579   36843/5204    58  461   29.41)
(smt.stats   99  15347 462642 2601110 10605/10290/580   37808/5262    59  471   29.51)
(smt.stats  100  15581 469381 2646873 10666/10291/580   38370/5264    59  471   29.60)
ramon: poll                 wall=19.000s usage=18.904s mem=31400KiB load=1.00 rootload=1.00
(smt.stats  101  15838 475264 2695698 10817/10368/580   39059/5269    59  471   29.60)
(smt.stats  102  16120 483067 2762353 10939/10555/581   40125/5633    60  472   29.70)
ramon: poll                 wall=20.000s usage=19.904s mem=31724KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:14:00 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.030s
ramon: group.total          19.969s
ramon: group.utime          19.937s
ramon: group.stime          0.032s
ramon: group.mempeak        32236KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.00
