ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:51:52 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42239 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EpzrjqHv3kSH.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2870940
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2835    330  1190/1023/98     110/21     5   17   19.13)
(smt.stats    1    202   3348    767  1629/1452/101     224/30     7   19   19.33)
(smt.stats    2    313   3805   1270  1765/1583/101     384/31     7   19   19.33)
(smt.stats    3    414   5936   2765  1856/1707/103     500/56     8   24   19.33)
(smt.stats    4    525   6524   3645  2459/1711/106     651/111     8   24   19.54)
(smt.stats    5    647  10979   6676  2500/2282/108     769/129    10   30   19.64)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  14077   9736  2586/2357/109     893/135    12   32   19.64)
(smt.stats    7    859  17114  12376  2635/2421/117    1011/151    14   40   19.77)
(smt.stats    8    981  20048  14520  2734/2493/117    1134/153    14   40   19.87)
(smt.stats    9   1115  22869  18420  2885/2592/119    1277/185    16   41   19.87)
ramon: poll                 wall=1.000s usage=0.885s mem=21236KiB load=0.88 rootload=0.87
(smt.stats   10   1216  25179  21693  2889/2655/119    1381/185    16   41   19.87)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 4 := 4&15
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 17592186044420 := 5 << 5
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 4&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 2 := 4&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 4 := 4&15
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 4 := 5 << 5
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 15 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 14 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 12 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 8 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 17591112301998 := 5 << 5
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
shl: (shl[44] (bv2int %0) (mod (bv2int %0) 44)) 17591112301998 := 5 << 5
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 15 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 14 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 14 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 12 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 8 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 14 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 12 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 8 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 8 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 8 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 2 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 8 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 8 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 4 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 0 (if #587 1 #707))) 1 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 0 (if #587 1 #707))) 2 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 0 (if #587 1 #707))) 4 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 0 (if #587 1 #707))) 8 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 0 (if #587 1 #707))) 14 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 0 (if #587 1 #707))) 12 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 0 (if #587 1 #707))) 8 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 0 (if #587 1 #707))) 2 := 160&15
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 160&15
band: (band[44] (shl[44] (bv2int %0) (mod #101 44)) (if (= #585 43) 0 (if #587 1 #707))) 1 := 160&15
(smt.stats   11   1327  27848  24295  2981/2733/196    1510/191    17   58   20.18)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 178&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 179&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 181&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 181&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 180&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 178&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 178&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 179&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 181&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 180&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 1 := 181&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 5 := 182&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 5 := 183&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 5 := 182&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 5 := 183&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 2 := 179&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 2 := 179&31
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 2 := 179&31
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  31232  27641  3059/2810/228    1666/215    19   67   20.37)
(smt.stats   13   1583  34859  31261  3206/2840/237    1893/220    19   67   20.76)
(smt.stats   14   1730  38087  33855  3356/2972/237    2046/294    20   82   20.76)
(smt.stats   15   1831  41208  36154  3412/3139/237    2156/295    20   82   20.85)
(smt.stats   16   1942  46017  41759  3502/3182/237    2289/298    20   82   20.85)
(smt.stats   17   2064  50056  47696  3549/3310/237    2438/298    20   82   21.08)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 33 := 17591112303153&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 17 := 17591112303137&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 17 := 17591112303137&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 17 := 17591112303137&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 17 := 17591112303137&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 17 := 17591112303137&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 17 := 17591112303137&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 17 := 17591112303153&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 33 := 17591112303169&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 33 := 17591112303169&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 65 := 17591112303233&4398046511103
(smt.stats   18   2198  54988  53067  3652/3339/237    2602/301    20   82   21.18)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 129 := 17591112303297&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 129 := 17591112303297&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 129 := 17591112303297&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 129 := 17591112303361&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 257 := 17591112303425&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303361&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303425&4398046511103
ramon: poll                 wall=2.000s usage=1.882s mem=22576KiB load=1.00 rootload=0.99
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303489&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303553&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303553&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303809&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303809&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303809&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303809&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 193 := 17591112303553&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 227 := 17591112302817&4398046511103
(smt.stats   19   2345  56933  56938  3874/3501/293    2911/356    21   89   21.37)
(smt.stats   20   2506  59937  64653  4115/3632/318    3316/365    21   89   21.66)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17591112305314&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17591112305330&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17591112305330&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17591112305330&4398046511103
(smt.stats   21   2607  61518  69694  4267/3908/318    3712/497    22  100   21.90)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17557826326706&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17557826326706&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17557826326706&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17557826326706&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17557826326706&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17557826326706&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17557826330802&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17557826330802&4398046511103
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 178 := 17557826330802&4398046511103
(smt.stats   22   2718  62826  73807  4531/4169/333    3927/500    22  100   22.09)
(smt.stats   23   2840  64142  77457  4830/4587/360    4335/577    23  110   22.09)
(smt.stats   24   2974  68189  88390  4952/4699/363    4994/848    24  118   22.29)
(smt.stats   25   3121  74214  97992  4959/4716/365    5238/848    24  118   22.29)
(smt.stats   26   3282  80800 121824  4967/4724/371    5657/1066    27  155   22.38)
ramon: poll                 wall=3.000s usage=2.882s mem=23832KiB load=1.00 rootload=1.00
(smt.stats   27   3459  83783 136751  4978/4735/376    6017/1119    28  166   22.48)
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 17591112303760&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 545356693636240 := 1 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 1424&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 527765581333904 := 1 << 1
band: (band[44] (shl[64] (bv2int %0) (mod #333 64)) (if (or #727 #728) 0 (if #729 1 #869))) 0 := 1424&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #332) 64)) 527765581333904 := 1 << 1
(smt.stats   28   3560  85062 142954  5103/4846/385    6436/1437    29  194   22.89)
(smt.stats   29   3671  90130 152131  5343/5027/386    6715/1437    29  194   23.32)
(smt.stats   30   3793  95629 165460  5405/5032/386    7122/1481    30  194   23.42)
(smt.stats   31   3927  97793 173705  5617/5136/386    7571/1481    30  194   23.62)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074 102254 189642  5670/5343/391    8694/1634    31  198   23.81)
ramon: poll                 wall=4.000s usage=3.882s mem=25368KiB load=1.00 rootload=1.00
(smt.stats   33   4235 107382 205134  5851/5368/391    9259/1646    31  198   24.00)
(smt.stats   34   4412 115613 237492  6017/5702/392   10601/1909    33  214   24.19)
ramon: poll                 wall=5.000s usage=4.881s mem=25880KiB load=1.00 rootload=1.00
(smt.stats   35   4606 121798 257280  6154/5718/393   11787/1910    33  214   24.48)
(smt.stats   36   4707 126479 271609  6293/5859/393   12309/2028    34  216   24.57)
(smt.stats   37   4818 132049 290696  6393/6008/393   12564/2030    34  216   24.67)
ramon: poll                 wall=6.000s usage=5.881s mem=26392KiB load=1.00 rootload=1.00
(smt.stats   38   4940 137862 309226  6492/6093/393   12993/2032    34  216   24.76)
(smt.delete-inactive-clauses  :num-deleted-clauses 1348)
(smt.stats   39   5074 141994 318901  6568/6213/393   12452/2034    34  216   24.85)
(smt.stats   40   5221 151635 344689  6664/6297/393   12928/2041    34  216   24.85)
(smt.stats   41   5382 161147 368246  6787/6373/393   13520/2047    34  216   24.85)
ramon: poll                 wall=7.000s usage=6.880s mem=26760KiB load=1.00 rootload=1.00
(smt.stats   42   5559 169140 385125  6819/6501/396   14196/2421    35  220   24.95)
(smt.stats   43   5753 178497 433081  6881/6564/400   15018/2535    36  235   25.05)
ramon: poll                 wall=8.000s usage=7.880s mem=27016KiB load=1.00 rootload=1.00
(smt.stats   44   5966 186981 452761  7056/6741/402   16049/2659    37  288   25.24)
(smt.stats   45   6067 189726 460908  7084/6745/402   16660/2660    37  288   25.24)
(smt.stats   46   6178 194320 473196  7199/6799/402   17932/2661    37  288   25.43)
(smt.stats   47   6300 199683 490676  7295/6896/402   18399/2661    37  288   25.73)
ramon: poll                 wall=9.000s usage=8.880s mem=27272KiB load=1.00 rootload=1.00
(smt.stats   48   6434 203655 511113  7400/7086/404   19289/2957    38  292   25.73)
(smt.stats   49   6581 209197 526495  7479/7097/405   20119/2959    38  292   25.92)
ramon: poll                 wall=10.000s usage=9.878s mem=27384KiB load=1.00 rootload=0.99
(smt.stats   50   6742 215648 544707  7629/7282/407   20792/3073    39  298   26.02)
(smt.stats   51   6919 221569 562108  7751/7334/408   21425/3075    39  298   26.12)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 226639 586181  7774/7461/408   22298/3139    40  301   26.12)
ramon: poll                 wall=11.000s usage=10.878s mem=27896KiB load=1.00 rootload=1.00
(smt.stats   53   7326 237551 635581  7853/7465/408   23514/3140    40  301   26.31)
(smt.stats   54   7560 246842 675464  7982/7552/408   24277/3142    40  301   26.40)
(smt.stats   55   7661 253521 687445  8018/7674/408   24636/3145    40  301   26.40)
(smt.stats   56   7772 260603 706254  8177/7760/408   25137/3150    40  301   26.40)
ramon: poll                 wall=12.000s usage=11.878s mem=28152KiB load=1.00 rootload=1.00
(smt.stats   57   7894 267962 719266  8282/7891/409   25332/3663    41  303   26.50)
(smt.stats   58   8028 272177 735841  8340/7990/409   26071/3663    41  303   26.59)
(smt.stats   59   8175 279074 756663  8376/8028/409   26423/3666    41  303   26.69)
(smt.stats   60   8336 286354 800258  8516/8104/409   26917/3670    41  303   26.69)
ramon: poll                 wall=13.000s usage=12.877s mem=28408KiB load=1.00 rootload=1.00
(smt.stats   61   8513 292986 824471  8634/8215/409   28245/3677    41  303   27.06)
(smt.stats   62   8707 301655 856393  8750/8328/409   28793/3681    41  303   27.22)
ramon: poll                 wall=14.000s usage=13.877s mem=28920KiB load=1.00 rootload=1.00
(smt.stats   63   8920 309998 917353  8936/8477/409   29816/3684    41  303   27.32)
(smt.stats   64   9154 319952 958037  9065/8640/412   30920/4327    42  313   27.41)
ramon: poll                 wall=15.000s usage=14.877s mem=29176KiB load=1.00 rootload=1.00
(smt.stats   65   9411 329587 998570  9372/8793/412   32221/4335    42  313   27.70)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   66   9512 332702 1012530  9446/9104/413   33186/4515    43  339   27.80)
(smt.stats   67   9623 336573 1045050  9571/9247/415   33700/4517    43  339   27.80)
ramon: poll                 wall=16.000s usage=15.876s mem=29432KiB load=1.00 rootload=1.00
(smt.stats   68   9745 342579 1105235  9679/9282/416   34534/4520    43  339   27.89)
(smt.stats   69   9879 348410 1154770  9831/9375/416   35311/4875    44  346   28.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 4140)
(smt.stats   70  10026 353249 1194925  9891/9531/416   31814/4876    44  346   28.18)
ramon: poll                 wall=17.000s usage=16.876s mem=29688KiB load=1.00 rootload=1.00
(smt.stats   71  10187 360877 1254578  9914/9601/417   32872/5010    45  350   28.18)
(smt.stats   72  10364 373716 1332712  9916/9603/417   33330/5010    45  350   28.40)
(smt.stats   73  10558 379388 1379468  9933/9618/417   35189/5010    45  350   28.49)
(smt.stats   74  10771 387607 1455033  9991/9668/420   35787/5492    46  356   28.59)
ramon: poll                 wall=18.000s usage=17.876s mem=30260KiB load=1.00 rootload=1.00
(smt.stats   75  11005 394985 1476859 10047/9671/420   36338/5577    47  395   28.68)
(smt.stats   76  11262 403681 1507731 10312/9833/422   37375/5585    47  395   28.87)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   77  11544 411739 1547895 10480/10074/422   38252/5586    47  395   28.97)
ramon: poll                 wall=19.000s usage=18.876s mem=30516KiB load=1.00 rootload=1.00
(smt.stats   78  11645 416030 1569224 10583/10180/422   38840/5817    48  399   29.07)
(smt.stats   79  11756 419341 1590910 10680/10289/422   39448/5819    48  399   29.07)
(smt.stats   80  11878 422861 1611080 10761/10374/422   40095/5822    48  399   29.07)
(smt.stats   81  12012 426724 1623736 10825/10475/422   40688/5824    48  399   29.16)
ramon: poll                 wall=20.000s usage=19.875s mem=31028KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:52:12 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.994s
ramon: group.utime          19.970s
ramon: group.stime          0.024s
ramon: group.mempeak        31284KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.116s
ramon: loadavg              0.99
