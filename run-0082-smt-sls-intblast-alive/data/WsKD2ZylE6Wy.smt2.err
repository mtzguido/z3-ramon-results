ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:39:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28000 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/WsKD2ZylE6Wy.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             836413
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    101.01     10000        49          0            1        2)
(smt.stats    0    101   5312    474  1064/949/99      96/14     5   14   51.98)
(smt.stats    1    202   6307    794  1792/1626/100     195/36     6   15   52.07)
(sat.ddfw       1      1   51.2872     20001        98          1            1        3)
(smt.stats    2    313   8032   1625  2016/1825/103     303/43     8   19   52.17)
(smt.stats    3    414   8746   2526  2155/1950/109     397/54     9   26   52.30)
(smt.stats    4    525   9352   3966  2218/1977/110     498/54    11   29   52.42)
(sat.ddfw       1      1   51.6796     40001       196          2            1        5)
(smt.stats    5    647   9943   5693  2359/2062/110     623/59    11   29   52.42)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  10540   8007  2386/2174/112     737/73    12   29   52.52)
(smt.stats    7    859  13244  10347  2423/2201/112     840/83    13   30   52.52)
(sat.ddfw       1      1    45.045     70001       343          3            1        8)
(smt.stats    8    981  15220  12866  2487/2277/117     965/94    14   30   52.63)
(smt.stats    9   1115  18108  15290  2538/2294/117    1103/94    14   30   52.63)
(smt.stats   10   1216  19198  18170  2557/2343/117    1207/94    14   30   52.63)
(smt.stats   11   1327  19945  21098  2594/2373/117    1305/95    14   30   52.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  22739  23472  2659/2452/118    1418/123    15   31   52.75)
(smt.stats   13   1583  26390  26418  2660/2456/118    1559/123    15   31   52.75)
(smt.stats   14   1730  29726  29131  2667/2459/118    1720/125    15   31   52.89)
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 33822867457&34359737344
ramon: poll                 wall=1.000s usage=1.118s mem=55004KiB load=1.12 rootload=1.11
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 1&34359737344
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #99 #256) 64)) 18446744039349813249 := 1073741824 >>l 54
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 1&34359737344
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #99 #256) 64)) 1 := 18446744073172680704 >>l 54
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 1&34359737344
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 1 := 67108863 >>l 25
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 1&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 1 := 1&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 1 := 1&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 2 := 2&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 4 := 4&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 8 := 8&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 16 := 16&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 32 := 32&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 64 := 64&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 128 := 128&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 256 := 256&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 512 := 512&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 256 := 256&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 512 := 512&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 1024 := 1024&34359737344
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 29 #99 #256) 64)) 1024 := 36028797018963968 >>l 54
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 256 := 1023&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 512 := 1023&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 512 := 1023&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 128 := 128&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 128 := 128&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 128 := 128&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 128 := 128&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 64 := 64&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 2 := 2&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 2&34359737344
lshr: (lshr[35] (bv2int %0) (mod (bv2int %1) 35)) 1 := 67108864 >>l 25
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 2&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 2 := 2&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 2&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 2 := 2&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 2&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 2 := 2&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 2&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 2 := 2&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 2&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 2 := 2&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 4&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 4 := 4&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 8&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 8 := 8&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 16&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 16 := 16&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 32&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 32 := 32&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 32&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 4 := 32&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 28&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 4 := 28&34359737344
(smt.stats   15   1832  31322  31951  2803/2585/258    1820/149    17   59   53.30)
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 16&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 16 := 16&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 32&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 32 := 32&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 32&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 32 := 32&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 64&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 64 := 64&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 128&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 128 := 128&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 128&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 128 := 128&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 255&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 192 := 255&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 255&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 128 := 255&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 255&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 64 := 255&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 256&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 128 := 256&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 256&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 128 := 256&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 384&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 128 := 384&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 384&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 256 := 384&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 512&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 512 := 512&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 1023&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 512 := 1023&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 256&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 256 := 256&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 512&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 512 := 512&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 256&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 256 := 256&34359737344
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 0 := 512&34359737344
band: (band[35] (lshr[35] (bv2int %0) (mod #99 35)) (if (= #467 34) 590295810341525782528 (if #469 295147905170762891264 #535))) 512 := 512&34359737344
(smt.stats   16   1943  33088  35426  2880/2664/316    1938/162    18   81   53.80)
(sat.ddfw       1      1   38.1679    110001       539          4            1       12)
(smt.stats   17   2065  36388  39860  2971/2706/322    2139/190    20   88   54.00)
(smt.stats   18   2199  39040  50575  3125/2840/322    2327/190    20   88   54.17)
(smt.stats   19   2346  42331  60298  3192/2921/324    2608/213    22   93   54.36)
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 22 := 22&34359738336
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 22 := 22&34359738336
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 25 := 25&34359738336
band: (band[35] (lshr[64] (* 536870912 #98) (mod #257 64)) (if (= #558 63) 633825300095667956674642051072 (if #560 316912650047833978337321025536 #684))) 24 := 24&34359738336
(smt.stats   20   2507  45992  67214  3242/2966/338    2963/233    23   96   54.45)
(sat.ddfw       1      1   32.8509    160000       784          5            1       17)
(smt.stats   21   2608  49354  72721  3300/3020/340    3140/251    24  115   54.55)
(smt.stats   22   2719  51832  81541  3307/3035/341    3282/269    25  115   54.65)
(sat.ddfw       1      1   30.9603    220001      1078          6            1       23)
ramon: poll                 wall=2.002s usage=2.237s mem=56780KiB load=1.12 rootload=1.12
(smt.stats   23   2841  54425  92270  3318/3037/341    3446/272    26  117   54.65)
(smt.stats   24   2975  58093 106912  3329/3057/345    3800/294    27  120   54.84)
(smt.stats   25   3122  60272 116084  3351/3072/345    4024/296    27  120   54.84)
(sat.ddfw       1      1   28.8779    290001      1421          7            1       30)
(smt.stats   26   3283  67110 130955  3385/3083/345    4253/328    28  128   54.97)
(sat.ddfw       1      1   27.6148    370001      1813          8            1       38)
ramon: poll                 wall=3.000s usage=3.487s mem=57244KiB load=1.25 rootload=1.25
(smt.stats   27   3460  71552 144354  3423/3147/347    4627/344    29  128   55.18)
(smt.stats   28   3561  73938 152836  3426/3150/348    4800/344    29  128   55.18)
(smt.stats   29   3672  76404 160541  3456/3155/348    5056/389    30  133   55.18)
(sat.ddfw       1      1   25.0976    460001      2254          9            1       47)
(smt.stats   30   3794  80253 172065  3491/3186/349    5332/396    30  133   55.31)
(smt.stats   31   3928  83340 182585  3536/3260/350    5585/424    31  134   55.31)
ramon: poll                 wall=4.000s usage=4.551s mem=57564KiB load=1.06 rootload=1.06
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  87877 191912  3606/3264/350    5996/428    31  134   55.53)
(sat.ddfw       1      1   22.7376    560001      2745         10            1       57)
(smt.stats   33   4236  92309 204896  3668/3392/351    6396/456    32  135   55.68)
(smt.stats   34   4413  97257 218707  3703/3417/352    6708/528    33  156   55.68)
ramon: poll                 wall=5.000s usage=5.651s mem=57952KiB load=1.10 rootload=1.10
(smt.stats   35   4607 102411 233342  3721/3431/361    7115/529    33  156   55.91)
(sat.ddfw       1      1   20.7234    670001      3284         11            1       68)
(smt.stats   36   4708 105995 243816  3779/3462/362    7447/595    34  175   55.91)
(smt.stats   37   4819 108002 252583  3793/3519/362    7666/595    34  175   55.91)
(smt.stats   38   4941 110958 262047  3845/3523/362    7865/683    35  184   55.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 113043 271146  3856/3582/362    8368/683    35  184   56.01)
ramon: poll                 wall=6.000s usage=6.679s mem=58116KiB load=1.03 rootload=1.03
(smt.stats   40   5222 119442 292395  3868/3593/362    8822/683    35  184   56.11)
(smt.stats   41   5383 124535 308703  3952/3630/364    9415/797    36  195   56.20)
(sat.ddfw       1      1   18.6393    790001      3872         12            1       80)
(smt.stats   42   5560 126146 314876  4012/3694/364    9694/797    36  195   56.33)
ramon: poll                 wall=7.000s usage=7.673s mem=58520KiB load=0.99 rootload=0.99
(smt.stats   43   5754 130940 330097  4116/3730/364   10084/861    37  196   56.42)
(smt.stats   44   5967 135945 348469  4263/3848/364   10701/864    37  196   56.42)
(sat.ddfw       1      1   16.9558    920001      4509         13            1       93)
(smt.stats   45   6068 139600 359298  4274/3989/364   10946/864    37  196   56.78)
(smt.stats   46   6179 142629 369866  4299/3992/364   11204/867    37  196   56.78)
ramon: poll                 wall=8.000s usage=8.667s mem=58796KiB load=0.99 rootload=0.99
(smt.stats   47   6301 144961 379148  4363/4017/364   11567/870    37  196   56.88)
(smt.stats   48   6435 147264 389266  4424/4108/364   11804/872    37  196   56.88)
(smt.stats   49   6582 149761 403280  4437/4143/364   12252/872    37  196   57.00)
(smt.stats   50   6743 154533 429619  4453/4158/364   12877/872    37  196   57.09)
(smt.stats   51   6920 157248 447016  4493/4170/364   13266/872    37  196   57.19)
ramon: poll                 wall=9.000s usage=9.751s mem=59220KiB load=1.08 rootload=1.08
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7114 158958 462604  4500/4215/366   13694/1101    38  215   57.19)
(sat.ddfw       1      1   15.4508   1060001      5196         14            1      108)
(smt.stats   53   7327 163651 483422  4623/4336/369   14233/1168    39  258   57.28)
ramon: poll                 wall=10.000s usage=10.742s mem=59408KiB load=0.99 rootload=1.00
(smt.stats   54   7561 167435 504490  4684/4397/372   15096/1168    39  258   57.38)
(smt.stats   55   7662 168677 512971  4692/4402/372   15227/1168    39  258   57.38)
(sat.ddfw       1      1   14.2653   1210001      5931         15            1      123)
(smt.stats   56   7773 170796 520296  4793/4410/372   15449/1291    40  275   57.57)
(smt.stats   57   7895 174061 536082  4820/4530/372   15767/1291    40  275   57.57)
ramon: poll                 wall=11.002s usage=11.726s mem=59900KiB load=0.98 rootload=0.98
(smt.stats   58   8029 176564 549699  4832/4541/372   16268/1291    40  275   57.76)
(smt.stats   59   8176 180894 560543  4906/4545/372   16835/1299    40  275   57.87)
(smt.stats   60   8337 184856 579113  4975/4688/374   17374/1527    41  275   57.87)
ramon: poll                 wall=12.000s usage=12.730s mem=60072KiB load=1.01 rootload=1.00
(sat.ddfw       1      1   13.3322   1370001      6715         16            1      139)
(smt.stats   61   8514 187946 591164  5002/4702/374   17904/1528    41  275   57.97)
(smt.stats   62   8708 192838 614702  5103/4731/374   18560/1532    41  275   58.16)
ramon: poll                 wall=13.002s usage=13.714s mem=60328KiB load=0.98 rootload=0.99
(smt.stats   63   8921 199251 664263  5116/4829/374   18856/1621    42  280   58.27)
(smt.stats   64   9155 200848 683902  5135/4836/374   19424/1623    42  280   58.36)
(sat.ddfw       1      1   12.4771   1540001      7549         17            1      156)
(smt.stats   65   9412 205325 707259  5241/4852/374   20746/1623    42  280   58.46)
ramon: poll                 wall=14.000s usage=14.708s mem=60804KiB load=1.00 rootload=0.99
(smt.stats   66   9513 207780 721660  5261/4972/376   21045/1775    43  290   58.91)
(smt.stats   67   9624 209574 735561  5302/5008/377   21467/1777    43  290   58.91)
(smt.stats   68   9746 213342 762496  5323/5028/377   21934/1777    43  290   59.02)
(smt.stats   69   9880 215125 778346  5337/5048/377   22523/1879    44  305   59.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 423)
(smt.stats   70  10027 217736 791895  5386/5054/377   22532/1889    44  305   59.28)
ramon: poll                 wall=15.000s usage=15.708s mem=61084KiB load=1.00 rootload=1.00
(smt.stats   71  10188 220184 808713  5471/5169/379   22828/1891    44  305   59.28)
(sat.ddfw       1      1   11.7256   1720001      8431         18            1      174)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10365 223695 834752  5580/5188/379   23252/1892    44  305   59.28)
(smt.stats   73  10559 228470 852485  5662/5309/379   23644/1997    45  309   59.37)
ramon: poll                 wall=16.000s usage=16.708s mem=61344KiB load=1.00 rootload=1.00
(smt.stats   74  10772 233434 876616  5777/5379/379   24152/1999    45  309   59.47)
(smt.stats   75  11006 237401 898707  5895/5513/379   24685/2002    45  309   59.47)
(smt.stats   76  11263 241307 924233  5929/5619/379   25188/2005    45  309   59.57)
ramon: poll                 wall=17.000s usage=17.708s mem=61548KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.0665   1910001      9362         19            1      193)
(smt.stats   77  11545 247889 953676  6098/5654/380   26328/2062    46  311   59.72)
(smt.stats   78  11646 251035 976488  6125/5824/380   26526/2064    46  311   59.85)
ramon: poll                 wall=18.002s usage=18.810s mem=61804KiB load=1.10 rootload=1.10
(smt.stats   79  11757 251902 986960  6125/5838/380   26650/2064    46  311   59.85)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   80  11879 253822 1005589  6164/5838/380   26884/2067    46  311   59.85)
(smt.stats   81  12013 256105 1018713  6237/5901/381   27089/2104    47  322   59.85)
(smt.stats   82  12160 257055 1027961  6293/5970/381   27248/2105    47  322   59.85)
(smt.stats   83  12321 259588 1043282  6460/6006/381   27511/2108    47  322   60.08)
(sat.ddfw       1      1    10.605   2110001     10343         20            1      214)
ramon: poll                 wall=19.000s usage=19.884s mem=62212KiB load=1.08 rootload=1.08
(smt.stats   84  12498 262079 1063380  6561/6261/381   28669/2108    47  322   60.08)
(smt.stats   85  12692 266829 1076528  6721/6277/381   29837/2113    47  322   60.31)
ramon: poll                 wall=20.000s usage=20.870s mem=62452KiB load=0.99 rootload=0.98
ramon: end                  Fri Nov  1 22:39:29 2024
ramon: root.execname        z3
ramon: root.utime           20.900s
ramon: root.stime           0.010s
ramon: group.total          20.920s
ramon: group.utime          20.908s
ramon: group.stime          0.012s
ramon: group.mempeak        62728KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.04
