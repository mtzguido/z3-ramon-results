ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:57:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40625 MiB
ramon: sys.mem.avail        61707 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/qYf9EKquKYbl.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3089191
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&1
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&1
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&1
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&2
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&2
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&1
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&4
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&4
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&1
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 4398046511104 := 4398046511106 << 30
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 4398046511104 := 4398046511106 << 30
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 4398046511104 := 4398046511106 << 30
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&2147483648
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 8589934594 := 8589934593 << 31
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&2147483648
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 2147483648 := 17179869186 << 30
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&2147483648
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 8589934594 := 8589934593 << 31
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&2
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&4
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&8
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&4
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 4 := 1073741823&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 4 := 6 << 30
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&4
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 4 := 1073741823&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 4 := 17179869184 << 30
(smt.stats    0    101   3851    610  1207/1066/160      97/18    11   29   19.26)
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&0
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 4372276709377 := 4372276709376 << 31
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 1073741823&0
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 4398046511103 := 4372276709376 << 31
(smt.stats    1    202   5006   1178  2213/2036/163     295/22    12   33   19.76)
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 4398046511104 := 8744553418752 << 31
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 4398046511104 := 8744553418752 << 31
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 8796093022208 := 8744553422848 << 31
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 8796093022208 := 8744553422848 << 31
(smt.stats    2    313   6620   2399  2339/2086/169     409/120    13   36   19.85)
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 4372276707328 := 4372276707328 << 32
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 4372276707328 := 4372276707328 << 32
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 4372276707328 := 4372276707328 << 32
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 4363686772736 := 4363686772736 << 32
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 2207613190143 := 2207613190144 << 32
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 0 := 2147483647&0
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 1 := 4380866641920 << 32
(smt.stats    3    414   8389   6346  2559/2353/186     520/131    16   43   19.95)
(smt.stats    4    525  10110   8675  2779/2541/198     655/218    20   73   20.04)
(smt.stats    5    647  11430   9829  2861/2582/198     816/229    20   73   20.23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  11882  10410  3099/2721/201     923/247    21   81   20.33)
(smt.stats    7    859  15246  14756  3202/2873/201    1064/249    21   81   20.33)
(smt.stats    8    981  17532  20611  3230/2997/206    1206/285    23   85   20.33)
ramon: poll                 wall=1.000s usage=0.918s mem=21548KiB load=0.92 rootload=0.91
(smt.stats    9   1115  22040  25214  3261/3015/208    1366/291    25   93   20.43)
(smt.stats   10   1216  23896  27768  3380/3050/208    1488/293    25   93   20.43)
(smt.stats   11   1327  26818  33186  3431/3160/208    1619/293    25   93   20.52)
(smt.stats   12   1449  29274  40889  3514/3281/209    1769/324    26   94   20.52)
(smt.stats   13   1583  33165  47965  3518/3285/209    1914/324    26   94   20.52)
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 18 := 16777215&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 8796093022226 := 8778913157126 << 24
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 18 := 16777215&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 8796093022226 := 8778913157126 << 24
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 18 := 16777215&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 8796093022226 := 8778913157126 << 24
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 18 := 16777215&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 8796093022226 := 8778913157126 << 24
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 18 := 16777215&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 8796093022226 := 8778913157126 << 24
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 18 := 16777215&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #802 #806) 64)) 8796093022226 := 8778913157122 << 24
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 19 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 18 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 16 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 32 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 64 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 128 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 256 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 512 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 1024 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2048 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 4096 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 8192 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 16384 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 32768 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 65536 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 65536 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 131072 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 262144 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 524288 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 1048576 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2097152 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2097152 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 4194304 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 8388608 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2560 := 16777215&68820140032
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2560 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2560 := 16777215&68786585600
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2560 := 16777215&68753031168
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2560 := 16777215&68753031168
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2560 := 16777215&68753031168
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2560 := 16777215&68753031168
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   14   1730  36104  51946  3651/3410/290    2165/368    27  111   21.15)
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2304 := 16777215&33554432
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2304 := 16777215&33554432
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2304 := 16777215&33554432
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2304 := 16777215&33554432
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2304 := 16777215&67108864
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2176 := 16777215&67108864
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2106 := 16777215&67108864
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2104 := 16777215&67108864
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2096 := 16777215&67108864
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2080 := 16777215&67108864
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2080 := 16777215&67108864
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2082 := 16777215&100663296
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2080 := 16777215&100663296
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2080 := 16777215&100663296
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2064 := 16777215&134217728
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2050 := 16777215&134217728
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 2050 := 16777215&134217728
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 1024 := 16777215&134217728
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 1024 := 16777215&134217728
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 1024 := 16777215&134217728
(smt.stats   15   1831  38594  60299  3793/3553/344    2370/418    29  127   21.15)
(smt.stats   16   1942  39964  64282  3826/3591/350    2634/512    30  129   21.25)
(smt.stats   17   2064  43841  69141  3837/3602/353    2828/551    31  142   21.25)
(smt.stats   18   2198  46880  75804  3870/3611/353    3025/551    31  142   21.35)
(smt.stats   19   2345  50319  86825  3931/3655/353    3197/552    31  142   21.35)
ramon: poll                 wall=2.000s usage=1.918s mem=22540KiB load=1.00 rootload=1.00
(smt.stats   20   2506  53054  92395  4013/3702/353    3369/556    31  142   21.44)
(smt.stats   21   2607  54677  98268  4059/3803/353    3477/556    31  142   21.44)
(smt.stats   22   2718  56762 112328  4065/3830/353    3589/556    31  142   21.44)
(smt.stats   23   2840  60914 130899  4087/3830/353    3715/557    31  142   21.55)
(smt.stats   24   2974  63695 143109  4093/3858/354    3974/715    32  145   21.55)
(smt.stats   25   3121  67119 157837  4095/3860/354    4137/715    32  145   21.55)
(smt.stats   26   3282  69534 168357  4122/3867/354    4335/718    32  145   21.55)
(smt.stats   27   3459  72981 187299  4143/3899/354    4562/718    32  145   21.65)
(smt.stats   28   3560  76256 195108  4176/3929/354    4717/720    32  145   21.65)
(smt.stats   29   3671  80972 211446  4187/3945/354    4919/720    32  145   21.65)
(smt.stats   30   3793  85553 231284  4208/3958/354    5146/721    32  145   21.75)
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 4 := 2199023255551&107374182407
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 5 := 2199023255551&107374182407
(smt.stats   31   3927  87571 237843  4540/4025/357    5533/799    33  147   21.94)
ramon: poll                 wall=3.000s usage=2.918s mem=23196KiB load=1.00 rootload=1.00
(smt.stats   32   4074  90831 248909  4589/4294/359    5820/801    33  147   22.03)
(smt.stats   33   4235  95187 266475  4679/4380/359    6031/905    34  151   22.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   34   4412  97414 278314  4710/4420/359    6239/905    34  151   22.13)
(smt.stats   35   4606 101469 287022  4723/4439/362    6654/924    35  153   22.13)
(smt.stats   36   4707 104697 298766  4744/4447/362    6759/924    35  153   22.13)
(smt.stats   37   4818 107647 310114  4762/4477/362    6869/1004    36  155   22.23)
(smt.stats   38   4940 110719 324427  4816/4508/362    7098/1006    36  155   22.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 197)
(smt.stats   39   5074 112833 338091  4823/4545/362    7045/1006    36  155   22.36)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   40   5221 116911 356779  4862/4549/362    7492/1012    36  155   22.36)
(smt.stats   41   5382 124178 388997  4910/4610/362    7877/1013    36  155   22.46)
ramon: poll                 wall=4.000s usage=3.917s mem=23712KiB load=1.00 rootload=0.99
(smt.stats   42   5559 127008 399787  4949/4648/362    8092/1013    36  155   22.46)
(smt.stats   43   5753 137003 431799  4971/4687/362    8292/1013    36  155   22.57)
(smt.stats   44   5966 144047 452664  4992/4700/362    8541/1014    36  155   22.57)
(smt.stats   45   6067 145827 462602  4996/4714/363    8704/1367    37  157   22.57)
(smt.stats   46   6178 149323 477322  5047/4742/364    8876/1433    38  157   22.66)
(smt.stats   47   6300 153938 495466  5084/4787/365    9223/1459    39  159   22.66)
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 137455730689 := 1099511627775&137455730905
band: (band[42] (if (= #337 63) 0 (if #565 1 #795)) (shl[64] (* 2 #318) (mod #810 64))) 137456648193 := 1099511627775&137456648409
(smt.stats   48   6434 154800 497225  5254/4816/365    9465/1461    39  159   23.15)
(smt.stats   49   6581 157123 510834  5435/5152/372   10192/1461    39  159   23.15)
ramon: poll                 wall=5.000s usage=4.917s mem=24520KiB load=1.00 rootload=1.00
(smt.stats   50   6742 164980 555242  5449/5166/373   10406/1461    39  159   23.15)
(smt.stats   51   6919 175266 618925  5452/5170/373   10613/1675    40  177   23.25)
(smt.stats   52   7113 180972 647605  5466/5182/373   10871/1675    40  177   23.25)
(smt.stats   53   7326 186672 684675  5489/5190/373   11101/1676    40  177   23.25)
(smt.stats   54   7560 193249 740041  5501/5216/373   11458/1676    40  177   23.35)
(smt.stats   55   7661 197739 764303  5509/5227/373   12098/1676    40  177   23.44)
ramon: poll                 wall=6.000s usage=5.901s mem=24800KiB load=0.98 rootload=0.98
(smt.stats   56   7772 200765 782484  5513/5231/378   12227/1936    41  187   23.54)
(smt.stats   57   7894 203506 802926  5513/5231/378   12355/1936    41  187   23.54)
(smt.stats   58   8028 205566 815603  5515/5233/378   12524/1936    41  187   23.54)
(smt.stats   59   8175 208983 861973  5523/5239/378   12679/1951    42  189   23.54)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8336 212611 895238  5524/5240/378   12841/1951    42  189   23.74)
(smt.stats   61   8513 214990 912346  5531/5247/381   13172/2034    43  200   23.74)
(smt.stats   62   8707 220851 943285  5579/5250/381   13397/2040    43  200   23.84)
(smt.stats   63   8920 228228 988248  5587/5303/382   13617/2093    45  209   23.84)
ramon: poll                 wall=7.000s usage=6.900s mem=25180KiB load=1.00 rootload=1.00
(smt.stats   64   9154 233052 1016697  5593/5304/382   13853/2093    45  209   23.94)
(smt.stats   65   9411 239237 1056002  5601/5317/382   14155/2093    45  209   23.94)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   66   9512 241531 1067634  5605/5321/384   14334/2124    46  227   23.94)
(smt.stats   67   9623 245922 1095092  5612/5325/384   14526/2124    46  227   23.94)
(smt.stats   68   9745 248243 1111355  5612/5328/384   14658/2124    46  227   23.94)
(smt.stats   69   9879 252504 1136933  5621/5337/384   14916/2124    46  227   24.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 163)
(smt.stats   70  10026 254500 1156546  5633/5346/386   15510/2275    47  246   24.14)
ramon: poll                 wall=8.000s usage=7.900s mem=25468KiB load=1.00 rootload=1.00
(smt.stats   71  10187 259283 1186523  5752/5356/386   15737/2275    47  246   24.14)
(smt.stats   72  10364 263905 1206878  5964/5494/387   16074/2312    48  255   24.24)
(smt.stats   73  10558 268704 1229584  6001/5716/388   16954/2312    48  255   24.33)
ramon: poll                 wall=9.000s usage=8.900s mem=25740KiB load=1.00 rootload=1.00
(smt.stats   74  10771 273986 1284012  6015/5719/388   17343/2427    49  259   24.33)
(smt.stats   75  11005 279344 1330229  6019/5734/390   17639/2472    50  265   24.33)
(smt.stats   76  11262 285046 1366509  6029/5744/390   18141/2472    50  265   24.43)
(smt.stats   77  11544 293574 1417778  6037/5752/390   19208/2508    51  271   24.52)
(smt.stats   78  11645 299441 1444205  6038/5753/390   19315/2508    51  271   24.52)
(smt.stats   79  11756 306756 1481866  6038/5753/390   19426/2508    51  271   24.63)
(smt.stats   80  11878 314769 1523301  6038/5753/390   19548/2508    51  271   24.63)
ramon: poll                 wall=10.000s usage=9.900s mem=25892KiB load=1.00 rootload=1.00
(smt.stats   81  12012 320072 1550132  6104/5753/390   19751/2508    51  271   24.63)
(smt.stats   82  12159 323414 1574470  6343/5847/390   20186/2512    51  271   24.73)
(smt.stats   83  12320 331028 1622115  6375/6090/390   20371/2512    51  271   24.73)
(smt.stats   84  12497 339492 1683157  6379/6094/390   21128/2512    51  271   24.84)
ramon: poll                 wall=11.000s usage=10.900s mem=26244KiB load=1.00 rootload=1.00
(smt.stats   85  12691 344248 1708707  6620/6094/390   21531/2518    51  271   24.93)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   86  12904 347284 1723079  7002/6426/390   21900/2526    51  271   25.03)
(smt.stats   87  13138 351963 1751104  7214/6731/390   22706/2532    51  271   25.31)
ramon: poll                 wall=12.000s usage=11.899s mem=26936KiB load=1.00 rootload=0.99
(smt.stats   88  13395 357094 1782362  7364/7052/390   23056/2532    51  271   25.31)
(smt.stats   89  13677 362589 1823178  7398/7100/391   23887/2899    52  272   25.41)
(smt.stats   90  13987 375884 1889131  7505/7131/391   25598/2907    52  272   25.50)
(smt.stats   91  14088 377388 1896924  7585/7300/391   25726/2907    52  272   25.50)
ramon: poll                 wall=13.000s usage=12.899s mem=27000KiB load=1.00 rootload=1.00
(smt.stats   92  14199 380517 1915439  7623/7303/391   25972/2907    52  272   25.61)
(smt.stats   93  14321 384114 1936770  7643/7343/391   26193/2909    52  272   25.71)
(smt.stats   94  14455 386918 1963443  7652/7367/391   26614/2909    52  272   25.71)
(smt.stats   95  14602 392663 2010881  7658/7373/392   27247/3527    53  276   25.80)
(smt.stats   96  14763 398511 2060806  7664/7379/392   27866/3527    53  276   25.95)
ramon: poll                 wall=14.000s usage=13.899s mem=27276KiB load=1.00 rootload=1.00
(smt.stats   97  14940 404006 2108598  7668/7383/392   28354/3527    53  276   26.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 213)
(smt.stats   98  15134 407331 2121475  7674/7385/392   28608/3528    53  276   26.04)
(smt.stats   99  15347 412780 2151814  7724/7394/392   29015/3531    53  276   26.14)
(smt.stats  100  15581 418628 2212819  7760/7446/392   30260/3531    53  276   26.14)
ramon: poll                 wall=15.000s usage=14.899s mem=27528KiB load=1.00 rootload=1.00
(smt.stats  101  15838 428052 2299464  7770/7485/392   30612/3531    53  276   26.25)
(smt.stats  102  16120 435510 2367751  7793/7502/392   31198/3531    53  276   26.25)
(smt.stats  103  16430 442523 2423015  7844/7512/392   31885/3534    53  276   26.34)
(smt.stats  104  16770 448724 2449042  7856/7569/392   32274/3534    53  276   26.44)
ramon: poll                 wall=16.000s usage=15.899s mem=27764KiB load=1.00 rootload=1.00
(smt.stats  105  16871 451529 2472007  7876/7571/392   32506/3538    53  276   26.44)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  106  16982 454107 2504406  7903/7608/392   32750/3538    53  276   26.83)
(smt.stats  107  17104 456754 2534045  7906/7614/392   32896/3538    53  276   26.83)
(smt.stats  108  17238 459577 2562297  8012/7619/392   33154/3539    53  276   26.83)
(smt.stats  109  17385 463059 2594711  8163/7737/392   33383/3540    53  276   26.93)
(smt.stats  110  17546 467398 2642304  8172/7883/393   34365/4352    54  294   27.03)
ramon: poll                 wall=17.000s usage=16.898s mem=28404KiB load=1.00 rootload=1.00
(smt.stats  111  17723 473034 2677221  8215/7886/393   34700/4353    54  294   27.12)
(smt.stats  112  17917 479648 2732598  8282/7993/394   35378/4356    54  294   27.12)
(smt.stats  113  18130 485862 2784663  8331/7996/394   35902/4708    55  295   27.22)
ramon: poll                 wall=18.000s usage=17.898s mem=28628KiB load=1.00 rootload=1.00
(smt.stats  114  18364 494041 2833453  8463/8058/394   36600/4709    55  295   27.31)
ramon: poll                 wall=19.000s usage=18.898s mem=28884KiB load=1.00 rootload=1.00
(smt.stats  115  18621 501279 2892312  8643/8205/394   37788/4717    55  295   27.50)
(smt.stats  116  18903 511455 2980635  8761/8404/394   38534/4719    55  295   27.60)
(smt.stats  117  19213 522599 3068759  8772/8476/394   39256/4719    55  295   27.60)
ramon: poll                 wall=20.000s usage=19.898s mem=29084KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:58:06 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.966s
ramon: group.utime          19.946s
ramon: group.stime          0.020s
ramon: group.mempeak        29368KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              0.99
