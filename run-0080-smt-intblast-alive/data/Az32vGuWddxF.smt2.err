ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:48:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28600 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1267
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Az32vGuWddxF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4107063
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4443    398  1318/1175/99     116/17     7   14   19.16)
(smt.stats    1    202   7382   1417  1944/1759/101     218/26     8   15   19.26)
(smt.stats    2    313   9842   3054  2192/1963/101     333/31     9   16   19.45)
(smt.stats    3    414  11169   4788  2548/2314/103     446/53    11   21   19.56)
(smt.stats    4    525  12385   6695  2699/2455/108     559/60    14   26   19.65)
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 1152921504606846976 := 106 << 5
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 31 := 31&105
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 28 := 31&105
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 28 := 31&105
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 28 := 31&104
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2 := 31&104
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&104
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&7
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 1 := 31&2
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&2
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&2
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&4
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&4
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&1
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&16
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 32 := 106 << 5
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 1 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 1 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 1 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 1 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #104))) 52 := 53 << 6
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 1 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 30 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 28 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 3 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 9 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 0 := 31&3392
band: (band[59] (if (= #108 58) 0 (if #628 1 #793)) (shl[59] (bv2int %0) (+ 59 #796))) 4 := 31&3392
(smt.stats    5    647  14583   9091  2804/2495/157     679/70    16   39   19.96)
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 16 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 8 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 4 := 31&3392
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16408  11407  2838/2588/241     775/74    18   69   20.37)
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 1 := 31&3392
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 33 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 32 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 64 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 64 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 64 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 64 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 640 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2560 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2432 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 640 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 640 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 512 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 640 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2304 := 65535&2688
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 128 := 65535&2688
(smt.stats    7    860  19444  13903  2898/2643/300     934/88    19   76   20.56)
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2688 := 65535&2688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 2688 := 84 << 16
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2560 := 65535&2560
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 2560 := 84 << 16
band: (band[59] (if (= #413 63) 0 (if #607 1 #869)) (shl[64] (* 2 #102) (mod #884 64))) 2560 := 65535&2560
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #876 #880) 64)) 2560 := 84 << 16
(smt.stats    8    982  21676  17134  2975/2713/312    1130/163    21   99   20.75)
(smt.stats    9   1116  24093  20507  3078/2761/319    1266/205    23  114   21.04)
ramon: poll                 wall=1.000s usage=0.996s mem=22728KiB load=1.00 rootload=0.98
(smt.stats   10   1217  26216  25087  3334/3049/320    1512/226    24  114   21.33)
(smt.stats   11   1328  29071  29308  3472/3081/320    1695/228    24  114   21.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  31982  35535  3582/3302/327    1950/267    25  121   21.43)
ramon: poll                 wall=2.000s usage=1.996s mem=22984KiB load=1.00 rootload=1.00
(smt.stats   13   1584  37674  41958  3623/3309/331    2207/309    26  127   21.62)
(smt.stats   14   1731  41549  48146  3726/3369/331    2487/348    27  146   21.75)
(smt.stats   15   1832  44486  55759  3942/3521/331    2698/353    27  146   21.75)
(smt.stats   16   1943  47728  66308  4019/3678/332    2927/399    28  151   21.85)
(smt.stats   17   2065  51305  74218  4110/3744/332    3185/401    28  151   21.94)
ramon: poll                 wall=3.000s usage=2.996s mem=23496KiB load=1.00 rootload=1.00
(smt.stats   18   2199  54699  86576  4226/3858/333    3511/432    29  163   22.04)
(smt.stats   19   2346  60330 100438  4432/4114/335    4059/527    30  174   22.13)
(smt.stats   20   2507  65978 115996  4518/4157/335    4468/527    30  174   22.23)
(smt.stats   21   2608  69000 121832  4564/4231/335    4671/528    30  174   22.23)
ramon: poll                 wall=4.000s usage=3.980s mem=23880KiB load=0.98 rootload=0.99
(smt.stats   22   2719  71976 128532  4634/4292/335    4835/528    30  174   22.32)
(smt.stats   23   2841  75915 136531  4769/4384/335    5039/533    30  174   22.42)
(smt.stats   24   2975  81111 147092  4933/4547/335    5294/536    30  174   22.42)
(smt.stats   25   3122  84178 158754  5030/4713/339    5693/737    32  197   22.52)
ramon: poll                 wall=5.000s usage=4.979s mem=24136KiB load=1.00 rootload=0.99
(smt.stats   26   3283  89594 191881  5079/4741/340    5968/737    32  197   22.80)
(smt.stats   27   3460  94495 209545  5165/4796/343    6554/771    33  197   22.89)
(smt.stats   28   3561  96371 213623  5187/4879/343    6688/872    34  205   22.89)
(smt.stats   29   3672  99594 225977  5334/4936/343    6984/878    34  205   22.99)
(smt.stats   30   3794 102190 239891  5464/5145/344    7230/923    35  213   22.99)
ramon: poll                 wall=6.000s usage=5.979s mem=24392KiB load=1.00 rootload=1.00
(smt.stats   31   3928 105780 257042  5491/5184/344    7499/923    35  213   22.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 109123 264671  5546/5206/345    7824/972    36  225   23.08)
(smt.stats   33   4236 113772 280631  5674/5373/346    8165/1006    37  230   23.18)
(smt.stats   34   4413 116501 291041  5734/5380/346    8443/1008    37  230   23.18)
(smt.stats   35   4607 120451 308253  5753/5447/347    8995/1039    38  231   23.18)
(smt.stats   36   4708 123173 326595  5787/5454/347    9200/1040    38  231   23.27)
ramon: poll                 wall=7.000s usage=6.978s mem=24632KiB load=1.00 rootload=1.00
(smt.stats   37   4819 128758 346325  5795/5489/347    9462/1041    38  231   23.27)
(smt.stats   38   4941 132874 360680  5807/5503/350    9753/1194    39  231   23.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 75)
(smt.stats   39   5075 135364 372959  5895/5516/350    9922/1196    39  231   23.38)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5222 139462 384252  5976/5645/350   10139/1229    40  232   23.47)
(smt.stats   41   5383 143133 405800  6010/5685/350   10424/1233    40  232   23.57)
(smt.stats   42   5560 147421 427532  6054/5735/350   10837/1235    40  232   23.57)
ramon: poll                 wall=8.000s usage=7.978s mem=25144KiB load=1.00 rootload=1.00
(smt.stats   43   5754 152191 453851  6153/5766/350   11331/1238    40  232   23.93)
(smt.stats   44   5967 159092 484968  6222/5907/350   11681/1239    40  232   23.93)
(smt.stats   45   6068 161441 496189  6250/5926/351   11823/1445    41  235   24.03)
(smt.stats   46   6179 163608 508616  6286/5960/351   11986/1448    41  235   24.03)
(smt.stats   47   6301 167502 538973  6300/5997/351   12219/1448    41  235   24.12)
(smt.stats   48   6435 169643 550965  6306/6000/351   12361/1448    41  235   24.12)
ramon: poll                 wall=9.001s usage=8.978s mem=25716KiB load=1.00 rootload=1.00
(smt.stats   49   6582 171829 556457  6433/6028/351   12644/1451    41  235   24.32)
(smt.stats   50   6743 176362 571449  6586/6162/351   12881/1455    41  235   24.41)
(smt.stats   51   6920 180461 586984  6666/6308/351   13150/1456    41  235   24.41)
ramon: poll                 wall=10.000s usage=9.978s mem=25972KiB load=1.00 rootload=1.00
(smt.stats   52   7114 182546 598546  6803/6364/352   13417/1596    42  239   24.41)
(smt.stats   53   7327 185816 620332  6994/6558/352   13868/1601    42  239   24.60)
ramon: poll                 wall=11.000s usage=10.978s mem=26228KiB load=1.00 rootload=1.00
(smt.stats   54   7561 190120 640846  7225/6803/352   14532/1605    42  239   24.70)
(smt.stats   55   7662 192604 658713  7377/6987/352   14668/1606    42  239   24.80)
(smt.stats   56   7773 195385 669353  7462/7084/352   14960/1607    42  239   24.80)
(smt.stats   57   7895 197258 676894  7615/7177/352   15164/1607    42  239   24.99)
(smt.stats   58   8029 199918 691178  7642/7313/352   15578/1607    42  239   24.99)
ramon: poll                 wall=12.000s usage=11.978s mem=26740KiB load=1.00 rootload=1.00
(smt.stats   59   8176 204262 712620  7746/7332/352   15916/1607    42  239   25.28)
ramon: poll                 wall=13.000s usage=12.978s mem=26996KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8337 208534 737078  8056/7492/354   16555/1786    43  241   25.47)
ramon: poll                 wall=14.000s usage=13.978s mem=27252KiB load=1.00 rootload=0.99
(smt.stats   61   8514 211884 752390  8175/7757/356   17135/1786    43  241   25.57)
(smt.stats   62   8708 214417 764414  8592/7925/356   17655/1904    44  262   25.66)
ramon: poll                 wall=15.000s usage=14.978s mem=27508KiB load=1.00 rootload=1.00
(smt.stats   63   8921 218021 785436  8910/8288/356   18607/1908    44  262   25.90)
(smt.stats   64   9155 222073 797869  9088/8601/357   19179/1909    44  262   25.90)
ramon: poll                 wall=16.000s usage=15.978s mem=27764KiB load=1.00 rootload=1.00
(smt.stats   65   9412 225208 810260  9619/8829/358   19541/2162    45  268   26.37)
(smt.stats   66   9513 229202 820809  9767/9410/358   20113/2162    45  268   26.37)
ramon: poll                 wall=17.000s usage=16.977s mem=28020KiB load=1.00 rootload=1.00
(smt.stats   67   9624 235550 850635  9870/9511/359   20772/2328    46  272   26.47)
(smt.stats   68   9746 238934 870481  9938/9558/360   21583/2330    46  272   26.57)
(smt.stats   69   9880 245009 903449  9982/9624/360   21887/2331    46  272   26.57)
(smt.delete-inactive-clauses  :num-deleted-clauses 36)
(smt.stats   70  10027 248681 919583 10072/9704/360   22353/2488    47  275   26.66)
ramon: poll                 wall=18.000s usage=17.977s mem=28276KiB load=1.00 rootload=1.00
(smt.stats   71  10188 252953 954187 10195/9762/360   23058/2493    47  275   26.76)
(smt.stats   72  10365 254655 965112 10275/9895/360   23370/2493    47  275   26.76)
(smt.stats   73  10559 256660 983706 10348/9976/360   23851/2494    47  275   26.86)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   74  10772 259004 990107 10450/10048/360   24229/2495    47  275   26.86)
ramon: poll                 wall=19.000s usage=18.977s mem=28532KiB load=1.00 rootload=1.00
(smt.stats   75  11006 263758 1015488 10607/10145/360   24777/2511    47  275   27.05)
(smt.stats   76  11263 272625 1075789 10633/10314/360   25386/2512    47  275   27.62)
(smt.stats   77  11545 277832 1119964 10651/10333/360   26243/2512    47  275   27.72)
(smt.stats   78  11646 279327 1134972 10665/10336/360   26472/2512    47  275   27.81)
ramon: poll                 wall=20.000s usage=19.977s mem=29408KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:48:22 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.987s
ramon: group.utime          19.967s
ramon: group.stime          0.020s
ramon: group.mempeak        29796KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
