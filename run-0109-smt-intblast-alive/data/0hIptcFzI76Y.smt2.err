ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:17:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42988 MiB
ramon: sys.mem.avail        61717 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0hIptcFzI76Y.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2752937
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2173   2755  1182/1059/97      93/11     4   14   19.05)
(smt.stats    1    202   6145   3818  1831/1644/99     198/18     6   14   19.25)
(smt.stats    2    313   8120   5252  2084/1863/103     313/46     9   18   19.45)
(smt.stats    3    414  10318   7471  2186/1890/103     409/59     9   18   19.54)
(smt.stats    4    525  13273   9774  2356/2112/110     509/75    11   28   19.54)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 281474976710656 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 0 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 0 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 1 := 160&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 160&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 161 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 160&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 161 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 1 := 160&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 1 := 160&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 160&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (or #598 #599 #600 #601) 0 (if #602 1 #725))) 1 := 160&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 160&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (or #598 #599 #600 #601) 0 (if #602 1 #725))) 1 := 160&1
(smt.stats    5    647  15914  12251  2406/2149/127     633/81    13   35   19.74)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 128&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 128 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 130&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 130 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 286&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 286 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 64&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 287 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 64&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 288 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 64&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 127 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 64&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 65 := 4 << 4
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  17775  15725  2456/2174/142     738/84    14   38   19.84)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 17&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 17 := 1 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 15&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 15 := 1 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 3 := 1 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 2&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 288 := 1 << 1
(smt.stats    7    859  19628  19709  2500/2228/153     849/87    15   40   20.03)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 2&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 288 := 1 << 1
(smt.stats    8    981  21051  24083  2528/2269/164     965/93    17   47   20.13)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 98&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 281474976710754 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 281474976710655&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 18446744073709551615 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 24&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 24&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 3 << 3
(smt.stats    9   1115  23747  30473  2569/2278/164    1102/94    17   47   20.23)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 65&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 281474976710721 := 2 << 2
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 17&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 281474976710673 := 2 << 2
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 8&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 6 := 2 << 2
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 8&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 6 := 2 << 2
(smt.stats   10   1216  26735  33805  2612/2342/185    1206/98    18   49   20.33)
(smt.stats   11   1327  30145  38986  2632/2361/187    1323/108    20   57   20.59)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 2 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 2 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 8 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 8 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 2 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 10 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 4 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 2 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 10 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 10 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 10 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 42 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 58 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 58 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 90 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 58 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 58 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 90 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 154 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 542 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 538 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 90 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 218 := 25599227866&25599227866
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  31587  42721  2775/2489/298    1430/112    22  141   21.07)
(smt.stats   13   1583  35497  48210  2843/2521/314    1628/119    22  141   21.36)
ramon: poll                 wall=1.000s usage=0.924s mem=23036KiB load=0.92 rootload=0.91
(smt.stats   14   1730  38796  54448  3103/2564/316    1783/177    23  175   21.64)
(smt.stats   15   1831  40990  57844  3156/2831/316    1904/197    24  175   21.74)
(smt.stats   16   1942  43063  63054  3293/3001/317    2110/227    25  176   21.84)
(smt.stats   17   2064  46260  66455  3341/3004/317    2296/236    25  176   21.93)
ramon: poll                 wall=2.000s usage=1.922s mem=23544KiB load=1.00 rootload=1.00
(smt.stats   18   2198  50873  77460  3444/3092/319    2534/327    26  182   22.03)
(smt.stats   19   2345  55733  84391  3656/3352/323    2795/339    27  194   22.12)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 32 := 549&1525
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 32 := 549&1525
(smt.stats   20   2506  58780  92760  3718/3415/333    3106/399    29  208   22.22)
(smt.stats   21   2607  62020  99925  3772/3421/334    3296/407    29  208   22.31)
ramon: poll                 wall=3.000s usage=2.919s mem=23916KiB load=1.00 rootload=1.00
(smt.stats   22   2718  66987 106737  3845/3511/338    3427/458    30  212   22.31)
(smt.stats   23   2840  69267 108911  4017/3593/338    3598/477    31  212   22.57)
(smt.stats   24   2974  73016 118670  4243/3941/344    3906/579    32  219   22.66)
ramon: poll                 wall=4.000s usage=3.908s mem=24096KiB load=0.99 rootload=0.99
(smt.stats   25   3121  78958 126865  4318/3956/344    4269/583    32  219   22.76)
(smt.stats   26   3282  80058 129363  4834/4120/344    4450/661    33  233   23.43)
ramon: poll                 wall=5.000s usage=4.906s mem=25228KiB load=1.00 rootload=0.99
(smt.stats   27   3459  81735 135582  5341/4544/344    4660/664    33  233   23.72)
(smt.stats   28   3560  85425 144178  5362/5060/353    5128/874    34  250   23.81)
(smt.stats   29   3671  89527 154005  5385/5072/353    5281/875    34  250   23.81)
ramon: poll                 wall=6.000s usage=5.903s mem=25444KiB load=1.00 rootload=0.99
(smt.stats   30   3793  94918 168649  5433/5131/354    5467/917    35  250   23.81)
(smt.stats   31   3927  98697 181606  5470/5148/354    5794/922    35  250   23.91)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074 104170 191864  5545/5217/355    6103/1088    36  251   24.00)
ramon: poll                 wall=7.000s usage=6.903s mem=25520KiB load=1.00 rootload=1.00
(smt.stats   33   4235 109381 205199  5595/5285/358    6385/1145    37  261   24.00)
(smt.stats   34   4412 116538 225224  5742/5304/358    6663/1151    37  261   24.10)
(smt.stats   35   4606 124006 242552  5792/5473/358    7049/1151    37  261   24.10)
ramon: poll                 wall=8.000s usage=7.903s mem=25900KiB load=1.00 rootload=1.00
(smt.stats   36   4707 128056 250892  5851/5493/358    7368/1151    37  261   24.19)
(smt.stats   37   4818 132071 263170  5886/5557/358    7573/1151    37  261   24.19)
(smt.stats   38   4940 136170 281001  5914/5600/358    7967/1151    37  261   24.19)
(smt.delete-inactive-clauses  :num-deleted-clauses 256)
ramon: poll                 wall=9.000s usage=8.902s mem=25904KiB load=1.00 rootload=1.00
(smt.stats   39   5074 139865 295616  5989/5616/358    8280/1154    37  261   24.29)
(smt.stats   40   5221 145710 312982  6060/5705/358    8473/1158    37  261   24.38)
(smt.stats   41   5382 153853 343720  6088/5773/358    8673/1158    37  261   24.38)
(smt.stats   42   5559 158191 365317  6106/5800/362    8982/1577    38  267   24.70)
(smt.stats   43   5753 162417 377568  6182/5824/365    9391/1628    39  281   24.70)
ramon: poll                 wall=10.000s usage=9.902s mem=26148KiB load=1.00 rootload=1.00
(smt.stats   44   5966 170267 412201  6317/6010/370    9847/1709    41  298   24.80)
(smt.stats   45   6067 174524 421431  6339/6011/370   10067/1710    41  298   24.80)
(smt.stats   46   6178 179399 436529  6518/6043/370   10362/1716    41  298   24.89)
(smt.stats   47   6300 182587 448775  6557/6240/370   10547/1850    42  306   24.89)
ramon: poll                 wall=11.000s usage=10.902s mem=26416KiB load=1.00 rootload=1.00
(smt.stats   48   6434 187526 462985  6606/6300/371   10853/1918    43  309   24.99)
(smt.stats   49   6581 192670 486582  6632/6302/371   11129/1918    43  309   24.99)
(smt.stats   50   6742 197860 508199  6712/6332/371   11418/1920    43  309   25.09)
ramon: poll                 wall=12.002s usage=11.904s mem=26592KiB load=1.00 rootload=1.00
(smt.stats   51   6919 202126 525457  6855/6422/371   11715/1923    43  309   25.18)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 207287 536539  6978/6640/371   12125/1928    43  309   25.18)
ramon: poll                 wall=13.000s usage=12.902s mem=26792KiB load=1.00 rootload=1.00
(smt.stats   53   7326 215450 560226  7194/6690/371   12624/1929    43  309   25.37)
ramon: poll                 wall=14.000s usage=13.901s mem=26908KiB load=1.00 rootload=1.00
(smt.stats   54   7560 222802 587291  7349/6947/371   13261/1932    43  309   25.56)
(smt.stats   55   7661 227626 602782  7365/7057/371   13404/1934    43  309   25.56)
(smt.stats   56   7772 232507 622729  7378/7062/371   13606/1934    43  309   25.56)
(smt.stats   57   7894 235898 641261  7391/7078/371   13910/1934    43  309   25.56)
(smt.stats   58   8028 238691 655234  7430/7093/371   14148/1936    43  309   25.66)
ramon: poll                 wall=15.000s usage=14.901s mem=27136KiB load=1.00 rootload=1.00
(smt.stats   59   8175 243096 679725  7433/7125/371   14420/1936    43  309   25.75)
(smt.stats   60   8336 252085 704818  7436/7128/371   14702/1936    43  309   26.10)
(smt.stats   61   8513 259402 740617  7459/7135/371   15106/1937    43  309   26.20)
(smt.stats   62   8707 265126 753942  7702/7156/371   15432/1941    43  309   26.30)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 184 := 278089857566592&6553402333905
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 180 := 278089857566592&6553402333905
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 180 := 278089857566592&6553402333905
(smt.stats   63   8920 269687 787516  8154/7504/371   16419/1950    43  309   26.49)
ramon: poll                 wall=16.000s usage=15.901s mem=28116KiB load=1.00 rootload=1.00
(smt.stats   64   9154 275541 820412  8240/7892/376   17166/2670    44  310   26.58)
(smt.stats   65   9411 282988 851253  8602/7945/378   17745/2711    45  310   26.68)
ramon: poll                 wall=17.000s usage=16.901s mem=28324KiB load=1.00 rootload=1.00
(smt.stats   66   9512 284456 858842  8678/8367/378   18167/2712    45  310   26.77)
(smt.stats   67   9623 287718 869728  8772/8398/378   18687/2787    46  320   26.87)
(smt.stats   68   9745 293646 884317  8883/8498/378   19148/2787    46  320   27.06)
ramon: poll                 wall=18.000s usage=17.900s mem=28596KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.900s mem=28916KiB load=1.00 rootload=1.00
(smt.stats   69   9879 299056 901481  9073/8587/378   19561/2795    46  320   27.25)
(smt.delete-inactive-clauses  :num-deleted-clauses 164)
(smt.stats   70  10026 302496 914675  9201/8850/378   19994/2797    46  320   27.25)
ramon: poll                 wall=20.000s usage=19.900s mem=28924KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:18:04 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.980s
ramon: group.utime          19.964s
ramon: group.stime          0.016s
ramon: group.mempeak        29180KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              0.99
