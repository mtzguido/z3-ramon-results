ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:09:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40361 MiB
ramon: sys.mem.avail        61704 MiB
ramon: sys.nprocs           1252
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zSpXRMSLxEa9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3123078
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3168    245  1269/1134/108      97/13     4   16   19.25)
(smt.stats    1    202   5811   1517  2007/1815/116     189/20     8   27   19.35)
(smt.stats    2    313   7640   4278  2152/1858/116     326/23     8   27   19.54)
(smt.stats    3    414   8344   5998  2259/2030/117     498/32     9   29   19.54)
(smt.stats    4    525   8594   8000  2272/2069/119     643/87    10   31   19.64)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 93530 := 549755813888&93567
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&93567
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 93567 := 48000 >>l 24
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&93567
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 93567 := 48000 >>l 24
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&92352
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 92352 := 48000 >>l 24
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92315 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92315 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92352 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92316 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92320 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92416 := 549755813888&92416
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92672 := 549755813888&92672
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 93184 := 549755813888&93184
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92672 := 549755813888&92672
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 93184 := 549755813888&93184
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&93567
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 93567 := 48000 >>l 24
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&92352
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 92352 := 48000 >>l 24
(smt.stats    5    647   9717  10658  2800/2556/164     777/131    12   46   19.83)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&92479
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 92479 := 43776 >>l 57
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&43777
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 43777 := 43776 >>l 57
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&43777
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 43777 := 43776 >>l 57
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 5 := 342 >>l 50
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 1 := 342 >>l 50
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 1 := 342 >>l 50
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 1 := 342 >>l 50
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 1 := 342 >>l 50
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  11283  12641  2900/2648/189     877/134    15   59   19.92)
(smt.stats    7    859  13528  15463  2942/2682/192    1000/150    16   60   20.02)
(smt.stats    8    981  15041  18772  2969/2707/195    1122/179    18   71   20.02)
(smt.stats    9   1115  18783  22606  3011/2711/195    1267/186    18   71   20.22)
(smt.stats   10   1216  23142  27519  3087/2766/195    1382/187    18   71   20.41)
ramon: poll                 wall=1.000s usage=0.863s mem=21784KiB load=0.86 rootload=0.85
(smt.stats   11   1327  24855  29202  3160/2834/195    1499/190    18   71   20.41)
(smt.stats   12   1449  25762  30666  3366/2962/195    1633/191    18   71   20.50)
(smt.stats   13   1583  27795  35321  3383/3121/197    1821/211    19   72   20.60)
(smt.stats   14   1730  31177  39529  3477/3122/197    1987/243    20   73   20.70)
ramon: poll                 wall=2.000s usage=1.863s mem=21996KiB load=1.00 rootload=1.00
(smt.stats   15   1831  32916  40672  3645/3335/197    2105/246    20   73   20.70)
(smt.stats   16   1942  33784  41873  3860/3487/197    2232/252    20   73   20.80)
(smt.stats   17   2064  35487  46573  4016/3661/198    2449/295    21   76   20.89)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 576 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 576 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 512 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2048 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2048 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2048 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 1024 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 384 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 280 := 36028797018963968&2461
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 272 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 272 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 272 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 272 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 384 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 268 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 268 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 268 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 296 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 288 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&2448
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 360287970189642128 := 279424 >>l 8
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&2448
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 360287970189642128 := 279424 >>l 8
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&2448
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 360287970189642128 := 279424 >>l 8
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&279312
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 279312 := 279424 >>l 8
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&221328
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 221328 := 279424 >>l 8
(smt.stats   18   2198  38425  57063  4123/3783/214    2622/328    22   80   21.00)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 0 := 2183 >>l 1
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 0 := 2183 >>l 1
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 56 := 2183 >>l 1
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 957 := 2183 >>l 1
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1091 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1090 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1088 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1024 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 4 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1088 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1080 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1024 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 4 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 8 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 16 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 512 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1024 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 4 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 1 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 256 := 36028797018963968&1091
(smt.stats   19   2345  42488  66526  4220/3939/350    2832/334    24   95   21.47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   20   2506  47500  75749  4244/3960/350    3018/363    25  117   21.80)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 8 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 512 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&671
(smt.stats   21   2607  50633  83939  4300/3985/350    3156/365    25  117   21.80)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 2 := 36028797018963968&671
(smt.stats   22   2718  54474  90273  4321/4030/376    3285/391    26  122   21.80)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 16 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 16 := 36028797018963968&671
(smt.stats   23   2840  58562  97017  4348/4067/391    3447/406    27  128   21.89)
(smt.stats   24   2974  63003 103290  4376/4093/398    3598/436    28  129   22.09)
ramon: poll                 wall=3.001s usage=2.867s mem=23572KiB load=1.00 rootload=1.00
(smt.stats   25   3121  67364 111129  4380/4097/398    3766/446    29  136   22.09)
(smt.stats   26   3282  74769 123277  4429/4107/398    3974/448    29  136   22.28)
ramon: poll                 wall=4.001s usage=3.866s mem=23780KiB load=1.00 rootload=1.00
(smt.stats   27   3459  75519 124616  4691/4249/398    4159/450    29  136   22.37)
(smt.stats   28   3560  79246 129559  4810/4502/398    4282/451    29  136   22.37)
(smt.stats   29   3671  85489 147048  4818/4532/399    4413/496    30  138   22.47)
(smt.stats   30   3793  92345 155784  4832/4533/400    4614/496    30  138   22.61)
(smt.stats   31   3927  99114 169056  4956/4648/401    4784/550    32  144   22.70)
(smt.stats   32   4074 104375 181094  4982/4663/403    5004/573    33  152   22.70)
ramon: poll                 wall=5.000s usage=4.862s mem=24232KiB load=1.00 rootload=1.00
(smt.stats   33   4235 109578 190790  5183/4679/403    5265/577    33  152   23.18)
(smt.stats   34   4412 115255 204956  5317/4934/403    5531/581    33  152   23.18)
(smt.stats   35   4606 121831 218743  5371/5040/403    5755/581    33  152   23.18)
ramon: poll                 wall=6.000s usage=5.862s mem=24860KiB load=1.00 rootload=1.00
(smt.stats   36   4707 126590 228299  5490/5065/403    5921/591    33  152   23.28)
(smt.stats   37   4818 133023 243760  5573/5189/403    6155/596    33  152   23.28)
(smt.stats   38   4940 137555 260135  5661/5351/405    6406/743    34  156   23.28)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 143561 271398  5695/5359/405    6608/743    34  156   23.37)
ramon: poll                 wall=7.000s usage=6.862s mem=24872KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   40   5221 149536 285950  5791/5391/405    6984/791    35  160   23.47)
(smt.stats   41   5382 155482 304233  5832/5521/406    7197/918    36  166   23.47)
(smt.stats   42   5559 159380 315186  5913/5529/406    7380/921    36  166   23.56)
ramon: poll                 wall=8.000s usage=7.862s mem=25364KiB load=1.00 rootload=1.00
(smt.stats   43   5753 166043 331180  6037/5668/408    7635/938    37  167   23.65)
(smt.stats   44   5966 170145 343584  6271/5776/408    7914/941    37  167   23.65)
(smt.stats   45   6067 172892 353591  6297/5968/408    8092/960    38  167   23.75)
ramon: poll                 wall=9.000s usage=8.861s mem=25232KiB load=1.00 rootload=0.99
(smt.stats   46   6178 176931 364528  6408/5997/408    8292/963    38  167   23.84)
(smt.stats   47   6300 180315 375395  6551/6100/408    8478/965    38  167   23.84)
(smt.stats   48   6434 184820 387939  6747/6437/409    8830/1105    39  172   23.94)
(smt.stats   49   6581 191747 413906  6771/6457/410    9037/1105    39  172   23.94)
ramon: poll                 wall=10.000s usage=9.836s mem=25600KiB load=0.97 rootload=0.98
(smt.stats   50   6742 198213 439897  6800/6475/410    9299/1144    40  174   24.18)
(smt.stats   51   6919 205456 460179  6905/6496/412    9534/1178    41  180   24.18)
(smt.stats   52   7113 211505 479429  6981/6619/424    9913/1223    42  184   24.28)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7326 219596 516864  7030/6685/427   10189/1442    43  224   24.37)
ramon: poll                 wall=11.005s usage=10.843s mem=26012KiB load=1.00 rootload=1.00
(smt.stats   54   7560 226689 537808  7120/6783/428   10666/1523    44  243   24.47)
(smt.stats   55   7661 229532 549526  7274/6815/428   10799/1524    44  243   24.47)
(smt.stats   56   7772 231535 566250  7360/7026/428   10926/1524    44  243   24.47)
ramon: poll                 wall=12.000s usage=11.835s mem=26160KiB load=1.00 rootload=1.00
(smt.stats   57   7894 234706 575926  7383/7071/429   11087/1576    45  246   24.47)
(smt.stats   58   8028 239044 593894  7399/7091/430   11340/1576    45  246   24.47)
(smt.stats   59   8175 243165 609445  7412/7104/430   11474/1664    46  257   24.56)
(smt.stats   60   8336 250381 632234  7430/7122/430   11691/1664    46  257   24.56)
(smt.stats   61   8513 254882 645837  7450/7134/430   11884/1666    46  257   24.76)
(smt.stats   62   8707 260517 663281  7540/7144/430   12144/1667    46  257   24.76)
ramon: poll                 wall=13.000s usage=12.835s mem=26276KiB load=1.00 rootload=1.00
(smt.stats   63   8920 264458 674549  7903/7237/430   12405/1667    46  257   24.95)
(smt.stats   64   9154 275038 729217  8003/7640/430   12988/1672    46  257   24.95)
ramon: poll                 wall=14.000s usage=13.834s mem=26500KiB load=1.00 rootload=0.99
(smt.stats   65   9411 285445 765135  8186/7686/430   13388/1675    46  257   25.14)
(smt.stats   66   9512 288125 771926  8217/7875/430   13619/1677    46  257   25.14)
(smt.stats   67   9623 290929 780269  8260/7915/430   13765/1678    46  257   25.23)
(smt.stats   68   9745 298309 794132  8362/7951/430   13941/1682    46  257   25.23)
ramon: poll                 wall=15.000s usage=14.834s mem=26720KiB load=1.00 rootload=1.00
(smt.stats   69   9879 307496 831516  8447/8047/430   14173/1684    46  257   25.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 482)
(smt.stats   70  10026 313516 846758  8507/8141/430   13912/1686    46  257   25.23)
(smt.stats   71  10187 324919 904479  8573/8193/430   14109/1687    46  257   25.52)
(smt.stats   72  10364 330189 932952  8809/8275/430   14398/1691    46  257   25.61)
ramon: poll                 wall=16.001s usage=15.837s mem=27048KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   73  10558 336209 960634  8907/8511/430   14782/1695    46  257   25.61)
(smt.stats   74  10771 342502 996230  8991/8624/431   15207/2079    47  261   25.71)
ramon: poll                 wall=17.000s usage=16.833s mem=27208KiB load=1.00 rootload=0.99
(smt.stats   75  11005 350190 1018175  9100/8780/433   15496/2213    48  271   25.71)
(smt.stats   76  11262 356201 1040442  9194/8795/433   15844/2215    48  271   25.80)
(smt.stats   77  11544 362622 1059265  9431/8913/433   16157/2215    48  271   25.80)
ramon: poll                 wall=18.000s usage=17.832s mem=27336KiB load=1.00 rootload=0.99
(smt.stats   78  11645 365657 1075228  9480/9113/433   16328/2215    48  271   25.90)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11756 367438 1084161  9539/9191/433   16467/2215    48  271   25.90)
(smt.stats   80  11878 369311 1096001  9553/9233/433   16639/2215    48  271   25.90)
(smt.stats   81  12012 370547 1108659  9557/9236/433   16887/2216    48  271   25.90)
(smt.stats   82  12159 375778 1130760  9586/9251/433   17062/2217    48  271   25.99)
ramon: poll                 wall=19.000s usage=18.831s mem=27860KiB load=1.00 rootload=1.00
(smt.stats   83  12320 378884 1142678  9753/9272/433   17288/2217    48  271   26.19)
(smt.stats   84  12497 381813 1158099  9992/9547/433   17654/2218    48  271   26.19)
(smt.stats   85  12691 385025 1173279 10001/9677/433   17921/2218    48  271   26.19)
(smt.stats   86  12904 391766 1210456 10063/9695/433   18314/2219    48  271   26.34)
ramon: poll                 wall=20.000s usage=19.830s mem=28020KiB load=1.00 rootload=1.00
(smt.stats   87  13138 394736 1227026 10077/9757/433   18724/2219    48  271   26.34)
ramon: end                  Tue Dec 24 16:09:22 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.020s
ramon: group.total          19.936s
ramon: group.utime          19.912s
ramon: group.stime          0.024s
ramon: group.mempeak        28276KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.103s
ramon: loadavg              0.99
