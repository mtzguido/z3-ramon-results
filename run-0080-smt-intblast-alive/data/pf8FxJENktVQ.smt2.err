ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:01:20 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24717 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/pf8FxJENktVQ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             157670
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4716    476  1129/990/114      98/9     6   19   19.19)
(smt.stats    1    202   7493   1045  1552/1377/114     207/9     6   19   19.19)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&1
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&1
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&2
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&8
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&8
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&8
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&16
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&16
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&32
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&48
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&32
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&16
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&32
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 32 := 255&36
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 255&48
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 16 := 255&48
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 48 := 255&52
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 51 := 255&52
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 50 := 255&52
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 48 := 255&52
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 16 := 255&24
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 16 := 255&24
(smt.stats    2    313  11186   2394  1752/1568/195     342/31     9   40   19.58)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&120
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&120
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&120
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&120
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 59 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 58 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 56 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 59 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 122 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 120 := 255&184
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 120 := 255&248
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 122 := 255&248
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 124 := 255&248
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 124 := 255&252
(smt.stats    3    415  14477   3694  1883/1729/245     587/70    11   51   19.78)
(smt.stats    4    526  16639   6282  2092/1919/248     714/162    14   65   19.98)
(smt.stats    5    648  22467   9496  2110/1920/248     841/162    14   65   20.17)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755814144 := 52 << 12
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755814144 := 52 << 12
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755814144 := 52 << 12
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    749  25183  12391  2142/1951/248    1081/163    14   65   20.17)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 192 := 4095&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755814080 := 52 << 12
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 176 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 160 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 128 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 512 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1024 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2048 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 256 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 512 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1024 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1024 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2048 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2048 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2048 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2048 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 25 := 26 << 13
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 25 := 26 << 13
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 25 := 26 << 13
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 1 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 2 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 4 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 8 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 16 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 96 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 64 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 128 := 4095&212992
(smt.stats    7    860  27305  15743  2296/2001/275    1273/319    16   73   20.55)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 66 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 69 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 68 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 72 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 8 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 80 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 96 := 4095&212992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4095&212992
band: (band[39] (if (= #121 38) 0 (if #587 1 #692)) (shl[39] (bv2int %0) (+ 39 #695))) 192 := 4095&212992
(smt.stats    8    982  31914  22737  2323/2145/375    1472/370    17   97   20.65)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 0 := 38 << 19
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 0 := 38 << 19
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 0 := 38 << 19
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755813888 := 38 << 19
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 524287&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755813888 := 38 << 19
(smt.stats    9   1116  37380  27925  2433/2236/382    1681/426    19  114   20.84)
(smt.stats   10   1217  41780  33444  2557/2341/384    1834/446    20  117   20.84)
(smt.stats   11   1328  44312  39007  2706/2437/386    2066/469    22  132   21.23)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1032 := 274877906943&1288
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1032 := 274877906943&1288
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1032 := 274877906943&1288
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264 := 274877906943&1288
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264 := 274877906943&1288
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264 := 274877906943&1288
(smt.stats   12   1450  46768  46649  2974/2712/405    2457/508    23  136   21.62)
ramon: poll                 wall=1.005s usage=0.947s mem=23048KiB load=0.94 rootload=0.93
(smt.stats   13   1584  52059  61190  3291/2945/407    2729/624    25  152   21.83)
(smt.stats   14   1731  57498  70651  3350/3044/408    2949/633    26  153   22.11)
(smt.stats   15   1832  63359  85529  3363/3066/414    3212/633    27  154   22.11)
(smt.stats   16   1943  66024  92165  3364/3068/414    3402/678    28  160   22.11)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   17   2065  70329 105428  3367/3071/414    3571/678    28  160   22.11)
(smt.stats   18   2199  76633 118338  3418/3074/414    3771/685    28  160   22.21)
(smt.stats   19   2346  82940 132969  3453/3139/414    4002/685    28  160   22.21)
(smt.stats   20   2507  88744 145135  3574/3159/414    4797/690    28  160   22.50)
(smt.stats   21   2608  93048 150785  3636/3285/414    5016/694    28  160   22.50)
ramon: poll                 wall=2.000s usage=1.942s mem=23900KiB load=1.00 rootload=1.00
(smt.stats   22   2719  97899 159926  3743/3378/414    5464/695    28  160   22.59)
(smt.stats   23   2841 102042 170965  3785/3462/414    5832/697    28  160   22.69)
(smt.stats   24   2975 106710 180747  3841/3498/414    6566/699    28  160   22.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3122 114437 197784  3932/3638/421    7074/1018    29  173   22.98)
ramon: poll                 wall=3.000s usage=2.942s mem=25156KiB load=1.00 rootload=1.00
(smt.stats   26   3283 122017 214231  4076/3647/421    7578/1043    30  173   23.35)
ramon: poll                 wall=4.000s usage=3.942s mem=25132KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.941s mem=25160KiB load=1.00 rootload=0.99
(smt.stats   27   3460 127445 229083  4310/3801/421    8193/1050    30  173   23.73)
(smt.stats   28   3561 129811 240733  4369/4073/430    8570/1166    31  186   23.73)
(smt.stats   29   3672 131860 252151  4375/4077/437    8775/1222    32  242   23.83)
ramon: poll                 wall=6.000s usage=5.941s mem=25428KiB load=1.00 rootload=1.00
(smt.stats   30   3794 134967 269755  4443/4130/440    9075/1222    32  242   24.13)
(smt.stats   31   3928 139433 289174  4534/4204/445    9485/1334    34  270   24.13)
(smt.stats   32   4075 145235 307851  4553/4221/449   10424/1334    34  270   24.22)
ramon: poll                 wall=7.005s usage=6.944s mem=25804KiB load=1.00 rootload=1.01
(smt.stats   33   4236 150048 331801  4564/4228/449   10683/1507    35  340   24.32)
(smt.stats   34   4413 163011 366737  4681/4307/450   11474/1544    36  343   24.52)
ramon: poll                 wall=8.005s usage=7.944s mem=26060KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.936s mem=26316KiB load=1.00 rootload=0.99
(smt.stats   35   4607 169322 393168  4747/4362/450   12698/1545    36  343   24.71)
(smt.stats   36   4708 170432 405257  4758/4420/450   13134/1546    36  343   24.90)
ramon: poll                 wall=10.000s usage=9.936s mem=26572KiB load=1.00 rootload=1.00
(smt.stats   37   4819 174774 420803  4867/4483/450   13729/1548    36  343   24.90)
(smt.stats   38   4941 179083 436627  5016/4546/450   14375/1548    36  343   25.00)
(smt.delete-inactive-clauses  :num-deleted-clauses 321)
(smt.stats   39   5075 180876 446477  5023/4672/450   14704/1548    36  343   25.09)
(smt.stats   40   5222 186824 470360  5074/4697/452   15406/1931    37  358   25.19)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 4224 := 1073741823&4224
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 1649267445888 := 16 << 30
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1280 := 1073741823&1280
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 1649267442944 := 16 << 30
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1280 := 1073741823&1280
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 1649267442944 := 16 << 30
(smt.stats   41   5383 191228 486574  5182/4724/452   16137/1936    37  358   25.37)
(smt.stats   42   5560 195435 497165  5300/4900/457   16980/1937    37  358   25.56)
ramon: poll                 wall=11.000s usage=10.936s mem=27084KiB load=1.00 rootload=1.00
(smt.stats   43   5754 202607 522964  5328/4934/457   18176/1937    37  358   25.76)
(smt.stats   44   5967 208861 548075  5413/4975/457   19169/2111    38  359   25.85)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6068 212272 563315  5447/5043/457   19808/2111    38  359   25.85)
(smt.stats   46   6179 214921 570011  5483/5088/457   20099/2111    38  359   25.95)
ramon: poll                 wall=12.000s usage=11.936s mem=27596KiB load=1.00 rootload=1.00
(smt.stats   47   6301 220685 594392  5499/5127/457   20690/2111    38  359   25.95)
(smt.stats   48   6435 224323 618781  5509/5133/459   21072/2211    39  376   26.16)
(smt.stats   49   6582 229737 650367  5514/5142/465   21625/2211    39  376   26.26)
(smt.stats   50   6743 239072 691312  5534/5162/468   22290/2362    40  446   26.36)
(smt.stats   51   6920 250728 758257  5545/5173/470   23022/2494    41  477   26.68)
ramon: poll                 wall=13.005s usage=12.944s mem=28424KiB load=1.00 rootload=1.01
(smt.stats   52   7114 259515 825004  5550/5178/472   23988/2494    41  477   26.78)
(smt.stats   53   7327 268037 868869  5575/5202/473   24723/2595    42  503   27.07)
ramon: poll                 wall=14.000s usage=13.936s mem=28936KiB load=1.00 rootload=0.99
(smt.stats   54   7561 278783 924073  5647/5258/476   25739/2646    43  512   27.07)
(smt.stats   55   7662 283432 937572  5693/5272/476   26129/2650    43  512   27.27)
(smt.stats   56   7773 288199 954273  5771/5326/476   26502/2650    43  512   27.46)
ramon: poll                 wall=15.000s usage=14.936s mem=29192KiB load=1.00 rootload=0.99
(smt.stats   57   7895 293038 974528  5871/5409/476   27113/2731    44  526   27.56)
(smt.stats   58   8029 297892 991974  5928/5501/476   27686/2734    44  526   27.65)
ramon: poll                 wall=16.000s usage=15.935s mem=29448KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   59   8176 303847 1014076  6165/5575/479   28183/2746    44  526   27.74)
ramon: poll                 wall=17.000s usage=16.935s mem=29960KiB load=1.00 rootload=1.00
(smt.stats   60   8337 309854 1036470  6558/5811/479   28678/2822    45  530   27.84)
ramon: poll                 wall=18.000s usage=17.935s mem=29960KiB load=1.00 rootload=1.00
(smt.stats   61   8514 315053 1063061  6607/6210/480   29799/2822    45  530   27.93)
ramon: poll                 wall=19.005s usage=18.943s mem=29960KiB load=1.00 rootload=1.01
(smt.stats   62   8708 325512 1101190  6799/6217/480   30672/2828    45  530   28.31)
ramon: poll                 wall=20.000s usage=19.935s mem=30216KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:01:40 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.001s
ramon: group.utime          19.985s
ramon: group.stime          0.016s
ramon: group.mempeak        30472KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
