ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:51:12 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40766 MiB
ramon: sys.mem.avail        61708 MiB
ramon: sys.nprocs           1251
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/lcTctHC3zQum.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3068336
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3914    373  1133/1003/97     101/13     4   18   19.14)
(smt.stats    1    202   5806   1739  1869/1693/101     187/29     7   25   19.23)
(smt.stats    2    313   7257   3536  2039/1808/102     298/37     8   26   19.36)
(smt.stats    3    414   7979   5240  2348/1999/102     411/51     8   26   19.46)
(smt.stats    4    525  10307   6839  2406/2200/125     538/61    12   52   19.56)
(smt.stats    5    647  14321   9748  2435/2224/125     654/56    13   61   19.66)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16265  12426  2449/2233/128     762/60    14   63   19.77)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 37&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 37&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 37&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 37&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 37&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 37 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 37&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 37 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 35&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 35&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 35 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 34&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 34&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 34 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 36&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 36 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 74&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 36 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 74&1
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 36 := 37 << 1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 0 := 74&1
band: (band[36] (shl[36] (bv2int %0) (mod #100 36)) (if (= #559 35) 1 (if #561 3 #658))) 1 := 74&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 74&1
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1 := 74&1
(smt.stats    7    859  17302  15316  2508/2293/178     867/73    16   91   19.98)
(smt.stats    8    981  19199  18077  2561/2316/179     994/86    17   92   19.98)
(smt.stats    9   1115  21297  21169  2635/2363/179    1139/87    17   92   20.08)
(smt.stats   10   1216  22906  24016  2683/2451/179    1233/87    17   92   20.08)
ramon: poll                 wall=1.000s usage=0.927s mem=21260KiB load=0.93 rootload=0.92
(smt.stats   11   1327  26027  26836  2716/2476/179    1347/88    17   92   20.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  28483  30072  2763/2541/181    1469/115    19   98   20.18)
(smt.stats   13   1583  32970  37706  2774/2551/181    1600/115    19   98   20.28)
(smt.stats   14   1730  37227  45651  2841/2607/182    1752/124    20   98   20.37)
(smt.stats   15   1831  39029  48702  2916/2650/182    1865/125    20   98   20.37)
(smt.stats   16   1942  40379  52171  2949/2697/182    1982/126    20   98   20.37)
(smt.stats   17   2064  42723  56021  2973/2739/182    2109/126    20   98   20.48)
(smt.stats   18   2198  47582  60372  3007/2775/183    2245/135    21  102   20.48)
(smt.stats   19   2345  51048  65303  3051/2786/183    2401/138    21  102   20.48)
ramon: poll                 wall=2.000s usage=1.926s mem=21712KiB load=1.00 rootload=1.00
(smt.stats   20   2506  54056  71516  3113/2869/183    2580/138    21  102   20.58)
(smt.stats   21   2607  55689  75711  3175/2896/183    2700/140    21  102   20.58)
(smt.stats   22   2718  57270  80073  3208/2974/183    2824/140    21  102   20.71)
(smt.stats   23   2840  59106  86660  3226/2985/183    2953/144    21  102   20.71)
(smt.stats   24   2974  61518  92584  3271/3033/184    3097/179    22  106   20.71)
(smt.stats   25   3121  63713  99223  3300/3074/187    3244/179    22  106   20.71)
(smt.stats   26   3282  66291 105864  3301/3075/187    3403/192    23  110   20.84)
(smt.stats   27   3459  68489 112609  3358/3075/187    3584/192    23  110   20.84)
ramon: poll                 wall=3.000s usage=2.926s mem=22080KiB load=1.00 rootload=1.00
(smt.stats   28   3560  68909 116063  3368/3140/187    3686/192    23  110   20.84)
(smt.stats   29   3671  70711 122243  3438/3151/187    3805/193    23  110   20.93)
(smt.stats   30   3793  72253 126527  3489/3226/187    3930/193    23  110   20.93)
(smt.stats   31   3927  74034 133189  3510/3277/187    4065/193    23  110   20.93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  75950 141574  3549/3292/187    4217/193    23  110   21.04)
(smt.stats   33   4235  79470 151579  3569/3337/187    4377/193    23  110   21.04)
(smt.stats   34   4412  82004 158171  3588/3343/187    4559/193    23  110   21.25)
(smt.stats   35   4606  84868 168609  3609/3369/187    4752/193    23  110   21.25)
ramon: poll                 wall=4.000s usage=3.926s mem=22480KiB load=1.00 rootload=1.00
(smt.stats   36   4707  86909 174700  3614/3386/187    4853/193    23  110   21.25)
(smt.stats   37   4818  88068 181313  3632/3396/187    4965/193    23  110   21.35)
(smt.stats   38   4940  90081 188124  3660/3422/187    5093/193    23  110   21.35)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  91340 196144  3683/3436/187    5229/198    23  110   21.35)
(smt.stats   40   5221  95114 205981  3709/3464/187    5374/201    23  110   21.35)
(smt.stats   41   5382  97588 214125  3710/3484/187    5546/201    23  110   21.46)
(smt.stats   42   5559 100272 222173  3740/3496/187    5723/201    23  110   21.46)
(smt.stats   43   5753 103992 233531  3758/3528/187    5967/201    23  110   21.46)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 10 := 13&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 10 := 12&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 4 := 8&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 4 := 8&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 20&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 20 := 24&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 20 := 28&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 332&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 328&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 324&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 320&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 320&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 304&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 136&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 132&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 136&127
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16 := 144&127
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 9223372105574252688 := 68585522083 << 7
(smt.stats   44   5966 107789 245266  3838/3603/235    6252/279    24  116   21.74)
(smt.stats   45   6067 110230 249898  3841/3614/235    6366/320    25  128   21.74)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738370&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738370&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738390&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738386&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 9223372139933990930 := 68585522111 << 35
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738402&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738418&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738450&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738434&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738450&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738514&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 18 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 20 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 22 := 34359738642&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 22 := 34359738646&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 278 := 34359738646&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 13844098205525999894 := 68585522111 << 35
(smt.stats   46   6178 111673 253438  3966/3616/235    6544/334    25  128   21.93)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 224 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 64 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 128 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 32 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 768 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 512 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1024 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 2048 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 4096 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 8192 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 16384 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 32768 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 65536 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 131072 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 262144 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 524288 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 1048576 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 2097152 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 4194304 := 34359738368&34359738367
(smt.stats   47   6300 112363 255118  4160/3775/322    6729/336    25  128   22.56)
ramon: poll                 wall=5.005s usage=4.930s mem=23864KiB load=1.00 rootload=1.00
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 50601984 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 50601984 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 50593792 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 46137344 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 46137344 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 46137344 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 51380224 := 34359738368&34359738367
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 50855936 := 34359738368&34359738367
(smt.stats   48   6434 113566 258614  4450/4004/377    7442/346    25  128   22.56)
(smt.stats   49   6581 117442 269489  4439/4210/402    7746/651    26  163   22.66)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934656 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934656 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934680 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 84934672 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 77594640 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 77594640 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 77594640 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 83886096 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 83886096 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 83886096 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497488 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497496 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497488 := 34359738384&268435455
(smt.stats   50   6742 120770 280838  4763/4211/402    8192/677    26  163   23.19)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738384&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738448&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108880 := 34359738392&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108888 := 34359738392&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108888 := 34359738392&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 67108888 := 34359738392&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127536&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368127504&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368651280&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368659472&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368652304&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368652304&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368651280&268435455
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 58728464 := 34368659984&268435455
(smt.stats   51   6919 124242 301455  4954/4566/432    8629/910    27  169   23.47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 130660 322626  5153/4873/465    9812/960    28  175   23.76)
ramon: poll                 wall=6.000s usage=5.923s mem=25216KiB load=1.00 rootload=0.98
(smt.stats   53   7326 134490 337144  5631/4954/465   10183/1617    29  185   24.04)
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497472 := 75497474&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497472 := 75497474&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #291 64)) (if (= #677 63) 0 (if #679 1 #829))) 75497472 := 75497472&134217727
shl: (shl[64] (bv2int %0) (mod (+ #100 #290) 64)) 13844098171241758720 := 63 << 27
(smt.stats   54   7561 139061 354906  6037/5794/471   11668/2005    30  220   24.33)
(smt.stats   55   7662 142100 369956  6356/6032/476   12237/2005    30  220   24.54)
ramon: poll                 wall=7.000s usage=6.923s mem=26044KiB load=1.00 rootload=1.00
(smt.stats   56   7773 147324 398823  6570/6168/476   12930/2008    30  220   24.66)
(smt.stats   57   7895 150120 418563  6833/6465/477   13617/2230    31  221   24.87)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8029 154463 432634  6864/6563/480   14597/2231    31  221   25.16)
(smt.stats   59   8176 161772 452148  6933/6593/480   15205/2465    32  239   25.25)
ramon: poll                 wall=8.000s usage=7.922s mem=26784KiB load=1.00 rootload=1.00
(smt.stats   60   8337 169383 467538  7095/6660/480   15730/2468    32  239   25.53)
ramon: poll                 wall=9.000s usage=8.922s mem=27288KiB load=1.00 rootload=1.00
(smt.stats   61   8514 174980 490214  7197/6875/480   16631/2473    32  239   25.63)
(smt.stats   62   8708 183829 511452  7284/6991/487   17245/2771    33  253   25.73)
(smt.stats   63   8921 191242 528864  7363/7077/488   17663/2831    34  330   25.92)
ramon: poll                 wall=10.000s usage=9.920s mem=27616KiB load=1.00 rootload=1.00
(smt.stats   64   9155 197858 556748  7426/7126/491   19012/2834    34  330   26.11)
(smt.stats   65   9412 210079 613690  7481/7195/498   19735/3207    35  368   26.11)
(smt.stats   66   9513 212084 626390  7531/7208/501   20343/3400    36  430   26.11)
(smt.stats   67   9624 216892 654878  7656/7273/501   20582/3409    36  430   26.22)
(smt.stats   68   9746 220711 668963  7794/7390/501   20922/3415    36  430   26.31)
(smt.stats   69   9880 225272 681260  8032/7529/501   21126/3748    37  459   26.31)
ramon: poll                 wall=11.005s usage=10.925s mem=27872KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 44)
(smt.stats   70  10027 231368 709080  8178/7788/505   22136/3750    37  459   26.41)
(smt.stats   71  10188 238115 723054  8484/7887/505   22626/3949    38  466   26.69)
ramon: poll                 wall=12.000s usage=11.917s mem=28532KiB load=1.00 rootload=1.01
(smt.stats   72  10365 247335 755423  8762/8235/505   23612/3960    38  466   26.88)
(smt.stats   73  10559 257693 811047  8807/8487/505   24279/3962    38  466   27.35)
(smt.stats   74  10772 269256 864334  8834/8542/506   25168/4297    39  473   27.54)
ramon: poll                 wall=13.000s usage=12.916s mem=29300KiB load=1.00 rootload=1.00
(smt.stats   75  11006 278399 889761  8914/8569/508   26402/4299    39  473   27.73)
ramon: poll                 wall=14.000s usage=13.916s mem=30068KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.005s usage=14.924s mem=30068KiB load=1.00 rootload=1.00
(smt.stats   76  11263 287007 904091  9252/8687/508   26869/4637    40  495   27.91)
(smt.stats   77  11545 296604 955390  9646/9150/508   28568/4642    40  495   28.29)
ramon: poll                 wall=16.000s usage=15.916s mem=30068KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   78  11646 302074 979748  9732/9362/508   29054/4647    40  495   28.39)
(smt.stats   79  11757 306561 1004903  9854/9496/509   29452/4882    41  507   28.58)
ramon: poll                 wall=17.000s usage=16.914s mem=30324KiB load=1.00 rootload=0.99
(smt.stats   80  11879 311032 1015041  9964/9579/509   29801/4884    41  507   28.58)
(smt.stats   81  12013 315037 1036053 10050/9751/510   30704/4885    41  507   28.77)
ramon: poll                 wall=18.000s usage=17.914s mem=30580KiB load=1.00 rootload=1.00
(smt.stats   82  12160 317657 1049039 10278/9768/510   31015/5087    42  507   28.77)
ramon: poll                 wall=19.000s usage=18.914s mem=30580KiB load=1.00 rootload=1.00
(smt.stats   83  12321 322145 1068793 10465/10063/510   31405/5087    42  507   28.87)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   84  12498 328879 1097626 10549/10206/510   32381/5091    42  507   28.96)
ramon: poll                 wall=20.000s usage=19.912s mem=30988KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:51:32 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.993s
ramon: group.utime          19.977s
ramon: group.stime          0.016s
ramon: group.mempeak        32756KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              1.00
