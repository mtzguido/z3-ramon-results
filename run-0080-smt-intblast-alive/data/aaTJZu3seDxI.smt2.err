ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:38:52 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25288 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aaTJZu3seDxI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             85967
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 2305843009213693950 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1 := 2305843009213693950 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606847040 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606846978 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606846978 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606846978 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 576460752303423490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1152921504606846976 := 1152921504606846980 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 576460752303423490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1 := 1152921504606846978 << 58
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&576460752303423488
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 576460752303423487 := 576460752303423489 << 59
(smt.stats    0    101    860    651  1280/1143/117      80/8     9   21   19.07)
(smt.stats    1    202   2183   1702  1409/1230/119     179/8    11   23   19.17)
(smt.stats    2    313   3923   3284  1449/1295/120     290/16    12   26   19.26)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387905 := 1152921504606847570 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387905 := 1152921504606847570 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387905 := 1152921504606847570 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387903 := 16 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1008806316530991104
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 62 << 56
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&144115188075855872
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 50 << 56
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1008806316530991104
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 62 << 56
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&144115188075855873
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3602879701896396801 := 100 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&144115188075855873
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3602879701896396801 := 100 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387903 := 80 << 54
(smt.stats    3    414   5058   4305  1590/1427/135     382/22    14   36   19.36)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606847014 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606847014 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606847010 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606846998 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540928 := 1152921504606846998 << 57
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 1 := 1&230
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&230
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541158 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 1 := 1&230
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&230
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541158 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 1 := 1&230
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&230
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541158 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846975
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846975
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846974
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387902 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&231
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541160 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&231
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820541160 := 1152921504606847490 << 59
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846975
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 1&1152921504606846974
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 4611686018427387902 := 1152921504606847490 << 59
(smt.stats    4    525   6426   5330  1697/1508/147     480/45    16   40   19.55)
(smt.stats    5    647   7925   7297  1798/1610/163     598/57    18   44   19.55)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   9385   9723  1816/1657/170     692/76    19   50   19.66)
(smt.stats    7    859  11089  14367  1899/1728/171     661/82    20  200   19.90)
(smt.stats    8    981  12835  16671  2004/1764/177     799/107    21  207   19.99)
(smt.stats    9   1115  15564  21848  2053/1859/184     958/114    22  211   19.99)
(smt.stats   10   1216  19731  28886  2065/1883/184    1052/141    23  217   19.99)
(smt.stats   11   1327  23300  35706  2080/1893/184    1171/144    23  217   20.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  26350  41054  2102/1918/191    1282/152    25  220   20.19)
(smt.stats   13   1583  30492  46744  2104/1920/191    1417/152    25  220   20.19)
ramon: poll                 wall=1.003s usage=1.002s mem=21504KiB load=1.00 rootload=0.98
(smt.stats   14   1730  31288  47815  2210/1921/191    1569/184    26  223   20.38)
(smt.stats   15   1831  32142  49320  2367/2142/191    1685/186    26  223   20.48)
(smt.stats   16   1942  33136  51136  2473/2278/191    1812/186    26  223   20.48)
(smt.stats   17   2064  35124  54367  2517/2305/192    1973/226    27  224   20.48)
(smt.stats   18   2198  36955  61573  2563/2378/196    2130/286    28  225   20.48)
(smt.stats   19   2345  42174  74788  2573/2388/196    2307/301    29  233   20.57)
(smt.stats   20   2506  48930  90183  2578/2393/196    2481/301    29  233   20.79)
ramon: poll                 wall=2.000s usage=1.999s mem=21956KiB load=1.00 rootload=1.00
(smt.stats   21   2607  54377 101418  2578/2393/196    2582/301    29  233   20.79)
(smt.stats   22   2718  60234 113309  2578/2393/196    2693/301    29  233   20.79)
(smt.stats   23   2840  66421 125941  2578/2393/196    2815/301    29  233   20.79)
(smt.stats   24   2974  71463 136509  2590/2398/196    2952/302    29  233   20.79)
(smt.stats   25   3121  72846 140219  2767/2410/196    3121/312    29  233   20.88)
(smt.stats   26   3282  74781 146006  2919/2616/196    3316/325    29  233   20.88)
(smt.stats   27   3459  77525 154629  2992/2752/196    3504/328    29  233   20.88)
(smt.stats   28   3560  79031 157120  3006/2821/196    3616/328    29  233   20.88)
ramon: poll                 wall=3.000s usage=2.999s mem=22288KiB load=1.00 rootload=1.00
(smt.stats   29   3671  81006 161871  3147/2922/207    3574/461    30  407   21.07)
(smt.stats   30   3793  83600 173399  3292/2998/207    3727/464    30  407   21.07)
(smt.stats   31   3927  87786 190148  3311/3127/208    3883/537    31  408   21.07)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  89401 194596  3415/3149/224    4028/541    31  408   21.17)
(smt.stats   33   4235  92870 198278  3423/3239/224    4189/541    31  408   21.35)
(smt.stats   34   4412  99330 232473  3422/3242/224    4057/554    32  722   21.35)
(smt.stats   35   4613 104656 249122  3436/3256/224    4260/554    32  722   21.35)
(smt.stats   36   4715 105925 255182  3525/3266/224    4383/556    32  722   21.35)
(smt.stats   37   4826 108210 259198  3539/3352/235    4269/595    33  955   21.45)
(smt.stats   38   4948 110356 262810  3549/3365/235    4400/598    33  955   21.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 45)
(smt.stats   39   5082 113593 275072  3560/3382/235    4500/598    33  955   21.45)
ramon: poll                 wall=4.000s usage=3.999s mem=22700KiB load=1.00 rootload=1.00
(smt.stats   40   5229 118137 284466  3600/3422/238    4649/635    34  963   21.45)
(smt.stats   41   5390 119920 290673  3817/3431/238    4829/648    34  963   21.45)
(smt.stats   42   5567 122993 299056  3964/3664/238    5015/653    34  963   21.54)
(smt.stats   43   5761 124915 304520  4218/3878/240    5255/712    35  966   21.64)
ramon: poll                 wall=5.000s usage=4.998s mem=22948KiB load=1.00 rootload=1.00
(smt.stats   44   5974 126682 311641  4499/4140/240    5504/778    36  969   21.73)
(smt.stats   45   6075 128205 315746  4549/4327/240    5617/778    36  969   21.73)
(smt.stats   46   6186 129198 322157  4563/4380/240    5741/779    36  969   21.73)
(smt.stats   47   6309 130368 324978  4723/4545/241    5897/880    37  970   21.83)
(smt.stats   48   6443 131603 331292  4837/4550/241    6054/887    37  970   21.93)
ramon: poll                 wall=6.000s usage=5.998s mem=23240KiB load=1.00 rootload=0.99
(smt.stats   49   6590 133155 337477  4939/4684/241    6252/888    37  970   21.93)
(smt.stats   50   6751 135540 345064  5009/4835/249    6411/977    38  982   21.93)
(smt.stats   51   6928 138225 361229  5046/4839/249    6612/980    38  982   21.93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7122 141633 374421  5058/4884/249    6829/980    38  982   22.02)
(smt.stats   53   7335 144061 384525  5309/4895/249    7113/993    38  982   22.12)
(smt.stats   54   7569 146253 393237  5488/5146/249    7377/995    38  982   22.12)
ramon: poll                 wall=7.000s usage=6.998s mem=23444KiB load=1.00 rootload=1.00
(smt.stats   55   7670 147367 399662  5538/5323/249    7486/998    38  982   22.12)
(smt.stats   56   7781 148516 407582  5619/5396/249    7592/1000    38  982   22.21)
(smt.stats   57   7903 149350 411986  5736/5458/249    7739/1001    38  982   22.21)
(smt.stats   58   8037 150305 418632  5940/5657/249    7897/1002    38  982   22.31)
ramon: poll                 wall=8.000s usage=7.998s mem=23672KiB load=1.00 rootload=1.00
(smt.stats   59   8184 151166 424806  6211/5767/249    8080/1004    38  982   22.40)
(smt.stats   60   8345 152685 432484  6400/6052/249    8276/1012    38  982   22.50)
ramon: poll                 wall=9.000s usage=8.998s mem=23860KiB load=1.00 rootload=1.00
(smt.stats   61   8522 155156 450595  6514/6237/249    8501/1013    38  982   22.50)
(smt.stats   62   8716 158451 465153  6603/6348/249    8738/1015    38  982   22.50)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 12682136550675316736 := 1729382256910279798 << 42
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 12682136550675316736 := 1729382256910279798 << 42
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 12682136550675316736 := 1729382256910279734 << 42
(smt.stats   63   8929 160582 480439  6730/6452/249    9016/1022    38  982   22.59)
(smt.stats   64   9163 162584 499324  6900/6589/254    9272/1474    39  983   22.59)
(smt.stats   65   9420 171955 543339  6907/6732/254    9552/1513    40  983   22.69)
(smt.stats   66   9521 172730 547306  6935/6760/255    9680/1566    41  984   22.69)
(smt.stats   67   9632 175523 566904  6939/6764/255    9790/1566    41  984   22.69)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 1 := 2305843009213693892 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2 := 2305843009213693892 << 54
ramon: poll                 wall=10.003s usage=9.999s mem=24076KiB load=1.00 rootload=1.00
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927936
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 1152921504606846946 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927936
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 1152921504606846946 << 55
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927936
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 1152921504606846946 << 55
(smt.stats   68   9754 178268 580147  6978/6764/255    9938/1574    41  984   22.69)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927935
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17365880163140632575 := 2305843009213693892 << 53
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927935
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17365880163140632575 := 2305843009213693892 << 53
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&72057594037927937
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17365880163140632577 := 2305843009213693892 << 53
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&612489549322387456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 132 := 1152921504606846946 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&612489549322387456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 1152921504606846946 << 54
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&612489549322387456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 0 := 1152921504606846946 << 54
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   69   9888 180755 600441  7019/6807/260   10092/1609    42  985   22.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10035 181976 605430  7078/6854/270   10253/1630    43  987   22.98)
(smt.stats   71  10196 183954 621907  7199/6941/270   10460/1636    43  987   22.98)
(smt.stats   72  10373 186717 629545  7332/7064/270   10651/1689    44  987   23.07)
ramon: poll                 wall=11.000s usage=10.996s mem=24428KiB load=1.00 rootload=0.99
(smt.stats   73  10567 189056 653163  7410/7192/270   10869/1689    44  987   23.07)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 3458764513820540929 := 2305843009213687808 << 56
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 10376293541461622786 := 2305843009213687808 << 56
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 10376293541461622785 := 2305843009213687808 << 56
(smt.stats   74  10780 192491 669104  7543/7245/270   11083/1692    44  987   23.17)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17293822569102704640 := 2305843009213690244 << 52
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17293822569102704640 := 2305843009213690244 << 52
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17293822569102704640 := 2305843009213690244 << 52
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17293822569102704640 := 2305843009213690244 << 52
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 17293822569102704640 := 2305843009213690244 << 52
(smt.stats   75  11014 197169 674366  7619/7374/275   11345/1746    45  988   23.26)
ramon: poll                 wall=12.000s usage=11.996s mem=24788KiB load=1.00 rootload=1.00
(smt.stats   76  11271 199506 684712  7808/7474/280   11626/1749    45  988   23.55)
(smt.stats   77  11553 202031 703852  8682/8086/280   11970/1803    46  989   23.64)
(smt.stats   78  11654 203930 711124  8739/8527/280   12140/1803    46  989   23.64)
ramon: poll                 wall=13.000s usage=12.996s mem=25184KiB load=1.00 rootload=1.00
(smt.stats   79  11765 208459 733401  8746/8560/280   12282/1803    46  989   23.64)
(smt.stats   80  11887 210511 745278  8800/8574/280   12424/1804    46  989   23.64)
(smt.stats   81  12021 212841 756175  8822/8634/280   12561/1804    46  989   23.74)
(smt.stats   82  12168 216080 769922  8859/8646/280   12749/1805    46  989   23.74)
(smt.stats   83  12329 218699 776592  8872/8686/280   12936/1805    46  989   24.09)
(smt.stats   84  12506 220479 791573  8911/8721/280   13110/1805    46  989   24.19)
(smt.stats   85  12700 224203 799394  8944/8732/280   13308/1805    46  989   24.19)
ramon: poll                 wall=14.000s usage=13.996s mem=25652KiB load=1.00 rootload=1.00
(smt.stats   86  12913 229502 857969  9001/8780/280   13525/1805    46  989   24.19)
(smt.stats   87  13147 236297 871392  9024/8838/280   13748/1805    46  989   24.19)
(smt.stats   88  13404 241101 888774  9245/8849/280   14084/1831    46  989   24.38)
ramon: poll                 wall=15.000s usage=14.996s mem=25896KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   89  13686 244815 908821  9451/9187/280   14344/1845    46  989   24.38)
(smt.stats   90  13996 249486 940395  9744/9459/283   14658/2306    47 1020   24.47)
(smt.stats   91  14097 253400 962765  9754/9568/285   14764/2306    47 1020   24.47)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&864691128467743232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2017612633074590208 := 2017612633074590208 << 46
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&864691128467743232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2017612633074590208 := 2017612633074590208 << 46
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&864691128467743232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2017612633074590208 := 2017612633074590208 << 46
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&864691128467743232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2017612633074590208 := 2017612633074590208 << 46
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2305843009213693951 := 2017612633074590208 << 46
(smt.stats   92  14208 256873 975628  9825/9580/285   14050/2392    48 1855   24.57)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&387309567953862656
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 432345564227579296 := 1008806316531002048 << 47
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&387309567953862656
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 432345564227579296 := 1008806316531002048 << 47
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&387309567953862656
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 432345564227579296 := 1008806316531002048 << 47
(smt.stats   93  14330 259160 979558  9866/9663/290   14171/2393    48 1855   24.57)
ramon: poll                 wall=16.000s usage=15.995s mem=26052KiB load=1.00 rootload=1.00
(smt.stats   94  14464 262193 995515  9955/9703/295   14318/2409    49 1857   24.66)
(smt.stats   95  14611 264719 1002416 10051/9775/295   14478/2412    49 1857   24.76)
ramon: poll                 wall=17.000s usage=16.995s mem=26220KiB load=1.00 rootload=1.00
(smt.stats   96  14772 267051 1011657 10247/9906/295   14652/2454    50 1857   24.76)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas          :deletions      )
(smt.stats   97  14949 271218 1019800 10287/10082/295   14831/2455    50 1857   24.76)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846943
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2305843009213693919 := 1152921504606866560 << 50
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846943
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2305843009213693919 := 1152921504606866560 << 50
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846943
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2305843009213693919 := 1152921504606866560 << 50
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846943
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2305843009213693919 := 1152921504606866560 << 50
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846975
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2305843009213693951 := 1152921504606866816 << 50
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846943
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2305843009213693919 := 1152921504606866816 << 50
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846943
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2305843009213693919 := 1152921504606866816 << 50
band: (band[60] (if (or #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 #471 #474 #477 #480 ...) 0 (if #432 1 #938)) (shl[64] (* 2 #402) (mod #1184 64))) 0 := 0&1152921504606846943
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #1176 #1180) 64)) 2305843009213693919 := 1152921504606866816 << 50
(smt.stats   98  15143 274230 1028929 10402/10123/295   15042/2460    50 1857   24.85)
(smt.stats   99  15356 277833 1043631 10472/10233/300   15262/2506    51 1858   24.85)
(smt.stats  100  15590 282071 1071968 10576/10326/304   15501/2523    52 1863   24.85)
(smt.stats  101  15847 286397 1091730 10647/10407/304   15755/2529    52 1863   24.95)
ramon: poll                 wall=18.000s usage=17.995s mem=26408KiB load=1.00 rootload=1.00
(smt.stats  102  16129 290496 1119465 10732/10502/304   16016/2547    53 1871   24.95)
(smt.stats  103  16439 298054 1160915 10810/10570/304   16322/2551    53 1871   25.10)
(smt.stats  104  16779 306195 1209206 10890/10697/304   16628/2551    53 1871   25.10)
(smt.stats  105  16880 309672 1235894 10896/10703/304   16735/2551    53 1871   25.10)
ramon: poll                 wall=19.000s usage=18.995s mem=26780KiB load=1.00 rootload=1.00
(smt.stats  106  16991 311789 1249618 10899/10706/304   16857/2551    53 1871   25.19)
(smt.stats  107  17113 314281 1256219 10915/10710/304   16986/2553    53 1871   25.19)
(smt.stats  108  17247 317477 1277179 10920/10727/304   17132/2553    53 1871   25.19)
(smt.stats  109  17394 320389 1297078 10924/10731/304   17293/2553    53 1871   25.19)
(smt.stats  110  17555 324679 1314564 10940/10746/304   17452/2553    53 1871   25.19)
(smt.stats  111  17732 329661 1349002 11070/10767/304   17632/2562    53 1871   25.29)
ramon: poll                 wall=20.000s usage=19.995s mem=26864KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:39:12 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.030s
ramon: group.total          20.003s
ramon: group.utime          19.971s
ramon: group.stime          0.032s
ramon: group.mempeak        27124KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
