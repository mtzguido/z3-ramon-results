ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:49:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29184 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9SSSqHL22x8A.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             666738
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   90.9091     10000        49          0            1        2)
(smt.stats    0    101   5605    658  1201/1089/95     100/16     3   16   51.94)
(sat.ddfw       1      1   41.8452     20001        98          1            1        3)
(smt.stats    1    202   8568   1401  1780/1527/95     231/27     3   16   52.13)
(sat.ddfw       1      1   41.6667     40001       196          2            1        5)
(smt.stats    2    313  11984   2531  1873/1687/96     345/42     4   18   52.23)
(smt.stats    3    414  13431   3802  1950/1775/96     452/43     4   18   52.23)
(smt.stats    4    525  14386   4937  2201/1910/103     548/68     6   25   52.42)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 0 := 17592186044356 << 27
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 0 := 17592186044356 << 27
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 0 := 17592186044356 << 27
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 0 := 17592186044356 << 27
(sat.ddfw       1      1   37.7834     70001       343          3            1        8)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022177 := 8796093022178 << 28
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022177 := 8796093022178 << 28
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022177 := 8796093022178 << 28
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 1 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 1 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 2 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 4 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 256 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 256 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 1024 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 2048 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 4096 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16384 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 32768 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 65536 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 131072 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 262144 := 134217727&8788039958528
(smt.stats    5    647  16953   7739  2618/2118/103     674/89     7   25   53.00)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8788039958529 := 8796093022178 << 28
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 134217727 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 134217726 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 134217724 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 134217720 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 256 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 1024 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 2048 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 4096 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16384 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 32768 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 65536 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 131072 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 262144 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 524288 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 1048576 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 2097152 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 4194304 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8388608 := 134217727&8788039958528
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  17629   8572  2948/2486/181     830/93     8   40   53.69)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 4194304 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16777216 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16777216 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
ramon: poll                 wall=1.004s usage=0.914s mem=55808KiB load=0.91 rootload=0.90
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 67108864 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 67108864 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8388608 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 2 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 1 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 4 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 2 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 2 := 134217727&8788039958528
(smt.stats    7    859  21282  14910  3007/2688/308    1314/113     9   67   53.78)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 32768 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 256 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16 := 134217727&8788039958528
(smt.stats    8    981  24872  22853  3069/2845/413    1517/393    13  103   53.99)
(sat.ddfw       1      1   33.0306    110001       539          4            1       12)
(smt.stats    9   1115  26696  24602  3405/2937/414    1875/409    13  103   54.85)
(sat.ddfw       1      1   28.8013    160000       784          5            1       17)
ramon: poll                 wall=2.004s usage=1.914s mem=57264KiB load=1.00 rootload=0.99
(smt.stats   10   1216  30059  32713  3674/3343/415    2304/574    14  107   55.07)
(sat.ddfw       1      1   25.4781    220001      1078          6            1       23)
(smt.stats   11   1327  35413  42909  3882/3542/417    2881/772    15  111   55.16)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  38610  50357  4203/3949/431    3406/867    17  117   55.26)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022182 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022185 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022185 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022183 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022183 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022182 := 8796093022181 << 25
ramon: poll                 wall=3.004s usage=2.913s mem=58108KiB load=1.00 rootload=1.00
(smt.stats   13   1583  44859  62784  4268/3976/439    4107/1390    19  155   55.58)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 64 := 8388607&8795220606985
(sat.ddfw       1      1   22.7494    290001      1421          7            1       30)
(smt.stats   14   1730  49699  68714  4433/4020/450    4374/1439    20  159   55.67)
(smt.stats   15   1831  52730  76095  4699/4291/455    4640/1486    21  160   55.87)
(smt.stats   16   1942  57819  94973  4993/4737/462    5177/1643    23  161   55.96)
(smt.stats   17   2064  61320 100912  5148/4742/462    5990/1648    23  161   56.16)
(sat.ddfw       1      1   20.4186    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.913s mem=58384KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2198  63028 105628  5594/4923/462    6218/1890    24  180   56.36)
(smt.stats   19   2345  64280 111866  5928/5454/462    6696/1891    24  180   56.60)
(sat.ddfw       1      1   18.5185    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.909s mem=58900KiB load=1.00 rootload=0.99
(smt.stats   20   2506  69139 121736  6256/5998/466    7351/2052    26  201   56.70)
(smt.stats   21   2607  75543 134075  6406/6030/466    7936/2060    26  201   56.70)
(smt.stats   22   2718  80008 146078  6415/6159/467    8179/2408    27  204   56.89)
(sat.ddfw       1      1   16.9348    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.908s mem=59156KiB load=1.00 rootload=1.00
(smt.stats   23   2840  85137 158456  6512/6162/469    8444/2415    27  204   56.89)
(smt.stats   24   2974  89078 177817  6656/6391/473    9271/2924    29  223   56.99)
ramon: poll                 wall=7.000s usage=6.908s mem=59384KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.6073    670001      3284         11            1       68)
(smt.stats   25   3121  92805 190599  6819/6489/476    9502/2927    29  223   57.39)
(smt.stats   26   3282  97802 199622  7054/6608/476    9887/2964    30  239   57.49)
ramon: poll                 wall=8.000s usage=7.908s mem=60064KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.4456    790001      3872         12            1       80)
(smt.stats   27   3459 103551 216513  7253/6974/478   10823/3103    31  240   57.68)
(smt.stats   28   3560 106575 226249  7287/6996/478   11115/3103    31  240   57.78)
ramon: poll                 wall=9.000s usage=8.911s mem=60120KiB load=1.00 rootload=1.00
(smt.stats   29   3671 110033 254998  7324/7022/478   11590/3528    32  243   57.78)
(smt.stats   30   3793 112866 273479  7458/7053/479   11766/3714    33  259   57.87)
(sat.ddfw       1      1   13.4436    920001      4509         13            1       93)
(smt.stats   31   3927 115897 285624  7538/7214/479   12005/3715    33  259   57.87)
ramon: poll                 wall=10.000s usage=9.911s mem=60368KiB load=1.00 rootload=1.00
(smt.stats   32   4074 120908 309995  7699/7301/480   13515/3775    34  263   58.25)
ramon: poll                 wall=11.000s usage=10.910s mem=60672KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.5639   1060001      5196         14            1      108)
(smt.stats   33   4235 125579 337283  7830/7512/484   14074/4232    36  267   58.45)
ramon: poll                 wall=12.004s usage=11.926s mem=60780KiB load=1.01 rootload=1.02
(smt.stats   34   4412 131256 350848  8022/7570/484   14510/4235    36  267   58.45)
(sat.ddfw       1      1   11.8129   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.917s mem=61032KiB load=1.00 rootload=0.99
(smt.stats   35   4606 138352 374506  8131/7796/489   15473/4306    37  279   58.88)
(smt.stats   36   4707 142326 381964  8219/7882/489   15651/4477    38  279   59.04)
ramon: poll                 wall=14.004s usage=13.923s mem=61312KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.1335   1370001      6715         16            1      139)
(smt.stats   37   4818 146338 400915  8366/8032/489   16178/4485    38  279   59.04)
ramon: poll                 wall=15.004s usage=14.923s mem=61344KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4940 151079 433268  8564/8127/489   16885/4491    38  279   59.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 61)
(smt.stats   39   5074 156299 452606  8665/8353/490   18037/5227    39  280   59.35)
ramon: poll                 wall=16.000s usage=15.919s mem=61608KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5322   1540001      7549         17            1      156)
(smt.stats   40   5221 163487 475283  8890/8393/490   18550/5230    39  280   59.54)
ramon: poll                 wall=17.000s usage=16.919s mem=61724KiB load=1.00 rootload=1.00
(smt.stats   41   5382 170069 543009  8947/8654/490   19687/5230    39  280   59.64)
ramon: poll                 wall=18.000s usage=17.919s mem=62036KiB load=1.00 rootload=1.00
(smt.stats   42   5559 175123 566465  9023/8688/491   20383/5622    40  280   59.93)
(sat.ddfw       1      1   9.99223   1720001      8431         18            1      174)
(smt.stats   43   5753 187413 666999  9068/8773/491   20769/5623    40  280   59.93)
ramon: poll                 wall=19.000s usage=18.919s mem=62308KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.919s mem=62452KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.50903   1910001      9362         19            1      193)
ramon: end                  Fri Nov  1 21:50:16 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.976s
ramon: group.utime          19.952s
ramon: group.stime          0.024s
ramon: group.mempeak        62708KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.058s
ramon: loadavg              1.00
