ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:44:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40906 MiB
ramon: sys.mem.avail        61381 MiB
ramon: sys.nprocs           1329
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/MVhgyyyUFjcv.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3812133
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   248/248     0/0  69       0    18.51   0.01)
(sat.stats    101    620    0   248/248   101/31  69       0    18.87   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 269 :time 0.00)
(sat.stats    101    620    0   248/248   101/31  69       0    18.87   0.01)
(sat.stats    101    620    0   248/248   101/31  69       0    18.87   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.01)
 (sat-probing :cost 384218.87 :time 0.00)
(sat.stats    101    620    0   250/250    37/30  69       0    18.87   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1878 :time 0.00)
(sat.stats    273   2026    1   314/314   208/125  77       0    19.78   0.11)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    276   2035    2   331/331   211/125  77       0    19.78   0.11)
(sat.stats    279   2146    3   341/341   214/125  77       0    19.68   0.12)
(sat.stats    283   2159    4   341/341   218/125  77       0    19.68   0.12)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2031 :time 0.00)
(sat.stats    286   2191    5   340/340   221/125  77       0    19.68   0.12)
(sat.stats    289   2228    6   340/340   224/125  77       0    19.68   0.12)
(sat.stats    292   2274    7   340/340   227/125  77       0    19.68   0.12)
(sat.stats    295   2317    8   340/340   230/125  77       0    19.68   0.13)
(sat.stats    298   2393    9   340/340   233/125  77       0    19.68   0.13)
(sat.stats    301   2480   10   340/340   236/125  77       0    19.68   0.13)
(sat.stats    304   2584   11   340/340   239/125  77       0    19.68   0.13)
(sat.stats    307   2840   12   342/342   242/125  77       0    19.68   0.13)
(sat.stats    310   3025   13   344/344   245/126  77       0    19.68   0.14)
(sat.stats    314   3189   14   359/359   249/126  77       0    19.68   0.14)
 (sat-cleaner :elim-literals 13 :elim-clauses 1 :cost 2621 :time 0.00)
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #64))) 0 := 9007199254735219 >>l 32
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 0&288230375749058560
lshr: (lshr[64] (* 32 (bv2int %0)) (mod (+ 63 #617 #621) 64)) 522656 := 522656 >>l 37
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5394 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    721  14885   39  1282/1281   668/215  89       0    20.22   0.46)
(sat.stats    726  14977   40  1297/1296   674/216  89       0    20.22   0.47)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 6426 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 1&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 1 := 288230375749058560&1
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 1 := 2&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 2&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 2 := 288230375749058560&2
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 2 := 4&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 4&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 4 := 288230375749058560&4
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 10&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 8 := 288230375749058560&10
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 16&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 16 := 288230375749058560&16
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 32&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 32 := 288230375749058560&32
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 64&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 64 := 288230375749058560&64
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 128&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 128 := 288230375749058560&128
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 256&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 256 := 288230375749058560&256
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 512&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 512 := 288230375749058560&512
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 1024&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 1024 := 288230375749058560&1024
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 2048&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 2048 := 288230375749058560&2048
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 4096&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 4096 := 288230375749058560&4096
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 8192&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 8192 := 288230375749058560&8192
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 16384&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 16384 := 288230375749058560&16384
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 32768&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 32768 := 288230375749058560&32768
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 65536&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 65536 := 288230375749058560&65536
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 131072&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 131072 := 288230375749058560&131072
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 262144&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 262144 := 288230375749058560&262144
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 524288&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 524288 := 288230375749058560&524288
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 1048576&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 1048576 := 288230375749058560&1048576
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 2097152&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 2097152 := 288230375749058560&2097152
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 4194304&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 4194304 := 288230375749058560&4194304
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 8388608&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 8388608 := 288230375749058560&8388608
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 16777216&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 16777216 := 288230375749058560&16777216
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 0 := 33554432&288230375749058560
band: (band[58] (if (= #333 63) 2658455991569831690467381899432034304 (if #467 1329227995784915845233690949716017152 #464)) (lshr[64] (* 32 #69) (mod #624 64))) 33554432 := 288230375749058560&33554432
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 2 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 1 := 67108863&288230375749058560
 (sat-cleaner :elim-literals 2 :elim-clauses 2 :cost 9766 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 4 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 75352 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 332080 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 63072 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 24704 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 64 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 256 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 11010560 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 16257024 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 1024 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 2048 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 53911552 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 15941632 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 3702784 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 2228224 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 65536 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 40894464 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 262144 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 524288 := 67108863&288230375749058560
(sat.stats   1066  20076   70  4080/4078  1057/290 385       0    22.91   0.73)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 33554432 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 2097152 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 29360128 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 16777216 := 67108863&288230375749058560
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #490)) (if (= #56 57) 41538374868278620163552842178625536 (if #494 20769187434139310081776421089312768 #606))) 8388608 := 67108863&288230375749058560
 (sat-cleaner :elim-literals 46 :elim-clauses 0 :cost 10875 :time 0.00)
ramon: poll                 wall=1.000s usage=0.885s mem=24752KiB load=0.88 rootload=0.86
(sat.stats   1634  42333  167 20057/20055  1874/675 415       0    27.03   1.66)
ramon: poll                 wall=2.000s usage=1.883s mem=28620KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 30 :elim-clauses 1 :cost 17280 :time 0.00)
ramon: poll                 wall=3.000s usage=2.881s mem=30620KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.879s mem=30672KiB load=1.00 rootload=1.00
(sat.stats   2396  70779  251 30582/30579  2703/772 456       0    29.42   4.08)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 24108 :time 0.00)
ramon: poll                 wall=5.002s usage=4.880s mem=31568KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 33365 :time 0.00)
ramon: poll                 wall=6.000s usage=5.878s mem=33260KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 34063 :time 0.00)
ramon: poll                 wall=7.000s usage=6.877s mem=33456KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.877s mem=33568KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.877s mem=33604KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 38282 :time 0.00)
ramon: poll                 wall=10.000s usage=9.876s mem=33620KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.876s mem=33720KiB load=1.00 rootload=1.00
(sat.stats   3841 147699  415 47391/47388  4463/1253 487       0    32.43  11.37)
ramon: poll                 wall=12.000s usage=11.876s mem=33980KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.876s mem=34012KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.875s mem=34172KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.875s mem=34292KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.875s mem=34388KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.874s mem=34928KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.874s mem=34960KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.874s mem=34988KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.874s mem=35180KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:44:23 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.020s
ramon: group.total          19.954s
ramon: group.utime          19.926s
ramon: group.stime          0.028s
ramon: group.mempeak        35444KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              0.99
