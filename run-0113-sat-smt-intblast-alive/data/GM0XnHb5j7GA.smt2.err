ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:29:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41103 MiB
ramon: sys.mem.avail        61382 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/GM0XnHb5j7GA.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3768174
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   145/143     0/0  61       0    18.53   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 227 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 227 :time 0.00)
(sat.stats    136   3010    0   172/170   133/91  69       0    19.11   0.05)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    136   3010    0   185/183   133/91  72       0    19.11   0.05)
(sat.stats    136   3010    0   185/183   133/91  72       0    19.11   0.05)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :elim-bin 15 :time 0.00)
 (sat-probing :cost 275219.11 :time 0.00)
(sat.stats    136   3010    0   157/155   113/94  72       0    19.11   0.05)
(sat.stats    139   3094    1   157/155   117/97  72       0    19.11   0.05)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    207   4519    2   167/165   185/151  72       0    19.11   0.06)
(sat.stats    210   4560    3   167/165   188/153  72       0    19.11   0.06)
(sat.stats    213   4610    4   167/165   191/153  72       0    19.11   0.06)
(sat.stats    216   4691    5   167/165   194/154  72       0    19.11   0.06)
(sat.stats    219   4847    6   167/165   197/156  72       0    19.11   0.06)
(sat.stats    223   4919    7   167/165   201/157  72       0    19.11   0.06)
(sat.stats    226   4940    8   167/165   204/157  72       0    19.11   0.06)
(sat.stats    229   5103    9   167/165   207/157  72       0    19.11   0.06)
(sat.stats    232   5183   10   169/167   210/157  72       0    19.11   0.07)
(sat.stats    238   5199   11   175/173   216/158  72       0    19.11   0.07)
(sat.stats    242   5202   12   177/175   220/158  72       0    19.11   0.07)
(sat.stats    245   5216   13   179/177   223/158  72       0    19.11   0.07)
(sat.stats    315   6205   23   199/197   294/209  72       0    19.20   0.09)
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 1094 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1271 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 43 << 2
 (sat-cleaner :elim-literals 7 :elim-clauses 2 :cost 1545 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 59 << 18
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 50 << 9
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 73 << 32
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 55 << 14
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 68 << 27
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 49 << 8
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 72 << 31
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 52 << 11
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 42 << 1
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 66 << 25
 (sat-cleaner :elim-literals 162 :elim-clauses 1 :cost 3058 :time 0.00)
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 51 << 10
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 46 << 5
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 53 << 12
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 47 << 6
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 78 << 37
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 44 << 3
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 58 << 17
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 65 << 24
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 57 << 16
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 76 << 35
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 77 << 36
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 54 << 13
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 48 << 7
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 67 << 26
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 71 << 30
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 56 << 15
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 70 << 29
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 60 << 19
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 69 << 28
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 62 << 21
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 61 << 20
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 63 << 22
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 74 << 33
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 45 << 4
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 75 << 34
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 64 << 23
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&536870912
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 19791209299967 := 64 << 23
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4342 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 4 :cost 4535 :time 0.00)
(sat.stats :conflicts   :restarts     :learned/bin         :gc          :time)
(sat.stats      :decisions     :clauses/bin     :units         :memory       )
(sat.stats   1203  44182   39   590/578  1173/353 200       0    20.92   0.40)
(sat.stats   1206  44204   40   590/578  1176/356 200       0    20.92   0.40)
(sat.stats   1209  44226   41   590/578  1179/358 200       0    20.92   0.40)
 (sat-cleaner :elim-literals 18 :elim-clauses 1 :cost 5997 :time 0.00)
 (sat-cleaner :elim-literals 8 :elim-clauses 3 :cost 6301 :time 0.00)
(sat.stats   1598  56676   69   821/809  1562/481 204       0    21.31   0.81)
ramon: poll                 wall=1.000s usage=0.996s mem=22628KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 20 :elim-clauses 0 :cost 6819 :time 0.00)
 (sat-cleaner :elim-literals 49 :elim-clauses 3 :cost 7891 :time 0.00)
 (sat-cleaner :elim-literals 4 :elim-clauses 11 :cost 8344 :time 0.00)
ramon: poll                 wall=2.000s usage=1.996s mem=23424KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 8847 :time 0.00)
ramon: poll                 wall=3.000s usage=2.996s mem=24000KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 2 :elim-clauses 3 :cost 10222 :time 0.00)
(sat.stats   2398 100607  160  7296/7284  2338/631 212       0    22.83   3.73)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 10662 :time 0.00)
ramon: poll                 wall=4.000s usage=3.995s mem=24260KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 165 :elim-clauses 13 :cost 10856 :time 0.00)
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&49152
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 2199023289737 := 12 << 12
 (sat-cleaner :elim-literals 12 :elim-clauses 6 :cost 11298 :time 0.00)
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&2048
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 32768 := 8 << 8
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&384
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 24576 := 6 << 6
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 4096 := 1 << 1
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&8
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 8192 := 2 << 2
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&4608
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 36 := 9 << 9
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&274877906944
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 144 := 36 << 36
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&24
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 12 := 3 << 3
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&229376
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 56 := 14 << 14
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&1048576
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 64 := 16 << 16
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&106496
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 52 := 13 << 13
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&15569256448
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 116 := 29 << 29
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&160
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 20 := 5 << 5
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&4718592
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 72 := 18 << 18
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&896
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 28 := 7 << 7
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&20971520
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 80 := 20 << 20
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&687194767360
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 148 := 37 << 37
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&491520
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 60 := 15 << 15
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&2228224
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 68 := 17 << 17
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&64
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 16 := 4 << 4
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&66571993088
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 124 := 31 << 31
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&838860800
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 100 := 25 << 25
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&9961472
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 76 := 19 << 19
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&283467841536
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 132 := 33 << 33
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&1744830464
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 104 := 26 << 26
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&92274688
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 88 := 22 << 22
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&32212254720
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 120 := 30 << 30
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&3623878656
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 108 := 27 << 27
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&402653184
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 96 := 24 << 24
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&44040192
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 84 := 21 << 21
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&22528
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 44 := 11 << 11
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&7516192768
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 112 := 28 << 28
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&1202590842880
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 140 := 35 << 35
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&584115552256
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 136 := 34 << 34
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&137438953472
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 128 := 32 << 32
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 13147 :time 0.00)
(sat.stats   3595 181512  186  9048/9025  3492/795 332       0    24.38   4.62)
ramon: poll                 wall=5.000s usage=4.995s mem=25956KiB load=1.00 rootload=1.00
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 962072674304 := 40 << 40
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 80 := 40 << 40
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 0 := 38 << 38
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 1 := 1&1649267441664
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 1&1649267441664
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 76 := 38 << 38
shl: (shl[41] (bv2int %0) (mod (bv2int %0) 41)) 1924145348608 := 39 << 39
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 2&1649267441664
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 78 := 39 << 39
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats     :decisions    :clauses/bin         :units         :memory       )
(sat.stats   5631 290581  205 10459/10427  4791/859 332       0    25.40   5.61)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 21681 :time 0.00)
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 0&10240
shl: (shl[64] (bv2int %0) (mod (+ #54 #282) 64)) 10485760 := 10 << 10
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 23203 :time 0.00)
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 2 := 2&1649267441664
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 2&1649267441664
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #786 1 #855))) 2 := 1649267441664&2
band: (band[41] (if (or #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 ...) 0 (if #580 1 #586)) (shl[41] (bv2int %0) (mod #54 41))) 0 := 2&1649267441664
band: (band[41] (shl[64] (bv2int %0) (mod #283 64)) (if (or #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 ...) 0 (if #786 1 #855))) 1 := 1649267441664&2
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 23753 :time 0.00)
ramon: poll                 wall=6.000s usage=5.995s mem=26944KiB load=1.00 rootload=1.00
(sat.stats   8092 347127  758 31790/31747  6884/1687 379       0    36.24   6.54)
ramon: poll                 wall=7.000s usage=6.994s mem=44084KiB load=1.00 rootload=0.97
ramon: poll                 wall=8.000s usage=7.994s mem=60716KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.993s mem=65696KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.993s mem=71080KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.992s mem=74716KiB load=1.00 rootload=0.99
(sat.stats  12136 357237 2106 82340/82297 10928/3709 379       0    74.33  11.05)
ramon: poll                 wall=12.000s usage=11.991s mem=93760KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.991s mem=96104KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.990s mem=99452KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.990s mem=98MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.988s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.988s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.988s mem=105MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.987s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.987s mem=109MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:29:41 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.070s
ramon: group.total          20.001s
ramon: group.utime          19.921s
ramon: group.stime          0.080s
ramon: group.mempeak        109MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
