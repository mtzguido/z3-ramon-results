ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:38:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41101 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1252
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/dRJ9UYLYcZtQ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3028568
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 99 := 98 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 111 := 110 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 99 := 98 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 144115188075855872 := 100 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 18446744073709551615 := 288230376151711742 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 148 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 9223372036854775806 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 144115188075855928 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 144115188075855928 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 144115188075855928 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 117 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 119 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 2161727821137838081 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 2197756618156802049 := 122 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 2233785415175766017 := 124 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 2269814212194729985 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 288230376151711743 := 128 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 292733975779082239 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 297237575406452735 := 132 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 301741175033823231 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 324259173170675711 := 144 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 319755573543305215 := 142 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 288230376151711746 := 142 << 42
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 1 := 71 << 43
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 1 := 71 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 589338232487935 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 589338232487935 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 589338232487935 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 615726511554559 := 140 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 598134325510143 := 136 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 598134325510143 := 136 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 606930418532351 := 138 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 615726511554559 := 140 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 633318697598975 := 144 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 633318697598975 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 71 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 633318697598975 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 71 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 633318697598975 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 71 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 316659348799488 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 71 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 316659348799488 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 0 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 316659348799488 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 0 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 316659348799489 := 144 << 41
(smt.stats    0    101    636    795   205/57/59     103/23     4   11   18.45)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 571746046443519 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 580542139465727 := 132 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 131 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 131 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 571746046443519 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 589338232487935 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 562949953421311 := 128 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 562949953421311 := 128 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 536561674354687 := 122 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 536561674354687 := 122 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 125 := 124 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 125 := 124 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 554153860399103 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 554153860399103 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 554153860399103 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 0 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 0 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 119 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 117 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 117 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 510173395288063 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 510173395288063 := 116 << 55
(smt.stats    1    202   1583   1584   323/284/140     196/37     6   28   18.65)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 501377302265855 := 114 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 144 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 144 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 142 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 148 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 148 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 148 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 151 := 150 << 38
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 329853488332800 := 75 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 41231686041600 := 150 << 38
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 329853488332800 := 75 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 149 := 148 << 39
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 325455441821696 := 74 << 40
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 325455441821696 := 74 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82463372083201 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82463372083201 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82463372083201 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 659706976665599 := 150 << 38
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 329853488332801 := 75 << 39
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 329853488332801 := 75 << 39
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 650910883643392 := 74 << 40
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 325455441821697 := 74 << 40
(smt.stats    2    313   2702   2966   417/365/163     300/51     8   35   18.93)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 154 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 154 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 156 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 158 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 160 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 170 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 172 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 174 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 174 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 176 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 104 := 210 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 103 := 208 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 102 := 206 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 101 := 204 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 100 := 202 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 99 := 200 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 75 := 152 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 77 := 156 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 156 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 158 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 160 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 80 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 80 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 80 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 80 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 86 := 174 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 85 := 172 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 83 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 84 := 170 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 83 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 83 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 83 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 86 := 174 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 85 := 172 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 172 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 88 := 178 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 89 := 180 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 90 := 182 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 91 := 184 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 92 := 186 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 92 := 186 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 184 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 93 := 188 << 19
(smt.stats    3    415   3566   4746   620/429/173     399/65     8   35   19.61)
ramon: poll                 wall=1.000s usage=0.950s mem=21324KiB load=0.95 rootload=0.94
(smt.stats    4    526   4731   5130   670/587/256     504/76     9   56   20.19)
ramon: poll                 wall=2.002s usage=1.951s mem=21624KiB load=1.00 rootload=1.00
(smt.stats    5    648   5311   5718   881/723/256     625/111    10   59   20.47)
ramon: poll                 wall=3.000s usage=2.949s mem=22000KiB load=1.00 rootload=1.00
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations         :lemmas         :deletions    )
(smt.stats    6    749   5967   6753  1208/981/256     726/121    10   59   20.56)
(smt.stats    7    860   7956   9647  1327/1252/256     841/133    10   59   20.65)
ramon: poll                 wall=4.000s usage=3.949s mem=22000KiB load=1.00 rootload=1.00
(smt.stats    8    982   9013  10664  1624/1405/256     957/170    10   59   20.75)
ramon: poll                 wall=5.000s usage=4.949s mem=22144KiB load=1.00 rootload=1.00
(smt.stats    9   1116  10069  11658  1945/1786/256    1088/193    10   59   20.94)
(smt.stats   10   1217  11897  13412  2065/1997/256    1179/200    10   59   21.04)
ramon: poll                 wall=6.000s usage=5.949s mem=22300KiB load=1.00 rootload=1.00
(smt.stats   11   1328  13465  15120  2219/2089/256    1292/224    10   59   21.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  15510  18317  2413/2303/261    1407/260    11   72   21.23)
ramon: poll                 wall=7.000s usage=6.948s mem=22680KiB load=1.00 rootload=1.00
(smt.stats   13   1584  17213  20684  2819/2599/261    1540/267    11   72   21.32)
ramon: poll                 wall=8.000s usage=7.948s mem=22684KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.948s mem=22800KiB load=1.00 rootload=1.00
(smt.stats   14   1731  19444  25033  3175/2850/261    1693/273    11   72   21.51)
(smt.stats   15   1832  20845  27319  3412/3189/261    1801/275    11   72   21.61)
ramon: poll                 wall=10.000s usage=9.948s mem=22880KiB load=1.00 rootload=1.00
(smt.stats   16   1943  23096  32013  3584/3457/261    1910/277    11   72   21.61)
(smt.stats   17   2065  26168  39082  3666/3591/261    2024/279    11   72   21.70)
ramon: poll                 wall=11.002s usage=10.949s mem=23112KiB load=1.00 rootload=1.00
(smt.stats   18   2199  30266  46739  3952/3646/261    2163/288    11   72   21.80)
ramon: poll                 wall=12.000s usage=11.948s mem=23144KiB load=1.00 rootload=0.99
(smt.stats   19   2346  31470  49301  4516/3971/261    2310/314    11   72   21.89)
ramon: poll                 wall=13.000s usage=12.947s mem=23256KiB load=1.00 rootload=1.00
(smt.stats   20   2507  35067  57282  4715/4502/261    2497/330    11   72   21.99)
ramon: poll                 wall=14.000s usage=13.947s mem=23396KiB load=1.00 rootload=1.00
(smt.stats   21   2608  36766  60535  4847/4719/261    2599/336    11   72   22.08)
(smt.stats   22   2719  38122  63405  5076/4842/261    2709/349    11   72   22.17)
ramon: poll                 wall=15.000s usage=14.947s mem=23704KiB load=1.00 rootload=1.00
(smt.stats   23   2841  40042  68182  5384/5080/261    2826/366    11   72   22.17)
ramon: poll                 wall=16.000s usage=15.947s mem=23724KiB load=1.00 rootload=1.00
(smt.stats   24   2975  40645  69233  5579/5366/261    2958/370    11   72   22.37)
ramon: poll                 wall=17.000s usage=16.944s mem=23980KiB load=1.00 rootload=1.00
(smt.stats   25   3122  43267  72547  6075/5833/261    3098/375    11   72   22.37)
ramon: poll                 wall=18.000s usage=17.943s mem=23984KiB load=1.00 rootload=1.00
(smt.stats   26   3283  44997  74850  6466/6175/265    3239/388    12   87   22.46)
ramon: poll                 wall=19.000s usage=18.943s mem=24144KiB load=1.00 rootload=1.00
(smt.stats   27   3460  47413  79042  6694/6664/266    3405/401    13   87   22.56)
(smt.stats   28   3561  49811  84134  6822/6739/266    3500/409    13   87   22.56)
(smt.stats   29   3672  52176  88820  7025/6921/269    3608/439    15   96   22.65)
ramon: poll                 wall=20.000s usage=19.941s mem=24272KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:39:04 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.003s
ramon: group.utime          19.995s
ramon: group.stime          0.008s
ramon: group.mempeak        24528KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              1.00
