ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:18:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25876 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/PEfEoqdpkE5W.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             18383
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4096    535  1216/1036/112      89/10     7   28   19.18)
(smt.stats    1    202   7058   1468  1950/1774/115     194/22     9   36   19.37)
(smt.stats    2    313   9099   3166  2395/2146/117     318/33    11   37   19.47)
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 35184372088544&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 35184372088544&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8796093022208 := 35184372088544&8796093022208
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 35184372088544 := 35184372088544 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 35184372088544&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8796093022208 := 35184372088544&8796093022208
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 70368744177376 := 35184372088544 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8796093022208 := 35184372088544&8796093022208
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 70368744177376 := 35184372088544 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 0&8796093022208
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 35184372088545 := 35184372088544 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 0&8796093022208
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 35184372088545 := 35184372088544 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 0&8796093022208
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 43 := 35184372088544 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 0&8796093022208
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 1 := 35184372088544 << 44
(smt.stats    3    414  11165   5310  2496/2268/142     417/44    14   45   19.56)
(smt.stats    4    525  13649   6937  2498/2270/146     531/51    15   52   19.66)
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 1 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 1 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 4 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 16 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 32 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 64 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 32 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 64 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 128 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 256 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 512 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 1024 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2048 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 1024 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2048 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 4096 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 4096 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8192 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 16384 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 32768 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 65536 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 131072 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 262144 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 524288 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 1048576 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2097152 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2097152 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 4194304 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8388608 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 16777216 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 33554432 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 67108864 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 16777216 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 33554432 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 67108864 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 134217728 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 268435456 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 536870912 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 1073741824 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2147483648 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 4294967296 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8589934592 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 17179869184 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 34359738368 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 68719476736 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 137438953472 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 274877906944 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 549755813888 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 1099511627776 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2199023255552 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 4398046511104 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8796093022208 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 5120 := 17592186044416&8796093022208
(smt.stats    5    648  15210   8623  2635/2403/283     667/76    18   90   20.97)
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2048 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2048 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 1 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 2 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022208 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022208 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022207 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022206 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022204 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 16 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 32 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 64 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 128 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 256 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 512 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 1024 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 2048 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4096 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8192 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 16384 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 32768 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 65536 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 131072 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 262144 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 524288 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8192 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8192 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8192 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8192 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 7631 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4096 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4096 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 15 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 14 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 12 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 12 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 2 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 32 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 256 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 32 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 64 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 128 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 256 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 1024 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 2048 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 128 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 128 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 256 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 512 := 17592186044416&8796093022208
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    749  17357  11084  2791/2521/408     820/95    19  113   21.26)
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 32 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 1 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 16 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 64 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 524288 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 1048576 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 2097152 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4194304 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8388608 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 16777216 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 33554432 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 67108864 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 134217728 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 268435456 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 536870912 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 1073741824 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 2147483648 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4294967296 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8589934592 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 17179869184 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 34359738368 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 68719476736 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 34359738368 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 68719476736 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 137438953472 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 274877906944 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 549755813888 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 1099511627776 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 2199023255552 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4398046511104 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022208 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 2199023255552 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4398046511104 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022208 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022208 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4398046511104 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4398046511104 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4398046511104 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4398046511104 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022208 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 8796093022208 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 2199023255552 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 65536 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 65536 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 65536 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 98304 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 65536 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 65536 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 32768 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 32768 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 4096 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 512 := 17592186044416&8796093022208
(smt.stats    7    860  19856  15838  2930/2691/611     999/180    22  169   21.79)
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8448 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 8192 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 4 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 1 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 131072 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 262144 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 16384 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 128 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 64 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 64 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 64 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 16 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 2 := 17592186044416&8796093022208
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186044416&8796093022208
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #586 44) 1 (if #588 2 #674))) 4194304 := 17592186044416&8796093022208
(smt.stats    8    982  22656  20378  2990/2762/691    1238/290    25  212   22.27)
(smt.stats    9   1116  30420  29157  3191/2920/695    1464/322    28  217   22.85)
(smt.stats   10   1217  36099  38267  3333/2964/695    1737/332    28  217   22.85)
ramon: poll                 wall=1.000s usage=0.954s mem=24412KiB load=0.95 rootload=0.93
(smt.stats   11   1328  44279  52867  3430/3112/696    2061/375    29  222   22.96)
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 2050&4
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 18446708889337464834 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 2050&4
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 18446708889337464834 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 1026&4
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 18446708889337463810 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 1026&4
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 18446708889337463810 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 1026&4
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 18446708889337463810 := 48 << 3
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  50266  63230  3501/3243/705    2568/393    30  225   23.15)
(smt.stats   13   1585  61412  77345  3536/3277/706    2743/443    31  232   23.15)
(smt.stats   14   1732  68755  90393  3612/3296/707    3029/479    32  233   23.36)
(smt.stats   15   1833  71397  93244  3804/3425/707    3278/483    32  233   23.55)
ramon: poll                 wall=2.000s usage=1.954s mem=24960KiB load=1.00 rootload=1.00
(smt.stats   16   1944  73643  98885  4014/3753/708    3500/586    33  235   23.64)
(smt.stats   17   2066  79595 111713  4034/3765/710    3715/588    33  235   23.74)
(smt.stats   18   2200  87946 131282  4065/3800/710    3915/616    34  240   23.89)
(smt.stats   19   2347  98735 160126  4110/3845/713    4167/685    35  244   24.08)
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 26388279057408&34359738368
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186048512&34359738368
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 18441695116314808320 := 35184372088626 << 36
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186049536&34359738368
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 18441695116314809344 := 35184372088626 << 36
band: (band[45] (shl[64] (bv2int %0) (mod #337 64)) (if (= #693 63) 0 (if #695 1 #819))) 0 := 17592186056704&34359738368
shl: (shl[64] (bv2int %0) (mod (+ #101 #336) 64)) 18443067306826280960 := 35184372088626 << 36
ramon: poll                 wall=3.000s usage=2.954s mem=25560KiB load=1.00 rootload=1.00
(smt.stats   20   2508 102883 170829  4333/4033/724    4707/878    37  254   24.17)
(smt.stats   21   2609 103134 173010  4334/4034/724    4807/878    37  254   24.27)
(smt.stats   22   2720 105868 182797  4342/4035/726    5081/929    39  257   24.27)
(smt.stats   23   2842 112275 196587  4595/4228/729    5291/973    40  261   24.52)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   24   2976 115596 209234  4878/4537/733    6088/1041    41  265   24.80)
ramon: poll                 wall=4.000s usage=3.954s mem=26324KiB load=1.00 rootload=1.00
(smt.stats   25   3123 125871 228019  4918/4556/735    6383/1206    42  270   24.90)
ramon: poll                 wall=5.000s usage=4.953s mem=26920KiB load=1.00 rootload=1.00
(smt.stats   26   3284 137912 245726  5177/4638/736    6797/1254    43  275   25.47)
(smt.stats   27   3461 148403 267754  5391/5049/759    7565/1398    45  287   25.57)
ramon: poll                 wall=6.000s usage=5.953s mem=27132KiB load=1.00 rootload=1.00
(smt.stats   28   3562 157379 283225  5433/5088/760    8052/1402    45  287   25.67)
(smt.stats   29   3673 167089 300871  5588/5100/760    8334/1675    46  335   25.76)
ramon: poll                 wall=7.001s usage=6.954s mem=27372KiB load=1.00 rootload=1.00
(smt.stats   30   3795 175242 312906  5725/5317/761    8684/1741    47  337   25.86)
(smt.stats   31   3929 184480 333869  5961/5439/761    9052/1758    47  337   26.05)
(smt.stats   32   4076 197905 359967  6014/5634/761    9573/1761    47  337   26.05)
ramon: poll                 wall=8.001s usage=7.953s mem=27608KiB load=1.00 rootload=1.00
(smt.stats   33   4237 213955 409685  6099/5755/765   10188/2061    48  339   26.74)
ramon: poll                 wall=9.000s usage=8.952s mem=29144KiB load=1.00 rootload=1.00
(smt.stats   34   4414 222623 433024  6336/5989/768   10859/2203    49  352   27.12)
(smt.stats   35   4608 233041 460229  6569/6126/778   11437/2353    51  362   27.51)
ramon: poll                 wall=10.000s usage=9.952s mem=29156KiB load=1.00 rootload=1.00
(smt.stats   36   4709 237947 470534  6765/6240/778   11630/2355    51  362   27.51)
(smt.stats   37   4820 245032 495062  6907/6444/778   11943/2355    51  362   27.70)
ramon: poll                 wall=11.000s usage=10.952s mem=29520KiB load=1.00 rootload=1.00
(smt.stats   38   4942 250309 518648  6982/6635/789   12666/2481    52  377   27.89)
(smt.delete-inactive-clauses  :num-deleted-clauses 255)
(smt.stats   39   5076 256117 531778  7142/6640/789   13034/2488    52  377   28.07)
(smt.stats   40   5223 264823 556601  7250/6808/790   13373/2657    53  420   28.17)
ramon: poll                 wall=12.000s usage=11.951s mem=29816KiB load=1.00 rootload=1.00
(smt.stats   41   5384 273605 582562  7527/6916/790   14075/2661    53  420   28.48)
ramon: poll                 wall=13.000s usage=12.951s mem=30188KiB load=1.00 rootload=1.00
(smt.stats   42   5561 280678 606923  7638/7225/793   15054/2854    54  427   28.67)
(smt.stats   43   5755 291184 630197  7833/7319/793   15920/2864    54  427   28.77)
ramon: poll                 wall=14.000s usage=13.951s mem=30416KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5968 303314 663019  8155/7618/793   17129/3195    55  432   29.05)
ramon: poll                 wall=15.000s usage=14.951s mem=30732KiB load=1.00 rootload=1.00
(smt.stats   45   6069 310355 677254  8259/7898/793   18067/3201    55  432   29.24)
ramon: poll                 wall=16.000s usage=15.951s mem=30900KiB load=1.00 rootload=1.00
(smt.stats   46   6180 320255 700671  8478/7947/796   18389/3594    56  443   29.47)
(smt.stats   47   6302 327256 724314  8700/8162/796   19116/3605    56  443   29.56)
ramon: poll                 wall=17.000s usage=16.951s mem=31112KiB load=1.00 rootload=1.00
(smt.stats   48   6436 334647 747376  8819/8417/796   19636/3611    56  443   29.56)
ramon: poll                 wall=18.000s usage=17.950s mem=31720KiB load=1.00 rootload=1.00
(smt.stats   49   6583 343244 757495  8948/8504/796   20449/3620    56  443   29.94)
ramon: poll                 wall=19.000s usage=18.950s mem=31772KiB load=1.00 rootload=1.00
(smt.stats   50   6744 352969 771998  9041/8632/796   21194/3624    56  443   30.04)
ramon: poll                 wall=20.000s usage=19.950s mem=31912KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:19:05 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.001s
ramon: group.utime          19.977s
ramon: group.stime          0.024s
ramon: group.mempeak        32424KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              1.00
