ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:37:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28103 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1376
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Vf646H0XBkXV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             829123
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   86.2069     10000        49          0            1        2)
(sat.ddfw       1      1    43.864     20001        98          1            1        3)
(smt.stats    0    101   1609    234  1325/1175/110     108/13     6   17   51.96)
(smt.stats    1    202   5196   2144  1556/1395/113     214/15     8   23   52.25)
(smt.stats    2    313   7115   4420  2194/1992/115     321/24     9   31   52.35)
(sat.ddfw       1      1   53.9084     40001       196          2            1        5)
(smt.stats    3    414   9442   6377  2458/2231/115     420/24     9   31   52.44)
(smt.stats    4    525   9673   7054  2742/2491/116     497/27    10   33   52.54)
(smt.stats    5    647  11514   9234  2780/2524/118     632/44    12   35   52.64)
(sat.ddfw       1      1   49.0998     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  12549  11231  2827/2567/119     741/51    13   35   52.74)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 2 := 4 << 1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 2 := 4 << 1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711743
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 2 := 576460752303423486 << 1
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711740
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 0 := 288230376151711743 << 2
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711740
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 0 := 288230376151711743 << 2
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711740
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 0 := 288230376151711743 << 2
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&288230376151711740
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&288230376151711740
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&288230376151711740
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #110))) 0 := 288230376151711743 << 2
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&4
band: (band[58] (if (= #114 57) 0 (if #636 1 #798)) (shl[58] (bv2int %0) (+ 58 #801))) 1 := 1&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 1&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&52
band: (band[58] (if (= #114 57) 0 (if #636 1 #798)) (shl[58] (bv2int %0) (+ 58 #801))) 1 := 1&52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&52
band: (band[58] (if (= #114 57) 0 (if #636 1 #798)) (shl[58] (bv2int %0) (+ 58 #801))) 1 := 1&52
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 1&52
band: (band[58] (if (= #114 57) 0 (if #636 1 #798)) (shl[58] (bv2int %0) (+ 58 #801))) 1 := 1&52
(smt.stats    7    859  13489  14430  2912/2653/157     854/61    14   37   52.83)
(smt.stats    8    982  14081  18199  2944/2682/166     920/73    17  104   52.93)
(smt.stats    9   1116  18592  23604  2948/2686/169    1055/73    17  104   53.05)
(sat.ddfw       1      1   44.3459    110001       539          4            1       12)
ramon: poll                 wall=1.000s usage=1.091s mem=55264KiB load=1.09 rootload=1.09
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3 := 91184883872368261&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 91184883872368261&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 1441151880758558726 := 0 << 57
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 91184883872368261&288230376151711742
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&288230376151711742
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 3 := 91184883872368261&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 91184883872368261&4
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 1441151880758558726 := 0 << 57
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 2 := 91184883872368261&288230376151711742
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&288230376151711742
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 4 := 91184883872368261&288230376151711488
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 256 := 91184883872368261&258
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 512 := 91184883872368261&520
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 1152921504606847496 := 0 << 57
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 512 := 91184883872368261&520
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 1152921504606847496 := 0 << 57
(smt.stats   10   1217  20192  26175  2985/2715/197    1156/79    20  122   53.25)
(smt.stats   11   1328  22852  31922  3049/2764/197    1288/79    20  122   53.40)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   12   1450  24221  35205  3090/2808/207    1430/92    21  125   53.59)
(sat.ddfw       1      1   37.2016    160000       784          5            1       17)
(smt.stats   13   1584  26234  38991  3156/2818/209    1555/103    22  140   53.59)
(smt.stats   14   1731  30009  45435  3177/2897/212    1706/110    23  142   53.69)
(smt.stats   15   1832  32427  50261  3184/2903/212    1809/110    24  146   53.69)
(smt.stats   16   1943  34940  56583  3193/2910/212    1922/110    24  146   53.79)
ramon: poll                 wall=2.006s usage=2.152s mem=56020KiB load=1.05 rootload=1.04
(sat.ddfw       1      1   29.7035    220001      1078          6            1       23)
(smt.stats   17   2065  36998  62455  3209/2911/213    2050/114    25  147   53.95)
(smt.stats   18   2199  39045  67436  3242/2928/213    2205/115    25  147   53.95)
(smt.stats   19   2346  44145  76819  3243/2960/214    2351/128    26  150   54.04)
(smt.stats   20   2507  47527  86248  3256/2971/216    2533/132    27  154   54.04)
(smt.stats   21   2608  50452  92730  3257/2972/216    2654/132    27  154   54.04)
(sat.ddfw       1      1   25.8876    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   22   2719  53989 102710  3258/2973/216    2783/132    27  154   54.14)
(smt.stats   23   2841  57879 116542  3262/2976/216    2918/132    27  154   54.14)
ramon: poll                 wall=3.000s usage=3.194s mem=56384KiB load=1.05 rootload=1.06
(smt.stats   24   2975  60577 123981  3271/2981/216    3054/132    27  154   54.23)
(smt.stats   25   3122  65355 134567  3273/2987/216    3208/132    27  154   54.36)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156614
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156614
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156614
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156672
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738156672
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738157056
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 1 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738351616
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738351616
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047741497344
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047741497344
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047758274560
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047758274560
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047825383424
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89051851915264
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738220544
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047738351616
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047741497344
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047758274560
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047825383424
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89051851915264
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89051851915264
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89060441849856
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047758274560
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89047825383424
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89051851915264
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&89060441849856
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&105553116266496
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764748260522590208 := 178095476313220 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764748260522590208 := 178095476313220 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764748260522590208 := 178095476313220 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764748260522590208 := 178095476313220 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&316659348799488
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764924182383034368 := 178095476313256 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&281474976710656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764888998010945536 := 178095476313348 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&281474976710656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764888998010945536 := 178095476313348 << 47
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 0 := 89047738156609&281474976710656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #882 #886) 64)) 5764888998010945536 := 178095476313348 << 47
(sat.ddfw       1      1   22.2037    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=4.162s mem=56780KiB load=0.97 rootload=0.96
(sat.ddfw       1      1   19.4974    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.163s mem=56780KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.4216    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.164s mem=57036KiB load=1.00 rootload=1.01
(smt.stats   26   3283  67560 139174  3457/3058/309    3404/162    28  159   54.74)
ramon: poll                 wall=7.000s usage=7.160s mem=57484KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   15.7706    670001      3284         11            1       68)
(smt.stats   27   3460  70339 148011  3710/3423/315    3762/243    29  178   55.12)
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 6 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&67108868
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 16 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 32 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 64 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 128 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 130 := 89047738156609&201326596
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 130 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 130 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 192 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 8 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 36 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 40 := 89047738156609&134217732
band: (band[58] (if (= #417 63) 0 (if #613 1 #875)) (shl[64] (* 2 #398) (mod #890 64))) 5 := 89047738156609&134217732
(smt.stats   28   3561  72076 154002  3825/3519/358    4026/249    29  178   55.23)
ramon: poll                 wall=8.006s usage=8.049s mem=57840KiB load=0.88 rootload=0.88
(sat.ddfw       1      1   14.1426    790001      3872         12            1       80)
(smt.stats   29   3672  73661 158111  3957/3532/368    4173/252    29  178   55.32)
(smt.stats   30   3794  77055 168570  3991/3704/373    4376/321    30  193   55.32)
ramon: poll                 wall=9.000s usage=8.896s mem=57712KiB load=0.85 rootload=0.85
(smt.stats   31   3928  81608 180974  4020/3717/374    4541/322    30  193   55.32)
(smt.stats   32   4075  86241 193314  4025/3738/377    4829/390    31  215   55.42)
(smt.stats   33   4236  94388 212680  4072/3742/377    5004/431    32  229   55.75)
ramon: poll                 wall=10.000s usage=9.856s mem=58456KiB load=0.96 rootload=0.96
(smt.stats   34   4413  98986 225917  4157/3836/377    5222/434    32  229   55.89)
(sat.ddfw       1      1   12.7726    920001      4509         13            1       93)
(smt.stats   35   4607 104952 239940  4260/3886/380    5538/511    33  234   56.08)
ramon: poll                 wall=11.000s usage=10.855s mem=58836KiB load=1.00 rootload=1.00
(smt.stats   36   4708 107798 248650  4413/3992/382    5684/515    33  234   56.08)
(sat.ddfw       1      1   11.8876   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=11.855s mem=58856KiB load=1.00 rootload=1.00
(smt.stats   37   4819 111221 256888  4729/4221/382    5841/562    34  249   56.18)
(smt.stats   38   4941 115000 265521  4847/4454/382    6084/569    34  249   56.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 198)
(smt.stats   39   5075 117946 275867  4885/4566/382    6106/569    34  249   56.27)
ramon: poll                 wall=13.000s usage=12.854s mem=58896KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.1202   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.851s mem=58864KiB load=1.00 rootload=1.00
(smt.stats   40   5222 120789 285828  5078/4634/382    6311/569    34  249   56.46)
ramon: poll                 wall=15.000s usage=14.759s mem=59028KiB load=0.91 rootload=0.91
(sat.ddfw       1      1   10.4167   1370001      6715         16            1      139)
(smt.stats   41   5383 124079 298222  5259/4919/384    6573/722    35  250   56.56)
ramon: poll                 wall=16.002s usage=15.867s mem=59308KiB load=1.11 rootload=1.10
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   42   5560 128782 309764  5383/5011/384    6793/726    35  250   56.65)
ramon: poll                 wall=17.000s usage=16.886s mem=59076KiB load=1.02 rootload=1.02
(smt.stats   43   5754 134358 329394  5473/5146/384    7068/834    36  251   56.65)
(sat.ddfw       1      1   9.96483   1540001      7549         17            1      156)
(smt.stats   44   5967 142719 358073  5536/5193/384    7382/836    36  251   56.96)
ramon: poll                 wall=18.000s usage=17.933s mem=59372KiB load=1.05 rootload=1.05
(smt.stats   45   6068 145665 368419  5597/5252/384    7512/837    36  251   56.96)
(smt.stats   46   6179 149284 382468  5690/5332/384    7673/839    36  251   56.96)
(smt.stats   47   6301 152391 388714  5781/5401/384    7809/840    36  251   57.06)
ramon: poll                 wall=19.000s usage=18.959s mem=59408KiB load=1.03 rootload=1.03
(sat.ddfw       1      1   9.42902   1720001      8431         18            1      174)
(smt.stats   48   6435 155869 401619  5902/5551/384    7979/841    36  251   57.06)
(smt.stats   49   6582 161045 421602  5974/5662/385    8180/975    37  253   57.06)
(smt.stats   50   6743 167878 455974  6008/5701/385    8363/979    37  253   57.15)
ramon: poll                 wall=20.000s usage=19.946s mem=59576KiB load=0.99 rootload=0.98
ramon: end                  Fri Nov  1 22:37:27 2024
ramon: root.execname        z3
ramon: root.utime           20.010s
ramon: root.stime           0.000s
ramon: group.total          20.029s
ramon: group.utime          20.021s
ramon: group.stime          0.008s
ramon: group.mempeak        59832KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              1.00
