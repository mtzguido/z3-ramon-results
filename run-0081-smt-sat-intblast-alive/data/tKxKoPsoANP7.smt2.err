ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:16:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28138 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1355
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tKxKoPsoANP7.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             557518
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts     :learned/bin    :gc          :time)
(sat.stats          :decisions   :clauses/bin :units       :memory       )
(sat.stats      0      0    0     8/8     0/0  79       0    18.03   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9 :time 0.00)
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 0 := 111 >>l 55
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #62))) 1 := 1 << 1
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 0&2
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #61 #98) 64)) 28416 := 28416 >>l 63
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 131 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 224 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 316 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 400 :time 0.00)
(sat.stats    123   1076    0   221/220   112/17 114       0    18.61   0.14)
(sat.stats    123   1076    0   245/244   112/17 114       0    18.61   0.15)
(sat.stats    123   1076    0   245/244   112/17 114       0    18.61   0.15)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :elim-bin 68 :time 0.00)
 (sat-probing :cost 272218.61 :time 0.00)
(sat.stats    123   1076    0    64/63   105/21 114       0    18.61   0.15)
(sat.stats    128   1171    1    90/89   111/23 114       0    18.70   0.17)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin    :units         :memory       )
(sat.stats    134   1219    2   160/159   117/23 114       0    18.80   0.21)
(sat.stats    144   1360    3   296/295   129/24 114       0    18.80   0.22)
(sat.stats    170   1798    4   382/381   158/28 114       0    18.80   0.23)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 1085 :time 0.00)
(sat.stats    317   3925    5   739/738   309/41 117       0    18.90   0.36)
(sat.stats    320   4014    6   739/738   312/41 117       0    18.90   0.36)
(sat.stats    323   4101    7   739/738   315/41 117       0    18.90   0.36)
(sat.stats    326   4184    8   739/738   318/41 117       0    18.90   0.36)
(sat.stats    330   4244    9   739/738   322/41 117       0    18.90   0.36)
(sat.stats    333   4270   10   739/738   325/41 117       0    18.90   0.36)
(sat.stats    336   4295   11   739/738   328/41 117       0    18.90   0.36)
(sat.stats    339   4379   12   739/738   331/41 117       0    18.90   0.37)
(sat.stats    342   4454   13   739/738   334/41 117       0    18.90   0.37)
(sat.stats    345   4532   14   739/738   337/41 117       0    18.90   0.37)
(sat.stats :conflicts   :restarts       :learned/bin       :gc          :time)
(sat.stats       :decisions   :clauses/bin      :units         :memory       )
(sat.stats    599   6494   29  2766/2765   602/53 117       0    19.28   0.82)
ramon: poll                 wall=1.000s usage=0.946s mem=20540KiB load=0.95 rootload=0.94
(sat.stats    717   8010   33  3494/3493   728/59 117       0    19.56   0.98)
(sat.stats   1067  11327   62  5687/5686  1121/65 117       0    19.92   1.36)
ramon: poll                 wall=2.000s usage=1.946s mem=21516KiB load=1.00 rootload=1.00
(sat.stats   1621  15829   83  8885/8884  1732/89 117       0    20.85   2.11)
ramon: poll                 wall=3.000s usage=2.945s mem=22416KiB load=1.00 rootload=1.00
(sat.stats   2608  25458  111 17766/17765  2914/175 117       0    22.99   3.61)
ramon: poll                 wall=4.000s usage=3.945s mem=24324KiB load=1.00 rootload=1.00
(sat.stats   3595  35500  150 20246/20245  4037/278 117       0    25.93   4.61)
ramon: poll                 wall=5.000s usage=4.945s mem=26696KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.945s mem=28196KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.945s mem=30256KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.944s mem=30736KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   6839  72358  231 32780/32779  6174/347 117       0    29.75   8.51)
ramon: poll                 wall=9.000s usage=8.944s mem=31600KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.942s mem=32560KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 40073 :time 0.00)
ramon: poll                 wall=11.000s usage=10.942s mem=33268KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 3442 :elim-clauses 3 :cost 42470 :time 0.00)
ramon: poll                 wall=12.000s usage=11.942s mem=33524KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.942s mem=33840KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 42 :elim-clauses 3 :cost 41524 :time 0.00)
ramon: poll                 wall=14.002s usage=13.943s mem=34068KiB load=1.00 rootload=1.00
(sat.stats  10694 116668  235 52697/52697  8598/576 127       0    35.36  13.95)
ramon: poll                 wall=15.000s usage=14.940s mem=34188KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.940s mem=34408KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.940s mem=34620KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.939s mem=34756KiB load=1.00 rootload=1.00
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 17595 := 36028797018973903 >>l 39
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #62))) 10918 := 36028797018963963 << 17
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 22781 := 65536&72057594036879360
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 22782 := 65536&72057594036748288
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 11556 := 65536&72057594037272576
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 44576 := 65536&72057594037534720
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 56960 := 65536&72057594037010432
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 65536 := 65536&72057594037010432
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 65368 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 65344 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 256 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 6144 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 512 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 4096 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 1024 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 40960 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 49152 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 32768 := 65536&72057594036355072
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 16 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #61 #98) 64)) 0 := 9223372036857319168 >>l 47
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #138 #142) 64)) 288230376151711742 := 72057594037927934 << 16
(sat.stats  14462 153559  239 63129/63123 10911/666 127       0    36.91  18.30)
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 65536 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 19513 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 2134 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 36336 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 4 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 8 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 16960 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 32 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 57088 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 128 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 43008 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 512 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 1024 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 8192 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 4096 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 16384 := 65536&72057594037796864
band: (band[56] (lshr[56] (bv2int %0) (mod #61 56)) (shl[56] (bv2int %1) (+ 56 #124))) 0 := 65536&72057594037796864
band: (band[56] (lshr[64] (* 256 #61) (mod #99 64)) (shl[64] (* 2 #57) (mod #147 64))) 32768 := 65536&72057594037796864
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 55987 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 56313 :time 0.00)
ramon: poll                 wall=19.000s usage=18.939s mem=38736KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.939s mem=40808KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:17:16 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          19.999s
ramon: group.utime          19.991s
ramon: group.stime          0.008s
ramon: group.mempeak        41124KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
