ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:49:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40763 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/kR6FQGdJDbyi.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3062698
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4211    669  1313/1022/112      91/29    10   20   19.25)
(smt.stats    1    202   6592   1947  2251/2037/116     187/34    13   24   19.34)
(smt.stats    2    313   7844   2814  2423/2184/118     299/40    14   24   19.55)
(smt.stats    3    414   9890   4034  2491/2277/121     402/46    16   25   19.55)
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 32 := 32&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #741 #745) 64)) 32 := 3432 << 5
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 32 := 32&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #741 #745) 64)) 32 := 3432 << 5
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 1 := 32&1
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 32&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #741 #745) 64)) 1 := 3432 << 5
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 32&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #741 #745) 64)) 0 := 3432 << 5
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 32&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #741 #745) 64)) 0 := 3432 << 5
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 32 := 32&109824
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 32 := 32&109824
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 31 := 32&109824
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 32&109824
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1800 := 1716 << 6
(smt.stats    4    525  13817   5445  2529/2313/140     523/54    18   33   19.65)
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 1&3442
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1800 := 1721 << 1
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 1&3442
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1800 := 1721 << 1
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 1&3442
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 1722 := 1721 << 1
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 1&3442
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 1 := 1&3442
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 1&3442
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 1 := 1&3442
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 1&3442
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 1 := 1&3442
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 1 := 1&3442
(smt.stats    5    647  20266   7551  2575/2352/162     641/54    19   38   19.76)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  23468  10149  2604/2377/162     743/54    19   38   20.01)
(smt.stats    7    859  27191  12420  2607/2380/162     851/54    19   38   20.01)
(smt.stats    8    981  29578  14051  2615/2389/169     975/58    20   43   20.01)
ramon: poll                 wall=1.000s usage=0.910s mem=21320KiB load=0.91 rootload=0.90
(smt.stats    9   1115  31037  15809  2714/2401/171    1106/70    21   43   20.20)
(smt.stats   10   1216  31590  16439  2909/2521/171    1214/79    22   46   20.40)
(smt.stats   11   1327  32840  17274  2969/2692/171    1348/80    22   46   20.40)
ramon: poll                 wall=2.000s usage=1.909s mem=21612KiB load=1.00 rootload=1.00
(smt.stats   12   1449  34624  20116  3121/2788/171    1496/82    22   46   20.40)
(smt.stats   13   1583  37011  23133  3176/2937/171    1660/83    22   46   20.50)
(smt.stats   14   1730  39296  26161  3337/2988/171    1839/86    22   46   20.50)
(smt.stats   15   1831  40971  28212  3383/3138/171    2043/87    22   46   20.50)
(smt.stats   16   1942  42346  30145  3454/3165/171    2160/87    22   46   20.59)
(smt.stats   17   2064  44852  36022  3484/3244/171    2298/89    22   46   20.59)
ramon: poll                 wall=3.000s usage=2.909s mem=21816KiB load=1.00 rootload=1.00
(smt.stats   18   2198  48987  40088  3525/3258/171    2456/90    22   46   20.69)
(smt.stats   19   2345  52077  45541  3605/3317/171    2613/92    22   46   20.78)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   20   2506  54966  49634  3665/3421/172    2770/225    23   47   20.78)
(smt.stats   21   2607  56317  51601  3703/3454/172    2907/225    23   47   20.78)
(smt.stats   22   2718  57964  54651  3712/3483/172    3023/225    23   47   20.78)
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 8 := 8&4398046511103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #741 #745) 64)) 4398046511103 := 2596 << 3
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 2 := 8&6591
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 4 := 8&6591
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 4 := 8&6591
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 8 := 8&6591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #741 #745) 64)) 17592186051007 := 2596 << 3
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 8 := 8&6591
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #741 #745) 64)) 17592186051007 := 2596 << 3
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 8 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 6 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 4 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 4 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 4 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 4 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 2 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 8 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 0 := 1298 << 4
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 0 := 1298 << 4
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 0 := 1298 << 4
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 0 := 1298 << 4
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #109))) 0 := 1298 << 4
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 2 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 4 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 8 := 8&20768
(smt.stats   23   2840  61501  59277  3787/3487/173    3142/278    24   52   21.07)
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 8 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 6 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 4 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 2 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 2 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 4 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 4 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&20768
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 1 := 8&20768
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 1 := 8&20768
(smt.stats   24   2974  63578  66468  3832/3599/260    3277/293    26   76   21.17)
ramon: poll                 wall=4.000s usage=3.909s mem=22344KiB load=1.00 rootload=1.00
(smt.stats   25   3121  68314  73823  3865/3622/260    3447/293    26   76   21.17)
(smt.stats   26   3282  72050  83745  3974/3655/262    3615/322    27   79   21.27)
(smt.stats   27   3459  75858  92459  4089/3797/264    3854/334    28   83   21.37)
ramon: poll                 wall=5.000s usage=4.908s mem=22576KiB load=1.00 rootload=1.00
(smt.stats   28   3560  77656  96833  4150/3859/264    3974/353    29   90   21.37)
(smt.stats   29   3671  79644  99306  4256/3943/264    4087/357    29   90   21.46)
ramon: poll                 wall=6.000s usage=5.907s mem=22772KiB load=1.00 rootload=1.00
(smt.stats   30   3793  81996 104296  4559/4158/264    4230/357    29   90   21.56)
(smt.stats   31   3927  84741 110783  4769/4433/264    4385/360    29   90   21.56)
(smt.stats   32   4074  87726 118107  4846/4536/264    4579/366    29   90   21.65)
(smt.stats   33   4235  91607 130660  4926/4624/264    4856/370    29   90   21.79)
ramon: poll                 wall=7.000s usage=6.907s mem=23144KiB load=1.00 rootload=1.00
(smt.stats   34   4412  95180 139235  5073/4832/267    5107/520    31   98   21.88)
(smt.stats   35   4606  98764 148983  5199/4919/269    5347/522    31   98   21.98)
(smt.stats   36   4707  99867 153299  5250/4991/269    5454/535    32   99   21.98)
ramon: poll                 wall=8.000s usage=7.907s mem=23280KiB load=1.00 rootload=1.00
(smt.stats   37   4818 101135 156948  5351/5015/269    5587/537    32   99   22.07)
(smt.stats   38   4940 103027 165097  5610/5264/269    5745/537    32   99   22.07)
(smt.delete-inactive-clauses  :num-deleted-clauses 214)
(smt.stats   39   5074 107289 177173  5638/5393/269    5704/537    32   99   22.07)
ramon: poll                 wall=9.000s usage=8.907s mem=23468KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   40   5221 112584 192623  5667/5416/270    5881/580    33  103   22.18)
(smt.stats   41   5382 118898 208678  5669/5418/271    6087/593    34  104   22.18)
(smt.stats   42   5559 126616 221235  5730/5454/272    6357/606    35  109   22.37)
(smt.stats   43   5753 133874 234318  5817/5481/272    6641/608    35  109   22.47)
ramon: poll                 wall=10.001s usage=9.908s mem=23880KiB load=1.00 rootload=1.00
(smt.stats   44   5966 139473 251905  5973/5583/272    6951/610    35  109   22.56)
(smt.stats   45   6067 141870 256865  6003/5714/272    7123/613    35  109   22.66)
(smt.stats   46   6178 145472 266032  6068/5765/273    7309/692    36  112   22.66)
ramon: poll                 wall=11.000s usage=10.901s mem=24028KiB load=0.99 rootload=0.99
(smt.stats   47   6300 149511 277675  6108/5843/275    7482/701    37  118   22.66)
(smt.stats   48   6434 154359 288901  6172/5909/276    7780/791    38  125   22.75)
(smt.stats   49   6581 158794 296830  6184/5917/277    7953/791    38  125   22.75)
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 0 := 8&24800
band: (band[42] (if (= #113 41) 1 (if #582 2 #662)) (shl[42] (bv2int %0) (+ 42 #665))) 8 := 8&24800
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 8 := 8&24800
band: (band[42] (if (= #334 63) 1 (if #562 2 #734)) (shl[64] (* 2 #107) (mod #749 64))) 8 := 8&24800
(smt.stats   50   6742 162580 309791  6218/5925/277    8162/793    38  125   22.85)
ramon: poll                 wall=12.000s usage=11.901s mem=24220KiB load=1.00 rootload=1.00
(smt.stats   51   6919 166039 323466  6391/5998/277    8374/841    39  131   22.85)
(smt.stats   52   7113 169436 337286  6412/6125/282    8630/841    39  131   23.18)
(smt.stats   53   7326 175164 357050  6499/6158/282    8940/882    40  135   23.18)
ramon: poll                 wall=13.000s usage=12.901s mem=24620KiB load=1.00 rootload=1.00
(smt.stats   54   7560 179072 368320  6638/6361/283    9348/918    41  136   23.28)
(smt.stats   55   7661 181631 379051  6671/6377/283    9574/918    41  136   23.37)
(smt.stats   56   7772 184214 389115  6698/6419/283    9694/918    41  136   23.37)
ramon: poll                 wall=14.000s usage=13.901s mem=24800KiB load=1.00 rootload=1.00
(smt.stats   57   7894 187108 404578  6708/6432/283    9890/918    41  136   23.37)
(smt.stats   58   8028 189205 416147  6725/6443/284   10096/948    42  137   23.47)
(smt.stats   59   8175 193305 423863  6788/6450/284   10334/949    42  137   23.47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   60   8336 198491 439565  6965/6542/284   10614/950    42  137   23.56)
ramon: poll                 wall=15.000s usage=14.900s mem=25164KiB load=1.00 rootload=1.00
(smt.stats   61   8513 203980 463002  7024/6697/284   11069/954    42  137   23.66)
(smt.stats   62   8707 207642 477424  7187/6806/285   11376/1068    43  137   23.66)
(smt.stats   63   8920 212003 495667  7324/6952/285   11644/1070    43  137   23.75)
ramon: poll                 wall=16.000s usage=15.900s mem=25208KiB load=1.00 rootload=1.00
(smt.stats   64   9154 217438 510705  7596/7315/286   11989/1124    44  137   23.85)
ramon: poll                 wall=17.000s usage=16.900s mem=25328KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.900s mem=25596KiB load=1.00 rootload=1.00
(smt.stats   65   9411 221381 524936  8102/7323/286   12437/1155    44  137   24.17)
(smt.stats   66   9512 222446 536700  8170/7892/288   12735/1155    44  137   24.17)
(smt.stats   67   9623 226896 552529  8193/7895/288   13011/1252    45  142   24.17)
(smt.stats   68   9745 231702 585914  8264/7943/288   13370/1255    45  142   24.26)
(smt.stats   69   9879 236650 600659  8306/8007/289   13632/1310    46  151   24.26)
(smt.delete-inactive-clauses  :num-deleted-clauses 53)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10026 241558 617332  8337/8059/289   13870/1310    46  151   24.26)
(smt.stats   71  10187 246832 645130  8350/8064/289   14073/1311    46  151   24.26)
ramon: poll                 wall=19.001s usage=18.901s mem=25788KiB load=1.00 rootload=1.00
(smt.stats   72  10364 251443 673199  8376/8082/289   14421/1312    46  151   24.39)
(smt.stats   73  10558 255799 692864  8457/8179/290   14765/1438    47  153   24.48)
(smt.stats   74  10771 261316 744421  8513/8184/290   15188/1440    47  153   24.48)
ramon: poll                 wall=20.000s usage=19.898s mem=25928KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:49:46 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.000s
ramon: group.total          19.965s
ramon: group.utime          19.961s
ramon: group.stime          0.004s
ramon: group.mempeak        26184KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.067s
ramon: loadavg              0.99
