ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:51:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28535 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1277
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CKcSHG0JLxDx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4117462
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 1&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 1&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 2&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 2&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 1&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 2&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 2&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 1&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 4&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1 := 1&1073741823
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 1 := 2251799813685247 << 30
(smt.stats    0    101   3946   1648  1223/1103/114      93/11     4   17   19.26)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 1&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 2&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 4&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 8&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 5&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 4&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 8&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 16&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 4&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 8&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 16&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 32&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 8&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 8&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8 := 8&1073741823
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 8 := 2251799813685247 << 30
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 8&1073741823
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8 := 8&1073741823
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 8 := 2251799813685247 << 30
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8 := 8&1073741823
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 8 := 9 << 30
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8 := 8&536870911
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 8 := 8 << 29
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8 := 8&536870911
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 8 := 8 << 29
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8 := 8&536870911
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 8 := 9 << 29
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8 := 8&536870911
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 8 := 34359738368 << 29
(smt.stats    1    202   5155   2852  1871/1683/171     187/19     9   31   19.65)
(smt.stats    2    313   7366   5033  2325/1933/171     297/40    10   33   19.84)
(smt.stats    3    414   7842   6018  2478/2257/178     412/57    12   46   19.84)
(smt.stats    4    525   9174   8343  2674/2407/185     537/85    14   60   20.04)
(smt.stats    5    647  11558  10794  2749/2473/187     688/118    16   62   20.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16249  14073  2781/2530/187     793/119    16   62   20.04)
(smt.stats    7    859  18958  17681  2805/2554/193     899/134    18   65   20.04)
(smt.stats    8    981  22013  25101  2831/2569/193    1053/134    18   65   20.14)
(smt.stats    9   1116  24077  28540  2914/2671/198    1200/160    20   72   20.14)
(smt.stats   10   1217  25491  31464  2980/2701/199    1322/160    20   72   20.24)
(smt.stats   11   1328  26507  35129  3015/2765/200    1455/182    21   74   20.24)
(smt.stats   12   1450  28128  38463  3021/2778/202    1591/218    23   81   20.24)
(smt.stats   13   1584  31888  41135  3042/2782/202    1730/219    23   81   20.24)
(smt.stats   14   1731  33823  46352  3069/2809/202    1910/220    23   81   20.35)
(smt.stats   15   1832  34901  49696  3081/2828/202    2018/221    23   81   20.35)
(smt.stats   16   1943  36544  54446  3163/2894/202    2163/221    23   81   20.44)
(smt.stats   17   2065  38444  59520  3189/2930/207    2319/297    25   90   20.44)
(smt.stats   18   2199  40545  64451  3196/2935/208    2528/297    25   90   20.54)
(smt.stats   19   2346  46073  74654  3206/2946/208    2733/303    26   97   20.69)
ramon: poll                 wall=1.000s usage=0.939s mem=21808KiB load=0.94 rootload=0.93
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16 := 1073741808&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 64 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 128 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 256 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 512 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 256 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1024 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 2048 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 4096 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8192 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16384 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 4096 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8192 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16384 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 32768 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 65536 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 131072 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 262144 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 524288 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1048576 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 262144 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1048576 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 2097152 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 4194304 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8388608 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16777216 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 33554432 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 67108864 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 134217728 := 536870912&17179869183
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 268435456 := 536870912&17179869183
(smt.stats   20   2507  48405  79073  3412/3116/385    2979/317    27   99   21.69)
(smt.stats   21   2608  53597  88480  3412/3116/385    3110/317    27   99   21.69)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   22   2719  61299  98387  3398/3137/386    3286/384    28  135   21.89)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 7 := 3221225479&67108863
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 3221225479 := 171798692001 << 26
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 7 := 3221225479&67108863
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 2251803034910727 := 2251765458141191 << 26
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 7 := 3221225479&67108863
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 2251803034910727 := 274911461424 << 26
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 7 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 7 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 7 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 6 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 3221225472&67108863
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 2251799813685247 := 2251524969332784 << 26
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 3221225472&67108863
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 3221225473 := 33554480 << 26
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 2 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 4 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 3221225472&67108863
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 3221225473 := 33554480 << 26
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 4 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 2 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 32 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 128 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 64 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16 := 3221225472&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16 := 3221225472&67108863
(smt.stats   23   2841  65784 107524  3485/3221/418    3472/479    30  145   21.99)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16 := 2684354560&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 256 := 1744830464&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 512 := 1744830464&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 512 := 2013265920&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 512 := 2013265920&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 16384 := 3758096384&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 524288 := 3758096384&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 65536 := 3758096384&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 32768 := 3758096384&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8388608 := 3758096384&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1048576 := 3758096384&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1048576 := 3758096384&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1048576 := 3758096384&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 262144 := 3758096384&67108863
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 131072 := 3758096384&67108863
(smt.stats   24   2975  68519 114642  3600/3244/418    3766/483    30  145   22.18)
(smt.stats   25   3122  75817 124985  3606/3339/469    3952/579    31  155   22.18)
(smt.stats   26   3283  87945 149511  3609/3342/469    4120/596    32  157   22.29)
(smt.stats   27   3460  98565 175572  3617/3350/477    4450/629    33  160   22.29)
(smt.stats   28   3561 101526 186744  3620/3353/478    4558/629    33  160   22.39)
(smt.stats   29   3672 109085 204338  3620/3353/478    4661/695    34  174   22.39)
(smt.stats   30   3794 116754 224830  3620/3353/478    4811/695    34  174   22.39)
ramon: poll                 wall=2.000s usage=1.937s mem=23680KiB load=1.00 rootload=0.99
(smt.stats   31   3928 122275 240120  3633/3366/482    5042/753    35  178   22.49)
(smt.stats   32   4075 129268 260227  3635/3368/483    5212/753    35  178   22.49)
(smt.stats   33   4236 134718 271404  3698/3371/483    5432/760    36  200   22.66)
(smt.stats   34   4413 140375 288875  3969/3504/483    5704/765    36  200   22.75)
(smt.stats   35   4607 148966 315226  4034/3756/484    6158/867    37  200   22.75)
(smt.stats   36   4708 150696 318810  4305/3776/484    6356/871    37  200   22.85)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 27111981058&3
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 2 := 27111981058&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 1155173331532513282 := 17179869201 << 2
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 2 := 27648851970&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 1155173332069384194 := 17179869201 << 2
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 2 := 171530256386&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 7908321117192847362 := 117809611072 << 2
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 2 := 157571612674&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 10545178685059629058 := 157101852972 << 2
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 2 := 157571612674&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 10576703882451222530 := 157571612673 << 2
(smt.stats   37   4819 153227 332779  4478/4046/484    6579/878    37  200   23.04)
(smt.stats   38   4941 156318 350581  4543/4240/490    6960/907    38  201   23.21)
(smt.delete-inactive-clauses  :num-deleted-clauses 5)
ramon: poll                 wall=3.000s usage=2.936s mem=24592KiB load=1.00 rootload=1.00
(smt.stats   39   5075 162666 364729  4568/4299/492    7184/907    38  201   23.32)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   40   5222 169120 384924  4725/4306/492    7363/1103    39  209   23.41)
(smt.stats   41   5383 174815 411186  5060/4750/494    7808/1127    40  210   23.41)
(smt.stats   42   5560 178378 427410  5248/4976/500    8597/1229    41  215   23.60)
(smt.stats   43   5754 183776 451994  5255/4985/500    9223/1229    41  215   23.60)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 10 := 14&127
(smt.stats   44   5967 187075 466331  5297/5009/501    9733/1514    42  225   23.70)
(smt.stats   45   6068 190113 472746  5322/5051/501    9874/1514    42  225   23.70)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 14 := 14&63
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 14 := 14 << 6
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 14 := 14&63
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 14 := 14 << 6
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 14 := 14&63
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 14 := 14 << 6
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 14 := 14&63
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 14 := 1845493760 << 6
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 14 := 14&63
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 14 := 1811939328 << 6
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 14 := 14&63
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 14 := 1811939328 << 6
(smt.stats   46   6179 192698 485259  5351/5055/503    9993/1630    43  236   23.70)
(smt.stats   47   6301 194645 489539  5578/5094/508   10130/1638    43  236   23.80)
ramon: poll                 wall=4.000s usage=3.935s mem=25164KiB load=1.00 rootload=0.99
(smt.stats   48   6435 196629 499185  5724/5397/510   10288/1668    44  242   23.90)
(smt.stats   49   6582 199384 505265  5765/5456/510   10466/1673    44  242   23.90)
(smt.stats   50   6743 202629 524015  5807/5526/510   10899/1673    44  242   24.00)
(smt.stats   51   6920 209724 540769  5867/5588/514   11626/1727    45  245   24.09)
(smt.stats   52   7114 215099 568326  5937/5624/524   12340/1768    46  271   24.19)
(smt.stats   53   7327 218555 590378  6151/5689/524   13269/1775    46  271   24.39)
ramon: poll                 wall=5.000s usage=4.935s mem=25832KiB load=1.00 rootload=1.00
(smt.stats   54   7561 225620 626051  6224/5946/527   15123/1936    47  288   24.58)
(smt.stats   55   7662 229865 639454  6306/6023/528   15467/2111    48  294   24.68)
(smt.stats   56   7773 232816 653820  6550/6273/529   15614/2112    48  294   24.77)
ramon: poll                 wall=6.000s usage=5.935s mem=26252KiB load=1.00 rootload=1.00
(smt.stats   57   7895 235358 662870  6788/6443/530   15810/2234    49  306   24.87)
(smt.stats   58   8029 238530 676939  6984/6619/530   16070/2235    49  306   24.87)
(smt.stats   59   8176 244681 718383  7030/6742/530   16257/2238    49  306   24.87)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8337 249430 734884  7058/6774/530   16436/2238    49  306   25.15)
(smt.stats   61   8514 253280 750111  7080/6802/531   16684/2418    50  314   25.15)
ramon: poll                 wall=7.000s usage=6.935s mem=26704KiB load=1.00 rootload=1.00
(smt.stats   62   8708 259835 760898  7416/6822/532   16971/2422    50  314   25.34)
(smt.stats   63   8921 265498 794907  7728/7205/532   17443/2427    50  314   25.43)
(smt.stats   64   9155 275654 866710  7879/7472/532   18329/2585    51  315   25.62)
(smt.stats   65   9412 281800 944857  7922/7634/532   18793/2585    51  315   25.62)
ramon: poll                 wall=8.000s usage=7.934s mem=26984KiB load=1.00 rootload=1.00
(smt.stats   66   9513 283301 964641  7942/7658/532   19005/2585    51  315   25.62)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   67   9624 287865 1002621  7943/7667/536   19207/3132    52  329   25.72)
(smt.stats   68   9746 297623 1061532  7948/7672/536   20053/3132    52  329   25.72)
(smt.stats   69   9880 303083 1102314  7973/7693/537   20712/3478    53  341   25.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 12)
(smt.stats   70  10027 307038 1123238  7998/7704/537   21515/3478    53  341   25.91)
(smt.stats   71  10188 309810 1158546  8033/7722/537   21735/3482    53  341   25.91)
ramon: poll                 wall=9.000s usage=8.934s mem=27380KiB load=1.00 rootload=1.00
(smt.stats   72  10365 315928 1217477  8040/7760/537   22254/3482    53  341   26.01)
(smt.stats   73  10559 320529 1246535  8074/7791/539   22877/3845    54  354   26.01)
(smt.stats   74  10772 325648 1275150  8148/7799/539   23145/3847    54  354   26.20)
(smt.stats   75  11006 335678 1330990  8207/7924/545   23507/3917    55  384   26.20)
ramon: poll                 wall=10.000s usage=9.934s mem=28024KiB load=1.00 rootload=1.00
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 8 := 2234210379104257&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 9 := 2234210379104257&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 1 := 2234210379104257&255
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 78795404044402689 := 2234210378842153 << 8
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 2234211419291648&255
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 78795405084590080 := 72894185015601 << 8
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 2234211419291648&255
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 78795405084590080 := 72894185015601 << 8
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 2234211419291648&255
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 1013292327763968000 := 72894185015601 << 8
(smt.stats   76  11263 343759 1364027  8518/7946/545   24085/3926    55  384   26.39)
(smt.stats   77  11545 347895 1402589  8589/8306/551   25272/4070    56  385   26.57)
(smt.stats   78  11646 351947 1453047  8607/8325/553   25494/4208    57  393   26.66)
(smt.stats   79  11757 353745 1458436  8635/8325/553   25611/4210    57  393   26.66)
(smt.stats   80  11879 359303 1513270  8676/8371/553   25750/4210    57  393   26.66)
(smt.stats   81  12013 362047 1547496  8713/8431/557   26155/4287    58  401   26.66)
ramon: poll                 wall=11.000s usage=10.934s mem=28648KiB load=1.00 rootload=1.00
(smt.stats   82  12160 369278 1604150  8721/8431/557   26334/4287    58  401   27.13)
(smt.stats   83  12321 377145 1691880  8721/8439/557   26526/4325    59  457   27.13)
(smt.stats   84  12498 383949 1753272  8726/8444/557   27168/4325    59  457   27.22)
(smt.stats   85  12692 391288 1847299  8728/8446/557   27941/4325    59  457   27.48)
(smt.stats   86  12905 395928 1912281  8733/8451/557   28314/4325    59  457   27.58)
ramon: poll                 wall=12.000s usage=11.934s mem=29004KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   87  13139 401686 1989774  8741/8459/559   28678/4672    60  476   27.58)
(smt.stats   88  13396 411572 2104294  8756/8468/559   29434/4756    61  477   27.67)
ramon: poll                 wall=13.000s usage=12.917s mem=29252KiB load=0.98 rootload=0.98
(smt.stats   89  13678 424969 2256086  8759/8475/560   30032/4826    62  478   27.77)
(smt.stats   90  13988 438739 2399648  8771/8487/560   31210/4826    62  478   27.86)
(smt.stats   91  14089 439616 2429663  8773/8489/560   32055/4826    62  478   27.96)
(smt.stats   92  14200 442167 2460874  8783/8489/560   32469/4826    62  478   28.05)
(smt.stats   93  14322 444559 2481863  8795/8505/560   32967/4826    62  478   28.15)
(smt.stats   94  14456 447056 2519935  8807/8519/560   33313/4826    62  478   28.15)
ramon: poll                 wall=14.000s usage=13.917s mem=29700KiB load=1.00 rootload=1.00
(smt.stats   95  14603 451383 2551628  8812/8526/560   33527/4826    62  478   28.15)
(smt.stats   96  14764 457623 2620841  8916/8531/561   33885/5196    63  482   28.15)
(smt.stats   97  14941 459754 2654057  9062/8642/561   34220/5196    63  482   28.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 1050)
(smt.stats   98  15135 464508 2709296  9065/8781/561   33408/5196    63  482   28.24)
(smt.stats   99  15348 467359 2738547  9068/8784/561   33676/5196    63  482   28.34)
ramon: poll                 wall=15.000s usage=14.915s mem=29924KiB load=1.00 rootload=1.00
(smt.stats  100  15582 471025 2796935  9073/8789/562   34056/5367    64  484   28.34)
(smt.stats  101  15839 474599 2860378  9078/8794/563   34336/5367    64  484   28.43)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 0&7
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 0 := 51540657055 << 3
(smt.stats  102  16121 476647 2885378  9328/8799/563   34637/5376    65  485   28.53)
(smt.stats  103  16431 486083 2936300  9746/9244/563   35074/5379    65  485   28.63)
(smt.stats  104  16771 489012 2977960  9811/9486/563   35455/5379    65  485   28.63)
(smt.stats  105  16872 489861 2995856  9822/9537/565   35541/5523    66  510   28.63)
ramon: poll                 wall=16.000s usage=15.915s mem=30300KiB load=1.00 rootload=1.00
(smt.stats  106  16983 491212 3020414  9825/9540/565   35865/5523    66  510   28.63)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  107  17105 493464 3047147  9839/9543/565   36006/5523    66  510   28.72)
(smt.stats  108  17239 495063 3070252  9915/9555/565   36176/5523    66  510   28.72)
(smt.stats  109  17386 502757 3138528  9979/9639/565   36533/5608    67  510   28.72)
(smt.stats  110  17547 508411 3197257 10005/9708/565   37059/5609    67  510   28.82)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 142927955230721 := 2234765939965952 << 8
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 255 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 254 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 4 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 8 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 16 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 32 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 64 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 128 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 142927955230849 := 2234765939965952 << 8
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 128 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 142927955230719 := 2234765939965952 << 8
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 8 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 8 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 8 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 32 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 32 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 8 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 8 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 8 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 8 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 24 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 17 := 142927955230720&255
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 142927955230720&255
band: (band[51] (shl[51] (bv2int %1) (mod #103 51)) (if (= #609 50) 1 (if #611 3 #753))) 16 := 142927955230720&255
ramon: poll                 wall=17.000s usage=16.912s mem=30736KiB load=1.00 rootload=0.99
(smt.stats  111  17724 514376 3252876 10165/9860/618   37543/5895    68  518   29.07)
(smt.stats  112  17918 519435 3284962 10277/9956/629   38079/5896    68  518   29.16)
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 52781389971456&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 4556381017341952 := 208305916959 << 1
band: (band[51] (shl[64] (bv2int %1) (mod #369 64)) (if (= #772 63) 0 (if #774 1 #909))) 0 := 52781389971456&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #368) 64)) 4556381017341952 := 208305916959 << 1
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  113  18131 527054 3342373 10366/10059/636   38414/5898    68  518   30.01)
ramon: poll                 wall=18.006s usage=17.916s mem=31908KiB load=1.00 rootload=1.00
(smt.stats  114  18365 534681 3376370 10634/10076/636   38786/6102    69  530   30.20)
(smt.stats  115  18622 544756 3483663 10741/10439/638   39364/6103    69  530   30.20)
ramon: poll                 wall=19.002s usage=18.911s mem=31976KiB load=1.00 rootload=0.99
(smt.stats  116  18904 562678 3635181 10755/10451/638   40037/6307    70  544   30.20)
(smt.stats  117  19214 572947 3798949 10768/10464/640   40541/6362    72  554   30.41)
ramon: poll                 wall=20.000s usage=19.909s mem=32760KiB load=1.00 rootload=1.00
(smt.stats  118  19554 583489 3881023 11007/10601/648   42922/6366    72  554   31.10)
ramon: end                  Fri Nov  1 17:51:27 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.973s
ramon: group.utime          19.949s
ramon: group.stime          0.024s
ramon: group.mempeak        33272KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
