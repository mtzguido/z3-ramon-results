ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:05:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40418 MiB
ramon: sys.mem.avail        61705 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/wJGdfBS30THK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3111923
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4200    365  1282/1153/98      93/16     6   19   19.15)
(smt.stats    1    202   7652   1745  1973/1768/98     201/16     6   19   19.35)
(smt.stats    2    313  10191   5735  2060/1869/99     311/20     7   20   19.55)
(smt.stats    3    414  11965   8224  2383/2164/107     417/42     8   25   19.65)
(smt.stats    4    526  14848  10088  2638/2390/110     529/48    10   35   19.75)
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&18014398509481982
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&18014398509481981
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&18014398509481981
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&18014398509481980
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421967
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421968
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421967
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421968
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421984
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421967
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421968
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421966
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421964
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421920
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 4 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 16 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 23 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 4 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 28 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 44 := 63&562949953421868
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #851 #855) 64)) 18577348462903852 := 1125899906843290 << 6
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421840
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 16 := 63&562949953421840
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #851 #855) 64)) 72620543991349776 := 1125899906843290 << 6
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481983 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481983 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481983 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481982 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 562949953421967 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 562949953421752 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 63 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 62 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 60 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 1 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 32 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 32 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 4 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 2 := 63&42624
(smt.stats    5    648  16535  14999  2778/2520/209     679/80    12   55   20.13)
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 63 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 62 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 60 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 56 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 48 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 32 := 63&42624
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  18675  18675  2880/2561/214     788/94    15   65   20.33)
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 1 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 2 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 4 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 2 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 4 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 2 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 4 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 40 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 32 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 9 := 63&42624
(smt.stats    7    860  20506  23240  2864/2609/277     934/126    17   84   20.52)
(smt.stats    8    982  23373  27552  2973/2694/284    1109/139    18   85   20.71)
(smt.stats    9   1116  25620  31783  3062/2779/293    1232/167    20  119   20.81)
(smt.stats   10   1217  27178  35587  3117/2795/293    1397/169    20  119   20.90)
ramon: poll                 wall=1.000s usage=0.924s mem=22056KiB load=0.92 rootload=0.92
(smt.stats   11   1328  28835  39981  3203/2856/293    1554/189    21  126   21.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  30462  44545  3341/3059/298    1860/229    23  142   21.19)
(smt.stats   13   1584  33249  53509  3363/3071/299    2069/231    23  142   21.29)
(smt.stats   14   1731  37302  64036  3477/3167/299    2290/251    24  153   21.56)
(smt.stats   15   1832  38805  69190  3533/3184/300    2598/266    25  159   21.69)
(smt.stats   16   1943  40582  75484  3715/3320/300    2931/268    25  159   22.07)
(smt.stats   17   2065  43047  80433  3730/3380/303    3195/297    26  159   22.17)
ramon: poll                 wall=2.000s usage=1.922s mem=23556KiB load=1.00 rootload=0.99
(smt.stats   18   2199  47945  92975  3767/3406/303    3414/315    27  165   22.26)
(smt.stats   19   2346  51476  99949  3924/3434/303    3657/316    27  165   22.46)
ramon: poll                 wall=3.000s usage=2.920s mem=23892KiB load=1.00 rootload=1.00
(smt.stats   20   2507  54773 109343  4115/3590/303    4085/318    27  165   22.65)
(smt.stats   21   2608  57330 116685  4303/3814/303    4331/318    27  165   22.84)
(smt.stats   22   2719  60405 126672  4495/4001/305    4633/398    28  170   22.84)
(smt.stats   23   2841  63163 136305  4671/4164/305    4962/403    28  170   22.94)
ramon: poll                 wall=4.000s usage=3.920s mem=24420KiB load=1.00 rootload=1.00
(smt.stats   24   2975  66745 151122  4801/4348/305    5541/408    28  170   23.13)
(smt.stats   25   3122  70230 160461  4944/4462/305    5933/416    28  170   23.23)
(smt.stats   26   3283  73481 175957  5172/4658/305    6581/416    28  170   23.42)
ramon: poll                 wall=5.000s usage=4.919s mem=24880KiB load=1.00 rootload=1.00
(smt.stats   27   3460  75880 192875  5405/4875/305    7391/419    28  170   23.52)
(smt.stats   28   3561  77609 197798  5447/5093/305    7971/419    28  170   23.61)
(smt.stats   29   3672  79680 204840  5512/5109/305    8348/421    28  170   23.71)
(smt.stats   30   3794  81627 210519  5668/5193/305    8632/424    28  170   23.90)
ramon: poll                 wall=6.000s usage=5.919s mem=25392KiB load=1.00 rootload=1.00
(smt.stats   31   3928  83434 218710  5863/5409/305    8930/426    28  170   23.99)
ramon: poll                 wall=7.000s usage=6.918s mem=25900KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   32   4075  85927 227194  5939/5577/305   10196/427    28  170   24.37)
ramon: poll                 wall=8.000s usage=7.918s mem=25948KiB load=1.00 rootload=1.00
(smt.stats   33   4236  91045 251060  6041/5668/305   10918/435    28  170   24.37)
(smt.stats   34   4413  98916 290028  6140/5720/305   12414/441    28  170   24.57)
(smt.stats   35   4607 102439 306820  6199/5832/306   13739/1193    29  175   24.76)
ramon: poll                 wall=9.000s usage=8.917s mem=26328KiB load=1.00 rootload=0.99
(smt.stats   36   4708 105196 322832  6269/5870/306   14320/1198    29  175   24.85)
(smt.stats   37   4819 108596 338236  6318/5936/306   14537/1199    29  175   24.85)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 111744 358333  6414/6003/306   15098/1200    29  175   24.95)
(smt.delete-inactive-clauses  :num-deleted-clauses 25)
(smt.stats   39   5075 115279 374716  6435/6084/306   15508/1201    29  175   25.04)
(smt.stats   40   5222 124857 415116  6478/6111/306   15889/1201    29  175   25.04)
ramon: poll                 wall=10.000s usage=9.917s mem=26672KiB load=1.00 rootload=1.00
(smt.stats   41   5383 130135 439572  6631/6172/306   16389/1204    29  175   25.04)
(smt.stats   42   5560 133633 465009  6693/6315/306   17484/1205    29  175   25.40)
ramon: poll                 wall=11.000s usage=10.916s mem=26968KiB load=1.00 rootload=1.00
(smt.stats   43   5754 138537 498861  6856/6431/307   18336/1560    30  176   25.59)
(smt.stats   44   5967 142664 532822  7023/6533/307   19582/1565    30  176   25.69)
(smt.stats   45   6068 144292 543316  7034/6689/307   20666/1565    30  176   25.78)
(smt.stats   46   6179 147658 565619  7130/6709/307   21072/1565    30  176   25.78)
ramon: poll                 wall=12.000s usage=11.915s mem=27308KiB load=1.00 rootload=1.00
(smt.stats   47   6301 150922 588449  7314/6970/308   21565/1847    31  178   25.88)
(smt.stats   48   6435 154433 614502  7370/6983/308   22260/1848    31  178   25.97)
(smt.stats   49   6582 157243 627557  7402/7032/308   23172/1852    31  178   26.07)
(smt.stats   50   6743 161023 660975  7492/7097/310   24133/1968    32  180   26.17)
ramon: poll                 wall=13.000s usage=12.915s mem=27632KiB load=1.00 rootload=1.00
(smt.stats   51   6920 169622 728196  7499/7159/314   24732/2116    33  261   26.17)
(smt.stats   52   7114 175141 763387  7623/7170/314   26901/2118    33  261   26.46)
(smt.stats   53   7327 180780 804889  7756/7416/315   27797/2381    34  273   26.75)
ramon: poll                 wall=14.000s usage=13.914s mem=28316KiB load=1.00 rootload=1.00
(smt.stats   54   7561 189193 840845  7774/7421/315   28562/2383    34  273   26.75)
(smt.stats   55   7662 191922 863146  7797/7454/315   28877/2383    34  273   26.94)
(smt.stats   56   7773 194480 900320  7810/7465/315   29251/2383    34  273   26.94)
(smt.stats   57   7895 199655 927594  7848/7474/315   29815/2384    34  273   27.04)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8029 203761 948034  7858/7516/315   30304/2384    34  273   27.04)
(smt.stats   59   8176 213921 1008652  7859/7517/315   30482/2384    34  273   27.04)
(smt.stats   60   8337 218244 1042749  7889/7523/315   31023/2386    34  273   27.23)
ramon: poll                 wall=15.000s usage=14.914s mem=28620KiB load=1.00 rootload=1.00
(smt.stats   61   8514 219922 1058647  7937/7567/315   31786/2386    34  273   27.23)
(smt.stats   62   8708 224826 1095003  8051/7606/315   32316/2389    34  273   27.33)
ramon: poll                 wall=16.000s usage=15.914s mem=28860KiB load=1.00 rootload=1.00
(smt.stats   63   8921 229296 1113453  8434/7747/316   32761/2734    35  276   27.52)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9155 232965 1146600  8501/8148/321   34178/2734    35  276   27.52)
(smt.stats   65   9412 241900 1185781  8678/8183/321   34653/2741    35  276   27.79)
(smt.stats   66   9513 243775 1199705  8683/8341/321   35144/3000    36  323   27.89)
ramon: poll                 wall=17.000s usage=16.913s mem=29384KiB load=1.00 rootload=1.00
(smt.stats   67   9624 247237 1224504  8748/8359/322   35770/3001    36  323   27.98)
(smt.stats   68   9746 250880 1248514  8966/8418/322   36211/3001    36  323   28.08)
ramon: poll                 wall=18.000s usage=17.912s mem=29864KiB load=1.00 rootload=1.00
(smt.stats   69   9880 254782 1283284  9078/8672/323   36961/3164    37  332   28.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 3429)
(smt.stats   70  10027 257123 1308480  9157/8747/323   34275/3164    37  332   28.33)
ramon: poll                 wall=19.000s usage=18.912s mem=30064KiB load=1.00 rootload=1.00
(smt.stats   71  10188 260120 1337612  9334/8819/323   34712/3165    37  332   28.43)
(smt.stats   72  10365 263346 1371848  9624/9027/323   35314/3173    37  332   28.52)
(smt.stats   73  10559 266675 1396167  9717/9295/323   35939/3174    37  332   28.52)
ramon: poll                 wall=20.000s usage=19.912s mem=30128KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:05:37 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.991s
ramon: group.utime          19.979s
ramon: group.stime          0.012s
ramon: group.mempeak        30640KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              1.00
