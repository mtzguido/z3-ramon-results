ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:50:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40773 MiB
ramon: sys.mem.avail        61708 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/kwhNV68Fj4aZ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3064911
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1 := 4 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1 := 4 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1 := 4 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1 := 4 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1 := 4 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1 := 4 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1 := 4 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 1 := 140737488355328&1
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 2 := 140737488355328&2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 1 := 140737488355328&1
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 2 := 140737488355328&2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 2 := 140737488355328&2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3 := 4 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3 := 4 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4 := 140737488355328&4
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 8 := 140737488355328&8
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 16 := 140737488355328&16
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 32 := 140737488355328&32
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 140737488355328&64
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 128 := 140737488355328&128
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 256 := 140737488355328&256
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 512 := 140737488355328&512
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 1024 := 140737488355328&1024
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 2048 := 140737488355328&2048
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4096 := 140737488355328&4096
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 8192 := 140737488355328&8192
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 16384 := 140737488355328&16384
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 16384 := 140737488355328&16384
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 32768 := 140737488355328&32768
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65536 := 140737488355328&65536
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 131072 := 140737488355328&131072
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 8192 := 140737488355328&8192
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 16384 := 140737488355328&16384
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 32768 := 140737488355328&32768
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65536 := 140737488355328&65536
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 131072 := 140737488355328&131072
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 262144 := 140737488355328&262144
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 524288 := 140737488355328&524288
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 524288 := 140737488355328&655400
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 1048576 := 140737488355328&1048576
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 1048576 := 140737488355328&1048576
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 1048576 := 140737488355328&1048576
(smt.stats    0    101   3403    958  1263/1141/178     109/15     6   33   19.74)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 524288 := 140737488355328&524288
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 32768 := 140737488355328&32780
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 131072 := 140737488355328&131080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 262656 := 140737488355328&262680
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 263168 := 140737488355328&562949953683480
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 263168 := 140737488355328&562949953683480
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 263168 := 140737488355328&263180
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 294912 := 140737488355328&393180
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 294912 := 140737488355328&294980
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 294912 := 140737488355328&294980
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 294912 := 140737488355328&294980
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 327744 := 140737488355328&327780
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 327744 := 140737488355328&327780
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 81920 := 140737488355328&81980
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65552 := 140737488355328&65580
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65540 := 140737488355328&65580
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65540 := 140737488355328&65580
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65544 := 140737488355328&65580
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65544 := 140737488355328&65580
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65600 := 140737488355328&65680
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65600 := 140737488355328&65680
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 66048 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 66048 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 66048 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 66048 := 140737488355328&66080
(smt.stats    1    202   4199   1754  2426/2205/237     293/84    11   46   19.95)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 66048 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 66048 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65552 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65552 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65552 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65540 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65538 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65538 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65538 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 65537 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 16384 := 140737488355328&66080
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&66080
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1125899906908704 := 1125899906908704 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 140737488355328&66080
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1125899906908704 := 1125899906908704 << 47
(smt.stats    2    313   5283   3704  2548/2229/254     477/138    13   49   20.34)
(smt.stats    3    414   5776   4363  2702/2379/264     598/145    14   51   20.55)
(smt.stats    4    525   7115   7199  2874/2646/278     804/197    17   63   20.65)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 8 := 562949953421312&7340041
(smt.stats    5    647  10638  11678  2954/2709/279     973/208    18   64   20.74)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  13494  16284  3227/2912/288    1212/324    21   82   21.03)
(smt.stats    7    859  15604  20323  3396/2978/288    1470/334    21   82   21.03)
ramon: poll                 wall=1.000s usage=0.942s mem=22408KiB load=0.94 rootload=0.92
(smt.stats    8    981  18033  25998  3564/3314/294    1972/428    22   84   21.16)
(smt.stats    9   1115  23033  30644  3603/3339/304    2199/510    23   95   21.25)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&7340041
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 2251799821025289 := 1125899926241194 << 2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&7340041
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 2251799821025289 := 1125899926110494 << 2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&7340041
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 2251799821025289 := 1125899926110494 << 2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&77071080
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 3 := 562949963055197 << 3
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&77594281
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 4503599704964777 := 1125899926241194 << 2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&77594280
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 3 := 562949963120597 << 3
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&77071080
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 3 := 562949963055197 << 3
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&77071080
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 0 := 562949963055197 << 3
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&7340232
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 4 := 4&7340232
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&7340232
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 3 := 4&7340232
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&7340232
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 2 := 4&7340232
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842837018856
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 1 := 4&160842837018856
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842837018856
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 2 := 4&160842837018856
(smt.stats   10   1216  25776  34892  3702/3428/331    2287/595    25  119   21.35)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842843834552
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 1 := 4&160842843834552
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842843834552
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 1 := 4&160842843834552
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842843834552
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 2 := 4&160842843834552
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842843834552
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 4 := 4&160842843834552
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842843834552
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 4 := 4&160842843834552
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842843834552
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 4 := 4&160842843834552
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842843834552
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 4 := 4&160842843834552
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842843834552
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 4 := 4&160842843834552
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 4&160842843834552
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 4 := 4&160842843834552
(smt.stats   11   1327  27596  38757  3754/3484/343    2462/605    26  127   21.45)
(smt.stats   12   1449  29758  44803  3810/3544/352    2824/640    28  136   21.55)
(smt.stats   13   1583  33458  54515  3891/3617/354    3056/779    29  149   21.76)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 1 := 1&1125899903827974
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 1&1125899903827974
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 0 := 1125899905335299 << 1
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 1&1125899903827974
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 0 := 1125899905335299 << 1
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 1&1125899903827974
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 0 := 1125899905335299 << 1
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 1&1125899906842474
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 1 := 1&1125899906842474
(smt.stats   14   1730  38280  70028  3961/3682/373    3378/836    31  161   21.99)
(smt.stats   15   1831  40947  78894  3993/3709/373    3754/836    31  161   21.99)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   16   1942  43987  90977  4022/3734/377    4005/1030    33  169   22.11)
(smt.stats   17   2064  48855 100199  4043/3751/380    4225/1113    34  186   22.11)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 1&562949956304898
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 1 := 1&562949956304898
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 1&562949956304898
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 1 := 1&562949956304898
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 1 := 1&562949956304898
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 1 := 1&562949956304898
(smt.stats   18   2198  55907 121840  4075/3760/382    4377/1116    35  195   22.33)
(smt.stats   19   2345  61252 142353  4120/3827/382    4626/1127    36  205   22.33)
(smt.stats   20   2506  65251 152029  4131/3838/383    4943/1239    37  205   22.42)
(smt.stats   21   2607  73520 173121  4132/3839/383    5081/1239    37  205   22.42)
(smt.stats   22   2718  78714 187811  4137/3843/383    5253/1239    37  205   22.42)
(smt.stats   23   2840  81150 195654  4146/3851/385    5409/1296    38  213   22.42)
(smt.stats   24   2974  85966 209521  4150/3857/388    5648/1314    39  226   22.54)
ramon: poll                 wall=2.000s usage=1.941s mem=23804KiB load=1.00 rootload=0.99
(smt.stats   25   3121  93675 220538  4163/3866/393    5837/1315    39  226   22.54)
(smt.stats   26   3282  97363 229041  4400/3872/393    6169/1345    40  247   22.74)
(smt.stats   27   3459 102229 248228  4585/4162/393    6875/1351    40  247   22.94)
(smt.stats   28   3560 105304 257017  4613/4312/393    7068/1352    40  247   22.94)
(smt.stats   29   3671 109884 274846  4696/4400/395    7280/1532    41  259   22.94)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985162418487524
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3236962232172772 := 1970324836975030 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985162418487524
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3236962232172772 := 1970324836975030 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985162418487524
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3236962232172772 := 1970324836975030 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985162418487522
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3236962232172770 := 1970324836975030 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985162418487570
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3236962232172818 := 1970324836975130 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985162418487570
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3236962232172818 := 1970324836975130 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&1125899906842622
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985162418552868
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3236962232238116 := 1970324837105730 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985540375609344
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 985506015965187 := 985162418581515 << 35
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985540375609344
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3237340189294592 := 1970324837163030 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985540375609344
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 985506015965187 := 985162418581515 << 35
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&1125899906842622
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&1125865547104256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3377665360789504 := 1970324837105730 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985540375609344
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 985506015965187 := 985162418581515 << 35
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985162418581524
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3236962232266772 := 1970324837163030 << 34
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&985540375609344
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 985162418581522 := 985162418581515 << 35
ramon: poll                 wall=3.000s usage=2.940s mem=24796KiB load=1.00 rootload=1.00
(smt.stats   30   3793 113478 289129  4807/4416/396    7639/1575    42  259   23.12)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 17179869184&1125796827627520
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 985162418487538 := 703688515616765 << 35
(smt.stats   31   3927 116512 299361  4907/4529/411    7924/1651    43  262   23.31)
(smt.stats   32   4074 120726 310555  4922/4623/411    8233/1652    43  262   23.41)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 37 := 64&1125315791196409
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 37 := 64&1125899906748665
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 32 := 64&1125899906748657
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 32 := 64&1125899906748657
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&1125899906617585
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3377699720302833 := 1688849860493386 << 6
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&1125899906617585
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3377699720302833 := 1688849860493386 << 6
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&1125899906617585
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3377699720302833 := 1688849860525986 << 6
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&1125899906617585
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3377699720302833 := 1688849860525886 << 6
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&1125899906617584
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3377699720302832 := 1688849860525886 << 6
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&1125899906748668
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 3377699720433916 := 1688849860493286 << 6
(smt.stats   33   4235 124262 320349  5081/4641/412    8550/1709    44  265   23.68)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&750599942582656
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 12 := 64&750599942582656
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 12 := 64&750599942582656
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&117475968
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&117475968
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&117475968
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&117475968
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 64 := 64&117475968
(smt.stats   34   4412 126834 328665  5158/4814/428    8816/1728    45  271   23.68)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 9 := 16&1310739
(smt.stats   35   4606 130517 339772  5241/4876/430    9150/1729    45  271   23.78)
ramon: poll                 wall=4.000s usage=3.940s mem=25312KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   36   4707 133590 347439  5261/4959/430    9295/1755    46  277   23.87)
(smt.stats   37   4818 135617 358963  5271/4969/431    9497/1755    46  277   23.98)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&1150
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 2 := 2&1150
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 1150 := 296 << 1
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 328 := 296 << 1
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&592
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 591 := 148 << 2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&594
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 704 := 296 << 1
(smt.stats   38   4940 138258 372293  5338/5028/442    9741/1798    47  282   23.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 142564 383073  5359/5048/442    9926/1798    47  282   24.10)
(smt.stats   40   5221 148319 410792  5368/5059/443   10085/1864    48  302   24.10)
(smt.stats   41   5382 157021 432878  5374/5065/443   10294/1864    48  302   24.24)
(smt.stats   42   5559 164137 451053  5381/5072/444   10595/1896    49  309   24.24)
(smt.stats   43   5753 172018 474728  5392/5076/444   10845/1898    49  309   24.43)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4096 := 4096&17536
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4096 := 4096&17536
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4096 := 4096&17536
(smt.stats   44   5966 177954 497486  5468/5096/444   11390/1900    49  309   24.43)
(smt.stats   45   6067 179918 504659  5476/5167/450   11532/1997    50  310   24.56)
(smt.stats   46   6178 183413 518001  5486/5177/450   11769/1997    50  310   24.56)
(smt.stats   47   6300 189343 545755  5489/5178/450   11926/1997    50  310   24.56)
ramon: poll                 wall=5.000s usage=4.912s mem=26088KiB load=0.97 rootload=0.97
(smt.stats   48   6434 193322 558505  5497/5188/450   12117/2061    51  343   24.56)
(smt.stats   49   6581 198203 571369  5506/5197/451   12311/2061    51  343   24.65)
(smt.stats   50   6742 205587 598219  5510/5201/451   12491/2093    52  346   24.65)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 2 := 2&192
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 2 := 2&192
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&192
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 985162418581518 := 48 << 2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&192
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 985162418581514 := 48 << 2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&192
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 985162418487578 := 48 << 2
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&192
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 2 := 2&192
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 2&192
band: (band[50] (if (= #120 49) 1 (if #561 2 #657)) (shl[50] (bv2int %0) (+ 50 #660))) 2 := 2&192
(smt.stats   51   6919 210304 627089  5531/5207/451   12706/2096    52  346   24.75)
(smt.stats   52   7113 214259 651172  5540/5228/462   12961/2112    53  348   24.75)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4 := 4&376
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4 := 4&376
(smt.stats   53   7326 221757 676499  5594/5269/462   13202/2119    54  353   24.87)
(smt.stats   54   7560 226529 698253  5611/5286/470   13543/2123    55  354   25.38)
(smt.stats   55   7661 228435 704200  5677/5299/470   13685/2127    55  354   25.48)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   56   7772 230689 718174  5681/5359/471   13870/2168    56  368   25.48)
(smt.stats   57   7894 234795 743612  5711/5367/471   14063/2168    56  368   25.57)
ramon: poll                 wall=6.000s usage=5.912s mem=27204KiB load=1.00 rootload=1.00
(smt.stats   58   8028 236284 754169  5750/5426/472   14293/2180    57  371   25.57)
(smt.stats   59   8175 241158 771842  5763/5428/472   14580/2181    57  371   25.67)
(smt.stats   60   8336 244745 786112  5772/5445/472   14829/2195    58  382   25.67)
(smt.stats   61   8513 248456 798494  5789/5454/473   15241/2195    58  382   25.76)
(smt.stats   62   8707 256800 832174  5847/5501/475   15614/2319    59  388   25.76)
ramon: poll                 wall=7.000s usage=6.912s mem=27440KiB load=1.00 rootload=1.00
(smt.stats   63   8920 262122 855963  6171/5523/475   16134/2337    59  388   25.95)
(smt.stats   64   9154 269340 888664  6188/5855/475   16538/2337    59  388   26.05)
(smt.stats   65   9411 279364 934096  6262/5889/475   16938/2338    59  388   26.05)
ramon: poll                 wall=8.000s usage=7.911s mem=27920KiB load=1.00 rootload=1.00
(smt.stats   66   9512 281009 942327  6268/5939/476   17329/2508    60  389   26.05)
(smt.stats   67   9623 285486 961620  6309/5939/476   17581/2509    60  389   26.05)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 3457 := 4096&117469115
(smt.stats   68   9745 289839 977943  6408/6001/476   17990/2517    60  389   26.15)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 3456 := 4096&7340043
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4096 := 4096&7352323
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 18392700878188457987 := 2251799810596974 << 12
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4096 := 4096&7344131
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 18392700878188449795 := 2251799810604974 << 12
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4096 := 4096&7344131
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 18391574978281607171 := 2251799810604974 << 12
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4096 := 4096&7344139
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 8086213130951069707 := 2251799810596974 << 12
(smt.stats   69   9879 292914 991698  6520/6165/488   18262/2630    61  392   26.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 824)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   70  10026 296082 1009347  6601/6233/488   17787/2631    61  392   26.24)
(smt.stats   71  10187 304375 1041280  6621/6280/488   18166/2631    61  392   26.35)
(smt.stats   72  10364 312053 1074055  6769/6297/488   18659/2763    62  393   26.35)
ramon: poll                 wall=9.000s usage=8.911s mem=28324KiB load=1.00 rootload=1.00
(smt.stats   73  10558 316370 1090127  6944/6590/489   19150/2828    63  393   26.45)
(smt.stats   74  10771 321256 1104262  7051/6626/489   19527/2829    63  393   26.73)
ramon: poll                 wall=10.000s usage=9.911s mem=28560KiB load=1.00 rootload=1.00
(smt.stats   75  11005 327057 1126468  7309/6863/490   20022/2831    63  393   26.83)
(smt.stats   76  11262 335366 1165935  7327/6985/490   20512/2831    63  393   26.83)
(smt.stats   77  11544 342833 1209081  7338/7005/491   20954/2987    64  393   26.83)
(smt.stats   78  11645 346009 1221550  7422/7005/491   21119/2995    64  393   26.93)
ramon: poll                 wall=11.000s usage=10.894s mem=28776KiB load=0.98 rootload=0.98
(smt.stats   79  11756 347924 1225013  7656/7137/491   21243/3020    65  412   27.03)
(smt.stats   80  11878 348738 1227642  7764/7421/491   21425/3020    65  412   27.22)
(smt.stats   81  12012 351637 1236665  8172/7802/491   21870/3021    65  412   27.22)
(smt.stats   82  12159 356605 1267945  8175/7842/492   22212/3021    65  412   27.32)
(smt.stats   83  12320 361065 1293050  8188/7855/492   22438/3228    66  414   27.32)
(smt.stats   84  12497 365424 1325319  8194/7861/492   22770/3228    66  414   27.32)
(smt.stats   85  12691 369705 1362402  8204/7871/493   23176/3264    67  416   27.44)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&281474976710656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 14918173765664768 := 106 << 46
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&281474976706432
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&281474976702592
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&281474976702592
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&140737488355456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 14777436277309568 := 106 << 46
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&70368744177792
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&140737488355456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 14777436277309568 := 106 << 46
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&140737488355456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 14777436277309568 := 106 << 46
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&703687441776640
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 140737483964446 := 53 << 47
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 70368744177664&703687441776640
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #116))) 140737483964446 := 53 << 47
(smt.stats   86  12904 375470 1410094  8342/7913/493   23613/3268    67  416   27.64)
ramon: poll                 wall=12.000s usage=11.894s mem=29312KiB load=1.00 rootload=1.00
(smt.stats   87  13138 381024 1441382  8396/8005/518   24476/3309    68  421   27.73)
(smt.stats   88  13395 389949 1492656  8718/8054/518   25299/3322    68  421   28.01)
ramon: poll                 wall=13.000s usage=12.894s mem=29876KiB load=1.00 rootload=1.00
(smt.stats   89  13677 400414 1550048  8807/8436/518   26670/3542    69  421   28.01)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   90  13987 414121 1625556  8928/8576/520   27884/3917    70  421   28.34)
(smt.stats   91  14088 417799 1639138  8979/8578/520   28477/3921    70  421   28.44)
ramon: poll                 wall=14.002s usage=13.898s mem=30200KiB load=1.00 rootload=1.01
(smt.stats   92  14199 423245 1676656  9107/8679/520   28875/3925    70  421   28.53)
(smt.stats   93  14321 430689 1742570  9145/8794/529   29058/4159    71  648   28.53)
(smt.stats   94  14455 433887 1773147  9154/8803/530   29458/4159    71  648   28.63)
(smt.stats   95  14602 437717 1792635  9154/8803/531   29633/4159    71  648   28.63)
(smt.stats   96  14763 442845 1818017  9198/8805/531   29960/4161    71  648   28.72)
ramon: poll                 wall=15.000s usage=14.893s mem=30580KiB load=1.00 rootload=0.99
(smt.stats   97  14940 448539 1844781  9222/8861/531   30267/4303    72  665   28.72)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 457372 1886926  9244/8889/531   30597/4303    72  665   28.82)
(smt.stats   99  15347 464486 1930478  9264/8897/531   30925/4303    72  665   28.82)
(smt.stats  100  15581 470274 1984393  9280/8921/533   31430/4426    73  693   28.82)
ramon: poll                 wall=16.000s usage=15.893s mem=30712KiB load=1.00 rootload=1.00
(smt.stats  101  15838 477568 2037980  9318/8940/534   32071/4426    73  693   29.03)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 4 := 512&942
(smt.stats  102  16120 486763 2088723  9379/8989/534   32731/4513    74  714   29.03)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 512&942
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 512&1311406
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 512&1311414
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 512&1310854
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 42784196461330566 := 1407374883553280 << 9
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 512&1310854
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 42784196461330566 := 1407374883553280 << 9
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 512&1310854
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 42784196461330566 := 1407374883553280 << 9
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 512&1310782
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 42784196461330494 := 1407374883553280 << 9
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 0 := 512&1310742
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #839 #841) 64)) 42784196461330454 := 1407374883553280 << 9
ramon: poll                 wall=17.002s usage=16.897s mem=30988KiB load=1.00 rootload=1.00
(smt.stats  103  16430 492064 2106210  9854/9027/534   33235/4528    74  714   29.35)
(smt.stats  104  16770 505954 2189549  9880/9513/545   33808/4528    74  714   29.45)
(smt.stats  105  16871 510886 2228424  9894/9520/545   34038/4664    75  718   29.45)
(smt.stats  106  16982 512409 2235439 10028/9543/545   34170/4665    75  718   29.54)
(smt.stats  107  17104 517759 2261013 10041/9676/545   34646/4665    75  718   29.54)
ramon: poll                 wall=18.000s usage=17.893s mem=31400KiB load=1.00 rootload=0.99
(smt.stats  108  17238 525173 2305881 10070/9683/545   34978/4666    75  718   29.64)
(smt.stats  109  17385 531705 2330185 10085/9720/545   35202/4666    75  718   29.73)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  110  17546 535953 2357503 10102/9723/547   35809/4838    76  721   29.83)
(smt.stats  111  17723 542510 2390903 10111/9743/547   36190/4838    76  721   29.83)
ramon: poll                 wall=19.000s usage=18.893s mem=31692KiB load=1.00 rootload=1.00
(smt.stats  112  17917 551322 2451747 10148/9754/547   36868/4840    76  721   29.92)
(smt.stats  113  18130 556046 2470149 10374/9798/547   37214/4933    77  757   30.02)
(smt.stats  114  18364 561571 2511988 10959/10141/547   37798/4939    77  757   30.21)
band: (band[50] (if (or #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685) 0 (if #686 1 #784)) (shl[64] (* 2 #114) (mod #842 64))) 9472 := 562949953421312&1311004
ramon: poll                 wall=20.000s usage=19.887s mem=32044KiB load=0.99 rootload=1.00
(smt.stats  115  18621 568582 2566643 11263/10697/547   38671/4940    77  757   30.30)
ramon: end                  Tue Dec 24 15:50:27 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.030s
ramon: group.total          19.958s
ramon: group.utime          19.922s
ramon: group.stime          0.036s
ramon: group.mempeak        32300KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              0.99
