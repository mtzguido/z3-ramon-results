ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:04:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40486 MiB
ramon: sys.mem.avail        61705 MiB
ramon: sys.nprocs           1258
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/vnYpsl4c3jNB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3110296
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3091   1843  1183/1060/100      92/4     5   15   19.04)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 4&60713509627
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 4 := 5 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 1&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 2&60713509627
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 4&60713509627
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 4 := 268435456 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 4&60713509627
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 4 := 268435456 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 68719476736&60713509627
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 68719476737 := 68719476737 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 68719476736&60713509627
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 68719476737 := 68719476737 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 68719476736&60713509627
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 68719476737 << 36
(smt.stats    1    202   4641   3003  1651/1490/123     188/14     8   22   19.33)
(smt.stats    2    313   5041   3305  1999/1789/123     302/28     8   22   19.72)
(smt.stats    3    438   7051   5426  2495/2265/128     452/102    10   25   19.82)
(smt.stats    4    549   8801   7969  2797/2562/129     551/143    12   29   19.82)
(smt.stats    5    671  10610  10884  2850/2578/129     694/146    12   29   19.91)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    772  12003  13693  2928/2695/131     797/188    13   30   19.91)
(smt.stats    7    883  14704  17039  2966/2726/132     906/195    14   32   20.01)
(smt.stats    8   1005  17007  19682  3019/2763/134    1027/198    15   33   20.01)
(smt.stats    9   1139  20560  24846  3049/2790/134    1168/207    16   33   20.11)
(smt.stats   10   1240  22276  29672  3146/2851/134    1274/212    16   33   20.11)
(smt.stats   11   1351  23424  32379  3178/2919/135    1382/222    17   34   20.11)
(smt.stats   12   1473  24099  36560  3212/2969/136    1502/237    18   36   20.11)
(smt.stats   13   1607  25364  41355  3242/2979/138    1674/238    18   36   20.20)
(smt.stats   14   1754  28317  50111  3264/3017/147    1817/277    19   41   20.20)
(smt.stats   15   1855  29336  54041  3324/3026/147    1920/390    20   43   20.20)
(smt.stats   16   1966  30069  57046  3363/3085/147    2038/390    20   43   20.30)
(smt.stats   17   2088  30689  59558  3365/3118/147    2159/390    20   43   20.30)
ramon: poll                 wall=1.000s usage=0.908s mem=21620KiB load=0.91 rootload=0.90
(smt.stats   18   2222  31238  63480  3368/3121/147    2312/390    20   43   20.30)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710655&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710655&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710647&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710647&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 281474976710639&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 62170633858247 := 124341267716480&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501376 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501376 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501568 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91502592 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501356 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501356 := 62170725359618&62170633858264
(smt.stats   19   2369  33906  69068  3423/3167/201    2476/438    21   54   20.71)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501356 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501356 := 62170725359620&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725359618&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725359744&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725360256&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501440 := 62170725360512&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91501568 := 62170725360256&62170633858264
(smt.stats   20   2530  36008  74797  3506/3217/251    2688/441    21   54   20.80)
(smt.stats   21   2631  37220  78598  3577/3288/253    2777/472    22   83   20.80)
(smt.stats   22   2742  39251  83522  3629/3351/254    2912/473    22   83   20.99)
(smt.stats   23   2864  41430  89295  3685/3391/254    3028/499    23   92   20.99)
(smt.stats   24   2998  42456  93765  3693/3446/255    3162/503    24   94   20.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   25   3145  45724 101298  3711/3460/255    3306/503    24   94   20.99)
(smt.stats   26   3306  50239 117384  3765/3502/256    3479/523    25  100   21.09)
(smt.stats   27   3483  53136 124874  3827/3517/256    3674/523    25  100   21.09)
(smt.stats   28   3584  56296 131205  3849/3576/256    3772/524    25  100   21.18)
(smt.stats   29   3695  57478 136081  3884/3600/256    3884/524    25  100   21.28)
(smt.stats   30   3817  59296 143157  3897/3629/256    4032/524    25  100   21.28)
(smt.stats   31   3951  62656 154289  3915/3658/257    4206/565    26  102   21.45)
(smt.stats   32   4098  64643 162915  3923/3666/258    4366/565    26  102   21.45)
(smt.stats   33   4259  70712 179190  3935/3676/260    4520/583    28  115   21.45)
(smt.stats   34   4436  75303 190442  3939/3680/260    4712/583    28  115   21.45)
ramon: poll                 wall=2.000s usage=1.907s mem=22908KiB load=1.00 rootload=1.00
(smt.stats   35   4632  78416 203350  3962/3689/260    4935/583    28  115   21.54)
(smt.stats   36   4736  80832 210707  3966/3707/260    5045/583    28  115   21.73)
(smt.stats   37   4847  84555 216179  3967/3708/260    5183/583    28  115   21.73)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 2 := 520&7
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 520&7
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 281474976711176 := 521 << 3
(smt.stats   38   4969  86831 220189  4025/3724/266    5310/637    29  117   21.73)
(smt.delete-inactive-clauses  :num-deleted-clauses 34)
(smt.stats   39   5103  90448 227788  4055/3784/266    5435/637    29  117   21.83)
(smt.stats   40   5250  95506 237587  4079/3798/266    5643/638    29  117   21.83)
(smt.stats   41   5411  99502 249777  4151/3831/266    5899/645    29  117   21.83)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 62170633857024 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91502592 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094157824&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91506688 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91514880 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91504640 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91506688 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91514880 := 215890094155776&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91564032 := 215890094155776&62170633858264
(smt.stats   42   5588 103370 260078  4248/3892/266    6157/650    29  117   22.02)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91514880 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 91498496 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 157696 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 92160 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 485376 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 485376 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 1271808 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 748032 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 780288 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 747520 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 805529600 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 805529600 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 807102464 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 808151040 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 808151040 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 807626752 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 807102464 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 806053888 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 535521280 := 215890094157312&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 535521280 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 535521280 := 215890094156288&62170633858264
(smt.stats   43   5782 106519 278259  4770/4184/386    6698/782    30  128   22.64)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 273377280 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 273377280 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 520841762 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 520841728 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 520841216 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 302737408 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 403400704 := 215890094156288&62170633858264
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 403400704 := 215890094156288&62170633858264
(smt.stats   44   5995 109882 292912  5262/4993/476    7406/966    31  150   23.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   45   6096 115044 310153  5278/5004/476    7524/966    31  150   23.12)
ramon: poll                 wall=3.000s usage=2.907s mem=24760KiB load=1.00 rootload=0.99
(smt.stats   46   6207 119500 321457  5297/5016/477    6048/1264    32 1858   23.22)
(smt.stats   47   6329 126858 353669  5307/5045/477    6158/1354    33 1864   23.22)
(smt.stats   48   6463 133067 377505  5315/5055/477    7007/1354    33 1864   23.31)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 640&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 1688849860264576 := 215890289233920 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 640&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 1688849860264576 := 215890289233920 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 896&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 1970324836975488 := 215890289233920 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 896&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 1970324836975488 := 215890289233920 << 1
(smt.stats   49   6610 137266 388201  5384/5089/478    7647/2120    34 1864   23.60)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 215890289238016&1
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 0 := 107945144619008 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 268443648&1
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 0 := 134221824 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 268443648&1
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 0 := 134221824 << 1
(smt.stats   50   6771 140979 400892  5485/5187/484    7874/2141    35 1866   23.60)
(smt.stats   51   6948 144063 414995  5547/5257/491    8159/2142    35 1866   23.84)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 104 := 178&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 178&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 194&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 194&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 146&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 146&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 130&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 96 := 130&113
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 112 := 114&113
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 281474976710770 := 0 << 7
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 112 := 114&113
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 281474976710770 := 0 << 7
(smt.stats   52   7142 149461 434070  5741/5416/501    8522/2282    36 1870   24.14)
(smt.stats   53   7355 152069 441455  5806/5468/516    8708/2354    37 1900   24.14)
ramon: poll                 wall=4.003s usage=3.911s mem=26028KiB load=1.00 rootload=1.00
(smt.stats   54   7589 159074 463141  5901/5569/524    9330/2416    38 1926   24.33)
(smt.stats   55   7690 161586 480342  5983/5694/524    9507/2416    38 1926   24.33)
(smt.stats   56   7801 166074 511205  5986/5699/524    9898/2657    39 1969   24.33)
(smt.stats   57   7923 169765 541345  6018/5731/525   10404/2670    40 1971   24.42)
(smt.stats   58   8057 178250 579534  6020/5733/525   10896/2670    40 1971   24.86)
(smt.stats   59   8204 188096 628592  6025/5738/530   11036/3181    41 1990   24.86)
(smt.stats   60   8365 201487 692545  6026/5739/530   11217/3181    41 1990   24.86)
(smt.stats   61   8542 210360 738942  6033/5746/530   11476/3181    41 1990   24.96)
ramon: poll                 wall=5.000s usage=4.907s mem=26408KiB load=1.00 rootload=1.00
(smt.stats   62   8736 221091 790984  6041/5754/530   11802/3181    41 1990   24.96)
(smt.stats   63   8949 228004 827145  6069/5782/531   12417/3426    42 2002   25.06)
(smt.stats   64   9183 238259 891847  6091/5804/531   12737/3426    42 2002   25.06)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions      )
(smt.stats   65   9440 246716 936243  6118/5818/531   13257/3428    42 2002   25.15)
(smt.stats   66   9541 248706 943008  6136/5847/531   13467/3428    42 2002   25.15)
(smt.stats   67   9652 252699 957582  6158/5849/531   13596/3431    42 2002   25.25)
(smt.stats   68   9774 256478 967690  6231/5878/531   13759/3441    42 2002   25.25)
(smt.stats   69   9908 258763 980468  6279/5990/531   13994/3441    42 2002   25.34)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
ramon: poll                 wall=6.000s usage=5.907s mem=26920KiB load=1.00 rootload=1.00
(smt.stats   70  10055 265163 1006846  6304/6002/537   14443/3990    43 2006   25.34)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   71  10216 269822 1030175  6334/6036/537   14951/3990    43 2006   25.44)
(smt.stats   72  10393 276815 1073439  6369/6056/537   15358/4304    44 2031   25.44)
(smt.stats   73  10587 285140 1120515  6375/6087/538   15757/4527    45 2040   25.44)
(smt.stats   74  10800 304367 1230545  6375/6087/538   15975/4527    45 2040   25.44)
ramon: poll                 wall=7.000s usage=6.907s mem=27176KiB load=1.00 rootload=1.00
(smt.stats   75  11034 316637 1300560  6389/6102/549   15304/4641    46 3332   25.54)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 0&14
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 0 := 16385 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 0&14
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 0 := 107945144620579 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 0&14
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 0 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 0&14
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 0 << 4
(smt.stats   76  11291 324566 1353985  6468/6157/555   15690/5130    47 3333   25.54)
(smt.stats   77  11573 327666 1370959  6626/6257/563   15974/5144    47 3333   25.64)
(smt.stats   78  11674 329311 1381034  6686/6365/563   16074/5147    47 3333   25.64)
(smt.stats   79  11785 332566 1394362  6727/6401/563   16160/5178    48 3347   25.73)
(smt.stats   80  11907 337966 1410905  6817/6455/565   16297/5182    48 3347   25.83)
ramon: poll                 wall=8.000s usage=7.907s mem=27688KiB load=1.00 rootload=1.00
(smt.stats   81  12041 342665 1437525  6825/6524/568   16752/5188    49 3351   25.93)
(smt.stats   82  12188 351314 1491597  6826/6525/568   16939/5188    49 3351   25.93)
(smt.stats   83  12349 356281 1522488  6831/6530/569   17050/5260    50 3402   25.93)
(smt.stats   84  12526 361163 1559865  6836/6534/570   17309/5300    51 3412   25.93)
(smt.stats   85  12720 363545 1574454  6853/6549/571   17531/5304    51 3412   25.93)
(smt.stats   86  12933 371063 1622626  6892/6572/572   17964/5304    51 3412   25.93)
ramon: poll                 wall=9.003s usage=8.909s mem=27944KiB load=1.00 rootload=1.00
(smt.stats   87  13167 376161 1643361  7301/6593/572   18410/5423    52 3413   26.31)
(smt.stats   88  13424 381729 1687865  8109/7807/574   19507/5581    53 3418   26.59)
(smt.stats   89  13706 390727 1735675  8124/7821/574   20547/5582    53 3418   27.42)
ramon: poll                 wall=10.000s usage=9.905s mem=28964KiB load=1.00 rootload=1.00
(smt.stats   90  14016 398697 1778972  8203/7831/575   21474/5840    54 3420   27.60)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   91  14117 401672 1788557  8445/7920/575   21650/5850    54 3420   27.70)
(smt.stats   92  14228 405741 1811086  8691/8164/575   22184/5857    54 3420   28.00)
ramon: poll                 wall=11.000s usage=10.905s mem=29732KiB load=1.00 rootload=1.00
(smt.stats   93  14350 409385 1826101  9054/8474/577   22507/6022    55 3423   28.00)
(smt.stats   94  14484 412463 1838452  9341/8840/577   22719/6025    55 3423   28.09)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 256 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 2 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 2 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 2 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 2 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 64 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 64 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 32 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 16 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 33495522501198336 := 136315137 << 9
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
shl: (shl[64] (bv2int %0) (mod (+ #104 #355) 64)) 1688850132894208 := 136318021 << 9
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 355 := 532481 << 9
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 0 := 532481 << 9
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 0 := 532481 << 9
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 452 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 451 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 452 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 448 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 3 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 128 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 256 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 1 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 2 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 123 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 122 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 120 := 272630272&452
(smt.stats   95  14631 418145 1863347  9561/9211/634   23346/6077    56 3425   28.29)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 123 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 122 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 120 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 112 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 96 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 1 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 64 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 48 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 96 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 96 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 64 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 2 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272630272&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 2 := 272630272&452
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 0 := 272417280&452
band: (band[48] (shl[48] (bv2int %0) (mod #104 48)) (if (= #602 47) 1 (if #604 3 #737))) 2 := 272417280&452
(smt.stats   96  14792 421535 1885755  9661/9339/688   23577/6317    57 3459   28.74)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 1 := 67997843968&452
ramon: poll                 wall=12.000s usage=11.905s mem=30780KiB load=1.00 rootload=0.99
(smt.stats   97  14969 424493 1908009  9981/9378/688   24779/6322    57 3459   29.02)
(smt.delete-inactive-clauses  :num-deleted-clauses 816)
(smt.stats   98  15163 436264 1985865 10038/9685/688   24500/6325    57 3459   29.02)
(smt.stats   99  15376 449963 2048908 10161/9739/688   24843/6329    57 3459   29.12)
ramon: poll                 wall=13.000s usage=12.905s mem=31036KiB load=1.00 rootload=1.00
(smt.stats  100  15610 463427 2111378 10185/9862/690   26661/7116    58 3463   29.41)
(smt.stats  101  15867 485054 2255735 10192/9869/690   27510/7623    59 3468   29.60)
ramon: poll                 wall=14.000s usage=13.903s mem=31728KiB load=1.00 rootload=1.00
(smt.stats  102  16149 503544 2341095 10204/9881/691   29033/8199    60 3469   29.79)
ramon: poll                 wall=15.000s usage=14.903s mem=31728KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas          :deletions      )
(smt.stats  103  16459 515945 2425758 10470/10147/694   29868/8363    62 3501   29.98)
band: (band[48] (shl[64] (bv2int %0) (mod #356 64)) (if (= #756 63) 0 (if #758 1 #896))) 67914170368 := 67914170371&124341267716529
(smt.stats  104  16799 528757 2481351 10839/10174/695   31274/8377    62 3501   30.17)
(smt.stats  105  16900 531765 2499195 11134/10564/696   31634/8683    63 3508   30.36)
(smt.stats  106  17011 532355 2506844 11160/10831/696   32263/8683    63 3508   30.36)
(smt.stats  107  17133 535005 2541151 11177/10847/701   32629/8684    63 3508   30.46)
ramon: poll                 wall=16.000s usage=15.903s mem=32240KiB load=1.00 rootload=1.00
(smt.stats  108  17267 540290 2561047 11307/10853/701   33123/8894    64 3513   30.65)
ramon: poll                 wall=17.003s usage=16.907s mem=32496KiB load=1.00 rootload=1.00
(smt.stats  109  17414 546078 2597227 11504/10992/701   33594/8898    64 3513   30.75)
(smt.stats  110  17575 553151 2653895 11566/11239/704   35002/8988    65 3519   30.94)
ramon: poll                 wall=18.000s usage=17.902s mem=32720KiB load=1.00 rootload=1.00
(smt.stats  111  17752 575482 2856339 11567/11240/704   35510/8988    65 3519   31.03)
(smt.stats  112  17946 590361 2982660 11572/11245/705   36104/9287    67 3530   31.03)
(smt.stats  113  18159 598655 3044260 11610/11254/706   37579/9290    67 3530   31.32)
ramon: poll                 wall=19.000s usage=18.902s mem=33232KiB load=1.00 rootload=1.00
(smt.stats  114  18393 607435 3105514 11881/11303/706   38438/9847    68 3544   31.41)
ramon: poll                 wall=20.000s usage=19.902s mem=33232KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:05:02 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.985s
ramon: group.utime          19.965s
ramon: group.stime          0.020s
ramon: group.mempeak        33488KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              1.00
