ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:00:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40483 MiB
ramon: sys.mem.avail        61380 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ToTiW4SPa5AW.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3861027
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   254/254     0/0  64       0    18.53   0.00)
(sat.stats    114    930    0   254/254   114/39  64       0    18.87   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 343 :time 0.00)
(sat.stats    114    930    0   254/254   114/39  64       0    18.87   0.01)
(sat.stats    114    930    0   254/254   114/39  64       0    18.87   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 411818.87 :time 0.00)
(sat.stats    114    930    0   256/256    50/38  64       0    18.87   0.01)
(sat.stats    131   1156    1   256/256    67/53  64       0    18.87   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    134   1188    2   256/256    70/53  64       0    18.87   0.01)
(sat.stats    137   1228    3   256/256    73/53  64       0    18.87   0.01)
(sat.stats    140   1281    4   256/256    76/56  64       0    18.87   0.01)
(sat.stats    143   1329    5   256/256    79/59  64       0    18.87   0.01)
(sat.stats    182   2241    6   256/256   118/93  64       0    18.97   0.01)
(sat.stats    185   2287    7   256/256   121/93  64       0    18.97   0.01)
(sat.stats    188   2336    8   256/256   124/93  64       0    18.97   0.01)
(sat.stats    191   2392    9   256/256   127/93  64       0    18.97   0.01)
(sat.stats    194   2449   10   256/256   130/93  64       0    18.97   0.01)
(sat.stats    197   2492   11   256/256   133/93  64       0    18.97   0.01)
(sat.stats    200   2544   12   256/256   136/93  64       0    18.97   0.01)
(sat.stats    209   2710   15   256/256   145/98  64       0    18.97   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    358   5880   23   258/258   294/187  64       0    19.27   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2249 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4342 :time 0.00)
(sat.stats    489   7764   37   255/255   423/209  71       0    19.76   0.07)
lshr: (lshr[61] (bv2int %0) (+ 61 (* 2305843009213693951 #49))) 0 := 80 >>l 42
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 0&524288
lshr: (lshr[64] (mod (div #51 2) 1152921504606846976) (mod (+ 60 #745 #747) 64)) 40 := 40 >>l 41
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 4832 :time 0.00)
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 8946 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 2904 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 2640 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 2144 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 1472 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 384 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 2048 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 256 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 1536 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 1024 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 8192 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 4096 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 49152 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 163840 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 262144 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 65536 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 131072 := 524287&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 10178 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 4397 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 481088 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 208572 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 128 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 395776 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 256 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 46080 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 174080 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 479232 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 352256 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 32768 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 16384 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 458752 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 393216 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 262144 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 48 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 8 := 524288&524287
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524287&524288
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 32 := 524288&524287
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 8482 :time 0.00)
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 1 := 524285&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 4 := 524285&524288
(sat.stats    710  17145   61  1315/1312   639/252 324       0    21.78   0.25)
 (sat-cleaner :elim-literals 129 :elim-clauses 176 :cost 11442 :time 0.00)
lshr: (lshr[61] (bv2int %0) (+ 61 (* 2305843009213693951 #49))) 0 := 2305838611167298881 >>l 39
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 0&4194304
lshr: (lshr[64] (mod (div #51 2) 1152921504606846976) (mod (+ 60 #745 #747) 64)) 2305843009213680345 := 77633 >>l 38
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6571 :time 0.00)
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 524288&4194304
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 524288 := 4194304&524288
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1048577&4194304
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 1048576 := 4194304&1048577
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 2097153&4194304
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 2097152 := 4194304&2097153
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 524288 := 4194303&4194304
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 1048576 := 4194303&4194304
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 2097152 := 4194303&4194304
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 10718 :time 0.00)
(sat.stats   1120  43699   82  6463/6457   891/398 413       0    24.06   0.57)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11479 :time 0.00)
lshr: (lshr[61] (bv2int %0) (+ 61 (* 2305843009213693951 #49))) 2305838061414456470 := 2305838061414456470 >>l 31
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 771751936 := 1073739520&1073741824
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 809500672 := 1073739520&1073741824
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 947912704 := 1073739520&1073741824
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 939524096 := 1073739520&1073741824
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 889192448 := 1073739520&1073741824
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 805306368 := 1073739520&1073741824
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 536870912 := 1073739520&1073741824
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 67108864 := 1073739520&1073741824
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1073739520&1073741824
lshr: (lshr[64] (mod (div #51 2) 1152921504606846976) (mod (+ 60 #745 #747) 64)) 0 := 1152919030705684935 >>l 30
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1073739520&1073741824
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 679477248 := 1073741824&1073739520
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1073739520&1073741824
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 4194304 := 1073741824&1073739520
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1073739520&1073741824
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 469762048 := 1073741824&1073739520
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1073739520&1073741824
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 16777216 := 1073741824&1073739520
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1073739520&1073741824
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 33554432 := 1073741824&1073739520
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1073739520&1073741824
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 536870912 := 1073741824&1073739520
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1073739520&1073741824
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 134217728 := 1073741824&1073739520
band: (band[61] (lshr[61] (bv2int %0) (+ 61 #481)) (if (= #73 60) 1152921504606846976 (if #485 576460752303423488 #603))) 0 := 1073739520&1073741824
band: (band[61] (if (= #614 63) 9223372036854775808 (if #616 4611686018427387904 #740)) (lshr[64] (mod #464 1152921504606846976) (mod #748 64))) 268435456 := 1073741824&1073739520
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 15448 :time 0.00)
ramon: poll                 wall=1.001s usage=0.934s mem=26776KiB load=0.93 rootload=0.91
(sat.stats   1662  72305  141  7496/7488  1459/642 518       0    25.28   1.08)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 19801 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20245 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20723 :time 0.00)
ramon: poll                 wall=2.000s usage=1.930s mem=36056KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.930s mem=44616KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.930s mem=57964KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.929s mem=61804KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.005s usage=5.937s mem=65520KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.929s mem=68336KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.929s mem=70640KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.929s mem=72688KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.929s mem=92128KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.929s mem=94688KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.928s mem=96736KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.928s mem=98272KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.928s mem=99808KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.928s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.928s mem=100MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.928s mem=101MiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.928s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.928s mem=104MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.927s mem=105MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:00:42 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.080s
ramon: group.total          20.007s
ramon: group.utime          19.927s
ramon: group.stime          0.080s
ramon: group.mempeak        105MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.00
