ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:28:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42835 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/4nS0WXac38QD.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2790118
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   1851    958  1222/1063/98      74/9     4   15   18.96)
(smt.stats    1    202   2312   1571  1499/1274/98     189/26     4   15   19.06)
(smt.stats    2    313   3176   2772  1540/1389/101     309/45     6   18   19.06)
(smt.stats    3    414   3831   4085  1583/1416/101     414/56     7   19   19.15)
(smt.stats    4    525   4426   5337  1657/1476/119     487/93     9   45   19.15)
(smt.stats    5    647   5988   7086  1694/1542/119     605/98    10   50   19.15)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   8029   8435  1700/1555/119     704/98    10   50   19.26)
(smt.stats    7    859  10369   9943  1702/1557/120     812/101    11   50   19.26)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 49 := 50 << 2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 49 := 50 << 2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 49 := 4503599627370494 << 2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 49 := 4503599627370494 << 2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&49
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 49 := 4503599627370494 << 2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&56
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 0 := 7 << 3
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&56
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 0 := 7 << 3
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&56
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 0 := 7 << 3
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&56
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 0 := 7 << 3
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&56
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 0 := 7 << 3
(smt.stats    8    981  11606  11164  1773/1590/133     939/106    12   52   19.35)
(smt.stats    9   1115  13449  15190  1865/1667/135    1075/117    13   54   19.45)
(smt.stats   10   1216  14126  16754  1889/1715/135    1173/121    14   56   19.45)
(smt.stats   11   1327  15074  18509  1944/1761/135    1283/121    14   56   19.45)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 4503599627370542 := 562949953421324 << 6
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&128
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 129 := 299067162755073 << 7
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  17140  20458  1972/1818/152    1400/129    15   59   19.54)
(smt.stats   13   1583  18087  23296  2034/1868/154    1538/131    15   59   19.54)
(smt.stats   14   1730  19296  26637  2037/1880/154    1691/132    16   70   19.54)
(smt.stats   15   1831  20442  29516  2088/1892/154    1811/132    16   70   19.64)
(smt.stats   16   1942  21144  31895  2117/1949/154    1913/133    16   70   19.76)
(smt.stats   17   2064  21689  34779  2118/1966/154    2055/133    16   70   19.76)
(smt.stats   18   2198  22564  37903  2130/1970/155    2182/153    17   77   19.76)
(smt.stats   19   2345  23362  42104  2138/1980/156    2336/155    18   77   19.76)
(smt.stats   20   2506  24801  48002  2164/1990/156    2493/155    18   77   19.76)
(smt.stats   21   2607  25302  50231  2183/2023/156    2594/155    18   77   19.76)
(smt.stats   22   2718  26304  54270  2213/2052/157    2705/170    19   77   19.76)
(smt.stats   23   2840  29859  58418  2219/2064/157    2826/170    19   77   20.01)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&2251799813685247
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 38280596832649215 := 2251799813685250 << 1
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&2251799813685241
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 20266198323167225 := 4503599627370494 << 1
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1125899906842628
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 0 := 844424930131969 << 2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1125899906842628
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 0 := 844424930131969 << 2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1125899906842628
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 0 := 844424930131969 << 2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1266637395197956
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 0 := 879609302220801 << 2
(smt.stats   24   2974  31315  60575  2262/2103/169    2970/177    20   79   20.01)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 123848989752688686 := 1930114126015926 << 5
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 123848989752688686 := 1930114126015926 << 5
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 123848989752688686 := 1726379857158692 << 5
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 112589990684262446 := 1726379857158692 << 5
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&46
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 11258999068426286 := 1726379857158692 << 5
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&965057063007936
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 965057063007962 := 965057063007963 << 6
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&965057063007936
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 965057063007962 := 965057063007963 << 6
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&965057063007936
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 965057063007962 := 965057063007963 << 6
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&300239975158080
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 600479950316159 := 919484923921477 << 6
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&643371375338624
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 643371375338641 := 924846352049298 << 6
ramon: poll                 wall=1.000s usage=0.942s mem=21340KiB load=0.94 rootload=0.93
(smt.stats   25   3121  32453  62826  2351/2138/175    3140/189    21   86   20.21)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 9007199254741037 := 1688849860263938 << 4
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&9
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 9007199254741001 := 1688849860263938 << 4
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&45
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 9007199254741037 := 1688849860263938 << 4
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&32
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 7 := 844424930131969 << 5
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&32
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 7 := 844424930131969 << 5
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&32
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 1 := 2181431069507585 << 5
(smt.stats   26   3282  34771  66403  2462/2273/195    3338/197    21   86   20.31)
(smt.stats   27   3459  37842  72850  2522/2350/195    3505/246    22   97   20.31)
(smt.stats   28   3560  38808  73984  2570/2363/195    3611/246    22   97   20.41)
(smt.stats   29   3671  39901  77999  2642/2429/196    3747/251    23   99   20.41)
(smt.stats   30   3793  40928  83715  2668/2497/196    3858/251    23   99   20.50)
(smt.stats   31   3927  41318  86741  2687/2516/196    4004/251    23   99   20.50)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 54043195528445953 := 2251799813685248 << 46
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 54043195528445953 := 2251799813685248 << 46
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 40532396646334465 := 2251799813685248 << 46
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 47287796087390211 := 2251799813685248 << 46
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 40532396646334467 := 2251799813685248 << 46
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4074  43306  91157  2730/2524/196    4198/256    23   99   20.60)
(smt.stats   33   4235  44876  98809  2775/2585/202    4375/327    24  100   20.60)
(smt.stats   34   4412  46726 101956  2790/2609/203    4554/335    25  104   20.60)
(smt.stats   35   4606  49145 111262  2804/2628/203    4749/335    25  104   20.60)
(smt.stats   36   4707  50361 116326  2812/2635/203    4879/336    25  104   20.69)
(smt.stats   37   4818  52107 123788  3033/2766/203    5035/337    25  104   20.98)
ramon: poll                 wall=2.000s usage=1.942s mem=22196KiB load=1.00 rootload=1.00
(smt.stats   38   4940  53444 133596  3112/2897/211    5166/402    27  117   20.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 34)
(smt.stats   39   5074  54977 139224  3116/2901/214    5281/402    27  117   20.98)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1548112371908610
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 1 := 774056185954305 << 1
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1548112371908610
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 1 := 774056185954305 << 1
(smt.stats   40   5221  61370 147922  3145/2912/214    5437/404    27  117   20.98)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1631225062096896
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 815612531048449 := 815612531048448 << 1
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1631225062096896
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 815612531048449 := 815612531048448 << 1
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&1631225062096896
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 1631225062096896 := 1631225062096896 << 3
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&0
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 52 := 0 << 4
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 0&0
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 52 := 0 << 4
(smt.stats   41   5382  65021 153755  3188/2941/219    5618/410    28  128   21.18)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 1 := 1&1688849860263935
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 55732045388709887 := 1688849860263936 << 49
(smt.stats   42   5559  68276 163709  3255/3023/231    5807/430    29  130   21.27)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 1 := 1&1125899906842624
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 1&1125899906842624
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 3377699720527872 := 1688849860263936 << 49
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 1&1125899906842624
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 3377699720527872 := 1688849860263936 << 49
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 1&0
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 2251799813685247 := 844424930131968 << 50
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 1&0
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 2251799813685246 := 844424930131968 << 50
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 1&0
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 844424930131970 := 844424930131968 << 50
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 1&0
shl: (shl[51] (bv2int %1) (+ 51 (* 2251799813685247 #105))) 844424930131969 := 844424930131968 << 50
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 1 := 1688849860263936 << 50
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 2&2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 2&2
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 2&7
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 2 := 2&7
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 7 := 1688849860263936 << 50
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 1 := 2&1125899906842624
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 2&1125899906842624
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 1125899906842624 := 1688849860263936 << 50
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 2&1125899906842624
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 1125899906842624 := 1688849860263936 << 50
(smt.stats   43   5753  71456 174515  3329/3049/236    6044/451    30  134   21.37)
(smt.stats   44   5966  73722 187950  3399/3167/270    6292/466    32  149   21.48)
(smt.stats   45   6067  78233 191007  3455/3211/272    6403/466    32  149   21.57)
(smt.stats   46   6178  81675 196059  3502/3258/273    6530/495    33  158   21.78)
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 2 := 2&1125899906842624
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 1 := 2&1125899906842624
band: (band[51] (if (or #420 #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 ...) 0 (if #417 1 #869)) (shl[64] (* 2 #357) (mod #1075 64))) 0 := 2&1125899906842624
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 50 #1067 #1071) 64)) 12384898975268864 := 3096224743817216 << 50
(smt.stats   47   6300  86309 204499  3523/3262/273    6664/495    33  158   21.78)
(smt.stats   48   6434  88782 213598  3593/3291/273    6819/499    33  158   22.06)
(smt.stats   49   6581  91731 226126  3718/3442/277    7008/531    34  159   22.06)
(smt.stats   50   6742 101930 242833  3733/3471/278    7169/548    35  167   22.16)
(smt.stats   51   6919 106323 256255  3748/3478/278    7342/552    36  168   22.16)
ramon: poll                 wall=3.000s usage=2.941s mem=23524KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 108620 264107  3755/3493/278    7554/552    36  168   22.25)
(smt.stats   53   7326 113002 276685  3770/3504/278    7774/553    36  168   22.25)
(smt.stats   54   7560 119696 295874  3787/3513/281    8062/569    37  172   22.35)
(smt.stats   55   7661 120966 301627  3796/3532/281    8169/569    37  172   22.35)
(smt.stats   56   7772 121713 307307  3807/3541/281    8293/569    37  172   22.55)
(smt.stats   57   7894 122525 314924  4095/3746/281    8424/569    37  172   22.76)
(smt.stats   58   8028 124773 320858  4433/4113/281    8586/570    37  172   22.85)
ramon: poll                 wall=4.000s usage=3.941s mem=24300KiB load=1.00 rootload=1.00
(smt.stats   59   8175 125656 322140  4689/4391/281    8743/570    37  172   23.54)
ramon: poll                 wall=5.000s usage=4.941s mem=25220KiB load=1.00 rootload=1.00
(smt.stats   60   8336 126049 322745  5168/4906/281    8904/570    37  172   24.31)
(smt.stats   61   8513 126581 325296  6042/5602/281    9152/570    37  172   24.02)
ramon: poll                 wall=6.000s usage=5.941s mem=25928KiB load=1.00 rootload=1.00
(smt.stats   62   8707 127049 326461  6343/6059/281    9364/571    37  172   24.41)
(smt.stats   63   8920 128315 335004  7080/6727/281    9620/571    37  172   24.50)
ramon: poll                 wall=7.000s usage=6.940s mem=26040KiB load=1.00 rootload=1.00
(smt.stats   64   9154 131803 346921  7668/7406/285    9873/653    38  180   24.31)
(smt.stats   65   9411 136527 358477  7700/7422/286   10139/665    39  186   24.50)
(smt.stats   66   9512 138391 364799  7790/7514/286   10357/666    39  186   24.50)
(smt.stats   67   9623 140984 371737  7900/7565/286   10609/668    39  186   24.60)
(smt.stats   68   9745 143861 378117  8045/7707/286   10844/675    39  186   24.60)
ramon: poll                 wall=8.000s usage=7.940s mem=26296KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.940s mem=26296KiB load=1.00 rootload=1.00
(smt.stats   69   9879 145717 381279  8260/7825/286   11018/678    39  186   24.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 148605 393197  8524/8118/286   11193/679    39  186   24.79)
ramon: poll                 wall=10.000s usage=9.940s mem=26552KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10187 151780 405182  8739/8334/287   11438/1030    40  188   24.88)
(smt.stats   72  10364 155017 422476  8925/8535/287   11669/1034    40  188   24.98)
ramon: poll                 wall=11.000s usage=10.940s mem=26552KiB load=1.00 rootload=1.00
(smt.stats   73  10558 160332 444176  9165/8726/288   11921/1150    41  190   24.98)
(smt.stats   74  10771 164383 464004  9315/8956/289   12282/1204    42  193   25.23)
(smt.stats   75  11005 170785 487115  9356/9077/289   12728/1205    42  193   25.23)
ramon: poll                 wall=12.000s usage=11.940s mem=27064KiB load=1.00 rootload=0.99
(smt.stats   76  11262 180741 524387  9557/9128/289   13201/1212    42  193   25.23)
ramon: poll                 wall=13.000s usage=12.940s mem=27064KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.940s mem=27064KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.938s mem=27308KiB load=1.00 rootload=1.00
(smt.stats   77  11544 185650 536846  9878/9614/292   13606/1559    43  197   25.51)
ramon: poll                 wall=16.000s usage=15.938s mem=27092KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.938s mem=27348KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.938s mem=27348KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.938s mem=27348KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.938s mem=27348KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:28:38 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.988s
ramon: group.stime          0.012s
ramon: group.mempeak        27348KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.00
