ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:48:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25126 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/gsMlZczzpBOc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             117338
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4123   1525  1137/1025/100      92/11     6   15   19.07)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 17592186044414&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65535 := 131072&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 131072&65535
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 131072&65535
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65534 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65532 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65534 := 131072&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65534 := 131072&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 131072&65535
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 16 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 32 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 64 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 128 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 256 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 512 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 256 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 512 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1024 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2048 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4096 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8192 := 65536&65535
(smt.stats    1    202   5314   3126  1938/1652/124     191/18     8   16   19.67)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 1 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 2 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 2 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 8 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 16 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 65504 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 64 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 128 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 256 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 512 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 1024 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 2048 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 4096 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 8192 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 16384 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 32768 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 16400 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 16512 := 65536&65535
(smt.stats    2    313   6014   4312  1952/1765/245     309/19    11   49   20.84)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 6684672&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 24576 := 6684672&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 6684672&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 24576 := 6684672&65535
(smt.stats    3    415   8082   8544  2452/2259/263     456/89    14   61   20.45)
(smt.stats    4    526   9018  10196  2712/2492/269     593/148    16   66   20.55)
(smt.stats    5    648  10433  12301  2857/2522/269     720/156    16   66   20.64)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  12075  16904  2940/2719/271     835/173    18   71   20.74)
(smt.stats    7    860  15611  23565  2972/2748/273     969/178    19   73   20.74)
(smt.stats    8    982  16936  27328  3079/2849/282    1099/219    21   81   20.83)
(smt.stats    9   1116  20865  34629  3101/2861/282    1222/221    21   81   20.93)
ramon: poll                 wall=1.003s usage=1.001s mem=22368KiB load=1.00 rootload=0.99
(smt.stats   10   1217  24398  40381  3191/2878/282    1329/222    21   81   21.04)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439553&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439553&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268451841&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268451841&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439568&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439568&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439570&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439570&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443650&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443648&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443650&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443666&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439568&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439570&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443666&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268451856&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268451858&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268447742&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443664&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443666&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443666&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8210 := 268443664&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8210 := 268443666&131071
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 268443666 := 268443666 << 17
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8210 := 268443664&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8210 := 268443666&131071
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 268443666 := 268443666 << 17
(smt.stats   11   1328  26360  43532  3320/2965/282    1505/229    21   81   21.23)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 7170 := 268439553&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2 := 268468224&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2 := 268468226&131071
(smt.stats   12   1450  29075  49816  3388/3093/344    1751/271    22   93   21.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1584  31864  56391  3486/3223/357    1980/383    23  100   21.43)
(smt.stats   14   1731  35151  63674  3655/3277/357    2131/457    24  110   21.43)
(smt.stats   15   1832  37216  69323  3693/3453/357    2235/457    24  110   21.43)
(smt.stats   16   1943  40185  78327  3732/3499/358    2348/479    25  115   21.43)
(smt.stats   17   2065  44020  88027  3763/3511/359    2517/500    26  120   21.52)
(smt.stats   18   2199  46808  94408  3809/3538/359    2656/502    26  120   21.52)
(smt.stats   19   2346  51730 102900  3885/3608/359    2837/503    26  120   21.62)
(smt.stats   20   2507  55533 113619  3988/3749/360    3183/665    27  127   21.62)
(smt.stats   21   2608  59620 125425  3992/3753/360    3307/665    27  127   21.62)
(smt.stats   22   2719  63814 139185  4006/3758/360    3501/665    27  127   21.72)
(smt.stats   23   2841  67010 150395  4010/3770/361    3752/763    28  128   21.85)
(smt.stats   24   2975  70340 165554  4027/3786/364    3929/825    29  131   21.85)
ramon: poll                 wall=2.000s usage=1.998s mem=23108KiB load=1.00 rootload=0.99
(smt.stats   25   3122  72120 172702  4047/3789/364    4091/825    29  131   21.85)
(smt.stats   26   3283  76640 191046  4209/3929/368    4358/964    31  153   21.98)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3460  79510 202093  4236/3991/373    4669/1061    32  171   21.98)
(smt.stats   28   3561  81011 209543  4263/4016/378    4778/1095    33  196   22.08)
(smt.stats   29   3672  82756 216114  4307/4052/382    4899/1095    33  196   22.08)
(smt.stats   30   3794  85194 224294  4369/4057/382    5037/1106    34  205   22.08)
(smt.stats   31   3928  87343 235715  4450/4154/383    5253/1116    35  207   22.27)
(smt.stats   32   4075  92384 247569  4459/4202/383    5466/1116    35  207   22.46)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 0&4294967295
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 0 := 0 << 32
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 0&4294967295
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 16384 := 0 << 32
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 0&4294967295
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 0 := 0 << 32
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 0&4294967295
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 16384 := 0 << 32
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
(smt.stats   33   4236  96693 266651  4525/4211/383    5733/1121    35  207   22.46)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295196688&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295131156&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295131380&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134748&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134748&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134716&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295132732&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295132732&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295132796&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295133180&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295133180&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295133180&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295133500&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134332&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134716&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134972&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295135228&4294967295
(smt.stats   34   4413  99291 280794  4984/4377/394    6273/1181    36  209   23.04)
(smt.stats   35   4607 101312 291030  4992/4708/438    6981/1224    37  217   23.04)
(smt.stats   36   4708 104068 301205  5060/4710/438    7170/1224    37  217   23.13)
ramon: poll                 wall=3.000s usage=2.998s mem=24452KiB load=1.00 rootload=1.00
(smt.stats   37   4819 106800 309873  5154/4802/438    7377/1383    38  233   23.13)
(smt.stats   38   4941 110211 324418  5229/4949/444    7904/1488    39  239   23.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 78)
(smt.stats   39   5075 113908 340343  5318/4952/444    8243/1489    39  239   23.32)
(smt.stats   40   5222 115346 351560  5325/5045/445    8459/1680    40  243   23.42)
(smt.stats   41   5383 117695 365784  5332/5052/445    8877/1680    40  243   23.42)
(smt.stats   42   5560 122296 388941  5357/5077/446    9310/1733    41  243   23.51)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2048 := 591906&4095
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2048 := 591906&4095
(smt.stats   43   5754 126557 407601  5695/5122/446    9955/1740    41  243   23.71)
(smt.stats   44   5967 128833 423248  6267/5969/454   10842/1841    42  244   23.89)
ramon: poll                 wall=4.000s usage=3.998s mem=25520KiB load=1.00 rootload=1.00
(smt.stats   45   6068 131334 436568  6331/5972/454   11969/1845    42  244   24.09)
(smt.stats   46   6179 132585 442478  6340/6038/455   12072/2289    43  265   24.09)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6301 138146 472929  6473/6051/456   12573/2292    43  265   24.18)
(smt.stats   48   6435 140701 499682  6567/6269/457   13082/2355    44  266   24.28)
(smt.stats   49   6582 144570 518722  6592/6287/457   14035/2355    44  266   24.37)
(smt.stats   50   6743 149312 544056  6671/6365/459   14283/2717    45  270   24.47)
(smt.stats   51   6920 153117 560441  6765/6392/459   14669/2719    45  270   24.47)
(smt.stats   52   7114 153802 571044  6799/6499/459   15218/2791    46  271   24.56)
ramon: poll                 wall=5.003s usage=4.999s mem=26084KiB load=1.00 rootload=1.00
(smt.stats   53   7327 158297 590334  6920/6502/459   15549/2798    46  271   24.66)
(smt.stats   54   7561 162393 634315  7002/6633/459   16135/2800    46  271   24.66)
(smt.stats   55   7662 165174 647669  7055/6719/461   16632/3024    47  277   24.76)
(smt.stats   56   7773 170763 678481  7091/6791/461   17359/3024    47  277   24.85)
(smt.stats   57   7895 174955 706436  7098/6795/461   18015/3024    47  277   25.07)
(smt.stats   58   8029 177816 723932  7149/6804/461   18734/3025    47  277   25.21)
(smt.stats   59   8176 184200 752579  7250/6866/461   19047/3028    47  277   25.30)
ramon: poll                 wall=6.000s usage=5.996s mem=26724KiB load=1.00 rootload=0.99
(smt.stats   60   8337 190062 794357  7326/6963/461   19518/3029    47  277   25.40)
(smt.stats   61   8514 194189 827561  7381/7081/462   19977/3610    48  280   25.49)
(smt.stats   62   8708 204808 915177  7390/7090/462   20365/3610    48  280   25.49)
(smt.stats   63   8921 212196 949740  7569/7101/462   21646/3631    48  280   25.69)
ramon: poll                 wall=7.000s usage=6.995s mem=27204KiB load=1.00 rootload=1.00
(smt.stats   64   9155 219856 985930  7677/7288/462   22622/3632    48  280   25.78)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9412 228462 1036135  7868/7406/462   23319/3634    48  280   25.88)
(smt.stats   66   9513 229029 1042710  7952/7652/462   23711/3634    48  280   25.98)
(smt.stats   67   9624 233269 1068526  8066/7662/462   24118/3635    48  280   25.98)
(smt.stats   68   9746 236933 1083718  8100/7779/462   24381/3637    48  280   26.07)
(smt.stats   69   9880 238933 1108382  8121/7817/462   24720/3637    48  280   26.07)
(smt.delete-inactive-clauses  :num-deleted-clauses 1153)
(smt.stats   70  10027 240864 1126645  8144/7838/462   24116/3638    48  280   26.07)
(smt.stats   71  10189 245906 1168961  8152/7852/463   24413/4646    49  285   26.16)
(smt.stats   72  10366 249561 1201976  8165/7859/463   24660/4646    49  285   26.16)
ramon: poll                 wall=8.000s usage=7.995s mem=27844KiB load=1.00 rootload=1.00
(smt.stats   73  10560 255087 1243719  8301/7866/463   25437/4649    49  285   26.26)
ramon: poll                 wall=9.000s usage=8.995s mem=28156KiB load=1.00 rootload=1.00
(smt.stats   74  10773 261027 1281350  8611/8002/463   25914/4658    49  285   26.54)
(smt.stats   75  11007 266707 1308206  8779/8346/463   26436/4664    49  285   26.72)
ramon: poll                 wall=10.003s usage=9.997s mem=28464KiB load=1.00 rootload=1.00
(smt.stats   76  11264 270214 1336191  8922/8565/463   27215/4664    49  285   26.81)
(smt.stats   77  11546 279286 1388891  8997/8631/464   27903/4892    50  287   26.91)
(smt.stats   78  11647 281831 1400345  9053/8699/464   28082/4893    50  287   26.91)
(smt.stats   79  11758 285594 1423933  9057/8754/464   28432/4893    50  287   26.91)
(smt.stats   80  11880 288689 1455198  9062/8756/464   28831/4893    50  287   27.01)
(smt.stats   81  12014 291977 1487571  9087/8770/466   29808/5035    51  292   27.10)
ramon: poll                 wall=11.000s usage=10.994s mem=28752KiB load=1.00 rootload=1.00
(smt.stats   82  12161 298974 1516263  9257/8789/466   30511/5039    51  292   27.29)
(smt.stats   83  12322 306303 1546887  9494/8965/466   31091/5050    51  292   27.39)
(smt.stats   84  12499 310019 1580218  9557/9254/466   32018/5050    51  292   27.39)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   85  12693 313695 1590051  9560/9255/466   32575/5051    51  292   27.39)
ramon: poll                 wall=12.000s usage=11.994s mem=28976KiB load=1.00 rootload=1.00
(smt.stats   86  12906 320822 1662177  9693/9274/466   33248/5056    51  292   27.48)
(smt.stats   87  13140 327590 1710927  9926/9397/466   35001/5067    51  292   27.76)
(smt.stats   88  13397 331637 1729900 10085/9662/466   35549/5069    51  292   27.86)
ramon: poll                 wall=13.000s usage=12.994s mem=29580KiB load=1.00 rootload=1.00
(smt.stats   89  13679 339866 1826766 10134/9824/466   37211/5071    51  292   27.95)
(smt.stats   90  13989 345794 1918634 10144/9835/466   37904/5071    51  292   28.05)
(smt.stats   91  14090 347120 1933156 10147/9844/466   38011/5071    51  292   28.05)
(smt.stats   92  14201 350375 1986829 10153/9850/466   38136/5071    51  292   28.44)
(smt.stats   93  14323 352319 2029042 10166/9855/466   38281/5074    51  292   28.55)
(smt.stats   94  14457 354869 2049937 10309/9950/467   38778/6031    52  293   28.55)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   95  14604 357868 2076549 10323/10020/467   39308/6031    52  293   28.65)
ramon: poll                 wall=14.000s usage=13.993s mem=30260KiB load=1.00 rootload=1.00
(smt.stats   96  14765 363368 2146259 10455/10021/467   39667/6034    52  293   28.65)
(smt.stats   97  14942 365417 2187921 10472/10169/467   39936/6034    52  293   28.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15136 366561 2198683 10479/10173/467   40176/6034    52  293   28.84)
(smt.stats   99  15349 372309 2288800 10544/10225/467   41030/6034    52  293   29.12)
(smt.stats  100  15583 377939 2345707 10636/10258/467   41460/6034    52  293   29.22)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 17592186038094&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 17592186038094 := 268435468 << 1
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 17592186036814&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 17592186036814 := 268435559 << 1
(smt.stats  101  15840 382925 2386174 10904/10310/468   42089/6334    53  293   29.41)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 536874734&1
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 8207682502656 := 268437367 << 1
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 536874990&1
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 8757438316544 := 268437495 << 1
ramon: poll                 wall=15.000s usage=14.993s mem=30904KiB load=1.00 rootload=1.00
(smt.stats  102  16122 385794 2419356 11067/10691/474   42420/6334    53  293   29.41)
(smt.stats  103  16432 394050 2517417 11153/10779/474   43461/6337    53  293   29.50)
ramon: poll                 wall=16.000s usage=15.993s mem=31296KiB load=1.00 rootload=0.99
(smt.stats  104  16772 407037 2601135 11320/10833/476   45412/6477    54  299   29.79)
(smt.stats  105  16873 411310 2642825 11375/11016/476   46049/6479    54  299   29.89)
(smt.stats  106  16984 412849 2670421 11394/11061/477   46360/6953    55  302   29.89)
(smt.stats  107  17106 415629 2733658 11396/11063/477   46617/6953    55  302   29.89)
(smt.stats  108  17240 422086 2807064 11402/11069/477   47324/6953    55  302   29.99)
ramon: poll                 wall=17.003s usage=16.996s mem=31584KiB load=1.00 rootload=1.00
(smt.stats  109  17387 428792 2872329 11428/11071/477   47740/7191    56  303   30.09)
(smt.stats  110  17548 432324 2905065 11472/11114/477   48390/7191    56  303   30.09)
(smt.stats  111  17725 440105 2982198 11477/11144/477   49551/7191    56  303   30.18)
(smt.stats  112  17919 447675 3026285 11563/11147/477   50065/7195    56  303   30.28)
(smt.stats  113  18132 453136 3079320 11571/11238/478   51074/7412    57  305   30.37)
ramon: poll                 wall=18.000s usage=17.993s mem=31992KiB load=1.00 rootload=1.00
(smt.stats  114  18366 462163 3117768 11583/11250/478   51514/7412    57  305   30.37)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  115  18623 466328 3188704 11596/11255/478   51945/7415    57  305   30.47)
(smt.stats  116  18905 471957 3239577 11677/11281/478   53058/7417    57  305   30.56)
ramon: poll                 wall=19.000s usage=18.992s mem=32308KiB load=1.00 rootload=1.00
(smt.stats  117  19215 479670 3315305 11809/11466/480   54583/7606    58  308   30.75)
(smt.stats  118  19555 495758 3512937 11854/11496/480   56054/7606    58  308   31.05)
ramon: poll                 wall=20.000s usage=19.992s mem=32676KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:49:04 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.001s
ramon: group.utime          19.973s
ramon: group.stime          0.028s
ramon: group.mempeak        33188KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
