ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:22:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41505 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Tbp22aLjerzL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2974488
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&239
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 238 << 28
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 238 << 28
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379698 := 259379698&137438953469
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379697 := 259379698&137438953469
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379696 := 259379698&137438953469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953469 := 238 << 28
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379696 := 259379698&137438953469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953469 := 238 << 28
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379698 := 259379698&137438953469
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 259379698&63887638529
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638529
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 63887638529 := 238 << 28
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 0 := 119 << 29
(smt.stats    0    103   2802    873  1079/968/112     103/12     4   20   19.04)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 0 := 119 << 29
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 0 := 119 << 29
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379698 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379696 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379695 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379696 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379680 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379660 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379648 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 128 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 256 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 512 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 1024 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2048 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 4096 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 8192 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2624 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2624 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2560 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2560 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2560 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2560 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 3072 := 259379698&63887638528
(smt.stats    1    204   3358   1332  1730/1548/168     218/25     6   32   19.63)
(smt.stats    2    315   3587   1974  2075/1777/178     437/32     7   34   19.72)
(smt.stats    3    420   4651   4804  2417/2245/183     645/73     9   36   19.72)
(smt.stats    4    532   6805  12695  2544/2362/192     979/214    13   55   19.82)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719485440 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 2199023255552 := 68719485440 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719485440 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719485440 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 281796497 := 38654707456 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&281796484
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 274877906944 := 68719485440 << 31
(smt.stats    5    654   8544  18180  2749/2441/211    1233/248    15   64   20.11)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037589 := 2075037590&4294967296
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037588 := 2075037590&4294967296
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037584 := 2075037590&4294967296
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&4294967296
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 2075037588 := 98784248577 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&4294967296
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 536871040 := 98784248577 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&4294967296
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 536870933 := 98784248577 << 32
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    755   9072  20992  2890/2587/211    1335/250    15   64   20.20)
(smt.stats    7    866  10066  29325  3088/2879/222    1554/339    17   68   20.30)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037589 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037589 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037588 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037589 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037588 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037584 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037576 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037568 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037568 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037565 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037532 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 40 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 32 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 64 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 528 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 528 := 2075037590&60129542144
(smt.stats    8    988  10782  32717  3243/2916/222    1890/343    17   68   20.60)
(smt.stats    9   1122  15102  47508  3300/3110/269    2089/510    20   90   20.70)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2 := 4150075180&60129556336
(smt.stats   10   1223  19081  54180  3348/3146/273    2235/552    23  101   20.70)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 8 := 4150075180&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 8 := 8 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 8 := 4150075180&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 8 := 8 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 4150075180&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 1 := 8 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 4150075180&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 0 := 8 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 4150075180&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 0 := 8 << 32
(smt.stats   11   1334  21543  69292  3440/3202/275    2496/560    24  103   20.99)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&3
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&3
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&1
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&1
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2 := 16600300723&3
ramon: poll                 wall=1.000s usage=0.984s mem=22376KiB load=0.98 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1456  23501  76655  3557/3331/293    2727/641    26  111   21.18)
(smt.stats   13   1590  28924  93276  3588/3357/294    3177/708    27  118   21.18)
(smt.stats   14   1737  34449 107769  3745/3363/294    3854/712    27  118   21.27)
(smt.stats   15   1838  36994 115278  3817/3518/294    4216/713    27  118   21.57)
(smt.stats   16   1949  41576 129354  3833/3601/297    5137/1260    28  130   21.67)
(smt.stats   17   2071  43280 135081  3847/3615/308    5506/1260    28  130   21.76)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2205  48781 148888  3852/3622/310    5691/1359    29  194   21.76)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 1&60129556267
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 472446416683 := 144 << 1
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 1&60129556267
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 472446416683 := 218 << 1
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 1&60129556267
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 472446416683 := 144 << 1
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 1&140
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 36 := 35 << 2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 36 := 35 << 2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 36 := 35 << 2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 63 := 35 << 2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 1 := 1&140
(smt.stats   19   2352  51930 157028  3912/3632/310    5923/1386    30  201   21.98)
(smt.stats   20   2513  56510 165032  3958/3715/327    6160/1403    31  217   21.98)
(smt.stats   21   2614  59225 172299  4013/3731/327    6337/1403    31  217   22.07)
(smt.stats   22   2725  61203 177052  4046/3783/327    6536/1403    31  217   22.17)
(smt.stats   23   2847  64737 187765  4083/3827/327    6805/1403    31  217   22.26)
ramon: poll                 wall=2.000s usage=1.980s mem=23616KiB load=1.00 rootload=0.99
(smt.stats   24   2981  67805 198719  4141/3888/328    7398/1493    32  221   22.26)
(smt.stats   25   3128  74448 215263  4145/3892/328    7663/1493    32  221   22.36)
(smt.stats   26   3289  81284 237769  4155/3899/329    7975/1782    33  222   22.36)
(smt.stats   27   3466  85975 248757  4282/3907/329    8413/1789    33  222   22.55)
(smt.stats   28   3567  88733 257056  4301/4041/333    8791/1845    34  224   22.55)
(smt.stats   29   3678  92200 265553  4367/4079/334    9036/1956    35  237   22.64)
ramon: poll                 wall=3.000s usage=2.977s mem=24072KiB load=1.00 rootload=1.00
(smt.stats   30   3800  94254 270468  4424/4120/335    9330/1961    35  237   22.74)
(smt.stats   31   3934  97065 278674  4495/4212/335    9727/1963    35  237   22.83)
(smt.stats   32   4081 100045 286412  4544/4248/335   10041/2122    36  244   22.83)
(smt.stats   33   4242 105609 310178  4593/4340/336   10576/2122    36  244   22.83)
(smt.stats   34   4419 110939 332228  4610/4357/336   11028/2232    37  248   22.93)
(smt.stats   35   4613 117805 352165  4622/4369/336   11323/2232    37  248   22.93)
(smt.stats   36   4714 121530 361390  4738/4388/337   11458/2287    38  248   22.93)
(smt.stats   37   4825 123364 366720  4920/4485/337   11670/2289    38  248   23.08)
ramon: poll                 wall=4.000s usage=3.925s mem=24480KiB load=0.95 rootload=0.95
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4947 124853 372803  5047/4682/337   11939/2291    38  248   23.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5081 128219 390594  5099/4842/337   12464/2291    38  248   23.28)
(smt.stats   40   5228 131557 406743  5295/4849/338   12978/2422    39  255   23.47)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075034188 := 66401202892&120259104660
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075034188 := 66401202892&120259104660
(smt.stats   41   5389 133943 419878  5630/5069/338   13295/2424    39  255   23.57)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1292 := 66401202892&2075036808
(smt.stats   42   5566 135319 424015  5841/5401/343   13623/2475    40  256   23.67)
(smt.stats   43   5760 137873 437731  6275/5728/343   13958/2479    40  256   23.88)
ramon: poll                 wall=5.000s usage=4.923s mem=25384KiB load=1.00 rootload=0.99
(smt.stats   44   5973 140309 448249  6592/6055/343   14863/2481    40  256   23.97)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075035616 := 66401202892&2075036391
(smt.stats   45   6074 141890 456220  6667/6343/343   15703/2572    41  256   24.07)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075035616 := 66401202892&2075035776
(smt.stats   46   6185 144373 465199  6726/6423/343   15940/2575    41  256   24.07)
(smt.stats   47   6307 147075 476361  6842/6498/343   16632/2580    41  256   24.26)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075035584 := 33200601446&2075035713
(smt.stats   48   6441 149527 488366  6908/6648/350   17175/2881    42  300   24.26)
(smt.stats   49   6588 152807 497419  6925/6665/350   17651/2881    42  300   24.36)
ramon: poll                 wall=6.000s usage=5.922s mem=25868KiB load=1.00 rootload=1.00
(smt.stats   50   6749 157277 529565  7011/6745/352   18357/3068    43  314   24.55)
(smt.stats   51   6926 161785 548140  7060/6777/352   18836/3071    43  314   24.62)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075036207 := 33200601446&2075036207
(smt.stats   52   7120 165894 565625  7140/6818/352   19409/3074    43  314   24.72)
(smt.stats   53   7333 169547 592886  7343/6916/353   20345/3230    44  316   24.81)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 222 << 36
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 222 << 36
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 222 << 36
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 74 << 36
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 74 << 36
(smt.stats   54   7567 174564 626121  7390/7109/355   20870/3231    44  316   25.00)
(smt.stats   55   7668 177254 642284  7412/7144/360   21287/3300    45  337   25.10)
(smt.stats   56   7779 179709 656715  7420/7149/360   21638/3300    45  337   25.10)
ramon: poll                 wall=7.000s usage=6.922s mem=26700KiB load=1.00 rootload=1.00
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 41 := 61&57
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 41 := 61&41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953513 := 134 << 6
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 41 := 61&41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 11682311045161 := 134 << 6
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 41 := 61&41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 11682311045161 := 134 << 6
(smt.stats   57   7901 183033 681565  7462/7166/360   22003/3302    45  337   25.20)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8035 185447 694315  7500/7226/365   22252/3458    46  338   25.20)
(smt.stats   59   8182 188680 708530  7565/7231/365   22535/3463    46  338   25.49)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 16 := 30&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953489 := 184683593748 << 5
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 16 := 30&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953489 := 184683593748 << 5
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 16 := 30&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953489 := 47244640278 << 5
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 16 := 30&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953489 := 47244640278 << 5
(smt.stats   60   8343 193331 724961  7710/7433/372   22765/3468    46  338   25.49)
(smt.stats   61   8520 197638 753289  7763/7443/372   23155/3495    47  345   25.68)
(smt.stats   62   8714 204452 786512  7782/7499/372   23654/3495    47  345   25.78)
ramon: poll                 wall=8.000s usage=7.921s mem=27404KiB load=1.00 rootload=1.00
(smt.stats   63   8927 210876 819597  7808/7514/373   24455/3559    48  350   25.78)
(smt.stats   64   9161 215575 835480  7828/7552/375   24832/3559    48  350   25.78)
(smt.stats   65   9419 221732 886233  7846/7567/375   25765/3680    49  363   25.87)
(smt.stats   66   9520 223685 893885  7854/7577/375   26182/3680    49  363   25.97)
(smt.stats   67   9631 226876 903280  7860/7583/375   26362/3680    49  363   25.97)
(smt.stats   68   9753 234789 925975  7865/7586/375   26616/3680    49  363   25.97)
(smt.stats   69   9887 239830 952055  7891/7594/375   27187/3680    49  363   26.06)
ramon: poll                 wall=9.000s usage=8.921s mem=27672KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
(smt.stats   70  10034 242918 965702  7930/7627/375   27475/3682    49  363   26.18)
(smt.stats   71  10195 247432 980881  8007/7672/375   27719/3686    49  363   26.27)
(smt.stats   72  10372 251369 994766  8202/7925/377   28104/3969    50  364   26.37)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10566 256439 1015882  8217/7940/378   28606/3970    50  364   26.37)
ramon: poll                 wall=10.000s usage=9.921s mem=28036KiB load=1.00 rootload=1.00
(smt.stats   74  10779 262196 1038746  8498/7943/379   29009/3979    50  364   26.47)
(smt.stats   75  11013 265907 1058983  8795/8236/379   29557/4080    51  370   26.56)
ramon: poll                 wall=11.000s usage=10.920s mem=28236KiB load=1.00 rootload=1.00
(smt.stats   76  11270 277681 1152137  8839/8562/379   30712/4080    51  370   26.81)
(smt.stats   77  11552 289397 1207565  8860/8572/379   31446/4080    51  370   26.91)
(smt.stats   78  11653 292645 1224708  8917/8587/379   31826/4081    51  370   27.00)
(smt.stats   79  11764 296221 1238185  8956/8659/379   32058/4081    51  370   27.00)
(smt.stats   80  11886 299778 1263895  8981/8704/379   32514/4081    51  370   27.00)
(smt.stats   81  12020 303123 1277974  8995/8710/379   32877/4081    51  370   27.10)
ramon: poll                 wall=12.000s usage=11.920s mem=29000KiB load=1.00 rootload=1.00
(smt.stats   82  12167 307708 1300090  9142/8722/379   33317/4085    51  370   27.26)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1649 := 16600300723&71037752225
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1633 := 16600300723&71037752321
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1633 := 16600300723&71037752289
(smt.stats   83  12328 312880 1339538  9285/8903/379   33686/4085    51  370   27.26)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 16600300723&120259103601
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 16600300723&120259103537
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 16600300723&120259103537
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 16600300723&120259103537
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 16600300723&120259103537
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 16600300723&120259103537
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 16600300723&120259103537
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 16600300723&120259103537
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 16600300723&120259103537
(smt.stats   84  12505 316704 1365436  9415/9023/384   34168/4640    52  371   27.45)
ramon: poll                 wall=13.000s usage=12.920s mem=29208KiB load=1.00 rootload=0.99
(smt.stats   85  12699 321936 1414094  9758/9179/389   34813/4644    52  371   27.65)
(smt.stats   86  12912 326731 1450072 10078/9499/389   35587/4648    52  371   27.74)
(smt.stats   87  13146 333332 1476208 10202/9925/390   37182/4726    53  372   27.93)
ramon: poll                 wall=14.000s usage=13.920s mem=29520KiB load=1.00 rootload=1.00
(smt.stats   88  13403 341917 1510544 10239/9934/390   38165/4727    53  372   27.93)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&40
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&40
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&40
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&200
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&200
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&264
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 19653770346760 := 150860726562 << 34
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&264
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 19653770346760 := 150860726266 << 34
(smt.stats   89  13685 348745 1563669 10350/9988/390   39440/4728    53  372   28.12)
ramon: poll                 wall=15.000s usage=14.919s mem=29884KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   90  13995 357675 1667770 10386/10088/405   41122/5065    54  376   28.40)
(smt.stats   91  14096 360514 1682565 10407/10124/405   41706/5146    55  376   28.40)
(smt.stats   92  14207 363902 1705210 10443/10148/405   42652/5147    55  376   28.49)
(smt.stats   93  14329 371213 1773315 10459/10181/405   43175/5147    55  376   28.59)
(smt.stats   94  14463 375250 1798223 10556/10199/405   43742/5151    55  376   28.69)
ramon: poll                 wall=16.000s usage=15.919s mem=30240KiB load=1.00 rootload=1.00
(smt.stats   95  14610 378522 1818139 10600/10315/408   44141/5329    56  378   28.78)
(smt.stats   96  14771 382187 1838340 10641/10355/409   44479/5331    56  378   28.78)
(smt.stats   97  14948 386183 1870102 10692/10364/409   45276/5335    56  378   28.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 616)
(smt.stats   98  15142 390145 1878032 10773/10417/409   45269/5336    56  378   28.97)
ramon: poll                 wall=17.000s usage=16.919s mem=30736KiB load=1.00 rootload=1.00
(smt.stats   99  15355 395205 1907678 11058/10530/409   46114/5336    56  378   29.10)
(smt.stats  100  15589 399892 1943507 11172/10807/409   47096/5525    57  384   29.20)
(smt.stats  101  15846 406459 1984758 11320/10915/409   47822/5528    57  384   29.29)
ramon: poll                 wall=18.000s usage=17.919s mem=31000KiB load=1.00 rootload=1.00
(smt.stats  102  16128 411234 2011980 11593/11079/409   48518/5530    57  384   29.49)
(smt.stats  103  16438 414665 2031524 11668/11369/409   49076/5530    57  384   29.82)
(smt.stats  104  16778 426828 2156784 12425/12143/409   51476/5530    57  384   29.91)
(smt.stats  105  16879 431370 2198616 12428/12146/409   52049/5530    57  384   30.02)
ramon: poll                 wall=19.000s usage=18.919s mem=31572KiB load=1.00 rootload=1.00
(smt.stats  106  16990 433626 2220922 12436/12154/410   52577/5960    58  387   30.11)
(smt.stats  107  17112 437387 2252573 12453/12155/410   53096/5960    58  387   30.11)
(smt.stats  108  17246 442367 2311353 12524/12192/410   53615/5961    58  387   30.21)
(smt.stats  109  17393 446208 2334719 12631/12253/410   54179/5962    58  387   30.30)
ramon: poll                 wall=20.000s usage=19.918s mem=32016KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:22:39 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.030s
ramon: group.total          19.929s
ramon: group.utime          19.897s
ramon: group.stime          0.032s
ramon: group.mempeak        32272KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
