ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:18:49 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27080 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xxlKS4TmfpcJ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             964977
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   81.9672     10000        49          0            1        2)
(sat.ddfw       1      1   43.2944     20001        98          1            1        3)
(smt.stats    0    101   4710    474  1105/992/97      99/13     4   17   51.97)
(smt.stats    1    202   5914   1559  1871/1692/99     208/15     6   19   52.06)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 1&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 1&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869182&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869182&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869180&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869180&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869176&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 4&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 8&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 16&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869182&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869182&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869180&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 8&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 16&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 16&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 32&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 8&2047
(sat.ddfw       1      1   44.2478     40001       196          2            1        5)
(smt.stats    2    313   7639   2135  1975/1747/116     316/23     7   19   52.58)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 8&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 16 := 32&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 16 := 32&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 16 := 32&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 64&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 64&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 64 := 320&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 64 := 320&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 64 := 512&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 128 := 512&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 512 := 1024&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1024 := 17179868160&2047
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288231114886085632 := 11 << 11
(smt.stats    3    414   8191   3001  2233/2054/215     431/34     9   45   52.87)
(smt.stats    4    525  10550   5798  2291/2087/224     515/39    12   55   52.97)
(sat.ddfw       1      1   40.4858     70001       343          3            1        8)
(smt.stats    5    647  12001   8055  2632/2116/224     634/59    12   55   52.97)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14632  11054  2672/2453/224     782/59    12   55   53.06)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 256 := 256&8589934575
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288231424123732224 := 135 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 128 := 128&8589934575
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288231424123732096 := 135 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 128 := 128&8589934575
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 18446744056529682560 := 135 << 33
ramon: poll                 wall=1.000s usage=0.821s mem=55264KiB load=0.82 rootload=0.81
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 133 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 132 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 128 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 8589934336 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 512 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1024 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2048 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4096 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 8192 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 16384 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32768 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 65536 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 131072 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 8192 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32768 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 65536 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 131072 := 8589934592&8589934575
(smt.stats    7    860  18011  14610  2761/2539/265     991/172    13   64   53.35)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 262144 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 524288 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1048576 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2097152 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4194304 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4194304 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 8388608 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 16777216 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 33554432 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 67108864 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 134217728 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 268435456 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 536870912 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1073741824 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2147483648 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4294967296 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 262144 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 327680 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 327680 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 327680 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 262144 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 262144 := 8589934592&8589934575
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 536870912 := 536870912&2147483643
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 536870912 := 65 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 536870912 := 536870912&2147483643
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 536870912 := 65 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 536870912 := 536870912&2147483643
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 536870912 := 65 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 536870912 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1073741824 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 536870912 := 17179344896&2147483643
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 536870912 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1073741824 := 1073741824&2147483643
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 155692564480 := 65 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1073741824 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 536870912 := 2147483648&2147483643
(smt.stats    8    982  20669  18598  2874/2636/345    1371/191    14   82   53.84)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 32&536870910
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 32 := 63 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 33 := 48&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 36 := 48&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 36 := 48&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 36 := 48&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 33 := 48&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 48 := 48&536870910
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 48 := 63 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 48 := 48&536870910
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 48 := 63 << 29
(sat.ddfw       1      1   35.3357    110001       539          4            1       12)
(smt.stats    9   1116  23747  22066  2962/2730/375    1624/442    16  103   54.04)
(smt.stats   10   1217  24883  24586  3253/2827/375    1894/447    16  103   54.14)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 327155714 := 16642998272&536870910
(smt.stats   11   1328  27050  27498  3429/3124/377    2119/496    17  105   54.23)
(sat.ddfw       1      1   30.8445    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  31107  34680  3518/3308/384    2680/740    19  122   54.42)
ramon: poll                 wall=2.004s usage=1.823s mem=57056KiB load=1.00 rootload=1.00
(smt.stats   13   1584  34289  44110  3581/3346/387    3152/1018    20  132   54.64)
(sat.ddfw       1      1   26.8341    220001      1078          6            1       23)
(smt.stats   14   1731  40123  55788  3737/3479/387    3461/1034    21  139   54.83)
(smt.stats   15   1832  44887  65548  3742/3484/389    3648/1058    22  141   54.96)
(sat.ddfw       1      1   24.9822    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.843s mem=57184KiB load=1.02 rootload=1.02
(smt.stats   16   1943  48187  72383  3793/3535/391    3885/1079    23  141   55.06)
(sat.ddfw       1      1   22.5861    370001      1813          8            1       38)
(smt.stats   17   2065  51910  78845  3920/3657/393    4198/1123    24  148   55.15)
ramon: poll                 wall=4.000s usage=3.837s mem=57424KiB load=0.99 rootload=0.99
(smt.stats   18   2199  56013  84955  3978/3668/393    4389/1143    25  150   55.25)
(smt.stats   19   2346  60847  99662  4098/3840/395    4556/1159    26  155   55.44)
(sat.ddfw       1      1   20.4035    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.834s mem=57920KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2507  62695 104915  4287/3858/395    4815/1171    27  155   55.67)
(smt.stats   21   2608  65574 111482  4354/4069/395    4942/1172    27  155   55.67)
(smt.stats   22   2719  68400 125711  4375/4100/395    5072/1173    27  155   55.67)
(sat.ddfw       1      1   18.5805    560001      2745         10            1       57)
(smt.stats   23   2841  72359 139643  4406/4121/395    5275/1174    27  155   55.78)
ramon: poll                 wall=6.000s usage=5.813s mem=58280KiB load=0.98 rootload=0.98
(smt.stats   24   2975  76109 152021  4439/4181/399    5879/1311    28  165   55.87)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 496&255
(smt.stats   25   3122  79624 161517  4530/4184/399    6193/1312    28  165   55.97)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 356&255
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 513&255
(sat.ddfw       1      1   17.0728    670001      3284         11            1       68)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 512&255
(smt.stats   26   3283  84155 183688  4760/4303/399    6683/1764    29  178   56.07)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 480&255
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 480&255
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 672&255
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 672&255
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 864&255
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 800&255
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288230479230927648 := 1606 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 800&255
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288230479230927648 := 1946 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 800&255
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288230479230927648 := 1946 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 800&255
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288230479230927648 := 1912 << 8
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 800&255
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288230479230927648 := 1946 << 8
(smt.stats   27   3460  88028 194331  4834/4513/399    7007/1768    29  178   56.26)
ramon: poll                 wall=7.000s usage=6.808s mem=58512KiB load=0.99 rootload=0.99
(smt.stats   28   3561  90655 207204  4848/4578/425    7457/1799    30  183   56.26)
(smt.stats   29   3672  93766 220049  4916/4652/426    7770/1913    31  185   56.58)
(sat.ddfw       1      1   15.9638    790001      3872         12            1       80)
(smt.stats   30   3794  97071 228315  5003/4659/426    8195/1915    31  185   56.58)
(smt.stats   31   3928 102747 263189  5096/4819/427    8542/1991    32  186   56.67)
ramon: poll                 wall=8.000s usage=7.888s mem=59132KiB load=1.08 rootload=1.08
(smt.stats   32   4075 105532 283989  5128/4855/431    8906/2032    33  205   56.77)
(smt.stats   33   4236 110442 309093  5186/4875/433    9344/2034    33  205   56.77)
(sat.ddfw       1      1   14.9649    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.891s mem=59496KiB load=1.00 rootload=1.01
(smt.stats   34   4413 116678 328397  5275/4990/438   10023/2061    34  222   56.96)
(smt.stats   35   4607 121296 352776  5304/5009/438   11408/2237    35  262   57.24)
(sat.ddfw       1      1   14.4703   1060001      5196         14            1      108)
(smt.stats   36   4708 125367 369674  5351/5036/438   11639/2238    35  262   57.33)
ramon: poll                 wall=10.004s usage=10.143s mem=59608KiB load=1.25 rootload=1.25
(smt.stats   37   4819 128152 382372  5411/5089/438   12165/2238    35  262   57.33)
(smt.stats   38   4941 131237 394016  5461/5160/438   12656/2238    35  262   57.52)
(smt.delete-inactive-clauses  :num-deleted-clauses 12)
(sat.ddfw       1      1   13.9108   1210001      5931         15            1      123)
(smt.stats   39   5075 135719 414450  5525/5191/438   13516/2251    35  262   57.62)
ramon: poll                 wall=11.000s usage=11.289s mem=59916KiB load=1.15 rootload=1.14
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5222 140057 427918  5597/5275/438   14057/2253    35  262   57.93)
(smt.stats   41   5383 145807 444185  5689/5340/438   14517/2254    35  262   58.03)
ramon: poll                 wall=12.004s usage=12.421s mem=60396KiB load=1.13 rootload=1.14
(sat.ddfw       1      1   13.3902   1370001      6715         16            1      139)
(smt.stats   42   5560 150191 464066  5730/5457/439   15085/2853    36  275   58.12)
(smt.stats   43   5754 157170 486700  5795/5464/439   16218/2855    36  275   58.22)
ramon: poll                 wall=13.000s usage=13.351s mem=60480KiB load=0.93 rootload=0.93
(smt.stats   44   5967 163126 514802  5890/5557/439   17382/2860    36  275   58.41)
(smt.stats   45   6068 164669 526398  5915/5633/443   17873/3171    37  278   58.51)
(smt.stats   46   6179 167973 535966  5920/5645/443   18204/3171    37  278   58.51)
(sat.ddfw       1      1   12.3726   1540001      7549         17            1      156)
(smt.stats   47   6301 171416 567430  5940/5651/443   18594/3172    37  278   58.60)
ramon: poll                 wall=14.000s usage=14.307s mem=61024KiB load=0.96 rootload=0.95
(smt.stats   48   6435 173538 573870  5947/5672/443   18735/3271    38  336   58.60)
(smt.stats   49   6582 177389 594413  5977/5691/446   19614/3271    38  336   58.71)
(smt.stats   50   6743 184300 615660  6100/5714/446   20237/3272    38  336   58.80)
ramon: poll                 wall=15.000s usage=15.244s mem=61292KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   11.5637   1720001      8431         18            1      174)
(smt.stats   51   6920 191389 641510  6292/5844/446   20931/3400    39  354   58.90)
ramon: poll                 wall=16.000s usage=16.217s mem=61388KiB load=0.97 rootload=0.97
(smt.stats   52   7114 193746 651457  6348/6070/446   21519/3401    39  354   59.00)
(smt.stats   53   7327 200322 703649  6352/6077/448   22294/3518    40  385   59.26)
(smt.stats   54   7561 206887 736771  6352/6077/448   22673/3518    40  385   59.36)
ramon: poll                 wall=17.000s usage=17.169s mem=61960KiB load=0.95 rootload=0.95
(smt.stats   55   7662 210810 755663  6370/6079/448   22947/3520    40  385   59.79)
(smt.stats   56   7773 215728 770894  6464/6187/449   23197/3619    41  385   59.88)
(sat.ddfw       1      1   10.8752   1910001      9362         19            1      193)
(smt.stats   57   7895 218794 780459  6508/6198/449   23503/3620    41  385   59.88)
ramon: poll                 wall=18.000s usage=18.135s mem=62152KiB load=0.97 rootload=0.97
(smt.stats   58   8029 221595 793756  6545/6260/452   24055/3621    41  385   59.88)
(smt.stats   59   8176 224879 811247  6725/6433/454   24536/3623    41  385   59.98)
ramon: poll                 wall=19.000s usage=19.144s mem=62304KiB load=1.01 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8337 227588 822308  6866/6565/458   24679/3704    42  432   60.07)
(sat.ddfw       1      1   10.2548   2110001     10343         20            1      214)
(smt.stats   61   8514 231747 845991  6915/6618/460   25670/3706    42  432   60.17)
ramon: poll                 wall=20.000s usage=20.068s mem=62528KiB load=0.92 rootload=0.92
ramon: end                  Fri Nov  1 23:19:09 2024
ramon: root.execname        z3
ramon: root.utime           20.130s
ramon: root.stime           0.020s
ramon: group.total          20.150s
ramon: group.utime          20.130s
ramon: group.stime          0.020s
ramon: group.mempeak        62784KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.086s
ramon: loadavg              1.00
