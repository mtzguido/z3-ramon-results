ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:58:40 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42048 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/I02QtPSmqfCk.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2894857
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   6076    923  1298/1167/91      99/1     4   13   19.10)
(smt.stats    1    202   9645   2862  2016/1817/96     131/7     7   75   19.29)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 1 := 106 << 7
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 1 := 106 << 7
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 1 := 106 << 7
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 1 := 106 << 7
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&55
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&55
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&32
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 1 := 106 << 7
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 1 := 106 << 7
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&55
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&47
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&55
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&32
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&32
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&31
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 1 := 106 << 7
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 13623 := 53 << 8
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 13623 := 53 << 8
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 13623 := 53 << 8
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 1 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 1 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 2 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 2 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 4 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 8 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 16 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 32 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 8 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 16 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 32 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 32 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 8 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 16 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 2305843009213693951 := 53 << 8
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 56 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 56 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 5 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 4 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 32 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 16 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 2 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 8 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 4 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 16 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 32 := 56&13568
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 56&13568
band: (band[61] (if (or #583 #584) 0 (if #585 1 #753)) (shl[61] (bv2int %0) (+ 61 #755))) 1 := 56&13568
(smt.stats    2    313  12570   6213  2192/1963/230     255/21     9  104   19.92)
(smt.stats    3    414  14793   8134  2743/2473/242     359/78    11  110   20.03)
(smt.stats    4    525  17205  11097  2785/2510/246     478/86    12  113   20.36)
(smt.stats    5    647  23640  16640  2844/2546/251     655/96    15  117   20.46)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748  28356  22593  2909/2601/251     789/96    15  117   20.65)
(smt.stats    7    859  33946  33339  2921/2623/252     900/104    16  118   20.65)
(smt.stats    8    981  36693  39805  2948/2640/271    1088/115    19  142   20.75)
(smt.stats    9   1115  42717  46804  2993/2688/274    1237/134    20  171   20.85)
(smt.stats   10   1216  45410  51730  2993/2688/274    1330/149    21  181   20.85)
(smt.stats   11   1327  51174  59524  3000/2695/275    1487/155    22  185   20.95)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  53543  62959  3060/2752/277    1763/162    22  185   21.04)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 1&65
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 1&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694018 := 1873497444986126336 << 2
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 1&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694018 := 1873497444986126336 << 2
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 1&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694018 := 1873497444986126336 << 2
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 1&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694018 := 1873497444986126336 << 2
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 1&70
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694022 := 1873497444986126336 << 2
ramon: poll                 wall=1.000s usage=0.938s mem=22608KiB load=0.94 rootload=0.93
(smt.stats   13   1583  55130  66113  3201/2877/296    1964/181    23  187   21.26)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 1&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694000 := 1891511843495608218 << 2
(smt.stats   14   1730  57447  72673  3270/2928/299    2187/195    24  236   21.26)
(smt.stats   15   1831  62121  80264  3273/2962/300    2327/195    25  237   21.36)
(smt.stats   16   1942  65294  86725  3286/2975/300    2488/195    25  237   21.36)
(smt.stats   17   2064  66767  88796  3314/2978/302    2646/218    26  239   21.36)
(smt.stats   18   2198  69008  93384  3357/3036/302    2823/218    26  239   21.49)
(smt.stats   19   2345  74592 102960  3386/3066/302    3117/227    27  240   21.49)
(smt.stats   20   2506  77844 110576  3411/3095/302    3335/228    27  240   21.49)
(smt.stats   21   2607  81163 117096  3420/3109/302    3461/228    27  240   21.61)
(smt.stats   22   2718  85339 123114  3423/3112/302    3577/228    27  240   21.61)
(smt.stats   23   2840  89759 133219  3431/3120/302    3735/228    27  240   21.61)
(smt.stats   24   2974  92015 139929  3450/3139/305    3949/268    28  251   21.61)
(smt.stats   25   3121  98408 149200  3455/3144/306    4091/272    29  267   21.71)
(smt.stats   26   3282 103533 160605  3487/3176/306    4231/272    29  267   21.71)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&82
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&84
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&82
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&84
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&82
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&84
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&86
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&84
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&82
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&84
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&84
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 512212793023819330&84
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 64 := 512212793023819330&84
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694036 := 244 << 60
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 64 := 512212793023819330&84
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694036 := 244 << 60
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 64 := 512212793023819330&84
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694036 := 244 << 60
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 64 := 512212793023819330&84
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694036 := 244 << 60
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 64 := 512212793023819330&84
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694036 := 244 << 60
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 64 := 512212793023819330&84
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694036 := 244 << 60
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 64 := 512212793023819330&84
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694036 := 366 << 60
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 64 := 512212793023819330&84
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694036 := 976 << 60
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 64 := 512212793023819330&84
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213694036 := 976 << 60
(smt.stats   27   3459 106134 167977  3658/3245/333    4506/289    30  271   21.97)
(smt.stats   28   3560 107459 172448  3671/3348/333    4661/289    30  271   22.06)
ramon: poll                 wall=2.000s usage=1.937s mem=23364KiB load=1.00 rootload=1.00
(smt.stats   29   3671 111234 180279  3678/3363/333    4890/330    31  273   22.06)
(smt.stats   30   3793 116928 192697  3682/3369/333    5086/330    31  273   22.06)
(smt.stats   31   3927 122421 209113  3702/3378/333    5335/331    31  273   22.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 123442 212328  3757/3431/333    5561/332    31  273   22.18)
(smt.stats   33   4235 129876 232366  3770/3445/333    5844/332    31  273   22.29)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 6 := 14&32
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 14&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 2305843009213693984 := 900719925474099212 << 5
(smt.stats   34   4412 135553 252442  3819/3452/333    6167/335    31  273   22.29)
(smt.stats   35   4606 137838 258543  3844/3515/334    6420/447    32  277   22.38)
(smt.stats   36   4707 140092 264089  3855/3527/334    6594/447    32  277   22.38)
(smt.stats   37   4818 141475 268055  3857/3531/335    6784/447    32  277   22.49)
(smt.stats   38   4940 142742 272100  3864/3535/335    6976/447    32  277   22.49)
(smt.delete-inactive-clauses  :num-deleted-clauses 28)
(smt.stats   39   5074 145809 277578  3872/3540/335    7126/465    33  283   22.58)
ramon: poll                 wall=3.000s usage=2.937s mem=23960KiB load=1.00 rootload=1.00
(smt.stats   40   5221 149319 283588  3914/3564/335    7408/466    33  283   22.58)
(smt.stats   41   5382 153643 292921  3967/3604/335    7703/467    33  283   22.78)
(smt.stats   42   5559 157738 301354  3981/3644/335    8006/469    33  283   22.78)
(smt.stats   43   5753 164576 319547  4031/3669/335    8239/476    33  283   22.89)
(smt.stats   44   5966 172497 338797  4056/3705/335    8513/479    33  283   22.89)
(smt.stats   45   6067 175226 344649  4064/3729/335    8626/479    33  283   23.00)
(smt.stats   46   6178 178811 359139  4077/3746/336    8774/540    34  287   23.00)
(smt.stats   47   6300 184757 375348  4103/3769/337    8912/540    34  287   23.00)
ramon: poll                 wall=4.000s usage=3.937s mem=24464KiB load=1.00 rootload=1.00
(smt.stats   48   6434 187833 383476  4170/3769/337    9180/548    35  291   23.12)
(smt.stats   49   6581 192937 394983  4192/3852/337    9369/548    35  291   23.22)
(smt.stats   50   6742 199141 420031  4253/3877/338    9572/567    36  291   23.31)
(smt.stats   51   6919 201635 427142  4528/3937/338    9831/569    36  291   23.41)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   52   7113 206661 439752  4541/4194/338   10219/571    36  291   23.51)
(smt.stats   53   7326 214612 466638  4573/4206/338   10530/572    36  291   23.51)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 1 := 28&14419
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 28&14419
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 28&14419
(smt.stats   54   7560 220069 482410  4693/4236/338   11086/577    36  291   23.70)
(smt.stats   55   7661 223996 489335  4741/4383/339   11339/723    37  296   23.80)
ramon: poll                 wall=5.000s usage=4.936s mem=25200KiB load=1.00 rootload=1.00
(smt.stats   56   7772 228528 500719  4746/4391/339   11568/723    37  296   23.94)
(smt.stats   57   7894 235147 514829  4749/4393/339   11717/723    37  296   23.94)
(smt.stats   58   8028 238165 523616  4766/4402/339   11970/724    37  296   24.03)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 132 := 2000831222749294&2305843009213693856
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 132 := 2000831222749294&2305843009213693857
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 128 := 2000831222749294&2305843009213693856
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 128 := 2000831222749294&2305843009213693844
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 128 := 2000831222749294&2305843009213693844
(smt.stats   59   8175 242591 538613  4845/4418/339   12310/731    37  296   24.12)
(smt.stats   60   8336 246492 549396  5009/4503/349   12761/786    38  298   24.49)
(smt.stats   61   8513 250604 562065  5109/4695/349   13175/787    38  298   24.68)
(smt.stats   62   8707 260933 593527  5134/4779/349   13476/787    38  298   24.68)
ramon: poll                 wall=6.000s usage=5.936s mem=26056KiB load=1.00 rootload=1.00
(smt.stats   63   8920 267459 614001  5175/4784/349   13978/844    39  298   24.68)
(smt.stats   64   9154 276838 639839  5210/4833/354   14405/848    39  298   24.78)
(smt.stats   65   9411 286219 661851  5257/4869/354   14920/903    40  356   24.87)
(smt.stats   66   9512 287521 667097  5259/4904/354   15204/903    40  356   24.98)
(smt.stats   67   9623 289773 673000  5265/4910/354   15541/903    40  356   24.98)
(smt.stats   68   9745 292236 680652  5361/4993/356   15828/910    40  356   24.98)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 2 := 7278&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 9223372036854775811 := 92 << 14
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 2 := 7278&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 9223372036854775811 := 92 << 14
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 2 := 7278&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 9223372036854775811 := 702 << 14
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 2 := 7278&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 9223372036854775811 := 702 << 14
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 2 := 7278&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 9223372036854775811 := 702 << 14
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 2 := 7278&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 9223372036854775811 := 702 << 14
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 2 := 7278&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 9223372036854775811 := 562949953421946 << 14
(smt.stats   69   9879 294216 688249  5457/5006/356   16086/910    40  356   25.07)
ramon: poll                 wall=7.000s usage=6.935s mem=26520KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 48)
(smt.stats   70  10026 296799 697851  5476/5111/361   16411/957    41  379   25.07)
(smt.stats   71  10187 300385 714097  5518/5124/361   16747/957    41  379   25.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 304581 726434  5587/5171/361   17264/961    41  379   25.18)
(smt.stats   73  10558 307744 739323  5643/5253/361   17684/963    41  379   25.37)
(smt.stats   74  10771 311589 753991  5852/5346/361   18105/1022    42  379   25.37)
ramon: poll                 wall=8.000s usage=7.935s mem=26772KiB load=1.00 rootload=1.00
(smt.stats   75  11005 315363 769985  5936/5515/361   18540/1026    42  379   25.49)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 20 := 28&2305843009213693906
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 22 := 28&2305843009213693894
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 24 := 28&2305843009213693898
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 28&2305843009213693888
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 11529215046068469696 := 3056961880399173564 << 6
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 28&2305843009213693896
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 28&2305843009213693896
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 8 := 28&2305843009213693896
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 11529215046068469704 := 3056961880399173686 << 6
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 8 := 28&2305843009213693896
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 11529215046068469704 := 3056961880399173686 << 6
(smt.stats   76  11262 318373 791625  6042/5676/367   19013/1033    42  379   25.63)
(smt.stats   77  11544 324349 815296  6064/5698/367   19488/1033    42  379   25.73)
(smt.stats   78  11645 327030 823854  6080/5712/367   19753/1101    43  382   25.73)
(smt.stats   79  11756 329814 831144  6082/5714/367   19902/1101    43  382   25.84)
(smt.stats   80  11878 333878 850113  6085/5717/367   20124/1101    43  382   25.84)
(smt.stats   81  12012 336887 861385  6094/5726/367   20346/1101    43  382   25.84)
(smt.stats   82  12159 342892 887815  6105/5737/367   20917/1101    43  382   25.84)
ramon: poll                 wall=9.000s usage=8.935s mem=27228KiB load=1.00 rootload=1.00
(smt.stats   83  12320 349611 908818  6148/5738/367   21317/1102    43  382   25.97)
(smt.stats   84  12497 355963 935912  6168/5790/367   21916/1103    43  382   25.97)
(smt.stats   85  12691 362754 968901  6184/5812/367   22262/1103    43  382   25.97)
(smt.stats   86  12904 367755 997342  6339/5819/367   22801/1106    43  382   26.10)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   87  13138 373331 1018316  6396/6005/370   23682/1292    44  399   26.20)
(smt.stats   88  13395 379879 1056080  6629/6038/370   24475/1296    44  399   26.29)
ramon: poll                 wall=10.000s usage=9.935s mem=27956KiB load=1.00 rootload=1.00
(smt.stats   89  13677 384446 1079337  6669/6286/372   25128/1297    44  399   26.41)
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 1 := 7&1603652133979894528
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 7&1603652133979894528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 17744553198475752192 := 2756202971950743552 << 4
band: (band[61] (if (or #769 #770 #771 #772 #773) 0 (if #774 1 #890)) (shl[64] (* 2 #114) (mod #912 64))) 0 := 7&1603652133979894528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #909 #911) 64)) 17744553198475752192 := 2756202971950743552 << 4
(smt.stats   90  13987 391318 1121150  6790/6325/372   25952/1469    45  416   26.60)
(smt.stats   91  14088 392712 1130122  6854/6467/377   26314/1470    45  416   26.60)
(smt.stats   92  14199 394922 1143975  6870/6477/377   26640/1470    45  416   26.72)
(smt.stats   93  14321 401640 1172710  6878/6490/378   26933/1471    45  416   26.72)
ramon: poll                 wall=11.000s usage=10.934s mem=28160KiB load=1.00 rootload=1.00
(smt.stats   94  14455 406165 1188834  6886/6504/379   27475/1618    46  419   26.87)
(smt.stats   95  14602 408313 1205010  6940/6512/380   27831/1619    46  419   26.97)
(smt.stats   96  14763 414958 1238742  6951/6569/380   28135/1619    46  419   26.97)
(smt.stats   97  14940 420069 1261451  7078/6570/380   28432/1620    46  419   27.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 16)
(smt.stats   98  15134 426828 1281139  7105/6723/380   28689/1689    47  426   27.16)
ramon: poll                 wall=12.000s usage=11.925s mem=28664KiB load=0.99 rootload=0.99
(smt.stats   99  15347 435359 1318118  7184/6731/380   29110/1690    47  426   27.16)
(smt.stats  100  15581 440872 1340919  7249/6821/380   30448/1691    47  426   27.36)
(smt.stats  101  15838 453784 1385380  7276/6882/381   30972/1801    48  430   27.36)
(smt.stats  102  16120 461764 1426343  7305/6923/382   31659/1804    48  430   27.47)
ramon: poll                 wall=13.002s usage=12.927s mem=29048KiB load=1.00 rootload=1.00
(smt.stats  103  16430 466712 1470223  7334/6936/382   32546/1804    48  430   27.76)
ramon: poll                 wall=14.000s usage=13.925s mem=29492KiB load=1.00 rootload=1.00
(smt.stats  104  16770 475615 1529351  7658/6966/383   33643/1906    49  449   27.95)
(smt.stats  105  16871 478767 1554021  7777/7295/383   34101/1910    49  449   28.04)
(smt.stats  106  16982 481260 1570444  7824/7399/383   34393/1910    49  449   28.04)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  107  17104 485101 1585767  7836/7450/383   34660/1910    49  449   28.14)
(smt.stats  108  17238 489116 1610265  7854/7458/383   35155/2089    50  453   28.14)
(smt.stats  109  17385 494491 1658547  7875/7479/383   35529/2089    50  453   28.24)
(smt.stats  110  17546 498314 1675703  7888/7492/383   36186/2090    50  453   28.33)
ramon: poll                 wall=15.000s usage=14.924s mem=29788KiB load=1.00 rootload=1.00
(smt.stats  111  17723 502339 1705764  7963/7504/385   36748/2090    50  453   28.33)
(smt.stats  112  17917 505896 1728905  8183/7581/385   37184/2267    51  498   28.53)
(smt.stats  113  18130 511706 1745352  8198/7808/386   37881/2267    51  498   28.63)
ramon: poll                 wall=16.000s usage=15.924s mem=30240KiB load=1.00 rootload=1.00
(smt.stats  114  18364 521170 1799385  8226/7815/386   38634/2270    51  498   28.73)
(smt.stats  115  18621 528168 1845308  8250/7845/386   39507/2271    51  498   28.82)
(smt.stats  116  18903 540217 1917135  8299/7870/386   40552/2422    52  505   28.92)
ramon: poll                 wall=17.000s usage=16.924s mem=30540KiB load=1.00 rootload=1.00
(smt.stats  117  19213 547650 1971409  8319/7923/386   42061/2422    52  505   29.16)
(smt.stats  118  19553 554192 2007702  8439/7948/386   43313/2424    52  505   29.36)
ramon: poll                 wall=18.000s usage=17.924s mem=31216KiB load=1.00 rootload=0.99
(smt.stats  119  19926 566314 2074160  8469/8066/386   44176/2424    52  505   29.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 264)
(smt.stats  120  20027 568119 2084558  8489/8089/386   44156/2425    52  505   29.89)
(smt.stats  121  20138 573068 2106002  8500/8105/386   44364/2425    52  505   29.89)
(smt.stats  122  20260 577685 2137934  8507/8113/386   44743/2425    52  505   29.89)
(smt.stats  123  20394 581349 2161242  8526/8117/386   45478/2425    52  505   29.98)
(smt.stats  124  20541 584702 2181350  8540/8145/386   45927/2425    52  505   29.98)
(smt.stats  125  20702 590739 2213046  8595/8157/386   46298/2425    52  505   29.98)
ramon: poll                 wall=19.000s usage=18.923s mem=31528KiB load=1.00 rootload=1.00
(smt.stats  126  20879 597611 2253339  8608/8212/386   46877/2425    52  505   30.10)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  127  21073 601787 2280298  8630/8222/386   47570/2425    52  505   30.10)
(smt.stats  128  21286 611355 2348173  8680/8281/386   48053/2427    52  505   30.20)
(smt.stats  129  21520 616277 2384543  8831/8438/387   48608/2950    53  528   30.29)
ramon: poll                 wall=20.000s usage=19.923s mem=31912KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:59:00 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.991s
ramon: group.utime          19.983s
ramon: group.stime          0.008s
ramon: group.mempeak        32168KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.00
