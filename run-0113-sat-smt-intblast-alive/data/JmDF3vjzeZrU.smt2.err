ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:37:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40949 MiB
ramon: sys.mem.avail        61382 MiB
ramon: sys.nprocs           1324
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JmDF3vjzeZrU.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3793092
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   224/224     0/0  64       0    18.51   0.00)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1025 :time 0.00)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.83   0.01)
(sat.stats    158   1600    0   224/224   158/68  64       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 470018.83 :time 0.00)
(sat.stats    158   1600    0   228/228    93/66  64       0    18.83   0.01)
(sat.stats    161   1703    1   228/228    96/68  64       0    18.93   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    164   1756    2   228/228    99/71  64       0    18.93   0.01)
(sat.stats    167   1840    3   228/228   102/74  64       0    18.93   0.01)
(sat.stats    170   1969    4   228/228   105/76  64       0    18.93   0.01)
(sat.stats    173   2045    5   228/228   108/78  64       0    18.93   0.01)
(sat.stats    176   2242    6   228/228   111/79  64       0    18.93   0.01)
(sat.stats    179   2460    7   228/228   114/79  64       0    18.93   0.01)
(sat.stats    182   2593    8   228/228   117/81  64       0    18.93   0.01)
(sat.stats    185   2771    9   228/228   120/81  64       0    18.93   0.01)
(sat.stats    188   2871   10   228/228   123/81  64       0    18.93   0.01)
(sat.stats    191   3006   11   228/228   126/81  64       0    18.93   0.01)
(sat.stats    194   3085   12   228/228   129/81  64       0    18.93   0.01)
(sat.stats    209   3621   17   228/228   144/86  64       0    18.93   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    400   9633   33   230/230   335/221  64       0    19.12   0.04)
(sat.stats    472  10255   35   230/230   407/251  64       0    19.12   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 4598 :time 0.00)
lshr: (lshr[46] (bv2int %0) (+ 46 (* 70368744177663 #57))) 38613 := 56 >>l 36
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 0&70368744176640
lshr: (lshr[64] (mod (div #55 2) 35184372088832) (mod (+ 45 #694 #696) 64)) 70368744158739 := 28 >>l 35
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 1 := 1&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 2 := 2&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 4 := 7&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 2&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 1 := 70368744176640&2
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 2&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 2 := 70368744176640&2
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 996&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 628 := 70368744176640&996
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 8&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 8 := 70368744176640&8
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 16&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 16 := 70368744176640&16
 (sat-cleaner :elim-literals 5 :elim-clauses 2 :cost 6755 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 24 := 32&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 8 := 40&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 41&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 32 := 70368744176640&41
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 72&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 64 := 70368744176640&72
(sat.stats    868  16597   59  5723/5720   873/358 160       0    21.68   0.45)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9421 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 832 := 1021&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 672 := 1021&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 768 := 1021&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 656 := 1021&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 640 := 1021&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 512 := 1021&70368744176640
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 1022&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 128 := 70368744176640&1022
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 1022&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 256 := 70368744176640&1022
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 1022&70368744176640
band: (band[46] (if (= #563 63) 324518553658417503411119165800448 (if #565 162259276829208751705559582900224 #689)) (lshr[64] (mod #442 35184372088832) (mod #697 64))) 512 := 70368744176640&1022
 (sat-cleaner :elim-literals 134 :elim-clauses 2 :cost 11767 :time 0.00)
(sat.stats   1142  24349   71 11539/11536  1177/413 220       0    22.72   0.74)
ramon: poll                 wall=1.000s usage=0.935s mem=25416KiB load=0.93 rootload=0.93
ramon: poll                 wall=2.000s usage=1.934s mem=34184KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 17713 :time 0.00)
(sat.stats   3279  65604   87 118813/118810  4710/2874 224       0    36.66   2.72)
(sat.stats   3282  65778   88 118813/118810  4713/2875 224       0    36.66   2.72)
(sat.stats :conflicts  :restarts          :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin            :units         :memory       )
(sat.stats   3597  79262  158 119370/119367  5036/3079 224       0    36.85   2.84)
ramon: poll                 wall=3.000s usage=2.934s mem=38460KiB load=1.00 rootload=0.99
lshr: (lshr[46] (bv2int %0) (+ 46 (* 70368744177663 #57))) 0 := 70300024701025 >>l 45
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 1&70368744177662
lshr: (lshr[64] (mod (div #55 2) 35184372088832) (mod (+ 45 #694 #696) 64)) 29414135066263556 := 35150012350512 >>l 44
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 30641 :time 0.00)
ramon: poll                 wall=4.000s usage=3.934s mem=39740KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.934s mem=39740KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 31327 :time 0.00)
ramon: poll                 wall=6.000s usage=5.933s mem=39748KiB load=1.00 rootload=1.00
(sat.stats   5395 135441  455 123890/123884  6185/3606 245       0    37.97   6.48)
ramon: poll                 wall=7.000s usage=6.933s mem=39752KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.933s mem=39756KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.933s mem=39764KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.932s mem=39788KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.932s mem=40000KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.932s mem=40024KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.932s mem=40048KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.931s mem=40056KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.931s mem=40184KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.931s mem=40208KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 42875 :time 0.00)
ramon: poll                 wall=17.000s usage=16.913s mem=40232KiB load=0.98 rootload=0.98
ramon: poll                 wall=18.000s usage=17.912s mem=40232KiB load=1.00 rootload=1.00
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #460)) (if (= #52 45) 1237940039285345090527035392 (if #464 618970019642672545263517696 #552))) 0 := 0&35184372088831
lshr: (lshr[64] (mod (div #55 2) 35184372088832) (mod (+ 45 #694 #696) 64)) 1 := 35115652612447 >>l 45
ramon: poll                 wall=19.000s usage=18.912s mem=40532KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 43383 :time 0.00)
ramon: poll                 wall=20.000s usage=19.908s mem=40804KiB load=1.00 rootload=0.99
ramon: end                  Wed Dec 25 15:37:56 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.978s
ramon: group.utime          19.946s
ramon: group.stime          0.032s
ramon: group.mempeak        42760KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
