ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:30:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39749 MiB
ramon: sys.mem.avail        61377 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/kwhNV68Fj4aZ.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3950149
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   221/220     0/0  58       0    18.60   0.01)
(sat.stats    233   3269    0   223/222   233/133  58       0    19.39   0.05)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 785 :time 0.00)
(sat.stats    233   3269    0   221/220   233/133  64       0    19.39   0.05)
(sat.stats    233   3269    0   221/220   233/133  64       0    19.39   0.05)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 590019.39 :time 0.00)
(sat.stats    233   3269    0   221/220   241/142  64       0    19.39   0.05)
(sat.stats    307   4784    1   221/220   315/212  64       0    19.49   0.06)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    312   4859    2   221/220   320/216  64       0    19.49   0.06)
(sat.stats    315   4913    3   221/220   323/218  64       0    19.49   0.06)
(sat.stats    318   4972    4   221/220   326/221  64       0    19.49   0.06)
(sat.stats    321   5051    5   221/220   329/222  64       0    19.49   0.06)
(sat.stats    324   5113    6   221/220   332/223  64       0    19.49   0.06)
(sat.stats    327   5193    7   221/220   335/224  64       0    19.49   0.06)
(sat.stats    330   5276    8   221/220   338/224  64       0    19.49   0.07)
(sat.stats    333   5359    9   221/220   341/224  64       0    19.49   0.07)
(sat.stats    336   5451   10   221/220   344/224  64       0    19.49   0.07)
(sat.stats    339   5567   11   221/220   347/224  64       0    19.49   0.07)
(sat.stats    342   5665   12   221/220   350/224  64       0    19.49   0.07)
(sat.stats    345   5691   13   221/220   353/226  64       0    19.49   0.07)
(sat.stats    348   5775   14   221/220   356/226  64       0    19.49   0.07)
(sat.stats    482   7814   25   221/220   490/286  64       0    19.58   0.08)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2663 :time 0.00)
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #77))) 0 := 1147275 << 25
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 32684 := 16777216&281475547136000
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 13144 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 309536 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 966848 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 1478016 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 469248 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 5000704 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 6482944 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 4483072 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 618496 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 671744 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 65536 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 3801088 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 524288 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 5242880 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 16777216 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 12582912 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 2129920 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 2097152 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 8388608 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 262144 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #632 #634) 64)) 150 := 150 << 24
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 5212 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 1 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 193952 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 16777216 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 2025920 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 8 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 2 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 400 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 2188032 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 13958272 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 1024 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 14848512 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 11292672 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 2048 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 12247040 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 13025280 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 8880128 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 5505024 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 65536 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 131072 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 10485760 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 524288 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 1048576 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 4194304 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 0 := 16777216&2516582400
band: (band[50] (shl[64] (* 2 #76) (mod #635 64)) (if (or #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655) 0 (if #656 1 #754))) 8388608 := 2516582400&16777216
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 8192 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 1 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 16 := 16777216&2516582400
band: (band[50] (if (= #70 49) 1 (if #522 2 #618)) (shl[50] (bv2int %0) (+ 50 #621))) 2 := 16777216&2516582400
(sat.stats :conflicts   :restarts        :learned/bin        :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units        :memory       )
(sat.stats    796  15613   44 10617/10613   824/332  70       0    23.26   0.28)
(sat.stats   1082  21965  115 147275/147271  1583/813  70       0    38.37   0.78)
ramon: poll                 wall=1.000s usage=0.924s mem=42252KiB load=0.92 rootload=0.90
ramon: poll                 wall=2.000s usage=1.923s mem=48780KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.920s mem=50796KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.919s mem=52832KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.918s mem=63764KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.918s mem=67904KiB load=1.00 rootload=1.00
(sat.stats   1598  30926  232 274870/274866  3386/2120  70       0    66.72   6.17)
ramon: poll                 wall=7.003s usage=6.921s mem=70552KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.918s mem=70960KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.917s mem=71052KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.917s mem=71488KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.917s mem=72196KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.917s mem=72868KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.916s mem=73732KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.916s mem=74620KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.916s mem=75336KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.916s mem=77676KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.903s mem=78484KiB load=0.99 rootload=0.99
ramon: poll                 wall=18.003s usage=17.906s mem=78748KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.902s mem=79044KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.902s mem=79812KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:30:51 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.040s
ramon: group.total          19.956s
ramon: group.utime          19.912s
ramon: group.stime          0.044s
ramon: group.mempeak        80068KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              1.00
