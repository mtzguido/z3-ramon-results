ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:24:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28363 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/P20CpsVVYY2N.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             786466
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4629   1285  1073/961/96      96/7     4   14   51.86)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   94.3396     10000        49          0            1        2)
(smt.stats    1    202   6649   2778  1687/1520/97     198/10     5   17   52.06)
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 13 := 1037518795&13
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 19 := 1037518795&19
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 32 := 1037518795&32
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 64 := 1037518795&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 64 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 11 := 1037518795&64
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 10 := 1037518795&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 14 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 9 := 1037518795&13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 13 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 9 := 1037518795&13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 13 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&13
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&13
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 137438953484 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 137438953484 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #104))) 5 := 6 << 31
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 11 := 1037518795&15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 15 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 11 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 10 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #104))) 5 := 6 << 31
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #104))) 5 := 6 << 31
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 32 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 64 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 256 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 512 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 1024 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2048 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 4096 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8192 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 16384 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 32768 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 131072 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 131072 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 262144 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 1048576 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2097152 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 4194304 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8388608 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8388608 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 16777216 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 33554432 := 1037518795&12884901888
(smt.stats    2    313   8315   4907  2188/1798/128     309/15     6   24   53.26)
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 16384 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 64 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 256 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 256 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 64 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 32 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2048 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2048 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8192 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2097152 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2097152 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 262144 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 262144 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 131072 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 11 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 10 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 10 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 9 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 1 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 2 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 4 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 8 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 16 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 32 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 64 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 256 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 512 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 1024 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 2048 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 4096 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 8192 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 16384 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 32768 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 131072 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 262144 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 1048576 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 2097152 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 4194304 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 8388608 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 16777216 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 33554432 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 67108864 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 134217728 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 134217728 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 268435456 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 536870912 := 1037518795&12884901888
(sat.ddfw       1      1   47.8517     20001        98          1            1        3)
(smt.stats    3    414   9445   7478  2229/2025/390     470/78     8   81   53.85)
(smt.stats    4    525  10855  11300  2404/2184/398     559/109    12   96   54.05)
(sat.ddfw       1      1   48.7805     40001       196          2            1        5)
(sat.ddfw       1      1   42.0757     70001       343          3            1        8)
(smt.stats    5    647  13545  13577  2505/2222/400     695/121    13   96   54.41)
ramon: poll                 wall=1.000s usage=0.980s mem=57104KiB load=0.98 rootload=0.96
(sat.ddfw       1      1   35.6824    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14213  14293  2602/2352/401     802/131    14   96   54.60)
(sat.ddfw       1      1   30.6179    160000       784          5            1       17)
(smt.stats    7    859  17069  17041  2761/2533/402     934/138    15   97   54.60)
ramon: poll                 wall=2.002s usage=1.985s mem=57120KiB load=1.00 rootload=1.00
(smt.stats    8    981  17613  18889  3016/2796/404    1082/143    16  101   54.69)
(sat.ddfw       1      1   26.7742    220001      1078          6            1       23)
(smt.stats    9   1115  21280  22525  3096/2834/410    1342/201    18  110   54.79)
ramon: poll                 wall=3.002s usage=3.037s mem=57336KiB load=1.05 rootload=1.06
(sat.ddfw       1      1   23.6967    290001      1421          7            1       30)
(smt.stats   10   1216  22371  23357  3263/2923/410    1472/203    18  110   54.89)
(sat.ddfw       1      1   21.2596    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=4.031s mem=57336KiB load=1.00 rootload=0.99
(smt.stats   11   1327  26054  29773  3402/3167/414    1649/269    20  119   54.89)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  29472  38632  3500/3253/429    1858/308    21  127   55.08)
(smt.stats   13   1583  34624  49383  3541/3294/432    2011/376    23  161   55.08)
(sat.ddfw       1      1   19.2885    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.031s mem=57492KiB load=1.00 rootload=1.00
(smt.stats   14   1730  39784  59786  3712/3404/437    2210/397    26  180   55.28)
(sat.ddfw       1      1   17.7588    560001      2745         10            1       57)
(smt.stats   15   1831  40535  60984  3928/3496/437    2349/401    26  180   55.38)
ramon: poll                 wall=6.000s usage=6.091s mem=57668KiB load=1.06 rootload=1.06
(smt.stats   16   1942  42661  69955  4027/3781/439    2596/533    27  181   55.47)
(smt.stats   17   2064  47015  76370  4069/3799/440    2813/534    27  181   55.57)
(sat.ddfw       1      1   16.5414    670001      3284         11            1       68)
(smt.stats   18   2198  53388  86227  4188/3857/442    3108/625    28  188   55.47)
ramon: poll                 wall=7.000s usage=7.094s mem=58180KiB load=1.00 rootload=1.00
(smt.stats   19   2345  57972  94270  4347/3976/444    3340/733    29  194   55.57)
(smt.stats   20   2506  61533 101593  4415/4167/445    3639/813    31  196   55.76)
(sat.ddfw       1      1   15.2594    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=8.091s mem=58216KiB load=1.00 rootload=1.00
(smt.stats   21   2607  63990 107565  4430/4174/447    3835/814    31  196   55.76)
(smt.stats   22   2718  67319 115086  4492/4204/447    3957/896    32  206   55.76)
(smt.stats   23   2840  71429 125256  4546/4247/447    4120/896    32  206   55.85)
ramon: poll                 wall=9.006s usage=9.099s mem=58256KiB load=1.00 rootload=1.00
(smt.stats   24   2974  75500 141717  4585/4331/451    4327/950    33  209   55.85)
(sat.ddfw       1      1   14.1658    920001      4509         13            1       93)
(smt.stats   25   3121  78567 149734  4662/4340/451    4523/957    33  209   55.95)
ramon: poll                 wall=10.000s usage=10.085s mem=58288KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282  82384 165311  4766/4456/451    4785/1029    34  218   56.04)
(smt.stats   27   3459  86492 179565  4851/4523/451    5078/1029    34  218   56.14)
(sat.ddfw       1      1   13.0536   1060001      5196         14            1      108)
(smt.stats   28   3560  88987 186328  4861/4609/452    5240/1134    35  221   56.14)
ramon: poll                 wall=11.002s usage=11.025s mem=58524KiB load=0.94 rootload=0.94
(smt.stats   29   3671  94025 203309  4872/4620/453    5461/1189    36  225   56.35)
(smt.stats   30   3793  97559 212792  4960/4630/453    5598/1191    36  225   56.45)
ramon: poll                 wall=12.002s usage=12.025s mem=58612KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.2679   1210001      5931         15            1      123)
(smt.stats   31   3927  99671 217778  5217/4961/454    5782/1206    37  226   56.54)
ramon: poll                 wall=13.000s usage=13.023s mem=58720KiB load=1.00 rootload=1.00
(smt.stats   32   4074 102443 226084  5330/4973/454    6044/1210    37  226   56.64)
(smt.stats   33   4235 107235 242197  5487/5099/454    6314/1216    37  226   56.64)
(sat.ddfw       1      1   11.5532   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=14.023s mem=58860KiB load=1.00 rootload=1.00
(smt.stats   34   4412 111165 251586  5658/5267/454    6644/1222    37  226   56.74)
ramon: poll                 wall=15.000s usage=15.022s mem=58948KiB load=1.00 rootload=1.00
(smt.stats   35   4606 115025 262132  5823/5455/454    7045/1228    37  226   56.83)
(sat.ddfw       1      1   10.9184   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=16.024s mem=59164KiB load=1.00 rootload=1.00
(smt.stats   36   4707 116924 264195  6100/5725/454    7189/1230    37  226   57.02)
ramon: poll                 wall=17.002s usage=17.024s mem=59328KiB load=1.00 rootload=1.00
(smt.stats   37   4818 120056 272769  6322/5949/454    7432/1230    37  226   57.12)
(sat.ddfw       1      1   10.4245   1720001      8431         18            1      174)
(smt.stats   38   4940 123562 285436  6412/6156/455    7737/1430    38  228   57.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 126318 294535  6424/6160/455    8041/1431    38  228   57.21)
ramon: poll                 wall=18.000s usage=18.183s mem=60112KiB load=1.16 rootload=1.16
(smt.stats   40   5221 130198 305090  6643/6178/456    8407/1437    38  228   57.40)
(sat.ddfw       1      1   10.1768   1910001      9362         19            1      193)
ramon: poll                 wall=19.002s usage=19.391s mem=60132KiB load=1.21 rootload=1.21
(smt.stats   41   5382 133124 316514  6921/6434/456    8683/1582    39  230   57.50)
ramon: poll                 wall=20.000s usage=20.416s mem=60168KiB load=1.03 rootload=1.03
ramon: end                  Fri Nov  1 22:24:55 2024
ramon: root.execname        z3
ramon: root.utime           20.460s
ramon: root.stime           0.010s
ramon: group.total          20.484s
ramon: group.utime          20.468s
ramon: group.stime          0.016s
ramon: group.mempeak        60424KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.02
