ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:03:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28845 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/F510fsw8VSAJ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             712028
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 281474976710656 := 281474976743424 >>l 55
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 281474976710656 := 281474976743424 >>l 55
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&1
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1 := 72057594037927936 >>l 55
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 281474976710655 := 1099511627776 >>l 40
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 281474976710656 := 36028797018963968 >>l 55
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 1 := 12800&1
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 1099511627777 := 1099511627776 >>l 40
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 1099511627777 := 1099511627776 >>l 40
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 1099511627777 := 1099511627776 >>l 40
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 1099511627777 := 1099511627776 >>l 40
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 1099511627777 := 1099511627776 >>l 40
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&255
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 1 := 12800&255
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 1 := 12800&255
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&255
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 2 := 12800&255
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&255
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 4 := 12800&255
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 1 := 12800&2
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&2
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 2 := 12800&2
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&8
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 8 := 12800&8
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&16
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 16 := 12800&16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&32
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 32 := 12800&32
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&64
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 64 := 12800&64
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&128
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 128 := 12800&128
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 3 := 12800&4
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 2 := 12800&4
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&4
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 4 := 12800&4
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&8
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 8 := 12800&8
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&16
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 16 := 12800&16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&32
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 32 := 12800&32
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&64
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 64 := 12800&64
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&64
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 64 := 12800&64
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&64
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 64 := 12800&64
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&16
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 16 := 12800&16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&32
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 32 := 12800&32
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   64.1026     10000        49          0            1        2)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&16
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 16 := 12800&16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&16
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 16 := 12800&16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 12800&128
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 128 := 12800&128
(smt.stats    0    101   5360    818  1277/1162/193      97/30     9   37   52.37)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 1 := 100&1
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 1 := 100&1
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 100&1
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1 := 1261007895663738880 >>l 62
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 100&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 34 := 140737488355328 >>l 47
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 100 := 100&100
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 100 := 9187343239835811840 >>l 62
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 100 := 100&100
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 100 := 3638908498915360768 >>l 62
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 100&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 34 := 281474976710654 >>l 47
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 100&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 34 := 281474976710654 >>l 47
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 100 := 100&100
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 100 := 9187343239835811840 >>l 62
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 100&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 34 := 140737488355328 >>l 47
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 100&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 34 := 140737488355328 >>l 47
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 100&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 34 := 280375465082880 >>l 47
(sat.ddfw       1      1   39.2196     20001        98          1            1        3)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 50&1
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1 := 9223372036854710272 >>l 63
(smt.stats    1    202   6812   2355  2484/2252/223     185/45    14   51   52.78)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 50&1
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1 := 9223372036854743040 >>l 63
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 50&1
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1 := 9223372036854743040 >>l 63
(smt.stats    2    313   9702   5613  2579/2335/227     295/54    17   55   52.88)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 51200&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 0 := 9223372036854743040 >>l 53
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 51200&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 0 := 9223372036854710272 >>l 53
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 51200&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 0 := 9187343239835811840 >>l 53
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 51200&0
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 51201 := 274877906943 >>l 38
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 51200&0
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 51201 := 51202 >>l 38
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 51200&0
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 51201 := 51202 >>l 38
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 51200&0
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 51199 := 274877906943 >>l 38
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 51200&0
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 33 := 274877906943 >>l 38
(smt.stats    3    414  11363   8044  2633/2381/246     397/68    20   61   53.02)
(sat.ddfw       1      1   45.1467     40001       196          2            1        5)
(smt.stats    4    525  14564   9626  2716/2457/248     519/103    22   69   53.26)
(smt.stats    5    647  16561  11376  3079/2509/248     709/106    22   69   53.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  18931  14898  3249/2836/248     941/106    22   69   53.40)
(sat.ddfw       1      1   41.4938     70001       343          3            1        8)
(smt.stats    7    859  21995  19287  3347/3036/249    1287/142    23   70   53.54)
(smt.stats    8    981  24845  24374  3421/3140/259    1654/199    24   74   53.64)
ramon: poll                 wall=1.000s usage=0.976s mem=55868KiB load=0.98 rootload=0.96
(sat.ddfw       1      1   36.5297    110001       539          4            1       12)
(smt.stats    9   1115  28253  29963  3460/3197/265    1913/366    26   97   53.83)
(smt.stats   10   1216  29523  31238  3883/3328/265    2026/367    26   97   53.93)
(smt.stats   11   1327  32646  36092  3985/3649/265    2222/382    27   97   53.93)
(sat.ddfw       1      1   31.9482    160000       784          5            1       17)
(smt.stats   12   1449  36362  40782  4105/3850/267    2410/429    28   97   54.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1583  39073  44488  4150/3864/268    2553/458    29  103   54.06)
(smt.stats   14   1730  42130  49932  4211/3909/268    2728/460    29  103   54.16)
ramon: poll                 wall=2.000s usage=1.978s mem=56232KiB load=1.00 rootload=1.01
(smt.stats   15   1831  43978  54735  4275/3980/268    2899/461    29  103   54.16)
(sat.ddfw       1      1   28.2358    220001      1078          6            1       23)
(smt.stats   16   1942  46124  60471  4328/4040/268    3115/465    29  103   54.26)
(smt.stats   17   2064  48255  65102  4346/4088/268    3266/465    29  103   54.26)
(smt.stats   18   2198  51094  71182  4439/4094/268    3783/466    29  103   54.37)
(sat.ddfw       1      1   25.2252    290001      1421          7            1       30)
(smt.stats   19   2345  53622  78384  4534/4202/268    4008/466    29  103   54.38)
ramon: poll                 wall=3.000s usage=2.979s mem=56820KiB load=1.00 rootload=1.00
(smt.stats   20   2506  56779  86947  4574/4301/268    4548/467    29  103   54.50)
(smt.stats   21   2607  58701  93354  4636/4337/268    4735/469    29  103   54.50)
(smt.stats   22   2718  60195  99327  4701/4397/268    4915/469    29  103   54.50)
(smt.stats   23   2840  62540 108014  4735/4449/268    5190/469    29  103   54.72)
(sat.ddfw       1      1   22.7015    370001      1813          8            1       38)
(smt.stats   24   2974  63076 110574  4746/4485/268    5331/469    29  103   54.72)
(smt.stats   25   3121  69247 117508  4765/4502/268    5562/469    29  103   54.84)
(smt.stats   26   3282  74123 123514  4779/4517/268    5742/469    29  103   54.98)
ramon: poll                 wall=4.000s usage=3.976s mem=57304KiB load=1.00 rootload=0.99
(smt.stats   27   3459  79731 130075  4791/4535/268    5941/469    29  103   54.98)
(smt.stats   28   3560  81789 134956  4801/4540/268    6133/469    29  103   54.98)
(smt.stats   29   3671  84641 143714  4815/4555/268    6305/470    29  103   54.98)
(smt.stats   30   3793  86758 151267  4835/4575/268    6439/471    29  103   54.98)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3927  88129 156587  4852/4592/269    6584/1073    30  109   55.08)
(sat.ddfw       1      1   20.6233    460001      2254          9            1       47)
(smt.stats   32   4074  90416 163073  4907/4598/269    6758/1076    30  109   55.08)
(smt.stats   33   4235  93707 180067  5031/4685/270    6963/1100    31  112   55.23)
(smt.stats   34   4412  96762 193992  5186/4797/270    7240/1101    31  112   55.23)
ramon: poll                 wall=5.000s usage=4.978s mem=57548KiB load=1.00 rootload=1.01
(smt.stats   35   4606 103585 201131  5256/4953/270    7470/1102    31  112   55.35)
(sat.ddfw       1      1   18.8893    560001      2745         10            1       57)
(smt.stats   36   4707 107569 217332  5307/5051/270    7581/1102    31  112   55.35)
(smt.stats   37   4818 113641 235913  5322/5060/270    7692/1105    31  112   55.35)
(smt.stats   38   4940 116064 243679  5349/5089/271    7817/1170    32  113   55.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 259)
(smt.stats   39   5074 117423 250848  5368/5101/271    7731/1170    32  113   55.45)
(smt.stats   40   5221 121056 264470  5456/5169/273    7958/1187    33  117   55.45)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 0&281474976710655
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 7599824371187711 := 9223372036854743040 >>l 16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 0&281474976710655
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 7599824371187711 := 9223372036854743040 >>l 16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 0&281474976710655
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 7599824371187711 := 9223372036854743040 >>l 16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 0&281474976710655
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 7599824371187711 := 9223372036854743040 >>l 16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 0&281474976710655
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 7599824371187711 := 9223372036854743040 >>l 16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 0&0
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 50 := 0 >>l 1
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 0&0
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 50 := 0 >>l 1
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 0&0
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 50 := 0 >>l 1
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 0&0
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 50 := 0 >>l 1
(smt.stats   41   5382 124239 269775  5523/5244/287    8150/1206    34  117   55.71)
ramon: poll                 wall=6.003s usage=5.980s mem=58204KiB load=1.00 rootload=1.00
(smt.stats   42   5559 129243 291523  5614/5335/288    8517/1213    35  144   55.71)
(sat.ddfw       1      1   17.4106    670001      3284         11            1       68)
(smt.stats   43   5753 132677 301326  5749/5358/288    8761/1214    35  144   55.71)
(smt.stats   44   5966 137162 323763  5867/5484/288    9074/1215    35  144   55.85)
(smt.stats   45   6067 139297 338071  5880/5598/288    9269/1215    35  144   56.08)
(smt.stats   46   6178 142339 353909  5890/5617/288    9376/1215    35  144   56.20)
ramon: poll                 wall=7.000s usage=6.975s mem=58284KiB load=1.00 rootload=0.99
(smt.stats   47   6300 143879 361469  6009/5627/288    9501/1215    35  144   56.20)
(smt.stats   48   6434 146480 373524  6105/5745/288    9776/1215    35  144   56.20)
(sat.ddfw       1      1   16.1486    790001      3872         12            1       80)
(smt.stats   49   6581 148816 383101  6159/5838/288   10099/1216    35  144   56.20)
(smt.stats   50   6742 151938 403889  6248/5912/288   10550/1217    35  144   56.35)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6919 155529 430458  6301/5986/288   10902/1219    35  144   56.35)
ramon: poll                 wall=8.000s usage=7.975s mem=58668KiB load=1.00 rootload=1.00
(smt.stats   52   7113 160386 448766  6350/6042/288   11150/1219    35  144   56.48)
(smt.stats   53   7326 163920 466327  6512/6091/288   11494/1225    35  144   56.47)
(sat.ddfw       1      1   15.0515    920001      4509         13            1       93)
(smt.stats   54   7560 167300 486382  6679/6344/289   11952/1601    36  150   56.60)
(smt.stats   55   7661 168440 492090  6828/6450/289   12088/1601    36  150   56.60)
(smt.stats   56   7772 170429 508006  6946/6620/289   12265/1603    36  150   56.71)
ramon: poll                 wall=9.000s usage=8.975s mem=59112KiB load=1.00 rootload=1.00
(smt.stats   57   7894 173076 527282  6998/6694/289   12421/1603    36  150   56.71)
(smt.stats   58   8028 174755 540522  7009/6733/289   12668/1603    36  150   56.71)
(smt.stats   59   8175 176472 551908  7033/6749/289   12921/1603    36  150   56.81)
(smt.stats   60   8336 179543 566095  7056/6770/289   13234/1605    36  150   56.81)
(smt.stats   61   8513 182636 582687  7108/6787/289   13492/1605    36  150   56.81)
(sat.ddfw       1      1   14.0788   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=9.975s mem=59012KiB load=1.00 rootload=1.00
(smt.stats   62   8707 187204 619239  7138/6843/289   13744/1605    36  150   56.81)
(smt.stats   63   8920 191145 658655  7192/6879/289   14012/1609    36  150   56.94)
(smt.stats   64   9154 194665 693188  7241/6940/289   14351/1611    36  150   56.94)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 36028797018963968 := 36028797018963968 >>l 20
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 36028797018963968 := 36028797018963968 >>l 20
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 36028797018963968 := 36028797018963968 >>l 20
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 36028797018963968 := 36028797018963968 >>l 20
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&0
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 36028797018963968 := 36028797018963968 >>l 20
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 158329674399745 := 62 >>l 5
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 158329674399745 := 62 >>l 5
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 158329674399745 := 62 >>l 5
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 2109 := 62 >>l 5
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 158329674399744&1
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 2109 := 32 >>l 5
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 4 := 158329674399744&4
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 8 := 158329674399744&8
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 16 := 158329674399744&16
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 32 := 158329674399744&32
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 4 := 158329674399744&42
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 8 := 158329674399744&42
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 32 := 158329674399744&42
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 32 := 158329674399744&42
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 16 := 158329674399744&42
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 16 := 158329674399744&42
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 2 := 158329674399744&42
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 1 := 158329674399744&42
(smt.stats   65   9411 197728 714201  7420/7093/341   14690/1880    37  161   57.13)
(smt.stats   66   9512 198362 725875  7467/7173/346   14880/1880    37  161   57.27)
ramon: poll                 wall=11.000s usage=10.970s mem=59524KiB load=1.00 rootload=0.99
(smt.stats   67   9623 200692 743588  7495/7177/346   15093/1883    37  161   57.27)
(smt.stats   68   9745 203754 772369  7509/7209/346   15372/1917    38  164   57.37)
(sat.ddfw       1      1   13.2287   1210001      5931         15            1      123)
(smt.stats   69   9879 206874 801325  7550/7243/347   15745/1917    38  164   57.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 210868 832536  7632/7323/348   15970/1984    39  166   57.93)
ramon: poll                 wall=12.000s usage=11.970s mem=60108KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10187 219763 859610  7683/7374/349   16153/2003    40  168   57.93)
(smt.stats   72  10364 228212 894257  7698/7389/349   16406/2020    41  168   58.02)
(smt.stats   73  10558 233399 912427  7734/7415/351   16698/2040    42  172   58.02)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&212205744160770
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1901055604424706 := 6953557824660078592 >>l 19
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&212205744160769
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1901055604424705 := 6953557824660045824 >>l 19
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&212205744160769
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 1901055604424705 := 6953557824660045824 >>l 19
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&13262859010048
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 106102872080385 := 212205744160768 >>l 4
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&13262859010048
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 106102872080385 := 212205744160768 >>l 4
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&13331578486784
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 106102872080384 := 213305255788544 >>l 4
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&15255723835391
lshr: (lshr[48] (bv2int %0) (+ 48 (* 281474976710655 #109))) 35184372088833 := 244091581366256 >>l 4
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&13262859010048
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 682 := 35184372088832&13262859010048
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&13262859010048
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 682 := 35184372088832&13262859010048
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&13262859010048
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 652 := 35184372088832&13262859010048
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 35184372088832&13262859010048
band: (band[48] (if (= #113 47) 7036874417766400 (if #497 3518437208883200 #589)) (lshr[48] (bv2int %0) (+ 48 #592))) 652 := 35184372088832&13262859010048
(smt.stats   74  10771 238697 926556  7797/7433/351   17014/2046    42  172   58.22)
(sat.ddfw       1      1   12.4601   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=12.961s mem=60568KiB load=0.99 rootload=0.99
(smt.stats   75  11005 243829 957643  7910/7532/366   17420/2075    43  176   58.33)
(smt.stats   76  11262 251502 988252  8110/7675/369   17894/2118    44  177   58.46)
ramon: poll                 wall=14.000s usage=13.917s mem=60848KiB load=0.96 rootload=0.96
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11544 260615 1018160  8271/7807/370   18323/2119    44  177   58.55)
(smt.stats   78  11645 265062 1028741  8292/7967/370   18480/2145    45  179   58.69)
(smt.stats   79  11756 269239 1047926  8334/7986/370   18650/2146    45  179   58.95)
(sat.ddfw       1      1   11.7306   1540001      7549         17            1      156)
(smt.stats   80  11878 271994 1057308  8517/8202/371   18859/2195    46  179   59.14)
(smt.stats   81  12012 274129 1066548  8606/8289/373   19161/2198    46  179   59.24)
ramon: poll                 wall=15.000s usage=14.894s mem=61876KiB load=0.98 rootload=0.97
(smt.stats   82  12159 276100 1084084  8623/8303/373   19344/2198    46  179   59.24)
(smt.stats   83  12320 278740 1100902  8695/8327/373   19527/2199    46  179   59.33)
(smt.stats   84  12497 281614 1121659  8710/8386/374   19780/2234    47  184   59.33)
(smt.stats   85  12691 289786 1147278  8724/8392/374   20038/2235    47  184   59.45)
(smt.stats   86  12904 296971 1189768  8730/8406/374   20383/2259    48  193   59.45)
ramon: poll                 wall=16.000s usage=15.897s mem=61976KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   11.2073   1720001      8431         18            1      174)
(smt.stats   87  13138 304067 1239547  8747/8406/374   20826/2259    48  193   59.45)
(smt.stats   88  13395 314931 1275011  8800/8445/374   21209/2259    48  193   60.11)
ramon: poll                 wall=17.000s usage=16.893s mem=62188KiB load=1.00 rootload=0.99
(smt.stats   89  13677 322277 1321862  8841/8480/375   21682/2314    49  196   60.21)
(smt.stats   90  13987 330496 1356734  8976/8537/375   22232/2319    49  196   60.30)
(smt.stats   91  14088 331363 1377555  9015/8685/375   22395/2319    49  196   60.30)
(smt.stats   92  14199 334402 1398040  9032/8694/375   22559/2319    49  196   60.30)
(sat.ddfw       1      1   10.6664   1910001      9362         19            1      193)
band: (band[48] (if (= #321 63) 461168601842738790400 (if #474 230584300921369395200 #471)) (lshr[64] (* 32768 #304) (mod #610 64))) 0 := 100&4358144
lshr: (lshr[64] (* 32768 (bv2int %0)) (mod (+ 63 #603 #607) 64)) 4358144 := 4358144 >>l 62
(smt.stats   93  14321 335920 1418117  9034/8704/375   22708/2319    49  196   60.41)
ramon: poll                 wall=18.000s usage=17.896s mem=62536KiB load=1.00 rootload=1.01
(smt.stats   94  14455 338037 1431997  9064/8718/375   22925/2319    49  196   60.41)
(smt.stats   95  14602 343749 1443873  9070/8740/375   23178/2319    49  196   60.41)
(smt.stats   96  14763 350821 1478327  9131/8741/375   23539/2322    49  196   60.51)
ramon: poll                 wall=19.000s usage=18.893s mem=62728KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   97  14940 354768 1506878  9144/8814/375   23798/2322    49  196   60.51)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   98  15134 357697 1531173  9187/8849/376   24088/2465    50  207   60.51)
(sat.ddfw       1      1   10.2067   2110001     10343         20            1      214)
(smt.stats   99  15347 362685 1566486  9220/8883/377   24418/2467    50  207   60.51)
ramon: poll                 wall=20.003s usage=19.950s mem=62876KiB load=1.05 rootload=1.06
ramon: end                  Fri Nov  1 22:03:21 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.964s
ramon: group.utime          19.948s
ramon: group.stime          0.016s
ramon: group.mempeak        63132KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.021s
ramon: loadavg              1.00
