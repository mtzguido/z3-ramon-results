ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:03:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41972 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1260
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KPdO2wS5oGM6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2912615
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3362    836  1269/1129/89     100/3     2   13   19.05)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 0 := 200 << 13
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 0 := 200 << 13
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 0 := 200 << 13
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 0 := 200 << 13
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 0 := 200 << 13
(smt.stats    1    202   5371   2342  2030/1827/102     195/11     5   16   19.44)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 0 := 200 << 13
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855871 := 4503599627370496 << 14
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 144115188075855870 := 4503599627370496 << 14
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 4503599627370497 := 4503599627370496 << 14
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3812&0
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 132856189007429633 := 132856189007429632 << 14
(smt.stats    2    313   7547   5006  2150/1941/110     299/23     9   23   19.44)
(smt.stats    3    414   9864   7401  2182/1972/118     386/21    11   33   19.55)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 144115188075855874 := 144678138029277184 << 3
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 144115188075855874 := 144678138029277184 << 3
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 1 := 3&2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 144115188075855874 := 144678138029277184 << 3
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 144115188075855874 := 236931561646194688 << 3
(smt.stats    4    525  11376   8405  2287/2074/145     491/40    12   41   19.65)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&11399736556781568
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 36741280553762816 << 4
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&11399736556781568
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 36741280553762816 << 4
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&11399736556781568
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1 := 36741280553762816 << 4
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&11399736556781568
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 1537 := 36741280553762816 << 4
(smt.stats    5    647  12896  10558  2389/2104/147     618/42    13   45   19.84)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14771  12893  2724/2469/152     726/43    14   46   19.94)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&37999121855938560
band: (band[57] (if (or #575 #576) 0 (if #577 1 #733)) (shl[57] (bv2int %0) (+ 57 #735))) 1 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&37999121855938560
band: (band[57] (if (or #575 #576) 0 (if #577 1 #733)) (shl[57] (bv2int %0) (+ 57 #735))) 2 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&37999121855938560
band: (band[57] (if (or #575 #576) 0 (if #577 1 #733)) (shl[57] (bv2int %0) (+ 57 #735))) 2 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&37999121855938560
band: (band[57] (if (or #575 #576) 0 (if #577 1 #733)) (shl[57] (bv2int %0) (+ 57 #735))) 2 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 3&37999121855938560
band: (band[57] (if (or #575 #576) 0 (if #577 1 #733)) (shl[57] (bv2int %0) (+ 57 #735))) 1 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 1 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 1 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 1 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 1 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 1 := 3&37999121855938560
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 2 := 3&37999121855938560
(smt.stats    7    859  16220  14841  2803/2478/152     852/50    15   46   20.03)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 2 := 3&22236523160141824
(smt.stats    8    981  17513  17364  2857/2600/186     967/70    17   77   20.13)
(smt.stats    9   1115  22015  24804  2879/2617/186    1113/70    18   80   20.13)
(smt.stats   10   1216  25764  31920  2879/2617/186    1216/70    18   80   20.24)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304940
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304940
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304940
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304940
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304940
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304944
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304960
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304960
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304960
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304960
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304944
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&4081387162304976
(smt.stats   11   1327  29347  37946  2964/2619/186    1343/71    18   80   20.34)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304960
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304960
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304964
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305028
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1445233267920863748 := 144607769285099600 << 19
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305028
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1445233267920863748 := 144607769285099714 << 19
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304960
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304964
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305276
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305540
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1445233267920864260 := 144607769285099714 << 19
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305020
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304960
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304964
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305024
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305028
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1445233267920863748 := 144607769285099714 << 19
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305028
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1445233267920863748 := 144607769285099714 << 19
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305024
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305028
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1445233267920863748 := 144607769285099600 << 19
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305024
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162305020
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304996
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304964
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304964
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304756
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&4081387162304516
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1445233267920863236 := 144607769285099600 << 19
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 244029&3940649673950212
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1445092530432508932 := 144607769285099600 << 19
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 8 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 32 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 32 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 64 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 128 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 512 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 1024 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 2048 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4096 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 8192 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16384 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16384 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 32768 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 65536 := 244029&41943040
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 131072 := 244029&41943040
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  31392  42586  3061/2797/300    1538/121    20  105   20.83)
(smt.stats   13   1583  36374  48508  3105/2829/303    1671/146    22  113   20.95)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018964100
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018964096
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018964096
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018964480
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018964096
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018964480
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018964992
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018964992
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018966016
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1477180677777524736 := 40532396646334476 << 56
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018966016
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1477180677777524736 := 40532396646334476 << 56
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018966016
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1477180677777524736 := 40532396646334476 << 56
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018966016
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1477180677777524736 := 40532396646334590 << 56
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018966016
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1477180677777524736 := 40532396646334590 << 56
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&144115188075853824
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 33539124764571301&36028797018966016
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 1477180677777524736 := 40532396646334590 << 56
(smt.stats   14   1730  40826  55056  3299/2890/306    1885/160    23  116   21.24)
ramon: poll                 wall=1.000s usage=0.941s mem=22468KiB load=0.94 rootload=0.92
(smt.stats   15   1831  42110  58027  3404/3059/341    2028/165    23  116   21.24)
(smt.stats   16   1942  43962  63865  3488/3196/346    2233/230    25  135   21.24)
(smt.stats   17   2064  47163  69102  3507/3216/351    2398/318    26  178   21.34)
(smt.stats   18   2198  56645  88687  3515/3224/351    2543/318    26  178   21.34)
ramon: poll                 wall=2.002s usage=1.915s mem=23252KiB load=0.97 rootload=0.97
(smt.stats   19   2345  59911  95219  3637/3227/351    2731/318    26  178   21.72)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&144115187939545026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 288230376015400898 := 288230376015400898 << 1
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&144115187939544798
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 288230376015400670 := 288230376015400670 << 1
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&144115187939544798
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 288230376015400670 := 288230376015400670 << 1
(smt.stats   20   2506  62504 100605  3887/3476/351    3080/322    26  178   21.82)
(smt.stats   21   2607  65841 106837  3944/3650/357    3289/389    27  179   21.82)
(smt.stats   22   2718  69540 116440  3955/3660/357    3520/418    28  182   21.91)
ramon: poll                 wall=3.000s usage=2.913s mem=23388KiB load=1.00 rootload=1.00
(smt.stats   23   2840  75105 129853  3975/3680/360    3679/494    30  201   22.04)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 142989288169013301 := 55 << 2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 142989288169013301 := 55 << 2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 142989288169013301 := 55 << 2
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&220
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #116))) 142989288169013301 := 55 << 2
(smt.stats   24   2974  77902 136383  4112/3788/374    3891/515    31  209   22.34)
(smt.stats   25   3121  85586 151575  4125/3796/376    4089/523    32  220   22.49)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 2 := 16769562382285650&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 2 := 2 << 55
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 16769562382285650&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 0 := 2 << 55
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 16769562382285650&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 0 := 2 << 55
(smt.stats   26   3282  89907 161631  4187/3856/383    4391/548    33  250   23.07)
(smt.stats   27   3459  95855 174980  4264/3916/390    4822/566    34  266   23.28)
(smt.stats   28   3560  98984 182548  4269/3921/390    5028/566    34  266   23.28)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 8384781191142825&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 432345564227567618 := 4 << 54
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 8384781191142825&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 432345564227567616 := 4 << 54
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 8384781191142825&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 432345564227567616 := 4 << 54
(smt.stats   29   3671 103383 192840  4361/3934/390    5214/583    35  279   23.38)
(smt.stats   30   3793 104090 193616  4378/4020/395    5339/592    35  279   23.69)
(smt.stats   31   3927 107509 204080  4996/4490/395    5773/603    35  279   23.88)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 111818 212152  5107/4666/398    6080/648    36  280   23.98)
ramon: poll                 wall=4.002s usage=3.913s mem=25272KiB load=1.00 rootload=0.99
(smt.stats   33   4235 117380 223613  5402/5002/401    6399/738    37  288   24.08)
ramon: poll                 wall=5.000s usage=4.911s mem=25592KiB load=1.00 rootload=1.00
(smt.stats   34   4412 122042 234991  5681/5328/403    6815/791    38  300   24.36)
(smt.stats   35   4606 130969 261819  5705/5350/406    7402/793    38  300   24.36)
(smt.stats   36   4707 135362 272470  5811/5451/407    7729/873    39  305   24.46)
ramon: poll                 wall=6.002s usage=5.913s mem=25992KiB load=1.00 rootload=1.00
(smt.stats   37   4818 139535 286876  5921/5463/407    8199/916    40  306   24.55)
(smt.stats   38   4940 143818 303006  6057/5672/407    8699/919    40  306   24.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 457)
(smt.stats   39   5074 149184 318553  6067/5714/408    8757/1051    41  310   24.55)
(smt.stats   40   5221 155764 341328  6079/5726/408    9263/1051    41  310   24.66)
(smt.stats   41   5382 161229 354513  6266/5731/408    9597/1056    41  310   24.76)
ramon: poll                 wall=7.000s usage=6.911s mem=26304KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5559 168107 375354  6368/6011/412   10272/1240    42  321   24.85)
(smt.stats   43   5753 176982 399067  6480/6021/412   10784/1305    43  339   24.95)
(smt.stats   44   5966 184098 422030  6742/6148/413   11874/1414    44  339   25.14)
(smt.stats   45   6067 188402 434654  6750/6397/413   12119/1414    44  339   25.14)
ramon: poll                 wall=8.000s usage=7.911s mem=26696KiB load=1.00 rootload=1.00
(smt.stats   46   6178 193840 451052  6768/6410/413   12346/1414    44  339   25.24)
(smt.stats   47   6300 198121 469266  6850/6426/413   12803/1416    44  339   25.33)
(smt.stats   48   6434 200341 482541  7067/6519/413   13065/1423    44  339   25.52)
ramon: poll                 wall=9.000s usage=8.910s mem=27056KiB load=1.00 rootload=1.00
(smt.stats   49   6581 207283 503597  7097/6740/413   13768/1423    44  339   25.52)
(smt.stats   50   6742 220363 569757  7110/6757/416   14014/1636    46  364   25.52)
(smt.stats   51   6919 231438 619419  7122/6766/416   14575/1636    46  364   25.63)
(smt.stats   52   7113 240182 649637  7143/6790/419   15062/1727    47  374   25.63)
ramon: poll                 wall=10.000s usage=9.910s mem=27160KiB load=1.00 rootload=1.00
(smt.stats   53   7326 248997 689373  7390/6797/419   15747/1739    47  374   25.82)
(smt.stats   54   7560 254556 722569  7650/7104/419   16815/1741    47  374   26.01)
(smt.stats   55   7661 258616 737592  7665/7312/419   17355/1741    47  374   26.11)
(smt.stats   56   7772 261584 743372  7686/7317/419   17627/1742    47  374   26.11)
ramon: poll                 wall=11.000s usage=10.910s mem=27844KiB load=1.00 rootload=1.00
(smt.stats   57   7894 264139 754919  7931/7386/419   17823/1750    47  374   26.20)
(smt.stats   58   8028 266580 772477  7992/7639/421   18272/2273    48  375   26.20)
(smt.stats   59   8175 272274 799770  8024/7648/422   18600/2274    48  375   26.47)
(smt.stats   60   8336 277867 825440  8040/7682/422   19045/2274    48  375   26.47)
ramon: poll                 wall=12.000s usage=11.910s mem=28364KiB load=1.00 rootload=1.00
(smt.stats   61   8513 282590 856030  8119/7766/424   19682/2395    49  381   26.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8707 290520 892422  8362/7768/424   20156/2399    49  381   26.67)
(smt.stats   63   8920 296592 943601  8713/8063/424   20840/2553    50  387   26.86)
ramon: poll                 wall=13.000s usage=12.910s mem=28528KiB load=1.00 rootload=1.00
(smt.stats   64   9154 309244 969031  8728/8374/424   21330/2553    50  387   26.96)
(smt.stats   65   9411 317040 1005587  8746/8389/424   22493/2553    50  387   27.06)
(smt.stats   66   9512 319459 1023473  8762/8409/425   23189/2951    51  399   27.06)
(smt.stats   67   9623 324690 1056106  8780/8427/425   23406/2951    51  399   27.06)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   68   9745 337393 1120869  8789/8436/425   23529/2951    51  399   27.15)
(smt.stats   69   9879 348015 1183275  8792/8439/425   23711/2951    51  399   27.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 5)
ramon: poll                 wall=14.000s usage=13.909s mem=28736KiB load=1.00 rootload=1.00
(smt.stats   70  10026 353444 1211712  8797/8444/425   25012/2951    51  399   27.25)
(smt.stats   71  10187 365194 1280905  8801/8448/425   25658/2951    51  399   27.25)
(smt.stats   72  10364 377048 1353377  8807/8454/425   26275/2951    51  399   27.35)
(smt.stats   73  10558 384816 1400138  8814/8461/426   26828/3288    52  402   27.35)
(smt.stats   74  10771 397061 1490261  8817/8464/426   27068/3288    52  402   27.44)
ramon: poll                 wall=15.000s usage=14.909s mem=28948KiB load=1.00 rootload=1.00
(smt.stats   75  11005 408772 1566905  8827/8474/426   28001/3288    52  402   27.56)
(smt.stats   76  11262 423875 1680115  8833/8480/426   28838/3288    52  402   27.66)
(smt.stats   77  11544 434495 1761996  8860/8506/426   29744/3288    52  402   27.76)
(smt.stats   78  11645 439981 1804582  8861/8507/426   29870/3288    52  402   27.76)
ramon: poll                 wall=16.000s usage=15.909s mem=29256KiB load=1.00 rootload=1.00
(smt.stats   79  11756 448950 1861795  8881/8507/426   29991/3289    52  402   27.93)
(smt.stats   80  11878 453656 1886378  8978/8536/426   30347/3294    52  402   28.03)
ramon: poll                 wall=17.000s usage=16.909s mem=29752KiB load=1.00 rootload=1.00
(smt.stats   81  12012 456468 1902765  9078/8653/426   30921/3294    52  402   28.12)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 17 := 31235744&191
(smt.stats   82  12159 461580 1925413  9207/8814/427   31271/3655    53  402   28.12)
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 10 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 4 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 8 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 16 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 64 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 96 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 96 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 96 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 96 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 96 := 31235744&191
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 160 := 31235744&191
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 191 := 198158383604301930 << 26
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 160 := 31235744&191
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 191 := 198158383604301930 << 26
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 160 := 31235744&191
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 191 := 198158383604301930 << 26
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 160 := 31235744&191
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 18302628885633695935 := 144115188075855924 << 26
band: (band[57] (if (or #749 #750 #751 #752 #753 #754 #755 #756 #757) 0 (if #758 1 #866)) (shl[64] (* 2 #114) (mod #904 64))) 160 := 31235744&191
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #901 #903) 64)) 18302628885633695935 := 144115188075855924 << 26
(smt.stats   83  12320 465849 1958702  9322/8894/438   31538/3661    53  402   28.22)
(smt.stats   84  12497 470745 1984123  9362/8983/448   31814/3662    53  402   28.22)
(smt.stats   85  12691 479473 2029121  9380/9020/448   32334/3704    54  407   28.31)
ramon: poll                 wall=18.000s usage=17.909s mem=29856KiB load=1.00 rootload=0.99
(smt.stats   86  12904 493362 2143133  9403/9043/448   33496/3704    54  407   28.41)
(smt.stats   87  13138 501166 2191609  9420/9053/448   34288/3704    54  407   28.41)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   88  13395 512446 2289309  9425/9065/448   34772/3704    54  407   28.51)
ramon: poll                 wall=19.000s usage=18.908s mem=30120KiB load=1.00 rootload=1.00
(smt.stats   89  13677 524536 2413860  9448/9084/448   35417/3704    54  407   28.60)
(smt.stats   90  13987 538153 2534192  9465/9101/448   36118/3704    54  407   28.70)
(smt.stats   91  14088 541330 2556539  9468/9104/448   36589/3704    54  407   28.70)
(smt.stats   92  14199 548719 2638593  9470/9106/448   36747/3704    54  407   28.70)
(smt.stats   93  14321 554135 2690844  9478/9114/448   37070/3704    54  407   28.79)
ramon: poll                 wall=20.002s usage=19.910s mem=30472KiB load=1.00 rootload=1.01
ramon: end                  Tue Dec 24 15:04:07 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.030s
ramon: group.total          19.968s
ramon: group.utime          19.928s
ramon: group.stime          0.040s
ramon: group.mempeak        30732KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              1.00
