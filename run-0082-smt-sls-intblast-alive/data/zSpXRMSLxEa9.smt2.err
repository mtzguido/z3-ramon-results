ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:20:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27058 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zSpXRMSLxEa9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             970577
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   72.4638     10000        49          0            1        2)
(smt.stats    0    101   3168    245  1269/1134/108      97/13     4   16   52.07)
(sat.ddfw       1      1   39.5296     20001        98          1            1        3)
(smt.stats    1    202   5811   1517  2007/1815/116     189/20     8   27   52.26)
(sat.ddfw       1      1     41.58     40001       196          2            1        5)
(smt.stats    2    313   7640   4278  2152/1858/116     326/23     8   27   52.45)
(smt.stats    3    414   8344   5998  2259/2030/117     498/32     9   29   52.45)
(sat.ddfw       1      1   37.0828     70001       343          3            1        8)
(smt.stats    4    525   8594   8000  2272/2069/119     643/87    10   31   52.59)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 93530 := 549755813888&93567
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&93567
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 93567 := 48000 >>l 24
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&93567
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 93567 := 48000 >>l 24
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&92352
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 92352 := 48000 >>l 24
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92315 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92315 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92352 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92316 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92320 := 549755813888&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92416 := 549755813888&92416
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92672 := 549755813888&92672
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 93184 := 549755813888&93184
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 92672 := 549755813888&92672
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 93184 := 549755813888&93184
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&93567
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 93567 := 48000 >>l 24
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 549755813888&92352
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 92352 := 48000 >>l 24
(smt.stats    5    647   9717  10658  2800/2556/164     777/131    12   46   52.78)
ramon: poll                 wall=1.000s usage=0.796s mem=55060KiB load=0.80 rootload=0.78
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&92352
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&92479
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 92479 := 43776 >>l 57
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&43777
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 43777 := 43776 >>l 57
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&43777
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 43777 := 43776 >>l 57
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 5 := 342 >>l 50
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 1 := 342 >>l 50
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 1 := 342 >>l 50
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 1 := 342 >>l 50
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 64&0
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 1 := 342 >>l 50
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  11283  12641  2900/2648/189     877/134    15   59   52.78)
(smt.stats    7    859  13528  15463  2942/2682/192    1000/150    16   60   52.97)
(smt.stats    8    981  15041  18772  2969/2707/195    1122/179    18   71   52.97)
(sat.ddfw       1      1   33.1126    110001       539          4            1       12)
(smt.stats    9   1115  18783  22606  3011/2711/195    1267/186    18   71   53.16)
(sat.ddfw       1      1   29.3594    160000       784          5            1       17)
(smt.stats   10   1216  23142  27519  3087/2766/195    1382/187    18   71   53.36)
ramon: poll                 wall=2.000s usage=1.794s mem=55508KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   26.0761    220001      1078          6            1       23)
(smt.stats   11   1327  24855  29202  3160/2834/195    1499/190    18   71   53.36)
(smt.stats   12   1449  25762  30666  3366/2962/195    1633/191    18   71   53.55)
ramon: poll                 wall=3.000s usage=2.794s mem=55924KiB load=1.00 rootload=1.00
(smt.stats   13   1583  27795  35321  3383/3121/197    1821/211    19   72   53.55)
(sat.ddfw       1      1   23.3489    290001      1421          7            1       30)
(smt.stats   14   1730  31177  39529  3477/3122/197    1987/243    20   73   53.74)
(sat.ddfw       1      1   21.0748    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.791s mem=55876KiB load=1.00 rootload=1.00
(smt.stats   15   1831  32916  40672  3645/3335/197    2105/246    20   73   53.74)
(smt.stats   16   1942  33784  41873  3860/3487/197    2232/252    20   73   53.83)
(sat.ddfw       1      1   19.1775    460001      2254          9            1       47)
(smt.stats   17   2064  35487  46573  4016/3661/198    2449/295    21   76   53.83)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 576 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 576 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 512 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2048 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2048 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2048 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 1024 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 384 := 36028797018963968&2495
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 280 := 36028797018963968&2461
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 272 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 272 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 272 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 272 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 384 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 268 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 268 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 268 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 296 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 288 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2 := 36028797018963968&2448
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&2448
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 360287970189642128 := 279424 >>l 8
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&2448
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 360287970189642128 := 279424 >>l 8
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&2448
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 360287970189642128 := 279424 >>l 8
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&279312
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 279312 := 279424 >>l 8
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&221328
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #626 #630) 64)) 221328 := 279424 >>l 8
(smt.stats   18   2198  38425  57063  4123/3783/214    2622/328    22   80   54.03)
ramon: poll                 wall=5.000s usage=4.791s mem=56236KiB load=1.00 rootload=1.00
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 0 := 2183 >>l 1
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 0 := 2183 >>l 1
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 56 := 2183 >>l 1
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #109))) 957 := 2183 >>l 1
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1091 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1090 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1088 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1024 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 4 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1088 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1080 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1024 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 4 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 8 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 16 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 512 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1024 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 4 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&1091
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 1 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 2 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 1 := 36028797018963968&1091
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 256 := 36028797018963968&1091
(smt.stats   19   2345  42488  66526  4220/3939/350    2832/334    24   95   54.59)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   20   2506  47500  75749  4244/3960/350    3018/363    25  117   54.90)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 8 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 512 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 64 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&671
(smt.stats   21   2607  50633  83939  4300/3985/350    3156/365    25  117   54.90)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 32 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 128 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 256 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 2 := 36028797018963968&671
(smt.stats   22   2718  54474  90273  4321/4030/376    3285/391    26  122   54.90)
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 16 := 36028797018963968&671
band: (band[56] (if (= #347 63) 9223372036854775808 (if #484 4611686018427387904 #481)) (lshr[64] (* 128 #107) (mod #633 64))) 0 := 36028797018963968&671
band: (band[56] (if (= #113 55) 36028797018963968 (if #504 18014398509481984 #612)) (lshr[56] (bv2int %0) (+ 56 #615))) 16 := 36028797018963968&671
(smt.stats   23   2840  58562  97017  4348/4067/391    3447/406    27  128   54.99)
(smt.stats   24   2974  63003 103290  4376/4093/398    3598/436    28  129   55.22)
(sat.ddfw       1      1   17.5809    560001      2745         10            1       57)
(smt.stats   25   3121  67364 111129  4380/4097/398    3766/446    29  136   55.22)
ramon: poll                 wall=6.000s usage=5.794s mem=57692KiB load=1.00 rootload=1.00
(smt.stats   26   3282  74769 123277  4429/4107/398    3974/448    29  136   55.42)
(sat.ddfw       1      1    16.229    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.793s mem=57632KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.793s mem=57784KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.0735    790001      3872         12            1       80)
(smt.stats   27   3459  75519 124616  4691/4249/398    4159/450    29  136   55.63)
(smt.stats   28   3560  79246 129559  4810/4502/398    4282/451    29  136   55.63)
(smt.stats   29   3671  85489 147048  4818/4532/399    4413/496    30  138   55.63)
(smt.stats   30   3793  92345 155784  4832/4533/400    4614/496    30  138   56.04)
ramon: poll                 wall=9.000s usage=8.793s mem=58368KiB load=1.00 rootload=1.00
(smt.stats   31   3927  99114 169056  4956/4648/401    4784/550    32  144   56.04)
(sat.ddfw       1      1   14.0449    920001      4509         13            1       93)
(smt.stats   32   4074 104375 181094  4982/4663/403    5004/573    33  152   56.14)
ramon: poll                 wall=10.000s usage=9.793s mem=58352KiB load=1.00 rootload=1.00
(smt.stats   33   4235 109578 190790  5183/4679/403    5265/577    33  152   56.53)
(sat.ddfw       1      1   13.1554   1060001      5196         14            1      108)
ramon: poll                 wall=11.003s usage=10.796s mem=58880KiB load=1.00 rootload=1.00
(smt.stats   34   4412 115255 204956  5317/4934/403    5531/581    33  152   56.53)
(smt.stats   35   4606 121831 218743  5371/5040/403    5755/581    33  152   56.62)
(smt.stats   36   4707 126590 228299  5490/5065/403    5921/591    33  152   56.62)
ramon: poll                 wall=12.000s usage=11.799s mem=58936KiB load=1.01 rootload=1.00
(sat.ddfw       1      1   12.3579   1210001      5931         15            1      123)
(smt.stats   37   4818 133023 243760  5573/5189/403    6155/596    33  152   56.62)
(smt.stats   38   4940 137555 260135  5661/5351/405    6406/743    34  156   56.72)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=13.000s usage=12.786s mem=59292KiB load=0.99 rootload=0.99
(smt.stats   39   5074 143561 271398  5695/5359/405    6608/743    34  156   57.02)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   40   5221 149536 285950  5791/5391/405    6984/791    35  160   57.12)
(sat.ddfw       1      1   11.6482   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=13.786s mem=59520KiB load=1.00 rootload=1.00
(smt.stats   41   5382 155482 304233  5832/5521/406    7197/918    36  166   57.12)
(smt.stats   42   5559 159380 315186  5913/5529/406    7380/921    36  166   57.21)
ramon: poll                 wall=15.000s usage=14.786s mem=59564KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.0089   1540001      7549         17            1      156)
(smt.stats   43   5753 166043 331180  6037/5668/408    7635/938    37  167   57.30)
ramon: poll                 wall=16.000s usage=15.786s mem=59696KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.781s mem=59708KiB load=1.00 rootload=0.99
(smt.stats   44   5966 170145 343584  6271/5776/408    7914/941    37  167   57.30)
(smt.stats   45   6067 172892 353591  6297/5968/408    8092/960    38  167   57.40)
(sat.ddfw       1      1   10.4639   1720001      8431         18            1      174)
(smt.stats   46   6178 176931 364528  6408/5997/408    8292/963    38  167   57.49)
ramon: poll                 wall=18.000s usage=17.780s mem=59748KiB load=1.00 rootload=1.00
(smt.stats   47   6300 180315 375395  6551/6100/408    8478/965    38  167   57.49)
ramon: poll                 wall=19.003s usage=18.848s mem=59828KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   10.0237   1910001      9362         19            1      193)
(smt.stats   48   6434 184820 387939  6747/6437/409    8830/1105    39  172   57.59)
(smt.stats   49   6581 191747 413906  6771/6457/410    9037/1105    39  172   57.59)
(smt.stats   50   6742 198213 439897  6800/6475/410    9299/1144    40  174   57.83)
ramon: poll                 wall=20.000s usage=19.890s mem=60448KiB load=1.04 rootload=1.04
ramon: end                  Fri Nov  1 23:20:57 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.970s
ramon: group.utime          19.958s
ramon: group.stime          0.012s
ramon: group.mempeak        60708KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              0.99
