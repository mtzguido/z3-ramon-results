ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:13:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25999 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1400
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Mrh23GLMVlA8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             1887
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   5128   2074  1086/986/100      88/19     7   18   19.12)
(smt.stats    1    202   6675   3201  1883/1696/101     188/31     8   18   19.31)
(smt.stats    2    313   8255   4667  2048/1856/106     287/40    11   25   19.41)
(smt.stats    3    414   8783   5640  2254/1937/106     390/50    11   25   19.51)
(smt.stats    4    525   9886   8188  2402/2125/119     503/57    12   29   19.51)
(smt.stats    5    647  11156  10597  2473/2267/120     626/88    14   38   19.62)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  12064  12326  2537/2308/121     729/90    15   39   19.72)
(smt.stats    7    859  14241  15149  2551/2341/122     843/96    16   39   19.81)
(smt.stats    8    981  15315  17375  2596/2352/122     970/100    16   39   19.81)
(smt.stats    9   1115  16930  20068  2668/2428/122    1106/100    16   39   19.93)
(smt.stats   10   1216  18422  21785  2676/2460/122    1213/100    16   39   19.93)
(smt.stats   11   1327  21805  27135  2681/2468/125    1318/130    17   42   20.08)
ramon: poll                 wall=1.005s usage=0.932s mem=21180KiB load=0.93 rootload=0.93
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  23825  33004  2710/2469/125    1443/130    17   42   20.08)
(smt.stats   13   1583  25085  35563  2714/2498/125    1577/130    17   42   20.08)
(smt.stats   14   1730  28320  39230  2737/2502/125    1725/130    17   42   20.17)
(smt.stats   15   1831  29408  41238  2755/2529/125    1830/130    17   42   20.17)
(smt.stats   16   1942  30294  44147  2836/2594/125    1945/130    17   42   20.17)
(smt.stats   17   2064  30933  46863  2846/2633/126    2082/139    18   44   20.32)
(smt.stats   18   2198  32035  52486  2852/2639/126    2212/139    18   44   20.32)
(smt.stats   19   2345  33903  58128  2859/2646/127    2358/155    19   44   20.32)
(smt.stats   20   2506  35849  65003  2872/2654/127    2526/155    19   44   20.43)
(smt.stats   21   2607  37214  69918  2872/2657/127    2627/155    19   44   20.43)
(smt.stats   22   2718  38444  74840  2872/2657/127    2738/155    19   44   20.68)
(smt.stats   23   2840  39765  79175  2872/2657/127    2860/155    19   44   20.68)
(smt.stats   24   2974  41163  84385  2872/2657/127    2994/155    19   44   20.68)
(smt.stats   25   3121  41984  89906  2873/2658/127    3140/155    19   44   20.80)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 0&4294967296
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 140668768878592 := 4294967325 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 0&4294967296
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 140668768878592 := 4294967325 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 4294967295&4294967296
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 140673063845887 := 4294967325 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 4294967296&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 4294967296&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4294967296 := 4294967296&4294967296
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 140741783322624 := 4294967325 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4294967296 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4294967296 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4294967295 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4294967294 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4294967294 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 4294967326 := 4294967325 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 16 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 32 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 64 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 128 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 256 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 512 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 1024 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 42949672959 := 4294967325 << 33
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 1 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 2 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 4 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 8 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 4294967296 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 4294967292 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 4294967288 := 42949672960&4294967296
(smt.stats   26   3282  44367  96397  2987/2727/198    3305/171    20   47   21.19)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 4 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 4 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 4 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 4 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 1 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 3 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 3 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 2 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 16 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 32 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 64 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 128 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 256 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 512 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 1024 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 2048 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 1024 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 2048 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 4096 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 8192 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 16384 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 16384 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 32768 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 65536 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 65536 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 131072 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 262144 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 524288 := 42949672960&4294967296
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 42949672960&4294967296
band: (band[36] (shl[36] (bv2int %0) (mod #101 36)) (if (= #559 35) 1 (if #561 2 #629))) 1048576 := 42949672960&4294967296
(smt.stats   27   3459  44998  97623  3345/2763/236    3669/172    20   47   22.20)
(smt.stats   28   3560  46607 103673  3425/3163/341    4056/174    20   47   22.20)
ramon: poll                 wall=2.000s usage=1.927s mem=23528KiB load=1.00 rootload=0.98
(smt.stats   29   3671  48534 113209  3587/3369/343    4246/410    21  128   22.20)
(smt.stats   30   3793  49925 124206  3631/3373/343    4367/411    21  128   22.20)
(smt.stats   31   3928  51402 133969  3683/3465/348    4627/544    22  129   22.39)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  52457 144237  3718/3486/352    4916/638    23  138   22.39)
(smt.stats   33   4236  54229 149508  3819/3525/352    5068/642    23  138   22.39)
(smt.stats   34   4413  55729 160453  3874/3624/352    5249/645    23  138   22.39)
(smt.stats   35   4607  57016 175465  3895/3673/352    5568/766    24  142   22.49)
(smt.stats   36   4708  57754 182497  3934/3700/352    5664/768    24  142   22.49)
ramon: poll                 wall=3.000s usage=2.927s mem=23820KiB load=1.00 rootload=1.00
(smt.stats   37   4819  59447 196379  3975/3730/354    5780/880    25  146   22.49)
(smt.stats   38   4941  60800 209248  4101/3779/354    6057/881    25  146   22.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 16)
(smt.stats   39   5075  63120 222611  4116/3888/359    6258/881    25  146   22.62)
(smt.stats   40   5222  65894 240212  4222/3914/359    6396/1137    26  164   22.62)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 17179874274&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 17179874274&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 17179874274&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 17179877376&4096
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 292057784320 := 68719475821 << 13
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 17179874274&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 17179881471&4096
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 292057788415 := 68719475821 << 13
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 17179881471&4096
shl: (shl[64] (bv2int %0) (mod (+ #101 #291) 64)) 292057788415 := 68719475821 << 13
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 68711981056&4096
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 4 := 68719475821 << 13
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 68711981056&4096
shl: (shl[36] (bv2int %0) (mod (bv2int %0) 36)) 4 := 68719475821 << 13
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 1 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 2 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 2 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 32 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 64 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 128 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 32 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 64 := 68711981056&4096
(smt.stats   41   5383  70281 262493  4354/4116/411    6672/1253    27  172   22.83)
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 64 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 64 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 64 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 256 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 2048 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4096 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 4096 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 2048 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 1024 := 68711981056&4096
band: (band[36] (shl[64] (bv2int %0) (mod #292 64)) (if (= #648 63) 0 (if #650 1 #774))) 16 := 68711981056&4096
(smt.stats   42   5560  74040 272284  4465/4186/457    6885/1257    27  172   23.13)
ramon: poll                 wall=4.000s usage=3.926s mem=24604KiB load=1.00 rootload=1.00
(smt.stats   43   5754  79311 284208  4768/4386/460    7148/1320    28  190   23.32)
(smt.stats   44   5967  82429 292639  4999/4549/460    7443/1328    28  190   23.60)
(smt.stats   45   6068  84773 302558  5112/4842/461    8111/1340    29  193   23.70)
(smt.stats   46   6179  87112 311063  5161/4864/462    8367/1346    29  193   24.09)
(smt.stats   47   6301  91267 332678  5175/4906/462    8625/1651    30  196   24.09)
ramon: poll                 wall=5.000s usage=4.926s mem=25496KiB load=1.00 rootload=1.00
(smt.stats   48   6435  94032 351760  5233/4961/472    8848/1742    31  204   24.18)
(smt.stats   49   6582  97243 367069  5256/4980/477    9092/1742    31  204   24.28)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   50   6743 102066 378819  5357/4986/478    9228/1824    32  280   24.37)
(smt.stats   51   6920 105832 393702  5686/5411/479    9537/1863    33  282   24.47)
ramon: poll                 wall=6.000s usage=5.926s mem=26052KiB load=1.00 rootload=1.00
(smt.stats   52   7114 113715 411780  5825/5504/480    9865/1863    33  282   24.66)
(smt.stats   53   7327 122887 435287  5895/5536/480   10246/1896    34  283   24.66)
ramon: poll                 wall=7.000s usage=6.926s mem=26352KiB load=1.00 rootload=1.00
(smt.stats   54   7561 130153 462577  6123/5805/485   10943/2068    36  296   24.95)
(smt.stats   55   7662 132640 471735  6305/5844/485   11127/2073    36  296   24.95)
(smt.stats   56   7773 134868 477536  6433/6029/486   11330/2073    36  296   25.16)
ramon: poll                 wall=8.000s usage=7.926s mem=26636KiB load=1.00 rootload=0.99
(smt.stats   57   7895 137680 482688  6620/6321/487   11571/2117    37  297   25.25)
(smt.stats   58   8029 139814 488244  6662/6343/487   11776/2118    37  297   25.25)
ramon: poll                 wall=9.000s usage=8.926s mem=26840KiB load=1.00 rootload=1.00
(smt.stats   59   8176 144123 501616  6747/6383/487   12155/2121    37  297   25.35)
(smt.stats   60   8337 146676 507462  7025/6522/487   12539/2172    38  302   25.54)
ramon: poll                 wall=10.000s usage=9.925s mem=27000KiB load=1.00 rootload=1.00
(smt.stats   61   8514 149947 519361  7162/6779/487   12923/2174    38  302   25.54)
(smt.stats   62   8708 154114 540460  7469/6900/487   13583/2175    38  302   25.73)
ramon: poll                 wall=11.000s usage=10.925s mem=27308KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.925s mem=27504KiB load=1.00 rootload=1.00
(smt.stats   63   8921 159267 552552  7726/7183/487   13964/2186    38  302   25.92)
(smt.stats   64   9155 164770 576090  7947/7597/487   14638/2187    38  302   25.92)
(smt.stats   65   9412 173850 620069  8119/7673/489   15851/2387    39  310   26.11)
(smt.stats   66   9513 175351 633788  8141/7843/489   16301/2387    39  310   26.11)
ramon: poll                 wall=13.000s usage=12.925s mem=27696KiB load=1.00 rootload=1.00
(smt.stats   67   9624 177697 643729  8162/7850/490   16486/2603    40  312   26.22)
(smt.stats   68   9746 180120 651358  8245/7880/490   16743/2605    40  312   26.22)
(smt.stats   69   9880 183929 673633  8348/7995/490   17517/2605    40  312   26.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 45)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10027 187943 687554  8447/8109/490   17915/2605    40  312   26.48)
ramon: poll                 wall=14.000s usage=13.925s mem=28200KiB load=1.00 rootload=1.00
(smt.stats   71  10188 195126 719497  8570/8146/490   18225/2605    40  312   26.67)
(smt.stats   72  10365 199308 734623  8676/8294/490   18942/2606    40  312   26.78)
ramon: poll                 wall=15.000s usage=14.925s mem=28376KiB load=1.00 rootload=1.00
(smt.stats   73  10559 204818 755420  8814/8448/490   19463/2607    40  312   26.88)
(smt.stats   74  10772 213390 782192  8874/8529/490   19862/2607    40  312   26.98)
ramon: poll                 wall=16.000s usage=15.924s mem=28616KiB load=1.00 rootload=1.00
(smt.stats   75  11006 222510 816970  8993/8576/490   20531/2608    40  312   27.07)
(smt.stats   76  11263 232358 860470  9032/8699/490   21169/2608    40  312   27.62)
ramon: poll                 wall=17.000s usage=16.924s mem=29272KiB load=1.00 rootload=1.00
(smt.stats   77  11545 241111 890999  9225/8753/490   22393/2613    40  312   27.81)
ramon: poll                 wall=18.000s usage=17.924s mem=29396KiB load=1.00 rootload=1.00
(smt.stats   78  11646 244391 912191  9324/8992/490   22749/2614    40  312   27.81)
(smt.stats   79  11757 247890 932880  9396/9047/490   23113/2616    40  312   27.81)
(smt.stats   80  11879 252594 953163  9469/9165/491   23529/3706    41  316   27.81)
(smt.stats   81  12013 256096 970101  9485/9177/491   24624/3706    41  316   27.94)
ramon: poll                 wall=19.000s usage=18.924s mem=29616KiB load=1.00 rootload=1.00
(smt.stats   82  12160 262180 984824  9602/9185/491   25053/3710    41  316   28.04)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12321 268770 1018061  9714/9348/491   25551/3710    41  316   28.13)
ramon: poll                 wall=20.000s usage=19.924s mem=30040KiB load=1.00 rootload=1.00
(smt.stats   84  12498 273513 1033220  9765/9413/491   25899/3710    41  316   28.22)
ramon: end                  Fri Nov  1 18:14:04 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.002s
ramon: group.utime          19.982s
ramon: group.stime          0.020s
ramon: group.mempeak        30552KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              1.00
