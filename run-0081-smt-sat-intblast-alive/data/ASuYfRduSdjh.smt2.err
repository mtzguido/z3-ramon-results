ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:48:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29881 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1402
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ASuYfRduSdjh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             294277
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   232/232     0/0  67       0    18.51   0.00)
(sat.stats    108    628    0   232/232   108/36  67       0    18.85   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 280 :time 0.00)
(sat.stats    108    628    0   232/232   108/36  67       0    18.85   0.01)
(sat.stats    108    628    0   232/232   108/36  67       0    18.85   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 373818.85 :time 0.00)
(sat.stats    108    628    0   234/234    44/35  67       0    18.85   0.01)
(sat.stats    175   1865    1   234/234   111/86  67       0    18.95   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    178   1895    2   234/234   114/86  67       0    18.95   0.01)
(sat.stats    181   1926    3   234/234   117/88  67       0    18.95   0.01)
(sat.stats    184   1960    4   234/234   120/88  67       0    18.95   0.01)
(sat.stats    187   1977    5   234/234   123/88  67       0    18.95   0.01)
(sat.stats    190   1998    6   234/234   126/88  67       0    18.95   0.01)
(sat.stats    193   2024    7   234/234   129/88  67       0    18.95   0.01)
(sat.stats    196   2053    8   234/234   132/88  67       0    18.95   0.01)
(sat.stats    199   2094    9   234/234   135/88  67       0    18.95   0.01)
(sat.stats    202   2127   10   234/234   138/88  67       0    18.95   0.01)
(sat.stats    205   2154   11   234/234   141/91  67       0    18.95   0.01)
(sat.stats    208   2158   12   234/234   144/94  67       0    18.95   0.01)
(sat.stats    211   2162   13   234/234   147/97  67       0    18.95   0.01)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1919 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2204 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    400   4894   20   234/234   333/218  75       0    19.74   0.05)
(sat.stats    504   7113   21   234/234   437/241  75       0    19.74   0.06)
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 5575 :time 0.00)
ramon: poll                 wall=1.000s usage=0.931s mem=21904KiB load=0.93 rootload=0.91
(sat.stats   1247  29467   60  4292/4291  1213/325  81       0    20.99   1.46)
(sat.stats   1255  29494   61  4292/4291  1221/325  81       0    20.99   1.46)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9705 :time 0.00)
 (sat-cleaner :elim-literals 17 :elim-clauses 1 :cost 10760 :time 0.00)
 (sat-cleaner :elim-literals 189 :elim-clauses 2 :cost 11300 :time 0.00)
(sat.stats   1599  38160  117  4977/4976  1580/458  91       0    21.37   1.72)
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 11726 :time 0.00)
ramon: poll                 wall=2.000s usage=1.930s mem=22496KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.929s mem=23284KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 38 :elim-clauses 1 :cost 29597 :time 0.00)
lshr: (lshr[50] (bv2int %0) (mod (bv2int %0) 50)) 533 := 137438954333 >>l 33
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 15 := 16&1125899906711552
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 6 := 16&1125899906711552
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 0 := 16&1125899906711552
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #59 #292) 64)) 0 := 2251799827791872 >>l 47
lshr: (lshr[50] (bv2int %0) (mod (bv2int %0) 50)) 19 := 137438954335 >>l 35
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 0 := 4&1125899906809856
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #59 #292) 64)) 0 := 2251799827824640 >>l 49
(sat.stats   2828  64643  217 12501/12482  2923/647  93       0    22.77   3.37)
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 0 := 137438954300&0
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #59 #292) 64)) 0 := 2251799827251200 >>l 14
lshr: (lshr[50] (bv2int %0) (mod (bv2int %0) 50)) 137438954301 := 137438954301 >>l 1
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 98204 := 68719477150&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 51736 := 68719477150&562949953421312
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 0 := 68719477150&562949953421312
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #59 #292) 64)) 68719497403 := 2251799827267584 >>l 15
lshr: (lshr[50] (bv2int %0) (mod (bv2int %0) 50)) 68719477151 := 137438954303 >>l 3
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 239696 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 109248 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 32 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 1906688 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 1152 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 256 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 512 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 1024 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 13062144 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 143220736 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 199819264 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 32768 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 16384 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 3131572224 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 131072 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 262144 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 11873026048 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 11041505280 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 16999514112 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 14587789312 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 10401873920 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 16777216 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 33554432 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 2013265920 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 1342177280 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 10200547328 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 8589934592 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 1073741824 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 6442450944 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 4294967296 := 17179869287&985162418487296
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 17179869184 := 17179869287&985162418487296
 (sat-cleaner :elim-literals 7 :elim-clauses 2 :cost 33559 :time 0.00)
band: (band[50] (lshr[50] (bv2int %0) (mod #59 50)) (if (= #473 49) 316912650057056787424222380032 (if #475 158456325028528393712111190016 #571))) 0 := 17179869287&985162418487296
lshr: (lshr[64] (* 16384 (bv2int %0)) (mod (+ 14 #59 #292) 64)) 137438954303 := 2251799827300352 >>l 17
 (sat-cleaner :elim-literals 202 :elim-clauses 3 :cost 35735 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 36619 :time 0.00)
ramon: poll                 wall=4.000s usage=3.929s mem=26496KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 37812 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 39206 :time 0.00)
 (sat-cleaner :elim-literals 8 :elim-clauses 3 :cost 39894 :time 0.00)
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats     :decisions    :clauses/bin         :units         :memory       )
(sat.stats   3596 110073  337 21833/21807  3825/954 349       0    25.85   4.63)
ramon: poll                 wall=5.004s usage=4.933s mem=27220KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 41415 :time 0.00)
ramon: poll                 wall=6.000s usage=5.928s mem=29992KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.927s mem=38056KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.927s mem=41608KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.927s mem=43940KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.926s mem=46168KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.926s mem=58132KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.926s mem=60216KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.925s mem=61292KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.925s mem=62600KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.924s mem=64024KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.924s mem=65156KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.923s mem=66152KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.923s mem=67396KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.923s mem=69356KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.922s mem=70240KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:48:50 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.050s
ramon: group.total          19.999s
ramon: group.utime          19.943s
ramon: group.stime          0.056s
ramon: group.mempeak        70756KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.00
