ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:47:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28826 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aSpdMQZajciF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             470009
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts     :learned/bin    :gc          :time)
(sat.stats          :decisions   :clauses/bin :units       :memory       )
(sat.stats      0      0    0     8/8     0/0  82       0    18.03   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 104 :time 0.00)
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 52 := 9007199254740991 >>l 52
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #70))) 52 := 52 << 1
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 0&104
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #69 #115) 64)) 2048 := 2048 >>l 63
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 342 :time 0.00)
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 1&104
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 1 := 1&104
ramon: poll                 wall=1.005s usage=0.922s mem=19868KiB load=0.92 rootload=0.91
(sat.stats    143   1696    0   525/522   148/33 106       0    18.80   1.39)
 (sat-cleaner :elim-literals 9 :elim-clauses 0 :cost 644 :time 0.00)
(sat.stats    143   1696    0   565/562   147/32 115       0    18.80   1.39)
(sat.stats    143   1696    0   565/562   147/32 115       0    18.80   1.39)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 7 :elim-bin 174 :time 0.00)
 (sat-probing :cost 431018.80 :time 0.00)
(sat.stats    143   1696    0   109/106   138/33 115       0    18.80   1.39)
 (sat-cleaner :elim-literals 37 :elim-clauses 2 :cost 568 :time 0.00)
(sat.stats    146   1758    1   108/106   147/42 119       0    18.90   1.39)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin    :units         :memory       )
(sat.stats    150   1855    2   110/108   152/43 120       0    18.90   1.40)
(sat.stats    153   1906    3   122/120   158/43 120       0    18.90   1.41)
(sat.stats    157   1911    4   128/126   162/43 120       0    18.90   1.41)
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 17915 := 4503599627370496 >>l 7
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #70))) 0 := 7 << 46
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 4503599627370496 := 4503599627370496 >>l 5
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #70))) 0 := 5 << 48
(sat.stats    181   2313    5   212/207   192/48 120       0    18.99   1.42)
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 281474976710655&1407374883553280
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #69 #115) 64)) 1 := 18446744073709549568 >>l 16
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 753 :time 0.00)
(sat.stats    189   2449    6   234/229   197/49 141       0    19.09   1.42)
(sat.stats    192   2537    7   234/229   200/49 141       0    19.09   1.42)
(sat.stats    195   2594    8   234/229   207/53 141       0    19.09   1.42)
(sat.stats    199   2652    9   246/241   211/53 141       0    19.09   1.43)
(sat.stats    204   2705   10   249/244   216/54 141       0    19.09   1.43)
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 1&1407374883553280
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #154 #158) 64)) 15 := 10 << 47
(sat.stats    207   2794   11   281/275   219/54 141       0    19.09   1.43)
(sat.stats    211   2832   12   313/306   223/54 141       0    19.09   1.43)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 924 :time 0.00)
(sat.stats    214   2894   13   330/323   224/52 148       0    19.09   1.43)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 987 :time 0.00)
 (sat-cleaner :elim-literals 13 :elim-clauses 0 :cost 1110 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1189 :time 0.00)
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 1 := 61 >>l 9
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #70))) 2533274790412138 := 9 << 44
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 0&158329674399744
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #69 #115) 64)) 0 := 0 >>l 20
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 0&158329674399744
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #154 #158) 64)) 2533274790445476 := 18 << 43
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 1 := 2&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 2&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 2 := 2&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 2 := 4&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 4&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 4 := 4&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 4 := 10&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 10&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 8 := 10&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 22&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 16 := 22&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 16 := 38&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 8 := 38&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 38&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 32 := 38&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 32 := 70&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 70&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 64 := 70&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 191&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 128 := 191&158329674399744
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin       :units         :memory       )
(sat.stats    400   6608   29  3235/3222   496/147 156       0    20.60   1.51)
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 263&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 256 := 263&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 512&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 512 := 512&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 1024&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 1024 := 1024&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 2048&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 2048 := 2048&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 4096&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 4096 := 4096&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 8192&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 8192 := 8192&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 16384&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 16384 := 16384&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 32768&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 32768 := 32768&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 65536&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 65536 := 65536&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 131072&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 131072 := 131072&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 262144&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 262144 := 262144&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 524288&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 524288 := 524288&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 1048576&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 1048576 := 1048576&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 2097152&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 2097152 := 2097152&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 4194304&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 4194304 := 4194304&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 8388608&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 8388608 := 8388608&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 16777216&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 16777216 := 16777216&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 33554432&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 33554432 := 33554432&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 67108864&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 67108864 := 67108864&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 134217728&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 134217728 := 134217728&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 268435456&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 268435456 := 268435456&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 536870912&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 536870912 := 536870912&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 1073741824&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 1073741824 := 1073741824&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 2147483648&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 2147483648 := 2147483648&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 4294967296&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 4294967296 := 4294967296&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 8589934592&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 8589934592 := 8589934592&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 17179869184&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 17179869184 := 17179869184&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 34359738368&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 34359738368 := 34359738368&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 68719476736&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 68719476736 := 68719476736&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 137438953472&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 137438953472 := 137438953472&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 274877906944&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 274877906944 := 274877906944&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 549755813888&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 549755813888 := 549755813888&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 1099511627776&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 1099511627776 := 1099511627776&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 2199023255552&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 2199023255552 := 2199023255552&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 4398046511104&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 4398046511104 := 4398046511104&158329674399744
band: (band[53] (lshr[53] (bv2int %1) (mod #69 53)) (shl[53] (bv2int %0) (+ 53 #140))) 0 := 8796093022208&158329674399744
band: (band[53] (lshr[64] (* 2048 #78) (mod #116 64)) (shl[64] (* 2 #69) (mod #163 64))) 8796093022208 := 8796093022208&158329674399744
 (sat-cleaner :elim-literals 89 :elim-clauses 2 :cost 2840 :time 0.00)
ramon: poll                 wall=2.000s usage=1.912s mem=27432KiB load=0.99 rootload=0.98
(sat.stats    759  16299   30 65347/65334  1676/974 465       0    32.37   2.33)
(sat.stats    762  16447   31 65347/65334  1679/974 465       0    32.37   2.33)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 3310 :time 0.00)
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 3313 :time 0.00)
ramon: poll                 wall=3.000s usage=2.910s mem=36704KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.910s mem=37264KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.910s mem=39524KiB load=1.00 rootload=1.00
(sat.stats   1110  33221   79 123595/123582  2908/1872 473       0    41.53   5.77)
ramon: poll                 wall=6.000s usage=5.910s mem=43080KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 9 :elim-clauses 2 :cost 4955 :time 0.00)
 (sat-cleaner :elim-literals 10 :elim-clauses 0 :cost 4939 :time 0.00)
 (sat-cleaner :elim-literals 12 :elim-clauses 0 :cost 5345 :time 0.00)
ramon: poll                 wall=7.000s usage=6.909s mem=43984KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.909s mem=44076KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.909s mem=44096KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.909s mem=44292KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.907s mem=45520KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.907s mem=45724KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.005s usage=12.915s mem=46236KiB load=1.00 rootload=1.01
ramon: poll                 wall=14.000s usage=13.907s mem=46492KiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.907s mem=46492KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.907s mem=46748KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.906s mem=47916KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.906s mem=57384KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.906s mem=59044KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.906s mem=60324KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:47:42 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.993s
ramon: group.utime          19.953s
ramon: group.stime          0.040s
ramon: group.mempeak        65196KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.00
