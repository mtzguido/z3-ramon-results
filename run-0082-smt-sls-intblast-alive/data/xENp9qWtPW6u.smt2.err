ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:17:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27187 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xENp9qWtPW6u.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             962464
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   74.6269     10000        49          0            1        2)
(sat.ddfw       1      1   39.2196     20001        98          1            1        3)
(sat.ddfw       1      1   39.7614     40001       196          2            1        5)
(smt.stats    0    101   2511    129  1263/1109/110      96/18     6   16   52.24)
(sat.ddfw       1      1   34.2075     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.976s mem=54328KiB load=0.98 rootload=0.96
(smt.stats    1    202   4102    447  2010/1809/110     204/18     6   16   52.34)
(sat.ddfw       1      1   29.2826    110001       539          4            1       12)
(smt.stats    2    313   6397   1272  2246/1993/110     323/18     6   16   52.34)
(smt.stats    3    414   8868   2507  2329/2107/111     427/30     7   17   52.43)
(smt.stats    4    525  11718   3865  2522/2334/116     553/41     9   21   52.54)
(smt.stats    5    647  18631   6580  2570/2360/117     670/64    10   24   52.74)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  24614   8957  2649/2448/117     771/64    11   24   52.74)
ramon: poll                 wall=2.004s usage=1.976s mem=54956KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   25.1504    160000       784          5            1       17)
(smt.stats    7    859  28421  11734  2902/2678/118     890/85    12   24   52.84)
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 12616466432 := 12616466432&12616466432
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 12616466432 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 12616466432 := 12616466432&12616466432
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 12616466432 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 12616466432 := 12616466432&12616466432
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 12616466432 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 1 := 12616466432&1
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 1 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 1 := 12616466432&1
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 1 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 1 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 9007199254740991 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 33554433 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 33554433 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 33554433 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 33554433 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1 := 12616466432&1
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 268435455 := 12616466432&268435455
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 268435454 := 12616466432&268435454
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&2
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2 := 12616466432&2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&4
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4 := 12616466432&4
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&8
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8 := 12616466432&8
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&16
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 16 := 12616466432&16
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&32
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 32 := 12616466432&32
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&64
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 64 := 12616466432&64
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&128
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 128 := 12616466432&128
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&256
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 256 := 12616466432&256
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&512
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 512 := 12616466432&512
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1024
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1024 := 12616466432&1024
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&2048
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2048 := 12616466432&2048
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&4096
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4096 := 12616466432&4096
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&8192
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8192 := 12616466432&8192
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&16384
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 16384 := 12616466432&16384
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&32768
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 32768 := 12616466432&32768
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&65536
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 65536 := 12616466432&65536
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&131072
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 131072 := 12616466432&131072
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&262144
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 262144 := 12616466432&262144
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&524288
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 524288 := 12616466432&524288
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1048576
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1048576 := 12616466432&1048576
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&2097152
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2097152 := 12616466432&2097152
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&4194304
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4194304 := 12616466432&4194304
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&8388608
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8388608 := 12616466432&8388608
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&16777216
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 16777216 := 12616466432&16777216
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&33554432
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 33554432 := 12616466432&33554432
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&67108864
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 67108864 := 12616466432&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&134217728
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 134217728 := 12616466432&134217728
(smt.stats    8    981  29858  13948  3215/2832/246    1051/114    13   50   54.23)
(smt.stats    9   1115  36156  20337  3244/3002/247    1185/148    15   53   54.23)
(smt.stats   10   1216  43875  27209  3260/3014/247    1287/148    15   53   54.35)
(smt.stats   11   1327  51247  33794  3260/3014/247    1399/148    15   53   54.35)
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 4503599627370496&9007199254740991
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 4503599627370496&4503599627370495
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 4503599627370495 := 0 >>l 11
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  58550  41783  3270/3016/247    1521/148    15   53   54.45)
(smt.stats   13   1583  62178  46540  3285/3038/258    1677/149    16   55   54.69)
(smt.stats   14   1730  68392  54321  3289/3042/258    1820/166    17   57   54.69)
(smt.stats   15   1831  72537  59279  3289/3042/258    1922/166    17   57   54.69)
(sat.ddfw       1      1   21.9623    220001      1078          6            1       23)
(smt.stats   16   1942  77417  67418  3293/3046/267    2037/167    18   59   54.69)
ramon: poll                 wall=3.000s usage=2.974s mem=57004KiB load=1.00 rootload=1.00
(smt.stats   17   2064  80255  74000  3316/3049/268    2160/186    19   76   54.94)
(sat.ddfw       1      1   19.4661    290001      1421          7            1       30)
(smt.stats   18   2198  81800  78653  3630/3246/270    2301/205    20   78   54.74)
ramon: poll                 wall=4.000s usage=3.971s mem=57252KiB load=1.00 rootload=1.00
(smt.stats   19   2345  84201  86799  3749/3447/270    2473/212    20   78   54.74)
(smt.stats   20   2506  87288  96216  3831/3537/272    2626/234    22   82   54.74)
(sat.ddfw       1      1   17.4596    370001      1813          8            1       38)
(smt.stats   21   2607  88695 103645  3977/3597/272    2733/239    22   82   54.84)
ramon: poll                 wall=5.004s usage=4.917s mem=57528KiB load=0.94 rootload=0.94
(smt.stats   22   2718  90655 109653  4101/3792/272    2843/240    22   82   54.84)
(smt.stats   23   2840  94273 118718  4144/3878/272    2981/240    22   82   55.06)
(smt.stats   24   2974  96956 126331  4178/3914/272    3189/241    22   82   55.06)
(smt.stats   25   3121  99208 135189  4197/3939/272    3351/241    22   82   55.36)
(smt.stats   26   3282 102595 152302  4217/3956/272    3514/241    22   82   55.36)
(sat.ddfw       1      1   15.5172    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=5.874s mem=57556KiB load=0.96 rootload=0.96
(smt.stats   27   3459 104861 164151  4354/3976/272    3710/248    22   82   55.46)
(smt.stats   28   3560 107073 169527  4378/4130/275    3808/453    23   84   55.46)
(smt.stats   29   3671 110182 178714  4391/4130/275    3923/453    23   84   55.55)
(smt.stats   30   3793 114294 192068  4404/4149/275    4045/454    23   84   55.55)
(smt.stats   31   3927 116314 199364  4444/4167/275    4176/455    23   84   55.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074 118260 206545  4483/4214/275    4322/455    23   84   55.65)
(smt.stats   33   4235 121675 222299  4505/4240/275    4487/455    23   84   56.12)
(smt.stats   34   4412 127578 238560  4535/4263/275    4665/458    23   84   56.12)
ramon: poll                 wall=7.000s usage=6.819s mem=58624KiB load=0.95 rootload=0.94
(sat.ddfw       1      1   14.1283    560001      2745         10            1       57)
(smt.stats   35   4606 131613 253503  4614/4292/275    4877/464    23   84   56.36)
(smt.stats   36   4707 132883 259586  4656/4381/275    4979/465    23   84   56.36)
(smt.stats   37   4818 135363 271728  4668/4414/275    5090/465    23   84   56.36)
(smt.stats   38   4940 137619 284263  4670/4422/275    5213/465    23   84   56.46)
(smt.delete-inactive-clauses  :num-deleted-clauses 25)
(smt.stats   39   5074 139568 294369  4684/4424/275    5323/465    23   84   56.75)
(smt.stats   40   5221 142818 322862  4708/4436/275    5475/465    23   84   56.85)
ramon: poll                 wall=8.004s usage=7.818s mem=59136KiB load=0.99 rootload=1.00
(smt.stats   41   5382 147405 348540  4713/4465/275    5642/465    23   84   56.85)
(smt.stats   42   5559 150428 366724  4723/4475/276    5823/514    24   84   56.85)
(smt.stats   43   5753 153564 386354  4736/4476/276    6023/514    24   84   56.95)
(sat.ddfw       1      1   13.0409    670001      3284         11            1       68)
(smt.stats   44   5966 158977 405260  4750/4496/276    6278/515    24   84   57.04)
(smt.stats   45   6067 160048 410418  4772/4524/276    6359/515    24   84   57.04)
(smt.stats   46   6178 165422 420612  4781/4533/276    6463/515    24   84   57.04)
(smt.stats   47   6300 169200 428988  4795/4547/276    6571/515    24   84   57.04)
(smt.stats   48   6434 173175 436443  4809/4561/276    6691/515    24   84   57.14)
(smt.stats   49   6581 174966 444244  4828/4580/276    6829/515    24   84   57.14)
ramon: poll                 wall=9.000s usage=8.814s mem=59392KiB load=1.00 rootload=1.00
(smt.stats   50   6742 177726 454471  4840/4592/276    6978/515    24   84   57.94)
(smt.stats   51   6919 182354 468458  4859/4596/276    7162/515    24   84   57.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 187298 484539  4916/4620/276    7387/518    24   84   58.04)
(smt.stats   53   7326 197902 515691  4931/4677/276    7600/518    24   84   58.13)
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&8799317396481
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 9015998572137473 := 9015998572137472 >>l 12
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 9007199254740992 := 5497558140928 >>l 12
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 9007199254740992 := 274877908992 >>l 12
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&8804422655749
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 9016003677396741 := 9016003677395968 >>l 12
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 67108862 := 6755399441055744&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 67108860 := 6755399441055744&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 67108856 := 6755399441055744&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 67108848 := 6755399441055744&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&75497472
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 268435456 := 301989888 >>l 2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&67108864
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 268435456 := 268435457 >>l 2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&268435457
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 268435457 := 1073741829 >>l 2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&268435457
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 268435456 := 6755399441055744&268435457
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&536870912
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 536870912 := 6755399441055744&536870912
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&1073741824
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1073741824 := 6755399441055744&1073741824
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&2147483648
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2147483648 := 6755399441055744&2147483648
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&4294967296
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4294967296 := 6755399441055744&4294967296
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&8589934592
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8589934592 := 6755399441055744&8589934592
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&17179869184
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 17179869184 := 6755399441055744&17179869184
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&34359738368
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 34359738368 := 6755399441055744&34359738368
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&68719476736
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 68719476736 := 6755399441055744&68719476736
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&68719476736
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 68719476736 := 6755399441055744&68719476736
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&137438953472
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 137438953472 := 6755399441055744&137438953472
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&274877906944
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 274877906944 := 6755399441055744&274877906944
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&549755813888
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 549755813888 := 6755399441055744&549755813888
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&1099511627776
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1099511627776 := 6755399441055744&1099511627776
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&2199023255552
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2199023255552 := 6755399441055744&2199023255552
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&4398046511104
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4398046511104 := 6755399441055744&4398046511104
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&8796093022208
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8796093022208 := 6755399441055744&8796093022208
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&17592186044416
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 17592186044416 := 6755399441055744&17592186044416
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&35184372088832
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 35184372088832 := 6755399441055744&35184372088832
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&70368744177664
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 70368744177664 := 6755399441055744&70368744177664
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&70368744177664
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 70368744177664 := 6755399441055744&70368744177664
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&281474976710656
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 281474976710656 := 6755399441055744&281474976710656
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&562949953421312
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 562949953421312 := 6755399441055744&562949953421312
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&1125899906842624
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1125899906842624 := 6755399441055744&1125899906842624
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&562949953421312
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 2251799813685248 := 2251799813685249 >>l 2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&70368744177664
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 70368744177664 := 6755399441055744&70368744177664
(smt.stats   54   7560 205261 534847  5062/4798/358    7845/623    25  101   58.54)
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&281474976710656
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 281474976710656 := 6755399441055744&281474976710656
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&562949953421312
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 562949953421312 := 6755399441055744&562949953421312
(sat.ddfw       1      1    12.109    790001      3872         12            1       80)
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&562949953421312
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 562949953421312 := 6755399441055744&562949953421312
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&281474976710656
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 281474976710656 := 6755399441055744&281474976710656
ramon: poll                 wall=10.000s usage=9.810s mem=61180KiB load=1.00 rootload=0.99
(smt.stats   55   7661 207313 539444  5129/4845/389    7961/624    25  101   58.63)
(smt.stats   56   7772 210233 547825  5166/4905/390    8079/624    25  101   59.08)
(smt.stats   57   7894 211987 552422  5326/4912/390    8230/661    26  109   59.17)
ramon: poll                 wall=11.000s usage=10.813s mem=61436KiB load=1.00 rootload=1.01
(smt.stats   58   8028 214994 560028  5466/5204/395    8401/663    26  109   59.17)
(sat.ddfw       1      1   11.4085    920001      4509         13            1       93)
(smt.stats   59   8175 219099 564219  5556/5229/395    8573/665    26  109   59.27)
ramon: poll                 wall=12.000s usage=11.858s mem=61560KiB load=1.04 rootload=1.04
(smt.stats   60   8336 220438 567458  5938/5375/395    8750/746    27  121   59.36)
(smt.stats   61   8513 222027 571009  6245/5987/396    9022/748    27  121   59.46)
ramon: poll                 wall=13.000s usage=12.856s mem=61816KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   10.6724   1060001      5196         14            1      108)
(smt.stats   62   8707 233709 605468  6249/5991/396    9218/748    27  121   59.46)
(smt.stats   63   8920 242245 627650  6354/6092/397    9552/921    29  122   59.56)
(smt.stats   64   9154 248527 657786  6359/6101/397    9817/921    29  122   59.65)
(smt.stats   65   9411 258203 681382  6363/6101/397   10075/921    29  122   59.75)
ramon: poll                 wall=14.000s usage=13.854s mem=62328KiB load=1.00 rootload=1.00
(smt.stats   66   9512 259747 689738  6363/6105/397   10250/921    29  122   59.75)
(smt.stats   67   9623 263461 706681  6368/6110/397   10360/921    29  122   59.84)
(smt.stats   68   9745 266288 723327  6369/6111/397   10481/921    29  122   59.94)
(smt.stats   69   9879 269956 732947  6423/6113/397   10619/923    29  122   60.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 6)
(smt.stats   70  10026 273054 745888  6486/6197/397   10785/923    29  122   60.04)
(smt.stats   71  10187 277448 756698  6573/6229/397   10961/924    29  122   60.13)
ramon: poll                 wall=15.000s usage=14.871s mem=62820KiB load=1.02 rootload=1.02
(sat.ddfw       1      1     9.996   1210001      5931         15            1      123)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 283371 769883  6641/6367/397   11147/924    29  122   60.13)
(smt.stats   73  10558 287744 794451  6772/6401/397   11370/931    29  122   60.23)
(smt.stats   74  10771 292494 828855  6844/6553/397   11585/933    29  122   60.32)
ramon: poll                 wall=16.000s usage=15.870s mem=63164KiB load=1.00 rootload=0.99
(smt.stats   75  11005 296180 847280  6913/6613/397   11824/938    29  122   60.32)
(smt.stats   76  11262 303397 879657  7003/6698/397   12057/941    29  122   60.42)
(smt.stats   77  11544 307874 899969  7034/6768/397   12340/941    29  122   60.55)
(smt.stats   78  11645 309904 907282  7052/6776/397   12441/941    29  122   60.65)
(smt.stats   79  11756 312361 915911  7081/6811/397   12543/941    29  122   61.25)
(smt.stats   80  11878 314188 927426  7085/6825/397   12677/941    29  122   61.25)
ramon: poll                 wall=17.000s usage=16.867s mem=63560KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.42285   1370001      6715         16            1      139)
(smt.stats   81  12012 316841 946492  7089/6831/397   12820/941    29  122   61.25)
(smt.stats   82  12159 320828 968316  7107/6831/397   12967/941    29  122   61.25)
(smt.stats   83  12320 324135 992278  7135/6865/398   13133/1151    30  122   61.35)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12497 327587 1011856  7285/6879/398   13317/1155    30  122   61.35)
ramon: poll                 wall=18.000s usage=17.865s mem=63920KiB load=1.00 rootload=1.00
(smt.stats   85  12691 333732 1034732  7328/7068/398   13580/1155    30  122   61.54)
(smt.stats   86  12904 337709 1047760  7441/7077/398   13802/1160    30  122   61.54)
(smt.stats   87  13138 341645 1062944  7470/7193/398   14048/1160    30  122   61.64)
(smt.stats   88  13395 348407 1089239  7508/7216/398   14301/1161    30  122   63.20)
ramon: poll                 wall=19.000s usage=18.863s mem=65892KiB load=1.00 rootload=1.00
(smt.stats   89  13677 354775 1125178  7519/7261/398   14584/1161    30  122   63.29)
(sat.ddfw       1      1   8.91266   1540001      7549         17            1      156)
(smt.stats   90  13987 362211 1150208  7531/7265/398   14900/1161    30  122   63.39)
(smt.stats   91  14088 365562 1183615  7534/7273/398   15002/1161    30  122   63.39)
(smt.stats   92  14199 373341 1254953  7535/7277/398   15115/1161    30  122   63.39)
(smt.stats   93  14321 378718 1300283  7539/7280/398   15241/1161    30  122   63.49)
ramon: poll                 wall=20.000s usage=19.864s mem=66272KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:18:16 2024
ramon: root.execname        z3
ramon: root.utime           19.850s
ramon: root.stime           0.020s
ramon: group.total          19.874s
ramon: group.utime          19.854s
ramon: group.stime          0.020s
ramon: group.mempeak        67220KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              0.99
