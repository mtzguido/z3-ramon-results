ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:25:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42876 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/3piXujyKfSe1.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2781061
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5031    320  1284/1088/97      94/13     4   19   19.05)
(smt.stats    1    202   6968    680  1795/1565/97     204/17     4   19   19.25)
(smt.stats    2    313   9158   2326  2261/2067/100     318/27     6   23   19.34)
(smt.stats    3    414  10797   4133  2361/2171/106     442/57     8   25   19.44)
(smt.stats    4    525  11455   5434  2810/2569/110     552/76    10   41   19.54)
(smt.stats    5    647  14799   9219  2872/2627/114     707/88    11   44   19.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17891  12969  2910/2645/115     810/106    12   48   19.73)
(smt.stats    7    859  21331  17742  2954/2685/115     922/106    12   48   19.93)
(smt.stats    8    981  21816  19254  2989/2722/115    1056/106    12   48   19.93)
(smt.stats    9   1115  25721  22509  3024/2761/117    1195/122    13   50   20.07)
(smt.stats   10   1216  28681  26350  3026/2782/117    1296/122    13   50   20.17)
(smt.stats   11   1327  30379  29181  3039/2783/117    1416/126    13   50   20.17)
ramon: poll                 wall=1.000s usage=0.994s mem=21276KiB load=0.99 rootload=0.99
(smt.stats   12   1449  31913  32623  3093/2849/125    1533/153    15   61   20.17)
(smt.stats   13   1583  35671  35703  3101/2856/127    1667/157    16   66   20.17)
(smt.stats   14   1730  39763  41375  3121/2879/128    1815/162    17   67   20.46)
(smt.stats   15   1831  43643  46691  3123/2881/128    1914/162    17   67   20.46)
(smt.stats   16   1942  45401  52539  3128/2885/128    2024/162    17   67   20.46)
(smt.stats   17   2064  47865  54703  3147/2893/128    2141/162    17   67   20.46)
(smt.stats   18   2198  50420  57343  3206/2915/128    2282/163    17   67   20.46)
(smt.stats   19   2345  52148  59699  3338/2995/128    2438/164    17   67   20.56)
(smt.stats   20   2506  54080  61913  3448/3130/128    2625/166    17   67   20.56)
(smt.stats   21   2607  54969  63102  3560/3236/128    2732/168    17   67   20.56)
(smt.stats   22   2718  56020  66417  3684/3389/128    2852/168    17   67   20.66)
(smt.stats   23   2840  57406  70529  3787/3488/128    2995/169    17   67   20.66)
(smt.stats   24   2974  58904  73973  3800/3553/128    3152/169    17   67   20.66)
(smt.stats   25   3121  60815  77122  3824/3567/128    3315/170    17   67   20.75)
ramon: poll                 wall=2.000s usage=1.993s mem=21888KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   26   3282  62084  82252  3857/3606/133    3473/231    18   71   20.75)
(smt.stats   27   3459  64318  90110  3931/3655/134    3638/240    19   80   20.85)
(smt.stats   28   3560  65363  92087  3935/3693/134    3737/253    20   82   20.85)
(smt.stats   29   3671  67006  97335  3945/3694/134    3854/254    20   82   21.04)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842575 := 1125899906842726&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842574 := 1125899906842726&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842572 := 1125899906842726&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842726&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842544 := 1125899906842726&1125899906842601
(smt.stats   30   3793  68116 101094  3993/3706/134    3983/255    20   82   21.14)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842726&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842728&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842726&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842735&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842735&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842734&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842752&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842726&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842728&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842760&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842752&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842744&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842728&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842752&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842760&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842792&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842807&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842752&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842760&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842799&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842792&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842920&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842783&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842782&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842798&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906842926&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906843048&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906843176&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906843391&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906843390&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906843880&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906843838&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906844584&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906844584&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906844606&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906849214&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906845118&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906845118&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906846120&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906846632&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906845630&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906849193&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842532 := 1125899906849200&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842532 := 1125899906849190&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 1125899906845608&1125899906842601
(smt.stats   31   3927  69442 105238  4179/3890/242    4241/278    21   86   21.47)
(smt.stats   32   4074  71267 110026  4223/3923/252    4387/280    21   86   21.57)
(smt.stats   33   4235  74475 120794  4317/4002/253    4562/310    22  107   21.57)
(smt.stats   34   4412  77972 130275  4405/4085/253    4782/318    23  107   21.66)
ramon: poll                 wall=3.000s usage=2.993s mem=22996KiB load=1.00 rootload=1.00
(smt.stats   35   4606  82101 139573  4481/4236/259    5041/330    24  111   21.76)
(smt.stats   36   4707  83539 143011  4528/4247/259    5139/392    25  120   21.85)
(smt.stats   37   4818  85429 146942  4688/4350/259    5344/394    25  120   21.85)
ramon: poll                 wall=4.000s usage=3.992s mem=23316KiB load=1.00 rootload=1.00
(smt.stats   38   4940  85884 148275  4835/4515/259    5534/397    25  120   22.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  88248 158043  5077/4822/259    5901/400    25  120   22.17)
(smt.stats   40   5221  92677 179178  5126/4844/259    6148/401    25  120   22.17)
(smt.stats   41   5382  95072 194370  5251/4935/260    6369/598    26  120   22.27)
ramon: poll                 wall=5.000s usage=4.992s mem=23688KiB load=1.00 rootload=1.00
(smt.stats   42   5559  97346 203063  5423/5036/260    6805/599    26  120   22.36)
(smt.stats   43   5753  99874 209907  5763/5228/260    7174/606    26  120   22.46)
ramon: poll                 wall=6.000s usage=5.992s mem=23924KiB load=1.00 rootload=1.00
(smt.stats   44   5966 102521 218125  6158/5916/262    7606/762    27  123   22.65)
(smt.stats   45   6067 107046 224447  6164/5922/262    7754/762    27  123   22.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   46   6178 109998 238335  6175/5933/265    8143/898    28  128   22.65)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842561 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842560 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842568 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842568 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842568 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842600 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842600 := 2251799813685224&1125899906842601
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4613937818241073128 := 1835 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842600 := 2251799813685224&1125899906842601
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4613937818241073128 := 1835 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842600 := 2251799813685224&1125899906842601
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4613937818241073128 := 1835 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842600 := 2251799813685224&1125899906842601
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4613937818241073128 := 1835 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842552 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842552 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842552 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842538 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842538 := 2251799813685180&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842538 := 2251799813685182&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 2251799813685180&1125899906842601
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4618441417868443580 := 1835 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 2251799813685180&1125899906842601
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4613937818241073084 := 1835 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 1125899906842536 := 2251799813685180&1125899906842601
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4613937818241073084 := 1835 << 50
(smt.stats   47   6300 112217 245819  6312/6046/296    8516/1132    29  148   22.85)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 90112 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 81920 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 32768 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 65536 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 28672 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 65536 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 28672 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 65536 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 65536 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 24576 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 24576 := 1125899906842624&1125899906842601
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (= #769 63) 0 (if #771 1 #906))) 24576 := 1125899906842624&1125899906842601
(smt.stats   48   6434 113936 255216  6429/6181/329    8863/1332    30  169   22.94)
(smt.stats   49   6581 116911 265407  6511/6190/329    9075/1336    30  169   22.94)
(smt.stats   50   6742 120461 281968  6761/6286/329    9273/1341    30  169   23.08)
ramon: poll                 wall=7.000s usage=6.991s mem=24392KiB load=1.00 rootload=1.00
(smt.stats   51   6919 124103 299937  7015/6575/329    9483/1347    30  169   23.17)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 128862 314882  7264/6897/330   10274/1497    31  176   23.36)
ramon: poll                 wall=8.000s usage=7.991s mem=24740KiB load=1.00 rootload=1.00
(smt.stats   53   7326 133348 328477  7542/7053/330   10879/1503    31  176   23.46)
(smt.stats   54   7560 138613 348607  7847/7346/330   11522/1512    31  176   23.55)
ramon: poll                 wall=9.000s usage=8.990s mem=24988KiB load=1.00 rootload=1.00
(smt.stats   55   7661 140248 356943  7966/7627/330   11747/1518    31  176   23.65)
(smt.stats   56   7772 142246 365233  8182/7775/330   11992/1522    31  176   23.65)
(smt.stats   57   7894 144769 377104  8335/7962/330   12359/1523    31  176   23.74)
(smt.stats   58   8028 147115 385242  8516/8101/330   12597/1532    31  176   23.84)
ramon: poll                 wall=10.000s usage=9.990s mem=25320KiB load=1.00 rootload=0.99
(smt.stats   59   8175 151503 405025  8759/8305/330   12890/1544    31  176   24.13)
(smt.stats   60   8336 154091 416571  8912/8543/330   13087/1547    31  176   24.13)
(smt.stats   61   8513 157187 432506  9028/8703/330   13415/1551    31  176   24.22)
ramon: poll                 wall=11.000s usage=10.989s mem=25660KiB load=1.00 rootload=1.00
(smt.stats   62   8707 161908 460668  9194/8789/330   13894/1559    31  176   24.32)
(smt.stats   63   8920 165064 482647  9623/9016/330   14437/1562    31  176   24.41)
ramon: poll                 wall=12.000s usage=11.989s mem=25920KiB load=1.00 rootload=1.00
(smt.stats   64   9154 170034 490743  9804/9441/330   15300/1567    31  176   24.60)
ramon: poll                 wall=13.000s usage=12.989s mem=26364KiB load=1.00 rootload=1.00
(smt.stats   65   9411 176048 515224 10175/9664/331   16222/2882    32  179   24.85)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   66   9512 177834 525219 10298/10019/331   16635/2886    32  179   24.85)
(smt.stats   67   9623 180339 535988 10441/10065/331   16880/2890    32  179   24.95)
(smt.stats   68   9745 182432 549305 10626/10205/331   17285/2891    32  179   25.04)
ramon: poll                 wall=14.000s usage=13.988s mem=26528KiB load=1.00 rootload=1.00
(smt.stats   69   9879 186213 572772 10752/10381/331   17695/2897    32  179   25.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10026 188777 587805 10827/10553/331   18219/2897    32  179   25.14)
(smt.stats   71  10187 192986 611820 10952/10588/331   18587/2905    32  179   25.24)
ramon: poll                 wall=15.000s usage=14.988s mem=26768KiB load=1.00 rootload=1.00
(smt.stats   72  10364 196972 643832 11136/10746/331   18869/2908    32  179   25.33)
(smt.stats   73  10558 201484 667330 11278/10979/332   19618/3953    33  190   25.43)
ramon: poll                 wall=16.000s usage=15.988s mem=27152KiB load=1.00 rootload=1.00
(smt.stats   74  10771 205201 682273 11678/11066/332   19988/3955    33  190   25.52)
(smt.stats   75  11005 209862 714161 11895/11499/332   20775/3960    33  190   25.62)
(smt.stats   76  11262 215060 732007 12206/11750/333   21308/4257    34  190   25.71)
ramon: poll                 wall=17.000s usage=16.987s mem=27248KiB load=1.00 rootload=1.00
(smt.stats   77  11544 221204 770104 12558/12212/335   22224/4265    34  190   25.90)
ramon: poll                 wall=18.000s usage=17.987s mem=27516KiB load=1.00 rootload=1.00
(smt.stats   78  11645 223919 793095 12686/12320/335   22647/4415    35  196   26.00)
(smt.stats   79  11756 227178 839293 12798/12475/335   22951/4416    35  196   26.00)
(smt.stats   80  11878 230147 869042 12903/12556/335   23262/4419    35  196   26.09)
(smt.stats   81  12012 232933 896907 13025/12679/335   23610/4420    35  196   26.19)
ramon: poll                 wall=19.000s usage=18.986s mem=27724KiB load=1.00 rootload=1.00
(smt.stats   82  12159 236022 933310 13148/12793/335   24068/4421    35  196   26.19)
(smt.stats   83  12320 239159 979813 13281/12904/335   24480/4423    35  196   26.28)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   84  12497 242443 1008110 13467/13215/337   25117/4905    36  211   26.38)
ramon: poll                 wall=20.000s usage=19.984s mem=27996KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:26:02 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          19.995s
ramon: group.utime          19.991s
ramon: group.stime          0.004s
ramon: group.mempeak        30060KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
