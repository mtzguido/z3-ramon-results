ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:26:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28298 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Q3jlMOqNZupu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             793443
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   105.263     10000        49          0            1        2)
(smt.stats    0    101   3719    857  1192/1041/109      74/25     9   22   51.98)
(sat.ddfw       1      1   52.6368     20001        98          1            1        3)
(smt.stats    1    202   4725   1873  2196/1962/112     178/41    10   25   52.27)
(smt.stats    2    313   5104   2251  2327/2073/112     297/53    11   26   52.46)
(sat.ddfw       1      1   52.6316     40001       196          2            1        5)
(smt.stats    3    414   5372   2670  2562/2285/112     405/63    11   26   52.46)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 2199023255554 := 2199023255551 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 2199023255553 := 2199023255549 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 2199023255546&0
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 2199023255548 := 2199023255549 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 2199023255547&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 4398046511099 := 2199023255550 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 2199023255548&0
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 2199023255550 << 1
(smt.stats    4    525   6191   4654  2680/2455/130     523/118    15   51   52.55)
(sat.ddfw       1      1   45.4545     70001       343          3            1        8)
(smt.stats    5    647   7588   6605  2812/2559/134     680/121    17   59   52.74)
ramon: poll                 wall=1.003s usage=0.992s mem=54800KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   38.7973    110001       539          4            1       12)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748   8687   7813  2935/2617/134     797/121    17   59   52.74)
(smt.stats    7    859  10401   9397  3103/2779/135     960/137    18   61   52.84)
(smt.stats    8    981  12541  11362  3199/2970/137    1105/191    19   62   52.94)
(smt.stats    9   1115  15739  13994  3267/2975/141    1258/197    20   66   52.94)
(sat.ddfw       1      1    33.244    160000       784          5            1       17)
(smt.stats   10   1216  18319  16393  3302/3046/141    1371/233    21   75   53.03)
(smt.stats   11   1327  22040  20430  3357/3127/146    1493/265    22   88   53.03)
ramon: poll                 wall=2.000s usage=1.986s mem=55144KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  24698  24808  3392/3135/146    1619/266    22   88   53.03)
(sat.ddfw       1      1    29.155    220001      1078          6            1       23)
(smt.stats   13   1583  25827  27648  3433/3181/146    1781/266    22   88   53.03)
(smt.stats   14   1730  27211  34689  3473/3210/146    1941/268    22   88   53.13)
(smt.stats   15   1831  28536  40556  3492/3257/147    2044/300    23   90   53.13)
(smt.stats   16   1942  33454  44037  3497/3264/147    2158/300    23   90   53.23)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 2199023251881&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 4398046507433 := 1099511625940 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 2199023251881&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 4398046507433 := 1099511625940 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 2199023251881&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 4398046507433 := 1099511625940 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 2199023255551&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 279275953455103 := 1099511626062 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 832&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 832&1
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 2 := 208 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 832&1
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 207 := 208 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 832&1
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #581 40) 0 (if #583 1 #694))) 1 := 832&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 832&1
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #581 40) 0 (if #583 1 #694))) 1 := 832&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 832&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 832&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 832&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 2199023248208&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1 := 2199023248208&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 4&1
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #581 40) 0 (if #583 1 #694))) 1 := 4&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 4&1
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #581 40) 0 (if #583 1 #694))) 1 := 4&1
(smt.stats   17   2064  36040  45667  3544/3276/150    2275/311    24   93   53.43)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 4&1
band: (band[41] (shl[41] (bv2int %0) (mod #104 41)) (if (= #581 40) 0 (if #583 1 #694))) 1 := 4&1
(smt.stats   18   2198  38912  48458  3579/3344/188    2404/326    25  104   53.43)
(smt.stats   19   2345  46272  53953  3592/3355/188    2555/326    25  104   53.54)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 4094 := 4094&4095
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 2199023259646 := 1649267441665 << 13
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 4094 := 4094&4095
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 2199023259646 := 1649267441665 << 13
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 4094 := 4094&4095
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 2199023259646 := 1649267441665 << 13
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 4094 := 4094&4095
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 2199023259646 := 549755813889 << 13
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 4094 := 4094&4095
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 2199023259646 := 549755813889 << 13
(smt.stats   20   2506  51232  58406  3635/3395/194    2714/337    26  111   53.73)
(smt.stats   21   2607  56447  62113  3646/3401/194    2815/337    26  111   53.73)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&511
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 0 << 10
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&511
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 4 := 0 << 10
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&511
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 0 << 10
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&511
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 4 := 0 << 10
(smt.stats   22   2718  60615  65593  3675/3412/194    3044/346    26  111   53.93)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&511
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 551903297537 << 10
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&511
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 2147483649 << 10
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&274877906943
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 1168499539968 << 39
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&274877906943
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 274877906944 := 1168499539968 << 39
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&274877906943
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 1168499539968 << 39
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&274877906943
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 274877906944 := 1168499539968 << 39
(sat.ddfw       1      1   24.8933    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.933s mem=56248KiB load=0.95 rootload=0.95
(smt.stats   23   2840  62629  68850  3768/3478/208    3160/384    27  112   54.27)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&274877906943
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 1308287303676 << 39
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 0&274877906943
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 446676598784 := 1308253749248 << 39
(smt.stats   24   2974  64846  72491  3959/3587/218    3293/387    27  112   54.27)
(smt.stats   25   3121  69682  78178  3991/3725/218    3435/390    28  124   54.36)
(sat.ddfw       1      1   22.1791    370001      1813          8            1       38)
(smt.stats   26   3282  73074  83409  4009/3746/218    3593/390    28  124   54.36)
(smt.stats   27   3459  77624  89981  4028/3775/219    3778/399    29  126   54.46)
(smt.stats   28   3560  80651  94240  4031/3778/222    3883/399    29  126   54.55)
ramon: poll                 wall=4.003s usage=3.873s mem=56812KiB load=0.94 rootload=0.94
(smt.stats   29   3671  82076  99465  4043/3783/222    3996/399    30  129   54.65)
(smt.stats   30   3793  86222 106188  4062/3802/224    4134/400    30  129   54.65)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 2 := 2199023255550&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 8 := 1099511627778&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 2 := 1099511627778&67108863
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 13511898393739266 := 549755813888 << 27
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 2 := 1099511627778&67108863
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 13511898393739266 := 549755813888 << 27
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 2 := 1099511627778&67108863
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 13511898393739266 := 549755813888 << 27
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 2 := 1099511758842&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 2 := 1099511676930&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 2 := 1099511676930&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 2 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 128 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 256 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 512 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 1024 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 2048 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 4096 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 8192 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 8192 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32768 := 1099511693312&67108863
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 65536 := 1099511693312&67108863
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 13509699370549248 := 549755838464 << 27
(smt.stats   31   3927  90038 112474  4147/3894/280    4265/408    32  147   54.85)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16384 := 549755813256&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16384 := 549755813256&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16384 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16384 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16384 := 549755813256&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16384 := 549755813280&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 24576 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16400 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16384 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 18448 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 18576 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 18576 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 18576 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 18832 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 17398 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 17396 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 17392 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 16784 := 549755813264&549755813887
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  92586 118126  4233/3933/315    4431/439    33  166   55.25)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 18422 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 17808 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 17808 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 17808 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 17808 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 26000 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28560 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28144 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28048 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28560 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28560 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28048 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28048 := 549755813264&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28048 := 549755813324&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28048 := 549755813324&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28084 := 549755813324&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28048 := 549755813316&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28052 := 549755813316&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28052 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28048 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28052 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28052 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28048 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28052 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28118 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28112 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28116 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 28116 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32208 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32208 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32208 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32208 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32208 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32212 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 32212 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 48630 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 48628 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 48592 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 48624 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 48628 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 48592 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 48598 := 549755813332&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 48596 := 549755813332&549755813887
(sat.ddfw       1      1   19.8588    460001      2254          9            1       47)
(smt.stats   33   4235  95816 128601  4455/3990/371    4785/470    33  166   55.55)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64948 := 549755813268&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64916 := 549755813268&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64916 := 549755813268&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64916 := 549755813268&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64916 := 549755813268&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64916 := 549755813268&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64916 := 549755813268&549755813887
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 64916 := 549755813268&549755813887
(smt.stats   34   4412 101232 147620  4613/4359/457    5182/572    35  197   55.74)
ramon: poll                 wall=5.000s usage=4.845s mem=57908KiB load=0.98 rootload=0.96
(smt.stats   35   4606 105927 163151  4658/4360/459    5482/577    35  197   55.93)
(smt.stats   36   4707 108467 175325  4734/4455/460    5710/786    36  201   56.03)
(sat.ddfw       1      1   18.1192    560001      2745         10            1       57)
ramon: poll                 wall=6.003s usage=5.860s mem=58268KiB load=1.01 rootload=1.02
(smt.stats   37   4818 112332 187080  4852/4489/460    5878/883    37  204   56.22)
(sat.ddfw       1      1   16.8299    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.968s mem=58532KiB load=1.11 rootload=1.10
(sat.ddfw       1      1   15.7109    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.966s mem=58652KiB load=1.00 rootload=1.00
(smt.stats   38   4940 113738 191766  4951/4607/460    6015/885    37  204   56.51)
(smt.delete-inactive-clauses  :num-deleted-clauses 16)
(smt.stats   39   5074 117522 207017  5218/4891/460    6317/886    37  204   56.51)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   40   5221 121911 221912  5249/4985/461    6657/1067    38  209   56.51)
(sat.ddfw       1      1   14.7125    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.965s mem=58800KiB load=1.00 rootload=1.00
(smt.stats   41   5382 128729 233856  5459/5136/462    7097/1176    39  215   56.60)
(smt.stats   42   5559 137988 257602  5522/5263/469    7384/1359    41  241   56.60)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 24 := 2199023255544&31
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 13510798882111480 := 2199023255517 << 6
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 24 := 2199023255544&31
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 13510798882111480 := 2199023255517 << 6
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 24 := 2199023255544&31
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 18014398509481976 := 2199023255517 << 6
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 24 := 2199023255544&31
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 18014398509481976 := 2199023255517 << 6
ramon: poll                 wall=10.000s usage=9.863s mem=58956KiB load=0.90 rootload=0.90
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 24 := 2199023255544&63
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 56 := 2199023255544&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 6597069766648 := 2199023255517 << 7
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 60 := 2199023255548&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 6597069766652 := 2199023255518 << 7
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 60 := 2199023255548&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 6597069766652 := 2199023255518 << 7
(sat.ddfw       1      1   13.5738   1060001      5196         14            1      108)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 1915278319488&63
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 824499503106 := 2128087021503 << 7
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 1915278319488&63
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1474639124352 := 2128087021503 << 7
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (or #714 #715) 0 (if #716 1 #859))) 0 := 1915278319488&63
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1474639124352 := 2128087021503 << 7
(smt.stats   43   5753 147110 277270  5671/5393/485    7670/1386    42  250   57.14)
ramon: poll                 wall=11.000s usage=10.779s mem=59540KiB load=0.92 rootload=0.92
(smt.stats   44   5966 152163 294632  5801/5541/492    8131/1461    43  266   57.24)
(smt.stats   45   6067 156853 304852  5891/5548/494    8405/1466    43  266   57.62)
(sat.ddfw       1      1   12.7108   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=11.765s mem=60100KiB load=0.99 rootload=0.98
(smt.stats   46   6178 161220 317937  6093/5639/494    8534/1719    44  277   57.62)
(smt.stats   47   6300 164671 327324  6107/5836/494    8728/1719    44  277   57.62)
ramon: poll                 wall=13.000s usage=12.767s mem=60128KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.0346   1370001      6715         16            1      139)
(smt.stats   48   6434 167655 342429  6357/6097/495    9028/1852    45  281   57.81)
(smt.stats   49   6581 174503 363176  6375/6112/498    9416/1852    45  281   57.81)
ramon: poll                 wall=14.000s usage=13.883s mem=60012KiB load=1.12 rootload=1.12
(sat.ddfw       1      1   11.7623   1540001      7549         17            1      156)
(smt.stats   50   6742 180363 382635  6531/6124/498    9690/2068    46  294   57.90)
ramon: poll                 wall=15.000s usage=14.960s mem=60192KiB load=1.08 rootload=1.07
(smt.stats   51   6919 186946 401357  6909/6405/498   10306/2075    46  294   58.09)
(smt.stats   52   7113 191918 416363  6969/6676/499   10703/2330    47  306   58.09)
ramon: poll                 wall=16.000s usage=15.958s mem=60684KiB load=1.00 rootload=1.00
(smt.stats   53   7326 199442 445094  7008/6722/500   10991/2404    48  321   58.19)
(sat.ddfw       1      1   11.1683   1720001      8431         18            1      174)
(smt.stats   54   7560 207730 466410  7144/6837/502   11441/2440    49  323   58.71)
ramon: poll                 wall=17.000s usage=16.944s mem=60792KiB load=0.99 rootload=0.99
(smt.stats   55   7661 211963 475306  7201/6863/502   11568/2447    49  323   58.80)
(smt.stats   56   7772 214876 484101  7241/6923/502   11696/2471    50  342   58.80)
(smt.stats   57   7894 219151 499484  7355/6957/502   11902/2478    50  342   58.90)
ramon: poll                 wall=18.000s usage=17.932s mem=61012KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   10.5738   1910001      9362         19            1      193)
(smt.stats   58   8028 222873 512816  7396/7101/511   12538/2580    51  364   58.90)
(smt.stats   59   8176 229343 538605  7454/7166/514   12815/2681    52  364   58.99)
ramon: poll                 wall=19.000s usage=18.921s mem=61108KiB load=0.99 rootload=0.98
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8337 234530 556068  7732/7415/515   13107/2768    53  365   59.09)
(sat.ddfw       1      1   10.0806   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=19.920s mem=61164KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:26:59 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.993s
ramon: group.utime          19.981s
ramon: group.stime          0.012s
ramon: group.mempeak        61420KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.00
