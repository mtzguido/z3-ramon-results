ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:52:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24946 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/jLa0ss1CCWaw.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             129260
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4316   2737  1324/1135/113      97/20     6   17   19.27)
(smt.stats    1    202   6260   5576  1635/1428/115     216/22     7   22   19.46)
(smt.stats    2    313   7109   6546  1720/1507/115     367/26     7   22   19.55)
(smt.stats    3    414  10181  12777  1756/1598/120     482/53     8   23   19.55)
(smt.stats    4    525  12064  15777  2337/2123/125     620/104     9   29   19.65)
(smt.stats    5    647  15550  21473  2642/2408/127     747/156    11   33   19.85)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  22510  28382  2734/2492/127     845/156    11   33   19.95)
(smt.stats    7    860  25982  36736  2751/2502/130     955/156    12   35   19.95)
(smt.stats    8    982  27741  45251  2760/2517/131    1087/159    13   39   20.05)
ramon: poll                 wall=1.000s usage=0.996s mem=21212KiB load=1.00 rootload=0.99
(smt.stats    9   1116  29229  50088  2787/2519/131    1270/162    13   39   20.05)
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&45
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&423
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 423 := 432 << 3
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&433
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 433 := 432 << 3
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&1934
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&1927
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 1927 := 432 << 3
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 215 := 216 << 4
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 215 := 216 << 4
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 215 := 216 << 4
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 215 := 216 << 4
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 2 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 8 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 1 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 2 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 4 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 4 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 4 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 4 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 2 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 7 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&3456
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 8 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 8 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 7 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 6 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 4 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 2 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 4 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 4 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 1 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 8 := 8&3456
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 8 := 8&3456
(smt.stats   10   1217  30715  55090  2892/2631/215    1367/194    15   60   20.34)
(smt.stats   11   1328  32368  59164  2909/2651/230    1488/194    15   60   20.44)
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&2576
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 8 := 8&2576
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8&2576
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 8 := 8&2576
(smt.stats   12   1450  34812  66683  2919/2666/233    1615/203    17   71   20.44)
(smt.stats   13   1584  36938  70010  2976/2680/233    1795/204    17   71   20.54)
(smt.stats   14   1731  39885  75821  3006/2739/235    1958/221    19   82   20.54)
(smt.stats   15   1832  42232  80015  3036/2767/235    2074/221    19   82   20.63)
(smt.stats   16   1943  44411  85101  3039/2780/235    2190/221    19   82   20.73)
(smt.stats   17   2065  46096  89696  3058/2799/238    2338/238    20   90   20.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   18   2199  48547  95075  3071/2800/240    2453/255    21  108   20.84)
ramon: poll                 wall=2.000s usage=1.995s mem=22092KiB load=1.00 rootload=1.00
(smt.stats   19   2346  51149 101300  3095/2825/240    2603/256    21  108   20.84)
(smt.stats   20   2507  54218 113369  3102/2841/240    2768/256    21  108   20.93)
(smt.stats   21   2608  56266 124272  3108/2849/240    2865/256    21  108   20.93)
(smt.stats   22   2719  58061 130305  3109/2850/240    3021/256    21  108   20.93)
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&228
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 228 := 228 << 50
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&227
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 227 := 228 << 50
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&227
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 227 := 228 << 50
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 36028797018963953 := 114 << 51
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 36028797018963959 := 114 << 51
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 36028797018963959 := 114 << 51
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 36028797018963959 := 114 << 51
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 32816 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1125899906842624 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 32832 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1125899906842624 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1125899906842608 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1125899906842592 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 32832 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 32896 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 33024 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 33280 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 33792 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 34816 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 36864 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 40960 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 49152 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 65536 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 34816 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 36864 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 40960 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 49152 := 1125899906842624&4503599627370496
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 65536 := 1125899906842624&4503599627370496
(smt.stats   23   2841  59521 133085  3284/2852/240    3167/260    21  108   21.75)
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1125899906842624&4503599627370496
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 32896 := 1125899906842624&4503599627370496
ramon: poll                 wall=3.000s usage=2.994s mem=22944KiB load=1.00 rootload=0.99
(smt.stats   24   2975  61591 138321  3376/3110/323    3504/270    22  136   21.75)
(smt.stats   25   3122  68507 149388  3389/3120/325    3685/403    23  147   21.75)
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 18014398509481984&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 288230376151711761 := 110 << 54
(smt.stats   26   3285  74604 160513  3431/3155/330    3869/416    24  154   21.85)
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 18014398509481984&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 18410715276690587665 := 110 << 54
(smt.stats   27   3462  78649 170056  3493/3224/337    4180/436    25  167   21.95)
(smt.stats   28   3563  80553 173324  3534/3236/338    4309/533    26  168   22.13)
ramon: poll                 wall=4.000s usage=3.994s mem=23536KiB load=1.00 rootload=1.00
(smt.stats   29   3674  82804 179086  3781/3510/341    4548/611    27  183   22.13)
ramon: poll                 wall=5.004s usage=4.997s mem=23544KiB load=1.00 rootload=1.00
(smt.stats   30   3796  86567 187624  3920/3590/343    4716/616    27  183   22.23)
(smt.stats   31   3930  87088 189093  4108/3664/343    4859/662    28  187   22.32)
ramon: poll                 wall=6.000s usage=5.993s mem=23608KiB load=1.00 rootload=1.00
(smt.stats   32   4077  91167 199348  4139/3868/346    5063/662    28  187   22.52)
(smt.stats   33   4238  97923 225649  4151/3880/346    5263/672    29  203   22.52)
(smt.stats   34   4415 104270 249756  4161/3890/348    5506/737    30  207   22.62)
(smt.stats   35   4609 109929 265963  4215/3911/348    5876/740    30  207   22.71)
ramon: poll                 wall=7.000s usage=6.993s mem=24080KiB load=1.00 rootload=1.00
(smt.stats   36   4710 111880 271631  4286/3953/349    6013/855    31  208   22.81)
(smt.stats   37   4821 114663 278506  4295/4022/349    6166/855    31  208   22.81)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   38   4943 120550 298549  4305/4028/354    6362/887    32  214   22.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
(smt.stats   39   5077 123642 307307  4313/4040/355    6521/887    32  214   22.81)
(smt.stats   40   5224 127019 316334  4326/4043/355    6681/887    32  214   22.81)
ramon: poll                 wall=8.000s usage=7.992s mem=24168KiB load=1.00 rootload=1.00
(smt.stats   41   5385 130919 328335  4340/4060/355    6835/902    33  235   22.90)
(smt.stats   42   5562 132875 337610  4351/4077/358    7022/913    34  239   22.90)
(smt.stats   43   5756 137190 359459  4392/4103/359    7274/926    35  243   22.90)
(smt.stats   44   5969 144132 377179  4432/4138/359    7533/931    35  243   23.00)
(smt.stats   45   6070 146668 385491  4441/4167/359    7651/931    35  243   23.00)
(smt.stats   46   6181 149474 397863  4458/4184/360    7765/945    36  257   23.09)
ramon: poll                 wall=9.000s usage=8.992s mem=24456KiB load=1.00 rootload=1.00
(smt.stats   47   6303 151602 406350  4472/4184/360    7902/946    36  257   23.09)
(smt.stats   48   6437 153750 415752  4484/4210/362    8080/960    37  264   23.29)
(smt.stats   49   6584 156492 421829  4606/4312/363    8287/961    37  264   23.39)
ramon: poll                 wall=10.000s usage=9.992s mem=24732KiB load=1.00 rootload=1.00
(smt.stats   50   6745 159268 431798  4838/4339/363    8485/962    37  264   23.48)
ramon: poll                 wall=11.000s usage=10.992s mem=24956KiB load=1.00 rootload=0.99
(smt.stats   51   6922 162282 444314  4973/4624/364    8744/994    38  269   23.67)
ramon: poll                 wall=12.000s usage=11.992s mem=25312KiB load=1.00 rootload=1.00
(smt.stats   52   7116 166079 457652  5089/4815/365    9073/994    38  269   23.67)
(smt.stats   53   7329 171567 480794  5100/4826/365    9332/1064    39  274   24.07)
(smt.stats   54   7563 178135 506574  5110/4835/365    9639/1064    39  274   24.17)
(smt.stats   55   7664 180367 518057  5140/4860/365    9831/1064    39  274   24.17)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   56   7775 182986 527468  5177/4885/366   10058/1115    40  275   24.27)
(smt.stats   57   7897 186462 538918  5181/4893/366   10235/1115    40  275   24.27)
(smt.stats   58   8031 188598 549382  5187/4899/368   10434/1180    41  277   24.27)
(smt.stats   59   8178 191477 565472  5205/4913/369   10620/1180    41  277   24.27)
(smt.stats   60   8339 197783 584842  5211/4917/370   10840/1180    41  277   24.36)
ramon: poll                 wall=13.000s usage=12.991s mem=25756KiB load=1.00 rootload=1.00
(smt.stats   61   8516 201823 608056  5220/4928/370   11030/1200    42  282   24.36)
(smt.stats   62   8710 206397 629880  5221/4929/370   11244/1200    42  282   24.46)
ramon: poll                 wall=14.000s usage=13.991s mem=25848KiB load=1.00 rootload=1.00
(smt.stats   63   8923 211728 657095  5226/4934/370   11473/1200    42  282   24.46)
(smt.stats   64   9157 219081 684104  5239/4942/371   11734/1213    43  285   24.46)
(smt.stats   65   9414 224965 713877  5288/4952/371   12068/1216    43  285   24.65)
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1&328
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 36028797018702580 := 164 << 1
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1&328
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 36028797018702580 := 164 << 1
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1&328
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 36028797018702580 := 164 << 1
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 1 := 1&328
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1&328
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1 := 1&328
(smt.stats   66   9515 226683 720056  5330/5008/371   12197/1217    43  285   24.75)
(smt.stats   67   9627 229550 731088  5347/5041/386   12347/1229    44  288   24.75)
(smt.stats   68   9749 232490 741757  5372/5060/386   12568/1229    44  288   24.84)
(smt.stats   69   9883 236758 753234  5384/5084/386   12739/1229    44  288   24.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 823)
(smt.stats   70  10030 239808 765650  5389/5091/386   12106/1244    45  288   24.84)
ramon: poll                 wall=15.000s usage=14.991s mem=26276KiB load=1.00 rootload=1.00
(smt.stats   71  10191 247278 782405  5409/5098/386   12312/1245    45  288   24.84)
(smt.stats   72  10368 258508 810162  5414/5116/386   12492/1245    45  288   24.84)
(smt.stats   73  10562 263711 821419  5430/5127/386   12760/1245    45  288   24.94)
(smt.stats   74  10775 270507 838620  5458/5141/386   13009/1247    45  288   24.94)
(smt.stats   75  11009 282392 857715  5463/5165/386   13244/1247    45  288   24.94)
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 1 := 1&1098
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 1 := 1&1098
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1&1098
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1 := 1&1098
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 1&1098
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 1 := 1&1098
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   76  11266 292632 875304  5473/5169/386   13515/1248    45  288   25.03)
(smt.stats   77  11548 305721 898744  5483/5183/386   13808/1248    45  288   25.84)
(smt.stats   78  11649 310619 909535  5484/5184/386   13908/1248    45  288   25.93)
(smt.stats   79  11760 315929 919185  5491/5184/386   14025/1248    45  288   25.93)
ramon: poll                 wall=16.000s usage=15.991s mem=27392KiB load=1.00 rootload=1.00
(smt.stats   80  11882 322982 929536  5492/5192/386   14151/1248    45  288   25.93)
(smt.stats   81  12016 327781 941610  5495/5195/386   14297/1248    45  288   26.03)
(smt.stats   82  12163 332197 960464  5505/5201/386   14503/1249    45  288   26.12)
(smt.stats   83  12324 337567 979590  5559/5217/387   14694/1365    46  295   26.12)
(smt.stats   84  12501 342918 995277  5570/5266/387   14909/1365    46  295   26.12)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   85  12695 350228 1013941  5590/5273/387   15143/1366    46  295   26.22)
ramon: poll                 wall=17.000s usage=16.991s mem=27812KiB load=1.00 rootload=1.00
(smt.stats   86  12908 357653 1034211  5614/5291/387   15451/1366    46  295   26.22)
(smt.stats   87  13142 364794 1055180  5647/5334/390   15786/1432    47  298   26.32)
(smt.stats   88  13399 376427 1092315  5665/5353/394   16324/1432    47  298   26.41)
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 16 := 8796093022208&4534
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 32 := 8796093022208&4534
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 64 := 8796093022208&4534
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 128 := 8796093022208&4534
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 32 := 8796093022208&4534
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 64 := 8796093022208&4534
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 128 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 256 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 512 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 1024 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 1024 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 2048 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 4096 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 2048 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 3072 := 8796093022208&4502
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 2304 := 8796093022208&4502
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 2048 := 8796093022208&4502
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 1024 := 8796093022208&4502
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 64 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 32 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 32 := 8796093022208&4518
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 64 := 8796093022208&1974
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&4518
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 1801439850948202918 := 242 << 43
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&4516
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 1909526242005094820 := 242 << 43
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&1940
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #818 #822) 64)) 1909526242005092244 := 242 << 43
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 8796093022180 := 121 << 44
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 8796093022180 := 121 << 44
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 8796093022180 := 121 << 44
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 8796093022180 := 121 << 44
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 8796093022180 := 121 << 44
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 8796093022162 := 121 << 44
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #117))) 536886226 := 121 << 44
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 96 := 8796093022208&2128654511374336
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 96 := 8796093022208&2128654511374336
band: (band[55] (if (= #411 63) 1 (if #613 2 #811)) (shl[64] (* 2 #115) (mod #826 64))) 0 := 8796093022208&2128654511374336
band: (band[55] (if (= #121 54) 1 (if #633 2 #739)) (shl[55] (bv2int %0) (+ 55 #742))) 96 := 8796093022208&2128654511374336
(smt.stats   89  13681 381114 1119026  5903/5520/456   16885/1461    48  302   26.74)
(smt.stats   90  13991 387641 1140074  5913/5610/483   17294/1516    49  323   26.83)
(smt.stats   91  14092 391993 1149771  5984/5663/483   17477/1516    49  323   26.93)
ramon: poll                 wall=18.000s usage=17.991s mem=28588KiB load=1.00 rootload=1.00
(smt.stats   92  14203 398699 1165833  5994/5672/483   17639/1516    49  323   27.02)
(smt.stats   93  14325 405715 1188629  5995/5673/483   17820/1516    49  323   27.02)
ramon: poll                 wall=19.000s usage=18.990s mem=28668KiB load=1.00 rootload=1.00
(smt.stats   94  14459 413438 1211024  6003/5676/483   17994/1572    50  325   27.02)
(smt.stats   95  14606 418658 1227989  6004/5682/483   18190/1572    50  325   27.02)
(smt.stats   96  14767 422454 1242815  6011/5685/483   18464/1572    50  325   27.23)
(smt.stats   97  14944 425709 1258230  6023/5701/483   18802/1572    50  325   27.23)
ramon: poll                 wall=20.000s usage=19.990s mem=28832KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:52:43 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.984s
ramon: group.stime          0.016s
ramon: group.mempeak        29088KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
