ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:08:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41878 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1258
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/MVAXXOBrJhrZ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2926872
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2044    710  1032/870/100     103/18     6   16   18.95)
(smt.stats    1    202   2626   1639  1371/1207/103     216/29     8   19   19.05)
(smt.stats    2    313   3180   2607  1417/1286/117     351/48    11   27   19.05)
(smt.stats    3    414   3854   3738  1544/1330/118     456/59    12   31   19.14)
(smt.stats    4    525   4662   5177  1607/1459/127     557/85    14   34   19.24)
(smt.stats    5    647   5476   7212  1660/1484/127     680/98    15   37   19.24)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   6704   7923  1682/1520/127     786/99    15   37   19.33)
(smt.stats    7    859   7100   8505  1830/1631/127     905/100    15   37   19.33)
(smt.stats    8    981   7729  10967  1977/1795/127    1038/100    15   37   19.33)
(smt.stats    9   1115   8670  14571  2032/1861/127    1197/100    15   37   19.43)
(smt.stats   10   1216   9321  16217  2060/1894/127    1312/102    15   37   19.43)
(smt.stats   11   1327   9912  18823  2101/1933/127    1441/102    15   37   19.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  11682  21830  2112/1970/130    1570/182    16   41   19.54)
(smt.stats   13   1583  13698  25061  2163/1981/135    1716/182    16   41   19.54)
(smt.stats   14   1730  17863  28648  2167/2021/135    1862/197    17   51   19.54)
(smt.stats   15   1831  19453  31136  2176/2025/135    1971/197    17   51   19.54)
(smt.stats   16   1942  20248  33798  2192/2041/135    2086/197    17   51   19.63)
(smt.stats   17   2064  21551  36293  2195/2049/138    2207/207    18   54   19.63)
(smt.stats   18   2198  23576  39490  2207/2061/138    2341/207    18   54   19.63)
(smt.stats   19   2345  25450  43250  2218/2066/139    2485/209    19   55   19.73)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179869181&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869181 := 17179869183 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179869181&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869181 := 17179869183 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179869181&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 17179869181 := 17179869183 << 16
(smt.stats   20   2506  26846  46847  2245/2102/145    2653/211    20   57   19.73)
ramon: poll                 wall=1.000s usage=0.900s mem=20820KiB load=0.90 rootload=0.90
(smt.stats   21   2607  27448  50766  2263/2105/145    2763/212    20   57   19.73)
(smt.stats   22   2718  28067  54119  2276/2120/145    2881/212    20   57   19.83)
(smt.stats   23   2840  29173  57348  2280/2135/145    3016/212    20   57   19.83)
(smt.stats   24   2974  30555  60598  2290/2140/145    3153/212    20   57   19.83)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 3 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 2 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8192&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 1 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8192&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 8193 := 1 << 13
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8193&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 51539615745 := 4194305 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179852801&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 281474976694273 := 17179869183 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179852800&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179860992 := 17179869183 << 14
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 17179852800&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179860992 := 17179869183 << 14
(smt.stats   25   3121  31654  61957  2384/2168/163    3304/239    21   59   20.31)
ramon: poll                 wall=2.000s usage=1.899s mem=22152KiB load=1.00 rootload=0.99
(smt.stats   26   3282  32389  64140  2777/2360/169    3473/241    21   59   20.78)
ramon: poll                 wall=3.000s usage=2.899s mem=22836KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.899s mem=23632KiB load=1.00 rootload=1.00
(smt.stats   27   3459  32815  64442  3030/2873/169    3650/252    22   68   22.31)
(smt.stats   28   3560  33718  67062  3961/3808/178    3920/252    22   68   21.73)
(smt.stats   29   3671  34096  68448  4250/3812/178    4035/255    22   68   21.73)
(smt.stats   30   3793  34700  69716  4533/4131/178    4161/255    22   68   21.83)
(smt.stats   31   3927  35749  76081  4977/4600/178    4407/420    23   84   21.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4074  38937  95992  5023/4861/180    4591/567    24   87   22.20)
(smt.stats   33   4235  41627 108961  5240/5076/181    4997/777    25   89   22.20)
(smt.stats   34   4412  42913 119124  5880/5244/181    5183/792    25   89   22.30)
(smt.stats   35   4606  45408 133565  6071/5896/181    5452/794    25   89   22.40)
(smt.stats   36   4707  45967 138700  6092/5943/181    5584/794    25   89   22.40)
(smt.stats   37   4818  46806 145255  6097/5948/181    5732/794    25   89   22.40)
(smt.stats   38   4940  47632 150186  6100/5951/181    5900/794    25   89   22.40)
ramon: poll                 wall=5.000s usage=4.899s mem=24136KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   39   5074  50206 158172  6105/5954/181    6037/794    25   89   22.40)
(smt.stats   40   5221  52640 184460  6119/5959/181    6186/794    25   89   22.40)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions    )
(smt.stats   41   5382  55316 213718  6133/5984/182    6364/1060    26   90   22.40)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 3423253755&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 3423253755 := 3423253755 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 3423253756&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 3423253756 := 3423253755 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 3873912632&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 3873912632 := 3425350907 << 2
(smt.stats   42   5559  57513 243558  6164/5998/182    6655/1063    26   90   22.40)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16712913900&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 4178228475 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16687748076&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 4171937019 << 2
(smt.stats   43   5753  60310 260682  6268/6115/193    6924/1179    27   91   22.50)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16685276721&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 16685276721 := 4171319180 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16687748074&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 16687748074 := 4171937018 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 16374464500 := 3488265466 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 16374464500 := 3488265466 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374730520&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 8187365260 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16634777368&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17179869183 := 8317388684 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16638971672&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17131092782 := 8319485836 << 1
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16640207348&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17132328458 := 8320103674 << 1
(smt.stats   44   5966  62041 279452  6322/6165/204    7129/1238    29  103   22.50)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 22
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 23
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 26
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 27
(smt.stats   45   6067  62952 289596  6436/6204/209    7204/1395    30  293   22.60)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 27
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 28
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 29
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 31
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 33
(smt.stats   46   6178  64444 303944  6615/6292/229    7314/1402    30  293   22.80)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 25
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 16374464500&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 33554333684 := 0 << 25
(smt.stats   47   6300  66453 312997  6656/6456/271    7448/1419    31  304   23.09)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 0 := 1048587 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 0 := 1048587 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 9007293744021504 := 1048587 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 9007293744021504 := 1048587 << 21
(smt.stats   48   6434  69169 323410  6807/6599/285    7604/1460    33  312   23.09)
(smt.stats   49   6581  73557 335815  6843/6633/285    7773/1460    33  312   23.18)
(smt.stats   50   6742  75873 351982  6911/6701/303    8044/1471    34  312   23.18)
ramon: poll                 wall=6.000s usage=5.898s mem=24588KiB load=1.00 rootload=1.00
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17054023680 := 17116939262 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 4294967296&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17054015488 := 17116939261 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17054056448 := 17116939266 << 32
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 8589934592&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 17054056448 := 17116939266 << 32
(smt.stats   51   6919  79989 366108  7017/6706/303    8211/1599    35  335   23.47)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 11405493133&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1128096990093 := 17179641060 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 11405493133&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1128096990093 := 17179641060 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 11404312576&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 15278260232 := 17179637054 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 3292528640&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 10280517633 := 17179026978 << 21
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 11404312576&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 15278260225 := 17179637054 << 21
(smt.stats   52   7113  84185 381234  7117/6855/313    8444/1611    36  336   23.47)
ramon: poll                 wall=7.000s usage=6.898s mem=25052KiB load=1.00 rootload=1.00
(smt.stats   53   7326  87287 387502  7338/7123/319    8676/1654    37  347   23.66)
ramon: poll                 wall=8.000s usage=7.898s mem=25168KiB load=1.00 rootload=1.00
(smt.stats   54   7560  88678 392983  7532/7126/319    8913/1655    37  347   23.75)
ramon: poll                 wall=9.000s usage=8.898s mem=25360KiB load=1.00 rootload=0.99
(smt.stats   55   7661  89079 394146  7717/7435/319    9024/1681    38  349   23.85)
ramon: poll                 wall=10.000s usage=9.897s mem=25428KiB load=1.00 rootload=1.00
(smt.stats   56   7772  91566 408019  7923/7575/319    9177/1685    38  349   23.95)
(smt.stats   57   7894  93808 419375  8142/7744/319    9308/1691    38  349   24.04)
(smt.stats   58   8028  94788 426874  8209/7991/319    9459/1691    38  349   24.20)
(smt.stats   59   8175  95055 434443  8211/7997/319    9624/1691    38  349   24.20)
ramon: poll                 wall=11.000s usage=10.897s mem=25684KiB load=1.00 rootload=1.00
(smt.stats   60   8336  97588 449419  8248/8002/319    9801/1695    38  349   24.20)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8513 100439 467025  8291/8056/319   10169/1695    38  349   24.20)
(smt.stats   62   8707 103502 489722  8325/8081/320   10407/1946    39  352   24.39)
(smt.stats   63   8920 111657 565583  8585/8294/320   10704/1946    39  352   24.59)
(smt.stats   64   9154 122802 611040  8694/8384/339   10971/2032    40  371   24.68)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 1048576&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1048576 := 1048576 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 1048576&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1048576 := 1048576 << 16
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 1048576&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1048576 := 1048576 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 1 := 1048576 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 1048576 << 20
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #284) 64)) 0 := 1048576 << 20
(smt.stats   65   9411 134983 641497  8792/8479/352   11313/2102    41  383   24.78)
ramon: poll                 wall=12.000s usage=11.897s mem=26356KiB load=1.00 rootload=1.00
(smt.stats   66   9512 136650 659189  8809/8524/392   11344/2146    43  447   24.87)
(smt.stats   67   9623 139480 666052  8826/8529/392   11457/2146    43  447   24.97)
(smt.stats   68   9745 147112 691991  8833/8548/392   11616/2146    43  447   24.97)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 0&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 492121111 := 0 << 24
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 0&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 492121111 := 0 << 24
(smt.stats   69   9879 152210 714487  8907/8554/392   11780/2196    44  450   25.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 56)
(smt.stats   70  10026 156673 726194  9005/8677/397   11997/2219    45  451   25.16)
(smt.stats   71  10187 161629 756171  9035/8722/397   12210/2220    45  451   25.25)
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 0&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 492121111 := 0 << 33
band: (band[34] (shl[64] (bv2int %0) (mod #285 64)) (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #775 1 #833))) 0 := 0&0
shl: (shl[34] (bv2int %0) (mod (bv2int %1) 34)) 492121111 := 0 << 33
ramon: poll                 wall=13.000s usage=12.896s mem=26776KiB load=1.00 rootload=1.00
(smt.stats   72  10364 168072 783932  9082/8760/397   12463/2377    46  451   25.35)
(smt.stats   73  10558 174620 801014  9198/8868/397   12667/2380    46  451   25.50)
(smt.stats   74  10771 182934 826411  9237/8901/403   12921/2468    47  457   25.50)
(smt.stats   75  11005 190382 885913  9259/8941/403   13178/2468    47  457   25.60)
(smt.stats   76  11262 200968 968137  9271/8954/403   13459/2468    47  457   25.60)
ramon: poll                 wall=14.000s usage=13.896s mem=27208KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11544 215015 1043351  9303/8984/403   13758/2468    47  457   25.60)
(smt.stats   78  11645 216910 1060066  9308/8995/403   13877/2468    47  457   25.60)
(smt.stats   79  11756 219763 1081085  9321/9001/403   14008/2470    47  457   25.70)
(smt.stats   80  11878 229463 1101046  9329/9013/403   14142/2470    47  457   25.70)
(smt.stats   81  12012 234263 1110031  9360/9036/403   14304/2471    47  457   25.70)
(smt.stats   82  12159 239694 1118761  9432/9066/403   14460/2472    47  457   26.15)
(smt.stats   83  12320 243291 1156967  9458/9132/403   14657/2472    47  457   26.15)
(smt.stats   84  12497 245875 1181898  9500/9173/403   14844/2472    47  457   26.15)
ramon: poll                 wall=15.001s usage=14.898s mem=27848KiB load=1.00 rootload=1.00
(smt.stats   85  12691 253276 1209374  9534/9204/407   15043/2582    49  463   26.44)
(smt.stats   86  12904 262717 1241539  9691/9287/407   15270/2582    49  463   26.54)
(smt.stats   87  13138 273764 1283487  9732/9399/407   15534/2588    49  463   26.73)
ramon: poll                 wall=16.000s usage=15.896s mem=28264KiB load=1.00 rootload=1.00
(smt.stats   88  13395 282257 1311473  9922/9460/407   15851/2594    49  463   26.92)
ramon: poll                 wall=17.000s usage=16.896s mem=28748KiB load=1.00 rootload=1.00
(smt.stats   89  13677 294640 1354470  9975/9622/407   16140/2595    49  463   26.92)
(smt.stats   90  13987 315992 1507833  9997/9679/412   16448/2680    50  471   26.92)
(smt.stats   91  14088 319334 1517308 10013/9683/412   16557/2680    50  471   26.92)
(smt.stats   92  14199 323250 1554961 10029/9699/412   16681/2680    50  471   27.01)
(smt.stats   93  14321 326476 1591131 10038/9722/412   16806/2680    50  471   27.01)
(smt.stats   94  14455 330257 1603837 10075/9727/412   16941/2682    50  471   27.01)
ramon: poll                 wall=18.001s usage=17.892s mem=28756KiB load=1.00 rootload=1.00
(smt.stats   95  14602 332899 1619414 10097/9781/412   17114/2682    50  471   27.01)
(smt.stats   96  14763 341805 1650140 10138/9785/412   17292/2683    50  471   27.01)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   97  14940 348575 1681073 10224/9843/412   17500/2686    50  471   27.11)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=19.000s usage=18.876s mem=29012KiB load=0.99 rootload=0.98
(smt.stats   98  15134 354846 1695379 10325/9915/412   17700/2687    50  471   27.11)
(smt.stats   99  15347 359611 1745940 10361/10045/412   17922/2687    50  471   27.11)
(smt.stats  100  15581 360719 1765053 10377/10061/412   18194/2687    50  471   27.11)
(smt.stats  101  15838 370682 1790637 10587/10069/412   18464/2687    50  471   27.31)
ramon: poll                 wall=20.000s usage=19.876s mem=29012KiB load=1.00 rootload=1.00
(smt.stats  102  16120 378067 1835258 10635/10296/412   18793/2687    50  471   27.31)
ramon: end                  Tue Dec 24 15:08:24 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.000s
ramon: group.total          19.950s
ramon: group.utime          19.942s
ramon: group.stime          0.008s
ramon: group.mempeak        29012KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              0.99
