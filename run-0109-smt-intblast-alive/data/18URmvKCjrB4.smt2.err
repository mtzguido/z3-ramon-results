ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:18:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         43074 MiB
ramon: sys.mem.avail        61717 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/18URmvKCjrB4.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2756528
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4062   1354  1182/1065/99      91/5     4   18   19.05)
(smt.stats    1    202   6457   2349  1684/1516/103     190/16     6   23   19.14)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 4 := 255&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #824 #828) 64)) 4 := 4 << 7
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 4 := 255&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #824 #828) 64)) 4 := 4 << 7
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 255&4
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 255&4
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 255&8
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 255&8
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 4 := 255&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #824 #828) 64)) 4 := 4 << 7
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 255&16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #824 #828) 64)) 16 := 16 << 7
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 255&0
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 1 := 0 << 8
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 255&0
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 1 := 0 << 8
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 255&0
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 1 := 0 << 8
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 255&0
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 1 := 0 << 8
(smt.stats    2    313   8075   3881  1925/1745/136     307/31     9   42   19.53)
(smt.stats    3    414  10023   5552  2174/1957/137     430/41    10   42   19.62)
(smt.stats    4    525  10954   8555  2504/2041/143     522/87    12   52   19.73)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 15 := 281474976710655&16
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&16
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&32
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&32
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&64
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&128
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&32
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&64
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&128
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&256
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 15 := 281474976710655&16
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&16
(smt.stats    5    647  15295  11395  2562/2313/185     640/95    14   63   19.93)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 14 := 281474976710655&31
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 14 := 281474976710655&31
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&30
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&29
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&30
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&16
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 281474976710655&17
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 281474976710655&18
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 281474976710655&20
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 281474976710655&24
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 281474976710655&20
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 281474976710655&24
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 22 := 281474976710655&24
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 20 := 281474976710655&24
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 281474976710655&24
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 24 := 281474976710655&25
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 281474976710655&25
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16 := 281474976710655&24
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 24 := 281474976710655&28
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 26 := 281474976710655&28
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 24 := 281474976710655&28
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 28 := 281474976710655&30
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 24 := 281474976710655&26
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 44 := 281474976710655&428
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16486  13067  2710/2350/226     836/109    14   63   20.22)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 44 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 44 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 44 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 44 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 524 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 396 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 332 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 492 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 428 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 428 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 492 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 428 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 428 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 300 := 281474976710655&556
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 44 := 281474976710655&556
(smt.stats    7    859  18865  17652  2826/2506/257    1020/160    15   73   20.41)
(smt.stats    8    983  21571  24697  2848/2607/287    1268/320    18  104   20.53)
(smt.stats    9   1117  27345  34951  2853/2612/287    1406/320    18  104   20.53)
(smt.stats   10   1218  30211  40411  2865/2621/287    1548/321    18  104   20.67)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 2 := 281474976710655&1152
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 281474976710655&1152
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&1152
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&1152
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&1152
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&1152
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2176
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&4224
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2176
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2176
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2176
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&4224
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&8320
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338399360
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338399360
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338407552
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338407552
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338399616
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338399360
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338399360
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338399360
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338399360
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338407552
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338407552
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338423936
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 128 := 281474976710655&2216338423936
(smt.stats   11   1329  32113  44472  3039/2767/375    1780/386    19  104   21.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  32542  45556  3394/3153/376    2074/420    20  124   21.25)
(smt.stats   13   1585  35865  51926  3418/3160/376    2218/420    20  124   21.25)
(smt.stats   14   1732  41582  66827  3523/3177/376    2998/438    21  124   21.35)
(smt.stats   15   1833  44339  74906  3674/3428/378    3600/881    22  126   21.44)
(smt.stats   16   1944  48224  85931  3790/3479/382    4202/1113    23  130   21.54)
ramon: poll                 wall=1.004s usage=0.908s mem=22808KiB load=0.90 rootload=0.89
(smt.stats   17   2066  51759  97059  3813/3563/382    4581/1371    24  133   21.64)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2200  54112 104608  3815/3574/382    4791/1371    24  133   21.64)
(smt.stats   19   2348  60334 131469  3849/3578/383    4985/1548    25  139   21.64)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 16384 := 281474976710655&4398046576640
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 4096 := 281474976710655&4398046576640
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 4096 := 281474976710655&4398046576640
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 2048 := 281474976710655&4398046576640
(smt.stats   20   2509  63493 150827  3868/3621/389    5290/1694    26  141   21.92)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 1024 := 281474976710655&4398046576640
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 768 := 281474976710655&4398046576640
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 768 := 281474976710655&4398046576640
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 768 := 281474976710655&4398046576640
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 552 := 281474976710655&4398046576640
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 544 := 281474976710655&4398046576640
(smt.stats   21   2610  64589 154803  4037/3637/389    5543/1709    26  141   22.03)
(smt.stats   22   2721  65073 157367  4257/3829/389    5753/1715    26  141   22.13)
(smt.stats   23   2843  65943 162877  4644/4142/389    6167/1720    26  141   22.23)
(smt.stats   24   2977  67969 175793  4855/4427/389    6675/1726    26  141   22.33)
(smt.stats   25   3124  70615 198922  4874/4633/393    7020/2114    27  147   22.33)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 100405 := 281474976710655&264224
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 67636 := 281474976710655&264224
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 67632 := 281474976710655&264224
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 67616 := 281474976710655&264224
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 100384 := 281474976710655&264224
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 67616 := 281474976710655&264224
(smt.stats   26   3285  72863 204425  5013/4770/410    7396/2171    28  158   22.53)
(smt.stats   27   3462  78025 253660  5049/4809/413    8177/2551    29  174   22.63)
(smt.stats   28   3563  80874 278276  5051/4811/413    8599/2551    29  174   22.72)
ramon: poll                 wall=2.000s usage=1.904s mem=23992KiB load=1.00 rootload=0.99
(smt.stats   29   3674  86279 325114  5058/4818/413    8800/2551    29  174   22.72)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 544 := 1023&2216338440544
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 608 := 1023&2216338440544
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 864 := 1023&2216338440544
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 352 := 1023&2216338440544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #824 #828) 64)) 71778335399657824 := 8796093022208 << 9
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 352 := 1023&2216338440544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #824 #828) 64)) 71778335399657824 := 8796093022206 << 9
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 352 := 1023&2216338440544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #824 #828) 64)) 71778335399657824 := 8796093022206 << 9
(smt.stats   30   3796  88960 346446  5191/4908/421    9226/3094    30  186   22.82)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 1023&2216338767872
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 0 := 551920207216 << 10
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 1023&2216338767872
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 0 := 551920207216 << 10
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 1023&2216338767872
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 0 := 551920207216 << 10
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 1023&2216338833408
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 0 := 551920207280 << 10
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 1023&2216338964480
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 0 := 551920207408 << 10
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 0 := 1023&2216338964480
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #104))) 0 := 551920207408 << 10
(smt.stats   31   3930  91519 373295  5440/5075/423    9594/3293    32  199   23.03)
(smt.stats   32   4077  96058 403233  5514/5230/429    9853/3298    32  199   23.03)
(smt.stats   33   4238  99854 431961  5890/5374/430   10297/3420    33  209   23.22)
(smt.stats   34   4415 102728 457470  6311/5659/431   10838/3485    34  214   23.51)
(smt.stats   35   4609 108527 517256  6350/6106/431   11603/3485    34  214   23.60)
(smt.stats   36   4710 111095 545273  6445/6150/432   12010/3837    35  214   23.60)
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 671756 := 17179869183&2216338604044
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 671756 := 17179869183&2216338604044
band: (band[48] (if (= #358 63) 1 (if #574 3 #817)) (shl[64] (* 2 #342) (mod #832 64))) 671756 := 17179869183&2216338604044
(smt.stats   37   4821 112188 556143  6668/6215/432   12431/3849    35  214   23.80)
ramon: poll                 wall=3.000s usage=2.904s mem=25340KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4943 113352 565348  7026/6450/437   12970/3981    36  215   23.89)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5077 115736 589714  7219/6813/441   14374/3984    36  215   24.08)
(smt.stats   40   5224 118196 612683  7390/7002/441   14689/4749    37  222   24.08)
(smt.stats   41   5385 125674 714177  7406/7162/441   15227/4749    37  222   24.34)
(smt.stats   42   5562 130995 765757  7612/7173/441   16250/4758    37  222   24.54)
(smt.stats   43   5756 135564 789071  7795/7389/441   16603/4764    37  222   24.54)
ramon: poll                 wall=4.000s usage=3.904s mem=25956KiB load=1.00 rootload=1.00
(smt.stats   44   5969 142479 854838  7943/7571/441   17602/4769    37  222   24.73)
(smt.stats   45   6070 144229 869985  8067/7711/441   18347/4774    37  222   24.86)
(smt.stats   46   6181 146467 889105  8286/7837/441   18629/4779    37  222   24.86)
(smt.stats   47   6303 151950 956126  8355/8075/441   18918/4779    37  222   24.95)
(smt.stats   48   6437 154683 986086  8481/8112/441   19385/4786    37  222   24.95)
(smt.stats   49   6584 156916 998662  8565/8249/441   19710/4790    37  222   25.05)
ramon: poll                 wall=5.000s usage=4.904s mem=26700KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   50   6745 160795 1047907  9063/8620/442   20233/6372    38  224   25.38)
(smt.stats   51   6922 164611 1081253  9487/8899/442   21218/6380    38  224   25.48)
(smt.stats   52   7116 170023 1106741  9652/9406/444   22372/6920    39  235   25.67)
(smt.stats   53   7329 175536 1200594  9685/9420/444   22948/6920    39  235   25.67)
(smt.stats   54   7563 180931 1272505  9788/9442/444   23518/7429    40  236   25.77)
(smt.stats   55   7664 182340 1295770  9874/9551/444   23928/7436    40  236   25.77)
(smt.stats   56   7775 183513 1327790  9902/9652/445   24116/7604    41  238   25.77)
(smt.stats   57   7897 187546 1373097  9965/9669/446   24440/7606    41  238   25.86)
ramon: poll                 wall=6.000s usage=5.903s mem=27284KiB load=1.00 rootload=1.00
(smt.stats   58   8033 190711 1417891 10060/9757/446   26531/7757    42  242   25.96)
(smt.stats   59   8180 195129 1456805 10241/9821/446   27035/7762    42  242   26.05)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   60   8341 198088 1507981 10529/10142/447   27564/8369    43  242   26.27)
(smt.stats   61   8518 200005 1545151 10644/10394/449   28186/8370    43  242   26.36)
(smt.stats   62   8712 206875 1557686 10656/10407/449   28476/8646    44  270   26.36)
ramon: poll                 wall=7.000s usage=6.903s mem=27948KiB load=1.00 rootload=1.00
(smt.stats   63   8925 211921 1622975 11098/10852/451   29649/9001    45  271   26.65)
(smt.stats   64   9159 219389 1739707 11126/10880/452   30545/9001    45  271   26.75)
(smt.stats   65   9416 224709 1823732 11169/10894/452   30919/9193    46  291   26.85)
(smt.stats   66   9517 226573 1842286 11406/11004/452   31425/9195    46  291   26.94)
(smt.stats   67   9628 230120 1868965 11523/11146/452   31903/9197    46  291   27.04)
(smt.stats   68   9750 233790 1929606 11541/11269/455   32390/9359    47  293   27.04)
(smt.stats   69   9884 239229 1991481 11580/11288/459   32879/9542    48  329   27.13)
ramon: poll                 wall=8.000s usage=7.903s mem=28676KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 15)
(smt.stats   70  10031 241738 2012986 11655/11324/461   33392/9547    48  329   27.23)
(smt.stats   71  10192 248557 2120447 11903/11556/465   34409/9947    50  345   27.32)
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas            :deletions     )
(smt.stats   72  10369 255533 2236796 12075/11796/466   35279/10286    51  347   27.42)
ramon: poll                 wall=9.000s usage=8.903s mem=28984KiB load=1.00 rootload=1.00
(smt.stats   73  10563 259874 2264429 12120/11805/466   35737/10287    51  347   27.52)
(smt.stats   74  10776 263059 2292996 12545/11855/466   36356/10290    51  347   27.71)
(smt.stats   75  11010 270732 2419244 12967/12458/466   37661/10300    51  347   27.90)
ramon: poll                 wall=10.000s usage=9.903s mem=29492KiB load=1.00 rootload=1.00
(smt.stats   76  11267 277228 2504489 13680/12695/466   38414/10302    51  347   28.09)
(smt.stats   77  11549 282833 2599003 14197/13472/466   39237/10307    51  347   28.21)
(smt.stats   78  11650 287678 2664983 14294/13931/466   40216/10310    51  347   28.31)
(smt.stats   79  11761 291181 2717331 14332/14047/466   40713/10314    51  347   28.41)
(smt.stats   80  11883 293522 2734642 14640/14060/466   41335/10315    51  347   28.64)
ramon: poll                 wall=11.000s usage=10.903s mem=30112KiB load=1.00 rootload=1.00
(smt.stats   81  12017 295977 2762611 14694/14378/466   41889/10316    51  347   28.74)
(smt.stats   82  12164 297913 2785299 14829/14422/466   42750/10317    51  347   28.84)
(smt.stats   83  12325 301061 2861148 15011/14719/466   43117/10318    51  347   28.93)
(smt.stats   84  12502 306263 2954485 15023/14751/466   43512/10318    51  347   29.03)
(smt.stats   85  12696 312941 3057862 15039/14762/466   44237/10318    51  347   29.13)
ramon: poll                 wall=12.000s usage=11.903s mem=30644KiB load=1.00 rootload=1.00
(smt.stats   86  12909 317740 3208859 15078/14772/467   44805/12327    52  352   29.22)
(smt.stats   87  13143 323493 3292412 15513/14853/467   46791/12339    52  352   29.65)
ramon: poll                 wall=13.000s usage=12.902s mem=31560KiB load=1.00 rootload=1.00
(smt.stats   88  13400 329774 3395365 15946/15248/467   47961/12343    52  352   30.21)
(smt.stats   89  13682 338564 3524595 16007/15689/467   49325/12344    52  352   30.40)
ramon: poll                 wall=14.000s usage=13.902s mem=32028KiB load=1.00 rootload=1.00
(smt.stats   90  13992 346938 3649610 16103/15738/467   50505/12348    52  352   30.40)
(smt.stats   91  14093 353787 3685331 16115/15830/467   50698/12348    52  352   30.50)
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas            :deletions     )
(smt.stats   92  14204 356556 3709130 16288/15906/468   50971/13466    53  366   30.50)
(smt.stats   93  14326 362351 3753916 16331/16030/471   51459/13468    53  366   30.60)
(smt.stats   94  14460 366230 3805558 16448/16160/473   55080/13672    54  435   31.00)
(smt.stats   95  14607 368905 3831764 16566/16172/473   56059/13677    54  435   31.09)
ramon: poll                 wall=15.000s usage=14.902s mem=32804KiB load=1.00 rootload=1.00
(smt.stats   96  14768 372489 3918545 16896/16334/474   56978/13687    54  435   31.19)
(smt.stats   97  14945 375210 3976921 17266/16611/474   57533/14001    55  441   31.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 97)
(smt.stats   98  15139 378992 4052568 17622/17020/474   58852/14012    55  441   31.57)
ramon: poll                 wall=16.000s usage=15.902s mem=33312KiB load=1.00 rootload=1.00
(smt.stats   99  15352 383777 4168199 18082/17397/474   62419/14018    55  441   32.57)
ramon: poll                 wall=17.000s usage=16.901s mem=34336KiB load=1.00 rootload=1.00
(smt.stats  100  15586 388688 4230656 18454/17828/474   64610/14028    55  441   32.85)
(smt.stats  101  15843 396548 4312542 18606/18314/480   66687/14379    56  453   33.04)
ramon: poll                 wall=18.000s usage=17.901s mem=34804KiB load=1.00 rootload=1.00
(smt.stats  102  16125 403037 4419581 18677/18343/480   69070/14379    56  453   33.24)
(smt.stats  103  16435 412511 4655384 18781/18421/480   70208/14749    57  465   33.43)
ramon: poll                 wall=19.000s usage=18.901s mem=35248KiB load=1.00 rootload=0.99
(smt.stats  104  16775 417214 4773052 19636/18505/480   73552/14752    57  465   34.02)
(smt.stats  105  16876 419074 4813807 19794/19366/480   74551/14754    57  465   34.21)
(smt.stats  106  16987 420357 4831523 19861/19533/480   75192/14756    57  465   34.21)
(smt.stats  107  17109 421917 4846345 20023/19599/480   76109/14757    57  465   34.48)
ramon: poll                 wall=20.000s usage=19.901s mem=36320KiB load=1.00 rootload=1.00
(smt.stats  108  17243 423928 4872633 20380/19824/480   76861/14757    57  465   34.58)
ramon: end                  Tue Dec 24 14:18:57 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.999s
ramon: group.utime          19.967s
ramon: group.stime          0.032s
ramon: group.mempeak        36576KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.098s
ramon: loadavg              1.00
