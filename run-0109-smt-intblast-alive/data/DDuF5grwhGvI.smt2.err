ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:48:20 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42379 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DDuF5grwhGvI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2858709
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4710    474  1105/992/97      99/13     4   17   19.14)
(smt.stats    1    202   5914   1559  1871/1692/99     208/15     6   19   19.23)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 1&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 1&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869182&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869182&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869180&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869180&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869176&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 4&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 8&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 16&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869182&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869182&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 17179869180&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 8&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 16&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 16&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 32&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 8&2047
(smt.stats    2    313   7639   2135  1975/1747/116     316/23     7   19   19.64)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 8&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 2&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 16 := 32&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 16 := 32&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 16 := 32&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 64&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 32 := 64&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 64 := 320&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 64 := 320&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 64 := 512&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 128 := 512&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 512 := 1024&2047
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1024 := 17179868160&2047
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288231114886085632 := 11 << 11
(smt.stats    3    414   8191   3001  2233/2054/215     431/34     9   45   19.93)
(smt.stats    4    525  10550   5798  2291/2087/224     515/39    12   55   20.03)
(smt.stats    5    647  12001   8055  2632/2116/224     634/59    12   55   20.12)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14710  11012  2678/2455/224     772/59    12   55   20.22)
(smt.stats    7    859  16854  13597  2821/2484/224     922/64    12   55   20.31)
(smt.stats    8    981  18884  16748  2899/2643/224    1077/68    12   55   20.31)
(smt.stats    9   1115  20996  18618  3027/2730/225    1220/173    13   57   20.51)
ramon: poll                 wall=1.003s usage=0.896s mem=21692KiB load=0.89 rootload=0.88
(smt.stats   10   1216  23493  20008  3281/2937/225    1365/173    13   57   20.60)
(smt.stats   11   1327  26532  22570  3539/3208/225    1486/173    13   57   20.60)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30558  26317  3662/3458/236    1806/276    15   60   20.70)
(smt.stats   13   1583  33871  29553  3755/3467/238    2028/303    16   70   20.79)
(smt.stats   14   1730  36898  33340  3871/3587/238    2313/329    17   76   20.79)
ramon: poll                 wall=2.003s usage=1.894s mem=22096KiB load=1.00 rootload=1.00
(smt.stats   15   1831  40173  37607  3905/3691/240    2479/393    18   76   20.89)
(smt.stats   16   1942  43326  45303  4001/3762/240    2695/393    18   76   20.98)
(smt.stats   17   2064  45559  53357  4024/3799/247    2954/539    20   87   21.08)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 56 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 56 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 72 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 88 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 120 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 120 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 125 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 124 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 120 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 248 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 248 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1272 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1016 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1016 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1016 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2552 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2557 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2557 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 3069 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 3064 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 3576 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 3576 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 3576 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 6136 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2044 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2040 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2040 := 17179869176&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2040 := 17179869180&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2044 := 17179869180&33554431
(smt.stats   18   2198  49066  62328  4227/4003/326    3319/635    22  110   21.46)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2040 := 17179869180&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 2044 := 17179869180&33554431
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4092 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4092 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4092 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4092 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4092 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4088 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4088 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4088 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4088 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4088 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 4092 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 24568 := 17179869180&536870910
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 24572 := 17179869180&536870910
(smt.stats   19   2345  52825  73667  4420/4076/344    3760/720    23  112   21.65)
(smt.stats   20   2506  55864  84178  4643/4224/354    4210/858    24  119   21.75)
(smt.stats   21   2607  59784  99053  4694/4430/355    4761/976    25  121   21.95)
(smt.stats   22   2718  62990 112168  4741/4482/356    4992/1217    26  124   21.95)
(smt.stats   23   2840  67568 131311  4821/4527/356    5249/1219    26  124   21.95)
(smt.stats   24   2974  71721 149181  4912/4690/359    6187/1397    27  130   22.04)
ramon: poll                 wall=3.000s usage=2.889s mem=23368KiB load=1.00 rootload=1.00
(smt.stats   25   3121  75490 160077  5012/4705/363    6592/1398    27  130   22.23)
(smt.stats   26   3282  78807 166484  5227/4811/363    6892/1732    28  152   22.23)
(smt.stats   27   3459  82783 183807  5321/5054/363    7486/1734    28  152   22.45)
(smt.stats   28   3560  84968 192577  5340/5112/365    8007/2030    29  159   22.55)
ramon: poll                 wall=4.000s usage=3.889s mem=23960KiB load=1.00 rootload=1.00
(smt.stats   29   3671  90298 217013  5345/5123/365    8452/2030    29  159   22.64)
(smt.stats   30   3793  94111 235650  5362/5140/368    8694/2119    31  183   22.64)
(smt.stats   31   3927  97837 255686  5473/5202/371    9036/2168    32  214   22.64)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074 102490 276255  5603/5267/373    9325/2226    33  230   22.74)
(smt.stats   33   4235 106372 293467  5777/5389/373    9588/2276    34  237   22.84)
ramon: poll                 wall=5.000s usage=4.888s mem=24164KiB load=1.00 rootload=1.00
(smt.stats   34   4412 111456 314080  5957/5609/373    9862/2279    34  237   22.84)
(smt.stats   35   4606 116521 334192  6130/5787/373   10573/2292    34  237   22.93)
(smt.stats   36   4707 118363 346773  6238/5981/375   10806/2541    35  244   22.93)
(smt.stats   37   4818 119642 359823  6269/6034/375   11156/2541    35  244   23.03)
(smt.stats   38   4940 123092 372687  6349/6058/375   11554/2600    36  244   23.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 127389 394997  6375/6141/382   12140/2799    37  258   23.12)
(smt.stats   40   5221 130262 419183  6436/6162/382   12305/2934    38  265   23.31)
ramon: poll                 wall=6.000s usage=5.888s mem=24756KiB load=1.00 rootload=1.00
(smt.stats   41   5382 133353 451771  6502/6226/382   12834/2937    38  265   23.41)
(smt.stats   42   5559 135503 465269  6606/6318/382   13036/2941    38  265   23.41)
(smt.stats   43   5753 140115 508039  6768/6427/382   13616/2947    38  265   23.50)
(smt.stats   44   5966 146473 541181  6872/6650/383   14544/3243    39  280   23.69)
(smt.stats   45   6067 149820 560995  6884/6659/383   14877/3243    39  280   23.69)
ramon: poll                 wall=7.000s usage=6.886s mem=25080KiB load=1.00 rootload=0.99
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 0&1073741821
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288231132065955840 := 17016293646 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 0&1073741821
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288231132065955840 := 17016293646 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 0&1073741821
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288231132065955840 := 17016293646 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 0&1073741821
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288231166425694208 := 17016293646 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 0&1073741821
shl: (shl[64] (bv2int %0) (mod (+ #101 #282) 64)) 288231166425694208 := 17016293646 << 30
(smt.stats   46   6178 153081 574767  6962/6707/385   15052/3347    40  308   23.79)
(smt.stats   47   6300 157159 592519  7078/6731/390   15471/3352    40  308   23.79)
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1834 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1832 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1824 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1792 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1536 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 1024 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
shl: (shl[34] (bv2int %0) (mod (bv2int %0) 34)) 17138970443 := 17016293646 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
shl: (shl[34] (bv2int %0) (mod (bv2int %0) 34)) 17016293647 := 17016293646 << 30
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 2 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 4 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741821 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741820 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741816 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741808 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741792 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741760 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741821 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741821 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741821 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741821 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 2 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741821 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1073741820 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 2 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 16 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 32 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 64 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 128 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 256 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 512 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1024 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 2048 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 4096 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8192 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 16384 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 32768 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 65536 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 65536 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 131072 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 262144 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 524288 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1048576 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 2097152 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 4194304 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8388608 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 16777216 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 33554432 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 67108864 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 134217728 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 268435456 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 536870912 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 536870912 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 536870912 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 524288 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 1048576 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 2097152 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 4194304 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8388608 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 16777216 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 33554432 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 67108864 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 134217728 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8389120 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8389632 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8390656 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8392704 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8396800 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8395776 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8390656 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8392704 := 15032385536&1073741821
band: (band[34] (shl[64] (bv2int %0) (mod #283 64)) (if (= #667 63) 0 (if #669 1 #821))) 0 := 15032385536&1073741821
band: (band[34] (shl[34] (bv2int %0) (mod #101 34)) (if (= #555 33) 1 (if #557 3 #648))) 8389632 := 15032385536&1073741821
(smt.stats   48   6434 159416 604404  7395/7083/587   15809/3451    41  349   24.84)
(smt.stats   49   6581 166770 639958  7488/7222/611   16252/3588    42  458   25.03)
(smt.stats   50   6742 175430 669651  7504/7234/615   16585/3677    43  497   25.12)
ramon: poll                 wall=8.000s usage=7.886s mem=26684KiB load=1.00 rootload=0.98
(smt.stats   51   6919 183460 699124  7630/7363/616   17234/3744    44  504   25.31)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 193709 726470  7752/7466/619   17887/3752    44  504   25.31)
(smt.stats   53   7326 203351 773132  7964/7499/619   18348/3756    44  504   25.53)
ramon: poll                 wall=9.000s usage=8.886s mem=26948KiB load=1.00 rootload=1.00
(smt.stats   54   7560 213230 812358  8018/7744/626   19039/4002    45  511   25.72)
(smt.stats   55   7661 218174 836673  8110/7835/628   19222/4092    46  534   25.72)
(smt.stats   56   7772 222268 852837  8161/7854/628   19365/4093    46  534   25.72)
(smt.stats   57   7894 227227 874680  8248/7903/628   19726/4118    47  538   25.72)
ramon: poll                 wall=10.000s usage=9.885s mem=27232KiB load=1.00 rootload=1.00
(smt.stats   58   8028 231033 894273  8323/7995/628   20280/4120    47  538   25.82)
(smt.stats   59   8175 237488 928542  8391/8118/631   20680/4367    48  538   26.07)
(smt.stats   60   8336 246254 963640  8512/8130/631   21081/4427    49  541   26.17)
ramon: poll                 wall=11.003s usage=10.887s mem=27808KiB load=1.00 rootload=1.00
(smt.stats   61   8513 252798 999952  8565/8258/631   21725/4427    49  541   26.43)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8708 257764 1037474  8599/8312/632   22578/4500    50  544   26.54)
(smt.stats   63   8921 268858 1094709  8627/8343/632   23227/4503    50  544   26.54)
ramon: poll                 wall=12.000s usage=11.883s mem=28084KiB load=1.00 rootload=1.00
(smt.stats   64   9155 281952 1144143  8659/8373/632   23657/4505    50  544   26.64)
(smt.stats   65   9412 292335 1198216  8703/8415/632   24361/4506    50  544   26.74)
(smt.stats   66   9513 294393 1206620  8823/8490/632   24509/4509    50  544   26.74)
(smt.stats   67   9624 296331 1230751  8890/8579/633   24631/4818    51  545   26.84)
(smt.stats   68   9746 298800 1250881  8970/8654/633   24764/4818    51  545   26.84)
ramon: poll                 wall=13.000s usage=12.882s mem=28340KiB load=1.00 rootload=1.00
(smt.stats   69   9880 302130 1264797  9077/8693/633   24926/4823    51  545   26.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 306019 1279080  9131/8801/633   25066/4826    51  545   26.94)
(smt.stats   71  10188 309545 1288799  9319/8840/633   25276/4834    51  545   26.94)
(smt.stats   72  10365 314067 1317288  9730/9119/633   25540/4838    51  545   27.13)
ramon: poll                 wall=14.003s usage=13.886s mem=28852KiB load=1.00 rootload=1.00
(smt.stats   73  10559 316443 1330278 10156/9521/633   25868/4844    51  545   27.32)
(smt.stats   74  10772 319277 1356474 10780/9995/633   26571/4847    51  545   27.51)
ramon: poll                 wall=15.000s usage=14.882s mem=29108KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   75  11006 321369 1367377 11152/10534/636   27069/5025    52  556   27.70)
ramon: poll                 wall=16.000s usage=15.882s mem=29620KiB load=1.00 rootload=1.00
(smt.stats   76  11263 326232 1395914 11536/10982/636   27818/5028    52  556   28.08)
ramon: poll                 wall=17.003s usage=16.886s mem=30132KiB load=1.00 rootload=1.00
(smt.stats   77  11545 334812 1443575 11769/11438/637   31084/5212    53  564   28.65)
(smt.stats   78  11646 340491 1472192 11926/11468/637   31694/5218    53  564   28.75)
ramon: poll                 wall=18.000s usage=17.882s mem=30644KiB load=1.00 rootload=1.00
(smt.stats   79  11757 346291 1504213 12024/11619/637   32194/5227    53  564   28.94)
(smt.stats   80  11879 354024 1542924 12096/11707/637   33090/5228    53  564   29.04)
(smt.stats   81  12013 360278 1560683 12242/11807/637   33852/5231    53  564   29.23)
ramon: poll                 wall=19.000s usage=18.881s mem=31036KiB load=1.00 rootload=0.99
(smt.stats   82  12160 367062 1601164 12347/11949/637   35056/5233    53  564   29.42)
(smt.stats   83  12321 375406 1634459 12439/12039/637   35644/5233    53  564   29.51)
ramon: poll                 wall=20.003s usage=19.885s mem=31292KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:48:40 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.030s
ramon: group.total          19.963s
ramon: group.utime          19.927s
ramon: group.stime          0.036s
ramon: group.mempeak        31552KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              0.99
