ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:39:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29375 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5C2gWmxv4RT3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             629390
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&4
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 4 := 2048 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1125899906842624
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1125899906842624 := 2305843009213693952 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&3
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 3 := 2305843009213693952 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&3
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 3 := 2305843009213693952 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&2
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1125899906842625 := 1125899906842624 >>l 49
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&2
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 2 := 2305843009213693952 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&2
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1125899906842625 := 1125899906842624 >>l 49
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 2048 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 562949953421313 := 562949953421312 >>l 49
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 1152921504606846976 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 562949953421313 := 562949953421312 >>l 49
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 2048 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 562949953421313 := 562949953421312 >>l 49
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 9223372036854773760 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 1 := 8&7
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&7
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 1 := 8&7
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&7
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 2 := 8&7
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 2 := 8&7
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&7
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 4 := 8&7
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&5
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 5 := 5764607523034232832 >>l 60
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&4
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 4 := 8&4
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&4
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 4 := 8&4
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&4
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 4 := 8&4
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 1 := 8&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 1 := 8&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 1 := 8&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 1 := 8&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 1 := 8&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 1 := 8&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&2
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 2 := 8&2
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 1 := 8&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 8&1
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 1 := 8&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 1 := 8&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 2 := 8&2
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 4 := 8&4
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 4 := 8&4
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 4 := 8&4
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   103.093     10000        49          0            1        2)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 4 := 8&4
(smt.stats    0    101   5198    866  1309/1177/174     100/25    10   33   52.35)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 1&2
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 2 := 2305843009213693952 >>l 63
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 1&2
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 2 := 3458764513820538880 >>l 63
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 1&2
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 2 := 2305843009213693952 >>l 63
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 1&2
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 2 := 2305843009213693952 >>l 63
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 1&2
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 2 := 2305843009213693952 >>l 63
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 1&3
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 1&2
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 2 := 3458764513820538880 >>l 63
(smt.stats    1    202   7219   2638  2608/2353/186     204/41    13   44   52.54)
(sat.ddfw       1      1   53.7688     20001        98          1            1        3)
(smt.stats    2    313  11573   5230  2688/2401/186     317/46    13   44   52.84)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 4503599627370496 := 4611686018427385856 >>l 14
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 4611686018427385856 >>l 14
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 4611686018427381760 >>l 14
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 15 >>l 3
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 8 >>l 3
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 8 >>l 3
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 8 := 9 >>l 3
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 8 := 15 >>l 3
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 2305843009213693952 >>l 14
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 2305843009213693952 >>l 14
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 562949953421312&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 2305843009213693952 >>l 14
(smt.stats    3    414  14408   6933  2730/2461/198     415/50    15   49   52.84)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 1 := 562949953421312&1
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 2 := 562949953421312&50
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 8 := 562949953421312&50
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 16 := 562949953421312&50
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 32 := 562949953421312&50
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 64 := 562949953421312&70368744177660
(sat.ddfw       1      1   54.3478     40001       196          2            1        5)
(smt.stats    4    525  18480   8639  2782/2511/226     559/59    16   51   53.06)
(smt.stats    5    647  22733  12418  2819/2525/226     689/69    17   61   53.19)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 2&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 2305843009213693952 >>l 62
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 2&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 281474976710657 := 2251799813685248 >>l 51
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 2&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 2305843009213693952 >>l 62
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 2&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 281474976710657 := 2251799813685248 >>l 51
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 2&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 4611686018427387904 >>l 62
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 2&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 281474976710657 := 2251799813685248 >>l 51
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 2&1
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1 := 2305843009213693952 >>l 62
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 2&1
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 281474976710657 := 2251799813685248 >>l 51
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 0 := 4611686018427387904 >>l 62
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 2 := 2&2
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 2 := 4611686018427387904 >>l 62
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 2 := 2&2
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 2 := 9223372036854773760 >>l 62
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  24959  14547  2873/2599/239     800/85    19   64   53.19)
(smt.stats    7    859  29026  17609  2923/2629/239     929/92    20   65   53.40)
(sat.ddfw       1      1   47.2441     70001       343          3            1        8)
(smt.stats    8    981  32904  20348  3015/2685/239    1072/97    20   65   53.40)
(smt.stats    9   1115  38024  25063  3078/2789/242    1288/142    22   66   53.62)
ramon: poll                 wall=1.000s usage=0.938s mem=56140KiB load=0.94 rootload=0.92
(smt.stats   10   1216  42268  31511  3089/2804/242    1401/142    22   66   53.75)
(sat.ddfw       1      1     39.96    110001       539          4            1       12)
(smt.stats   11   1327  48732  39419  3090/2810/242    1511/142    22   66   53.85)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  52702  45072  3126/2812/242    1651/145    22   66   53.85)
(smt.stats   13   1583  55777  49310  3170/2888/246    1812/174    24   70   53.85)
(sat.ddfw       1      1   34.4821    160000       784          5            1       17)
(smt.stats   14   1730  60193  55373  3269/2903/246    1971/178    24   70   54.04)
(smt.stats   15   1831  63715  60724  3361/3066/249    2078/187    25   73   54.04)
(smt.stats   16   1942  66899  66247  3381/3101/250    2210/194    26   76   54.14)
(smt.stats   17   2064  69715  71036  3405/3108/252    2335/194    26   76   54.14)
ramon: poll                 wall=2.000s usage=1.936s mem=56424KiB load=1.00 rootload=1.00
(smt.stats   18   2198  72634  77277  3431/3147/253    2484/219    28   85   54.24)
(sat.ddfw       1      1   30.1059    220001      1078          6            1       23)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 2080 := 68719476736&2080
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 68719476376 := 68719476736&68719476376
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 68719476240 := 68719476736&68719476240
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 68719476360 := 68719476736&68719476360
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 68719476360 := 68719476736&68719476363
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 68719476480 := 68719476736&68719476483
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 68719476480 := 68719476736&68719476480
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 512 := 68719476736&512
(smt.stats   19   2345  75132  82362  3667/3387/279    2751/240    29   90   54.33)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 192 := 68719476736&192
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 192 := 68719476736&192
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 192 := 68719476736&192
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 192 := 68719476736&192
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 192 := 68719476736&193
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 192 := 68719476736&193
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 192 := 68719476736&193
(smt.stats   20   2506  78316  89648  3769/3392/279    3040/243    29   90   54.33)
(smt.stats   21   2607  79567  93211  3793/3491/284    3173/279    30   91   54.46)
(smt.stats   22   2718  81062  96928  3809/3525/284    3301/287    30   91   54.55)
(sat.ddfw       1      1   26.6768    290001      1421          7            1       30)
(smt.stats   23   2840  83229 100362  4285/3790/284    3438/294    30   91   54.84)
(smt.stats   24   2974  85352 109001  4370/4086/284    3697/321    31   91   54.84)
(smt.stats   25   3121  88971 112179  4461/4116/289    3888/373    32  106   54.96)
ramon: poll                 wall=3.000s usage=2.936s mem=57396KiB load=1.00 rootload=1.00
(smt.stats   26   3282  93494 127948  4606/4247/289    4095/373    32  106   55.14)
(smt.stats   27   3459  98065 137577  4671/4345/289    4280/376    32  106   55.14)
(smt.stats   28   3560 100967 143491  4684/4384/289    4380/376    32  106   55.14)
(smt.stats   29   3671 103829 149405  4722/4406/289    4546/376    32  106   55.14)
(smt.stats   30   3793 107614 157790  4745/4439/290    4671/428    33  111   55.25)
(sat.ddfw       1      1   23.9234    370001      1813          8            1       38)
(smt.stats   31   3927 110326 167054  4770/4460/290    4830/431    33  111   55.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 112449 175242  4787/4493/290    5151/431    33  111   55.25)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&562949953421303
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&562949953421303
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&513
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&1024
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 36028797018964992 := 1152921504606830592 >>l 54
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&513
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&1024
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 27021597764224000 := 1152921504606830592 >>l 54
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&513
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&1024
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 27021597764224000 := 1152921504606830592 >>l 54
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&63
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 562949953421304 >>l 43
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&63
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 562949953421304 >>l 43
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&63
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 562949953421304 >>l 43
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&63
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 562949953421304 >>l 43
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&63
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 0 := 562949953421304 >>l 43
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&64
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 64 := 512&64
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&64
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 64 := 512&64
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&64
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 56 := 512&64
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&64
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 16 := 512&64
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 512&64
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 32 := 512&64
(smt.stats   33   4235 115517 183534  4930/4567/317    5348/510    34  115   55.48)
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&1125899906842625
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 1125899906842625 := 2305843009213693952 >>l 57
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&334
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&73
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&191
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 191 := 147456 >>l 57
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&334
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&319
lshr: (lshr[64] (* 2048 (bv2int %0)) (mod (+ 63 #611 #615) 64)) 319 := 638976 >>l 57
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&16
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1125899906842625 := 1125899906842625 >>l 46
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&16
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1125899906842631 := 1125899906842631 >>l 46
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&16
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1125899906842631 := 1125899906842631 >>l 46
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&16
lshr: (lshr[52] (bv2int %0) (+ 52 (* 4503599627370495 #108))) 1125899906842625 := 1125899906842625 >>l 46
band: (band[52] (if (= #330 63) 9223372036854775808 (if #475 4611686018427387904 #472)) (lshr[64] (* 2048 #314) (mod #618 64))) 0 := 64&16
band: (band[52] (if (= #112 51) 2251799813685248 (if #497 1125899906842624 #597)) (lshr[52] (bv2int %0) (+ 52 #600))) 8 := 64&16
(smt.stats   34   4412 118641 193582  5033/4717/361    5676/543    35  133   55.77)
ramon: poll                 wall=4.000s usage=3.936s mem=58164KiB load=1.00 rootload=0.99
(smt.stats   35   4606 121594 205384  5138/4795/362    5924/544    35  133   55.87)
(sat.ddfw       1      1   21.6659    460001      2254          9            1       47)
(smt.stats   36   4707 125640 212123  5159/4816/362    6103/556    36  136   56.08)
(smt.stats   37   4818 129296 218356  5214/4845/362    6353/558    36  136   56.08)
(smt.stats   38   4940 131895 229139  5275/4945/364    6572/581    37  139   56.19)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 134852 237315  5337/4974/367    6974/585    37  139   56.29)
(smt.stats   40   5221 141600 250625  5355/5023/367    7128/647    38  158   56.65)
ramon: poll                 wall=5.000s usage=4.934s mem=58676KiB load=1.00 rootload=1.00
(smt.stats   41   5382 147865 266696  5411/5063/369    7520/685    39  168   56.65)
(sat.ddfw       1      1   19.8255    560001      2745         10            1       57)
(smt.stats   42   5559 151885 278427  5418/5082/374    7790/694    40  176   56.75)
(smt.stats   43   5753 159623 299542  5448/5093/374    8131/695    40  176   56.75)
(smt.stats   44   5966 164465 314279  5532/5200/375    8547/751    41  192   56.85)
(smt.stats   45   6067 167452 324382  5543/5211/375    8934/751    41  192   56.85)
(smt.stats   46   6178 170151 335302  5549/5217/375    9122/903    42  196   57.14)
(smt.stats   47   6300 173896 349535  5585/5239/375    9411/903    42  196   57.14)
ramon: poll                 wall=6.002s usage=5.938s mem=59188KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.3211    670001      3284         11            1       68)
(smt.stats   48   6434 177491 362451  5607/5265/375    9873/903    42  196   57.14)
(smt.stats   49   6581 180880 375891  5641/5287/375   10120/904    42  196   57.14)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 185154 393186  5678/5330/376   10353/1037    43  196   57.23)
(smt.stats   51   6920 191533 413871  5738/5390/377   10626/1041    43  196   57.23)
ramon: poll                 wall=7.000s usage=6.933s mem=59444KiB load=1.00 rootload=1.00
(smt.stats   52   7114 196243 437747  5756/5396/377   10897/1063    44  198   57.33)
(sat.ddfw       1      1   16.9635    790001      3872         12            1       80)
(smt.stats   53   7327 200882 465880  5760/5408/377   11307/1063    44  198   57.33)
(smt.stats   54   7561 205310 491602  5763/5415/377   11883/1063    44  198   57.43)
(smt.stats   55   7662 209549 507427  5765/5417/377   12018/1063    44  198   57.82)
(smt.stats   56   7773 214634 522725  5770/5421/377   12207/1063    44  198   57.82)
(smt.stats   57   7895 217577 539939  5771/5421/377   12393/1063    44  198   57.97)
(smt.stats   58   8029 219198 550610  5788/5435/378   12674/1157    45  207   57.97)
ramon: poll                 wall=8.000s usage=7.934s mem=59956KiB load=1.00 rootload=1.00
(smt.stats   59   8176 220670 565010  5795/5435/378   12829/1157    45  207   57.97)
(smt.stats   60   8337 224044 585416  5811/5445/378   13079/1158    45  207   57.97)
(sat.ddfw       1      1   15.8112    920001      4509         13            1       93)
(smt.stats   61   8514 226400 602806  5825/5466/378   13351/1158    45  207   58.11)
(smt.stats   62   8708 231366 633904  5826/5473/378   13559/1158    45  207   58.11)
(smt.stats   63   8921 237851 671615  5830/5477/378   13844/1158    45  207   58.11)
(smt.stats   64   9155 241360 686778  5846/5487/380   14172/1250    46  238   58.11)
ramon: poll                 wall=9.002s usage=8.934s mem=60528KiB load=1.00 rootload=1.00
(smt.stats   65   9412 248849 722444  5864/5509/380   14498/1250    46  238   58.36)
(smt.stats   66   9513 250348 732527  5870/5515/381   14630/1279    47  241   58.36)
(smt.stats   67   9624 252732 744297  5884/5526/382   14788/1279    47  241   58.47)
(smt.stats   68   9746 256098 760974  5889/5534/382   14986/1279    47  241   58.47)
(sat.ddfw       1      1   14.7992   1060001      5196         14            1      108)
(smt.stats   69   9880 259997 784975  5889/5534/382   15167/1287    48  243   58.47)
(smt.delete-inactive-clauses  :num-deleted-clauses 102)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10027 263763 805638  5892/5537/383   15281/1295    49  254   58.47)
ramon: poll                 wall=10.000s usage=9.931s mem=60784KiB load=1.00 rootload=1.00
(smt.stats   71  10188 267488 827053  5923/5543/383   15526/1296    49  254   58.59)
(smt.stats   72  10365 271665 844226  6121/5574/383   15818/1299    49  254   58.68)
(smt.stats   73  10559 274275 858246  6279/5856/383   16177/1300    49  254   58.78)
(sat.ddfw       1      1   13.9211   1210001      5931         15            1      123)
(smt.stats   74  10772 283415 888596  6317/5954/383   16605/1300    49  254   58.78)
ramon: poll                 wall=11.000s usage=10.932s mem=61040KiB load=1.00 rootload=1.00
(smt.stats   75  11006 289230 910154  6328/5973/383   17189/1300    49  254   58.90)
(smt.stats   76  11263 299190 945302  6353/5977/383   17645/1301    49  254   58.90)
(smt.stats   77  11545 306500 983691  6368/6011/386   18164/1473    50  257   59.01)
ramon: poll                 wall=12.000s usage=11.931s mem=61552KiB load=1.00 rootload=1.00
(smt.stats   78  11646 309020 999488  6440/6028/386   18344/1475    50  257   59.13)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11757 312421 1015961  6444/6085/386   18552/1475    50  257   59.76)
(sat.ddfw       1      1   13.1126   1370001      6715         16            1      139)
(smt.stats   80  11879 315240 1028368  6456/6087/386   18755/1475    50  257   59.76)
(smt.stats   81  12013 316924 1040425  6473/6102/386   18881/1502    51  285   59.76)
(smt.stats   82  12160 321276 1067514  6483/6116/386   19065/1502    51  285   59.86)
(smt.stats   83  12321 326929 1102702  6485/6126/387   19385/1502    51  285   59.86)
ramon: poll                 wall=13.000s usage=12.930s mem=61552KiB load=1.00 rootload=0.99
(smt.stats   84  12498 329358 1119768  6493/6131/387   19728/1521    52  296   59.86)
(smt.stats   85  12692 333740 1146654  6505/6140/387   20030/1521    52  296   59.86)
(smt.stats   86  12905 341201 1186261  6508/6149/388   20533/1521    52  296   59.98)
(smt.stats   87  13139 344461 1216733  6510/6151/388   20963/1590    53  302   59.98)
(sat.ddfw       1      1   12.3952   1540001      7549         17            1      156)
(smt.stats   88  13396 348683 1251599  6513/6153/388   21412/1590    53  302   59.98)
ramon: poll                 wall=14.000s usage=13.928s mem=62064KiB load=1.00 rootload=1.00
(smt.stats   89  13678 355342 1298381  6522/6161/388   21790/1590    53  302   60.08)
(smt.stats   90  13988 359538 1338076  6530/6167/388   22261/1590    53  302   60.08)
(smt.stats   91  14089 362006 1353081  6534/6173/388   22447/1590    53  302   60.20)
(smt.stats   92  14200 365155 1368132  6539/6174/388   22629/1591    53  302   60.56)
(smt.stats   93  14322 368185 1381714  6550/6187/388   22760/1591    53  302   60.56)
ramon: poll                 wall=15.000s usage=14.927s mem=62824KiB load=1.00 rootload=0.99
(smt.stats   94  14456 370767 1403260  6551/6188/388   22924/1591    53  302   60.66)
(smt.stats   95  14603 373176 1416245  6555/6192/388   23118/1591    53  302   60.66)
(smt.stats   96  14764 376772 1439291  6596/6193/388   23317/1593    53  302   60.66)
(sat.ddfw       1      1   11.7524   1720001      8431         18            1      174)
(smt.stats   97  14941 381025 1460529  6606/6243/388   23677/1593    53  302   60.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15135 387476 1494758  6616/6244/388   24000/1593    53  302   60.76)
ramon: poll                 wall=16.000s usage=16.059s mem=63056KiB load=1.13 rootload=1.14
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   99  15348 390668 1513952  6714/6299/389   24240/1713    54  302   60.76)
(smt.stats  100  15582 394956 1538582  6797/6386/389   24539/1716    54  302   60.85)
ramon: poll                 wall=17.002s usage=17.023s mem=63232KiB load=0.96 rootload=0.96
(smt.stats  101  15839 399826 1567291  7017/6622/390   24954/1719    54  302   60.95)
(sat.ddfw       1      1   11.1778   1910001      9362         19            1      193)
(smt.stats  102  16121 404155 1591941  7228/6854/391   25536/1730    55  302   61.04)
(smt.stats  103  16431 411589 1642920  7287/6868/391   26210/1731    55  302   61.14)
ramon: poll                 wall=18.000s usage=18.022s mem=63328KiB load=1.00 rootload=1.00
(smt.stats  104  16771 416684 1691272  7378/6941/391   26599/1731    55  302   61.14)
(smt.stats  105  16872 417691 1705707  7403/7024/391   26708/1731    55  302   61.25)
(smt.stats  106  16983 419795 1717642  7408/7045/393   26870/2036    56  312   61.25)
(smt.stats  107  17105 423577 1735325  7416/7053/393   27509/2036    56  312   61.45)
(sat.ddfw       1      1   10.6615   2110001     10343         20            1      214)
(smt.stats  108  17239 428624 1764242  7432/7062/393   28108/2036    56  312   61.45)
(smt.stats  109  17386 429731 1771588  7450/7087/393   28327/2036    56  312   61.56)
ramon: poll                 wall=19.000s usage=19.019s mem=63940KiB load=1.00 rootload=1.00
(smt.stats  110  17547 432162 1787937  7462/7099/393   28605/2036    56  312   61.56)
(smt.stats  111  17724 436451 1809612  7492/7104/393   28846/2036    56  312   61.56)
(smt.stats  112  17918 441051 1850613  7499/7136/393   29210/2036    56  312   61.56)
(smt.stats  113  18131 448305 1887576  7517/7154/393   29542/2036    56  312   61.68)
(smt.stats  114  18365 451604 1917262  7523/7160/393   29822/2036    56  312   61.68)
ramon: poll                 wall=20.002s usage=20.134s mem=63964KiB load=1.11 rootload=1.11
ramon: end                  Fri Nov  1 21:39:38 2024
ramon: root.execname        z3
ramon: root.utime           20.170s
ramon: root.stime           0.020s
ramon: group.total          20.208s
ramon: group.utime          20.180s
ramon: group.stime          0.028s
ramon: group.mempeak        64492KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.01
