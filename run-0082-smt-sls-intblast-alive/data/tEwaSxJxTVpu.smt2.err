ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:12:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27202 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tEwaSxJxTVpu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             946975
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   90.9091     10000        49          0            1        2)
(smt.stats    0    101   4034   1650  1283/1138/110      95/9     8   16   52.16)
(sat.ddfw       1      1   46.5163     20001        98          1            1        3)
(sat.ddfw       1      1   46.1894     40001       196          2            1        5)
(smt.stats    1    202   4588   2114  1893/1649/110     200/12     8   16   52.45)
(sat.ddfw       1      1   39.8406     70001       343          3            1        8)
(smt.stats    2    313   5870   3364  2010/1805/110     321/14     8   16   52.45)
ramon: poll                 wall=1.000s usage=0.935s mem=54676KiB load=0.94 rootload=0.93
(smt.stats    3    416   6954   4774  2083/1906/114     430/31     9   20   52.45)
(smt.stats    4    527   7398   5390  2097/1916/117     540/71    10   23   52.64)
(sat.ddfw       1      1   33.9847    110001       539          4            1       12)
(smt.stats    5    649   8982   7128  2489/2254/118     682/72    11   28   52.64)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    750  10468   8841  2536/2292/118     783/90    12   30   52.74)
(smt.stats    7    861  11951  11080  2713/2392/118     904/106    12   30   52.84)
(smt.stats    8    986  12584  13055  2957/2707/127    1022/158    13   31   52.93)
(smt.stats    9   1120  15241  14899  3002/2727/128    1156/167    14   69   52.93)
(sat.ddfw       1      1   29.2392    160000       784          5            1       17)
(smt.stats   10   1221  18641  17460  3023/2753/129    1261/168    14   69   53.04)
ramon: poll                 wall=2.000s usage=1.990s mem=55280KiB load=1.06 rootload=1.05
(smt.stats   11   1332  21109  19780  3063/2808/129    1380/175    15   69   53.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1454  23832  26772  3070/2818/129    1498/175    15   69   53.04)
(smt.stats   13   1588  24643  29028  3102/2820/130    1650/192    16   70   53.14)
(sat.ddfw       1      1   25.4673    220001      1078          6            1       23)
(smt.stats   14   1735  25633  33405  3148/2863/130    1812/193    16   70   53.14)
(smt.stats   15   1836  26632  36783  3152/2901/134    1918/219    17   77   53.14)
(smt.stats   16   1947  27334  39241  3153/2902/134    2028/219    17   77   53.27)
(smt.stats   17   2069  28551  41992  3162/2905/134    2152/219    17   77   53.37)
ramon: poll                 wall=3.000s usage=2.989s mem=55492KiB load=1.00 rootload=1.00
(smt.stats   18   2203  29976  48102  3218/2963/135    2289/227    18   80   53.37)
(sat.ddfw       1      1   22.5588    290001      1421          7            1       30)
(smt.stats   19   2350  32825  54069  3243/2973/135    2443/227    18   80   53.37)
(smt.stats   20   2511  34981  58290  3256/2995/135    2613/227    18   80   53.37)
(smt.stats   21   2612  35745  60243  3260/3009/135    2712/227    18   80   53.37)
(smt.stats   22   2723  37326  63776  3260/3009/135    2823/227    18   80   53.55)
(smt.stats   23   2845  38640  67037  3264/3013/135    2955/227    18   80   53.55)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 132&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 66 := 130&67
(smt.stats   24   2979  39701  71959  3277/3024/146    3089/249    19   83   53.55)
(smt.stats   25   3126  40393  75051  3279/3028/146    3236/249    19   83   53.55)
ramon: poll                 wall=4.000s usage=3.940s mem=55992KiB load=0.95 rootload=0.95
(smt.stats   26   3287  43164  82060  3280/3029/146    3396/249    19   83   53.69)
(sat.ddfw       1      1   20.1765    370001      1813          8            1       38)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 62 := 72057594037927742&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 56 := 72057594037927742&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 56 := 72057594037927742&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 56 := 72057594037927744&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 48 := 72057594037927744&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 4 := 72057594037927744&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 72057594037927744&67
(smt.stats   27   3464  45708  87728  3295/3044/168    3588/251    20   88   53.79)
(smt.stats   28   3565  46763  90847  3303/3049/168    3686/253    20   88   53.79)
(smt.stats   29   3676  49206  94287  3312/3059/171    3797/253    20   88   53.79)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 504403158265495552 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 504403158265495552 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 504403158265495552 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 504403158265495552 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 144115188075855872 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 0&4455666
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 144115188075855872 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 48 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 32 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 248 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 246 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 1 := 247 << 23
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455666 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455665 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455664 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455648 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4455616 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 128 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 2071986176&4455666
(smt.stats   30   3798  50808  98045  3428/3097/187    3913/263    21   92   54.08)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 512 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1024 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4096 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8192 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 16384 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32768 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 65536 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 131072 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 262144 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 524288 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1048576 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2097152 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4194304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 16384 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32768 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 65536 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 131072 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 65536 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 131072 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 262144 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 524288 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1048576 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2097152 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4194304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4194304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2621440 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2228224 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2129920 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8192 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2304 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2048 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 256 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 256 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 2 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 2 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 4 := 2071986176&4455666
(smt.stats   31   3932  52396 101637  3579/3297/372    4184/335    22  131   54.47)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4160 := 2071986176&4455666
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2071986176&4455666
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4160 := 2071986176&4455666
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4079  56443 110695  3647/3381/381    4382/336    22  131   54.66)
(smt.stats   33   4240  60566 119442  3666/3404/384    4539/422    23  165   54.76)
(smt.stats   34   4417  61012 119820  3829/3566/384    4722/422    23  165   55.22)
(sat.ddfw       1      1   18.2741    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.941s mem=57448KiB load=1.00 rootload=0.99
(smt.stats   35   4611  63499 127584  4406/4104/385    5116/448    24  167   55.49)
(smt.stats   36   4712  65037 134110  4445/4182/387    5285/633    25  173   55.59)
(smt.stats   37   4823  65846 140289  4453/4187/387    5404/633    25  173   55.59)
(sat.ddfw       1      1    17.618    560001      2745         10            1       57)
(smt.stats   38   4945  67899 149318  4469/4196/387    5705/718    26  177   55.59)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
ramon: poll                 wall=6.000s usage=6.167s mem=57816KiB load=1.23 rootload=1.23
(smt.stats   39   5079  70834 154319  4609/4218/387    5940/721    26  177   55.78)
(sat.ddfw       1      1   16.3642    670001      3284         11            1       68)
(smt.stats   40   5226  73449 163754  4639/4365/388    6140/960    27  178   55.78)
ramon: poll                 wall=7.000s usage=7.165s mem=58184KiB load=1.00 rootload=0.99
(smt.stats   41   5387  77048 180522  4654/4385/391    6360/989    28  178   55.78)
(smt.stats   42   5564  80041 195883  4669/4399/393    6645/1021    29  183   55.78)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 71908086677960728&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 15564290804832466968 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 71908086677960728&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 15564290804832466968 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 71908086677960848&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 216023274753816720 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 71908086677960848&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 216023274753816720 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037925891 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057593752813820 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057593752813819 := 1 << 1
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 1 := 2&1
(smt.stats   43   5758  82348 206818  4828/4550/405    6940/1078    30  192   56.08)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 2&1
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1 := 2&1
(smt.stats   44   5971  85639 221373  4865/4584/417    7258/1117    31  204   56.46)
(sat.ddfw       1      1   15.7192    790001      3872         12            1       80)
(smt.stats   45   6072  89520 230568  4887/4599/417    7480/1117    31  204   56.46)
(smt.stats   46   6183  93119 242348  4913/4611/417    7666/1120    31  204   56.72)
ramon: poll                 wall=8.000s usage=8.480s mem=58976KiB load=1.31 rootload=1.31
(smt.stats   47   6305  96076 249236  4979/4643/417    7840/1122    31  204   56.72)
(smt.stats   48   6439  99477 262028  5049/4725/417    8062/1123    31  204   56.81)
(sat.ddfw       1      1   14.6429    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=9.561s mem=58956KiB load=1.08 rootload=1.09
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   49   6586 103046 277824  5082/4791/420    8320/1346    32  207   56.91)
(smt.stats   50   6747 107412 291551  5130/4829/420    8533/1450    33  208   56.91)
ramon: poll                 wall=10.000s usage=10.646s mem=59096KiB load=1.09 rootload=1.08
(smt.stats   51   6924 109307 305261  5143/4865/420    8712/1450    33  208   57.00)
(smt.stats   52   7118 112875 320030  5147/4869/420    8943/1450    33  208   57.00)
(sat.ddfw       1      1   13.7174   1060001      5196         14            1      108)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 64 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 64 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 64 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 65 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 65 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 547&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 579&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 579 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 579&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 579 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 579&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 579 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 635&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 13979173243358020219 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 635&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 13979173243358020219 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 67 := 579&67
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 13979173243358020163 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 35 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 34 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 38273891105243136 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 38273891105243136 := 4562603367 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 16 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 4 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 4 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 64 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 64 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 32 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 16 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 16 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 4 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 2 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 1 := 584013230976&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013230976&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8 := 584013230976&67
(smt.stats   53   7331 119032 341622  5271/4871/420    9258/1467    33  208   57.24)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 32 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 32 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013223808&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8 := 584013223808&67
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (= #803 63) 0 (if #805 1 #935))) 0 := 584013223808&67
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 1 (if #627 2 #784))) 8 := 584013223808&67
ramon: poll                 wall=11.000s usage=11.646s mem=59844KiB load=1.00 rootload=1.00
(smt.stats   54   7565 125717 368857  5355/5046/477    9754/1604    34  218   57.33)
(smt.stats   55   7666 128750 382703  5402/5108/477    9885/1758    35  239   57.43)
(sat.ddfw       1      1   12.6786   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=12.683s mem=59704KiB load=1.04 rootload=1.03
(smt.stats   56   7777 133473 400346  5462/5111/477   10075/1763    35  239   57.43)
(smt.stats   57   7899 139478 420747  5557/5256/478   10343/1880    36  244   57.76)
ramon: poll                 wall=13.000s usage=13.633s mem=59828KiB load=0.95 rootload=0.95
(smt.stats   58   8033 142160 434601  5596/5273/478   10574/1883    36  244   57.85)
(sat.ddfw       1      1   11.7838   1370001      6715         16            1      139)
(smt.stats   59   8180 147982 453874  5648/5319/478   10769/1886    36  244   57.85)
ramon: poll                 wall=14.000s usage=14.633s mem=59976KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=15.633s mem=60632KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.0182   1540001      7549         17            1      156)
(smt.stats   60   8341 153325 475358  5841/5376/479   11229/1922    37  250   58.33)
ramon: poll                 wall=16.000s usage=16.687s mem=60664KiB load=1.05 rootload=1.06
(smt.stats   61   8518 158350 499148  5998/5614/479   11707/1925    37  250   58.43)
ramon: poll                 wall=17.000s usage=17.651s mem=60684KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   10.3609   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=18.529s mem=60812KiB load=0.88 rootload=0.88
(smt.stats   62   8712 165684 535027  6154/5786/483   12221/2135    38  252   58.53)
ramon: poll                 wall=19.000s usage=19.487s mem=60836KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   9.67167   1910001      9362         19            1      193)
ramon: poll                 wall=20.000s usage=20.414s mem=61100KiB load=0.93 rootload=0.93
ramon: end                  Fri Nov  1 23:13:17 2024
ramon: root.execname        z3
ramon: root.utime           20.460s
ramon: root.stime           0.020s
ramon: group.total          20.491s
ramon: group.utime          20.467s
ramon: group.stime          0.024s
ramon: group.mempeak        61104KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.02
