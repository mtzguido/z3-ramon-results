ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:29:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41314 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1248
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/XsuPR93J7778.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2998662
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4130   2461  1188/1063/103      93/12     7   16   19.25)
(smt.stats    1    202   4660   3230  2031/1844/107     200/36     9   21   19.34)
(smt.stats    2    313   5651   5096  2187/1958/107     318/99    10   22   19.44)
(smt.stats    3    414   6197   5825  2648/2422/109     431/125    11   23   19.54)
(smt.stats    4    525   6867   7679  2684/2454/118     558/162    13   29   19.63)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 0&2048
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 0 := 65536 >>l 53
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 0&2048
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 0 := 65536 >>l 53
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 0&2048
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 0 := 65536 >>l 53
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 0&2048
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 0 := 9007199254740992 >>l 53
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 0&2048
lshr: (lshr[48] (bv2int %1) (mod (bv2int %0) 48)) 137438953471 := 137438953471 >>l 37
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 0&2048
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 0 := 9007199254806528 >>l 53
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 0&2048
lshr: (lshr[48] (bv2int %1) (mod (bv2int %0) 48)) 1 := 137438953471 >>l 37
(smt.stats    5    649   7947   9740  2740/2507/125     689/172    14   32   19.63)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&2048
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 27021597764222976 >>l 53
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&2048
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 27021597764222976 >>l 53
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 2 := 2&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 4 := 4&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8 := 8&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 16 := 16&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 32 := 32&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 64 := 64&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 128 := 128&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 256 := 256&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 512 := 512&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 64 := 64&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 319 := 319&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 256 := 256&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 1024 := 1024&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 1024 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 256 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 1024 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 64 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 64 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 64 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 128 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 63 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 62 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 60 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 4 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 4 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 16 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 32 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 32 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 4 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 16 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 512 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8 := 8&2048
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    750   8824  12268  2904/2601/210     787/181    15   55   20.04)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&2048
lshr: (lshr[48] (bv2int %1) (mod (bv2int %0) 48)) 2 := 137438953472 >>l 37
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 1 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 2 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 4 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 8 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 16 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 32 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 64 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 128 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 264 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 264 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 272 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 272 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 272 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 272 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 272 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 264 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 264 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 264 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 8 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 32 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 64 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 32 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 64 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 32 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 32 := 2047&2048
(smt.stats    7    861  10137  17605  2978/2724/284     908/186    17   59   20.33)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2047&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 2 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 1 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 1 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 1 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 2 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 2 := 2047&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 1 := 1&2048
(smt.stats    8    983  11686  23078  3032/2787/319    1059/206    19   84   20.42)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 129&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 281474976710785 := 1179943102371069952 >>l 18
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 2045&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 2045 := 18437736874454810624 >>l 18
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 1179943102371069952 >>l 18
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 4501125726208&70368744177664
lshr: (lshr[48] (bv2int %1) (mod (bv2int %0) 48)) 130 := 18004502904832 >>l 2
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 4432406249472&70368744177664
lshr: (lshr[48] (bv2int %1) (mod (bv2int %0) 48)) 130 := 17729624997888 >>l 2
(smt.stats    9   1117  15816  26853  3066/2804/321    1226/234    20   93   20.52)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 34359738368&70368744177664
lshr: (lshr[48] (bv2int %1) (mod (bv2int %0) 48)) 130 := 137438953472 >>l 2
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 130&70368744177664
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 130 := 130&70368744177664
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 130&70368744177664
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 130 := 130&70368744177664
(smt.stats   10   1218  20057  31473  3160/2891/332    1344/252    22   97   20.61)
(smt.stats   11   1329  22969  37561  3223/2932/333    1569/270    23  104   21.09)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  26105  42917  3279/2963/333    1749/270    23  104   21.19)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 256 := 256&34359738368
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 256 := 256&34359738368
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 32 := 32&34359738368
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 32 := 32&34359738368
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 16 := 16&34359738368
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 16 := 16&34359738368
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&34359738368
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 18446744073709486080 >>l 29
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&34359738368
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 4647714815446351872 >>l 29
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&34359738368
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 4647714815446351872 >>l 29
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&34359738368
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 4647714815446351872 >>l 29
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&34359738368
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 4647714815446351872 >>l 29
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&34359738368
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 4647714815446351872 >>l 29
(smt.stats   13   1585  28958  50813  3309/3018/335    1912/327    24  104   21.19)
(smt.stats   14   1732  33436  58392  3339/3058/340    2050/339    25  110   21.19)
(smt.stats   15   1833  36586  64665  3388/3101/341    2159/343    26  110   21.19)
(smt.stats   16   1944  38048  69594  3394/3125/342    2276/353    27  111   21.36)
(smt.stats   17   2066  40885  75780  3403/3131/342    2405/355    28  115   21.36)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 16
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 16
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 0&0
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 281474976710656 := 18446744073709486080 >>l 16
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 131072 >>l 16
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1 := 131072 >>l 16
(smt.stats   18   2200  42196  80748  3423/3141/342    2573/356    28  115   21.36)
ramon: poll                 wall=1.000s usage=0.934s mem=22772KiB load=0.93 rootload=0.92
(smt.stats   19   2347  47494  91179  3447/3172/348    2718/364    29  118   21.45)
(smt.stats   20   2508  52184 101620  3459/3185/350    2914/382    31  123   21.69)
(smt.stats   21   2609  55189 108933  3477/3203/350    3011/382    31  123   21.69)
(smt.stats   22   2720  58035 113685  3530/3245/352    3179/422    32  130   21.69)
(smt.stats   23   2842  63107 120138  3535/3250/352    3315/422    32  130   21.69)
(smt.stats   24   2976  65067 127754  3543/3258/355    3511/435    33  138   21.69)
(smt.stats   25   3123  68327 135002  3548/3263/355    3747/435    33  138   21.78)
(smt.stats   26   3284  72604 147320  3558/3273/355    3911/476    34  158   21.78)
(smt.stats   27   3461  77008 157910  3617/3279/357    4117/485    35  158   21.78)
(smt.stats   28   3562  77983 161523  3628/3340/358    4254/487    36  159   21.89)
(smt.stats   29   3674  80683 171043  3634/3349/358    4386/487    36  159   21.89)
(smt.stats   30   3796  83749 178576  3649/3352/358    4515/500    37  162   21.89)
(smt.stats   31   3930  84959 187633  3652/3367/358    4721/500    37  162   21.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077  88146 198753  3675/3381/359    4904/506    38  165   21.99)
(smt.stats   33   4238  90915 207482  3681/3395/360    5068/507    38  165   21.99)
(smt.stats   34   4415  93415 219725  3702/3402/360    5245/520    39  167   22.26)
(smt.stats   35   4609  97229 233794  3721/3429/362    5479/524    40  184   22.35)
(smt.stats   36   4710  98222 241608  3735/3438/365    5589/555    41  190   22.35)
(smt.stats   37   4821  99707 249446  3738/3453/367    5676/561    42  215   22.35)
ramon: poll                 wall=2.000s usage=1.934s mem=23600KiB load=1.00 rootload=1.00
(smt.stats   38   4943 102825 261687  3750/3465/368    5807/561    42  215   22.35)
(smt.delete-inactive-clauses  :num-deleted-clauses 274)
(smt.stats   39   5077 105482 272448  3760/3475/369    5707/568    43  219   22.35)
(smt.stats   40   5224 107402 283124  3765/3480/369    5869/569    44  223   22.35)
(smt.stats   41   5385 111265 298387  3766/3481/369    6057/569    44  223   22.35)
(smt.stats   42   5562 115459 314334  3783/3497/370    4651/575    45 1826   22.45)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 17729624997890&4398046511104
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 1161946433486585858 := 1161928703861653504 >>l 22
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 17592186044418&4398046511104
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 299067162755074 := 1152921504606912512 >>l 22
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 17592186044417&4398046511104
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 299067162755073 := 1152921504606846976 >>l 22
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 17592186044417&4398046511104
lshr: (lshr[64] (* 65536 (bv2int %1)) (mod (+ 16 #100 #303) 64)) 299067162755073 := 1152921504606846976 >>l 22
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 293203100741&4398046511104
lshr: (lshr[48] (bv2int %1) (mod (bv2int %0) 48)) 4691249611860 := 18764998447440 >>l 6
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 293203100740&4398046511104
lshr: (lshr[48] (bv2int %1) (mod (bv2int %0) 48)) 4691249611845 := 18764998447408 >>l 6
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 293203100740&4398046511104
lshr: (lshr[48] (bv2int %1) (mod (bv2int %0) 48)) 4691249611845 := 18764998447384 >>l 6
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 512 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 512 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 512 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 512 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 512 := 4398046447104&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 512 := 4398046447104&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 1024 := 4398046447104&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 1024 := 4398046447104&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 2048 := 4398046447104&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 2048 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 2048 := 4398046446662&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 2048 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 4096 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8192 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 4096 := 4398046446719&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 16384 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 32768 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 65536 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 131072 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 262144 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 81920 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 98304 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 81920 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 81920 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 81920 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 98304 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 98304 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 98304 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 67584 := 4398046446719&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 67584 := 4398046446661&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 67584 := 4398046446719&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 65536 := 4398046446719&4398046511104
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 65536 := 4398046446661&4398046511104
(smt.stats   43   5756 118959 326933  3959/3618/423    4954/619    46 1828   22.82)
(smt.stats   44   5969 122773 342055  4223/3923/450    5285/656    47 1849   23.01)
(smt.stats   45   6070 125189 350596  4232/3932/453    5499/656    47 1849   23.11)
(smt.stats   46   6181 130468 367182  4268/3956/454    5784/756    48 1876   23.11)
(smt.stats   47   6303 134775 389548  4324/4007/454    6056/757    48 1876   23.30)
(smt.stats   48   6437 137340 400872  4443/4101/454    6273/757    48 1876   23.40)
(smt.stats   49   6584 140177 413572  4448/4110/457    6623/899    49 1878   23.40)
(smt.stats   50   6745 143967 432986  4454/4112/457    7013/912    50 1886   23.59)
(smt.stats   51   6922 149097 453820  4462/4124/460    7415/995    51 1891   23.69)
ramon: poll                 wall=3.000s usage=2.934s mem=25392KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions      )
(smt.stats   52   7117 154301 472305  4514/4167/461    7885/1005    52 1900   23.88)
(smt.stats   53   7330 159359 496946  4525/4178/464    8115/1106    54 1933   23.88)
(smt.stats   54   7564 169833 524903  4544/4197/469    8806/1122    55 1968   24.07)
(smt.stats   55   7665 172112 535360  4547/4200/471    8995/1233    56 1983   24.47)
(smt.stats   56   7776 176751 556116  4561/4211/471    9170/1233    56 1983   24.47)
(smt.stats   57   7898 181201 573692  4562/4212/471    9326/1233    56 1983   24.47)
(smt.stats   58   8032 184137 592335  4566/4216/471    9482/1233    56 1983   24.58)
(smt.stats   59   8179 186068 610330  4568/4218/471    9660/1233    56 1983   24.58)
(smt.stats   60   8340 186881 619926  4580/4227/472    9883/1237    57 1992   24.58)
(smt.stats   61   8517 191909 638535  4595/4239/472   10228/1237    57 1992   24.67)
ramon: poll                 wall=4.000s usage=3.934s mem=26284KiB load=1.00 rootload=1.00
(smt.stats   62   8711 206282 680293  4596/4240/472   10477/1237    57 1992   24.67)
(smt.stats   63   8924 216393 714310  4603/4247/473   10911/1296    58 2006   24.77)
(smt.stats   64   9158 225949 754991  4612/4256/473   11327/1296    58 2006   24.87)
(smt.stats   65   9415 238876 800830  4617/4261/473   11673/1296    58 2006   24.87)
(smt.stats   66   9516 241631 813548  4619/4263/474   11810/1330    59 2016   24.87)
(smt.stats   67   9627 242617 822403  4619/4263/474   11957/1330    59 2016   24.96)
(smt.stats   68   9749 244194 832016  4622/4266/474   12085/1330    59 2016   24.96)
(smt.stats   69   9883 248873 848816  4625/4269/475   12234/1338    60 2029   25.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 673)
(smt.stats   70  10030 250029 856423  4626/4270/475   11713/1338    60 2029   25.06)
(smt.stats   71  10191 253598 874191  4627/4271/475   11894/1338    60 2029   25.06)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions      )
(smt.stats   72  10368 260730 901470  4644/4284/475   12149/1338    60 2029   25.06)
ramon: poll                 wall=5.000s usage=4.934s mem=26540KiB load=1.00 rootload=1.00
(smt.stats   73  10562 263712 917059  4655/4295/476    9922/1362    61 4545   25.16)
(smt.stats   74  10775 270722 940850  4709/4300/476   10290/1365    61 4545   25.26)
(smt.stats   75  11009 272761 947341  4921/4356/476   10609/1376    61 4545   25.54)
(smt.stats   76  11266 277027 968853  5234/4811/476   10882/1376    61 4545   25.54)
ramon: poll                 wall=6.000s usage=5.934s mem=27308KiB load=1.00 rootload=1.00
(smt.stats   77  11548 279034 989388  5254/4886/477   11421/1465    62 4546   25.54)
(smt.stats   78  11649 279754 998698  5256/4891/477   11541/1466    62 4546   25.54)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   79  11760 281374 1009178  5260/4895/477   11715/1466    62 4546   25.64)
(smt.stats   80  11882 285277 1020157  5315/4895/477   11924/1468    62 4546   25.64)
(smt.stats   81  12016 287539 1030684  5382/5017/479   12171/1502    63 4547   25.64)
(smt.stats   82  12163 294626 1047866  5402/5027/479   12375/1503    63 4547   25.64)
(smt.stats   83  12324 298225 1059622  5438/5042/479   12729/1565    64 4548   25.73)
(smt.stats   84  12501 302384 1074107  5495/5082/479   13078/1569    64 4548   25.73)
(smt.stats   85  12695 306639 1100280  5594/5144/479   13312/1570    64 4548   25.83)
ramon: poll                 wall=7.000s usage=6.934s mem=27308KiB load=1.00 rootload=1.00
(smt.stats   86  12908 310930 1125878  5641/5250/479   13609/1570    64 4548   25.83)
(smt.stats   87  13142 319686 1167563  5685/5305/480   14205/1746    65 4551   25.83)
(smt.stats   88  13399 328864 1207458  5833/5328/480   14550/1749    65 4551   25.92)
(smt.stats   89  13681 335234 1243278  5863/5498/480   15123/1749    65 4551   25.92)
ramon: poll                 wall=8.000s usage=7.933s mem=27564KiB load=1.00 rootload=1.00
(smt.stats   90  13991 345149 1312108  5886/5511/480   15935/1750    65 4551   26.03)
(smt.stats   91  14092 346247 1320722  5900/5525/480   16074/1750    65 4551   26.14)
(smt.stats   92  14203 349345 1356781  5908/5539/480   16241/1750    65 4551   26.24)
(smt.stats   93  14325 352524 1393703  5918/5551/480   16464/1750    65 4551   26.35)
(smt.stats   94  14459 354417 1419924  5922/5551/480   16609/1750    65 4551   26.35)
(smt.stats   95  14606 355861 1432080  5934/5556/480   16781/1751    65 4551   26.35)
(smt.stats   96  14767 359735 1458439  5968/5567/480   17005/1751    65 4551   26.35)
(smt.stats   97  14944 360894 1479280  5985/5610/480   17210/1751    65 4551   26.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 528)
(smt.stats   98  15138 367326 1516777  5989/5622/480   16947/1751    65 4551   26.45)
ramon: poll                 wall=9.000s usage=8.909s mem=28176KiB load=0.98 rootload=0.97
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   99  15351 368883 1545719  6032/5623/480   17176/1751    65 4551   26.45)
(smt.stats  100  15585 377195 1576683  6044/5677/480   17428/1751    65 4551   26.45)
(smt.stats  101  15842 382660 1604170  6127/5700/481   17736/1939    66 4551   26.54)
(smt.stats  102  16124 387618 1623253  6185/5795/482   18362/1940    66 4551   26.67)
(smt.stats  103  16434 390809 1651478  6206/5827/482   18763/1940    66 4551   26.67)
ramon: poll                 wall=10.000s usage=9.909s mem=28432KiB load=1.00 rootload=1.00
(smt.stats  104  16774 399139 1701808  6276/5852/482   19313/2016    67 4562   26.86)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8 := 140737493401601&8
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8 := 140737493598215&8
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8 := 140737493532679&8
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8 := 140737493598215&8
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 8 := 140737493532679&8
(smt.stats  105  16875 400702 1722514  6470/5974/482   19468/2023    67 4562   26.86)
(smt.stats  106  16986 402531 1732139  6494/6118/487   19718/2048    68 4563   26.86)
(smt.stats  107  17108 406176 1743618  6503/6133/488   19959/2049    68 4563   27.05)
(smt.stats  108  17242 408673 1755922  6508/6137/488   20094/2050    68 4563   27.05)
(smt.stats  109  17389 410821 1771487  6518/6145/488   20273/2050    68 4563   27.05)
(smt.stats  110  17550 411869 1785504  6522/6155/488   20501/2112    69 4565   27.05)
(smt.stats  111  17727 412573 1794924  6548/6170/488   20671/2112    69 4565   27.05)
ramon: poll                 wall=11.000s usage=10.909s mem=28944KiB load=1.00 rootload=1.00
(smt.stats  112  17921 414151 1804809  6649/6201/488   20900/2114    69 4565   27.05)
(smt.stats  113  18134 417504 1828893  6713/6342/488   21119/2114    69 4565   27.86)
(smt.stats  114  18368 420413 1856680  6880/6405/489   21433/2215    70 4565   27.96)
(smt.stats  115  18625 424566 1884481  6926/6545/489   21712/2215    70 4565   28.05)
(smt.stats  116  18907 430709 1919329  7042/6633/490   22080/2281    71 4565   28.05)
ramon: poll                 wall=12.000s usage=11.909s mem=29964KiB load=1.00 rootload=1.00
(smt.stats  117  19217 442435 1968503  7178/6693/490   22805/2284    71 4565   28.15)
(smt.stats  118  19557 451289 2016869  7258/6854/491   23300/2315    72 4568   28.25)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats  119  19930 456779 2056274  7342/6909/492   23784/2317    72 4568   28.25)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
(smt.stats  120  20031 458061 2065833  7397/7019/492   23893/2373    73 4568   28.25)
(smt.stats  121  20142 461246 2086222  7414/7044/492   24027/2373    73 4568   28.34)
(smt.stats  122  20264 466702 2110285  7420/7050/492   24248/2373    73 4568   28.34)
ramon: poll                 wall=13.000s usage=12.908s mem=30220KiB load=1.00 rootload=1.00
(smt.stats  123  20398 470732 2141628  7426/7056/492   24475/2373    73 4568   28.34)
(smt.stats  124  20545 475275 2154918  7432/7062/493   24927/2417    74 4580   28.34)
(smt.stats  125  20706 481696 2181636  7440/7070/493   25322/2417    74 4580   28.44)
(smt.stats  126  20883 488433 2218595  7482/7073/493   25589/2417    74 4580   28.53)
(smt.stats  127  21077 490592 2249235  7717/7189/493   25913/2420    74 4580   28.63)
(smt.stats  128  21290 492753 2266413  7802/7408/493   26192/2420    74 4580   28.63)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1040&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 512 := 1040&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1040&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 512 := 1040&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1040&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 512 := 1040&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1536&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 512 := 1536&2048
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1536&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 512 := 1536&2048
ramon: poll                 wall=14.000s usage=13.908s mem=30536KiB load=1.00 rootload=1.00
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #602 63) 18446744073709551616 (if #604 9223372036854775808 #728))) 0 := 1536&2048
band: (band[48] (lshr[48] (bv2int %1) (mod #100 48)) (if (= #485 47) 140737488355328 (if #487 70368744177664 #579))) 1284 := 1536&2048
(smt.stats  129  21524 498363 2289107  7877/7440/493   26654/2426    74 4580   28.82)
(smt.stats  130  21781 507149 2342693  7919/7519/513   27142/2547    75 4584   28.82)
(smt.stats  131  22063 511939 2370535  7951/7567/514   27488/2562    76 4586   28.93)
(smt.stats  132  22373 514296 2399992  7966/7582/514   27799/2562    76 4586   28.93)
(smt.stats  133  22713 516822 2434803  7970/7598/514   28311/2562    76 4586   29.03)
(smt.stats  134  23086 519274 2479836  7980/7606/514   28866/2562    76 4586   29.03)
ramon: poll                 wall=15.000s usage=14.908s mem=31048KiB load=1.00 rootload=1.00
(smt.stats  135  23496 529450 2531338  8023/7640/514   29639/2562    76 4586   29.22)
(smt.stats  136  23597 530934 2544322  8053/7673/514   29742/2562    76 4586   29.22)
(smt.stats  137  23708 535436 2573353  8087/7674/514   29956/2563    76 4586   29.22)
(smt.stats  138  23830 538534 2587435  8096/7716/515   30112/2699    77 4588   29.22)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats  139  23964 541004 2601106  8105/7718/515   30283/2699    77 4588   29.22)
(smt.stats  140  24111 544924 2621275  8151/7755/515   30481/2701    77 4588   29.41)
(smt.stats  141  24272 548706 2650556  8156/7766/515   30655/2701    77 4588   29.41)
(smt.stats  142  24449 550549 2671107  8157/7767/515   30904/2701    77 4588   29.41)
ramon: poll                 wall=16.001s usage=15.912s mem=31304KiB load=1.00 rootload=1.00
(smt.stats  143  24643 558543 2701077  8162/7772/517   31392/2722    78 4626   29.51)
(smt.stats  144  24856 561853 2721379  8168/7774/517   31632/2722    78 4626   29.51)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  145  25090 568741 2761033  8271/7783/519   32220/2726    78 4626   29.71)
ramon: poll                 wall=17.000s usage=16.900s mem=31816KiB load=0.99 rootload=0.99
(smt.stats  146  25347 576972 2824554  8704/7913/519   32849/2800    79 4651   29.93)
(smt.stats  147  25629 583821 2877804  8799/8381/519   33701/2800    79 4651   30.03)
ramon: poll                 wall=18.000s usage=17.900s mem=31816KiB load=1.00 rootload=1.00
(smt.stats  148  25939 586371 2921468  8862/8472/519   34094/2800    79 4651   30.12)
(smt.stats  149  26279 599918 2982641  8918/8495/520   35122/2982    80 4680   30.22)
(smt.stats  150  26652 616838 3070443  8969/8548/520   36012/2983    80 4680   30.32)
ramon: poll                 wall=19.000s usage=18.899s mem=32072KiB load=1.00 rootload=0.99
(smt.stats  151  27062 628408 3152719  9257/8592/520   37304/2994    80 4680   30.60)
(smt.stats  152  27512 632862 3216296  9356/8957/520   38094/2994    80 4680   30.70)
(smt.stats  153  27613 635866 3236581  9358/8968/520   38278/2994    80 4680   30.70)
(smt.stats  154  27724 637895 3260766  9361/8968/520   38460/2994    80 4680   30.70)
ramon: poll                 wall=20.000s usage=19.899s mem=32584KiB load=1.00 rootload=1.00
(smt.stats  155  27846 641541 3292048  9364/8974/520   38632/2994    80 4680   30.70)
ramon: end                  Tue Dec 24 15:29:52 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.958s
ramon: group.utime          19.938s
ramon: group.stime          0.020s
ramon: group.mempeak        32844KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.00
