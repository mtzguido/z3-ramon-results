ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:55:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24861 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/l4wmvMWioSqa.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             137825
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4503    740  1189/1065/114      88/12    10   20   19.08)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 70368744177666 := 70368744177668 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 70368744177666 := 70368744177668 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 2 := 4 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088834 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 2 := 4 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088834 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 468361 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&2
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 4 := 468361&4
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8 := 468361&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 8 := 10 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 16 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 64 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 128 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 256 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 512 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 128 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 256 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 512 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 1024 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2048 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 4096 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8192 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8192 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 16384 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 65536 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 65536 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 131072 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 262144 := 468361&524288
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 512 := 468361&524802
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 30 := 468361&30
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 16 := 468361&16
(smt.stats    1    202   6639   2781  1555/1315/114     203/28    10   20   19.77)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&2
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 2 := 16 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 2 := 16 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 1 := 468361&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 1 := 2 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 1 := 468361&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 1 := 2 << 18
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 70368744177663 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 70368744177663 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&524288
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 70368744177663 := 35184372088833 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 1 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 4 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 8 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 4 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184439721983 := 35184439197825 << 19
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 1 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 1 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 4 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 468360 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 468352 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 468224 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 2 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 4 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 8 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 467968 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 466944 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 458752 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 16 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 32 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 64 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 128 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 256 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 32 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 32 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 64 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 64 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 128 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 16 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 16 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 16 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 512 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 1024 := 468361&35184439721984
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 468361&35184439721984
band: (band[46] (if (= #114 45) 1 (if #600 3 #727)) (shl[46] (bv2int %0) (+ 46 #730))) 512 := 468361&35184439721984
(smt.stats    2    313   9038   6629  1722/1564/336     324/62    18   82   19.96)
(smt.stats    3    414  10965   9114  2147/1954/343     428/77    21   91   20.06)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 1&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088833 := 35184372088832 << 1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 1&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088833 := 35184372088832 << 1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 1&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088833 := 35184372088832 << 1
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 1&0
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #110))) 35184372088320 := 35184372088832 << 1
(smt.stats    4    525  12665  11312  2556/2312/353     508/93    23  107   20.16)
(smt.stats    5    647  17047  15273  2624/2362/359     636/104    24  111   20.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  21391  20114  2667/2402/360     742/111    25  114   20.65)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 140737488355328 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373952 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373952 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373952 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373953 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373953 := 70368744177664 << 43
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 0 := 15715601375418&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704965373953 := 70368744177664 << 43
(smt.stats    7    859  23404  24186  2707/2463/366     859/118    26  118   20.74)
(smt.stats    8    981  25442  27325  2726/2482/373     979/140    27  130   20.84)
(smt.stats    9   1115  29865  34511  2753/2499/376    1117/142    28  135   20.95)
(smt.stats   10   1216  32040  39117  2806/2547/378    1235/162    30  137   21.14)
(smt.stats   11   1327  34853  43326  2850/2578/378    1395/164    30  137   21.14)
(smt.stats   12   1449  37040  47708  2884/2619/385    1557/177    31  138   21.24)
(smt.stats   13   1583  38772  50414  3070/2622/385    1834/213    32  146   21.52)
(smt.stats   14   1730  39605  53072  3430/2853/385    2130/215    32  146   21.72)
ramon: poll                 wall=1.000s usage=0.905s mem=23056KiB load=0.91 rootload=0.89
(smt.stats   15   1831  40666  57266  3612/3203/385    2479/215    32  146   21.82)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 793090 := 31431202750837&793104
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 793090 := 31431202750837&793104
(smt.stats   16   1942  43078  67275  3715/3454/386    2761/268    33  149   21.82)
(smt.stats   17   2064  45728  73711  3765/3463/388    3423/279    34  153   22.03)
(smt.stats   18   2198  48678  84275  3931/3539/388    3802/293    34  153   22.12)
(smt.stats   19   2345  50551  90596  4084/3703/389    4210/619    35  155   22.31)
(smt.stats   20   2506  52400  95383  4397/4065/389    4623/619    35  155   22.31)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   21   2607  54929 104979  4413/4151/389    4878/619    35  155   22.31)
(smt.stats   22   2718  58598 111066  4625/4155/389    5076/627    35  155   22.41)
ramon: poll                 wall=2.000s usage=1.905s mem=23908KiB load=1.00 rootload=1.00
(smt.stats   23   2840  63076 133049  4948/4450/389    5807/631    35  155   22.60)
(smt.stats   24   2974  67090 152214  5115/4703/389    6483/633    35  155   22.70)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559154
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559154
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559154
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559170
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559166
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559166
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559154
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 63488 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559172
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559176
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559172
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559176
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 26624 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 28672 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559172
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559172
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559176
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&559234
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&1048578
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&1048578
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&1048578
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 32768 := 31431202750837&1081346
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704966455298 := 70368744177664 << 44
(smt.stats   25   3121  70605 167930  5260/4958/432    7356/1068    36  165   23.08)
(smt.stats   26   3282  74800 179056  5327/5002/462    7833/1388    37  180   23.18)
(smt.stats   27   3459  79835 193629  5387/5105/462    8107/1395    37  180   23.18)
(smt.stats   28   3560  82184 201612  5427/5162/463    8295/1576    38  180   23.18)
(smt.stats   29   3671  86218 229771  5493/5182/465    8466/1661    39  186   23.27)
(smt.stats   30   3793  90854 257090  5515/5248/465    8799/1661    39  186   23.49)
(smt.stats   31   3927  95527 278192  5544/5261/466    9097/1929    40  189   23.49)
ramon: poll                 wall=3.000s usage=2.904s mem=24884KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4074  99331 303012  5632/5286/468   10186/2398    41  211   23.68)
(smt.stats   33   4235 102878 318540  5852/5431/468   10767/2405    41  211   23.78)
(smt.stats   34   4412 108064 354515  5975/5689/468   11203/2406    41  211   23.78)
(smt.stats   35   4606 112773 397127  6021/5743/473   11643/2923    43  236   23.87)
(smt.stats   36   4707 116775 419177  6054/5767/473   11829/2923    43  236   23.87)
ramon: poll                 wall=4.000s usage=3.904s mem=25432KiB load=1.00 rootload=0.99
(smt.stats   37   4818 120476 430730  6198/5783/473   12064/2933    43  236   24.15)
(smt.stats   38   4940 123982 443962  6322/6035/474   12415/3165    44  240   24.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   39   5074 128226 458993  6345/6044/474   12758/3165    44  240   24.25)
(smt.stats   40   5221 133128 476015  6429/6124/475   13045/3251    45  240   24.34)
(smt.stats   41   5382 141001 525049  6533/6202/476   13730/3513    46  240   24.44)
(smt.stats   42   5559 144697 550001  6578/6275/481   14242/3601    47  257   24.63)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 56 := 57&35184440246368
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 56 := 57&35184440246368
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 56 := 57&35184439197928
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 56 := 57&35184439197944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 35184439197944 := 8 << 5
(smt.stats   43   5753 150770 586908  6680/6353/485   15360/3622    48  268   24.82)
ramon: poll                 wall=5.000s usage=4.904s mem=26336KiB load=1.00 rootload=1.00
(smt.stats   44   5966 157847 625041  6699/6394/490   15767/3622    48  268   24.92)
(smt.stats   45   6067 163527 665168  6744/6430/492   16049/3658    49  286   25.01)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 481 := 31431202750837&4194304
(smt.stats   46   6178 166800 683930  6848/6513/493   16274/3751    50  288   25.01)
(smt.stats   47   6300 169170 697626  6932/6560/493   16509/3756    50  288   25.11)
(smt.stats   48   6434 172868 730670  6986/6672/495   17168/3911    51  297   25.11)
ramon: poll                 wall=6.000s usage=5.903s mem=27060KiB load=1.00 rootload=1.00
(smt.stats   49   6581 177646 760134  7009/6680/495   17690/3911    51  297   25.49)
(smt.stats   50   6742 181553 769335  7314/6778/495   18149/3919    51  297   25.59)
ramon: poll                 wall=7.000s usage=6.903s mem=27344KiB load=1.00 rootload=1.00
(smt.stats   51   6919 187134 796054  7606/7030/495   18824/3922    51  297   25.78)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 193970 812580  7703/7320/495   19244/3925    51  297   25.88)
(smt.stats   53   7326 201574 864323  7774/7404/496   19571/4318    52  301   26.06)
ramon: poll                 wall=8.000s usage=7.902s mem=27564KiB load=1.00 rootload=1.00
(smt.stats   54   7560 211020 918917  7840/7511/498   21014/4372    53  303   26.15)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70367128813568
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462509056
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462509056
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462511104
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462509056
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 47104 := 117090&70366462511104
(smt.stats   55   7661 214483 934331  7907/7529/498   21285/4588    54  304   26.25)
(smt.stats   56   7772 219456 962112  7995/7613/503   21950/4589    54  304   26.35)
(smt.stats   57   7894 225272 992389  8120/7686/503   22582/4736    55  305   26.71)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8028 229385 1008833  8197/7865/503   23441/4736    55  305   26.81)
(smt.stats   59   8175 233530 1039463  8224/7897/503   23900/4736    55  305   26.90)
ramon: poll                 wall=9.000s usage=8.902s mem=28400KiB load=1.00 rootload=1.00
(smt.stats   60   8336 235286 1045438  8529/7921/503   24112/4736    55  305   27.00)
(smt.stats   61   8513 237066 1066453  8809/8334/503   24406/4736    55  305   27.09)
(smt.stats   62   8707 242681 1126411  8864/8509/503   24845/4739    55  305   27.09)
ramon: poll                 wall=10.004s usage=9.905s mem=28660KiB load=1.00 rootload=1.00
(smt.stats   63   8920 249355 1191583  8874/8554/504   25806/5182    56  313   27.19)
(smt.stats   64   9154 258406 1228521  8918/8566/504   26391/5184    56  313   27.28)
(smt.stats   65   9411 267333 1307520  9045/8629/506   26918/5188    56  313   27.28)
(smt.stats   66   9512 270538 1338877  9056/8736/508   27225/5493    57  332   27.28)
ramon: poll                 wall=11.000s usage=10.901s mem=28928KiB load=1.00 rootload=1.00
(smt.stats   67   9623 276246 1374477  9089/8736/509   27543/5495    57  332   27.44)
(smt.stats   68   9745 281828 1414128  9221/8879/510   27933/5613    58  337   27.44)
(smt.stats   69   9879 285832 1427316  9287/8914/510   28194/5613    58  337   27.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 201)
(smt.stats   70  10026 290369 1451392  9345/8988/510   28310/5614    58  337   27.63)
ramon: poll                 wall=12.000s usage=11.901s mem=29096KiB load=1.00 rootload=1.00
(smt.stats   71  10187 297524 1494050  9494/9031/510   28720/5734    59  345   27.63)
(smt.stats   72  10364 304051 1531727  9704/9222/510   29109/5739    59  345   27.72)
(smt.stats   73  10558 310736 1577616  9795/9424/510   29762/5742    59  345   27.82)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 4 := 114&2097152
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 114&2097152
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 114&2097153
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 114&2097153
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 114&2097154
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 2097154 := 140737222017024 << 6
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 2 := 114&2097154
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 18446673704967471106 := 140736953581568 << 6
(smt.stats   74  10771 316042 1615734  9888/9545/523   30158/5991    60  345   27.91)
ramon: poll                 wall=13.000s usage=12.900s mem=29656KiB load=1.00 rootload=1.00
(smt.stats   75  11005 321954 1667441  9922/9598/525   31339/5993    60  345   28.01)
(smt.stats   76  11262 328553 1712918 10067/9718/526   31854/6188    61  381   28.10)
(smt.stats   77  11544 334964 1778388 10121/9770/526   32793/6188    61  381   28.31)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11645 337324 1798325 10201/9858/526   33114/6412    62  381   28.41)
(smt.stats   79  11756 338850 1808063 10235/9888/528   33261/6413    62  381   28.51)
ramon: poll                 wall=14.000s usage=13.900s mem=30060KiB load=1.00 rootload=1.00
(smt.stats   80  11878 341566 1828157 10243/9896/528   33391/6413    62  381   28.51)
(smt.stats   81  12012 343777 1853816 10251/9904/528   34149/6413    62  381   28.61)
(smt.stats   82  12159 347405 1899051 10276/9908/528   34436/6543    63  382   28.70)
(smt.stats   83  12320 354865 1985362 10282/9935/528   34831/6543    63  382   28.70)
(smt.stats   84  12497 359501 2037698 10330/9970/530   35736/6646    64  396   28.80)
(smt.stats   85  12691 363862 2070425 10338/9979/531   35999/6647    64  396   28.80)
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 3 := 3659&4279
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 4279 := 1048582 << 11
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 3 := 3659&4279
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 4279 := 70368752556016 << 11
band: (band[46] (if (= #357 63) 1 (if #577 3 #816)) (shl[64] (* 2 #338) (mod #831 64))) 3 := 3659&4279
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #823 #827) 64)) 4279 := 70368748372990 << 11
ramon: poll                 wall=15.000s usage=14.900s mem=30484KiB load=1.00 rootload=1.00
(smt.stats   86  12904 367760 2102505 10544/9996/531   36483/6716    65  413   28.99)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   87  13138 373995 2141198 10613/10257/536   37328/6716    65  413   29.08)
ramon: poll                 wall=16.000s usage=15.899s mem=31076KiB load=1.00 rootload=1.00
(smt.stats   88  13395 383673 2188853 10760/10261/536   38353/6726    65  413   29.47)
ramon: poll                 wall=17.000s usage=16.899s mem=31156KiB load=1.00 rootload=1.00
(smt.stats   89  13677 392832 2240493 10897/10510/538   39541/6910    66  414   29.47)
(smt.stats   90  13987 404503 2301281 10992/10556/538   41118/6912    66  414   29.76)
ramon: poll                 wall=18.000s usage=17.898s mem=31324KiB load=1.00 rootload=1.00
(smt.stats   91  14088 409757 2330856 11052/10641/538   41554/7262    67  418   29.85)
(smt.stats   92  14199 415063 2368238 11182/10712/538   42012/7267    67  418   29.95)
ramon: poll                 wall=19.000s usage=18.898s mem=31464KiB load=1.00 rootload=0.99
(smt.stats   93  14321 420797 2408145 11373/10886/538   42379/7269    67  418   29.95)
(smt.stats   94  14455 424810 2438197 11492/11043/538   43163/7270    67  418   30.15)
(smt.stats   95  14602 428749 2462250 11514/11149/538   43627/7271    67  418   30.24)
ramon: poll                 wall=20.004s usage=19.898s mem=32624KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:55:24 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.973s
ramon: group.utime          19.945s
ramon: group.stime          0.028s
ramon: group.mempeak        34464KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              0.99
