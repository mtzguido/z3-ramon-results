ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:51:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25013 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/icYIlVfyPQ0J.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             125813
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4786    610  1346/1220/116      93/10    10   31   19.37)
(smt.stats    1    202   6232   1150  2193/1864/116     218/12    10   31   19.66)
(smt.stats    2    313   7216   1643  2359/2096/117     337/20    11   33   19.76)
ramon: poll                 wall=1.004s usage=0.963s mem=20876KiB load=0.96 rootload=0.95
(smt.stats    3    414   7632   2075  2536/2294/117     450/20    11   33   19.85)
(smt.stats    4    525   9340   4596  2958/2681/123     583/88    14   37   19.95)
(smt.stats    5    647  14565   7005  3242/2991/124     790/100    16   39   20.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  18994   8736  3286/3034/127     894/135    17   42   20.04)
(smt.stats    7    859  22967  11964  3334/3059/127    1068/136    17   42   20.14)
(smt.stats    8    981  26099  15449  3386/3111/127    1222/136    17   42   20.14)
(smt.stats    9   1115  31132  18188  3463/3197/128    1418/243    18   44   20.14)
ramon: poll                 wall=2.000s usage=1.958s mem=21348KiB load=1.00 rootload=1.00
(smt.stats   10   1216  34446  19158  3513/3225/128    1527/243    18   44   20.25)
(smt.stats   11   1327  38356  22476  3606/3345/129    1681/319    19   45   20.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  40773  26449  3742/3493/130    1820/352    20   46   20.35)
(smt.stats   13   1583  44957  29333  3785/3498/136    1950/365    21   51   20.44)
(smt.stats   14   1730  48390  33038  3962/3681/137    2109/375    22   52   20.44)
(smt.stats   15   1831  50752  34862  4044/3730/137    2221/375    22   52   20.54)
(smt.stats   16   1942  53569  39097  4167/3887/137    2369/375    22   52   20.54)
ramon: poll                 wall=3.000s usage=2.957s mem=21788KiB load=1.00 rootload=1.00
(smt.stats   17   2064  56399  44275  4181/3927/137    2504/375    22   52   20.54)
(smt.stats   18   2198  59999  47048  4223/3951/137    2686/375    22   52   20.63)
(smt.stats   19   2345  66051  55032  4240/3985/137    2839/375    22   52   20.63)
(smt.stats   20   2506  69630  60551  4272/4013/137    3036/375    22   52   20.83)
(smt.stats   21   2607  71981  63643  4298/4026/137    3152/375    22   52   20.83)
(smt.stats   22   2718  75234  66680  4362/4060/137    3270/375    22   52   20.83)
(smt.stats   23   2840  76967  71866  4410/4133/137    3408/375    22   52   20.83)
(smt.stats   24   2974  78393  76322  4452/4185/137    3550/375    22   52   20.92)
(smt.stats   25   3121  84212  84790  4469/4218/138    3707/563    23   55   20.92)
(smt.stats   26   3282  85541  89333  4492/4234/138    3882/563    23   55   20.92)
ramon: poll                 wall=4.000s usage=3.957s mem=22116KiB load=1.00 rootload=1.00
(smt.stats   27   3459  87392  97729  4566/4306/139    4129/597    24   56   20.92)
(smt.stats   28   3560  88206 103223  4635/4331/139    4231/597    24   56   21.03)
(smt.stats   29   3671  88780 106700  4684/4404/140    4347/597    24   56   21.03)
(smt.stats   30   3793  89559 110823  4720/4449/140    4472/614    25   57   21.12)
(smt.stats   31   3927  90419 122938  4776/4476/140    4618/615    25   57   21.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  92561 130283  4798/4538/140    4767/615    25   57   21.12)
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&1
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&1
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&2
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&1
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&2
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&116
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&8
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&116
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&112
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&1
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&1
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&32
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 7 := 281474976710655&8
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 6 := 281474976710655&8
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 4 := 281474976710655&8
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&8
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&32
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&64
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&64
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&64
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&64
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&64
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 64 := 281474976710655&66
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 64 := 281474976710655&72
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&64
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&2
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 29 := 281474976710655&32
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&32
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 1 := 281474976710655&32
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 28 := 281474976710655&32
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 28 := 281474976710655&32
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 64 := 281474976710655&96
(smt.stats   33   4235  95176 139867  4909/4629/241    4950/641    27   75   21.53)
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 2 := 281474976710655&32
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 10 := 281474976710655&34
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 2 := 281474976710655&34
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 281474976710655&8
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 72 := 281474976710655&88
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 72 := 281474976710655&88
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 8 := 281474976710655&24
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 16 := 281474976710655&251920104156043536
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 16 := 281474976710655&251920104156043536
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 16 := 281474976710655&251920104156043536
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 16 := 281474976710655&251920104156043664
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 16 := 281474976710655&251920104156043664
(smt.stats   34   4412  97002 147467  5109/4681/247    5297/670    28   91   21.72)
(smt.stats   35   4606 100932 158375  5132/4867/277    5614/670    28   91   21.81)
(smt.stats   36   4707 105630 167253  5136/4883/277    5764/796    29   97   21.81)
(smt.stats   37   4818 109572 175937  5140/4887/278    5867/846    30  101   21.81)
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 320 := 1125899906842623&1025
ramon: poll                 wall=5.000s usage=4.956s mem=23056KiB load=1.00 rootload=1.00
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 320 := 1125899906842623&1024
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 512 := 1125899906842623&1024
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 512 := 1125899906842623&1024
(smt.stats   38   4940 110547 178259  5430/4903/278    6087/850    30  101   21.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 112)
(smt.stats   39   5074 114052 186046  5436/5182/283    6143/895    31  102   22.01)
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 72 := 1023&200
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 200 := 1023&200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #879 #883) 64)) 200 := 212 << 9
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 200 := 1023&200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #879 #883) 64)) 200 := 212 << 9
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 200 := 1023&200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #879 #883) 64)) 200 := 212 << 9
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 192 := 1023&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #879 #883) 64)) 192 := 212 << 9
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 192 := 1023&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #879 #883) 64)) 192 := 212 << 9
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 384 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 256 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 32 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 16 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #109))) 108545 := 106 << 10
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #109))) 108545 := 106 << 10
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #109))) 108545 := 106 << 10
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #109))) 108548 := 106 << 10
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #109))) 108546 := 106 << 10
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 8 := 1023&108544
(smt.stats   40   5221 116864 195725  5544/5284/301    6387/984    32  105   22.01)
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 512 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 512 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 1 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 2 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 4 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 8 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 16 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 32 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 64 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 128 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 256 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 512 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 16 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 2 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 4 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 4 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 2 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 1 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 2 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 16 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 16 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 8 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 8 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 128 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 256 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 512 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 384 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 256 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 256 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 256 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 128 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 128 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 64 := 1023&108544
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 0 := 1023&108544
band: (band[58] (if (= #113 57) 1 (if #632 3 #795)) (shl[58] (bv2int %0) (+ 58 #798))) 32 := 1023&108544
(smt.stats   41   5382 120180 207837  5633/5369/408    6562/1010    33  135   22.52)
(smt.stats   42   5559 127006 225332  5742/5433/409    6904/1015    34  150   22.61)
(smt.stats   43   5753 134154 246509  5757/5480/413    7174/1122    36  156   22.71)
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 160 := 68719476735&160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #879 #883) 64)) 160 := 160 << 35
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 192 := 68719476735&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #879 #883) 64)) 192 := 160 << 35
band: (band[58] (if (= #415 63) 1 (if #611 3 #872)) (shl[64] (* 2 #107) (mod #887 64))) 192 := 68719476735&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #879 #883) 64)) 192 := 160 << 35
(smt.stats   44   5966 138314 257360  5882/5601/421    7609/1178    37  175   22.82)
(smt.stats   45   6067 138504 262087  5891/5608/421    7725/1178    37  175   22.93)
(smt.stats   46   6178 138704 267051  5891/5608/421    7832/1203    38  179   22.93)
(smt.stats   47   6300 138891 276691  5892/5609/421    7953/1203    38  179   22.93)
(smt.stats   48   6434 139267 281589  5894/5611/421    8088/1203    38  179   23.03)
(smt.stats   49   6581 144806 291813  5924/5637/422    8317/1242    39  186   23.13)
ramon: poll                 wall=6.000s usage=5.955s mem=24484KiB load=1.00 rootload=0.99
(smt.stats   50   6742 148834 299218  6129/5645/422    8604/1258    39  186   23.61)
(smt.stats   51   6919 152668 310193  6435/5948/422    9034/1267    39  186   23.70)
ramon: poll                 wall=7.000s usage=6.955s mem=25096KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7113 159208 326731  6460/6161/424    9472/1381    40  189   23.70)
(smt.stats   53   7326 165524 360297  6473/6174/424    9902/1398    41  198   23.82)
(smt.stats   54   7560 171071 378335  6543/6204/430   10201/1459    42  199   24.02)
(smt.stats   55   7661 174549 389653  6750/6325/430   10488/1464    42  199   24.28)
ramon: poll                 wall=8.000s usage=7.954s mem=25800KiB load=1.00 rootload=1.00
(smt.stats   56   7772 176986 395926  6929/6472/430   10615/1505    43  210   24.47)
(smt.stats   57   7894 181038 406930  7173/6662/430   10896/1506    43  210   24.47)
(smt.stats   58   8028 184506 418053  7213/6862/430   11275/1508    43  210   24.66)
ramon: poll                 wall=9.000s usage=8.954s mem=26268KiB load=1.00 rootload=1.00
(smt.stats   59   8175 189552 437341  7265/6899/431   11916/1548    44  212   24.76)
(smt.stats   60   8336 191872 451201  7299/6948/433   12181/1549    44  212   24.86)
(smt.stats   61   8513 196911 474120  7314/6980/436   12943/1636    45  227   24.95)
(smt.stats   62   8707 204362 501630  7370/6992/436   13286/1778    46  243   24.95)
(smt.stats   63   8920 210902 528745  7605/7152/438   14061/1840    47  259   25.14)
(smt.stats   64   9154 220993 556678  7625/7290/438   14487/1840    47  259   25.24)
ramon: poll                 wall=10.000s usage=9.953s mem=26632KiB load=1.00 rootload=1.00
(smt.stats   65   9411 231153 597652  7806/7319/438   15481/1905    48  264   25.43)
(smt.stats   66   9512 233565 607505  7824/7491/438   15882/1905    48  264   25.43)
(smt.stats   67   9623 237161 625942  7833/7492/438   16179/1906    48  264   25.52)
ramon: poll                 wall=11.000s usage=10.953s mem=26968KiB load=1.00 rootload=1.00
(smt.stats   68   9745 241092 652870  7857/7520/439   16631/2233    49  273   25.62)
(smt.stats   69   9879 247849 688057  8025/7528/439   16936/2243    49  273   25.72)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   70  10026 251939 708386  8077/7744/440   17538/2277    50  275   25.72)
ramon: poll                 wall=12.000s usage=11.952s mem=27304KiB load=1.00 rootload=1.00
(smt.stats   71  10187 259575 752048  8138/7769/444   17923/2279    50  275   25.81)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10364 265293 774177  8208/7832/444   18079/2370    51  337   25.91)
(smt.stats   73  10558 270490 800407  8282/7899/444   18809/2372    51  337   26.00)
ramon: poll                 wall=13.000s usage=12.951s mem=27524KiB load=1.00 rootload=0.99
(smt.stats   74  10771 279835 841171  8417/7961/444   19247/2377    51  337   26.10)
(smt.stats   75  11005 287803 879438  8501/8099/444   19818/2386    51  337   26.10)
ramon: poll                 wall=14.000s usage=13.951s mem=27692KiB load=1.00 rootload=1.00
(smt.stats   76  11262 292759 900966  8525/8175/444   20435/2386    51  337   26.19)
(smt.stats   77  11544 301181 943532  8551/8218/444   21563/2386    51  337   26.29)
(smt.stats   78  11645 303456 958438  8570/8228/445   21796/2854    52  342   26.62)
(smt.stats   79  11756 305830 973107  8692/8243/445   22056/2856    52  342   26.71)
(smt.stats   80  11878 308161 992507  8949/8447/445   22567/2859    52  342   26.90)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   81  12012 310215 1009344  8992/8629/445   22956/2859    52  342   27.00)
ramon: poll                 wall=15.000s usage=14.950s mem=28564KiB load=1.00 rootload=1.00
(smt.stats   82  12159 315428 1045034  9075/8663/445   23765/2864    52  342   27.09)
(smt.stats   83  12320 321448 1086808  9229/8844/447   24280/3063    53  376   27.09)
ramon: poll                 wall=16.000s usage=15.950s mem=28776KiB load=1.00 rootload=1.00
(smt.stats   84  12497 326193 1101840  9346/8896/447   24982/3065    53  376   27.19)
(smt.stats   85  12691 336584 1165330  9453/9059/448   25836/3223    54  380   27.28)
(smt.stats   86  12904 344733 1204385  9630/9167/448   26279/3224    54  380   27.38)
ramon: poll                 wall=17.000s usage=16.948s mem=28980KiB load=1.00 rootload=1.00
(smt.stats   87  13138 352099 1245613  9853/9332/448   27425/3228    54  380   27.61)
ramon: poll                 wall=18.001s usage=17.948s mem=29808KiB load=1.00 rootload=0.99
(smt.stats   88  13395 363146 1340891 10106/9521/448   28616/3234    54  380   28.09)
ramon: poll                 wall=19.000s usage=18.947s mem=29824KiB load=1.00 rootload=1.00
(smt.stats   89  13677 375333 1422572 10228/9777/448   29963/3236    54  380   28.19)
(smt.stats   90  13987 384679 1485083 10438/9924/448   31832/3241    54  380   28.47)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   91  14088 387279 1505646 10443/10106/448   32395/3241    54  380   28.47)
ramon: poll                 wall=20.000s usage=19.946s mem=30124KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:51:36 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.992s
ramon: group.utime          19.976s
ramon: group.stime          0.016s
ramon: group.mempeak        30636KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.047s
ramon: loadavg              1.00
