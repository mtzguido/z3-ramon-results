ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:02:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27455 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/lLM1yPcANn6L.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             912555
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   106.383     10000        49          0            1        2)
(sat.ddfw       1      1   52.6368     20001        98          1            1        3)
(smt.stats    0    101   2902    335  1104/986/104     100/24     5   21   51.94)
(sat.ddfw       1      1   52.7704     40001       196          2            1        5)
(smt.stats    1    202   4115   1433  1431/1315/108     200/28     8   27   52.04)
(sat.ddfw       1      1   45.5927     70001       343          3            1        8)
(smt.stats    2    313   5424   2508  1703/1530/112     321/53    10   34   52.14)
(smt.stats    3    414   7942   3771  1832/1630/112     429/54    10   34   52.23)
(smt.stats    4    525   8756   5248  2246/2053/122     540/103    12   48   52.43)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1 := 1&2147483647
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 1 := 33857 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1 := 1&2147483647
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 1 := 33857 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1 := 1&2147483647
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 1 := 33857 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 0&2147483647
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 0 := 33857 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 0&2147483647
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 0 := 33857 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 2147483647 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 2147483646 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 2147483644 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 2147483640 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 16 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 64 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 128 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 256 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 512 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1024 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 2048 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 4096 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32768 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32768 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32768 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32768 := 4294967296&2147483647
(smt.stats    5    647   9788   6412  2497/2115/127     798/112    13   50   52.92)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 31282 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 31282 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 31282 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 31282 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 31282 := 4294967296&2147483647
ramon: poll                 wall=1.000s usage=0.943s mem=55052KiB load=0.94 rootload=0.93
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 24576 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 24576 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 24576 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 24576 := 4294967296&2147483647
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations         :lemmas          :deletions    )
(smt.stats    6    748  11410   9982  2692/2454/224    1102/251    16   82   53.02)
(smt.stats    7    859  12545  11032  2881/2488/234    1349/283    17  102   53.12)
(sat.ddfw       1      1   38.6847    110001       539          4            1       12)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 33829&3
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 33829&3
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 33829&3
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 33832&3
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145290153722920 := 33828 << 3
(smt.stats    8    981  14239  14257  3117/2897/238    1722/453    18  108   53.41)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 65536&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145281563820032 := 33826 << 1
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 65536&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145290153754624 := 33827 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 4294983680&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145285858738176 := 33827 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 4294967300&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145285858721796 := 33827 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 4294967297&1
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1 := 4294967297&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145285858721793 := 33827 << 2
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1 := 4294967297&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145285858721793 := 33827 << 2
(smt.stats    9   1115  17557  23992  3141/2936/265    2108/627    19  121   53.51)
(smt.stats   10   1216  19356  32328  3176/2967/265    2231/627    19  121   53.62)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1 := 4294983681&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1 := 4294983681&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1 := 4295032833&32767
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145406117871617 := 33808 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 4295032832&32767
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145406117871616 := 33808 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 8589926396&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 8589918208&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 8589901824&32767
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 145410412740608 := 33808 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
shl: (shl[33] (bv2int %0) (mod (bv2int %0) 33)) 32766 := 33808 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
shl: (shl[33] (bv2int %0) (mod (bv2int %0) 33)) 32767 := 33808 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
shl: (shl[33] (bv2int %0) (mod (bv2int %0) 33)) 32767 := 33808 << 16
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 32767 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 32766 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 32764 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 32760 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 32752 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 32736 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 19 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 18 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 16 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 8 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2215641088&32767
band: (band[33] (shl[33] (bv2int %0) (mod #114 33)) (if (= #568 32) 0 (if #570 1 #657))) 4 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 1 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 4 := 2215641088&32767
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 8 := 2215641088&32767
(smt.stats   11   1327  22728  40223  3327/3035/317    2401/860    20  132   53.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  25517  46368  3452/3239/353    2702/948    21  140   54.01)
(sat.ddfw       1      1   33.1558    160000       784          5            1       17)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 200768 := 200792&262143
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 200768 := 200792&262143
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 200768 := 200792&262143
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 200768 := 200792&262143
(smt.stats   13   1583  29020  50834  3568/3282/354    3137/953    21  140   54.22)
(smt.stats   14   1730  33947  55791  3750/3376/359    3535/1205    22  147   54.32)
(smt.stats   15   1831  36699  60710  4086/3618/359    3859/1367    23  147   54.54)
ramon: poll                 wall=2.000s usage=2.038s mem=56704KiB load=1.10 rootload=1.09
(smt.stats   16   1942  39489  70042  4255/4032/363    4356/1450    25  159   54.64)
(sat.ddfw       1      1    28.958    220001      1078          6            1       23)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 36&255
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 36&255
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&255
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 32 := 8589934560 << 9
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&255
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 32 := 8589934560 << 9
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&255
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 32 := 8589934560 << 9
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 64&127
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 48&127
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 64&127
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 48&127
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 48&127
(smt.stats   17   2064  43048  79269  4314/4039/364    4663/1458    25  159   54.93)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 40 := 40&127
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 40 := 8589934559 << 8
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 40 := 40&127
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 40 := 8589934559 << 8
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 36 := 36&127
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 36 := 8589934559 << 8
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 36 := 36&127
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 36 := 8589934559 << 8
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&131071
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 18446743979220271136 := 8589934569 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&131071
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 18446743979220271136 := 8589934569 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&131071
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 18446743979220271136 := 8589934569 << 18
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&262143
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 18446743979220271136 := 8589934570 << 19
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&262143
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 18446743987810205728 := 8589934570 << 19
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&262143
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 18446743987810205728 := 8589934570 << 19
(smt.stats   18   2198  46569  90241  4385/4147/396    5004/1592    27  167   55.03)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&2097151
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 18446744022169944096 := 8589934573 << 22
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32 := 32&2097151
shl: (shl[64] (bv2int %0) (mod (+ #114 #669 #665) 64)) 18446744030759878688 := 8589934573 << 22
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 64 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 4096 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 4096 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 4096 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 2048 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 16384 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 16384 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 16384 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 16384 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 16384 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 65536 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 65536 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32768 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32768 := 4294967296&2147483647
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 32768 := 4294967296&2147483647
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   19   2345  51572 104700  4501/4172/402    5466/1602    27  167   55.43)
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 4294967296&2147483647
shl: (shl[33] (bv2int %0) (mod (bv2int %0) 33)) 79 := 8589934583 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 4294967296&2147483647
shl: (shl[33] (bv2int %0) (mod (bv2int %0) 33)) 57 := 8589934583 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 4294967296&2147483647
shl: (shl[33] (bv2int %0) (mod (bv2int %0) 33)) 63 := 8589934583 << 32
band: (band[33] (shl[64] (bv2int %0) (mod #670 64)) (if (or #691 #692) 0 (if #693 1 #844))) 0 := 2&63
(smt.stats   20   2506  56256 126709  4570/4338/469    5804/1864    30  234   55.63)
(sat.ddfw       1      1   25.0716    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=3.001s mem=58096KiB load=0.96 rootload=0.96
(smt.stats   21   2607  59325 134194  4677/4398/473    6044/1867    30  234   56.01)
(sat.ddfw       1      1    22.409    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.996s mem=58408KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.3482    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.020s mem=58580KiB load=1.02 rootload=1.02
(smt.stats   22   2718  61872 138754  5087/4531/473    6159/1949    31  253   56.30)
(sat.ddfw       1      1   18.4843    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.976s mem=58848KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   17.0358    670001      3284         11            1       68)
(smt.stats   23   2840  62470 140234  5289/4853/473    6291/1956    31  253   56.39)
ramon: poll                 wall=7.000s usage=6.973s mem=58848KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   15.7957    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.946s mem=58760KiB load=0.97 rootload=0.98
(smt.stats   24   2974  63446 141830  5518/5203/473    6428/1957    31  253   56.87)
(sat.ddfw       1      1   14.7309    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.890s mem=59084KiB load=0.94 rootload=0.94
(smt.stats   25   3121  67818 150749  6217/5832/477    6703/2012    32  264   56.68)
ramon: poll                 wall=10.000s usage=9.885s mem=59148KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   13.7457   1060001      5196         14            1      108)
(smt.stats   26   3282  72297 156160  6319/5999/477    6988/2018    32  264   56.87)
ramon: poll                 wall=11.002s usage=10.885s mem=59256KiB load=1.00 rootload=1.00
(smt.stats   27   3459  78972 171316  6843/6388/478    7321/2129    33  264   56.96)
(smt.stats   28   3560  85600 186842  6873/6583/479    7625/2164    34  272   57.06)
(sat.ddfw       1      1   12.9177   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=11.882s mem=60032KiB load=1.00 rootload=1.00
(smt.stats   29   3671  89488 192736  6957/6611/479    7840/2170    34  272   57.43)
ramon: poll                 wall=13.000s usage=12.880s mem=60060KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.1923   1370001      6715         16            1      139)
(smt.stats   30   3793  93427 201684  7348/6842/480    8116/2219    35  273   57.69)
ramon: poll                 wall=14.000s usage=13.878s mem=60144KiB load=1.00 rootload=1.00
(smt.stats   31   3927  98119 216779  7387/7117/484    8512/2259    36  288   57.88)
(smt.stats   32   4074 102926 229633  7455/7165/488    8760/2295    37  308   57.97)
(sat.ddfw       1      1   11.5403   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=14.878s mem=60268KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.876s mem=60372KiB load=1.00 rootload=1.00
(smt.stats   33   4235 109384 240738  7614/7194/488    9202/2299    37  308   58.14)
(sat.ddfw       1      1   10.9496   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=16.874s mem=60600KiB load=1.00 rootload=0.99
(smt.stats   34   4412 115597 254643  7889/7605/489    9632/2431    38  309   58.33)
ramon: poll                 wall=18.000s usage=17.872s mem=60892KiB load=1.00 rootload=1.00
(smt.stats   35   4606 122466 280749  7959/7624/495   10939/2436    38  309   58.52)
(sat.ddfw       1      1   10.4218   1910001      9362         19            1      193)
(smt.stats   36   4707 128453 313712  8050/7745/496   11555/2667    39  339   58.52)
ramon: poll                 wall=19.000s usage=18.871s mem=61212KiB load=1.00 rootload=1.00
(smt.stats   37   4818 133037 335205  8102/7818/498   12201/2747    40  340   58.71)
(smt.stats   38   4940 138105 357199  8232/7948/501   13006/2814    41  342   58.81)
ramon: poll                 wall=20.000s usage=19.871s mem=61256KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:02:33 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.010s
ramon: group.total          19.929s
ramon: group.utime          19.913s
ramon: group.stime          0.016s
ramon: group.mempeak        61512KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              0.99
