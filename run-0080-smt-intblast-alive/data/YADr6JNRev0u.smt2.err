ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:34:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25347 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YADr6JNRev0u.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             72717
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   5486   1081  1344/1176/99      96/13     7   16   19.36)
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 8646911284551352320 := 2912 >>l 58
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 8646911284551352320 := 2912 >>l 58
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 8646911284551352320 := 2912 >>l 58
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 8646911284551352320 := 2912 >>l 58
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 8646911284551352320 := 2912 >>l 58
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 358 := 182 >>l 54
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 358 := 182 >>l 54
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 358 := 182 >>l 54
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 358 := 182 >>l 54
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 1952&0
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 358 := 182 >>l 54
(smt.stats    1    202   6441   2371  2689/2431/109     199/19     9   24   19.56)
(smt.stats    2    313   7933   3808  2760/2507/120     336/54    13   32   19.65)
(smt.stats    3    414   8820   4255  2786/2528/120     439/55    14   33   19.75)
(smt.stats    4    525   9486   5352  2826/2534/120     545/58    14   33   19.85)
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&1
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&1
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&2
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 8070450532247928834 := 0 >>l 63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&2
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 8070450532247928834 := 0 >>l 63
(smt.stats    5    647  10776   7032  2915/2650/133     676/70    16   38   19.95)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  13144   8557  2925/2661/134     773/70    16   38   19.95)
(smt.stats    7    859  16458  11629  2929/2665/134     878/79    17   40   20.06)
(smt.stats    8    981  17257  14219  2940/2675/144     994/91    18   50   20.06)
(smt.stats    9   1115  19004  16646  2970/2705/145    1118/97    19   53   20.16)
(smt.stats   10   1216  21644  22335  2978/2713/145    1213/97    19   53   20.16)
(smt.stats   11   1327  23662  24607  3010/2716/145    1327/100    19   53   20.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26287  30674  3063/2786/145    1449/102    19   53   20.26)
(smt.stats   13   1583  26784  34324  3064/2799/145    1582/102    19   53   20.26)
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 61699 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 61700 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 61704 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 61712 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 61698 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 61696 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 61952 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 62231 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 62231 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 62230 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1024 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1024 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1024 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 4096 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 4096 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 5120 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 4096 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 5120 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 4096 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 5120 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 4096 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 5120 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 46080 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 53248 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 57341 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 57340 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 57336 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 54272 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 49149 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 49148 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 49144 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 49136 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 49120 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 46080 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16381 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16381 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16380 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16376 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16368 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16352 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 13312 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 29696 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 31744 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 29696 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 29696 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 29696 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 29696 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 29696 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 32733 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 32704 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 29696 := 62464&576460752303422672
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1024 := 3904&576460752303422608
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1024 := 3904&576460752303422608
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1024 := 3904&576460752303422608
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 3072 := 3904&576460752303422608
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 9223372036854774928 := 9223372036854774928 >>l 57
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1420 := 3904&576460752303420417
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1420 := 3904&576460752303420417
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1024 := 3904&576460752303422464
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 3072 := 3904&576460752303422607
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 9223372036854774927 := 9223372036854774928 >>l 57
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 3072 := 3904&576460752303422464
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 9223372036854774784 := 9223372036854774928 >>l 57
ramon: poll                 wall=1.004s usage=1.003s mem=21820KiB load=1.00 rootload=0.99
(smt.stats   14   1730  28994  39213  3207/2937/269    1809/161    21   76   20.65)
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 576460752303423434 := 576460752303423433 >>l 53
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 576460752303423434 := 576460752303423433 >>l 53
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 576460752303423245 := 576460752303423433 >>l 53
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 576460752303423114 := 576460752303423433 >>l 53
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 1 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 2 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 4 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 4 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 8 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 16 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 32 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 32 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 1 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 2 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 4 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 8 := 3904&63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 3904&63
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 16 := 3904&63
(smt.stats   15   1831  30992  43001  3325/2991/315    1936/165    21   76   21.16)
(smt.stats   16   1942  32392  46082  3447/3176/341    2065/221    23  109   21.26)
(smt.stats   17   2064  35084  48720  3467/3186/341    2201/224    23  109   21.37)
(smt.stats   18   2198  38888  51636  3562/3212/341    2362/224    23  109   21.37)
(smt.stats   19   2345  41563  55410  3717/3317/342    2513/255    24  113   21.49)
ramon: poll                 wall=2.000s usage=1.998s mem=22700KiB load=1.00 rootload=0.99
(smt.stats   20   2506  44671  61549  3804/3510/344    2678/260    25  115   21.58)
(smt.stats   21   2607  47402  67246  3864/3592/346    2846/310    27  120   21.58)
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 128 := 15616&65588
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 256 := 15616&65588
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 512 := 15616&65588
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 512 := 15616&131124
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 256 := 15616&65588
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 256 := 15616&65792
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 65792 := 2882303761517117440 >>l 55
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 256 := 15616&65792
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 65792 := 2882303761517117440 >>l 55
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 256 := 15616&65792
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 65792 := 2882303761517117440 >>l 55
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 256 := 15616&65792
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 65792 := 2882303761517117440 >>l 55
(smt.stats   22   2718  49749  71655  3944/3636/348    2982/328    28  128   21.58)
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 15619 := 180143985094819840 >>l 51
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 15619 := 180143985094819840 >>l 51
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 15619 := 180143985094819840 >>l 51
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 15619 := 180143985094819840 >>l 51
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #107))) 15619 := 180143985094819840 >>l 51
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 80 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 80 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 64 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 64 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 8 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 8 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 32 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 15616&80
band: (band[59] (if (= #111 58) 17582052945254416384 (if #513 8791026472627208192 #627)) (lshr[59] (bv2int %0) (+ 59 #630))) 32 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 28 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 8 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 1 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 29 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 28 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 12 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 12 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 12 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 8 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16 := 15616&80
(smt.stats   23   2840  52173  77506  4040/3752/414    3151/381    29  142   22.06)
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 16 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 40 := 15616&80
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 40 := 15616&80
(smt.stats   24   2974  53999  81910  4114/3833/428    3413/384    29  142   22.06)
(smt.stats   25   3121  56676  90532  4134/3850/430    3653/437    30  160   22.28)
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&576460752303423457
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&576460752303423457
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&576460752303423458
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&576460752303423199
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&576460752303422976
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 9799832789158198784 := 9223372036854775776 >>l 63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 61&576460752303422976
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 9799832789158198784 := 9223372036854775776 >>l 63
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 122&576460752303422976
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 9799832789158198784 := 9223372036854775792 >>l 62
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 122&576460752303422976
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 9799832789158198784 := 9223372036854775792 >>l 62
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 122&58
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 122&60
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 0 := 122&60
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 8 := 122&61
(smt.stats   26   3282  60714 102065  4357/4029/465    3941/559    32  179   22.57)
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 26 := 122&61
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 26 := 122&59
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 26 := 122&30
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 30 := 9223372036854775792 >>l 62
band: (band[59] (if (= #362 63) 562625694248141324288 (if #493 281312847124070662144 #490)) (lshr[64] (* 16 #105) (mod #648 64))) 26 := 122&30
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 63 #641 #645) 64)) 30 := 9223372036854775792 >>l 62
(smt.stats   27   3459  64195 116914  4435/4105/473    4292/630    34  194   22.78)
(smt.stats   28   3560  68175 124442  4456/4121/474    4579/633    34  194   22.88)
(smt.stats   29   3671  72227 139035  4462/4132/475    4932/684    35  199   22.88)
ramon: poll                 wall=3.000s usage=2.997s mem=24668KiB load=1.00 rootload=1.00
(smt.stats   30   3793  77214 149383  4515/4157/475    5145/742    36  202   23.36)
(smt.stats   31   3927  81234 159747  4625/4257/480    5536/776    37  212   23.46)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  81931 165298  4626/4258/480    5732/776    37  212   23.46)
(smt.stats   33   4235  85876 178324  4733/4311/481    6026/826    38  218   23.57)
(smt.stats   34   4412  88921 193209  4961/4578/483    6483/843    39  225   23.67)
(smt.stats   35   4606  95641 208849  5036/4590/484    7243/892    40  238   23.88)
(smt.stats   36   4707  97947 215237  5094/4663/484    7494/897    40  238   23.98)
ramon: poll                 wall=4.000s usage=3.996s mem=25320KiB load=1.00 rootload=1.00
(smt.stats   37   4818  98698 218484  5307/4737/484    7740/902    40  238   23.98)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4940 101874 226998  5358/4958/485    8179/1021    41  246   24.21)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 106100 242049  5401/4993/487    8675/1022    41  246   24.40)
(smt.stats   40   5221 112491 257166  5414/5031/487    8978/1140    42  249   24.40)
(smt.stats   41   5382 120664 280876  5473/5032/487    9345/1141    42  249   24.40)
ramon: poll                 wall=5.000s usage=4.995s mem=25924KiB load=1.00 rootload=0.99
(smt.stats   42   5559 126481 297564  5520/5111/487    9906/1143    42  249   24.59)
(smt.stats   43   5753 134428 315634  5609/5146/488   10479/1225    43  257   24.86)
ramon: poll                 wall=6.000s usage=5.995s mem=26728KiB load=1.00 rootload=1.00
(smt.stats   44   5966 141158 332067  5733/5257/488   10991/1226    43  257   24.96)
(smt.stats   45   6067 144046 340129  5746/5358/491   11535/1299    44  259   25.06)
(smt.stats   46   6178 149092 352114  5774/5365/491   11745/1303    44  259   25.06)
(smt.stats   47   6300 155752 368784  5881/5402/492   12024/1307    44  259   25.06)
(smt.stats   48   6434 159274 382513  5910/5527/493   12357/1411    45  277   25.15)
ramon: poll                 wall=7.000s usage=6.994s mem=26844KiB load=1.00 rootload=1.00
(smt.stats   49   6581 166508 397683  5964/5531/493   12721/1414    45  277   25.25)
(smt.stats   50   6742 178021 421327  6068/5597/494   13131/1567    46  295   25.25)
(smt.stats   51   6919 187316 447560  6218/5698/494   13622/1574    46  295   25.37)
ramon: poll                 wall=8.000s usage=7.993s mem=26944KiB load=1.00 rootload=1.00
(smt.stats   52   7113 192661 463250  6252/5856/496   14611/1782    47  311   25.47)
(smt.stats   53   7326 201258 491419  6275/5877/496   15023/1782    47  311   25.56)
(smt.stats   54   7560 206254 516469  6284/5901/499   15786/1932    48  338   25.56)
(smt.stats   55   7661 210820 527059  6346/5902/499   15982/1932    48  338   25.67)
(smt.stats   56   7772 214121 537857  6412/5978/499   16200/2056    49  375   25.67)
ramon: poll                 wall=9.000s usage=8.992s mem=27180KiB load=1.00 rootload=1.00
(smt.stats   57   7894 217767 551867  6475/6032/499   16444/2058    49  375   25.67)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8028 221218 565497  6493/6098/500   17019/2059    49  375   25.75)
(smt.stats   59   8175 226895 588753  6537/6117/500   17447/2158    50  385   25.75)
ramon: poll                 wall=10.000s usage=9.992s mem=27724KiB load=1.00 rootload=1.00
(smt.stats   60   8336 233920 613324  6735/6168/500   17864/2163    50  385   25.98)
(smt.stats   61   8513 237698 630472  6760/6377/502   18583/2247    51  386   26.09)
(smt.stats   62   8707 247692 650766  6774/6391/502   19121/2247    51  386   26.09)
(smt.stats   63   8920 250154 663525  6788/6405/502   19495/2247    51  386   26.19)
ramon: poll                 wall=11.000s usage=10.991s mem=27752KiB load=1.00 rootload=1.00
(smt.stats   64   9154 256739 687588  6815/6408/502   20086/2383    52  392   26.29)
(smt.stats   65   9411 270730 732170  6947/6437/502   20615/2388    52  392   26.38)
(smt.stats   66   9512 273406 742699  6957/6574/503   20926/2436    53  403   26.38)
(smt.stats   67   9623 277709 756197  7030/6637/506   21229/2436    53  403   26.38)
(smt.stats   68   9745 282216 775382  7078/6660/506   21505/2436    53  403   26.50)
ramon: poll                 wall=12.000s usage=11.990s mem=28020KiB load=1.00 rootload=1.00
(smt.stats   69   9879 289607 795794  7192/6702/506   21841/2498    54  423   26.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 153)
(smt.stats   70  10026 294376 812344  7266/6863/506   22333/2498    54  423   26.63)
(smt.stats   71  10187 299830 834480  7337/6893/506   22596/2498    54  423   26.63)
ramon: poll                 wall=13.000s usage=12.989s mem=28176KiB load=1.00 rootload=0.99
(smt.stats   72  10364 306632 868825  7453/6986/506   23203/2504    54  423   26.63)
(smt.stats   73  10558 314045 889916  7504/7084/506   23603/2505    54  423   26.77)
(smt.stats   74  10771 320102 933507  7526/7139/506   24110/2506    54  423   26.86)
(smt.stats   75  11005 325434 958643  7567/7167/506   24805/2508    54  423   26.97)
ramon: poll                 wall=14.000s usage=13.989s mem=28548KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11262 336476 1021737  7585/7198/506   25608/2508    54  423   27.25)
(smt.stats   77  11544 344377 1062479  7590/7203/507   26052/2891    55  434   27.25)
(smt.stats   78  11645 344865 1066884  7599/7210/507   26226/2891    55  434   27.37)
(smt.stats   79  11756 348822 1073788  7617/7225/507   26421/2891    55  434   27.37)
(smt.stats   80  11878 354741 1090794  7663/7253/507   26637/2894    55  434   27.37)
(smt.stats   81  12013 357700 1110791  7713/7324/508   27085/3022    56  443   27.37)
(smt.stats   82  12160 360923 1131998  7758/7324/508   27467/3026    56  443   27.58)
(smt.stats   83  12321 362083 1136195  7775/7386/508   27672/3026    56  443   27.58)
(smt.stats   84  12498 362620 1140765  7777/7388/508   27905/3026    56  443   27.58)
ramon: poll                 wall=15.000s usage=14.988s mem=29064KiB load=1.00 rootload=1.00
(smt.stats   85  12692 366609 1163330  7784/7395/508   28625/3026    56  443   27.70)
(smt.stats   86  12905 367450 1168882  7784/7395/508   28877/3026    56  443   27.70)
(smt.stats   87  13139 378882 1201894  7887/7401/508   29706/3035    56  443   27.79)
ramon: poll                 wall=16.000s usage=15.987s mem=29300KiB load=1.00 rootload=1.00
(smt.stats   88  13396 395223 1259441  8086/7512/508   30630/3042    56  443   28.17)
ramon: poll                 wall=17.000s usage=16.986s mem=29812KiB load=1.00 rootload=1.00
(smt.stats   89  13678 403426 1306395  8241/7808/508   31779/3042    56  443   28.36)
(smt.stats   90  13988 410276 1337036  8328/7879/508   32534/3048    56  443   28.36)
(smt.stats   91  14089 412478 1348321  8348/7959/508   32776/3048    56  443   28.46)
(smt.stats   92  14200 416794 1362011  8436/7962/508   33009/3050    56  443   28.46)
(smt.stats   93  14322 419998 1377207  8503/8099/509   33268/3480    57  466   28.46)
ramon: poll                 wall=18.000s usage=17.986s mem=30004KiB load=1.00 rootload=1.00
(smt.stats   94  14456 423202 1397315  8575/8128/509   33607/3485    57  466   28.56)
(smt.stats   95  14603 428677 1415606  8624/8201/510   34088/3486    57  466   28.56)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   96  14764 431987 1427384  8642/8241/510   34339/3486    57  466   28.56)
(smt.stats   97  14941 436735 1455828  8697/8275/510   35210/3491    57  466   28.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 32)
(smt.stats   98  15135 443188 1484118  8794/8317/510   35645/3659    58  473   28.77)
ramon: poll                 wall=19.000s usage=18.985s mem=30340KiB load=1.00 rootload=1.00
(smt.stats   99  15348 451894 1531179  8948/8414/510   36218/3664    58  473   28.87)
(smt.stats  100  15582 458722 1565817  9001/8575/510   37168/3667    58  473   28.96)
ramon: poll                 wall=20.000s usage=19.984s mem=30576KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:35:11 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.990s
ramon: group.utime          19.970s
ramon: group.stime          0.020s
ramon: group.mempeak        30832KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
