ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:06:40 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27330 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/oYpR6bCzh5Bc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             927056
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   95.2381     10000        49          0            1        2)
(sat.ddfw       1      1    48.314     20001        98          1            1        3)
(sat.ddfw       1      1   49.6278     40001       196          2            1        5)
(smt.stats    0    101   3117    214  1076/957/101      88/16     9   17   52.13)
(smt.stats    1    202   5040    913  1922/1734/106     230/36    11   25   52.13)
(sat.ddfw       1      1   42.6743     70001       343          3            1        8)
(smt.stats    2    313   5654   1435  2366/2163/108     339/53    13   28   52.32)
ramon: poll                 wall=1.000s usage=0.878s mem=54568KiB load=0.88 rootload=0.87
(smt.stats    3    414   6841   2205  2454/2258/113     451/61    14   30   52.32)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1 := 1&67881079806
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1 := 1&67881079806
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 1&67881079806
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68300278163 := 68300278271 << 1
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 1&67881079806
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68300278163 := 68300278271 << 1
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1 := 1&67881079806
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 1&67881079806
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 1 := 1&67881079806
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 1&67881079806
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 67881079807 := 68300278271 << 1
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1 := 1&67881079806
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1 := 1&67881079806
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 754 := 806&2530
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 736 := 806&2530
(smt.stats    4    525  10224   3162  2548/2292/130     605/69    15   42   52.51)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 756 := 806&2530
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 756 := 806&2532
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 768 := 806&2532
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 756 := 806&2532
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 768 := 806&2532
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 768 := 806&2536
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 806 := 806&2560
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 804 := 806&2532
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 804 := 806&2532
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 804 := 806&2560
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 6 := 806&2532
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 6 := 806&2530
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 806&2530
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 98 := 806&2530
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 130 := 806&2562
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2562
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2562
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2562
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2562
(sat.ddfw       1      1   36.3306    110001       539          4            1       12)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2562
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2562
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2562
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2562
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2562
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 258 := 806&2530
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 290 := 806&2530
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 68719479266 := 136600556524 << 9
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 290 := 806&2530
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 68719479266 := 136600556524 << 9
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 290 := 806&2530
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 68719479266 := 136600556524 << 9
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 290 := 806&2531
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 68719479267 := 136600556524 << 9
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 290 := 806&2555
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 68719479291 := 136600556524 << 9
(smt.stats    5    647  16036   6489  2673/2456/219     777/120    18   64   52.81)
(sat.ddfw       1      1    31.367    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  19889   8377  2773/2505/222     931/131    19   66   52.93)
(smt.stats    7    860  24575  12284  2804/2594/225    1060/193    22   78   53.03)
ramon: poll                 wall=2.000s usage=1.934s mem=55116KiB load=1.06 rootload=1.06
(smt.stats    8    982  28359  14862  2844/2628/229    1205/206    24   81   53.13)
(sat.ddfw       1      1   28.7499    220001      1078          6            1       23)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1 := 6&1
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 68719476736 := 68719476738 << 2
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 68719476736 := 68719476738 << 2
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 68719476736 := 68719476738 << 2
(smt.stats    9   1116  32270  18118  2885/2643/230    1370/226    25   86   53.42)
(smt.stats   10   1217  35736  21188  2947/2707/241    1484/244    26   91   53.42)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 825592&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 110844515975168 := 752 << 19
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 825592&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 110844515975168 := 752 << 19
(smt.stats   11   1328  38998  23923  2966/2738/241    1603/255    27   92   53.52)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 3072 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 4096 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 3072 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8192 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16384 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 32768 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 32768 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8192 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8192 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16384 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16384 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8192 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8192 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16384 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 32768 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 262144 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 32768 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 262144 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8192 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16384 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 32768 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 262144 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 32768 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 262144 := 825592&385024
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 294912 := 825592&385024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 385024 := 752 << 19
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 32768 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 65536 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 131072 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 262144 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 524288 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 131072 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 32768 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8192 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8192 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8192 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 3072 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 3072 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 3072 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 3072 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2560 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2560 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 65536 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16384 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16384 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16384 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 262144 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 524288 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 524288 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2048 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2048 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 128 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 64 := 825592&394264576
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 16 := 825592&394264576
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  43162  27986  3096/2883/378    1847/346    29  123   53.86)
(smt.stats   13   1584  47543  31894  3136/2922/386    2000/419    31  150   54.05)
(sat.ddfw       1      1   25.0447    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.995s mem=56444KiB load=1.06 rootload=1.05
(smt.stats   14   1731  52603  35171  3284/2942/386    2179/425    31  150   54.05)
(smt.stats   15   1832  56481  38359  3311/3091/386    2300/426    31  150   54.14)
(smt.stats   16   1943  59320  43672  3358/3145/389    2487/453    32  152   54.14)
(smt.stats   17   2065  62885  50471  3367/3154/393    2607/530    34  165   54.31)
(smt.stats   18   2199  67047  61453  3379/3162/393    2743/530    34  165   54.31)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 6 := 54106057831&1666
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1666
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1603
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1603
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1603
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1602
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1602
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1603
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1602
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1602
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 54106057831&1666
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1538 := 54106057831&1666
(smt.stats   19   2346  70538  69739  3489/3266/408    2967/577    35  170   54.41)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1538 := 54106057831&1666
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1538 := 54106057831&1666
(sat.ddfw       1      1   22.1976    370001      1813          8            1       38)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1538 := 54106057831&1666
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1026 := 54106057831&1666
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 453874551655237250 := 72 << 35
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1026 := 54106057831&1666
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 453874551655237250 := 72 << 35
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1026 := 54106057831&1666
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 453874551655237250 := 72 << 35
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1026 := 54106057831&1666
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 453874551655237250 := 72 << 35
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1026 := 54106057831&1666
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 453874551655237250 := 72 << 35
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1026 := 54106057831&1666
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 453874551655237250 := 72 << 35
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1026 := 54106057831&1666
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 453874482935760514 := 72 << 35
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1026 := 54106057831&1666
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 453874482935760514 := 72 << 35
(smt.stats   20   2507  75555  78838  3565/3343/421    3296/709    37  195   54.60)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 3&1607
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 3&1607
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 3 := 3&1607
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 1607 := 137438953412 << 1
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1 := 3&1605
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 1605 := 137438953412 << 1
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1 := 3&1625
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 1625 := 137438953412 << 1
(smt.stats   21   2608  80419  88110  3658/3424/430    3424/769    38  204   54.80)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 1 := 3&68719476616
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 3&68719476616
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68719476598 := 68719476706 << 2
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 3&68719476616
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68719476598 := 68719476706 << 2
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 3&68719476616
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68719476598 := 68719476706 << 2
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 3&68719476616
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 1 := 3&68719476616
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 3&68719476616
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 2 := 3&68719476616
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 3&68719476616
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 2 := 3&68719476616
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 3&68719476616
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 2 := 3&68719476616
ramon: poll                 wall=4.004s usage=3.994s mem=57148KiB load=1.00 rootload=1.00
(smt.stats   22   2719  84813  96353  3779/3521/453    3616/779    39  209   55.10)
(smt.stats   23   2841  90491 105752  3826/3564/456    4114/814    41  219   55.19)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 1&68719476678
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 1 := 1&68719476678
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 1&68719476678
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 1 := 1&68719476678
(smt.stats   24   2975  97151 118987  3838/3574/458    4276/831    42  226   55.51)
(sat.ddfw       1      1   19.9247    460001      2254          9            1       47)
(smt.stats   25   3122 101840 128503  3898/3627/464    4465/861    43  249   55.73)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&68719476123
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 6&68719476123
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 110913235451291 := 137438953122 << 2
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 2 := 6&68719476115
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 110913235451283 := 137438953122 << 2
(smt.stats   26   3283 105358 137300  3943/3669/468    4724/895    44  255   55.83)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&68719476488
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68719475340 := 68719476705 << 3
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&68719476488
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68719475340 := 68719476705 << 3
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&68719476488
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68719475340 := 68719476705 << 3
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&68719476488
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 4 := 6&68719476488
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&68719476488
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 4 := 6&68719476488
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&68719476488
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 4 := 6&68719476488
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 6&68719476488
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 4 := 6&68719476488
(smt.stats   27   3460 109935 145744  4062/3756/472    4958/944    45  260   55.92)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 10 := 12&68719476482
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8 := 12&68719476482
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8 := 12&68719476482
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8 := 12&68719476486
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8 := 12&68719476483
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8 := 12&68719476483
ramon: poll                 wall=5.004s usage=4.991s mem=58036KiB load=1.00 rootload=0.99
(smt.stats   28   3561 113913 151987  4092/3801/490    5172/957    46  270   55.92)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8 := 12&68719476571
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 618475290459 := 137438953408 << 3
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 8 := 12&68719476683
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #762 #766) 64)) 1099511627723 := 137438953408 << 3
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 12&68719476224
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68719476242 := 68719476704 << 4
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 12&68719476224
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68719476234 := 68719476704 << 4
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 12&68719476224
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #104))) 68719476234 := 68719476704 << 4
(smt.stats   29   3672 117046 158429  4181/3832/495    5384/966    46  270   56.02)
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 12&68719476224
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 8 := 12&68719476224
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 12&68719476224
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 8 := 12&68719476224
band: (band[36] (if (= #298 63) 1 (if #538 3 #755)) (shl[64] (* 2 #102) (mod #770 64))) 0 := 12&68719476224
band: (band[36] (if (= #108 35) 1 (if #559 3 #656)) (shl[36] (bv2int %0) (+ 36 #659))) 8 := 12&68719476224
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3794 121857 165734  4284/3937/505    5652/1039    47  284   56.11)
(smt.stats   31   3928 127013 175452  4383/4034/515    6023/1064    48  286   56.30)
(sat.ddfw       1      1   17.9501    560001      2745         10            1       57)
(smt.stats   32   4075 134615 183304  4404/4104/516    6269/1118    49  286   56.30)
ramon: poll                 wall=6.000s usage=5.879s mem=58988KiB load=0.89 rootload=0.89
(smt.stats   33   4236 141178 195253  4534/4202/518    6742/1149    50  287   56.73)
(smt.stats   34   4413 147735 211221  4654/4363/527    7288/1192    52  327   57.12)
(sat.ddfw       1      1   16.2314    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.878s mem=59540KiB load=1.00 rootload=1.00
(smt.stats   35   4607 154544 228101  4780/4370/528    7909/1199    52  327   57.31)
(sat.ddfw       1      1   15.6413    790001      3872         12            1       80)
(smt.stats   36   4708 159448 246025  4870/4560/530    8203/1360    53  361   57.40)
ramon: poll                 wall=8.004s usage=8.194s mem=59512KiB load=1.31 rootload=1.31
ramon: poll                 wall=9.000s usage=9.194s mem=59648KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.5073    920001      4509         13            1       93)
(smt.stats   37   4819 163229 257131  5014/4723/537    8569/1400    54  363   57.50)
(smt.stats   38   4941 166575 265691  5162/4729/537    9091/1401    54  363   57.59)
ramon: poll                 wall=10.004s usage=10.194s mem=59776KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 76)
(smt.stats   39   5075 171997 277054  5236/4890/537    9612/1556    55  376   57.69)
(sat.ddfw       1      1   13.5227   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=11.194s mem=59936KiB load=1.00 rootload=1.00
(smt.stats   40   5222 176552 286032  5508/4967/538    9984/1560    55  376   57.80)
(sat.ddfw       1      1   12.7899   1210001      5931         15            1      123)
ramon: poll                 wall=12.004s usage=12.253s mem=60964KiB load=1.06 rootload=1.06
(smt.stats   41   5383 180731 296154  5911/5279/538   10572/1678    56  381   58.27)
(smt.stats   42   5560 185239 309607  6000/5650/538   11383/1681    56  381   58.46)
ramon: poll                 wall=13.004s usage=13.247s mem=60780KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   11.9922   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=14.211s mem=60940KiB load=0.97 rootload=0.96
(smt.stats   43   5754 191955 328915  6384/5720/538   11970/1685    56  381   58.65)
ramon: poll                 wall=15.000s usage=15.168s mem=61128KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   11.2449   1540001      7549         17            1      156)
(smt.stats   44   5967 199777 350370  6612/6172/538   12841/1688    56  381   58.84)
ramon: poll                 wall=16.000s usage=16.140s mem=61384KiB load=0.97 rootload=0.97
(smt.stats   45   6068 203887 363001  6662/6327/538   13645/1693    56  381   58.94)
ramon: poll                 wall=17.000s usage=17.084s mem=61552KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   10.6257   1720001      8431         18            1      174)
(smt.stats   46   6179 207239 373909  6892/6396/538   14089/1695    56  381   59.04)
ramon: poll                 wall=18.000s usage=18.016s mem=61540KiB load=0.93 rootload=0.94
(smt.stats   47   6301 212072 390641  7122/6615/538   14659/1699    56  381   59.49)
(smt.stats   48   6435 217155 417152  7288/6889/538   15747/1702    56  381   59.59)
(sat.ddfw       1      1   10.0994   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=18.992s mem=61800KiB load=0.98 rootload=0.97
(smt.stats   49   6582 223035 442448  7335/7008/539   16748/2469    57  385   59.78)
ramon: poll                 wall=20.000s usage=19.887s mem=62228KiB load=0.90 rootload=0.90
ramon: end                  Fri Nov  1 23:07:00 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.977s
ramon: group.utime          19.961s
ramon: group.stime          0.016s
ramon: group.mempeak        62240KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.094s
ramon: loadavg              0.99
