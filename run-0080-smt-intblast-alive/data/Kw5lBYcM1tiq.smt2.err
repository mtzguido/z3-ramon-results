ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:09:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28084 MiB
ramon: sys.mem.avail        61763 MiB
ramon: sys.nprocs           1272
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Kw5lBYcM1tiq.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4181263
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3458   1273  1184/1066/101      89/10     6   19   19.18)
(smt.stats    1    202   5564   3102  1769/1574/104     202/22     9   23   19.37)
(smt.stats    2    313   7104   4914  2344/2043/105     324/28    10   23   19.47)
(smt.stats    3    415   8975   7925  2548/2324/109     424/34    11   27   19.57)
(smt.stats    4    526   9938   9685  2635/2353/112     526/40    12   30   19.67)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 281474976645121&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 18446744073709486081 := 18446744073709486080 >>l 16
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 131072 >>l 16
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 131072 >>l 16
(smt.stats    5    648  11486  11181  2667/2429/120     638/54    14   34   19.76)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  12214  13081  2697/2461/120     752/54    14   34   19.76)
(smt.stats    7    860  12508  15094  2699/2463/121     844/70    15   54   19.87)
(smt.stats    8    982  13124  16917  2704/2467/121     968/70    15   54   19.87)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 65536&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976776192 := 281474976776192 >>l 16
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 65536&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976776192 := 281474976776192 >>l 16
(smt.stats    9   1116  13795  18989  2729/2488/125     816/112    17  345   19.87)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&4
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 0 := 18446744073709486080 >>l 63
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&4
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 140737488355327 := 140737488355327 >>l 47
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&4
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 0 := 393216 >>l 63
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&4
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 5 := 6 >>l 47
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&4
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 0 := 9223372036854775808 >>l 63
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&4
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 5 := 140737488355327 >>l 47
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&4
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 0 := 18446744073709486080 >>l 63
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&4
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 63
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&4
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 63
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&4
band: (band[48] (lshr[48] (bv2int %0) (mod #100 48)) (if (= #486 47) 281474976710656 (if #488 140737488355328 #580))) 1 := 1&4
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1 := 1&4
(smt.stats   10   1231  14659  22105  2774/2512/137     926/114    18  350   20.07)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 24&33554432
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710680 := 18446744073709486080 >>l 40
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 23&33554432
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710679 := 18446744073709486080 >>l 40
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 3&33554432
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710659 := 18446744073709486080 >>l 40
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 3&1024
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710659 := 18446744073709486080 >>l 55
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&1024
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 55
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&1024
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 55
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&16384
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 51
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&4096
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 53
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&2048
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 54
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&8192
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 52
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&32768
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 50
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&65536
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 49
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&524288
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 46
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&4194304
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 43
(smt.stats   11   1342  17008  24338  2844/2560/158    1039/117    19  354   20.07)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&8388608
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 42
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&2097152
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 44
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&1048576
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 45
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&64
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 59
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&256
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 57
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&512
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 56
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&128
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 58
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2 := 2&131072
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 2&131072
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710658 := 9223372036854710272 >>l 48
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&131072
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 48
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&131072
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 18446744073709486080 >>l 48
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 2&262144
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710658 := 9223372036854710272 >>l 47
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 3&16777216
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710659 := 18446744073709486080 >>l 41
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1464  18740  26481  3016/2714/208    1153/119    20  365   20.48)
(smt.stats   13   1598  21012  29230  3161/2879/259    1284/124    22  375   20.48)
(smt.stats   14   1745  24176  32540  3224/2944/261    1428/137    23  376   20.57)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 131072&65536
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976841728 := 281474976841728 >>l 49
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 131072&65536
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976841728 := 281474976841728 >>l 49
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&65536
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 65537 := 0 >>l 33
(smt.stats   15   1846  26050  34892  3254/2978/267    1536/140    24  381   20.67)
(smt.stats   16   1957  28225  39525  3292/3013/275    1641/170    25  383   20.77)
(smt.stats   17   2079  29090  41937  3309/3024/277    1754/172    26  392   21.05)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&4
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 281474976710657 := 2251799813750784 >>l 63
(smt.stats   18   2213  30572  46160  3367/3091/279    1888/188    27  394   21.05)
(smt.stats   19   2360  32083  49538  3381/3101/283    2032/188    27  394   21.05)
(smt.stats   20   2521  35037  54331  3441/3142/283    2174/218    28  395   21.05)
(smt.stats   21   2622  37417  59805  3482/3182/284    2269/226    29  395   21.05)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&8192
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 18446744073709420544 >>l 52
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&8192
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 10538423128047026176 >>l 52
ramon: poll                 wall=1.000s usage=0.991s mem=22284KiB load=0.99 rootload=0.98
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&8192
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 281474976710655 := 133146017823 >>l 36
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&8192
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 8193 := 133146017823 >>l 36
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&8192
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 8193 := 133146017823 >>l 36
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1 := 1&8192
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&8192
band: (band[48] (lshr[48] (bv2int %0) (mod #100 48)) (if (= #486 47) 281474976710656 (if #488 140737488355328 #580))) 1 := 1&8192
(smt.stats   22   2733  38983  64673  3534/3254/293    2391/231    30  396   21.15)
(smt.stats   23   2855  41703  70113  3592/3272/293    2516/238    30  396   21.26)
(smt.stats   24   2989  42441  74727  3630/3319/293    2645/242    31  400   21.26)
(smt.stats   25   3136  44530  80769  3638/3357/297    2808/246    32  407   21.26)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&17592186044416
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 9367348684351537152 >>l 21
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&17592186044416
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 9295429630892769280 >>l 21
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&17592186044416
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 9349613563909505024 >>l 21
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&17592186044416
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 9349613563909505024 >>l 21
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&17592186044416
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 9349472826421215232 >>l 21
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&17592186044416
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 1 := 9349474750595858432 >>l 21
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&17592186044416
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 0 := 63 >>l 5
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&17592186044416
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 2 := 63 >>l 5
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 1&17592186044416
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 2 := 63 >>l 5
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2 := 939538432&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4 := 939538432&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 8 := 939538432&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2 := 939538431&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4 := 536871168&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 8 := 536871168&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 16 := 536871168&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4 := 671088961&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 32 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 8 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 8 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 64 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 128 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 256 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 512 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1024 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2048 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4096 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 8192 := 805306753&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2048 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4096 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 8192 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 16384 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 32768 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 65536 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 131072 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 65536 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 65536 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 65536 := 939524545&17592186044416
(smt.stats   26   3297  47771  87891  3816/3507/390    3011/277    33  409   21.82)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 65536 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 262144 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 524288 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 65536 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 262144 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 524288 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 524288 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1048576 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2097152 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4194304 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 8388608 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 16777216 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 33554432 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 33554432 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2097152 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2097152 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2097152 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2097152 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4194304 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4194304 := 939524545&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4194304 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 33554432 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 67108864 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 134217728 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 268435456 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 536870912 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 536870912 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 536870912 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 536870912 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 33554432 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 67108864 := 939524560&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 33554432 := 939525024&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 33554432 := 939525025&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 33554432 := 939525025&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 134217728 := 939525025&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 268435456 := 939525025&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 268435456 := 939525026&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 32768 := 939525026&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 32768 := 939525026&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 32768 := 939525040&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 32768 := 939525040&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 32768 := 939525040&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 30720 := 939525040&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4096 := 939525040&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 8192 := 939525040&17592186044416
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 16384 := 939525040&17592186044416
(smt.stats   27   3474  51123 100655  3961/3669/531    3318/374    35  454   22.42)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4100 := 939524560&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4100 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4100 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4100 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4100 := 939524567&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4100 := 939524580&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4100 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4100 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4164 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4164 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4164 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4164 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 4108 := 939524564&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1546 := 939524580&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1544 := 939524580&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1024 := 939524580&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1024 := 939524580&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1024 := 939524580&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 1024 := 939525015&16384
(smt.stats   28   3575  54013 104806  4054/3697/533    3451/456    36  463   22.62)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2648 := 939524612&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2672 := 939524612&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2672 := 939524596&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2672 := 939524580&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2672 := 939524580&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2672 := 939524580&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2672 := 939524596&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2672 := 939524596&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2672 := 939524596&16384
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2672 := 939524596&16384
(smt.stats   29   3686  57329 112507  4188/3861/554    3638/531    37  467   22.72)
(smt.stats   30   3808  62033 121143  4279/3917/566    3888/558    38  470   23.02)
ramon: poll                 wall=2.000s usage=1.990s mem=24516KiB load=1.00 rootload=0.99
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2 := 23&256
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2 := 23&256
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 23&256
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 9232097761132806167 := 9232097761132806144 >>l 57
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 23&256
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 9232097761132806167 := 9232097761132806144 >>l 57
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 23&256
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 767 := 52772263165952 >>l 41
(smt.stats   31   3944  66318 131305  4539/4213/582    4118/614    40  496   23.40)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4091  73413 140753  4572/4243/585    4428/614    40  496   23.40)
(smt.stats   33   4252  81994 161816  4590/4261/589    4585/710    43  526   23.49)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 26388950155264&8
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 10952780682715201536 := 10952780682715201536 >>l 62
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 26388950155264&8
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 10952780682715201536 := 10952780682715201536 >>l 62
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 26388950155264&8
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 10952780682715201536 := 10952780682715201536 >>l 62
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 26388950155264&8
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 10952780682715201536 := 10952780682715201536 >>l 62
ramon: poll                 wall=3.000s usage=2.990s mem=25144KiB load=1.00 rootload=0.99
(smt.stats   34   4429  87256 172099  4838/4508/599    4975/739    44  533   23.78)
(smt.stats   35   4623  95381 188618  4895/4528/599    5291/743    44  533   23.78)
(smt.stats   36   4724 100348 201874  5001/4569/600    5540/790    45  540   23.97)
(smt.stats   37   4835 105208 212317  5085/4699/600    5645/858    46  546   23.97)
(smt.stats   38   4957 109813 224023  5166/4782/600    6118/860    46  546   24.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 53)
(smt.stats   39   5091 112464 233496  5183/4850/600    6272/860    46  546   24.16)
ramon: poll                 wall=4.000s usage=3.989s mem=25552KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   40   5238 120221 248379  5294/4963/602    6465/1039    48  554   24.16)
(smt.stats   41   5399 124889 258565  5430/5000/603    6650/1053    48  554   24.35)
(smt.stats   42   5576 131259 272654  5672/5174/606    7079/1067    48  554   24.63)
ramon: poll                 wall=5.000s usage=4.989s mem=26528KiB load=1.00 rootload=1.00
(smt.stats   43   5770 137181 288227  6138/5354/606    7641/1132    49  570   24.72)
ramon: poll                 wall=6.000s usage=5.988s mem=26540KiB load=1.00 rootload=1.00
(smt.stats   44   5983 143073 307675  6479/6148/608    8155/1216    50  576   24.92)
(smt.stats   45   6084 147510 320217  6541/6209/612    8458/1234    51  594   24.92)
ramon: poll                 wall=7.000s usage=6.987s mem=26588KiB load=1.00 rootload=0.99
(smt.stats   46   6195 151923 327998  6737/6233/613    8622/1257    51  594   25.11)
(smt.stats   47   6317 155896 338150  7010/6566/614    8825/1269    51  594   25.11)
(smt.stats   48   6451 159524 356919  7229/6897/616    9278/1328    52  594   25.20)
(smt.stats   49   6598 162601 367774  7266/6934/617    9523/1371    53  611   25.30)
(smt.stats   50   6759 170205 387848  7330/6957/617    9699/1378    53  611   25.39)
ramon: poll                 wall=8.000s usage=7.987s mem=26984KiB load=1.00 rootload=1.00
(smt.stats   51   6936 175835 409740  7577/7241/622   10205/1472    54  616   25.49)
(smt.stats   52   7130 183080 435038  7660/7259/625   10646/1604    55  661   25.58)
(smt.stats   53   7343 188628 453563  7746/7339/625   11203/1684    56  666   25.89)
ramon: poll                 wall=9.000s usage=8.986s mem=27436KiB load=1.00 rootload=1.00
(smt.stats   54   7577 195404 488860  7790/7454/626   11919/1815    57  673   25.89)
(smt.stats   55   7678 200352 506097  7838/7461/626   12102/1815    57  673   25.99)
(smt.stats   56   7789 201181 511309  7876/7531/626   12228/1815    57  673   25.99)
(smt.stats   57   7911 203967 532081  7888/7542/626   12394/1815    57  673   25.99)
(smt.stats   58   8045 208518 550477  7927/7567/626   12673/1817    57  673   26.09)
(smt.stats   59   8192 213085 571268  7948/7602/627   13209/1909    58  686   26.09)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&16
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 9226749736575303680 := 5359019673780224 >>l 61
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&16
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 9226468261598593024 := 5359019673780224 >>l 61
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&16
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #100 #303) 64)) 9226468261598593024 := 5526146011627520 >>l 61
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&16
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 278193621696527 := 84322296320 >>l 45
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&16
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 130 := 84322296320 >>l 45
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 0 := 0&16
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 17 := 84322296320 >>l 45
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8353 216393 594062  8037/7687/640   13498/2012    59  715   26.19)
(smt.stats   61   8530 218236 610792  8106/7739/640   13701/2014    59  715   26.39)
ramon: poll                 wall=10.000s usage=9.986s mem=27864KiB load=1.00 rootload=1.00
(smt.stats   62   8724 224380 635778  8119/7777/641   14084/2094    60  716   26.39)
(smt.stats   63   8937 227735 657627  8287/7838/641   14309/2104    60  716   26.62)
ramon: poll                 wall=11.000s usage=10.986s mem=28160KiB load=1.00 rootload=1.00
(smt.stats   64   9171 239100 682440  8640/7960/643   15069/2150    61  744   26.81)
ramon: poll                 wall=12.000s usage=11.985s mem=28552KiB load=1.00 rootload=1.00
(smt.stats   65   9428 251131 720677  8946/8462/644   15884/2255    62  747   27.00)
(smt.stats   66   9529 254892 733492  8973/8621/644   16207/2255    62  747   27.00)
(smt.stats   67   9640 258617 747550  9024/8642/646   16395/2331    63  758   27.00)
ramon: poll                 wall=13.000s usage=12.985s mem=28588KiB load=1.00 rootload=1.00
(smt.stats   68   9762 261744 762462  9117/8688/646   16561/2344    63  758   27.10)
(smt.stats   69   9896 266617 781669  9325/8883/646   16780/2353    63  758   27.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 307)
(smt.stats   70  10043 270094 798472  9368/9008/647   16629/2417    64  758   27.10)
(smt.stats   71  10205 277598 844073  9457/9066/648   17259/2424    64  758   27.19)
ramon: poll                 wall=14.000s usage=13.984s mem=28804KiB load=1.00 rootload=1.00
(smt.stats   72  10382 283532 871603  9618/9113/648   17609/2449    65  758   27.33)
(smt.stats   73  10576 289058 896535  9728/9318/649   17867/2511    66  759   27.43)
(smt.stats   74  10789 293701 920185  9854/9420/649   18110/2514    66  759   27.43)
(smt.stats   75  11023 301082 961466  9918/9522/649   18806/2518    66  759   27.53)
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2 := 137438953249&137438953472
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2 := 137438953251&137438953472
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2 := 137438953251&137438953472
band: (band[48] (lshr[64] (* 65536 #99) (mod #304 64)) (if (= #603 63) 36893488147419103232 (if #605 18446744073709551616 #729))) 2 := 137438953251&137438953472
ramon: poll                 wall=15.000s usage=14.980s mem=29120KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11280 311236 1009046 10118/9571/649   19336/2529    66  759   27.72)
ramon: poll                 wall=16.000s usage=15.978s mem=29320KiB load=1.00 rootload=1.00
(smt.stats   77  11562 320898 1038185 10559/9774/654   20336/2732    67  760   27.91)
ramon: poll                 wall=17.003s usage=16.949s mem=29528KiB load=0.97 rootload=0.96
(smt.stats   78  11663 326275 1069299 10752/10349/655   20609/2884    68  764   28.00)
(smt.stats   79  11774 332150 1104570 10936/10401/655   21012/2894    68  764   28.00)
(smt.stats   80  11896 335201 1118103 11018/10587/655   21232/2901    68  764   28.11)
(smt.stats   81  12030 339015 1141198 11056/10700/655   22117/2901    68  764   28.11)
ramon: poll                 wall=18.000s usage=17.872s mem=29660KiB load=0.93 rootload=0.92
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   82  12177 346630 1182156 11228/10703/655   22538/2907    68  764   28.21)
(smt.stats   83  12338 353730 1231096 11314/10875/655   22838/2911    68  764   28.21)
(smt.stats   84  12515 359378 1281793 11386/11022/657   24244/3271    69  768   28.40)
ramon: poll                 wall=19.000s usage=18.871s mem=30048KiB load=1.00 rootload=0.99
(smt.stats   85  12709 369053 1314465 11517/11045/657   24811/3279    69  768   28.59)
ramon: poll                 wall=20.000s usage=19.864s mem=30168KiB load=0.99 rootload=1.00
ramon: end                  Fri Nov  1 18:09:54 2024
ramon: root.execname        z3
ramon: root.utime           19.820s
ramon: root.stime           0.050s
ramon: group.total          19.873s
ramon: group.utime          19.821s
ramon: group.stime          0.052s
ramon: group.mempeak        30424KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              0.99
