ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Sat Oct 26 11:53:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         26201 MiB
ramon: sys.mem.avail        62662 MiB
ramon: sys.nprocs           2432
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_NIA_SAT/From_AProVE_2014__juHashMapCreateContainsKey.jar-obl-11__p30895_safety_0.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = sat.smt=true
ramon: argv                 5 = -st
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 7 = model_validate=true
ramon: childpid             355606
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts        :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin     :units        :memory       )
(sat.stats      0      0    0  5575/5570     0/0  52       0    21.30   0.00)
(nlsat :conflicts 10 :decisions 0 :propagations 808 :clauses 1248 :learned 10)
(nlsat :conflicts 2 :decisions 0 :propagations 418 :clauses 1567 :learned 2)
(nlsat :conflicts 1 :decisions 0 :propagations 458 :clauses 1623 :learned 1)
(nlsat :conflicts 2 :decisions 0 :propagations 383 :clauses 1614 :learned 2)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 3742 :time 0.00)
(nlsat :conflicts 1 :decisions 0 :propagations 174 :clauses 1648 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 192 :clauses 1634 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 267 :clauses 1631 :learned 1)
(sat.stats    139   3822    0  6252/6205   366/34  53       0    25.24   0.14)
(sat.stats    139   3822    0  6255/6208   366/34  53       0    25.14   0.14)
(sat.stats    139   3822    0  6255/6208   366/34  53       0    25.14   0.14)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 10 :elim-bin 18 :time 0.00)
 (sat-probing :probing-assigned 3 :cost 3408125.24 :time 0.00)
(sat.stats    139   3822    0  5787/5722   328/23  63       0    25.24   0.14)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 3716 :time 0.00)
(sat.stats    146   3888    1  5767/5702   354/32  63       0    25.53   0.14)
(nlsat :conflicts 1 :decisions 0 :propagations 229 :clauses 1578 :learned 1)
(sat.stats :conflicts    :restarts      :learned/bin       :gc          :time)
(sat.stats       :decisions   :clauses/bin       :units        :memory       )
(sat.stats    149   4039    2  5787/5718   370/34  63       0    25.55   0.15)
(nlsat :conflicts 1 :decisions 0 :propagations 212 :clauses 1584 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 209 :clauses 1560 :learned 1)
(sat.stats    152   4308    3  5791/5722   384/35  63       0    25.84   0.17)
(nlsat :conflicts 1 :decisions 0 :propagations 263 :clauses 1577 :learned 1)
(sat.stats    155   4565    4  5802/5731   390/35  63       0    25.93   0.19)
(nlsat :conflicts 4 :decisions 0 :propagations 33 :clauses 1576 :learned 4)
(sat.stats    159   4689    5  5803/5732   398/35  63       0    26.08   0.20)
(sat.stats    162   4742    6  5803/5732   401/35  63       0    26.17   0.21)
(nlsat :conflicts 1 :decisions 0 :propagations 235 :clauses 1600 :learned 1)
(sat.stats    165   4929    7  5807/5736   414/36  63       0    26.59   0.32)
(nlsat :conflicts 1 :decisions 0 :propagations 198 :clauses 1573 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 157 :clauses 1604 :learned 1)
(sat.stats    168   5082    8  5813/5742   420/37  63       0    26.61   0.34)
(sat.stats    171   5167    9  5816/5745   426/38  63       0    26.70   0.34)
(sat.stats    174   5226   10  5828/5755   429/38  63       0    26.70   0.34)
(nlsat :conflicts 1 :decisions 0 :propagations 222 :clauses 1640 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 679 :clauses 1611 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 679 :clauses 1611 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 221 :clauses 1611 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 232 :clauses 1623 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 222 :clauses 1601 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 226 :clauses 1599 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 226 :clauses 1595 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 223 :clauses 1612 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 217 :clauses 1640 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 221 :clauses 1631 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 221 :clauses 1633 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 218 :clauses 1642 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 271 :clauses 1655 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 250 :clauses 1667 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 253 :clauses 1667 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 261 :clauses 1655 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 269 :clauses 1670 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 261 :clauses 1665 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 256 :clauses 1668 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 250 :clauses 1659 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 972 :clauses 1750 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 782 :clauses 1715 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 75 :clauses 1691 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 66 :clauses 1688 :learned 1)
(sat.stats    400  15522   11  6383/6266   941/55  63       0    29.16   0.70)
(nlsat :conflicts 1 :decisions 0 :propagations 76 :clauses 1727 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 70 :clauses 1700 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 541 :clauses 1724 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 235 :clauses 1769 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 256 :clauses 1775 :learned 1)
(nlsat :conflicts 1 :decisions 0 :propagations 258 :clauses 1781 :learned 1)
(nlsat :conflicts 2 :decisions 0 :propagations 1071 :clauses 1874 :learned 2)
(nlsat :conflicts 3 :decisions 0 :propagations 1120 :clauses 1877 :learned 3)
(nlsat-b&b :conflicts 47 :decisions 0 :propagations 7652 :clauses 1877 :learned 47)
"checking model (on original set of clauses)"
(sat.stats    492  19683   11  6554/6435  1205/70  63       0    31.11   0.94)
Failed to validate b739 8765: (= (+ (* 2 lam1n18) Nl4arg41 (* -1 #338) (* -1 #339)) -1) true
(sat
    16 none @0
    17 none @0
    18 none @0
    19 none @0
    20 none @0
    21 none @0
    22 none @0
    23 none @0
    24 none @0
    25 none @0
    26 none @0
    27 none @0
    28 none @0
    29 none @0
    30 none @0
    31 none @0
    32 none @0
    33 none @0
    34 none @0
    35 none @0
    36 none @0
    37 none @0
    38 none @0
    39 none @0
    40 none @0
    41 none @0
    42 none @0
    43 none @0
    44 none @0
    45 none @0
    46 none @0
    47 none @0
    48 none @0
    49 none @0
    50 none @0
    51 none @0
    52 none @0
    53 none @0
    54 none @0
    55 none @0
    56 none @0
    57 none @0
    58 none @0
    59 none @0
    60 none @0
    61 none @0
    62 none @0
    63 none @0
    64 none @0
    65 none @0
    66 none @0
    67 none @0
    4 none @0
    1 none @0
    2 none @0
    3 none @0
    5 none @0
    -6 none @0
    7 none @0
    8 none @0
    9 none @0
    12 none @0
    13 none @0
1: 336 none @1
2: 259 none @2
3: -343 none @3
4: 147 none @4
    526 ext euf equality propagation
    455 ext euf equality propagation
    -346 ext arith 87 == 153 --> -346
    307 ext arith 87 == 153 --> 307
    -347 ext arith 87 == 530 --> -347
    -348 ext arith 87 == 715 --> -348
    306 ext arith 87 == 715 --> 306
    -344 ext arith 87 == 983 --> -344
5: 485 none @5
6: 247 none @6
    465 ext euf literal propagation 247 2067: (= Nl4arg72 0)
    835 (835@6 -247@6 -259@2 -336@1)
    574 ext euf equality propagation
    581 ext euf equality propagation
    843 ext euf equality propagation
7: -314 none @7
    -300 binary 314@7
    403 binary 314@7
    -404 binary 314@7
    313 binary 314@7
    -392 binary 404@7
8: 356 none @8
9: 252 none @9
    357 (357@9 -252@9 -356@8)
    361 (361@9 -252@9 -356@8)
    800 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
10: 426 none @10
11: -328 none @11
    427 binary 328@11
    185 binary 328@11
    396 (396@11 -427@11 -426@10)
    312 (312@11 -185@11 -259@2)
    397 binary -396@11
    398 binary -397@11
    452 binary -397@11
    -486 (-486@11 -452@11 -485@5)
12: 389 none @12
    390 binary -389@12
    432 binary -389@12
    433 binary -389@12
    817 (817@12 -389@12 328@11 -396@11)
    822 (822@12 -389@12 328@11 -396@11)
    823 (823@12 -389@12 328@11 -396@11)
    824 (824@12 -389@12 -396@11)
    827 (827@12 -389@12 328@11 -396@11)
    391 binary -390@12
    497 binary -390@12
    840 ext euf literal propagation 390 8378: (= (+ (* Nl4CT2 lam0n18) (* -1 Nl4CT2)) 0)
    87 binary -433@12
    -326 binary -433@12
    -516 (-516@12 -497@12 486@11 -398@11)
    311 (311@12 -87@12 -259@2)
    897 (897@12 -389@12 -396@11)
    860 ext euf equality propagation
    861 ext euf equality propagation
    862 ext euf equality propagation
    864 ext euf equality propagation
    895 ext euf equality propagation
    896 ext euf equality propagation
13: 533 none @13
14: 534 none @14
    237 binary -534@14
    -338 binary -534@14
    410 (410@14 -534@14 -533@13)
    339 (339@14 338@14 -533@13 -313@7)
    399 ext euf literal propagation 410 8399: (= 1 lam5n16)
15: 238 none @15
    331 (331@15 -238@15 -259@2)
    -400 ext euf literal propagation -392 8380: (= Nl4CT1 1)
16: 340 none @16
    387 (387@16 -340@16 -238@15)
    483 (483@16 -340@16 -238@15)
    -874 (-874@16 -340@16 -238@15)
    500 (500@16 -387@16 -238@15)
    499 (499@16 -483@16 -500@16)
    -603 (-603@16 -483@16 -238@15)
    482 ext euf literal propagation 499 8499: (= 0 (+ (* Nl4CT2 lam5n17) lam5n17))
17: -634 none @17
    -242 binary 634@17
    633 binary 634@17
    168 binary 242@17
    169 binary 242@17
    170 binary 242@17
    171 binary 242@17
    172 binary 242@17
    173 binary 242@17
    174 binary 242@17
    175 binary 242@17
    176 binary 242@17
    177 binary 242@17
    178 binary 242@17
    179 binary 242@17
    180 binary 242@17
    181 binary 242@17
    182 binary 242@17
    183 binary 242@17
    184 binary 242@17
    -186 binary 242@17
    187 binary 242@17
    188 binary 242@17
    189 binary 242@17
    190 binary 242@17
    191 binary 242@17
    192 binary 242@17
    193 binary 242@17
    194 binary 242@17
    195 binary 242@17
    196 binary 242@17
    197 binary 242@17
    198 binary 242@17
    199 binary 242@17
    200 binary 242@17
    201 binary 242@17
    202 binary 242@17
    203 binary 242@17
    204 binary 242@17
    205 binary 242@17
    206 binary 242@17
    491 (491@17 -178@17 -252@9 -336@1 -259@2 -356@8 -177@17)
    276 (276@17 -180@17 -169@17 -178@17 -175@17 -172@17 -177@17 -176@17 -179@17 -181@17 -182@17 -183@17 -184@17 -185@11 186@17 -187@17 -188@17 -189@17 -190@17 -191@17 -192@17 -193@17 -194@17 -195@17 -196@17 -197@17 -198@17 -199@17 -200@17 -201@17 -202@17 -203@17 -204@17 -205@17 -206@17 -168@17)
    548 (548@17 -183@17 -172@17)
    521 (521@17 -183@17 -182@17)
    310 (310@17 -184@17 -252@9)
    315 (315@17 -184@17 314@7)
    457 ext euf literal propagation 187 1957: (= (+ (* -1 lam3n7) (* -1 lam3n8) (* -1 lam3n12) (* Nl4arg11 lam3n16) (* Nl4arg12 lam3n17)) 0)
    458 ext euf literal propagation 188 1960: (= (+ (* -1 lam3n0) (* Nl4arg21 lam3n16) (* Nl4arg22 lam3n17)) 0)
    459 ext euf literal propagation 189 1964: (= (+ (* -1 lam3n9) (* -1 lam3n10) (* Nl4arg31 lam3n16) (* Nl4arg32 lam3n17)) 0)
    460 ext euf literal propagation 190 1967: (= (+ (* -1 lam3n1) lam3n10 (* Nl4arg41 lam3n16) (* Nl4arg42 lam3n17)) 0)
    462 ext euf literal propagation 191 1971: (= (+ (* -1 lam3n11) (* -1 lam3n15) (* Nl4arg51 lam3n16) (* Nl4arg52 lam3n17)) 0)
    519 binary -192@17
    520 binary -192@17
    463 ext euf literal propagation 193 1975: (= (+ lam3n8 lam3n15 (* Nl4arg71 lam3n16) (* Nl4arg72 lam3n17)) 0)
    802 ext euf literal propagation 195 759: (= (+ (* Nl4arg91 lam3n16) (* Nl4arg92 lam3n17)) 0)
    886 binary -196@17
    797 binary -197@17
    894 binary -198@17
    464 ext euf literal propagation 200 1977: (= lam3n13 0)
    498 binary -201@17
    495 binary -202@17
    466 ext euf literal propagation 203 1981: (= (+ (* -1 lam3n14) (* -1 lam3n15)) 0)
    549 binary -204@17
    501 binary -205@17
    496 binary -206@17
    545 binary -457@17
    546 binary -457@17
    492 binary -459@17
    543 binary -462@17
    544 binary -462@17
    493 binary -463@17
    494 binary -463@17
    547 binary -464@17
    522 binary -466@17
    342 (342@17 -492@17 -252@9 -177@17 -356@8 -178@17)
    735 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    740 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    411 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    412 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    408 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    415 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    414 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    583 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    518 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    -630 binary -740@17
    -602 binary -583@17
    -134 (-134@17 630@17 -356@8 -252@9 634@17)
    69 binary 134@17
    70 binary 134@17
    71 binary 134@17
    72 binary 134@17
    73 binary 134@17
    74 binary 134@17
    75 binary 134@17
    76 binary 134@17
    77 binary 134@17
    78 binary 134@17
    79 binary 134@17
    80 binary 134@17
    81 binary 134@17
    82 binary 134@17
    83 binary 134@17
    84 binary 134@17
    85 binary 134@17
    86 binary 134@17
    -88 binary 134@17
    89 binary 134@17
    90 binary 134@17
    91 binary 134@17
    92 binary 134@17
    93 binary 134@17
    94 binary 134@17
    95 binary 134@17
    96 binary 134@17
    97 binary 134@17
    98 binary 134@17
    99 binary 134@17
    100 binary 134@17
    101 binary 134@17
    102 binary 134@17
    103 binary 134@17
    104 binary 134@17
    105 binary 134@17
    106 binary 134@17
    107 binary 134@17
    108 binary 134@17
    109 binary 134@17
    248 binary 134@17
    278 binary 134@17
    279 binary 134@17
    280 binary 134@17
    281 binary 134@17
    282 binary 134@17
    283 binary 134@17
    284 binary 134@17
    285 binary 134@17
    286 binary 134@17
    287 binary 134@17
    288 binary 134@17
    289 binary 134@17
    290 binary 134@17
    -291 binary 134@17
    292 binary 134@17
    293 binary 134@17
    294 binary 134@17
    295 binary 134@17
    296 binary 134@17
    297 binary 134@17
    -594 ext euf literal propagation -134 1847: (= Nl4arg101 0)
    448 (448@17 -79@17 -252@9 -336@1 -259@2 -356@8 -78@17)
    275 (275@17 -81@17 -69@17 -76@17 -79@17 -78@17 -73@17 -77@17 -80@17 -82@17 -83@17 -84@17 -85@17 -86@17 -87@12 88@17 -89@17 -90@17 -91@17 -92@17 -93@17 -94@17 -95@17 -96@17 -97@17 -98@17 -99@17 -100@17 -101@17 -102@17 -103@17 -104@17 -105@17 -106@17 -107@17 -108@17 -109@17 -70@17)
    309 (309@17 -86@17 -252@9)
    -421 (-421@17 -86@17 314@7)
    420 (420@17 -86@17 -252@9 404@7 -356@8)
    444 binary -89@17
    445 binary -89@17
    529 ext euf literal propagation 89 1752: (= (+ (* -1 lam0n7) (* -1 lam0n8) (* -1 lam0n12) (* Nl4arg11 lam0n17) (* Nl4arg12 lam0n18)) 0)
    502 binary -90@17
    449 binary -91@17
    559 ext euf literal propagation 91 1759: (= (+ (* -1 lam0n9) (* -1 lam0n10) (* Nl4arg31 lam0n17) (* Nl4arg32 lam0n18)) 0)
    503 ext euf literal propagation 92 1762: (= (+ (* -1 lam0n1) lam0n10 (* Nl4arg41 lam0n17) (* Nl4arg42 lam0n18)) 0)
    418 binary -93@17
    419 binary -93@17
    530 ext euf literal propagation 93 1765: (= (+ (* -1 lam0n11) lam0n15 (* Nl4arg51 lam0n17) (* Nl4arg52 lam0n18)) 0)
    446 binary -94@17
    447 binary -94@17
    504 ext euf literal propagation 95 1770: (= (+ lam0n8 (* -1 lam0n15) (* Nl4arg71 lam0n17) (* Nl4arg72 lam0n18)) 0)
    831 ext euf literal propagation 96 193: (= (+ (* Nl4arg81 lam0n17) (* Nl4arg82 lam0n18)) 0)
    819 ext euf literal propagation 97 197: (= (+ (* Nl4arg91 lam0n17) (* Nl4arg92 lam0n18)) 0)
    794 binary -98@17
    795 binary -99@17
    788 binary -101@17
    505 ext euf literal propagation 102 1772: (= lam0n13 0)
    525 binary -103@17
    434 binary -104@17
    425 binary -105@17
    506 ext euf literal propagation 106 1778: (= (+ (* -1 lam0n14) lam0n15 (* -1 lam0n16)) 0)
    450 binary -107@17
    451 binary -107@17
    422 binary -108@17
    435 binary -109@17
    848 (848@17 -289@17 314@7)
    316 binary 421@17
    -394 binary 421@17
    374 (374@17 -445@17 -81@17 -147@4 343@3 -76@17 -77@17)
    566 binary -502@17
    567 binary -502@17
    364 (364@17 -449@17 -259@2 -336@1 -78@17 -79@17)
    337 (337@17 -449@17 -252@9 -356@8 -78@17 -79@17)
    540 binary -503@17
    541 binary -503@17
    584 binary -504@17
    585 binary -504@17
    570 binary -505@17
    536 binary -525@17
    568 binary -506@17
    569 binary -506@17
    507 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    607 (607@17 -86@17 -426@10 -427@11 -98@17 -389@12 -340@16 -533@13 -534@14 -238@15 634@17)
    -628 (-628@17 -607@17 -426@10 -427@11)
    906 binary -294@17
18: 321 none @18
    -627 (-627@18 -321@18 -86@17 -98@17)
    -675 (-675@18 -321@18 -86@17 -99@17)
    -686 (-686@18 -321@18 -86@17 -99@17)
    658 (658@18 -321@18 -86@17 326@12 -101@17)
    -650 (-650@18 -321@18 -86@17)
    606 (606@18 -321@18 -98@17 326@12 -86@17 -432@12)
    756 (756@18 -321@18 -86@17 -433@12 -97@17 -432@12)
    657 (657@18 -321@18 -86@17 -433@12 -99@17 -432@12)
    -763 (-763@18 -321@18 -86@17 -97@17)
    -764 (-764@18 -321@18 -86@17 -100@17)
    659 (659@18 -321@18 -101@17 -86@17 326@12)
    165 (165@18 -321@18 326@12 -432@12 650@18 -336@1 -259@2 -147@4 343@3)
    441 (441@18 -321@18 -86@17)
    -898 (-898@18 -321@18 -86@17 -396@11 -389@12 -97@17 -195@17)
    166 (166@18 -658@18 -659@18)
    -673 (-673@18 -658@18 -659@18)
    -693 (-693@18 -658@18 -427@11 -426@10)
    -640 (-640@18 -606@18 -433@12 -432@12)
    -636 (-636@18 -606@18 -426@10 -427@11)
    163 (163@18 -606@18 -607@17)
    -677 (-677@18 -659@18 -427@11 -426@10)
    707 binary -165@18
    -365 (-365@18 -441@18 -86@17)
    751 binary -163@18
    741 (741@18 -163@18 -259@2 -336@1)
    796 (796@18 -163@18 -259@2 -336@1)
    798 (798@18 -163@18 -259@2 -336@1)
    852 (852@18 -163@18 -533@13 630@17 634@17 -340@16 338@14 -238@15 -336@1 -259@2 -906@17)
    726 binary -707@18
    725 binary -707@18
    757 binary -707@18
    758 binary -707@18
    -884 binary -741@18
    -642 binary -796@18
    721 (721@18 -725@18 -726@18)
    -770 (-770@18 -758@18 -426@10 328@11)
    907 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    638 ext arith 87 == 893 --> 638
    -767 ext arith 87 == 379 --> -767
    -805 ext arith 87 == 592 --> -805
    -768 ext arith 87 == 592 --> -768
    -804 ext arith 87 == 901 --> -804
    -851 ext arith 87 == 1298 --> -851
    -679 ext arith 87 == 383 --> -679
    -689 ext arith 87 == 383 --> -689
    -691 ext arith 87 == 596 --> -691
    695 ext arith 87 == 905 --> 695
    -882 ext arith 87 == 1302 --> -882
    -635 ext arith 87 == 584 --> -635
    -885 ext arith 87 == 1290 --> -885
    -881 ext arith 658 427 426 87 == 774 --> -881
    -872 ext arith 659 427 426 87 == 774 --> -872
    -676 ext arith 659 427 426 211 == 773 --> -676
    -687 ext arith 658 427 426 211 == 773 --> -687
    -880 ext arith 658 427 426 87 == 212 211 == 773 --> -880
    -655 ext arith 758 79 == 207 87 == 208 --> -655
    -654 ext arith 756 87 == 196 70 == 195 --> -654
    -775 ext arith 757 79 == 207 --> -775
    539 ext arith 427 426 541 336 259 70 449 78 -365 356 252 170 == 732 --> 539
    -785 ext arith 757 207 == 769 79 == 207 --> -785
    -806 ext arith 757 79 == 207 207 == 769 87 == 770 --> -806
    -779 ext arith 758 79 == 207 207 == 769 87 == 770 --> -779
    -891 ext arith 86 321 157 == 1246 --> -891
    -429 ext arith 289 852 157 == 1246 --> -429
    301 ext arith 289 852 157 == 1246 --> 301
    -889 ext arith 86 321 152 == 1241 --> -889
    305 ext arith 289 852 152 == 1241 --> 305
    323 ext arith 289 852 169 == 1258 --> 323
    -476 ext arith 289 852 169 == 1258 --> -476
    -833 ext arith 289 852 143 == 1233 --> -833
    -857 ext arith 86 321 143 == 1233 --> -857
    -849 ext arith 86 321 194 == 1285 87 == 1287 --> -849
    -850 ext arith 86 321 202 == 1293 87 == 1295 --> -850
    656 ext arith 86 321 87 == 204 76 == 203 --> 656
    -678 ext arith 86 321 203 == 765 87 == 204 --> -678
    -692 ext arith 86 321 203 == 765 87 == 204 --> -692
    -787 ext arith 86 321 87 == 766 87 == 204 203 == 765 --> -787
    -778 ext arith 86 321 87 == 766 87 == 204 203 == 765 --> -778
    647 (647@18 -321@18 -86@17)
    646 (646@18 -321@18 -86@17)
    755 ext arith 86 321 87 == 196 70 == 195 --> 755
    -774 ext arith 86 321 87 == 196 --> -774
    -769 ext arith 86 321 87 == 196 195 == 757 --> -769
    -777 ext arith 86 321 87 == 196 195 == 757 --> -777
    -776 ext arith 86 321 87 == 758 87 == 196 195 == 757 --> -776
    -813 ext arith 86 321 191 == 753 87 == 192 87 == 754 --> -813
    -816 ext arith 86 321 191 == 753 87 == 192 87 == 754 --> -816
    384 ext arith 567 86 321 69 427 426 158 == 720 --> 384
    -877 ext arith 659 658 87 == 1303 --> -877
    855 ext arith 758 757 87 == 1299 --> 855
    513 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    830 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    579 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    866 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    515 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    576 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    565 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    510 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    577 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    508 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    563 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    575 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    531 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    580 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    527 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    -393 ext euf literal propagation -394 8382: (= (* Nl4CT1 lam0n17) 1)
    865 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    859 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    164 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    748 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    509 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    514 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    724 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    162 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    470 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    469 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    471 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    832 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    826 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    161 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    869 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    720 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    440 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    535 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    754 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    -784 ext arith 87 == 204 87 == 203 --> -784
    -652 ext arith 87 == 196 87 == 195 --> -652
    -688 ext arith 87 == 375 --> -688
    -674 ext arith 87 == 588 --> -674
    -690 ext arith 87 == 588 --> -690
    694 ext arith 87 == 897 --> 694
    -766 ext arith 87 == 367 --> -766
    760 ext arith 87 == 580 --> 760
    759 ext arith 87 == 580 --> 759
    -542 (-542@18 -539@18 -427@11 -426@10)
    588 ext arith 77 427 426 86 321 567 -343 147 570 539 569 584 80 445 391 76 336 259 45 536 356 252 449 -88 419 176 == 738 64 == 87 87 == 187 158 == 720 --> 588
    853 ext arith -849 87 == 1287 --> 853
    856 ext arith -850 87 == 1295 --> 856
    -900 ext arith 756 755 87 == 1287 --> -900
19: -332 none @19
    150 binary 332@19
    905 (905@19 332@19 314@7)
    333 binary -905@19
    624 (624@19 332@19 338@14 630@17 634@17 635@18)
20: 662 none @20
    -879 (-879@20 -662@20 -658@18 -659@18)
21: -875 none @21
    663 (663@21 875@21 -658@18 -659@18)
    600 (600@21 -663@21 -662@20)
    734 ext euf literal propagation 600 8609: (= (* Nl4arg132 undef40) (* Nl4arg131 undef40))
22: 746 none @22
    749 binary -746@22
    750 binary -746@22
23: 901 none @23
24: 598 none @24
    807 binary -598@24
    808 binary -598@24
    -257 (-257@24 -598@24 -77@17 -80@17 -584@17 -86@17 -321@18 -336@1 -259@2 -657@18 -656@18 -539@18 -384@18 -756@18 -755@18 -662@20 -607@17 -606@18 343@3 -147@4 -427@11 -426@10 -419@17 88@17 -449@17 -536@17 -356@8 -252@9 -76@17 -569@17 -570@17 -567@17 -445@17 875@21 -247@6 -389@12 -96@17 -827@12)
    132 ext euf literal propagation 598 8607: (= 0 Nl4arg81)
    -304 (-304@24 257@24 -426@10 -427@11)
    -528 (-528@24 257@24 -427@11 -426@10 -389@12)
    -461 ext euf literal propagation -528 8536: (= 0 (* Nl4arg22 lam0n18))
    592 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    709 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    240 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    416 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    124 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    153 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    219 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    325 ext arith 662 901 756 755 657 656 13 336 259 -875 -343 147 758 757 45 86 321 536 356 252 449 -88 419 427 426 77 607 606 567 570 569 584 80 445 391 76 87 == 2119 176 == 738 64 == 87 87 == 187 158 == 720 --> 325
    489 ext arith 662 901 756 755 657 656 13 336 259 -875 -343 147 758 757 45 86 321 536 356 252 449 -88 419 427 426 77 607 606 567 570 569 584 80 445 391 76 87 == 2119 176 == 738 64 == 87 87 == 187 158 == 720 --> 489
    -490 ext arith 662 901 756 755 657 656 13 336 259 -875 -343 147 758 757 45 86 321 536 356 252 449 -88 419 427 426 77 607 606 567 570 569 584 80 445 391 76 87 == 2119 176 == 738 64 == 87 87 == 187 158 == 720 --> -490
    -786 ext arith 662 901 756 755 13 336 259 -875 -343 147 758 757 45 86 321 536 356 252 449 -88 419 427 426 77 607 606 567 570 539 569 584 80 445 391 76 87 == 2119 176 == 738 64 == 87 87 == 187 158 == 720 --> -786
    -765 ext arith 662 901 657 656 13 336 259 -875 -343 147 758 757 45 86 321 536 356 252 449 -88 419 427 426 77 607 606 567 570 539 569 584 80 445 391 76 87 == 2119 176 == 738 64 == 87 87 == 187 158 == 720 --> -765
    810 ext arith 87 == 362 87 == 363 --> 810
    809 ext arith 87 == 362 87 == 363 --> 809
    812 ext arith 87 == 884 87 == 885 --> 812
    811 ext arith 87 == 884 87 == 885 --> 811
    -303 ext arith -257 427 426 158 == 720 --> -303
    909 (909@24 -325@24 -252@9 -259@2 -321@18 -238@15 -336@1 338@14 -340@16 -342@17 -356@8 -426@10 -427@11 -460@17 -491@17 -492@17 -533@13 -539@18 630@17 634@17 -794@17 -886@17 -897@12 -86@17)
    -477 binary 490@24
    327 (327@24 490@24 -87@12)
    329 (329@24 490@24 -185@11)
    555 (555@24 -909@24 -356@8 -252@9 -336@1 -259@2 -492@17 -427@11 -426@10 -190@17 -325@24)
    -478 (-478@24 -329@24 -427@11)
    320 ext arith 492 427 426 325 336 259 356 252 87 == 8946 87 == 1966 --> 320
    -556 ext arith 492 427 426 325 336 259 356 252 87 == 8946 87 == 1966 --> -556
    -814 ext arith 811 87 == 885 --> -814
    -815 ext arith 809 87 == 363 --> -815
    324 ext arith 492 427 426 177 336 259 356 252 325 169 87 == 1966 --> 324
    335 ext arith 87 == 552 --> 335
    438 (438@24 -320@24 -184@17)
    -401 binary 556@24
    473 (473@24 -324@24 -184@17)
    467 (467@24 -438@24 -473@24)
    437 ext euf literal propagation 467 8460: (= 0 (+ (* Nl4arg41 lam3n16) lam3n16))
    -402 ext euf literal propagation -393 8381: (= lam0n17 1)
    468 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    472 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    867 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    453 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    868 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    -834 ext arith 87 == 707 --> -834
    368 ext arith 87 == 714 --> 368
    308 ext arith 87 == 714 --> 308
    -431 ext arith 87 == 719 --> -431
    302 ext arith 87 == 719 --> 302
    -893 ext arith 87 == 719 --> -893
    773 ext arith 184 320 86 321 195 == 757 87 == 758 87 == 196 --> 773
    772 ext arith -652 184 320 195 == 757 87 == 758 87 == 196 --> 772
25: -355 none @25
    -474 binary 355@25
    322 binary 355@25
    -330 (-330@25 355@25 338@14 -533@13)
    -375 (-375@25 355@25 332@19)
    -362 (-362@25 355@25 332@19)
    -436 binary 474@25
    475 binary 474@25
    -345 (-345@25 -322@25 338@14 -533@13)
    -443 (-443@25 375@25 332@19)
    -442 binary 443@25
26: -115 none @26
    114 (114@26 115@26 -252@9 -259@2 -336@1 -356@8)
27: -110 none @27
28: 511 none @28
    903 (903@28 -511@28 343@3 -427@11 -426@10 -356@8 -252@9 -449@17 -541@17 -259@2 -86@17 -321@18 -336@1 -389@12 -247@6)
    561 ext euf literal propagation 511 8511: (= 0 (* Nl4arg52 lam0n18))
    560 ext euf literal propagation 511 8511: (= 0 (* Nl4arg52 lam0n18))
    454 ext euf literal propagation 511 8511: (= 0 (* Nl4arg52 lam0n18))
    246 ext euf literal propagation 511 8511: (= 0 (* Nl4arg52 lam0n18))
    456 ext euf literal propagation 511 8511: (= 0 (* Nl4arg52 lam0n18))
    858 (858@28 -246@28 -336@1 -259@2)
    -771 (-771@28 -246@28 -336@1 -259@2 -415@17)
    160 ext euf literal propagation 858 8895: (= 0 (* -1 Nl4arg52))
    708 ext euf literal propagation 858 8895: (= 0 (* -1 Nl4arg52))
    839 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    578 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    586 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
29: -250 none @29
    428 binary 250@29
    -405 (-405@29 250@29 -533@13 -534@14)
    -388 (-388@29 250@29 332@19)
    -430 binary 388@29
30: 363 none @30
    -908 (-908@30 -363@30 -325@24 -259@2 -539@18 -336@1 362@25)
    -625 (-625@30 908@30 -259@2 -325@24 -336@1 338@14 -340@16 -356@8 -624@19 -533@13 -539@18 602@17 -606@18 -607@17 -363@30 -252@9 630@17 634@17 -238@15)
    -155 binary 625@30
31: -370 none @31
    121 binary 370@31
    -613 (-613@31 370@31 634@17 338@14 -740@17 642@18)
    892 (892@31 370@31 250@29)
    -372 (-372@31 370@31 355@25)
    -126 binary 613@31
    612 binary 613@31
    -845 binary -892@31
32: 716 none @32
    717 binary -716@32
    718 binary -716@32
    863 ext euf literal propagation 716 8736: (= undef35 0)
33: -484 none @33
    380 binary 484@33
    -479 binary 484@33
34: 122 none @34
35: 385 none @35
    386 (386@35 -385@35 -384@18 -122@34)
    844 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    842 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
36: 233 none @36
    228 (228@36 -233@36 -325@24 338@14 355@25 -533@13 602@17)
37: 68 none @37
38: 151 none @38
39: 334 none @39
    481 (481@39 -334@39 -151@38)
    537 (537@39 -334@39 -151@38)
    -730 (-730@39 -481@39 -151@38)
    480 (480@39 -481@39 -537@39)
    382 (382@39 -537@39 -334@39)
    488 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    552 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    753 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
40: 601 none @40
    731 binary -601@40
    732 binary -601@40
    745 (745@40 -601@40 -607@17 -606@18)
    737 (737@40 -732@40 -606@18 630@17 634@17 -607@17 -533@13 -534@14 -731@40)
    738 (738@40 -732@40 -606@18 630@17 634@17 -607@17 -533@13 -534@14 -731@40)
    736 (736@40 -737@40 -738@40)
    -883 ext arith 731 87 == 2107 --> -883
41: 538 none @41
    298 (298@41 -538@41 -297@17 484@33)
    -744 (-744@41 -538@41 -325@24 375@25 -356@8 -539@18 -380@33 -259@2 -252@9 -537@39 -336@1 -481@39)
    553 (553@41 -298@41 -397@11 -336@1 -259@2 -426@10 730@39 328@11 -382@39 -147@4 343@3)
    -752 ext euf literal propagation -744 8776: (= (+ Nl4arg32 (* 2 lam2n18) Nl4arg42 (* -1 #543) (* -1 #544) (* -1 #551) (* -1 #552)) 2)
    557 binary -553@41
    532 ext euf literal propagation 553 8562: (= (+ (* Nl4CT2 lam2n18) (* -1 Nl4CT2)) 0)
    523 ext euf literal propagation 553 8562: (= (+ (* Nl4CT2 lam2n18) (* -1 Nl4CT2)) 0)
    395 binary -557@41
    558 binary -557@41
    439 binary -532@41
    551 binary -532@41
    -793 ext arith 87 == 840 --> -793
    847 ext arith 87 == 1234 --> 847
42: 587 none @42
    589 binary -587@42
    554 ext euf literal propagation 587 8596: (= 0 (+ (* -1 Nl4arg42) (* -15 Nl4arg12) (* -2 Nl4arg32) (* -1 Nl4CT2) (* -16 Nl4arg52) (* -12 Nl4arg72)))
43: 604 none @43
    820 (820@43 -604@43 652@18)
    728 (728@43 -604@43 -340@16 -533@13 338@14 -238@15)
44: 605 none @44
    821 (821@44 -605@44 -321@18 -86@17)
    729 (729@44 -605@44 -340@16 -533@13 338@14 -238@15)
    593 (593@44 -605@44 -604@43)
    818 (818@44 -821@44 -820@43)
    241 (241@44 -729@44 -728@43)
    133 ext euf literal propagation 593 8602: (= 0 Nl4arg91)
    829 ext euf literal propagation 593 8602: (= 0 Nl4arg91)
    406 ext euf literal propagation 593 8602: (= 0 Nl4arg91)
    424 ext euf literal propagation 593 8602: (= 0 Nl4arg91)
    719 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    599 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    125 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    154 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    220 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    723 ext arith 87 == 2106 --> 723
    722 ext arith 87 == 2106 --> 722
    -648 ext arith 87 == 366 --> -648
    -641 ext arith 87 == 366 --> -641
    -715 ext arith 87 == 579 --> -715
    -733 ext arith 87 == 579 --> -733
    762 ext arith 87 == 888 87 == 889 --> 762
    761 ext arith 87 == 888 87 == 889 --> 761
    631 binary -599@44
    632 binary -599@44
    616 binary -125@44
    617 binary -125@44
    710 binary -154@44
    711 binary -154@44
    -637 (-637@44 -220@44 -336@1 -259@2 -162@18)
    -629 (-629@44 -220@44 -336@1 -259@2 -162@18)
    781 (781@44 -762@44 637@44)
45: 789 none @45
    902 binary -789@45
46: 705 none @46
47: -216 none @47
    358 binary 216@47
    317 (317@47 216@47 314@7)
    -359 (-359@47 216@47 314@7)
    619 (619@47 216@47 -533@13 -638@18 -607@17 634@17 -606@18 338@14)
    904 (904@47 216@47 355@25)
    -618 (-618@47 -619@47 -340@16 -533@13 -534@14 216@47 -238@15 634@17 884@18 -638@18)
    -221 binary 618@47
48: -846 none @48
    899 (899@48 846@48 257@24)
    -582 binary -899@48
49: 609 none @49
    671 (671@49 -609@49 -533@13 -534@14 -340@16 -238@15)
50: 608 none @50
    670 (670@50 -608@50 -340@16 -533@13 338@14 -238@15)
    595 (595@50 -608@50 -609@49)
    -873 (-873@50 -608@50 -533@13 -671@49 338@14)
    -685 (-685@50 -670@50 -533@13 -609@49 338@14)
    243 (243@50 -670@50 -671@49)
    135 ext euf literal propagation 595 8604: (= 0 Nl4arg111)
    590 (590@50 -135@50 -164@18)
    696 binary -590@50
    697 binary -590@50
    747 ext euf literal propagation 590 8599: (= (* Nl4arg112 undef38) (* Nl4arg111 undef38))
    -703 (-703@50 -696@50 -656@18 -657@18)
    -702 (-702@50 -697@50 -656@18 -657@18)
    127 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    156 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    222 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    825 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    -643 ext arith 87 == 374 --> -643
    -704 ext arith 87 == 374 --> -704
    -714 ext arith 87 == 587 --> -714
    -743 ext arith 87 == 896 --> -743
    -672 ext arith 87 == 896 --> -672
    620 binary -127@50
    621 binary -127@50
    680 binary -156@50
    681 binary -156@50
    614 binary -222@50
    615 binary -222@50
51: -706 none @51
    -698 binary 706@51
52: 611 none @52
    783 (783@52 -611@52 -534@14 -533@13 874@16)
53: 318 none @53
54: 790 none @54
    727 ext euf literal propagation 790 8825: (= 0 (* Nl4arg121 undef39))
    591 ext euf literal propagation 790 8825: (= 0 (* Nl4arg121 undef39))
    644 binary -591@54
    645 binary -591@54
    -649 (-649@54 -644@54 -725@18)
55: 354 none @55
    376 binary -354@55
    377 binary -354@55
56: 596 none @56
    610 binary -596@56
    136 ext euf literal propagation 596 8605: (= 0 Nl4arg121)
    244 ext euf literal propagation 596 8605: (= 0 Nl4arg121)
    782 (782@56 -610@56 -340@16 -533@13 338@14 -238@15)
    -780 (-780@56 -782@56 -611@52 338@14 -533@13)
    128 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    157 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    223 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    -626 ext arith 87 == 378 --> -626
    -713 ext arith 87 == 378 --> -713
    -712 ext arith 87 == 591 --> -712
    -742 ext arith 87 == 900 --> -742
    -653 ext arith 87 == 900 --> -653
    660 binary -128@56
    661 binary -128@56
    622 binary -223@56
    623 binary -223@56
57: -701 none @57
    -699 binary 701@57
    700 binary 701@57
58: 801 none @58
    350 ext arith 87 == 2103 --> 350
    118 binary -350@58
    349 (349@58 -118@58 -534@14)
    351 (351@58 -118@58 332@19)
59: 226 none @59
    407 ext euf literal propagation 226 2021: (= Nl4arg71 0)
    828 ext euf literal propagation 226 2021: (= Nl4arg71 0)
    838 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    791 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
60: 792 none @60
    225 ext euf literal propagation 792 8828: (= 0 Nl4arg51)
    409 ext euf literal propagation 792 8828: (= 0 Nl4arg51)
    562 ext euf literal propagation 792 8828: (= 0 Nl4arg51)
    799 (799@60 -225@60 -259@2 -336@1 -247@6)
    841 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    131 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
61: 803 none @61
    353 ext arith 87 == 2104 --> 353
62: -639 none @62
63: 597 none @63
    870 binary -597@63
    871 binary -597@63
    137 ext euf literal propagation 597 8606: (= 0 Nl4arg131)
    668 (668@63 -870@63 -340@16 -533@13 -238@15 338@14)
    669 (669@63 -871@63 -340@16 -533@13 -238@15 338@14)
    683 (683@63 -137@63 -356@8 -252@9 679@18)
    245 (245@63 -668@63 -669@63)
    -684 (-684@63 -668@63 -534@14 -533@13 -871@63)
    -890 (-890@63 -683@63 -658@18 -659@18)
    129 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    158 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    224 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    682 ext arith 659 658 87 == 382 --> 682
    665 ext arith 659 658 87 == 595 --> 665
    664 ext arith 659 658 87 == 595 --> 664
    -878 ext arith 87 == 904 --> -878
    666 binary -224@63
    667 binary -224@63
    -876 (-876@63 -682@63 679@18)
64: 423 none @64
    413 ext euf literal propagation 423 8412: (= 0 (* Nl4arg11 lam5n16))
    837 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
    366 ext arith 7 == 87 --> 366
    -888 ext arith 87 == 316 --> -888
    369 ext arith 87 == 529 --> 369
    367 ext arith 87 == 846 --> 367
    373 (373@64 -366@64 -533@13 -534@14)
65: 217 none @65
    -887 binary -217@65
66: 159 none @66
    573 (573@66 -159@66 -259@2 -336@1)
    512 ext euf literal propagation 159 1919: (= Nl4arg62 0)
67: 130 none @67
    564 ext euf literal propagation 130 1838: (= Nl4arg61 0)
    417 ext euf literal propagation 130 1838: (= Nl4arg61 0)
    836 ext euf literal propagation 526 8534: (= 0 (* Nl4arg12 lam0n18))
68: -123 none @68
69: -111 none @69
    -113 ext arith -111 19 == 87 87 == 359 87 == 358 --> -113
    -119 ext arith -111 19 == 87 --> -119
    -116 ext arith -111 122 385 87 == 347 19 == 87 --> -116
    117 ext arith 366 118 -111 -343 147 122 385 87 == 352 87 == 359 19 == 87 87 == 358 --> 117
70: 120 none @70
71: 352 none @71
    378 binary -352@71
    379 binary -352@71
72: -218 none @72
73: 208 none @73
    210 ext arith 208 87 == 880 87 == 881 --> 210
    213 ext arith 208 87 == 869 87 == 870 --> 213
74: 571 none @74
    572 ext arith 427 426 449 391 336 432 541 86 321 259 -343 356 252 87 == 176 64 == 87 176 == 738 170 == 732 --> 572
    524 ext euf literal propagation 824 8861: (= (* -1 lam0n18) (* -1 lam3n17))
    550 ext euf literal propagation 824 8861: (= (* -1 lam0n18) (* -1 lam3n17))
75: 299 none @75
76: 143 none @76
77: -231 none @77
78: -234 none @78
79: -258 none @79
    -262 ext arith 427 426 325 497 147 259 -258 176 == 738 87 == 145 87 == 176 64 == 87 --> -262
80: 212 none @80
81: -10 none @81
82: -138 none @82
83: -255 none @83
84: 253 none @84
    254 (254@84 -253@84 -118@58)
85: 141 none @85
86: -239 none @86
87: 148 none @87
88: 139 none @88
89: 256 none @89
90: 214 none @90
    215 ext arith -343 147 366 118 214 87 == 875 87 == 880 87 == 874 87 == 881 --> 215
91: 142 none @91
92: 251 none @92
93: 274 none @93
    270 ext arith 427 426 325 497 147 259 274 176 == 738 87 == 145 87 == 176 64 == 87 --> 270
    -273 ext arith 427 426 325 497 147 259 274 176 == 738 87 == 145 87 == 176 64 == 87 --> -273
94: 383 none @94
    381 (381@94 -383@94 -452@11 -391@12)
    -487 (-487@94 -381@94 328@11)
    -651 ext arith 87 == 145 --> -651
95: 211 none @95
    360 (360@95 -211@95 -259@2 -336@1 -212@80 -356@8)
96: 260 none @96
    261 (261@96 -260@96 -147@4)
97: 266 none @97
    265 (265@97 -266@97 -366@64)
98: 341 none @98
99: 269 none @99
100: 854 none @100
101: -739 none @101
102: 236 none @102
103: -167 none @103
104: 140 none @104
105: 145 none @105
106: 146 none @106
107: 271 none @107
    272 (272@107 -271@107 -147@4)
108: 267 none @108
109: -227 none @109
110: 249 none @110
111: 209 none @111
112: 264 none @112
113: -11 none @113
114: -152 none @114
115: 371 none @115
116: 235 none @116
117: -268 none @117
118: -207 none @118
119: 144 none @119
120: -319 none @120
121: 112 none @121
122: -517 none @122
123: 230 none @123
124: -229 none @124
125: 263 none @125
126: 232 none @126
127: 149 none @127
(-10 11)
(68 69)
(68 70)
(68 71)
(68 72)
(68 73)
(68 74)
(68 75)
(68 76)
(68 77)
(68 78)
(68 79)
(68 80)
(68 81)
(68 82)
(68 83)
(68 84)
(68 85)
(68 86)
(68 87)
(68 -88)
(68 89)
(68 90)
(68 91)
(68 92)
(68 93)
(68 94)
(68 95)
(68 96)
(68 97)
(68 98)
(68 99)
(68 100)
(68 101)
(68 102)
(68 103)
(68 104)
(68 105)
(68 106)
(68 107)
(68 108)
(68 109)
(69 110)
(69 111)
(69 112)
(69 113)
(69 114)
(69 115)
(69 116)
(69 117)
(69 118)
(69 119)
(69 120)
(69 121)
(69 122)
(69 -123)
(69 124)
(69 125)
(69 126)
(69 127)
(69 128)
(69 129)
(69 130)
(69 131)
(69 132)
(69 133)
(69 134)
(69 135)
(69 136)
(69 137)
(69 138)
(69 139)
(69 140)
(69 141)
(69 142)
(69 143)
(69 144)
(69 145)
(69 146)
(69 147)
(69 148)
(69 149)
(69 150)
(69 151)
(69 -152)
(69 153)
(69 154)
(69 155)
(69 156)
(69 157)
(69 158)
(69 159)
(69 160)
(69 161)
(69 162)
(69 163)
(69 164)
(69 165)
(69 166)
(69 -275)
(70 110)
(70 111)
(70 112)
(70 113)
(70 114)
(70 115)
(70 116)
(70 117)
(70 118)
(70 119)
(70 120)
(70 121)
(70 122)
(70 -123)
(70 124)
(70 125)
(70 126)
(70 127)
(70 128)
(70 129)
(70 130)
(70 131)
(70 132)
(70 133)
(70 134)
(70 135)
(70 136)
(70 137)
(70 138)
(70 139)
(70 140)
(70 141)
(70 142)
(70 143)
(70 144)
(70 145)
(70 146)
(70 147)
(70 148)
(70 149)
(70 150)
(70 151)
(70 -152)
(70 153)
(70 154)
(70 155)
(70 156)
(70 157)
(70 158)
(70 159)
(70 160)
(70 161)
(70 162)
(70 163)
(70 164)
(70 165)
(70 166)
(70 -275)
(71 -104)
(71 110)
(71 111)
(71 112)
(71 113)
(71 114)
(71 115)
(71 116)
(71 117)
(71 118)
(71 119)
(71 120)
(71 121)
(71 122)
(71 -123)
(71 124)
(71 125)
(71 126)
(71 127)
(71 128)
(71 129)
(71 130)
(71 131)
(71 132)
(71 133)
(71 134)
(71 135)
(71 136)
(71 137)
(71 138)
(71 139)
(71 140)
(71 141)
(71 142)
(71 143)
(71 144)
(71 145)
(71 146)
(71 147)
(71 148)
(71 149)
(71 150)
(71 151)
(71 -152)
(71 153)
(71 154)
(71 155)
(71 156)
(71 157)
(71 158)
(71 159)
(71 160)
(71 161)
(71 163)
(71 164)
(71 165)
(71 166)
(71 -275)
(71 434)
(72 -105)
(72 110)
(72 111)
(72 112)
(72 113)
(72 114)
(72 115)
(72 116)
(72 117)
(72 118)
(72 119)
(72 120)
(72 121)
(72 122)
(72 -123)
(72 124)
(72 126)
(72 127)
(72 128)
(72 129)
(72 130)
(72 131)
(72 132)
(72 133)
(72 134)
(72 135)
(72 136)
(72 137)
(72 138)
(72 139)
(72 140)
(72 141)
(72 142)
(72 143)
(72 144)
(72 145)
(72 146)
(72 147)
(72 148)
(72 149)
(72 150)
(72 151)
(72 -152)
(72 153)
(72 154)
(72 155)
(72 156)
(72 157)
(72 158)
(72 159)
(72 160)
(72 161)
(72 162)
(72 163)
(72 164)
(72 165)
(72 166)
(72 -275)
(72 425)
(73 110)
(73 111)
(73 112)
(73 113)
(73 114)
(73 115)
(73 116)
(73 117)
(73 118)
(73 119)
(73 120)
(73 121)
(73 122)
(73 -123)
(73 124)
(73 125)
(73 126)
(73 127)
(73 128)
(73 129)
(73 130)
(73 131)
(73 132)
(73 133)
(73 134)
(73 135)
(73 136)
(73 137)
(73 138)
(73 139)
(73 140)
(73 141)
(73 142)
(73 143)
(73 144)
(73 145)
(73 146)
(73 147)
(73 148)
(73 149)
(73 150)
(73 151)
(73 -152)
(73 153)
(73 154)
(73 155)
(73 156)
(73 157)
(73 158)
(73 159)
(73 160)
(73 161)
(73 162)
(73 163)
(73 164)
(73 165)
(73 166)
(73 -275)
(74 -108)
(74 110)
(74 111)
(74 112)
(74 113)
(74 114)
(74 115)
(74 116)
(74 117)
(74 118)
(74 119)
(74 120)
(74 121)
(74 122)
(74 -123)
(74 124)
(74 125)
(74 126)
(74 127)
(74 128)
(74 129)
(74 130)
(74 131)
(74 132)
(74 133)
(74 134)
(74 135)
(74 136)
(74 137)
(74 138)
(74 139)
(74 140)
(74 141)
(74 142)
(74 143)
(74 144)
(74 145)
(74 146)
(74 147)
(74 148)
(74 149)
(74 150)
(74 151)
(74 -152)
(74 153)
(74 154)
(74 155)
(74 156)
(74 157)
(74 158)
(74 159)
(74 160)
(74 161)
(74 163)
(74 164)
(74 165)
(74 166)
(74 -275)
(74 422)
(75 -109)
(75 110)
(75 111)
(75 112)
(75 113)
(75 114)
(75 115)
(75 116)
(75 117)
(75 118)
(75 119)
(75 120)
(75 121)
(75 122)
(75 -123)
(75 124)
(75 125)
(75 126)
(75 127)
(75 128)
(75 129)
(75 130)
(75 131)
(75 132)
(75 133)
(75 134)
(75 135)
(75 136)
(75 137)
(75 138)
(75 139)
(75 140)
(75 141)
(75 142)
(75 143)
(75 144)
(75 145)
(75 146)
(75 147)
(75 148)
(75 149)
(75 150)
(75 151)
(75 -152)
(75 153)
(75 154)
(75 155)
(75 156)
(75 157)
(75 158)
(75 159)
(75 160)
(75 161)
(75 162)
(75 163)
(75 164)
(75 165)
(75 166)
(75 -275)
(75 435)
(76 110)
(76 111)
(76 112)
(76 113)
(76 114)
(76 115)
(76 116)
(76 117)
(76 118)
(76 119)
(76 120)
(76 121)
(76 122)
(76 -123)
(76 124)
(76 125)
(76 126)
(76 127)
(76 128)
(76 129)
(76 130)
(76 131)
(76 132)
(76 133)
(76 134)
(76 135)
(76 136)
(76 137)
(76 138)
(76 139)
(76 140)
(76 141)
(76 142)
(76 143)
(76 144)
(76 145)
(76 146)
(76 147)
(76 148)
(76 149)
(76 150)
(76 151)
(76 -152)
(76 153)
(76 154)
(76 155)
(76 156)
(76 157)
(76 158)
(76 159)
(76 160)
(76 161)
(76 162)
(76 163)
(76 164)
(76 165)
(76 166)
(76 -275)
(77 110)
(77 111)
(77 112)
(77 113)
(77 114)
(77 115)
(77 116)
(77 117)
(77 118)
(77 119)
(77 120)
(77 121)
(77 122)
(77 -123)
(77 124)
(77 125)
(77 126)
(77 127)
(77 128)
(77 129)
(77 130)
(77 131)
(77 132)
(77 133)
(77 134)
(77 135)
(77 136)
(77 137)
(77 138)
(77 139)
(77 140)
(77 141)
(77 142)
(77 143)
(77 144)
(77 145)
(77 146)
(77 147)
(77 148)
(77 149)
(77 150)
(77 151)
(77 -152)
(77 153)
(77 154)
(77 155)
(77 156)
(77 157)
(77 158)
(77 159)
(77 160)
(77 161)
(77 162)
(77 163)
(77 164)
(77 165)
(77 166)
(77 -275)
(78 110)
(78 111)
(78 112)
(78 113)
(78 114)
(78 115)
(78 116)
(78 117)
(78 118)
(78 119)
(78 120)
(78 121)
(78 122)
(78 -123)
(78 124)
(78 125)
(78 126)
(78 127)
(78 128)
(78 129)
(78 130)
(78 131)
(78 132)
(78 133)
(78 134)
(78 135)
(78 136)
(78 137)
(78 138)
(78 139)
(78 140)
(78 141)
(78 142)
(78 143)
(78 144)
(78 145)
(78 146)
(78 147)
(78 148)
(78 149)
(78 150)
(78 151)
(78 -152)
(78 153)
(78 154)
(78 155)
(78 156)
(78 157)
(78 158)
(78 159)
(78 160)
(78 161)
(78 162)
(78 163)
(78 164)
(78 165)
(78 166)
(78 -275)
(79 110)
(79 111)
(79 112)
(79 113)
(79 114)
(79 115)
(79 116)
(79 117)
(79 118)
(79 119)
(79 120)
(79 121)
(79 122)
(79 -123)
(79 124)
(79 125)
(79 126)
(79 127)
(79 128)
(79 129)
(79 130)
(79 131)
(79 132)
(79 133)
(79 134)
(79 135)
(79 136)
(79 137)
(79 138)
(79 139)
(79 140)
(79 141)
(79 142)
(79 143)
(79 144)
(79 145)
(79 146)
(79 147)
(79 148)
(79 149)
(79 150)
(79 151)
(79 -152)
(79 153)
(79 154)
(79 155)
(79 156)
(79 157)
(79 158)
(79 159)
(79 160)
(79 161)
(79 162)
(79 163)
(79 164)
(79 165)
(79 166)
(79 -275)
(80 110)
(80 111)
(80 112)
(80 113)
(80 114)
(80 115)
(80 116)
(80 117)
(80 118)
(80 119)
(80 120)
(80 121)
(80 122)
(80 -123)
(80 124)
(80 125)
(80 126)
(80 127)
(80 128)
(80 129)
(80 130)
(80 131)
(80 132)
(80 133)
(80 134)
(80 135)
(80 136)
(80 137)
(80 138)
(80 139)
(80 140)
(80 141)
(80 142)
(80 143)
(80 144)
(80 145)
(80 146)
(80 147)
(80 148)
(80 149)
(80 150)
(80 151)
(80 -152)
(80 153)
(80 154)
(80 155)
(80 156)
(80 157)
(80 158)
(80 159)
(80 160)
(80 161)
(80 162)
(80 163)
(80 164)
(80 165)
(80 166)
(80 -275)
(81 110)
(81 111)
(81 112)
(81 113)
(81 114)
(81 115)
(81 116)
(81 117)
(81 118)
(81 119)
(81 120)
(81 121)
(81 122)
(81 -123)
(81 124)
(81 125)
(81 126)
(81 127)
(81 128)
(81 129)
(81 130)
(81 131)
(81 132)
(81 133)
(81 134)
(81 135)
(81 136)
(81 137)
(81 138)
(81 139)
(81 140)
(81 141)
(81 142)
(81 143)
(81 144)
(81 145)
(81 146)
(81 147)
(81 148)
(81 149)
(81 150)
(81 151)
(81 -152)
(81 153)
(81 154)
(81 155)
(81 156)
(81 157)
(81 158)
(81 159)
(81 160)
(81 161)
(81 162)
(81 163)
(81 164)
(81 165)
(81 166)
(81 -275)
(82 110)
(82 111)
(82 112)
(82 113)
(82 114)
(82 115)
(82 116)
(82 117)
(82 118)
(82 119)
(82 120)
(82 121)
(82 122)
(82 -123)
(82 124)
(82 125)
(82 126)
(82 127)
(82 128)
(82 129)
(82 130)
(82 131)
(82 132)
(82 133)
(82 134)
(82 135)
(82 136)
(82 137)
(82 138)
(82 139)
(82 140)
(82 141)
(82 142)
(82 143)
(82 144)
(82 145)
(82 146)
(82 147)
(82 148)
(82 149)
(82 150)
(82 151)
(82 -152)
(82 153)
(82 154)
(82 155)
(82 156)
(82 157)
(82 158)
(82 159)
(82 160)
(82 161)
(82 162)
(82 163)
(82 164)
(82 165)
(82 166)
(82 -275)
(82 -505)
(82 570)
(82 570)
(82 570)
(83 110)
(83 111)
(83 112)
(83 113)
(83 114)
(83 115)
(83 116)
(83 117)
(83 118)
(83 119)
(83 120)
(83 121)
(83 122)
(83 -123)
(83 124)
(83 125)
(83 126)
(83 127)
(83 128)
(83 129)
(83 130)
(83 131)
(83 132)
(83 133)
(83 134)
(83 135)
(83 136)
(83 137)
(83 138)
(83 139)
(83 140)
(83 141)
(83 142)
(83 143)
(83 144)
(83 145)
(83 146)
(83 147)
(83 148)
(83 149)
(83 150)
(83 151)
(83 -152)
(83 153)
(83 154)
(83 155)
(83 156)
(83 157)
(83 158)
(83 159)
(83 160)
(83 161)
(83 162)
(83 163)
(83 164)
(83 165)
(83 166)
(83 -275)
(84 110)
(84 111)
(84 112)
(84 113)
(84 114)
(84 115)
(84 116)
(84 117)
(84 118)
(84 119)
(84 120)
(84 121)
(84 122)
(84 -123)
(84 124)
(84 125)
(84 126)
(84 127)
(84 128)
(84 129)
(84 130)
(84 131)
(84 132)
(84 133)
(84 134)
(84 135)
(84 136)
(84 137)
(84 138)
(84 139)
(84 140)
(84 141)
(84 142)
(84 143)
(84 144)
(84 145)
(84 146)
(84 147)
(84 148)
(84 149)
(84 150)
(84 151)
(84 -152)
(84 153)
(84 154)
(84 155)
(84 156)
(84 157)
(84 158)
(84 159)
(84 160)
(84 161)
(84 162)
(84 163)
(84 164)
(84 165)
(84 166)
(84 -275)
(85 110)
(85 111)
(85 112)
(85 113)
(85 114)
(85 115)
(85 116)
(85 117)
(85 118)
(85 119)
(85 120)
(85 121)
(85 122)
(85 -123)
(85 124)
(85 125)
(85 126)
(85 127)
(85 128)
(85 129)
(85 130)
(85 131)
(85 132)
(85 133)
(85 134)
(85 135)
(85 136)
(85 137)
(85 138)
(85 139)
(85 140)
(85 141)
(85 142)
(85 143)
(85 144)
(85 145)
(85 146)
(85 147)
(85 148)
(85 149)
(85 150)
(85 151)
(85 -152)
(85 153)
(85 154)
(85 155)
(85 156)
(85 157)
(85 158)
(85 159)
(85 160)
(85 161)
(85 162)
(85 163)
(85 164)
(85 165)
(85 166)
(85 -275)
(85 -525)
(85 536)
(86 110)
(86 111)
(86 112)
(86 113)
(86 114)
(86 115)
(86 116)
(86 117)
(86 118)
(86 119)
(86 120)
(86 121)
(86 122)
(86 -123)
(86 124)
(86 125)
(86 126)
(86 127)
(86 128)
(86 129)
(86 130)
(86 131)
(86 132)
(86 133)
(86 134)
(86 135)
(86 136)
(86 137)
(86 138)
(86 139)
(86 140)
(86 141)
(86 142)
(86 143)
(86 144)
(86 145)
(86 146)
(86 147)
(86 148)
(86 149)
(86 150)
(86 151)
(86 -152)
(86 153)
(86 154)
(86 155)
(86 156)
(86 157)
(86 158)
(86 159)
(86 160)
(86 161)
(86 162)
(86 163)
(86 164)
(86 165)
(86 166)
(86 -275)
(86 321)
(87 110)
(87 111)
(87 112)
(87 113)
(87 114)
(87 115)
(87 116)
(87 117)
(87 118)
(87 119)
(87 120)
(87 121)
(87 122)
(87 -123)
(87 124)
(87 125)
(87 126)
(87 127)
(87 128)
(87 129)
(87 130)
(87 131)
(87 132)
(87 133)
(87 134)
(87 135)
(87 136)
(87 137)
(87 138)
(87 139)
(87 140)
(87 141)
(87 142)
(87 143)
(87 144)
(87 145)
(87 146)
(87 147)
(87 148)
(87 149)
(87 150)
(87 151)
(87 -152)
(87 153)
(87 154)
(87 155)
(87 156)
(87 157)
(87 158)
(87 159)
(87 160)
(87 161)
(87 162)
(87 163)
(87 164)
(87 165)
(87 166)
(87 -275)
(87 -433)
(87 326)*
(-88 110)
(-88 111)
(-88 112)
(-88 113)
(-88 114)
(-88 115)
(-88 116)
(-88 117)
(-88 118)
(-88 119)
(-88 120)
(-88 121)
(-88 122)
(-88 -123)
(-88 124)
(-88 125)
(-88 126)
(-88 127)
(-88 128)
(-88 129)
(-88 130)
(-88 131)
(-88 132)
(-88 133)
(-88 134)
(-88 135)
(-88 136)
(-88 137)
(-88 138)
(-88 139)
(-88 140)
(-88 141)
(-88 142)
(-88 143)
(-88 144)
(-88 145)
(-88 146)
(-88 147)
(-88 148)
(-88 149)
(-88 150)
(-88 151)
(-88 -152)
(-88 153)
(-88 154)
(-88 155)
(-88 156)
(-88 157)
(-88 158)
(-88 159)
(-88 160)
(-88 161)
(-88 162)
(-88 163)
(-88 164)
(-88 165)
(-88 166)
(-88 -275)
(-89 444)
(-89 445)
(89 110)
(89 111)
(89 112)
(89 113)
(89 114)
(89 115)
(89 116)
(89 117)
(89 118)
(89 119)
(89 120)
(89 121)
(89 122)
(89 -123)
(89 124)
(89 125)
(89 126)
(89 127)
(89 128)
(89 129)
(89 130)
(89 131)
(89 132)
(89 133)
(89 134)
(89 135)
(89 136)
(89 137)
(89 138)
(89 139)
(89 140)
(89 141)
(89 142)
(89 143)
(89 144)
(89 145)
(89 146)
(89 147)
(89 148)
(89 149)
(89 150)
(89 151)
(89 -152)
(89 153)
(89 154)
(89 155)
(89 156)
(89 157)
(89 158)
(89 159)
(89 160)
(89 161)
(89 162)
(89 163)
(89 164)
(89 165)
(89 166)
(89 -275)
(-90 502)*
(90 110)
(90 111)
(90 112)
(90 113)
(90 114)
(90 115)
(90 116)
(90 117)
(90 118)
(90 119)
(90 120)
(90 121)
(90 122)
(90 -123)
(90 124)
(90 125)
(90 126)
(90 127)
(90 128)
(90 129)
(90 130)
(90 131)
(90 132)
(90 133)
(90 134)
(90 135)
(90 136)
(90 137)
(90 138)
(90 139)
(90 140)
(90 141)
(90 142)
(90 143)
(90 144)
(90 145)
(90 146)
(90 147)
(90 148)
(90 149)
(90 150)
(90 151)
(90 -152)
(90 153)
(90 154)
(90 155)
(90 156)
(90 157)
(90 158)
(90 159)
(90 160)
(90 161)
(90 162)
(90 163)
(90 164)
(90 165)
(90 166)
(90 -275)
(-91 448)
(-91 449)
(91 110)
(91 111)
(91 112)
(91 113)
(91 114)
(91 115)
(91 116)
(91 117)
(91 118)
(91 119)
(91 120)
(91 121)
(91 122)
(91 -123)
(91 124)
(91 125)
(91 126)
(91 127)
(91 128)
(91 129)
(91 130)
(91 131)
(91 132)
(91 133)
(91 134)
(91 135)
(91 136)
(91 137)
(91 138)
(91 139)
(91 140)
(91 141)
(91 142)
(91 143)
(91 144)
(91 145)
(91 146)
(91 147)
(91 148)
(91 149)
(91 150)
(91 151)
(91 -152)
(91 153)
(91 154)
(91 155)
(91 156)
(91 157)
(91 158)
(91 159)
(91 160)
(91 161)
(91 162)
(91 163)
(91 164)
(91 165)
(91 166)
(91 -275)
(92 110)
(92 111)
(92 112)
(92 113)
(92 114)
(92 115)
(92 116)
(92 117)
(92 118)
(92 119)
(92 120)
(92 121)
(92 122)
(92 -123)
(92 124)
(92 125)
(92 126)
(92 127)
(92 128)
(92 129)
(92 130)
(92 131)
(92 132)
(92 133)
(92 134)
(92 135)
(92 136)
(92 137)
(92 138)
(92 139)
(92 140)
(92 141)
(92 142)
(92 143)
(92 144)
(92 145)
(92 146)
(92 147)
(92 148)
(92 149)
(92 150)
(92 151)
(92 -152)
(92 153)
(92 154)
(92 155)
(92 156)
(92 157)
(92 158)
(92 159)
(92 160)
(92 161)
(92 162)
(92 163)
(92 164)
(92 165)
(92 166)
(92 -275)
(-93 418)
(-93 419)
(93 110)
(93 111)
(93 112)
(93 113)
(93 114)
(93 115)
(93 116)
(93 117)
(93 118)
(93 119)
(93 120)
(93 121)
(93 122)
(93 -123)
(93 124)
(93 125)
(93 126)
(93 127)
(93 128)
(93 129)
(93 130)
(93 131)
(93 132)
(93 133)
(93 134)
(93 135)
(93 136)
(93 137)
(93 138)
(93 139)
(93 140)
(93 141)
(93 142)
(93 143)
(93 144)
(93 145)
(93 146)
(93 147)
(93 148)
(93 149)
(93 150)
(93 151)
(93 -152)
(93 153)
(93 154)
(93 155)
(93 156)
(93 157)
(93 158)
(93 159)
(93 160)
(93 161)
(93 162)
(93 163)
(93 164)
(93 165)
(93 166)
(93 -275)
(-94 446)
(-94 447)
(94 110)
(94 111)
(94 112)
(94 113)
(94 114)
(94 115)
(94 116)
(94 117)
(94 118)
(94 119)
(94 120)
(94 121)
(94 122)
(94 -123)
(94 124)
(94 125)
(94 126)
(94 127)
(94 128)
(94 129)
(94 130)
(94 131)
(94 132)
(94 133)
(94 134)
(94 135)
(94 136)
(94 137)
(94 138)
(94 139)
(94 140)
(94 141)
(94 142)
(94 143)
(94 144)
(94 145)
(94 146)
(94 147)
(94 148)
(94 149)
(94 150)
(94 151)
(94 -152)
(94 153)
(94 154)
(94 155)
(94 156)
(94 157)
(94 158)
(94 159)
(94 160)
(94 161)
(94 162)
(94 163)
(94 164)
(94 165)
(94 166)
(94 -275)
(95 110)
(95 111)
(95 112)
(95 113)
(95 114)
(95 115)
(95 116)
(95 117)
(95 118)
(95 119)
(95 120)
(95 121)
(95 122)
(95 -123)
(95 124)
(95 125)
(95 126)
(95 127)
(95 128)
(95 129)
(95 130)
(95 131)
(95 132)
(95 133)
(95 134)
(95 135)
(95 136)
(95 137)
(95 138)
(95 139)
(95 140)
(95 141)
(95 142)
(95 143)
(95 144)
(95 145)
(95 146)
(95 147)
(95 148)
(95 149)
(95 150)
(95 151)
(95 -152)
(95 153)
(95 154)
(95 155)
(95 156)
(95 157)
(95 158)
(95 159)
(95 160)
(95 161)
(95 162)
(95 163)
(95 164)
(95 165)
(95 166)
(95 -275)
(96 110)
(96 111)
(96 112)
(96 113)
(96 114)
(96 115)
(96 116)
(96 117)
(96 118)
(96 119)
(96 120)
(96 121)
(96 122)
(96 -123)
(96 124)
(96 125)
(96 126)
(96 127)
(96 128)
(96 129)
(96 130)
(96 131)
(96 132)
(96 133)
(96 134)
(96 135)
(96 136)
(96 137)
(96 138)
(96 139)
(96 140)
(96 141)
(96 142)
(96 143)
(96 144)
(96 145)
(96 146)
(96 147)
(96 148)
(96 149)
(96 150)
(96 151)
(96 -152)
(96 153)
(96 154)
(96 155)
(96 156)
(96 157)
(96 158)
(96 159)
(96 160)
(96 161)
(96 162)
(96 163)
(96 164)
(96 165)
(96 166)
(96 -275)
(97 110)
(97 111)
(97 112)
(97 113)
(97 114)
(97 115)
(97 116)
(97 117)
(97 118)
(97 119)
(97 120)
(97 121)
(97 122)
(97 -123)
(97 124)
(97 125)
(97 126)
(97 127)
(97 128)
(97 129)
(97 130)
(97 131)
(97 132)
(97 133)
(97 134)
(97 135)
(97 136)
(97 137)
(97 138)
(97 139)
(97 140)
(97 141)
(97 142)
(97 143)
(97 144)
(97 145)
(97 146)
(97 147)
(97 148)
(97 149)
(97 150)
(97 151)
(97 -152)
(97 153)
(97 154)
(97 155)
(97 156)
(97 157)
(97 158)
(97 159)
(97 160)
(97 161)
(97 162)
(97 163)
(97 164)
(97 165)
(97 166)
(97 -275)
(-98 794)*
(98 110)
(98 111)
(98 112)
(98 113)
(98 114)
(98 115)
(98 116)
(98 117)
(98 118)
(98 119)
(98 120)
(98 121)
(98 122)
(98 -123)
(98 124)
(98 125)
(98 126)
(98 127)
(98 128)
(98 129)
(98 130)
(98 131)
(98 132)
(98 133)
(98 134)
(98 135)
(98 136)
(98 137)
(98 138)
(98 139)
(98 140)
(98 141)
(98 142)
(98 143)
(98 144)
(98 145)
(98 146)
(98 147)
(98 148)
(98 149)
(98 150)
(98 151)
(98 -152)
(98 153)
(98 154)
(98 155)
(98 156)
(98 157)
(98 158)
(98 159)
(98 160)
(98 161)
(98 162)
(98 163)
(98 164)
(98 165)
(98 166)
(98 -275)
(-99 795)*
(99 110)
(99 111)
(99 112)
(99 113)
(99 114)
(99 115)
(99 116)
(99 117)
(99 118)
(99 119)
(99 120)
(99 121)
(99 122)
(99 -123)
(99 124)
(99 125)
(99 126)
(99 127)
(99 128)
(99 129)
(99 130)
(99 131)
(99 132)
(99 133)
(99 134)
(99 135)
(99 136)
(99 137)
(99 138)
(99 139)
(99 140)
(99 141)
(99 142)
(99 143)
(99 144)
(99 145)
(99 146)
(99 147)
(99 148)
(99 149)
(99 150)
(99 151)
(99 -152)
(99 153)
(99 154)
(99 155)
(99 156)
(99 157)
(99 158)
(99 159)
(99 160)
(99 161)
(99 162)
(99 163)
(99 164)
(99 165)
(99 166)
(99 -275)
(100 110)
(100 111)
(100 112)
(100 113)
(100 114)
(100 115)
(100 116)
(100 117)
(100 118)
(100 119)
(100 120)
(100 121)
(100 122)
(100 -123)
(100 124)
(100 125)
(100 126)
(100 127)
(100 128)
(100 129)
(100 130)
(100 131)
(100 132)
(100 133)
(100 134)
(100 135)
(100 136)
(100 137)
(100 138)
(100 139)
(100 140)
(100 141)
(100 142)
(100 143)
(100 144)
(100 145)
(100 146)
(100 147)
(100 148)
(100 149)
(100 150)
(100 151)
(100 -152)
(100 153)
(100 154)
(100 155)
(100 156)
(100 157)
(100 158)
(100 159)
(100 160)
(100 161)
(100 162)
(100 163)
(100 164)
(100 165)
(100 166)
(100 -275)
(-101 788)*
(101 110)
(101 111)
(101 112)
(101 113)
(101 114)
(101 115)
(101 116)
(101 117)
(101 118)
(101 119)
(101 120)
(101 121)
(101 122)
(101 -123)
(101 124)
(101 125)
(101 126)
(101 127)
(101 128)
(101 129)
(101 130)
(101 131)
(101 132)
(101 133)
(101 134)
(101 135)
(101 136)
(101 137)
(101 138)
(101 139)
(101 140)
(101 141)
(101 142)
(101 143)
(101 144)
(101 145)
(101 146)
(101 147)
(101 148)
(101 149)
(101 150)
(101 151)
(101 -152)
(101 153)
(101 154)
(101 155)
(101 156)
(101 157)
(101 158)
(101 159)
(101 160)
(101 161)
(101 162)
(101 163)
(101 164)
(101 165)
(101 166)
(101 -275)
(102 110)
(102 111)
(102 112)
(102 113)
(102 114)
(102 115)
(102 116)
(102 117)
(102 118)
(102 119)
(102 120)
(102 121)
(102 122)
(102 -123)
(102 124)
(102 125)
(102 126)
(102 127)
(102 128)
(102 129)
(102 130)
(102 131)
(102 132)
(102 133)
(102 134)
(102 135)
(102 136)
(102 137)
(102 138)
(102 139)
(102 140)
(102 141)
(102 142)
(102 143)
(102 144)
(102 145)
(102 146)
(102 147)
(102 148)
(102 149)
(102 150)
(102 151)
(102 -152)
(102 153)
(102 154)
(102 155)
(102 156)
(102 157)
(102 158)
(102 159)
(102 160)
(102 161)
(102 162)
(102 163)
(102 164)
(102 165)
(102 166)
(102 -275)
(-103 525)*
(103 110)
(103 111)
(103 112)
(103 113)
(103 114)
(103 115)
(103 116)
(103 117)
(103 118)
(103 119)
(103 120)
(103 121)
(103 122)
(103 -123)
(103 124)
(103 125)
(103 126)
(103 127)
(103 128)
(103 129)
(103 130)
(103 131)
(103 132)
(103 133)
(103 134)
(103 135)
(103 136)
(103 137)
(103 138)
(103 139)
(103 140)
(103 141)
(103 142)
(103 143)
(103 144)
(103 145)
(103 146)
(103 147)
(103 148)
(103 149)
(103 150)
(103 151)
(103 -152)
(103 153)
(103 154)
(103 155)
(103 156)
(103 157)
(103 158)
(103 159)
(103 160)
(103 161)
(103 162)
(103 163)
(103 164)
(103 165)
(103 166)
(103 -275)
(-104 434)
(104 110)
(104 111)
(104 112)
(104 113)
(104 114)
(104 115)
(104 116)
(104 117)
(104 118)
(104 119)
(104 120)
(104 121)
(104 122)
(104 -123)
(104 124)
(104 125)
(104 126)
(104 127)
(104 128)
(104 129)
(104 130)
(104 131)
(104 132)
(104 133)
(104 134)
(104 135)
(104 136)
(104 137)
(104 138)
(104 139)
(104 140)
(104 141)
(104 142)
(104 143)
(104 144)
(104 145)
(104 146)
(104 147)
(104 148)
(104 149)
(104 150)
(104 151)
(104 -152)
(104 153)
(104 154)
(104 155)
(104 156)
(104 157)
(104 158)
(104 159)
(104 160)
(104 161)
(104 162)
(104 163)
(104 164)
(104 165)
(104 166)
(104 -275)
(-105 425)
(105 110)
(105 111)
(105 112)
(105 113)
(105 114)
(105 115)
(105 116)
(105 117)
(105 118)
(105 119)
(105 120)
(105 121)
(105 122)
(105 -123)
(105 124)
(105 125)
(105 126)
(105 127)
(105 128)
(105 129)
(105 130)
(105 131)
(105 132)
(105 133)
(105 134)
(105 135)
(105 136)
(105 137)
(105 138)
(105 139)
(105 140)
(105 141)
(105 142)
(105 143)
(105 144)
(105 145)
(105 146)
(105 147)
(105 148)
(105 149)
(105 150)
(105 151)
(105 -152)
(105 153)
(105 154)
(105 155)
(105 156)
(105 157)
(105 158)
(105 159)
(105 160)
(105 161)
(105 162)
(105 163)
(105 164)
(105 165)
(105 166)
(105 -275)
(106 110)
(106 111)
(106 112)
(106 113)
(106 114)
(106 115)
(106 116)
(106 117)
(106 118)
(106 119)
(106 120)
(106 121)
(106 122)
(106 -123)
(106 124)
(106 125)
(106 126)
(106 127)
(106 128)
(106 129)
(106 130)
(106 131)
(106 132)
(106 133)
(106 134)
(106 135)
(106 136)
(106 137)
(106 138)
(106 139)
(106 140)
(106 141)
(106 142)
(106 143)
(106 144)
(106 145)
(106 146)
(106 147)
(106 148)
(106 149)
(106 150)
(106 151)
(106 -152)
(106 153)
(106 154)
(106 155)
(106 156)
(106 157)
(106 158)
(106 159)
(106 160)
(106 161)
(106 162)
(106 163)
(106 164)
(106 165)
(106 166)
(106 -275)
(-107 450)
(-107 451)
(107 110)
(107 111)
(107 112)
(107 113)
(107 114)
(107 115)
(107 116)
(107 117)
(107 118)
(107 119)
(107 120)
(107 121)
(107 122)
(107 -123)
(107 124)
(107 125)
(107 126)
(107 127)
(107 128)
(107 129)
(107 130)
(107 131)
(107 132)
(107 133)
(107 134)
(107 135)
(107 136)
(107 137)
(107 138)
(107 139)
(107 140)
(107 141)
(107 142)
(107 143)
(107 144)
(107 145)
(107 146)
(107 147)
(107 148)
(107 149)
(107 150)
(107 151)
(107 -152)
(107 153)
(107 154)
(107 155)
(107 156)
(107 157)
(107 158)
(107 159)
(107 160)
(107 161)
(107 162)
(107 163)
(107 164)
(107 165)
(107 166)
(107 -275)
(-108 422)
(108 110)
(108 111)
(108 112)
(108 113)
(108 114)
(108 115)
(108 116)
(108 117)
(108 118)
(108 119)
(108 120)
(108 121)
(108 122)
(108 -123)
(108 124)
(108 125)
(108 126)
(108 127)
(108 128)
(108 129)
(108 130)
(108 131)
(108 132)
(108 133)
(108 134)
(108 135)
(108 136)
(108 137)
(108 138)
(108 139)
(108 140)
(108 141)
(108 142)
(108 143)
(108 144)
(108 145)
(108 146)
(108 147)
(108 148)
(108 149)
(108 150)
(108 151)
(108 -152)
(108 153)
(108 154)
(108 155)
(108 156)
(108 157)
(108 158)
(108 159)
(108 160)
(108 161)
(108 162)
(108 163)
(108 164)
(108 165)
(108 166)
(108 -275)
(-109 435)
(109 110)
(109 111)
(109 112)
(109 113)
(109 114)
(109 115)
(109 116)
(109 117)
(109 118)
(109 119)
(109 120)
(109 121)
(109 122)
(109 -123)
(109 124)
(109 125)
(109 126)
(109 127)
(109 128)
(109 129)
(109 130)
(109 131)
(109 132)
(109 133)
(109 134)
(109 135)
(109 136)
(109 137)
(109 138)
(109 139)
(109 140)
(109 141)
(109 142)
(109 143)
(109 144)
(109 145)
(109 146)
(109 147)
(109 148)
(109 149)
(109 150)
(109 151)
(109 -152)
(109 153)
(109 154)
(109 155)
(109 156)
(109 157)
(109 158)
(109 159)
(109 160)
(109 161)
(109 162)
(109 163)
(109 164)
(109 165)
(109 166)
(109 -275)
(-118 350)*
(118 168)
(118 169)
(118 170)
(118 171)
(118 172)
(118 173)
(118 174)
(118 175)
(118 176)
(118 177)
(118 178)
(118 179)
(118 180)
(118 181)
(118 182)
(118 183)
(118 184)
(118 185)
(118 -186)
(118 187)
(118 188)
(118 189)
(118 190)
(118 191)
(118 192)
(118 193)
(118 194)
(118 195)
(118 196)
(118 197)
(118 198)
(118 199)
(118 200)
(118 201)
(118 202)
(118 203)
(118 204)
(118 205)
(118 206)
(118 366)
(118 -350)*
(121 370)
(122 385)
(-124 809)
(-124 810)
(-125 616)
(-125 617)
(-126 612)
(-126 613)
(-127 620)
(-127 621)
(-128 660)
(-128 661)
(-129 682)
(-129 683)
(130 168)
(130 169)
(130 170)
(130 171)
(130 172)
(130 173)
(130 174)
(130 175)
(130 176)
(130 177)
(130 178)
(130 179)
(130 180)
(130 181)
(130 182)
(130 183)
(130 184)
(130 185)
(130 -186)
(130 187)
(130 188)
(130 189)
(130 190)
(130 191)
(130 192)
(130 193)
(130 194)
(130 195)
(130 196)
(130 197)
(130 198)
(130 199)
(130 200)
(130 201)
(130 202)
(130 203)
(130 204)
(130 205)
(130 206)
(132 168)
(132 169)
(132 170)
(132 171)
(132 172)
(132 173)
(132 174)
(132 175)
(132 176)
(132 177)
(132 178)
(132 179)
(132 180)
(132 181)
(132 182)
(132 183)
(132 184)
(132 185)
(132 -186)
(132 187)
(132 188)
(132 189)
(132 190)
(132 191)
(132 192)
(132 193)
(132 194)
(132 195)
(132 196)
(132 197)
(132 198)
(132 199)
(132 200)
(132 201)
(132 202)
(132 203)
(132 204)
(132 205)
(132 206)
(132 248)
(132 278)
(132 279)
(132 280)
(132 281)
(132 282)
(132 283)
(132 284)
(132 285)
(132 286)
(132 287)
(132 288)
(132 289)
(132 290)
(132 -291)
(132 292)
(132 293)
(132 294)
(132 295)
(132 296)
(132 297)
(133 168)
(133 169)
(133 170)
(133 171)
(133 172)
(133 173)
(133 174)
(133 175)
(133 176)
(133 177)
(133 178)
(133 179)
(133 180)
(133 181)
(133 182)
(133 183)
(133 184)
(133 185)
(133 -186)
(133 187)
(133 188)
(133 189)
(133 190)
(133 191)
(133 192)
(133 193)
(133 194)
(133 195)
(133 196)
(133 197)
(133 198)
(133 199)
(133 200)
(133 201)
(133 202)
(133 203)
(133 204)
(133 205)
(133 206)
(133 248)
(133 278)
(133 279)
(133 280)
(133 281)
(133 282)
(133 283)
(133 284)
(133 285)
(133 286)
(133 287)
(133 288)
(133 289)
(133 290)
(133 -291)
(133 292)
(133 293)
(133 294)
(133 295)
(133 296)
(133 297)
(134 168)
(134 169)
(134 170)
(134 171)
(134 172)
(134 173)
(134 174)
(134 175)
(134 176)
(134 177)
(134 178)
(134 179)
(134 180)
(134 181)
(134 182)
(134 183)
(134 184)
(134 185)
(134 -186)
(134 187)
(134 188)
(134 189)
(134 190)
(134 191)
(134 192)
(134 193)
(134 194)
(134 195)
(134 196)
(134 197)
(134 198)
(134 199)
(134 200)
(134 201)
(134 202)
(134 203)
(134 204)
(134 205)
(134 206)
(134 248)
(134 278)
(134 279)
(134 280)
(134 281)
(134 282)
(134 283)
(134 284)
(134 285)
(134 286)
(134 287)
(134 288)
(134 289)
(134 290)
(134 -291)
(134 292)
(134 293)
(134 294)
(134 295)
(134 296)
(134 297)
(135 168)
(135 169)
(135 170)
(135 171)
(135 172)
(135 173)
(135 174)
(135 175)
(135 176)
(135 177)
(135 178)
(135 179)
(135 180)
(135 181)
(135 182)
(135 183)
(135 184)
(135 185)
(135 -186)
(135 187)
(135 188)
(135 189)
(135 190)
(135 191)
(135 192)
(135 193)
(135 194)
(135 195)
(135 196)
(135 197)
(135 198)
(135 199)
(135 200)
(135 201)
(135 202)
(135 203)
(135 204)
(135 205)
(135 206)
(135 248)
(135 278)
(135 279)
(135 280)
(135 281)
(135 282)
(135 283)
(135 284)
(135 285)
(135 286)
(135 287)
(135 288)
(135 289)
(135 290)
(135 -291)
(135 292)
(135 293)
(135 294)
(135 295)
(135 296)
(135 297)
(136 168)
(136 169)
(136 170)
(136 171)
(136 172)
(136 173)
(136 174)
(136 175)
(136 176)
(136 177)
(136 178)
(136 179)
(136 180)
(136 181)
(136 182)
(136 183)
(136 184)
(136 185)
(136 -186)
(136 187)
(136 188)
(136 189)
(136 190)
(136 191)
(136 192)
(136 193)
(136 194)
(136 195)
(136 196)
(136 197)
(136 198)
(136 199)
(136 200)
(136 201)
(136 202)
(136 203)
(136 204)
(136 205)
(136 206)
(136 248)
(136 278)
(136 279)
(136 280)
(136 281)
(136 282)
(136 283)
(136 284)
(136 285)
(136 286)
(136 287)
(136 288)
(136 289)
(136 290)
(136 -291)
(136 292)
(136 293)
(136 294)
(136 295)
(136 296)
(136 297)
(137 168)
(137 169)
(137 170)
(137 171)
(137 172)
(137 173)
(137 174)
(137 175)
(137 176)
(137 177)
(137 178)
(137 179)
(137 180)
(137 181)
(137 182)
(137 183)
(137 184)
(137 185)
(137 -186)
(137 187)
(137 188)
(137 189)
(137 190)
(137 191)
(137 192)
(137 193)
(137 194)
(137 195)
(137 196)
(137 197)
(137 198)
(137 199)
(137 200)
(137 201)
(137 202)
(137 203)
(137 204)
(137 205)
(137 206)
(137 248)
(137 278)
(137 279)
(137 280)
(137 281)
(137 282)
(137 283)
(137 284)
(137 285)
(137 286)
(137 287)
(137 288)
(137 289)
(137 290)
(137 -291)
(137 292)
(137 293)
(137 294)
(137 295)
(137 296)
(137 297)
(147 168)
(147 169)
(147 170)
(147 171)
(147 172)
(147 173)
(147 174)
(147 175)
(147 176)
(147 177)
(147 178)
(147 179)
(147 180)
(147 181)
(147 182)
(147 183)
(147 184)
(147 185)
(147 -186)
(147 187)
(147 188)
(147 189)
(147 190)
(147 191)
(147 192)
(147 193)
(147 194)
(147 195)
(147 196)
(147 197)
(147 198)
(147 199)
(147 200)
(147 201)
(147 202)
(147 203)
(147 204)
(147 205)
(147 206)
(147 -343)
(150 332)
(151 334)
(-154 710)
(-154 711)
(-155 624)
(-155 625)
(-156 680)
(-156 681)
(-158 664)
(-158 665)
(159 168)
(159 169)
(159 170)
(159 171)
(159 172)
(159 173)
(159 174)
(159 175)
(159 176)
(159 177)
(159 178)
(159 179)
(159 180)
(159 181)
(159 182)
(159 183)
(159 184)
(159 185)
(159 -186)
(159 187)
(159 188)
(159 189)
(159 190)
(159 191)
(159 192)
(159 193)
(159 194)
(159 195)
(159 196)
(159 197)
(159 198)
(159 199)
(159 200)
(159 201)
(159 202)
(159 203)
(159 204)
(159 205)
(159 206)
(161 168)
(161 169)
(161 170)
(161 171)
(161 172)
(161 173)
(161 174)
(161 175)
(161 176)
(161 177)
(161 178)
(161 179)
(161 180)
(161 181)
(161 182)
(161 183)
(161 184)
(161 185)
(161 -186)
(161 187)
(161 188)
(161 189)
(161 190)
(161 191)
(161 192)
(161 193)
(161 194)
(161 195)
(161 196)
(161 197)
(161 198)
(161 199)
(161 200)
(161 201)
(161 202)
(161 203)
(161 204)
(161 205)
(161 206)
(161 248)
(161 278)
(161 279)
(161 280)
(161 281)
(161 282)
(161 283)
(161 284)
(161 285)
(161 286)
(161 287)
(161 288)
(161 289)
(161 290)
(161 -291)
(161 292)
(161 293)
(161 294)
(161 295)
(161 296)
(161 297)
(161 276)*
(-162 724)*
(162 168)
(162 169)
(162 170)
(162 171)
(162 172)
(162 175)
(162 176)
(162 177)
(162 178)
(162 179)
(162 180)
(162 181)
(162 182)
(162 183)
(162 184)
(162 185)
(162 -186)
(162 187)
(162 188)
(162 189)
(162 190)
(162 191)
(162 192)
(162 193)
(162 194)
(162 195)
(162 196)
(162 197)
(162 198)
(162 199)
(162 200)
(162 201)
(162 202)
(162 203)
(162 204)
(162 205)
(162 206)
(162 248)
(162 278)
(162 279)
(162 280)
(162 281)
(162 282)
(162 283)
(162 284)
(162 285)
(162 286)
(162 287)
(162 288)
(162 289)
(162 290)
(162 -291)
(162 292)
(162 293)
(162 294)
(162 295)
(162 296)
(162 297)
(-163 606)
(-163 607)
(-163 751)*
(163 168)
(163 169)
(163 170)
(163 171)
(163 172)
(163 173)
(163 174)
(163 175)
(163 176)
(163 177)
(163 178)
(163 179)
(163 180)
(163 181)
(163 182)
(163 183)
(163 184)
(163 185)
(163 -186)
(163 187)
(163 188)
(163 189)
(163 190)
(163 191)
(163 192)
(163 193)
(163 194)
(163 195)
(163 196)
(163 197)
(163 198)
(163 199)
(163 200)
(163 201)
(163 202)
(163 203)
(163 204)
(163 205)
(163 206)
(163 248)
(163 278)
(163 279)
(163 280)
(163 281)
(163 282)
(163 283)
(163 284)
(163 285)
(163 286)
(163 287)
(163 288)
(163 289)
(163 290)
(163 -291)
(163 292)
(163 293)
(163 294)
(163 295)
(163 296)
(163 297)
(-164 656)
(-164 657)
(-164 748)*
(164 168)
(164 169)
(164 170)
(164 171)
(164 172)
(164 173)
(164 174)
(164 175)
(164 176)
(164 177)
(164 178)
(164 179)
(164 180)
(164 181)
(164 182)
(164 183)
(164 184)
(164 185)
(164 -186)
(164 187)
(164 188)
(164 189)
(164 190)
(164 191)
(164 192)
(164 193)
(164 194)
(164 195)
(164 196)
(164 197)
(164 198)
(164 199)
(164 200)
(164 201)
(164 202)
(164 203)
(164 204)
(164 205)
(164 206)
(164 248)
(164 278)
(164 279)
(164 280)
(164 281)
(164 282)
(164 283)
(164 284)
(164 285)
(164 286)
(164 287)
(164 288)
(164 289)
(164 290)
(164 -291)
(164 292)
(164 293)
(164 294)
(164 295)
(164 296)
(164 297)
(-165 707)*
(165 168)
(165 169)
(165 170)
(165 171)
(165 172)
(165 173)
(165 174)
(165 175)
(165 176)
(165 177)
(165 178)
(165 179)
(165 180)
(165 181)
(165 182)
(165 183)
(165 184)
(165 185)
(165 -186)
(165 187)
(165 188)
(165 189)
(165 190)
(165 191)
(165 192)
(165 193)
(165 194)
(165 195)
(165 196)
(165 197)
(165 198)
(165 199)
(165 200)
(165 201)
(165 202)
(165 203)
(165 204)
(165 205)
(165 206)
(165 248)
(165 278)
(165 279)
(165 280)
(165 281)
(165 282)
(165 283)
(165 284)
(165 285)
(165 286)
(165 287)
(165 288)
(165 289)
(165 290)
(165 -291)
(165 292)
(165 293)
(165 294)
(165 295)
(165 296)
(165 297)
(-166 658)
(-166 659)
(166 168)
(166 169)
(166 170)
(166 171)
(166 172)
(166 173)
(166 174)
(166 175)
(166 176)
(166 177)
(166 178)
(166 179)
(166 180)
(166 181)
(166 182)
(166 183)
(166 184)
(166 185)
(166 -186)
(166 187)
(166 188)
(166 189)
(166 190)
(166 191)
(166 192)
(166 193)
(166 194)
(166 195)
(166 196)
(166 197)
(166 198)
(166 199)
(166 200)
(166 201)
(166 202)
(166 203)
(166 204)
(166 205)
(166 206)
(166 248)
(166 278)
(166 279)
(166 280)
(166 281)
(166 282)
(166 283)
(166 284)
(166 285)
(166 286)
(166 287)
(166 288)
(166 289)
(166 290)
(166 -291)
(166 292)
(166 293)
(166 294)
(166 295)
(166 296)
(166 297)
(167 168)
(167 169)
(167 170)
(167 171)
(167 172)
(167 173)
(167 174)
(167 175)
(167 176)
(167 177)
(167 178)
(167 179)
(167 180)
(167 181)
(167 182)
(167 183)
(167 184)
(167 185)
(167 -186)
(167 187)
(167 188)
(167 189)
(167 190)
(167 191)
(167 192)
(167 193)
(167 194)
(167 195)
(167 196)
(167 197)
(167 198)
(167 199)
(167 200)
(167 201)
(167 202)
(167 203)
(167 204)
(167 205)
(167 206)
(168 207)
(168 208)
(168 209)
(168 210)
(168 211)
(168 212)
(168 213)
(168 214)
(168 215)
(168 216)
(168 217)
(168 -218)
(168 219)
(168 220)
(168 221)
(168 222)
(168 223)
(168 224)
(168 225)
(168 226)
(168 227)
(168 228)
(168 229)
(168 230)
(168 231)
(168 232)
(168 233)
(168 234)
(168 235)
(168 236)
(168 237)
(168 238)
(168 -239)
(168 240)
(168 241)
(168 242)
(168 243)
(168 244)
(168 245)
(168 246)
(168 247)
(168 -276)
(169 207)
(169 208)
(169 209)
(169 210)
(169 211)
(169 212)
(169 213)
(169 214)
(169 215)
(169 216)
(169 217)
(169 -218)
(169 219)
(169 220)
(169 221)
(169 222)
(169 223)
(169 224)
(169 225)
(169 226)
(169 227)
(169 228)
(169 229)
(169 230)
(169 231)
(169 232)
(169 233)
(169 234)
(169 235)
(169 236)
(169 237)
(169 238)
(169 -239)
(169 240)
(169 241)
(169 242)
(169 243)
(169 244)
(169 245)
(169 246)
(169 247)
(169 -276)
(170 -201)
(170 207)
(170 208)
(170 209)
(170 210)
(170 211)
(170 212)
(170 213)
(170 214)
(170 215)
(170 216)
(170 217)
(170 -218)
(170 219)
(170 220)
(170 221)
(170 222)
(170 223)
(170 224)
(170 225)
(170 226)
(170 227)
(170 228)
(170 229)
(170 230)
(170 231)
(170 232)
(170 233)
(170 234)
(170 235)
(170 236)
(170 237)
(170 238)
(170 -239)
(170 240)
(170 241)
(170 242)
(170 243)
(170 244)
(170 245)
(170 246)
(170 247)
(170 -276)
(170 498)
(171 -202)
(171 207)
(171 208)
(171 209)
(171 210)
(171 211)
(171 212)
(171 214)
(171 215)
(171 216)
(171 217)
(171 -218)
(171 219)
(171 220)
(171 221)
(171 222)
(171 223)
(171 224)
(171 225)
(171 226)
(171 227)
(171 228)
(171 229)
(171 230)
(171 231)
(171 232)
(171 233)
(171 234)
(171 235)
(171 236)
(171 237)
(171 238)
(171 -239)
(171 240)
(171 241)
(171 242)
(171 243)
(171 244)
(171 245)
(171 246)
(171 247)
(171 -276)
(171 495)
(172 207)
(172 208)
(172 209)
(172 210)
(172 211)
(172 212)
(172 213)
(172 214)
(172 215)
(172 216)
(172 217)
(172 -218)
(172 219)
(172 220)
(172 221)
(172 222)
(172 223)
(172 224)
(172 225)
(172 226)
(172 227)
(172 228)
(172 229)
(172 230)
(172 231)
(172 232)
(172 233)
(172 234)
(172 235)
(172 236)
(172 237)
(172 238)
(172 -239)
(172 240)
(172 241)
(172 242)
(172 243)
(172 244)
(172 245)
(172 246)
(172 247)
(172 -276)
(173 -205)
(173 207)
(173 208)
(173 209)
(173 210)
(173 211)
(173 212)
(173 213)
(173 214)
(173 215)
(173 216)
(173 217)
(173 -218)
(173 219)
(173 220)
(173 221)
(173 222)
(173 223)
(173 224)
(173 225)
(173 226)
(173 227)
(173 228)
(173 229)
(173 230)
(173 231)
(173 232)
(173 233)
(173 234)
(173 235)
(173 236)
(173 237)
(173 238)
(173 -239)
(173 240)
(173 241)
(173 242)
(173 243)
(173 244)
(173 245)
(173 246)
(173 247)
(173 -276)
(173 501)
(174 -206)
(174 207)
(174 208)
(174 209)
(174 210)
(174 211)
(174 212)
(174 213)
(174 214)
(174 215)
(174 216)
(174 217)
(174 -218)
(174 219)
(174 220)
(174 221)
(174 222)
(174 223)
(174 224)
(174 225)
(174 226)
(174 227)
(174 228)
(174 229)
(174 230)
(174 231)
(174 232)
(174 233)
(174 234)
(174 235)
(174 236)
(174 237)
(174 238)
(174 -239)
(174 240)
(174 241)
(174 242)
(174 243)
(174 244)
(174 245)
(174 246)
(174 247)
(174 -276)
(174 496)
(175 207)
(175 208)
(175 209)
(175 210)
(175 211)
(175 212)
(175 213)
(175 214)
(175 215)
(175 216)
(175 217)
(175 -218)
(175 219)
(175 220)
(175 221)
(175 222)
(175 223)
(175 224)
(175 225)
(175 226)
(175 227)
(175 228)
(175 229)
(175 230)
(175 231)
(175 232)
(175 233)
(175 234)
(175 235)
(175 236)
(175 237)
(175 238)
(175 -239)
(175 240)
(175 241)
(175 242)
(175 243)
(175 244)
(175 245)
(175 246)
(175 247)
(175 -276)
(176 207)
(176 208)
(176 209)
(176 210)
(176 211)
(176 212)
(176 213)
(176 214)
(176 215)
(176 216)
(176 217)
(176 -218)
(176 219)
(176 220)
(176 221)
(176 222)
(176 223)
(176 224)
(176 225)
(176 226)
(176 227)
(176 228)
(176 229)
(176 230)
(176 231)
(176 232)
(176 233)
(176 234)
(176 235)
(176 236)
(176 237)
(176 238)
(176 -239)
(176 240)
(176 241)
(176 242)
(176 243)
(176 244)
(176 245)
(176 246)
(176 247)
(176 -276)
(177 207)
(177 208)
(177 209)
(177 210)
(177 211)
(177 212)
(177 213)
(177 214)
(177 215)
(177 216)
(177 217)
(177 -218)
(177 219)
(177 220)
(177 221)
(177 222)
(177 223)
(177 224)
(177 225)
(177 226)
(177 227)
(177 228)
(177 229)
(177 230)
(177 231)
(177 232)
(177 233)
(177 234)
(177 235)
(177 236)
(177 237)
(177 238)
(177 -239)
(177 240)
(177 241)
(177 242)
(177 243)
(177 244)
(177 245)
(177 246)
(177 247)
(177 -276)
(178 207)
(178 208)
(178 209)
(178 210)
(178 211)
(178 212)
(178 213)
(178 214)
(178 215)
(178 216)
(178 217)
(178 -218)
(178 219)
(178 220)
(178 221)
(178 222)
(178 223)
(178 224)
(178 225)
(178 226)
(178 227)
(178 228)
(178 229)
(178 230)
(178 231)
(178 232)
(178 233)
(178 234)
(178 235)
(178 236)
(178 237)
(178 238)
(178 -239)
(178 240)
(178 241)
(178 242)
(178 243)
(178 244)
(178 245)
(178 246)
(178 247)
(178 -276)
(179 207)
(179 208)
(179 209)
(179 210)
(179 211)
(179 212)
(179 213)
(179 214)
(179 215)
(179 216)
(179 217)
(179 -218)
(179 219)
(179 220)
(179 221)
(179 222)
(179 223)
(179 224)
(179 225)
(179 226)
(179 227)
(179 228)
(179 229)
(179 230)
(179 231)
(179 232)
(179 233)
(179 234)
(179 235)
(179 236)
(179 237)
(179 238)
(179 -239)
(179 240)
(179 241)
(179 242)
(179 243)
(179 244)
(179 245)
(179 246)
(179 247)
(179 -276)
(180 207)
(180 208)
(180 209)
(180 210)
(180 211)
(180 212)
(180 213)
(180 214)
(180 215)
(180 216)
(180 217)
(180 -218)
(180 219)
(180 220)
(180 221)
(180 222)
(180 223)
(180 224)
(180 225)
(180 226)
(180 227)
(180 228)
(180 229)
(180 230)
(180 231)
(180 232)
(180 233)
(180 234)
(180 235)
(180 236)
(180 237)
(180 238)
(180 -239)
(180 240)
(180 241)
(180 242)
(180 243)
(180 244)
(180 245)
(180 246)
(180 247)
(180 -276)
(181 207)
(181 208)
(181 209)
(181 210)
(181 211)
(181 212)
(181 213)
(181 214)
(181 215)
(181 216)
(181 217)
(181 -218)
(181 219)
(181 220)
(181 221)
(181 222)
(181 223)
(181 224)
(181 225)
(181 226)
(181 227)
(181 228)
(181 229)
(181 230)
(181 231)
(181 232)
(181 233)
(181 234)
(181 235)
(181 236)
(181 237)
(181 238)
(181 -239)
(181 240)
(181 241)
(181 242)
(181 243)
(181 244)
(181 245)
(181 246)
(181 247)
(181 -276)
(181 -464)
(181 547)
(182 207)
(182 208)
(182 209)
(182 210)
(182 211)
(182 212)
(182 213)
(182 214)
(182 215)
(182 216)
(182 217)
(182 -218)
(182 219)
(182 220)
(182 221)
(182 222)
(182 223)
(182 224)
(182 225)
(182 226)
(182 227)
(182 228)
(182 229)
(182 230)
(182 231)
(182 232)
(182 233)
(182 234)
(182 235)
(182 236)
(182 237)
(182 238)
(182 -239)
(182 240)
(182 241)
(182 242)
(182 243)
(182 244)
(182 245)
(182 246)
(182 247)
(182 -276)
(183 207)
(183 208)
(183 209)
(183 210)
(183 211)
(183 212)
(183 213)
(183 214)
(183 215)
(183 216)
(183 217)
(183 -218)
(183 219)
(183 220)
(183 221)
(183 222)
(183 223)
(183 224)
(183 225)
(183 226)
(183 227)
(183 228)
(183 229)
(183 230)
(183 231)
(183 232)
(183 233)
(183 234)
(183 235)
(183 236)
(183 237)
(183 238)
(183 -239)
(183 240)
(183 241)
(183 242)
(183 243)
(183 244)
(183 245)
(183 246)
(183 247)
(183 -276)
(184 207)
(184 208)
(184 209)
(184 210)
(184 211)
(184 212)
(184 213)
(184 214)
(184 215)
(184 216)
(184 217)
(184 -218)
(184 219)
(184 220)
(184 221)
(184 222)
(184 223)
(184 224)
(184 225)
(184 226)
(184 227)
(184 228)
(184 229)
(184 230)
(184 231)
(184 232)
(184 233)
(184 234)
(184 235)
(184 236)
(184 237)
(184 238)
(184 -239)
(184 240)
(184 241)
(184 242)
(184 243)
(184 244)
(184 245)
(184 246)
(184 247)
(184 -276)
(184 320)
(184 -556)
(185 207)
(185 208)
(185 209)
(185 210)
(185 211)
(185 212)
(185 213)
(185 214)
(185 215)
(185 216)
(185 217)
(185 -218)
(185 219)
(185 220)
(185 221)
(185 222)
(185 223)
(185 224)
(185 225)
(185 226)
(185 227)
(185 228)
(185 229)
(185 230)
(185 231)
(185 232)
(185 233)
(185 234)
(185 235)
(185 236)
(185 237)
(185 238)
(185 -239)
(185 240)
(185 241)
(185 242)
(185 243)
(185 244)
(185 245)
(185 246)
(185 247)
(185 -276)
(185 -427)
(185 328)*
(-186 207)
(-186 208)
(-186 209)
(-186 210)
(-186 211)
(-186 212)
(-186 213)
(-186 214)
(-186 215)
(-186 216)
(-186 217)
(-186 -218)
(-186 219)
(-186 220)
(-186 221)
(-186 222)
(-186 223)
(-186 224)
(-186 225)
(-186 226)
(-186 227)
(-186 228)
(-186 229)
(-186 230)
(-186 231)
(-186 232)
(-186 233)
(-186 234)
(-186 235)
(-186 236)
(-186 237)
(-186 238)
(-186 -239)
(-186 240)
(-186 241)
(-186 242)
(-186 243)
(-186 244)
(-186 245)
(-186 246)
(-186 247)
(-186 -276)
(187 207)
(187 208)
(187 209)
(187 210)
(187 211)
(187 212)
(187 213)
(187 214)
(187 215)
(187 216)
(187 217)
(187 -218)
(187 219)
(187 220)
(187 221)
(187 222)
(187 223)
(187 224)
(187 225)
(187 226)
(187 227)
(187 228)
(187 229)
(187 230)
(187 231)
(187 232)
(187 233)
(187 234)
(187 235)
(187 236)
(187 237)
(187 238)
(187 -239)
(187 240)
(187 241)
(187 242)
(187 243)
(187 244)
(187 245)
(187 246)
(187 247)
(187 -276)
(188 207)
(188 208)
(188 209)
(188 210)
(188 211)
(188 212)
(188 213)
(188 214)
(188 215)
(188 216)
(188 217)
(188 -218)
(188 219)
(188 220)
(188 221)
(188 222)
(188 223)
(188 224)
(188 225)
(188 226)
(188 227)
(188 228)
(188 229)
(188 230)
(188 231)
(188 232)
(188 233)
(188 234)
(188 235)
(188 236)
(188 237)
(188 238)
(188 -239)
(188 240)
(188 241)
(188 242)
(188 243)
(188 244)
(188 245)
(188 246)
(188 247)
(188 -276)
(189 207)
(189 208)
(189 209)
(189 210)
(189 211)
(189 212)
(189 213)
(189 214)
(189 215)
(189 216)
(189 217)
(189 -218)
(189 219)
(189 220)
(189 221)
(189 222)
(189 223)
(189 224)
(189 225)
(189 226)
(189 227)
(189 228)
(189 229)
(189 230)
(189 231)
(189 232)
(189 233)
(189 234)
(189 235)
(189 236)
(189 237)
(189 238)
(189 -239)
(189 240)
(189 241)
(189 242)
(189 243)
(189 244)
(189 245)
(189 246)
(189 247)
(189 -276)
(190 207)
(190 208)
(190 209)
(190 210)
(190 211)
(190 212)
(190 213)
(190 214)
(190 215)
(190 216)
(190 217)
(190 -218)
(190 219)
(190 220)
(190 221)
(190 222)
(190 223)
(190 224)
(190 225)
(190 226)
(190 227)
(190 228)
(190 229)
(190 230)
(190 231)
(190 232)
(190 233)
(190 234)
(190 235)
(190 236)
(190 237)
(190 238)
(190 -239)
(190 240)
(190 241)
(190 242)
(190 243)
(190 244)
(190 245)
(190 246)
(190 247)
(190 -276)
(191 207)
(191 208)
(191 209)
(191 210)
(191 211)
(191 212)
(191 213)
(191 214)
(191 215)
(191 216)
(191 217)
(191 -218)
(191 219)
(191 220)
(191 221)
(191 222)
(191 223)
(191 224)
(191 225)
(191 226)
(191 227)
(191 228)
(191 229)
(191 230)
(191 231)
(191 232)
(191 233)
(191 234)
(191 235)
(191 236)
(191 237)
(191 238)
(191 -239)
(191 240)
(191 241)
(191 242)
(191 243)
(191 244)
(191 245)
(191 246)
(191 247)
(191 -276)
(-192 519)
(-192 520)
(192 207)
(192 208)
(192 209)
(192 210)
(192 211)
(192 212)
(192 213)
(192 214)
(192 215)
(192 216)
(192 217)
(192 -218)
(192 219)
(192 220)
(192 221)
(192 222)
(192 223)
(192 224)
(192 225)
(192 226)
(192 227)
(192 228)
(192 229)
(192 230)
(192 231)
(192 232)
(192 233)
(192 234)
(192 235)
(192 236)
(192 237)
(192 238)
(192 -239)
(192 240)
(192 241)
(192 242)
(192 243)
(192 244)
(192 245)
(192 246)
(192 247)
(192 -276)
(193 207)
(193 208)
(193 209)
(193 210)
(193 211)
(193 212)
(193 213)
(193 214)
(193 215)
(193 216)
(193 217)
(193 -218)
(193 219)
(193 220)
(193 221)
(193 222)
(193 223)
(193 224)
(193 225)
(193 226)
(193 227)
(193 228)
(193 229)
(193 230)
(193 231)
(193 232)
(193 233)
(193 234)
(193 235)
(193 236)
(193 237)
(193 238)
(193 -239)
(193 240)
(193 241)
(193 242)
(193 243)
(193 244)
(193 245)
(193 246)
(193 247)
(193 -276)
(194 207)
(194 208)
(194 209)
(194 210)
(194 211)
(194 212)
(194 213)
(194 214)
(194 215)
(194 216)
(194 217)
(194 -218)
(194 219)
(194 220)
(194 221)
(194 222)
(194 223)
(194 224)
(194 225)
(194 226)
(194 227)
(194 228)
(194 229)
(194 230)
(194 231)
(194 232)
(194 233)
(194 234)
(194 235)
(194 236)
(194 237)
(194 238)
(194 -239)
(194 240)
(194 241)
(194 242)
(194 243)
(194 244)
(194 245)
(194 246)
(194 247)
(194 -276)
(195 207)
(195 208)
(195 209)
(195 210)
(195 211)
(195 212)
(195 213)
(195 214)
(195 215)
(195 216)
(195 217)
(195 -218)
(195 219)
(195 220)
(195 221)
(195 222)
(195 223)
(195 224)
(195 225)
(195 226)
(195 227)
(195 228)
(195 229)
(195 230)
(195 231)
(195 232)
(195 233)
(195 234)
(195 235)
(195 236)
(195 237)
(195 238)
(195 -239)
(195 240)
(195 241)
(195 242)
(195 243)
(195 244)
(195 245)
(195 246)
(195 247)
(195 -276)
(-196 886)*
(196 207)
(196 208)
(196 209)
(196 210)
(196 211)
(196 212)
(196 213)
(196 214)
(196 215)
(196 216)
(196 217)
(196 -218)
(196 219)
(196 220)
(196 221)
(196 222)
(196 223)
(196 224)
(196 225)
(196 226)
(196 227)
(196 228)
(196 229)
(196 230)
(196 231)
(196 232)
(196 233)
(196 234)
(196 235)
(196 236)
(196 237)
(196 238)
(196 -239)
(196 240)
(196 241)
(196 242)
(196 243)
(196 244)
(196 245)
(196 246)
(196 247)
(196 -276)
(-197 797)*
(197 207)
(197 208)
(197 209)
(197 210)
(197 211)
(197 212)
(197 213)
(197 214)
(197 215)
(197 216)
(197 217)
(197 -218)
(197 219)
(197 220)
(197 221)
(197 222)
(197 223)
(197 224)
(197 225)
(197 226)
(197 227)
(197 228)
(197 229)
(197 230)
(197 231)
(197 232)
(197 233)
(197 234)
(197 235)
(197 236)
(197 237)
(197 238)
(197 -239)
(197 240)
(197 241)
(197 242)
(197 243)
(197 244)
(197 245)
(197 246)
(197 247)
(197 -276)
(-198 894)*
(198 207)
(198 208)
(198 209)
(198 210)
(198 211)
(198 212)
(198 213)
(198 214)
(198 215)
(198 216)
(198 217)
(198 -218)
(198 219)
(198 220)
(198 221)
(198 222)
(198 223)
(198 224)
(198 225)
(198 226)
(198 227)
(198 228)
(198 229)
(198 230)
(198 231)
(198 232)
(198 233)
(198 234)
(198 235)
(198 236)
(198 237)
(198 238)
(198 -239)
(198 240)
(198 241)
(198 242)
(198 243)
(198 244)
(198 245)
(198 246)
(198 247)
(198 -276)
(199 207)
(199 208)
(199 209)
(199 210)
(199 211)
(199 212)
(199 213)
(199 214)
(199 215)
(199 216)
(199 217)
(199 -218)
(199 219)
(199 220)
(199 221)
(199 222)
(199 223)
(199 224)
(199 225)
(199 226)
(199 227)
(199 228)
(199 229)
(199 230)
(199 231)
(199 232)
(199 233)
(199 234)
(199 235)
(199 236)
(199 237)
(199 238)
(199 -239)
(199 240)
(199 241)
(199 242)
(199 243)
(199 244)
(199 245)
(199 246)
(199 247)
(199 -276)
(200 207)
(200 208)
(200 209)
(200 210)
(200 211)
(200 212)
(200 213)
(200 214)
(200 215)
(200 216)
(200 217)
(200 -218)
(200 219)
(200 220)
(200 221)
(200 222)
(200 223)
(200 224)
(200 225)
(200 226)
(200 227)
(200 228)
(200 229)
(200 230)
(200 231)
(200 232)
(200 233)
(200 234)
(200 235)
(200 236)
(ramon: poll                 200 wall=1.003s usage=1.001s mem=34624KiB load=1.00 rootload=0.96237
)
(200 238)
(200 -239)
(200 240)
(200 241)
(200 242)
(200 243)
(200 244)
(200 245)
(200 246)
(200 247)
(200 -276)
(-201 498)
(201 207)
(201 208)
(201 209)
(201 210)
(201 211)
(201 212)
(201 213)
(201 214)
(201 215)
(201 216)
(201 217)
(201 -218)
(201 219)
(201 220)
(201 221)
(201 222)
(201 223)
(201 224)
(201 225)
(201 226)
(201 227)
(201 228)
(201 229)
(201 230)
(201 231)
(201 232)
(201 233)
(201 234)
(201 235)
(201 236)
(201 237)
(201 238)
(201 -239)
(201 240)
(201 241)
(201 242)
(201 243)
(201 244)
(201 245)
(201 246)
(201 247)
(201 -276)
(-202 495)
(202 207)
(202 208)
(202 209)
(202 210)
(202 211)
(202 212)
(202 213)
(202 214)
(202 215)
(202 216)
(202 217)
(202 -218)
(202 219)
(202 220)
(202 221)
(202 222)
(202 223)
(202 224)
(202 225)
(202 226)
(202 227)
(202 228)
(202 229)
(202 230)
(202 231)
(202 232)
(202 233)
(202 234)
(202 235)
(202 236)
(202 237)
(202 238)
(202 -239)
(202 240)
(202 241)
(202 242)
(202 243)
(202 244)
(202 245)
(202 246)
(202 247)
(202 -276)
(203 207)
(203 208)
(203 209)
(203 210)
(203 211)
(203 212)
(203 213)
(203 214)
(203 215)
(203 216)
(203 217)
(203 -218)
(203 219)
(203 220)
(203 221)
(203 222)
(203 223)
(203 224)
(203 225)
(203 226)
(203 227)
(203 228)
(203 229)
(203 230)
(203 231)
(203 232)
(203 233)
(203 234)
(203 235)
(203 236)
(203 237)
(203 238)
(203 -239)
(203 240)
(203 241)
(203 242)
(203 243)
(203 244)
(203 245)
(203 246)
(203 247)
(203 -276)
(-204 548)
(-204 549)
(204 207)
(204 208)
(204 209)
(204 210)
(204 211)
(204 212)
(204 213)
(204 214)
(204 215)
(204 216)
(204 217)
(204 -218)
(204 219)
(204 220)
(204 221)
(204 222)
(204 223)
(204 224)
(204 225)
(204 226)
(204 227)
(204 228)
(204 229)
(204 230)
(204 231)
(204 232)
(204 233)
(204 234)
(204 235)
(204 236)
(204 237)
(204 238)
(204 -239)
(204 240)
(204 241)
(204 242)
(204 243)
(204 244)
(204 245)
(204 246)
(204 247)
(204 -276)
(-205 501)
(205 207)
(205 208)
(205 209)
(205 210)
(205 211)
(205 212)
(205 213)
(205 214)
(205 215)
(205 216)
(205 217)
(205 -218)
(205 219)
(205 220)
(205 221)
(205 222)
(205 223)
(205 224)
(205 225)
(205 226)
(205 227)
(205 228)
(205 229)
(205 230)
(205 231)
(205 232)
(205 233)
(205 234)
(205 235)
(205 236)
(205 237)
(205 238)
(205 -239)
(205 240)
(205 241)
(205 242)
(205 243)
(205 244)
(205 245)
(205 246)
(205 247)
(205 -276)
(-206 496)
(206 207)
(206 208)
(206 209)
(206 210)
(206 211)
(206 212)
(206 213)
(206 214)
(206 215)
(206 216)
(206 217)
(206 -218)
(206 219)
(206 220)
(206 221)
(206 222)
(206 223)
(206 224)
(206 225)
(206 226)
(206 227)
(206 228)
(206 229)
(206 230)
(206 231)
(206 232)
(206 233)
(206 234)
(206 235)
(206 236)
(206 237)
(206 238)
(206 -239)
(206 240)
(206 241)
(206 242)
(206 243)
(206 244)
(206 245)
(206 246)
(206 247)
(206 -276)
(216 358)
(-217 -887)
(-217 -887)
(-217 -887)
(217 887)
(217 887)
(217 887)
(-219 811)
(-219 812)
(-220 761)
(-220 762)
(-221 618)
(-221 619)
(-222 614)
(-222 615)
(-223 622)
(-223 623)
(-224 666)
(-224 667)
(228 276)*
(229 236)*
(232 276)*
(237 -534)
(237 338)*
(238 340)
(-241 728)
(-241 729)
(-242 633)
(-242 634)
(-243 670)
(-243 671)
(-244 782)
(-244 783)
(-245 668)
(-245 669)
(248 249)
(248 250)
(248 251)
(248 252)
(248 253)
(248 254)
(248 -255)
(248 256)
(248 257)
(248 258)
(248 259)
(248 260)
(248 261)
(248 -262)
(248 263)
(248 264)
(248 265)
(248 266)
(248 267)
(248 -268)
(248 269)
(248 270)
(248 271)
(248 272)
(248 273)
(248 -274)
(249 278)
(249 279)
(249 280)
(249 281)
(249 282)
(249 283)
(249 284)
(249 285)
(249 286)
(249 287)
(249 288)
(249 289)
(249 290)
(249 -291)
(249 292)
(249 293)
(249 294)
(249 295)
(249 296)
(249 297)
(-250 353)*
(250 278)
(250 279)
(250 280)
(250 281)
(250 282)
(250 283)
(250 284)
(250 285)
(250 286)
(250 287)
(250 288)
(250 289)
(250 290)
(250 -291)
(250 292)
(250 293)
(250 294)
(250 295)
(250 296)
(250 297)
(250 428)
(251 278)
(251 279)
(251 280)
(251 281)
(251 282)
(251 283)
(251 284)
(251 285)
(251 286)
(251 287)
(251 288)
(251 289)
(251 290)
(251 -291)
(251 292)
(251 293)
(251 294)
(251 295)
(251 296)
(251 297)
(252 278)
(252 279)
(252 280)
(252 281)
(252 282)
(252 283)
(252 284)
(252 285)
(252 286)
(252 287)
(252 288)
(252 289)
(252 290)
(252 -291)
(252 292)
(252 293)
(252 294)
(252 295)
(252 296)
(252 297)
(252 356)
(253 278)
(253 279)
(253 280)
(253 281)
(253 282)
(253 283)
(253 284)
(253 285)
(253 286)
(253 287)
(253 288)
(253 289)
(253 290)
(253 -291)
(253 292)
(253 293)
(253 294)
(253 295)
(253 296)
(253 297)
(254 278)
(254 279)
(254 280)
(254 281)
(254 282)
(254 283)
(254 284)
(254 285)
(254 286)
(254 287)
(254 288)
(254 289)
(254 290)
(254 -291)
(254 292)
(254 293)
(254 294)
(254 295)
(254 296)
(254 297)
(-255 278)
(-255 279)
(-255 280)
(-255 281)
(-255 282)
(-255 283)
(-255 284)
(-255 285)
(-255 286)
(-255 287)
(-255 288)
(-255 289)
(-255 290)
(-255 -291)
(-255 292)
(-255 293)
(-255 294)
(-255 295)
(-255 296)
(-255 297)
(256 278)
(256 279)
(256 280)
(256 281)
(256 282)
(256 283)
(256 284)
(256 285)
(256 286)
(256 287)
(256 288)
(256 289)
(256 290)
(256 -291)
(256 292)
(256 293)
(256 294)
(256 295)
(256 296)
(256 297)
(257 278)
(257 279)
(257 280)
(257 281)
(257 282)
(257 283)
(257 284)
(257 285)
(257 286)
(257 287)
(257 288)
(257 289)
(257 290)
(257 -291)
(257 292)
(257 293)
(257 294)
(257 295)
(257 296)
(257 297)
(257 384)
(257 901)*
(258 278)
(258 279)
(258 280)
(258 281)
(258 282)
(258 283)
(258 284)
(258 285)
(258 286)
(258 287)
(258 288)
(258 289)
(258 290)
(258 -291)
(258 292)
(258 293)
(258 294)
(258 295)
(258 296)
(258 297)
(259 278)
(259 279)
(259 280)
(259 281)
(259 282)
(259 283)
(259 284)
(259 285)
(259 286)
(259 287)
(259 288)
(259 289)
(259 290)
(259 -291)
(259 292)
(259 293)
(259 294)
(259 295)
(259 296)
(259 297)
(259 336)
(260 278)
(260 279)
(260 280)
(260 281)
(260 282)
(260 283)
(260 284)
(260 285)
(260 286)
(260 287)
(260 288)
(260 289)
(260 290)
(260 -291)
(260 292)
(260 293)
(260 294)
(260 295)
(260 296)
(260 297)
(261 278)
(261 279)
(261 280)
(261 281)
(261 282)
(261 283)
(261 284)
(261 285)
(261 286)
(261 287)
(261 288)
(261 289)
(261 290)
(261 -291)
(261 292)
(261 293)
(261 294)
(261 295)
(261 296)
(261 297)
(-262 278)
(-262 279)
(-262 280)
(-262 281)
(-262 282)
(-262 283)
(-262 284)
(-262 285)
(-262 286)
(-262 287)
(-262 288)
(-262 289)
(-262 290)
(-262 -291)
(-262 292)
(-262 293)
(-262 294)
(-262 295)
(-262 296)
(-262 297)
(263 278)
(263 279)
(263 280)
(263 281)
(263 282)
(263 283)
(263 284)
(263 285)
(263 286)
(263 287)
(263 288)
(263 289)
(263 290)
(263 -291)
(263 292)
(263 293)
(263 294)
(263 295)
(263 296)
(263 297)
(264 267)
(264 278)
(264 279)
(264 280)
(264 281)
(264 282)
(264 283)
(264 284)
(264 285)
(264 286)
(264 287)
(264 288)
(264 289)
(264 290)
(264 -291)
(264 292)
(264 293)
(264 294)
(264 295)
(264 296)
(264 297)
(265 278)
(265 279)
(265 280)
(265 281)
(265 282)
(265 283)
(265 284)
(265 285)
(265 286)
(265 287)
(265 288)
(265 289)
(265 290)
(265 -291)
(265 292)
(265 293)
(265 294)
(265 295)
(265 296)
(265 297)
(266 278)
(266 279)
(266 280)
(266 281)
(266 282)
(266 283)
(266 284)
(266 285)
(266 286)
(266 287)
(266 288)
(266 289)
(266 290)
(266 -291)
(266 292)
(266 293)
(266 294)
(266 295)
(266 296)
(266 297)
(267 278)
(267 279)
(267 280)
(267 281)
(267 282)
(267 283)
(267 284)
(267 285)
(267 286)
(267 287)
(267 288)
(267 289)
(267 290)
(267 -291)
(267 292)
(267 293)
(267 294)
(267 295)
(267 296)
(267 297)
(-268 278)
(-268 279)
(-268 280)
(-268 281)
(-268 282)
(-268 283)
(-268 284)
(-268 285)
(-268 286)
(-268 287)
(-268 288)
(-268 289)
(-268 290)
(-268 -291)
(-268 292)
(-268 293)
(-268 294)
(-268 295)
(-268 296)
(-268 297)
(269 278)
(269 279)
(269 280)
(269 281)
(269 282)
(269 283)
(269 284)
(269 285)
(269 286)
(269 287)
(269 288)
(269 289)
(269 290)
(269 -291)
(269 292)
(269 293)
(269 294)
(269 295)
(269 296)
(269 297)
(270 273)
(270 278)
(270 279)
(270 280)
(270 281)
(270 282)
(270 283)
(270 284)
(270 285)
(270 286)
(270 287)
(270 288)
(270 289)
(270 290)
(270 -291)
(270 292)
(270 293)
(270 294)
(270 295)
(270 296)
(270 297)
(271 278)
(271 279)
(271 280)
(271 281)
(271 282)
(271 283)
(271 284)
(271 285)
(271 286)
(271 287)
(271 288)
(271 289)
(271 290)
(271 -291)
(271 292)
(271 293)
(271 294)
(271 295)
(271 296)
(271 297)
(272 278)
(272 279)
(272 280)
(272 281)
(272 282)
(272 283)
(272 284)
(272 285)
(272 286)
(272 287)
(272 288)
(272 289)
(272 290)
(272 -291)
(272 292)
(272 293)
(272 294)
(272 295)
(272 296)
(272 297)
(273 278)
(273 279)
(273 280)
(273 281)
(273 282)
(273 283)
(273 284)
(273 285)
(273 286)
(273 287)
(273 288)
(273 289)
(273 290)
(273 -291)
(273 292)
(273 293)
(273 294)
(273 295)
(273 296)
(273 297)
(-274 278)
(-274 279)
(-274 280)
(-274 281)
(-274 282)
(-274 283)
(-274 284)
(-274 285)
(-274 286)
(-274 287)
(-274 288)
(-274 289)
(-274 290)
(-274 -291)
(-274 292)
(-274 293)
(-274 294)
(-274 295)
(-274 296)
(-274 297)
(285 287)
(289 852)
(289 852)
(289 852)
(289 852)
(289 852)
(290 846)
(290 846)
(290 846)
(290 846)
(290 846)
(-294 906)*
(-300 314)
(-300 -404)
(301 -429)
(301 -531)*
(-302 -893)
(-302 -893)
(-302 -893)
(-302 -893)
(302 -431)
(305 374)
(305 -527)*
(306 -348)
(307 -346)
(308 368)
(309 364)
(310 361)
(311 337)
(312 342)
(-313 -404)
(-313 403)*
(313 404)
(313 314)*
(314 403)
(314 -404)
(315 -834)
(315 -834)
(-316 -421)
(-316 420)*
(316 421)
(316 -833)
(316 -833)
(317 359)
(319 371)
(-320 555)*
(320 556)*
(-322 -474)
(322 474)
(322 355)*
(-323 -476)
(323 -365)
(-325 -490)
(-325 489)*
(325 490)
(325 539)*
(-326 -433)
(-326 432)*
(326 433)
(-328 -427)
(328 427)
(329 -542)
(330 -345)
(333 -905)
(333 -905)
(333 -905)
(-338 -534)
(-338 533)*
(338 534)
(341 -602)
(341 -602)
(341 -602)
(341 -602)
(341 -602)
(341 -602)
(341 -602)
(341 -602)
(349 373)
(351 369)
(-352 378)
(-352 379)
(-354 376)
(-354 377)
(355 -474)
(362 -375)
(376 377)
(378 379)
(-380 -484)
(380 484)
(380 538)*
(-381 -486)
(382 -730)
(382 -730)
(382 -730)
(382 -730)
(382 -730)
(382 -730)
(382 -730)
(382 -730)
(-383 -516)
(383 -651)
(383 -651)
(383 -651)
(383 -651)
(383 -651)
(387 -603)
(387 -603)
(387 -603)
(387 -603)
(387 -603)
(387 -603)
(387 -603)
(387 -603)
(388 -430)
(-389 390)*
(-389 432)
(-389 433)
(-390 391)
(-390 497)
(391 497)
(-392 403)
(-392 404)
(-394 420)
(-394 421)
(395 -557)
(395 558)
(-396 397)*
(-396 426)
(-396 427)
(-397 398)
(-397 452)
(398 452)
(-401 555)
(-401 556)
(403 404)
(-410 533)
(-410 534)
(418 419)
(420 421)
(-421 -833)
(-421 -833)
(426 427)
(432 433)
(-436 437)*
(-436 440)*
(-436 442)*
(-436 474)
(-436 475)
(438 -467)
(438 473)
(439 -532)
(439 551)
(-442 443)*
(444 445)
(446 447)
(448 449)
(450 451)
(-453 772)
(-453 773)
(-457 545)
(-457 546)
(-459 491)
(-459 492)
(-462 543)
(-462 544)
(-463 493)
(-463 494)
(-464 547)
(-466 521)
(-466 522)
(-467 473)
(474 475)
(-477 478)*
(-477 488)*
(-477 489)
(-477 490)
(-479 480)*
(-479 482)*
(-479 484)
(-479 485)
(-480 481)
(-480 537)
(481 537)
(-482 499)*
(483 -499)
(483 500)
(-484 538)
(484 485)
(-488 552)*
(489 490)
(489 753)*
(-490 539)
(491 492)
(493 494)
(-499 500)
(-502 566)
(-502 567)
(-503 540)
(-503 541)
(-504 584)
(-504 585)
(-505 570)
(-506 568)
(-506 569)
(-515 646)
(-515 647)
(-516 -651)
(-516 -651)
(-516 -651)
(-516 -651)
(-516 -651)
(519 520)
(521 522)
(-523 532)*
(-524 550)*
(-525 536)
(-532 551)
(533 534)
(540 541)
(543 544)
(545 546)
(548 549)
(-550 571)
(-550 572)
(-553 557)*
(555 556)
(-557 558)
(-560 561)*
(-562 563)*
(-564 565)*
(566 567)
(566 567)
(566 567)
(568 569)
(568 569)
(568 569)
(571 572)
(571 572)
(571 572)
(-575 -891)*
(-582 -899)*
(-583 -602)*
(584 585)
(584 585)
(584 585)
(584 585)
(-587 588)
(-587 589)
(588 589)
(588 589)
(588 589)
(588 589)
(588 589)
(588 589)
(-590 696)
(-590 697)
(-591 644)
(-591 645)
(-591 727)*
(-593 604)
(-593 605)
(-595 608)
(-595 609)
(-596 610)
(-596 611)
(-597 870)
(-597 871)
(-598 750)*
(-598 749)*
(-598 807)
(-598 808)
(-599 631)
(-599 632)
(-600 662)
(-600 663)
(-601 731)
(-601 732)
(604 605)
(604 605)
(604 605)
(604 605)
(604 605)
(604 605)
(604 605)
(604 605)
(606 607)
(606 607)
(606 607)
(606 607)
(606 607)
(606 607)
(606 607)
(606 607)
(608 609)
(608 609)
(608 609)
(608 609)
(608 609)
(608 609)
(608 609)
(608 609)
(610 611)
(610 611)
(610 611)
(610 611)
(610 611)
(610 611)
(610 611)
(610 611)
(612 613)
(612 613)
(612 613)
(612 613)
(612 613)
(612 613)
(612 613)
(612 613)
(614 615)
(614 615)
(614 615)
(614 615)
(614 615)
(614 615)
(614 615)
(614 615)
(616 617)
(616 617)
(616 617)
(616 617)
(616 617)
(616 617)
(616 617)
(616 617)
(618 619)
(618 619)
(618 619)
(618 619)
(618 619)
(618 619)
(618 619)
(618 619)
(620 621)
(620 621)
(620 621)
(620 621)
(620 621)
(620 621)
(620 621)
(620 621)
(622 623)
(622 623)
(622 623)
(622 623)
(622 623)
(622 623)
(622 623)
(622 623)
(624 625)
(624 625)
(624 625)
(624 625)
(624 625)
(624 625)
(624 625)
(624 625)
(-626 -713)
(-626 -713)
(-626 -713)
(-626 -713)
(-626 -713)
(-626 -713)
(-626 -713)
(-626 -713)
(-627 -640)
(-627 -640)
(-627 -640)
(-627 -640)
(-627 -640)
(-627 -640)
(-627 -640)
(-628 -636)
(-628 -636)
(-628 -636)
(-628 -636)
(-628 -636)
(-628 -636)
(-628 -636)
(-629 -637)
(-629 -637)
(-629 -637)
(-629 -637)
(-629 -637)
(-629 -637)
(-629 -637)
(-630 -639)
(-630 -639)
(-630 -639)
(-630 -639)
(-630 -639)
(-630 -740)*
(-630 -639)
(-630 -639)
(631 632)
(631 632)
(631 632)
(631 632)
(631 632)
(631 632)
(631 632)
(631 632)
(633 634)
(633 634)
(633 634)
(633 634)
(633 634)
(633 634)
(633 634)
(633 634)
(638 -884)
(638 -884)
(638 -884)
(-641 -648)
(-641 -648)
(-641 -648)
(-641 -648)
(-641 -648)
(-642 -796)*
(-643 -704)
(-643 -704)
(-643 -704)
(-643 -704)
(-643 -704)
(-643 -704)
(-643 -704)
(644 645)
(644 645)
(644 645)
(644 645)
(644 645)
(644 645)
(646 647)
(646 647)
(646 647)
(646 647)
(646 647)
(646 647)
(-650 -655)
(-650 -655)
(-650 -655)
(-650 -655)
(-650 -655)
(-652 -654)
(-652 -654)
(-652 -654)
(-652 -654)
(-652 -654)
(-653 -742)
(-653 -742)
(-653 -742)
(-653 -742)
(-653 -742)
(-653 -742)
(-653 -742)
(-653 -742)
(656 657)
(656 657)
(656 657)
(656 657)
(656 657)
(656 657)
(658 659)
(658 659)
(658 659)
(658 659)
(658 659)
(658 659)
(660 661)
(660 661)
(660 661)
(660 661)
(660 661)
(660 661)
(662 663)
(662 663)
(662 663)
(662 663)
(662 663)
(664 665)
(664 665)
(664 665)
(664 665)
(664 665)
(666 667)
(666 667)
(666 667)
(666 667)
(666 667)
(668 669)
(668 669)
(668 669)
(668 669)
(668 669)
(670 671)
(670 671)
(670 671)
(670 671)
(670 671)
(-672 -743)
(-672 -743)
(-672 -743)
(-672 -743)
(-672 -743)
(-672 -743)
(-672 -743)
(-672 -743)
(-672 -743)
(-674 -690)
(-674 -690)
(-674 -690)
(-674 -690)
(-674 -690)
(-675 -686)
(-675 -686)
(-675 -686)
(-675 -686)
(-675 -686)
(-676 -687)
(-676 -687)
(-676 -687)
(-676 -687)
(-676 -687)
(-677 -693)
(-677 -693)
(-677 -693)
(-677 -693)
(-677 -693)
(-678 -692)
(-678 -692)
(-678 -692)
(-678 -692)
(-678 -692)
(-679 -689)
(-679 -689)
(-679 -689)
(-679 -689)
(-679 -689)
(680 681)
(680 681)
(680 681)
(680 681)
(680 681)
(680 681)
(682 683)
(682 683)
(682 683)
(682 683)
(682 683)
(682 683)
(-685 -873)
(-685 -873)
(-685 -873)
(-685 -873)
(696 697)
(696 697)
(696 697)
(696 697)
(696 697)
(696 697)
(696 697)
(696 697)
(696 697)
(-698 705)
(-698 706)
(-699 700)
(-699 701)
(700 701)
(700 701)
(700 701)
(700 701)
(700 701)
(700 701)
(700 701)
(700 701)
(-702 -703)
(-702 -703)
(-702 -703)
(-702 -703)
(-702 -703)
(-702 -703)
(-702 -703)
(-703 -747)*
(705 706)
(705 706)
(705 706)
(705 706)
(705 706)
(705 706)
(705 706)
(-707 726)*
(-707 725)*
(-707 757)
(-707 758)
(710 711)
(710 711)
(710 711)
(710 711)
(710 711)
(710 711)
(710 711)
(710 711)
(-715 -733)
(-715 -733)
(-715 -733)
(-715 -733)
(-715 -733)
(-715 -733)
(-715 -733)
(-715 -733)
(-715 -733)
(-716 717)
(-716 718)
(717 718)
(717 718)
(717 718)
(717 718)
(717 718)
(717 718)
(-719 722)
(-719 723)
(-721 725)
(-721 726)
(722 723)
(722 723)
(722 723)
(722 723)
(722 723)
(722 723)
(-724 755)
(-724 756)
(725 726)
(725 726)
(725 726)
(725 726)
(725 726)
(725 726)
(725 726)
(725 726)
(725 726)
(725 726)
(725 726)
(728 729)
(728 729)
(728 729)
(728 729)
(728 729)
(728 729)
(728 729)
(728 729)
(731 732)
(731 732)
(731 732)
(731 732)
(731 732)
(731 732)
(731 732)
(731 732)
(731 732)
(-734 -879)*
(-736 737)
(-736 738)
(737 738)
(737 738)
(737 738)
(737 738)
(737 738)
(737 738)
(737 738)
(737 738)
(737 738)
(737 738)
(-741 -884)*
(-746 749)
(-746 750)
(749 750)
(749 750)
(749 750)
(749 750)
(-754 759)
(-754 760)
(755 756)
(755 756)
(755 756)
(755 756)
(755 756)
(755 756)
(755 756)
(757 758)
(757 758)
(757 758)
(757 758)
(757 758)
(757 758)
(757 758)
(757 758)
(759 760)
(759 760)
(759 760)
(759 760)
(759 760)
(759 760)
(759 760)
(759 760)
(761 762)
(761 762)
(761 762)
(761 762)
(761 762)
(761 762)
(761 762)
(-763 -774)
(-763 -774)
(-763 -774)
(-763 -774)
(-763 -774)
(-763 -774)
(-764 -775)
(-764 -775)
(-764 -775)
(-764 -775)
(-764 -775)
(-764 -775)
(-768 -805)
(-768 -805)
(-768 -805)
(-769 -777)
(-769 -777)
(-769 -777)
(-769 -777)
(-769 -777)
(-769 -777)
(-770 -785)
(-770 -785)
(-770 -785)
(-770 -785)
(-770 -785)
(-770 -785)
(-770 -785)
(772 773)
(772 773)
(772 773)
(772 773)
(772 773)
(772 773)
(772 773)
(772 773)
(772 773)
(-776 -898)
(-776 -898)
(-776 -898)
(-776 -898)
(-776 -898)
(-778 -787)
(-778 -787)
(-778 -787)
(-778 -787)
(-778 -787)
(-778 -787)
(-779 -806)
(-779 -806)
(-779 -806)
(-780 -874)
(-780 -874)
(-780 -874)
(-780 -874)
(782 783)
(782 783)
(782 783)
(782 783)
(782 783)
(782 783)
(782 783)
(782 783)
(-789 902)
(-789 903)
(807 808)
(807 808)
(807 808)
(807 808)
(807 808)
(807 808)
(807 808)
(809 810)
(809 810)
(809 810)
(809 810)
(809 810)
(809 810)
(809 810)
(811 812)
(811 812)
(811 812)
(811 812)
(811 812)
(811 812)
(811 812)
(-813 -816)
(-813 -816)
(-813 -816)
(-813 -816)
(-813 -816)
(-813 -816)
(-818 820)
(-818 821)
(820 821)
(820 821)
(820 821)
(820 821)
(820 821)
(-845 -892)*
(848 -857)
(848 -857)
(848 -857)
(848 -857)
(848 -857)
(853 -900)
(853 -900)
(853 -900)
(853 -900)
(853 -900)
(870 871)
(870 871)
(870 871)
(870 871)
(870 871)
(870 871)
(-872 -881)
(-872 -881)
(-872 -881)
(-872 -881)
(-875 -879)
(-875 -879)
(-875 -879)
(-875 -879)
(-876 -890)
(-876 -890)
(-876 -890)
(902 903)
(902 903)
(902 903)
(275 -81 -69 -76 -79 -78 -73 -77 -80 -82 -83 -84 -85 -86 -87 88 -89 -90 -91 -92 -93 -94 -95 -96 -97 -98 -99 -100 -101 -102 -103 -104 -105 -106 -107 -108 -109 -70)
(276 -180 -169 -178 -175 -172 -177 -176 -179 -181 -182 -183 -184 -185 186 -187 -188 -189 -190 -191 -192 -193 -194 -195 -196 -197 -198 -199 -200 -201 -202 -203 -204 -205 -206 -168)
(-314 300 404)
(-376 -377 354)
(352 -379 -378)
(-404 392 -403)
(93 -418 -419)
(394 -421 -420)
(-74 -422 108)
(105 -72 -425)
(396 -427 -426)
(389 -432 -433)
(-71 -434 104)
(-435 109 -75)
(-444 -445 89)
(-446 94 -447)
(-448 91 -449)
(107 -450 -451)
(-398 -452 397)
(467 -438 -473)
(-484 479 -485)
(-489 477 -490)
(-491 459 -492)
(-493 -494 463)
(-495 202 -171)
(206 -496 -174)
(-391 -497 390)
(201 -498 -170)
(499 -483 -500)
(-501 -173 205)
(-519 192 -520)
(-521 466 -522)
(525 -536 -85)
(480 -481 -537)
(-541 503 -540)
(-543 462 -544)
(-545 457 -546)
(464 -547 -181)
(-548 204 -549)
(532 -551 -439)
(-556 401 -555)
(557 -558 -395)
(248 275 276)
(278 275 276)
(279 275 276)
(280 275 276)
(281 275 276)
(282 275 276)
(283 275 276)
(284 275 276)
(285 275 276)
(286 275 276)
(287 275 276)
(288 275 276)
(289 275 276)
(290 275 276)
(-291 275 276)
(292 275 276)
(293 275 276)
(294 275 276)
(295 275 276)
(296 275 276)
(297 275 276)
(436 -474 -475)
(410 -534 -533)
(-566 -567 502)+
(-568 -569 506)+
(-570 505 -82)+
(550 -572 -571)+
(504 -584 -585)+
(587 -589 -588)+
(593 -605 -604)+
(163 -606 -607)+
(595 -608 -609)+
(596 -610 -611)+
(126 -612 -613)+
(-615 -614 222)+
(-617 -616 125)+
(221 -618 -619)+
(127 -621 -620)+
(223 -622 -623)+
(-625 155 -624)+
(599 -631 -632)+
(-634 242 -633)+
(591 -645 -644)+
(-646 -647 515)+
(164 -656 -657)+
(166 -658 -659)+
(-661 -660 128)+
(600 -663 -662)+
(158 -664 -665)+
(224 -667 -666)+
(245 -668 -669)+
(243 -670 -671)+
(156 -681 -680)+
(129 -682 -683)+
(590 -697 -696)+
(699 -700 -701)+
(-706 698 -705)+
(154 -710 -711)+
(716 -718 -717)+
(719 -722 -723)+
(721 -725 -726)+
(241 -729 -728)+
(-732 -731 601)+
(736 -737 -738)+
(746 -749 -750)+
(724 -755 -756)+
(707 -758 -757)+
(-759 754 -760)+
(-762 220 -761)+
(-772 -773 453)+
(244 -782 -783)+
(598 -808 -807)+
(-810 -809 124)+
(219 -811 -812)+
(818 -821 -820)+
(597 -871 -870)+
(-902 789 -903)+
(-258 255 -251 -178 -225 -309 -81 -78 -191 -70 -92 -226 -298 -247 -246 262 -312 -311 -177 -189 -91 -307 -73 -95 -103 -94 -89 -130 -132 -133 -107 -96 -161 -162 -159 -87 -184 -77 -301 -303 88 -305 -90 -93 -102 -106 -306 -308 -302 -304 186 -310 -299 -204 -187 -193 -194 -192 -188 -200 -172 -203 -337)*
(-229 -228 -78 239 -118 -130 -85 -102 -106 88 -70 -73 -133 -147 -159 -161 -162 -225 -226 -483 -132 -232 -90 -246 -247 -250 -252 -257 -258 -259 262 -336 -337 343 -356 -364 -366 -384 -403 -404 -418 -419 -428 -444 -445 -446 -447 -448 -449 -95 -451 -474 -475 -450 -490 497 -508 -511 -524 -536 -540 -541)*
(432 262 -78 -250 -118 -147 88 -73 -252 -257 -258 -259 -418 -336 -70 343 346 -356 -364 -366 -374 -384 -337 -403 -85 -419 -428 429 -404 -444 -445 -446 -447 -448 -449 -450 -451 -454 -465 -474 -475 489 -502 -504 -505 -506 -508 -509 -510 -511 -512 -513 -514 -515 -536 -540 -541)*
(497 262 88 -250 -118 -147 -252 -257 -258 -259 -444 -336 -337 343 346 -356 -73 -366 -374 -384 -364 -403 -418 -419 -428 429 -85 -445 -446 -447 -448 -449 -450 -451 -454 -465 -474 -475 489 -404 -502 -504 -505 -506 -508 -509 -510 -511 -512 -513 -514 -515 -536 -540 -541 -550)*
(475 -232 -337 -78 -448 -70 -228 -404 -403 -445 -366 -118 343 -147 -419 88 -384 -257 -428 -250 -77 -447 -449 -483 -364 -356 -252 -259 -433 239 -229 -92 -106 -133 -132 -95 -130 -103 -247 -225 -102 -246 -161 -159 -162 -90 -226 -258 262 -418 -444 -446 489)*
(-159 -130 -76 -433 -118 -132 -535 -90 -86 88 -91 -92 -93 -95 -102 -103 -106 -78 -70 -73 -447 -147 -133 -161 -162 -225 -226 -246 -247 -250 -252 -257 -258 -259 262 -270 274 -336 343 -356 -366 -384 -403 -404 -428 -84 -89 -451 -474 484 -508 -511 -77)*
(432 262 -78 489 -118 -147 -250 -252 -257 -258 -259 -337 -336 -70 343 346 -356 -364 -366 -374 -384 -403 -404 88 -419 -428 429 -514 -444 -445 -446 -447 -448 -449 -454 -465 475 -513 -502 -503 -504 -505 -506 -418 -508 -509 -510 -511 -512 -515 -77 -507)*
(-159 -130 -76 -391 -118 -162 -86 88 -321 -90 -92 -89 -95 -102 -103 -106 -78 -70 -73 -132 -147 -133 -161 -433 -225 -226 -246 -247 -250 -252 -257 -258 -259 262 -311 -77 -336 343 -356 -366 -384 -84 -403 -404 -428 -93 -447 -449 -451 -508 -511)*
(-232 -228 -337 -78 -90 -70 475 489 -404 -403 -445 -366 -118 343 -147 -419 88 -384 -257 -428 -250 -77 -447 -449 -483 -364 -356 -252 -336 -259 -391 239 -229 -92 -106 -133 -132 -95 -130 -103 -247 -225 -102 -246 -161 -159 -162 -432 -226)*
(432 262 88 -118 -147 -250 -252 -257 -258 -259 -364 -336 489 343 -356 -92 -366 -384 -403 -404 -337 -419 -428 -78 -444 -445 -446 -447 -448 -449 475 -502 -77 -70 -133 -132 -226 -162 -161 -247 -159 -246 -130 -225 -103 -106 -102 -95 -418)*
(-229 -232 -78 -132 -118 -130 88 -106 -90 -70 -73 -133 -147 -159 -161 -162 -225 -226 -228 -483 239 -95 -246 -247 -250 -252 -257 -259 -336 343 -356 -366 -384 -403 -404 -419 -428 -445 -447 -449 -451 -474 -475 -102 -489 -490 -524 -536 -541)*
(-225 -130 -78 -132 -92 -95 88 -102 -103 -106 -90 -70 -77 -133 -147 -159 -161 -162 -118 -226 -246 -247 -250 -252 -257 -259 -337 343 -356 -364 -366 -384 -403 -404 -419 -428 -432 -433 -445 -447 -449 475 -484 -489 -490)*
(-225 -130 -78 -132 -92 -95 88 -102 -103 -106 -90 -70 -77 -133 -147 -159 -161 -162 -118 -226 -246 -247 -250 -252 -257 -259 -336 -337 343 -356 -364 -366 -384 -391 -403 -404 -419 -428 -445 -447 -449 475 -484 -485 -489 -490)*
(-159 -130 -78 -391 -118 -132 -321 -92 -102 -95 -106 88 -70 -73 -103 -147 -133 -161 -162 -225 -226 -246 -247 -250 -252 -257 -258 -259 262 -90 -336 343 -356 -366 -384 -86 -403 -404 -419 -428 -432 -433 -445 -447 -449 -451)*
(-159 -130 88 -340 -238 -118 -132 -106 -95 -77 -86 -321 -147 -133 -161 -162 -225 -226 -103 -246 -247 -250 -252 -257 -259 -90 -336 -337 -102 343 -356 -364 -366 -384 -391 -403 -404 -419 -428 -445 -447 -448 -449 -497 -503 524)*
(433 -133 -78 -130 -118 -132 -162 -90 -95 -102 -103 -106 88 -70 -77 -91 -147 -159 -161 -364 -225 -226 -246 -247 -250 -252 -257 -259 -309 -336 -337 343 -356 -92 -366 -384 -403 -404 -419 -428 -87 -445 -447 -474)*
(-225 -130 -78 -132 -118 -103 -161 88 -106 -90 -70 -77 -95 -147 -159 -102 -162 -524 -226 -246 -247 -250 -252 -257 -258 -259 262 -321 -336 -337 343 -356 -364 -366 -384 -403 -404 -419 -428 432 -445 -447 -449 -133)*
(-159 -130 -132 -426 -177 -162 -161 -427 -147 -118 -133 -184 186 -187 -188 -189 -190 -191 -200 -204 -225 -226 -246 -247 -250 -252 -257 -258 -259 262 -336 343 -356 -366 -384 -403 -404 475 -169 -428 -172 -494 -520 -522)*
(-225 -130 -132 -432 -177 -159 -161 -433 -147 -438 -133 186 -187 -188 -189 -190 -191 -192 -193 -200 -203 -204 -118 -226 -246 -247 -250 -252 -257 -259 -336 343 -356 -366 -384 -396 -403 -404 -428 -162 -169 -172 -484)*
(-478 -257 -384 320 -336 -259 -404 -177 -356 -252 -172 343 -147 -403 -366 -118 -428 -250 -479 186 475 -169 -162 -161 -189 -200 -192 -193 -191 -188 -187 -133 -132 -226 -203 -247 -204 -225 -246 -130 -159 -190)*
(475 426 -336 -478 -259 -356 -252 -169 -384 -257 -404 -403 186 343 -147 485 -366 -118 -428 -250 -177 -189 -190 -162 -161 -200 -192 -193 -191 -188 -187 -159 -133 -132 -226 -203 -247 -204 -225 -246 -130 -172)*
(-478 475 -336 320 -259 -356 -252 -246 -169 -189 -190 -484 -384 -257 -404 -403 -172 343 -147 186 -366 -118 -428 -250 -162 -161 -200 -192 -193 -191 -188 -187 -159 -133 -132 -226 -203 -247 -177 -225 -204 -130)*
(-159 -130 -90 -340 -118 -132 -391 -102 -77 88 -321 -147 -133 -161 -162 -225 -226 -238 -246 -247 -250 -252 -257 -259 -95 -336 -106 -103 343 -356 -364 -366 -384 -337 -403 -404 -419 -428 -445 -447 -449 -523)*
(426 -176 -133 -437 -147 -162 -161 -118 -132 -177 186 -187 -188 -189 -190 -191 -193 -200 -203 -225 -246 -247 -252 -257 -259 -270 274 -302 -310 -336 343 -356 -366 -384 -403 -404 -169 -175 -453 -484 -490)*
(-487 -130 -132 -177 -162 -159 -161 -172 -147 -133 -118 186 -187 -188 -190 -191 -192 -200 -203 -204 -225 -226 -246 -247 -250 -252 -257 -259 -336 343 -356 -366 -384 -403 -404 -428 475 -169 489 -492 -494)*
(-404 -270 -175 -259 -147 -467 -169 -176 274 -302 -310 -177 -336 343 -457 -403 426 -453 -454 -455 -456 186 -458 -459 -460 -461 -462 -463 -464 -465 -466 -312 -468 -469 -470 -471 -472 -484 -490)*
(-159 -130 88 -391 -118 -102 -321 -95 -73 -81 -132 -147 -133 -161 -162 -225 -226 -246 -247 -250 -252 -257 -259 -106 -336 343 -356 -366 -384 -90 -403 -404 -419 -428 -445 -447 -449 -451 -484)*
(-479 -490 -70 -403 -404 -541 -356 -252 -336 -259 -449 -73 -536 -451 -366 -118 343 -147 -447 -445 -428 -250 -384 -257 -419 88 -78 -489 -440 -226 -247 -95 -159 -130 -102 -106 -225 -246 -90)*
(-225 -130 -132 -398 -187 -159 -161 -162 -147 -133 -538 -188 -189 -191 -200 -204 -118 -226 -246 -247 -250 -252 -257 -259 -320 -336 343 -356 -366 -384 -172 -403 -404 -428 186 -520 -522 -494)*
(-159 -130 -132 -187 -182 186 -161 -162 -147 -118 -133 -188 -189 -191 -192 -193 -194 -200 -203 -225 -226 -246 -247 -252 -259 -300 -302 -304 -312 -342 343 -356 -366 -427 -484)*
(383 -394 343 -147 -366 -118 88 -356 -252 -336 -259 -301 -91 -257 -73 -226 -132 -133 -159 -161 -162 -247 -96 -107 -130 -95 -89 -94 -103 -246 -102 -93 -225 -106 -90 -384)*
(-132 -300 -73 -147 -305 88 383 -107 -303 -301 -336 -259 -311 -226 -133 -159 -161 -162 -247 -96 -309 -130 -95 -89 -94 -103 -246 -102 -93 -225 -106 -90 -91 -337 343)*
(381 -402 -147 186 -302 -384 343 -257 -225 -356 -252 -336 -259 -366 -118 -246 -161 -162 -204 -191 -130 -132 -133 -187 -247 -193 -226 -194 -192 -159 -188 -189 -200 -203 -172)*
(239 -229 -132 -257 -250 -147 -252 -161 -162 -137 -130 -118 -159 -166 -245 -246 -247 -225 -226 -133 -259 -336 340 344 -356 -366 -384 -399 -403 -404 -484 -490 -534)*
(-251 255 -78 -133 -130 -91 -177 -132 -92 -95 -96 -103 -107 -87 -70 -73 -159 -161 -178 -94 -81 -89 -225 -226 -247 -189 -162 -309 -311 -312 320 321 -404 433)*
(-130 -159 -132 -185 -176 186 -161 -162 -147 -118 -133 -187 -188 -189 -191 -192 -193 -200 -203 -225 -226 -246 -247 -252 -259 -302 -304 -315 -336 343 -356 -366 -484)*
(475 -130 -132 -275 -147 -252 -250 -162 -257 -118 -159 -247 -225 -226 -246 -161 -259 262 -133 -270 274 -293 -336 343 -356 -366 -384 -403 -404 -428 -258 484 -508 -511)*
(152 475 -132 -133 -139 -226 -225 -147 -246 -159 -161 -162 -143 -118 -130 -247 -250 -252 -257 -259 332 -336 343 -356 -366 -384 -403 -404 -428 -140 -479 -488 -490)*
(-391 -118 -84 -132 -321 -147 -161 432 88 -93 -250 -252 -257 -259 -76 -77 -309 -336 343 -356 -366 -384 -89 -404 -428 -311 -449 -502 -505 -506 -508 -511 -525)*
(-229 -228 -133 -147 -252 -257 -250 -130 -159 -132 -161 -162 239 -246 -247 -225 -226 -483 -259 -336 343 -356 -384 -403 -404 -423 -428 -474 -232 -475 -485 -490 -518)*
(-130 -118 -132 -162 -147 -252 -250 -311 -337 -257 -159 -247 -225 -226 -246 -259 -161 -309 -133 -336 -275 343 -356 -364 -366 -384 -403 -404 -428 -474 -484 490)*
(-229 -228 -133 -147 -252 -257 -250 -130 -159 -132 -161 -162 239 -246 -247 -225 -226 -439 -259 -336 343 -356 -384 -403 -404 -423 -428 -232 -474 -475 489 -518)*
(-276 -437 -132 -257 -147 -252 -250 -162 -130 -118 -159 -247 -225 -226 -246 -259 -161 274 -133 -336 343 -356 -366 -384 -403 -404 -428 -270 -474 -478 485)*
(-298 -302 -306 -308 -133 -304 186 -310 -312 -299 -204 -315 -130 -132 -187 -247 -161 -162 -193 -226 -194 -192 -159 -188 -189 -200 -172 -246 -203 -225 -191)*
(-225 -159 -89 421 -132 -130 -94 -95 -96 -102 -103 -106 -91 -77 88 -133 -161 -162 -298 -226 -246 -247 -93 -301 -303 -305 -307 -309 -311 -318 -90)*
(475 -130 -132 -275 -147 -252 -250 -162 -257 -118 -159 -247 -225 -226 -246 -161 -259 262 -133 -297 -336 343 -356 -366 -384 -403 -404 -428 -258 -484 489)*
(-298 -130 -307 -309 -305 -303 -301 88 -77 -132 -311 -133 -89 -159 -161 -162 -94 -96 -90 -91 -93 -103 -246 -95 -226 -102 -106 -225 -247 -300)*
(-229 340 239 -336 -252 -257 -259 -147 -250 344 -356 -384 -403 -404 -406 -407 -408 -409 -410 -411 -412 -413 -414 -415 -416 -417 -484 -490)*
(239 340 -132 -257 -147 -252 -250 -162 -130 -118 -159 -161 -246 -247 -225 -226 -229 -259 -336 -133 343 -356 -366 -384 -403 -404 -409 -484 -490 534)*
(-239 262 -132 -225 -133 -147 -226 -162 -159 -118 -130 -246 -247 -250 -252 -257 -258 -259 -161 -336 343 -356 -366 -384 -403 -404 -428 475 -490)*
(239 -229 -147 -259 -132 -257 -252 -237 -133 -336 340 344 -356 -384 -403 -404 -407 -409 -411 -412 -414 -415 -417 -423 -484 -490 534)*
(-309 432 -77 -403 -311 88 -78 -70 -76 -404 -84 485 -489 -490 -502 -505 -506 -508 -511 -525 -526 -527 -528 -529 -530 -531 -535 -541 -559)*
(-474 -276 -132 -257 -147 -252 -250 -162 -130 -118 -159 -247 -225 -226 -246 -259 -161 -336 343 -356 -366 -384 -403 -404 -428 -437 -133 485 490)*
(-229 239 -237 -259 -147 -252 -257 -336 340 344 -356 -384 -403 -404 -407 -409 -411 -412 -414 -415 -417 -423 -424 -484 -490 534)*
(237 -229 -133 -225 -147 -226 -161 -159 -130 -132 -162 239 -246 -247 -250 -252 -257 -259 -336 343 -356 -384 -403 -404 -423 -428 -439 -490)*
(-478 -130 -132 -162 -147 -252 -250 -276 -257 -118 -159 -247 -225 -226 -246 -259 -161 -336 343 -356 -366 -384 -403 -404 -428 475 -133 -484)*
(-133 -130 -132 -276 -147 -252 -250 -162 -257 -118 -159 -247 -225 -226 -246 -259 -161 -300 -336 343 -356 -366 -484)*
(-391 -321 -84 432 -311 -76 -77 88 -404 -309 -449 -502 -505 -506 -508 -511 -525 -526 -527 -528 -529 -530 -531)*
(-140 -146 -133 -137 -139 -246 -226 -247 -150 -158 -159 -161 -162 -166 -143 -130 -132 -259 -332 -336 -343 -490)*
(-321 -228 -86 -252 -232 -364 -259 -410 -336 -78 -356 -70 391 -337 -448 -449 475 483 484 490 -503 -532)*
(262 -552 -259 537 -336 343 -398 -391 -500 -497 -439 -452 -454 -465 -483 -489 -490 -427 -258 -551 -426 -147)*
(-343 -137 -133 -336 -259 -161 -162 -166 -159 -130 -132 -232 -235 -237 -245 -247 -226 -228 -229 -490 534)*
(-226 -159 -305 383 343 -132 -147 -336 -259 -275 -309 -133 -303 -161 -162 -247 -301 -130 -246 -225 -300)*
(524 523 -238 -252 -259 -321 -336 -337 -497 343 -356 -364 -391 -448 -449 -340 -465 -454 -503 -147 -86)*
(-159 -130 -87 -133 -89 -95 -96 -103 -107 -94 -73 -81 -132 -161 -162 -226 -247 374 433)*
(-551 -552 -336 -481 343 -391 -500 -465 -454 -483 -489 -490 -497 554 -537 553 -439 -259 -147)*
(-258 262 -259 -557 -336 343 -439 -391 -454 -465 -481 -489 -490 -497 500 -537 -551 -147)*
(-332 442 -297 -150 -356 -293 -252 -86 365 -336 -259 -133 -132 -321 -323 -162 -161)*
(274 -270 -86 -311 -70 391 -78 -336 343 -309 432 -449 -454 -465 484 -503 -535)*
(494 -342 -176 -162 -183 -161 -336 -259 -247 -226 -132 -133 -356 -252)*
(-537 -481 -336 -558 343 -147 -465 -454 -489 -490 497 500 -532 -395 -259)*
(-516 -489 -259 -554 -147 -391 -273 -246 -247 -490 -497 343 -270 -336)*
(497 -481 343 -147 -537 -465 -336 -454 -490 -489 500 -532 -557 -259)*
(-346 -305 -77 -132 -96 -81 -89 -133 -159 -161 -162 -94 -130)*
(447 -133 -364 -336 -132 -76 -130 -252 -162 -161 -356 -259 -159)*
(520 -342 -175 -356 -161 -162 -130 -132 -133 -159 -252 -336 -259)*
(475 320 -185 -259 -252 -189 -169 -177 -336 -356 -190 490)*
(485 -273 -259 -554 -147 -489 -246 -247 -490 343 -270 -336)*
(427 324 -185 -259 -252 -189 -169 -177 -336 -356 -190)*
(-258 262 -259 -499 -336 343 489 -454 -465 -439 -147)*
(475 -542 -169 -336 -177 -190 -259 -356 -252 -189 -184)*
(-258 262 -298 -246 -247 -337 346 -433 -490)*
(-323 255 -251 -225 -226 -364 321 -374 -404)*
(-232 -228 -252 -259 -341 -336 -490 -356 -330)*
(-143 -139 -252 -259 -335 -336 -356 -362 -490)*
(533 475 -252 -336 -259 -341 -356 -228 -232)*
(-115 110 -122 -371 -403 -404 -474 -475 489)*
(323 -327 -309 -70 -311 -78 -91 -92)*
(-143 -139 -150 -259 -335 -332 -336 -490)*
(-258 262 -298 -246 -247 -336 343 -490)*
(-341 -228 -237 -336 -259 -490 -232 534)*
(-258 262 484 -336 -247 343 -246 -490)*
(448 -79 -252 -336 -259 -356 -78)*
(491 -178 -252 -336 -259 -356 -177)*
(-383 -524 432 -78 -70 -258 262)*
(485 432 -426 -391 -398 -452 -497)*
(360 -211 -259 -336 -212 -356)*
(68 -121 -122 -250 -385 -370)*
(423 -366 -252 -356 -118 -132)*
(-216 167 -250 -358 -257 -384)*
(-420 -440 -403 475 -404 -421)*
(372 -319 -403 -474 -404 -475)*
(319 -372 -403 -474 -404)*
(337 -449 -252 -356 -78 -79)*
(364 -449 -259 -336 -78 -79)*
(342 -492 -252 -177 -356 -178)*
(485 -426 432 -497 -398 -185)*
(357 -232 -331 -336 -233)*
(68 -121 -250 -370 -386)*
(227 534 -257 -237 -384)*
(-429 -257 -384 -69 -90)*
(248 -428 -257 -250 -384)*
(227 -250 -257 -384 -428)*
(-250 167 -257 -384 -428)*
(-431 -257 -384 -168 -188)*
(138 -250 -257 -384 -428)*
(324 -315 -403 475 -404)*
(439 -383 -391 -483 -238)*
(439 -383 -340 -238 -391)*
(319 -372 -403 475 -404)*
(363 -143 -259 -336 -144)*
(329 490 -185)*
(386 -385 -384 -122)*
(-404 421 321 -403)*
(-404 -339 -399 -403)*
(-404 -317 -403 216)*
(405 227 -384 -257)*
(-490 -329 -426 -427)*
(-430 -138 -384 -257)*
(370 -371 -403 -404)*
(-250 68 -386 -428)*
(453 -226 -132 -133)*
(485 -334 -395 -151)*
(121 -319 -403 -404)*
(381 -383 -452 -391)*
(433 391 484 -87)*
(298 -538 -297 484)*
(-365 -474 -86)*
(-404 -315 -403 320)*
(-398 -484 427 -185)*
(427 -484 452 -185)*
(-542 -490 -185)*
(329 427 -490)*
(-182 -522 172 -548)*
(-516 -497 486 -398)*
(-404 -315 -556 -403)*
(151 -537 485 -395)*
(-334 -537 485 -395)*
(-254 -249 118)*
(147 -256 -261)*
(299 -149 -185)*
(-250 301 -86)*
(302 -250 -184)*
(303 -257 -87)*
(304 -257 -185)*
(305 -118 -86)*
(306 -185 -147)*
(307 -87 -147)*
(308 -118 -184)*
(309 -86 -252)*
(310 -184 -252)*
(311 -87 -259)*
(312 -185 -259)*
(315 -184 314)*
(-421 -86 314)*
(-216 317 -404)*
(318 -149 -87)*
(319 -121 -404)*
(-320 315 -404)*
(-421 -321 -404)*
(-323 -474 321)*
(-474 -324 320)*
(490 327 -433)*
(490 329 -427)*
(327 490 -87)*
(330 -474 -237)*
(331 -238 -259)*
(333 -404 -332)*
(335 -334 -490)*
(336 -337 -433)*
(339 534 -404)*
(341 -490 -340)*
(336 -342 -427)*
(340 -343 344)*
(-404 -339 -534)*
(-474 345 -534)*
(-343 346 -433)*
(334 -343 347)*
(-343 348 -427)*
(433 327 -87)*
(349 -118 -534)*
(351 -118 332)*
(332 -333 -404)*
(330 -355 -534)*
(356 -357 -534)*
(-404 359 -358)*
(356 -358 360)*
(356 -361 320)*
(-355 362 332)*
(332 356 -363)*
(321 356 -364)*
(365 355 321)*
(358 366 -367)*
(366 -368 320)*
(366 -369 332)*
(-370 371 -404)*
(-370 372 355)*
(366 -373 -534)*
(366 321 -374)*
(375 -474 332)*
(-327 -490 -433)*
(-381 -484 -427)*
(334 -382 -484)*
(-383 -484 -433)*
(340 -387 -484)*
(-250 388 332)*
(-359 358 -404)*
(383 391 -433)*
(-393 394 -392)*
(395 382 334)*
(381 398 -427)*
(-392 400 -399)*
(402 -401 -392)*
(405 -250 -534)*
(406 -133 -132)*
(357 -252 -356)*
(237 -330 -474)*
(237 405 -428)*
(428 429 321)*
(428 430 332)*
(428 431 320)*
(324 438 -474)*
(439 387 340)*
(441 323 -474)*
(-375 443 -474)*
(321 476 475)*
(-442 475 332)*
(372 475 -121)*
(481 382 -484)*
(483 387 -484)*
(426 485 486)*
(485 -486 487)*
(-486 -452 -485)*
(324 475 -473)*
(-329 426 489)*
(329 427 489)*
(426 -478 489)*
(-365 475 -86)*
(441 475 -86)*
(432 485 516)*
(485 -516 517)*
(-489 518 -490)*
(361 -252 -356)*
(362 475 -150)*
(-478 -329 -427)*
(-480 334 -382)*
(-481 334 -382)*
(340 341 490)*
(334 335 490)*
(340 387 484)*
(-500 387 -340)*
(387 -340 -238)*
(387 484 -238)*
(500 -387 -238)*
(483 -340 -238)*
(334 -488 -335)*
(150 -362 475)*
(150 -375 475)*
(-443 150 475)*
(-483 340 -387)*
(-518 -341 340)*
(-517 -383 432)*
(-345 534 475)*
(438 475 -184)*
(323 475 -321)*
(-476 475 -321)*
(391 383 484)*
(-516 391 484)*
(473 475 -320)*
(-362 443 475)*
(87 -383 538)*
(87 -327 539)*
(382 334 484)*
(-507 103 -297)*
(542 426 539)*
(441 -474 -475)*
(391 -433 -484)*
(-320 324 -473)*
(487 427 -185)*
(-488 334 489)*
(-542 489 -185)*
(548 -183 -172)*
(521 -183 -182)*
(432 485 517)*
(172 183 -548)*
(485 -500 -439)*
(-516 -497 432)*
(-387 485 -439)*
(-382 485 -395)*
(395 334 -484)*
(382 -537 -334)*
(383 517 -432)*
(-159 -130 -118 -451 -162 -147 -133 -447 -161 -225 -226 -246 -247 -250 -252 -257 -258 -259 262 -270 274 -336 343 -356 -366 -384 -403 -404 -428 -419 -132 -474 484 -275 -445 -449)+*
(475 -366 -250 -187 -384 -257 -172 -336 -259 -356 -252 -428 -118 343 -147 -404 -403 186 -176 -188 -159 -246 -225 -130 -132 -177 -133 -161 -162 -184 -185 -189 -190 -191 -200 -204 -226 -247 -258 262 -169 -297 484 -193 -192 -203 490)+*
(-327 -441 -252 -259 -70 -541 -336 -356 321 -449 -78)+*
(-541 -327 448 -252 -259 -86 -336 -356 -441 -78 -70)+*
(540 -327 -70 -252 -259 -449 -336 -356 -441 -86 -78)+*
(364 -541 -327 -259 -86 -336 -78 -441 -449 -70)+*
(337 -541 -327 -252 -86 -78 -356 -441 -449 -70)+*
(-327 316 -252 -259 -70 -541 -336 -356 -403 -404 -441 -449 -78)+*
(-327 420 -252 -259 -78 -336 -356 -403 -404 -541 -441 -449 -70)+*
(-327 -421 -252 -259 -78 -336 -356 -403 -404 -541 -441 -449 -70)+*
(-327 323 -252 -259 -70 -541 -336 -356 -449 -78)+*
(-476 -327 -252 -259 -78 -336 -356 -541 -449 -70)+*
(517 433 -87)+*
(497 -538 433 -87)+*
(-85 84 -73 -451)+*
(-258 262 -492 -356 -252 -169 -336 -259 -177 -130 -426 343 -520 -428 -250 -384 -257 -547 -172 -544 -522 -546 -366 -118 -549 -147 -427 -403 186 -176 -190 -246 -247 -188 -404 -225 -159 -438)+*
(426 -177 -184 539 -438 -336 -259 -492 -356 -252 -169 -190)+*
(427 -159 -250 -384 -257 -428 -547 -172 -185 -522 -336 -259 -356 -252 -546 -366 -118 -549 343 -147 -404 -544 186 -176 -520 -188 -403 -246 -225 -130 -474 -189 -169 -177 -190)+*
(-130 262 343 -258 -336 -247 -246 -297 -276 484 -132 -133 -161 -162 -226 -159 -225 -404 -356 -252 -259 -428 -250 -384 -257 -366 -118 -147 -403 -474 490)+*
(-291 484 -130 -147 -159 -225 -226 -246 -247 -336 343 -356 -366 -384 -403 -404 -428 -118 -474 490)+*
(182 -521 -172 -549)+*
(397 -298 -428 -250 -384 -257 -336 -259 -356 -252 -147 343 -225)+*
(448 -541 -252 -259 -78 -336 -356 -327 365 -70)+*
(433 -497 -87 538)+*
(-558 382 538)+*
(-558 538 -481 -151)+*
(537 -558 538 -151)+*
(260 -261 343)+*
(480 -151 -558 -334 -395 -87 433 -336 -259 -147 343)+*
(253 -254 -366)+*
(271 -272 343)+*
(266 -265 -118)+*
(334 -143 -252 -259 -139 332 -443 539)+*
(334 -143 -259 -139 -252 332 539 -474)+*
(-487 -381 426)+*
(83 -73 -451 569)+*
(567 -257 -384 429 69)+*
(272 -271 -147)+*
(533 -280 -252 -259 -279 -581 -228 -289 -290 291 313 322 -336 -356 -403 -475 -285 538 539 -573 -574 -575 -576 -577 -578 -579 -580 -582 -232 -583)+*
(533 -250 -259 -279 -573 -130 -289 -290 291 313 322 -336 -356 -403 -475 -252 538 539 -232 -228 -87 433 -285 -280 -384 -257 -147 343 -118 -366 -226 -246 -225 -238 -428 -340 -247)+*
(573 -159 -259 -336)+*
(439 538 -483 -238)+*
(-551 538 -238 -483)+*
(-345 534 -475 322)+*
(265 -266 -366)+*
(274 -280 -259 -252 -147 -279 -582 -285 -290 291 313 322 -336 343 -356 -403 -454 -465 -475 538 -573 -574 -575 -576 -577 -578 -579 -580 -581 -270)+*
(274 -280 -259 -252 -147 -279 -582 -285 -290 291 313 322 -336 343 -356 -403 -454 -465 -475 538 -573 -574 -575 -576 -577 -578 -579 -580 -270)+*
(83 -73 -451 -568)+*
(-586 -587 -259 -279 -252 -582 291 313 322 -336 343 -356 -280 -454 -465 -475 538 -403 -574 -575 -576 -579 -580 -581 -285 -573 -147)+*
(-586 -554 -279 -252 -582 291 313 322 -336 343 -356 -280 -454 -465 -475 538 -403 -574 -575 -576 -579 -580 -285 -573 -147 -259)+*
(586 -250 -246 -384 -257 -428 -356 -252 -225 -259 -336)+*
(566 -250 -257 -384 -428 -69)+*
(-258 262 589)+*
(588 -273 -274)+*
(-332 -375 322 -475)+*
(433 -70 -87 588 -78 571)+*
(588 -285 -252 -259 -280 -290 291 313 322 -336 343 -356 -454 -465 -475 -279 538 -574 -575 -576 -577 -578 -579 -580 -581 -582 -573)+*
(275 -589 -259 291 313 322 -336 343 -356 -454 -465 -475 538 -573 -574 -575 -576 -577 -578 -579 -580 -582 -252 -586 -403 -147 276)+*
(290 -337 -130 -118 -91 -90 -95 -102 -103 -106 88 -70 -77 -364 -147 -159 -225 -226 -246 -247 -336 -78 343 -356 -92 -366 -384 -403 -404 -428 -87 -447 -474 -76 -535 -86 -93 -73 -84 -89 -451 484)+*
(-285 -589 -252 -259 -279 -290 291 313 322 -336 343 -356 -454 -465 -475 538 -403 -574 -575 -576 -577 -578 -579 -580 -582 -280 -586 -573 -147)+*
(285 -337 -130 -118 -91 -90 -95 -102 -103 -106 88 -70 -77 -364 -147 -159 -225 -226 -246 -247 -336 -78 343 -356 -92 -366 -384 -403 -404 -428 -87 -447 -474 -76 -535 -86 -93 -73 -84 -89 -451 484)+*
(279 -78 -130 -118 -91 -90 -95 -102 -103 -106 88 -70 -77 -364 -147 -159 -225 -226 -246 -247 -336 -337 343 -356 -92 -366 -384 -403 -404 -428 -87 -447 -474 -76 -535 -86 -93 -73 -84 -89 -451 484)+*
(-258 262 -118 -147 -159 -225 -226 -246 -247 -250 -252 -257 -259 -336 343 -356 -366 -384 -403 -428 -130 291 313 322 -475 538 276)+*
(-229 551 -366 -118 343 -147 -539 490 -404 -403 -228 -232 -356 -252 239 -384 -257 -336 -259 -475 322 -428 -250 -247 -130 -226 -159 -246 -225)+*
(-228 339 -252 -259 322 -336 -232 -356 -403 -404 -475 490 -539)+*
(-228 -345 -252 -259 -336 -232 -356 490 -539)+*
(-232 -228 -252 -259 322 -336 338 -356 -475 490 -539)+*
(533 -228 -252 -259 322 -336 -356 -475 -232 490 -539)+*
(-232 -228 -252 -259 322 -336 -356 -475 -534 490 -539)+*
(476 420 -404 -403 -475 322)+*
(538 -257 -259 -336 343 -384 -600 -465 -590 -454 -539 -591 -592 -593 -599 -595 -596 -597 -598 -594 -601 -147)+*
(-590 -454 -336 343 -384 -163 -465 538 -259 -257 -147 -134 -539 -133 -166 -137 -162 -132 -136 -135 -161 -165)+*
(590 -135 -164)+*
(539 602 340)+*
(340 603 538)+*
(-602 -228 -252 -259 322 -336 -356 533 -475 -232)+*
(-476 -420 -404 -403 -475 322)+*
(551 340 538)+*
(551 340 538)+*
(539 -573 -252 -259 -149 -280 -285 -289 291 322 -336 -403 -465 538 -147 589 -574 -575 -576 -579 -580 -581 -582 -586 -279)+*
(539 -573 -252 -259 -149 -280 -285 -289 291 322 -336 -403 -465 538 -147 589 -574 -575 -576 -579 -580 -581 -582 -586 -279)+*
(433 -569 -451 -73 -78 -87 -428 -250 -77 -445 -567 -76 88 -356 -252 -384 -257 -449 -336 -259 -570 -419 -366 -118 343 -147 -561 -563 -70 -541 -403 -536 -441 -404)+*
(-487 -381 328)+*
(-370 125 -428 -250 -384 -257 -336 -259 -321 -356 -252 -147 343 -121 -162)+*
(-110 115 322 370 -475 490 -539)+*
(222 -216 -428 -250 -384 -257 -336 -259 -86 -321 -356 -252 -147 343 -358 -164)+*
(126 -385 -122 -336 -259 -147 343 -356 -252 -134)+*
(-134 607 326 -98 -356 -252 -432)+*
(-134 163 326 -336 -259 -147 343 -356 -252 -432)+*
(363 -139 -143 -259 322 -336 -150 -475 490 -539)+*
(362 -475 322 -150)+*
(212 -207 322 358 -475 490 -539)+*
(626 611 370)+*
(607 432 627)+*
(607 628 426)+*
(358 629 605)+*
(340 630 607)+*
(-627 -321 -86 -98)+*
(-626 -128 -336 -259 -165)+*
(-134 630 -356 -252 634)+*
(606 334 635)+*
(426 636 606)+*
(358 637 604)+*
(-217 638 606)+*
(606 639 340)+*
(640 432 606)+*
(641 604 370)+*
(385 642 606)+*
(643 609 370)+*
(163 -321 432)+*
(-640 -134 -252 -356 -98)+*
(-162 -394 -336 -259 -147 343 -404 133 -403 -410)+*
(591 -352 -356 -252 -336 -259 -184 -165 -320 -147 343)+*
(-646 -226 -97 -336 -259 -162 -356 -252 515)+*
(646 -162 -252 -226 -336 -259 -356 -97)+*
(648 605 370)+*
(379 649 611)+*
(321 650 611)+*
(538 432 651)+*
(321 652 605)+*
(-652 -162 -259 -336 -97)+*
(-650 -165 -259 -336 -100)+*
(340 -583 -490)+*
(340 -518 489)+*
(334 -335 489)+*
(-637 -220 -336 -259 -162)+*
(-649 379 610)+*
(358 653 610)+*
(321 654 604)+*
(610 655 321)+*
(-626 610 370)+*
(-649 379 610)+*
(-626 610 370)+*
(-654 -162 -259 -336 -97)+*
(654 652 321 593)+*
(323 322 -475 -321)+*
(-341 340 489)+*
(340 -602 489)+*
(-329 489 328)+*
(-557 -298 390 -336 -259 -147 343)+*
(661 626 -336 -259 -165)+*
(358 672 608)+*
(659 376 673)+*
(334 674 657)+*
(657 432 675)+*
(659 432 676)+*
(426 659 677)+*
(678 657 426)+*
(385 679 659)+*
(-675 -321 -86 -99)+*
(-635 -624 -332 -150)+*
(681 -332 -150 674)+*
(683 -137 -356 -252 679)+*
(340 684 658)+*
(340 685 656)+*
(-673 376 658)+*
(656 432 686)+*
(658 432 687)+*
(385 688 656)+*
(385 689 658)+*
(334 690 656)+*
(334 691 658)+*
(692 656 426)+*
(693 426 658)+*
(694 656 -217)+*
(695 658 -217)+*
(-673 376 658)+*
(-686 -321 -86 -99)+*
(680 -150 -656 -657 -332)+*
(-643 608 370)+*
(-643 608 370)+*
(-699 590 -657 -656 -336 -259 -86 -321 -147 343)+*
(452 426 538)+*
(452 426 538)+*
(432 -246 -475 322 -540 489 -364 -259 -448 -321 -147 -337 391 -247 -336 -572)+*
(-398 426 -452 538)+*
(-398 426 538)+*
(701 702 608)+*
(-702 -697 -656 -657)+*
(700 703 608)+*
(704 608 370)+*
(-703 -696 -656 -657)+*
(-649 -352 -86 -321)+*
(610 -244 338 -533 -336 -259 -165)+*
(610 -645 -259 -336 343 -644 -257 -465 -384 -709 -606 -607 -708 489 -656 -657 -658 -659 673 378 -707 -147)+*
(489 -246 -336 343 -644 -707 -384 673 -606 -607 -259 -645 -656 -657 -658 -659 610 -257 -147 -161 378 -247 -132)+*
(261 -260 -147)+*
(254 -253 -118)+*
(378 610 649)+*
(378 610 649)+*
(150 -362 322 -475)+*
(-241 604 -534 -533 -336 -259 -162)+*
(232 228 -252 -259 322 -336 340 -356 -475 489 -533)+*
(150 712 610)+*
(713 610 370)+*
(150 714 608)+*
(-713 -660 -336 -259 -165)+*
(-714 680 -656 -657)+*
(-714 -681 -656 -657)+*
(241 -424 -428 -250 -384 -257 -336 -259 -356 -252 -147 343 -162)+*
(-698 599 -356 -252 -336 -259 -515 -86 -226 -162 -147 343 -321)+*
(439 -233 322 228 -475 489 -533 538)+*
(439 -233 322 228 -475 489 -533 538)+*
(-712 -157 -336 -259 -165)+*
(-649 645 -707)+*
(-257 -709 610 -259 -336 343 -707 -384 -465 -658 -606 -708 489 -656 -657 -607 -659 673 378 -644 -147)+*
(-649 -378 -86 -321 610)+*
(232 233 -252 -259 -336 -356)+*
(395 538 -481 -488 489)+*
(150 715 604)+*
(151 -382 538)+*
(151 -382 538)+*
(488 -334 -151 489 -336 -259 -147 343)+*
(-698 489 538 343 -147 -161 -384 -657 -656 -257 -607 -606 -336 -259 673 -247 -246 -356 -252 -165 -631 -321 -86 -515 -716 -226 -132 -352)+*
(537 -382 -151)+*
(489 538 -259 -336 343 -384 -465 -656 -720 -257 -658 -606 -607 -631 -632 -719 -659 673 -708 -709 -721 -657 -147)+*
(489 -352 -336 343 -384 -465 -658 -606 -656 -607 -259 -632 -86 538 -657 -659 673 -708 -709 -257 -147 -356 -252 -165 -631 -321 -719 -161)+*
(-698 -226 -336 -259 -515 -356 -252 -147 343 -321 -86 719)+*
(705 723 604)+*
(705 723 604)+*
(705 -632 -631 -724 604)+*
(658 -321 -86 326 -101)+*
(-704 -620 -657 -656)+*
(621 -704 -657 -656)+*
(571 -246 322 -475 489 326 -259 -364 -448 -147 -540 -337 -390 -247 -336 -321)+*
(-670 608 -533 338 -656 -657)+*
(671 608 -533 338 -657 -656)+*
(-672 -614 -694)+*
(-672 615 -694)+*
(379 610 -727 -707)+*
(-705 -632 -257 -607 -606 -657 -656 -659 -658 343 -147 -336 -259 -384 -165 726 489 -631 -247 -246 -161 -132 -706)+*
(489 -632 -257 -607 -606 -657 -656 -659 -658 343 -147 -336 -259 -384 -631 721 -247 -246 -161 -132 -698 -165)+*
(481 -334 -151)+*
(706 -723 604)+*
(-723 706 604)+*
(537 -334 -151)+*
(-715 150 605)+*
(706 -722 605)+*
(-715 150 605)+*
(-722 706 593 -723)+*
(725 538 -658 -336 -259 343 -147 -606 -384 -257 -86 -656 489 -607 -631 -723 -659 -657 -247 -246 -132 -161 -356 -252 -321 -716)+*
(705 -723 605)+*
(-719 -632 593 -724 -631 -257 -607 -606 -657 -656 673 -658 343 -147 -336 -259 489 -247 -246 -161 -132 -659 -384 538 -165)+*
(-241 605 -533 -162 -336 -259 338)+*
(-629 -220 -336 -259 -162)+*
(334 730 538)+*
(705 -632 605 -724 -631)+*
(705 -632 -631 593 -724)+*
(-631 722 -321 -659 -86 -336 -259 343 -147 -570 -384 -257 -657 -656 489 -607 -606 -569 -585 -73 -536 -451 -445 -366 -118 -447 -404 -403 -419 -428 -250 -567 88 -356 -252 -449 -658 -726 -247 -246 -132 -161 -226 -565 -159 -716 -563 -390)+*
(-730 -481 -151)+*
(-242 -607 338 -533 -606 134 -336 -259 -147 343)+*
(-669 -668 338 -533 -166 -336 -259 -147 343 137)+*
(150 733 605)+*
(-733 -710 -336 -259 -162)+*
(376 669 -533 -735 338 -734)+*
(669 376 -734 -166 -533 -336 -259 338)+*
(143 139 150 -151 -252 -259 322 -336 -356 -475 489)+*
(601 -736 -607 -606 -336 -259 -86 -321 -147 343)+*
(322 618 -475 -666 -533 -606 -607 -735 630 -638 -658 -659 338 489 669 -695 -667)+*
(322 618 -475 -666 -533 -606 -607 -735 630 -638 -658 -659 338 489 669 -695 -667)+*
(732 738 -606 338 630 -533 634 -607)+*
(732 738 -606 338 630 -533 634 -607)+*
(706 -632 -631 605 -724)+*
(706 -632 -631 605 -724)+*
(644 725 649)+*
(725 649 -645)+*
(721 -352 -336 -259 -356 -252 -147 343 -165 -86 -321)+*
(-632 -631 706 -724 604)+*
(-632 -631 -724 593 -336 -259 -515 -356 -252 -147 343 -321 -86 -226 -257 -607 -606 -657 -656 -659 -658 489 -247 -246 -161 -132 673 -384 538 -165)+*
(600 -137 -659 -658 -336 -259 -147 343)+*
(644 379 610 -707)+*
(644 379 610 -707)+*
(150 665 -533 -658 -659 338 -735 669)+*
(150 665 -533 -658 -659 338 -735 669)+*
(150 -664 -533 -658 -659 338 -735 669 -665)+*
(150 -664 -533 -658 -659 338 -735 669)+*
(322 739 -475 -658 -533 338 -659 679 489 -735 669 -683 -682)+*
(-739 370 322 -475 489)+*
(558 334 538)+*
(558 334 538)+*
(322 -475 489 -533 -534 630 -607 -658 -606 679 -735 -612 634 -659 682 -613)+*
(322 -475 -533 679 -534 630 -607 -606 634 489 -658 -659 682 -735 -126)+*
(682 669 370 338 -735 689)+*
(682 669 370 338 -735 689)+*
(-613 370 634 338 -740 642)+*
(-163 740 -259 -336)+*
(358 618 634 338 -740 -741)+*
(741 -163 -259 -336)+*
(220 -250 -428 -515 -384 -257 -336 -259 -317 -356 -252 -147 343 -404 -403 -359 -321 -86 -226 -162)+*
(-637 216 604)+*
(742 610 216)+*
(-637 216 604)+*
(220 629 637 -336 -259 -147 343 -162)+*
(-212 207 216 -217 322 -475 489)+*
(743 608 216)+*
(-743 -615 -657 -656)+*
(667 669 -534 -658 -659 216 -533 -695)+*
(667 669 -534 -658 -659 216 -533 -695)+*
(-216 -358 -428 -250 -384 -257 -336 -259 -86 -321 -356 -252 -147 343 221 -163)+*
(744 -363 322 -336 -356 -252 -607 489 -533 -534 -606 634 -259 -475 630 -624 -625)+*
(150 -363 -336 -259 -744 -475 489 322)+*
(737 -732 -606 630 634 -607 -533 -534 -731)+*
(737 -732 -606 630 634 -607 -533 -534 -731)+*
(738 -732 -606 630 634 -607 -533 -534 -731)+*
(738 -732 -606 630 634 -607 -533 -534 -731)+*
(538 -454 -259 -336 343 -384 -746 -465 -696 -257 673 489 -745 -724 -726 -731 -747 -709 -147)+*
(-454 538 -336 343 -384 -724 -465 489 -745 673 -86 -726 -731 -257 -147 -259 -657 -656 -356 -252 -132 -161 -716 -321 -590)+*
(745 -601 -607 -606)+*
(-454 538 -259 -336 343 -384 -724 -465 489 -257 673 -709 -726 -746 -748 -745 -731 -147)+*
(-673 -658 -659)+*
(-673 -658 -659)+*
(659 -321 -101 -86 326)+*
(489 -246 -384 -606 -656 -607 -724 -593 -657 -659 -658 -336 -259 538 343 -147 -247 -257 -161 -132 -726)+*
(216 637 605)+*
(216 637 605)+*
(-454 538 -259 -336 343 -384 -696 -465 -747 -257 489 -751 -709 -724 -726 -734 -746 -662 -147)+*
(-454 538 -658 -259 -336 343 -384 -696 -465 -747 -257 489 -751 -709 -724 -726 -659 -746 -734 -147)+*
(600 -354 -336 -259 -86 -658 -659 -321 -147 343)+*
(377 663 -534 -658 -659 -735 -533 669)+*
(377 663 -534 -658 -659 -735 -533 669)+*
(-649 -644 -725)+*
(165 -321 326 -432 650 -336 -259 -147 343)+*
(-650 -321 -86)+*
(668 666 -534 216 -659 -658 -533 -695)+*
(668 666 -534 216 -659 -658 -533 -695)+*
(668 -666 -534 -533 -659 -658 -667 -695 216)+*
(668 -667 -658 216 -533 -695 -659 -534)+*
(572 322 -475 489 -541 -336 -259 -356 -252 -449 -86 343 -247 -246 -389)+*
(664 668 338 -735 691 150)+*
(664 668 338 -735 691 150)+*
(752 -363 -259 322 -658 -336 -356 -753 -475 489 -533 -534 -334 -659 -664 -151 -665 -252 668)+*
(150 -752 -151 -475 489 322)+*
(744 -363 322 -336 -356 -252 -475 489 -533 -753 -658 -659 668 -259 -534 -665 -664)+*
(744 -363 322 -336 -356 -252 -475 489 -533 -753 -658 -659 668 -259 -534 -665 -664)+*
(-150 625 -606 -607 -332)+*
(-150 624 -606 -607 -332)+*
(334 -752 -332 -475 489 322)+*
(683 668 370 679 -735 338)+*
(683 668 370 679 -735 338)+*
(-682 739 -475 679 -533 -658 489 668 -659 322 -683 338)+*
(-682 739 -475 679 -533 -658 489 668 -659 322 -683 338)+*
(334 538 -259 702 -336 343 -696 -454 -465 -384 489 -607 -750 673 -754 -257 -726 -606 -709 -147)+*
(754 652 -259 326 -336 -97 -432 -86 -321)+*
(334 -454 -259 -147 -336 343 -384 -656 -465 -754 538 -606 489 -257 -657 673 -709 -607 -750 -726)+*
(334 -454 -259 -147 -336 343 -384 -656 -465 -754 538 -606 489 -257 -657 673 -709 -607 -750 -726)+*
(746 -716 -336 -259 -356 -252 -147 343 -132 -150 -332 -161)+*
(-640 -606 -433 -432)+*
(377 668 -735 338 -734)+*
(377 668 -735 338 -734)+*
(-454 538 -259 -336 343 -384 -751 -465 -748 -257 -147 -709 -662 -726 489 -746 -724 -734)+*
(-454 538 -336 343 -384 -726 -465 -748 -257 -147 -658 -259 -724 489 -746 -751 -600 -659 -709)+*
(663 668 -533 -658 376 338 -659)+*
(663 668 -533 -658 376 338 -659)+*
(-454 538 -259 -336 343 -384 -726 -465 -724 -751 673 -709 -147 -257 -746 489 -748)+*
(-454 538 -259 -336 343 -384 -726 -465 -724 -751 673 -709 -147 -257 -746 489 -748)+*
(756 -321 -86 -433 -97 -432)+*
(657 -321 -86 -433 -99 -432)+*
(-454 -257 -432 -726 -336 -259 -147 343 -384 -751 -465 652 538 673 -709 -321 -746 489 -433 137)+*
(245 -250 -428 -137 -384 -257 -336 -259 -166 -533 -356 -252 -147 343 338)+*
(755 652 -432 -97 326)+*
(711 -150 -332 -756 -755)+*
(710 -150 -332 -756 -755)+*
(606 -321 -98 326 -86 -432)+*
(489 -454 137 -336 -259 -147 343 -432 -384 -465 652 538 673 -709 -746 -257 -433 -321)+*
(711 715 -334 -151)+*
(710 -332 -150 -151 -334)+*
(754 -334 -336 -259 -151 -147 343)+*
(743 615 -694)+*
(151 -488 -753)+*
(602 238 489)+*
(760 -154 -332 -150)+*
(754 -154 -336 -259 -150 715 -332 -147 343)+*
(760 710 -150 -332)+*
(760 -711 -150 -332)+*
(763 432 756)+*
(764 432 758)+*
(765 706 756)+*
(385 766 756)+*
(385 767 758)+*
(151 760 756)+*
(151 768 758)+*
(756 426 769)+*
(758 426 770)+*
(771 340 756)+*
(151 760 756)+*
(-763 -321 -86 -97)+*
(744 -363 489 -356 -150 322 -252 -475 -332 -259 -336)+*
(759 -710 715)+*
(-733 -710 759)+*
(759 -593 -710 -356 -252)+*
(-134 221 -428 -250 -384 -257 -336 -259 -356 -252 -741 -147 343)+*
(-765 631 -722)+*
(-717 489 -384 -257 -705 -657 -656 -607 -606 725 -659 -658 -336 -259 538 343 -147 -718 -706 -247 -246 -161 -132)+*
(-603 -483 -238)+*
(-660 -713 767)+*
(-764 -321 -86 -100)+*
(-771 -729 605 -533 338)+*
(-766 -617 -648)+*
(453 -226 -336 -259 -86 -321 -356 -252 -147 343 -184 556)+*
(-402 135 338 -403 -657 -336 -259 -410 -404 -656 -147 343)+*
(681 714 674)+*
(-617 -648 -122 -385)+*
(453 -772 -356 -252 -226 -195 -456 -336 -259 -246)+*
(453 -226 -336 -259 -246 -356 -252 -456 -195)+*
(725 379 757)+*
(755 432 774)+*
(757 432 775)+*
(122 766 755)+*
(122 767 757)+*
(759 151 755)+*
(151 -768 757)+*
(605 555 776)+*
(755 426 777)+*
(608 555 778)+*
(610 555 779)+*
(340 780 757)+*
(781 755 -217)+*
(725 379 757)+*
(759 151 755)+*
(-774 652 -97)+*
(-454 -226 -336 343 -384 -433 -465 -321 673 538 489 -147 -746 -257 -259 -709 -356 -252 137)+*
(665 -150 -658 -659 -332)+*
(664 -150 -658 -659 -332)+*
(759 -710 -150 -332)+*
(711 759 -150 -332)+*
(-632 -765 723)+*
(697 702 -657 -656)+*
(781 -762 637)+*
(-778 -164 -259 -336 -197)+*
(773 -226 -184 -356 -252 556)+*
(-401 -250 -428 245 -384 -257 -336 -259 -659 -658 -356 -252 -147 343 -410)+*
(756 -773 328 -356 -252 -195 -226)+*
(-771 -604 -533 -729 338)+*
(607 556 -184 328 -196)+*
(722 -631 -755 -756)+*
(-765 -632 -604 -605)+*
(723 -632 -756 -755)+*
(489 538 -257 -197 -426 -657 -659 -658 -336 -259 -593 343 -147 -247 -246 -161 -132 328 -384 -724 -184 -198 -196 556)+*
(-257 -593 556 -426 328 -724 489 -184 -196 -659 -658 -336 -259 538 343 -147 -247 -246 -161 -132 -384 -198 -197)+*
(670 -608 -533 -656 338 -657)+*
(-643 620 -656 -657)+*
(-643 -621 -656 -657)+*
(-596 -775 -100 -356 -252)+*
(-626 660 -767)+*
(-626 -661 -767)+*
(701 -702 609)+*
(-743 609 216)+*
(609 784 321)+*
(-742 611 216)+*
(334 768 757)+*
(757 785 426)+*
(701 -702 609)+*
(-784 -164 -259 -336 -99)+*
(-785 556 -184 -198)+*
(671 -609 -533 -656 -657 338)+*
(426 -748 -336 343 -384 -454 -465 489 538 673 -709 -147 -259 636 -257 -756 -607 785 777 770 -746)+*
(489 556 -259 -336 -97 -257 -197 321 -724 -659 -658 538 343 -147 -247 -246 -161 -132 328 -384 -426 -184 -198 -196 -657)+*
(-257 556 -356 -252 -226 -195 -259 -336 -97 -197 489 321 328 -659 -658 538 343 -147 -247 -246 -161 -132 -384 -426 -184 -198 -196 -657)+*
(489 556 343 -384 -197 538 -147 -259 -257 -356 -252 -226 -195 -97 321 328 -659 -658 -247 -246 -161 -132 -336 -184 -198 -196 -657)+*
(489 556 328 -197 343 -384 -196 -97 -147 -259 -257 -356 -252 -226 -195 -184 538 -659 -658 -247 -246 -161 -132 -336 -198 321)+*
(-487 538 328 -452)+*
(381 538 -452)+*
(-610 -764 -356 -252 -100 321)+*
(-686 -595 -99 -356 -252)+*
(-690 -680 -150 -332)+*
(694 614 672)+*
(390 -298 -397 -336 -259 328 -426 -147 343)+*
(700 786 656)+*
(609 555 787)+*
(672 609 216)+*
(672 609 216)+*
(-786 -257 -757 -384 -755 489 -607 -606 -756 -758 -659 -658 -336 -259 343 -147 538 -247 -246 -161 -132)+*
(-700 -702 -701)+*
(-700 -702 609)+*
(-700 -246 -757 -384 -132 489 -606 -607 -755 -756 -758 -659 -658 -336 -259 343 -147 538 -247 -257 -161 -701)+*
(-332 600 -336 -259 -150 -658 -354 -659 -147 343)+*
(747 702 -336 -259 703 -147 343)+*
(620 -643 688)+*
(-621 -643 688)+*
(-572 597 -259 322 -708 -336 -337 343 -356 -364 391 -788 -426 328 -448 -449 -452 -465 -475 489 -540 -541 -252 -398 -571 -658 -659 432 -147)+*
(697 702 786)+*
(-696 -703 786)+*
(489 -475 -259 322 -336 -252 343 -356 -364 -788 -449 -465 -658 -659 -448 -541 597 -337 -540 -708 789 -147)+*
(-659 137 -475 322 -336 -259 -356 -252 343 -247 -246 -658 489 -147 -384 538 -746 -404 -257 -226 -428 -250 -366 -118 -563 -403 -709)+*
(656 -678 -427 -426)+*
(-771 -604 -729 -605)+*
(322 -789 343 489 -336 -475 -246 -541 -259 -356 -252 -449 -247 321)+*
(-690 714 -680)+*
(-606 134 -534 -533 -607 -403 -336 -259 -404 -394 -147 343)+*
(737 -366 -252 322 -356 -723 -118 -404 -428 -465 -475 -403 -792 -604 633 -791 -607 609 -606 -658 -659 -533 -663 -662 -790 -534 -749 -750 -605 -250 701)+*
(737 -366 322 -356 -723 -403 -226 -428 -475 -533 -404 633 -605 -606 -607 609 701 -658 -659 -662 -663 -534 -604 -252 -749 -750 -250 -118 -225 -247 -259 -336 -790)+*
(790 -596 -707)+*
(-628 -607 -426 -427)+*
(701 703 609)+*
(701 703 609)+*
(-636 -606 -426 -427)+*
(217 793 538)+*
(-225 -130 -118 343 -147 -366 216 -404 -403 -475 -384 -257 -356 -252 -428 -250 -336 -259 -793 -226 -247 -246 -159 -208 218)+*
(619 216 -533 -638 -607 634 -606 338)+*
(619 216 -533 -638 -607 634 -606 338)+*
(321 -606 -533 -794 634 -607 338)+*
(-134 -607 -336 -259 -606 601 -147 343)+*
(432 -670 -534 -795 -607 -606 -533 609 633 -794 -671)+*
(783 -611 -534 -533 -758 -757)+*
(633 370 -534 -796 -533 -740 613)+*
(796 -163 -259 -336)+*
(-613 -612 -533 338 -796 633 -740 370)+*
(-613 -612 -533 338 -796 633 -740 370)+*
(340 671 -426 -427 555 -797 696 -533 338 701)+*
(-736 -150 -336 -259 -607 601 -147 343 -332 -606)+*
(-602 489 -238)+*
(633 -798 -740 321 -794 338)+*
(798 -163 -259 -336)+*
(-756 -755 -259 -336 -97 321 723)+*
(-769 755 -427 -426)+*
(605 728 -533 -534 -340 -238)+*
(605 -729 -533 -534 -340 -238)+*
(-706 723 -705)+*
(-706 723 -705)+*
(-637 -761 -781)+*
(-774 -514 -336 -259 -247)+*
(715 605 332)+*
(760 334 755)+*
(714 609 332)+*
(705 765 755)+*
(715 605 332)+*
(710 760 -715)+*
(-711 760 -715)+*
(-752 151 489 332 -475 322)+*
(-674 -714 680)+*
(-714 680 690)+*
(-690 151 656)+*
(-690 151 656)+*
(-714 -681 690)+*
(151 674 656)+*
(151 674 656)+*
(-257 -725 -259 313 322 -801 -336 343 -384 -802 -426 -454 -465 -475 489 538 -403 605 609 555 -645 328 -692 -709 -644 -662 -726 -734 -731 -746 -791 -797 -799 -800 -803 -745 -147)+*
(-252 -725 313 -799 322 -336 343 -384 -366 -426 -454 -465 -475 489 538 -403 -259 609 555 -645 328 -692 -709 -644 -662 -726 -734 -731 -746 -791 -797 -257 -147 -428 -250 -195 -118 605 -356 -745)+*
(799 -225 -259 -336 -247)+*
(-692 -656 -426 328)+*
(-692 657 -426 328)+*
(644 649 -726)+*
(680 -674 -332 -150)+*
(-674 -681 -332 -150)+*
(711 -332 -150 -760)+*
(710 -332 -150 -759)+*
(-733 -710 -760)+*
(-715 -711 -759)+*
(790 -707 -259 -336 -100 -610 321)+*
(757 -596 328 -252 -426 -356 -198)+*
(-701 -700 538 -246 -384 -257 489 -765 -746 -726 -607 -606 -336 -259 343 -147 -658 -709 -247 -659)+*
(-517 538 326 -497)+*
(383 538 -497)+*
(151 -752 -259 -363 -336 -744)+*
(-770 -758 -426 328)+*
(591 -744 -336 -259 -150 -721 -147 343 -356 -252 -363 489 -442 -352)+*
(611 782 -533 -534 -238 -340)+*
(611 -783 -533 -534 -238 -340)+*
(217 804 757)+*
(379 -726 757)+*
(653 611 216)+*
(151 -760 755)+*
(151 805 757)+*
(611 555 806)+*
(379 -726 757)+*
(151 -760 755)+*
(681 -332 -150 -151 -334)+*
(680 -332 -150 -151 -334)+*
(141 -332 -151 -150 -334)+*
(-478 489 -396)+*
(749 717 808)+*
(808 555 813)+*
(814 216 808)+*
(749 717 808)+*
(807 370 815)+*
(807 555 816)+*
(605 -818 -802 328 555 -819 -426 -817)+*
(-404 555 605 -426 328 -534 -533 -817 -403 -394)+*
(817 -389 328 -396)+*
(818 -820 328 -776 -389 -396 -195 -97)+*
(623 -535 611 -476 605 -775 321 216 -822 -817 -819 -762)+*
(822 -389 328 -396)+*
(762 614 328 -426 555 605 321 216 -823 -797 -802 -817 -819 -686)+*
(823 -389 328 -396)+*
(746 -716 -336 -259 -150 -332 -147 343)+*
(-816 -161 -426 328 -194)+*
(553 -298 -397 -336 -259 -426 730 328 -382 -147 343)+*
(807 -406 605 -533 338)+*
(749 718 807)+*
(749 718 807)+*
(-825 762 -432 555 605 -686 -824 -797 -817 -819 820 -823 -826 326 216)+*
(-222 762 605 -406 -824 555 328 216 -533 -686 -389 -396 338)+*
(824 -389 -396)+*
(313 -120 -257 -259 -686 322 326 -336 343 -384 -403 -432 -454 -465 -475 489 538 555 605 609 -644 -662 -831 -731 -734 -745 -790 -792 -797 -800 -801 -803 -817 -819 -823 -824 -827 -828 -829 -830 -147 -832)+*
(313 -226 -259 -686 322 326 -336 343 -384 -403 -432 -454 -465 -475 489 538 555 605 609 -644 -662 -827 -406 -734 -745 -790 -792 -800 -801 -803 -817 -823 -824 -147 -120 -257 -534 -533 -731 -826)+*
(827 -389 328 -396)+*
(339 338 -533 -313)+*
(420 -86 -252 404 -356)+*
(-421 -86 -252 404 -356)+*
(317 216 314)+*
(321 833 314)+*
(555 834 314)+*
(317 216 314)+*
(483 603 -340)+*
(-359 216 314)+*
(-359 216 314)+*
(-111 123 -84 -843 122 -76 88 -252 -309 -311 314 -336 -366 370 -475 -502 -505 -506 -508 -511 -525 -526 -527 -528 -529 -530 -531 -559 -792 -833 -835 -836 -837 -838 -839 -840 -841 -842 -844 -77 -845)+*
(-111 123 122 -835 -252 -309 -311 314 -336 -366 370 -475 -502 -505 -506 -525 -529 -530 -559 -833 -356 -428 -250 -259 -384 -257 -147 343 -130 -225 -390 -246 -226 -118 -159)+*
(835 -247 -259 -336)+*
(374 -445 -81 -147 343 -76 -77)+*
(-429 -303 -69 -567)+*
(-846 847 538)+*
(848 -289 314)+*
(-846 -573 -259 -428 -250 -356 -252 -279 -290 343 -147 291 -848 -366 -118 -285 -384 -257 -336 -226 -247 -586 -130)+*
(755 849 846)+*
(656 846 850)+*
(757 846 851)+*
(605 853 -852)+*
(808 854 -852)+*
(611 855 -852)+*
(609 856 -852)+*
(605 -849 -852)+*
(852 857 314)+*
(-301 -863 -84 88 -147 -257 -259 -76 -859 -309 -311 314 321 -867 -336 343 -384 -465 -475 -868 -502 -505 -506 -869 -508 -525 -526 -528 -529 -530 555 -559 605 609 -686 -305 489 -774 322 -734 -865 -792 -797 -800 -801 -803 -819 820 -828 -833 -840 -511 -745 -860 -861 -862 -790 -864 -746 -866 -858 -77 -721)+*
(-858 322 -257 -259 -301 -716 314 -601 -336 343 -384 -465 -475 -305 -508 -746 -528 555 605 -686 489 -774 -745 -734 -147 -600 -792 -801 -803 820 -827 338 -533 -406 -817 -396 -389 -356 -252 -226 -511 -790 -823 -721)+*
(858 -246 -336 -259)+*
(-813 774 -195 -534 -533 -406 -396 -389 -817 -194 -96 -827 -97)+*
(322 789 600 -336 -259 -147 343 -658 -252 -356 -364 -788 -449 -465 -475 489 -448 -541 -337 -540 -708 -659)+*
(659 -137 -426 -427 -199 -356 -252 -389 -101)+*
(664 -334 -150 -151 -332)+*
(665 -334 -150 -151 -332)+*
(-691 -664 -332 -150)+*
(-669 -668 -534 -533 137 -735 -336 -259 -147 343)+*
(735 -334 -336 -259 -151 -238 -147 343 -340)+*
(-518 238 489)+*
(684 -669 -534 -533 871)+*
(870 555 872)+*
(-387 238 538)+*
(238 755 771)+*
(656 238 873)+*
(757 238 874)+*
(659 238 684)+*
(689 659 122)+*
(377 870 875)+*
(870 876 370)+*
(-387 238 538)+*
(782 -874 611 -533 -534)+*
(-783 -874 611 -533 -534)+*
(-684 870 -534 -533 -668)+*
(-684 -668 -534 -533 -871)+*
(-689 -876 -682)+*
(-771 -246 -336 -259 -415)+*
(871 852 877)+*
(878 871 216)+*
(377 871 879)+*
(321 880 871)+*
(871 555 881)+*
(670 -873 609 -533 -534)+*
(-671 -873 609 -533 -534)+*
(-878 -666 -695)+*
(-683 876 -679)+*
(658 -689 122)+*
(658 238 -684)+*
(376 871 875)+*
(658 -689 122)+*
(658 238 -684)+*
(600 -151 -336 -259 -354 -734 -334 -147 343)+*
(871 354 875 879)+*
(-878 870 216)+*
(217 659 695)+*
(852 870 -877)+*
(846 659 882)+*
(870 376 879)+*
(870 -878 216)+*
(354 597 875 879)+*
(-606 601 -794 338 -533 321 -336 -259 -147 343 -607)+*
(-634 630 -534 -533 134 639 -633 -336 -259 -147 343)+*
(-150 624 -151 -334 -332)+*
(-150 -334 -151 625 -332)+*
(601 -736 -336 -259 -151 -745 -334 -147 343)+*
(321 -163 -794 -533 338 634)+*
(606 238 630)+*
(606 217 -638)+*
(606 883 738)+*
(606 122 -642)+*
(606 238 630)+*
(122 642 607)+*
(217 884 607)+*
(607 238 639)+*
(885 846 607)+*
(122 642 607)+*
(601 238 -794 338 -533 321 -336 -259 -147 343 -740)+*
(-122 -689 -385)+*
(-122 659 -689)+*
(-876 -682 679)+*
(-876 683 679)+*
(-626 660 -385 -122)+*
(-626 -661 -385 -122)+*
(738 -745 607 -427 -886 -426)+*
(373 -366 -533 -534)+*
(-556 -438 -324)+*
(609 670 -533 -534 -340 -238)+*
(609 -671 -533 -534 -340 -238)+*
(600 -597 -426 -101 -356 -252 -389 -427 -336 -259 -147 343 -199)+*
(663 -376 -377)+*
(662 -376 -377)+*
(600 -734 -259 -336 -147 343 -426 -101 -356 -252 -389 -427 -199)+*
(-677 -659 -427 -426)+*
(118 -349 -533 -534)+*
(-815 -122 -385 810)+*
(-428 227 -238 -340 -257 -533 -534)+*
(-653 623 804)+*
(-406 476 818 -534 -533 323 -440)+*
(-806 775 -198 -396 -389)+*
(527 -423 -336 -259 -356 -252 -147 343 -534 -533)+*
(757 -804 887)+*
(888 118 370)+*
(118 889 852)+*
(-793 -217 538)+*
(890 871 370)+*
(118 -308 555)+*
(-367 118 216)+*
(-405 250 -533 -534)+*
(-653 -622 804)+*
(-890 -683 -122 -385)+*
(138 -332 -257 -150 -384)+*
(852 891 250)+*
(892 370 250)+*
(555 -302 250)+*
(555 -302 250)+*
(372 110 -122 322 -115 489)+*
(555 893 250)+*
(783 757 -426 -427 -533 -896 607 -534 874 -238 634 -886 -895 -340 -894)+*
(783 757 -427 -533 -894 -340 -534 874 -238 -426 -886 634 607 -822 -389)+*
(-662 -673 875)+*
(-874 -340 -238)+*
(757 555 -198 607 -533 -534 -238 -389 -426 -886 634 -340 328 -252 -356)+*
(783 -611 -534 -533 874)+*
(-713 -660 -122 -385)+*
(-713 661 -122 -385)+*
(-643 620 -122 -385)+*
(-643 -621 -122 -385)+*
(610 855 852)+*
(758 -851 846)+*
(610 855 852)+*
(-618 -619 -340 -533 -534 216 -238 634 884 -638)+*
(-618 -619 -340 -533 -534 216 -238 634 884 -638)+*
(609 656 -426 -427 -533 -534 607 -238 634 -340 -797 -861 -864 -886)+*
(-686 555 -427 -533 -534 607 -238 634 -426 -886 -197 -389 -823 -99 -340 -356 -252)+*
(671 -609 -533 -534 -340 -238)+*
(656 -609 -396 -389 -197 -356 -252 -99 -823 555)+*
(608 -670 -533 -534 -340 -238)+*
(-704 -620 -122 -385)+*
(-704 621 -122 -385)+*
(-702 696 -786)+*
(608 856 852)+*
(657 846 -850)+*
(657 786 701)+*
(608 856 852)+*
(-786 -697 -702)+*
(-765 -511 -426 538 -662 -731 -644 -718 -717 343 -147 -377 -376 -336 -259 489 -384 -257 -427 -745 -790 -786 -247 -389)+*
(605 723 -705)+*
(-698 599 -336 -259 -746 -340 -238 -334 -716 -147 343 -534 -533 -151 -406)+*
(321 607 -340 -426 -427 -897 -533 -534 -238 -794 634)+*
(897 -389 -396)+*
(-693 -658 -427 -426)+*
(607 -86 -426 -427 -98 -389 -340 -533 -534 -238 634)+*
(441 -321 -86)+*
(-890 -683 -658 -659)+*
(-879 -662 -658 -659)+*
(-875 -663 -658 -659)+*
(669 -871 -340 -533 -238 338)+*
(668 -870 -340 -533 -238 338)+*
(670 -608 -340 -533 338 -238)+*
(782 -610 -340 -533 338 -238)+*
(-365 -441 -86)+*
(-542 -539 -427 -426)+*
(821 -605 -321 -86)+*
(729 -605 -340 -533 338 -238)+*
(-685 -670 -533 -609 338)+*
(-873 -608 -533 -671 338)+*
(-304 257 -426 -427)+*
(-528 257 -427 -426 -389)+*
(-138 -150 -151 257 -332 -334)+*
(604 555 898)+*
(216 604 629)+*
(899 846 257)+*
(852 604 900)+*
(216 604 629)+*
(489 -717 -336 -259 -657 -656 -321 875 -756 -755 -662 -901 -718 -511 343 -147 -247 -86 883 -356 -252 -419 -449 88 -584 -536 -445 -567 -77 -570 -569 -76 -427 -426 -389)+*
(489 -717 875 -80 -584 -86 -321 -336 -259 -657 -656 -77 -756 -755 -662 883 -901 -718 343 -147 -427 -426 -419 88 -449 -536 -356 -252 -76 -569 -570 -567 -445 -247 -389)+*
(-898 -321 -86 -396 -389 -97 -195)+*
(-257 -598 -77 -80 -584 -86 -321 -336 -259 -657 -656 -539 -384 -756 -755 -662 -607 -606 343 -147 -427 -426 -419 88 -449 -536 -356 -252 -76 -569 -570 -567 -445 875 -247 -389 -96 -827)+*
(-345 -322 338 -533)+*
(362 -443 332)+*
(-443 375 332)+*
(-355 -375 -322)+*
(-355 -375 -322)+*
(-330 355 338 -533)+*
(903 -511 343 -427 -426 -356 -252 -449 -541 -259 -86 -321 -336 -389 -247)+*
(-388 250 332)+*
(-375 355 332)+*
(904 216 355)+*
(-372 370 355)+*
(905 332 314)+*
(-388 250 332)+*
(-375 355 332)+*
(-375 355 332)+*
(-744 -538 -325 375 -356 -539 -380 -259 -252 -537 -336 -481)+*
(-362 355 332)+*
(-362 355 332)+*
(-122 -385 -115 -539 110 -228 -238 250 -325 338 -340 -68 -533 233 602)+*
(-122 -385 -115 -539 110 -228 -238 250 -325 338 -340 -68 -533 233 602)+*
(-115 370 -325 355 110 -539)+*
(-115 370 -325 355 110 -539)+*
(228 -233 -325 338 355 -533 602)+*
(852 -907 -340 -533 630 634 -906 338 -238)+*
(852 -163 -533 630 634 -340 338 -238 -336 -259 -906)+*
(647 -321 -86)+*
(646 -321 -86)+*
(663 875 -658 -659)+*
(473 -324 -184)+*
(114 115 -252 -259 -336 -356)+*
(-625 908 -259 -325 -336 338 -340 -356 -624 -533 -539 602 -606 -607 -363 -252 630 634 -238)+*
(-908 -363 -325 -259 -539 -336 362)+*
(909 -325 -252 -259 -321 -238 -336 338 -340 -342 -356 -426 -427 -460 -491 -492 -533 -539 630 634 -794 -886 -897 -86)+*
(555 -909 -356 -252 -336 -259 -492 -427 -426 -190 -325)+*
(438 -320 -184)+*
(820 -604 652)+*
(728 -604 -340 -533 338 -238)+*
(-780 -782 -611 338 -533)+*
(624 332 338 630 634 635)+*
(624 332 338 630 634 635)+*
updates 6345
neweqs  440 qhead: 440
(declare-fun = (Int Int) Bool): bc 8718 8861 8426 8385 8536 1847 1031 8474 8785 895 8287 8436 8591 8765 8947 586 373 8381 8882 8380 8534 8826 8719 
(declare-fun + (Int Int) Int): bc 4098 4155 4129 4178 585 3805 1030 2090 372 4179 8434 4156 8478 894 8472 1980 4096 4130 8517 2094 1983 
(declare-fun + (Int Int) Int): nary 1745 2112 2126 
(declare-fun * (Int Int) Int): bc 2173 3915 1962 1996 2120 1887 8823 2312 1812 1028 132 1750 321 3189 1953 4171 370 134 8772 141 1786 129 497 703 700 2341 1818 2151 3277 999 1867 2080 8526 2282 157 988 2002 198 2117 543 128 863 3299 1908 1935 858 1895 1253 1763 1749 1976 1768 8470 8761 851 2115 1939 2114 839 143 1795 4193 4149 1748 892 2048 1806 284 852 2273 169 702 706 3279 2125 4148 1954 1756 534 726 4123 1968 338 1893 8529 1247 130 1961 2169 2140 975 131 720 2042 705 994 857 2191 1995 2118 701 551 330 1982 1969 1757 3930 2141 2104 2242 1955 4055 583 1740 1791 136 2272 699 987 2122 698 
(declare-fun + (Int Int) Int): nary 3501 1754 1780 1972 1766 2959 3154 3875 3336 8783 
(declare-fun + (Int Int) Int): nary 2063 1860 3893 1956 1751 1898 2202 
(declare-fun + (Int Int) Int): nary 2975 8763 1970 3170 8946 1974 1963 1758 3351 1761 3830 1769 1966 3516 1764 
(declare-fun + (Int Int) Int): nary 1864 1891 4124 2199 3187 1856 4150 3532 4172 3367 8774 2992 4194 1903 2069 
(declare-fun + (Int Int) Int): nary 2284 3867 2058 8824 
(declare-fun + (Int Int) Int): nary 1890 2057 1855 2300 
(declare-fun + (Int Int) Int): nary 2170 1999 
(declare-fun + (Int Int) Int): nary 1950 
(declare-fun + (Int Int) Int): nary 1940 2952 
(declare-fun + (Int Int) Int): nary 3844 8561 8945 
(declare-fun + (Int Int) Int): nary 3206 
(declare-fun + (Int Int) Int): nary 8531 
#125 := 1 [p 8376 8380 8381 8382 8385 8389 8390 8391 8392 8471 708 720 726 732 738 743 753 757 761 765 769 773 8385 8470 8484 8517 8823 987 999 1016 982 1010 1005 975 1020 1024 1028 1032 1036 1040] [t 5:0] 
#2972 := 1.0 [t 5:1] 
#87 := 0 [p 1752 1755 1759 1762 1765 1767 1770 193 197 201 205 209 213 1772 1773 1775 1776 1778 1781 1783 1784 365 369 373 377 381 385 1838 3118 1843 1845 1847 1849 1851 1853 578 582 586 590 594 598 1919 3309 1924 1926 1928 1930 1932 1934 1957 1960 1964 1967 1971 1973 1975 755 759 763 767 771 775 1977 1978 1979 1981 1984 1986 1987 887 891 895 899 903 907 2020 2021 1023 1027 1031 1035 1039 1043 2066 2067 1284 1288 1292 1296 1300 1304 8285 8287 8339 8341 8378 8387 8412 8428 8433 8436 8448 8454 8461 8463 8464 8465 8474 8477 8480 8489 8507 8508 8511 8522 8527 8534 8535 8536 8539 8562 8564 2125 164 331 544 1895 3277 726 858 994 1253 8526 8531 1999 2952 4150 4194 8561 3893 3532 3516 8400 3367 3351 1963 3187 3170 2992 2975 1758 8509 2126 2952 1940 1999 2170 2117 3279 4129 4148 4178 8529 8531 4150 4194 8561 1751 8534 2284 2202 2300 2199 2169 2058 2063 2057 2069 1956 1891 1898 1890 1939 1856 1860 1855 3867 3930 2126 2115 2273 1769 2284 2300 2199 2191 2058 2057 2069 1974 1891 1890 1908 1856 1855 3867 3206 8582 8584 8585 8586 8587 8588 8589 8591 8592 8595 8718 8719 8736 8738 8740 8755 8756 8758 8764 8766 8774 8775 8777 8778 8786 8824 8824 8825 8832 8834 8836 8837 8839 8873 8874 8875 8876 8878 8879 8881 8882 4130 4179 3187 3170 3532 3516 1903 1864 3308 3830 3844 8827 8835 8774 163 330 543 725 857 993 1252 2112 2992 2975 3367 3351 2170 1940 4124 4172 3893 3532 3516 8413 3367 3351 1963 3187 3170 2992 2975 1758 8513 8575 8774 2952 1940 1999 2170 8896 8902 8903 8904 988 994 1000 1011 1006 976 1021 1025 1029 1033 1037 1041 8478 2952 8429 8478 8520 1042 1038 1034 1030 1026 8397 8403 8404 1022 1855 1856 1860 1855 3532 3501 2952 2952 1858 1864 141 1777 1780 3830 3844 3206 3867 8944 208 2123 212 2124 200 762 2121 894 372 2126 380 593 902 1299 384 597 906 1303 585 1291 8657 143 152 157 169 175 180 186 190 194 198 202 206 210 8381 8431 204 1295 1287 196 8867 1283 192 3867 3206 1769 8661 3867 3206 1766 4009 4055 1764 3893 1761 3805 3206 1754 3867 1751 3206 1745 2126 2126 2122 8905 2120 758 2119 754 3830 3844 3844 3875 3206 8679 8752 376 589 898 368 581 890 8806 364 577 886 2126 2126 8715 8642 8945 8945 8945 8947 8949 2112 2112 8601 2126 1761 1966 8472 2126 8531 8774 8783 8824 8945 3187 3532 4150 4194 8561 2992 3187 8487 8784 1999 2952 3367 3893 8763 8774 8783 8945 3875 3206 8425 8946 1950 1956 1959 1966 8946 1970 1972 1974 1764 1970 2114 2058 3299 2272 2300 2057 1890 2170 1999 1940 8763 2959 2170 2284 2202 2300 2199 2170 2200 8473 1999 8774 3154 1999 2058 2063 2057 2069 2061 2112 1745 8517 1950 2126 8531 1999 2952 4150 4194 8561 8531 1940 3206 2112 2112 2112 2112 1856 1855 2284 2300 2199 1864 3117 2058 2057 2069 1891 1890 1903 2284 1855 2300 2057 1890 2952 2170 1999 1940 2112 4098 4155 1856 1860 1855 2284 2202 2300 2199 2058 2063 2057 2069 1891 1898 1890 1864 4096 4156 4124 4172 1903 1766 1972 1751 3867 3206 1891 1898 1890 3844 1896 1903 1856 1860 1855 2284 2202 2300 2199 2058 2063 2057 2069 1891 1898 1890 1864 1903 4171] [t 5:2] 
#8283 := 0.0 [t 5:3] 
#2082 := (>= undef377 1) [b1 := T no-cgc] [t 5:5] 
#1065 := undef377 [p 2080] [t 5:4] 
#2083 := (>= undef29 0) [b2 := T no-cgc] [t 5:7] 
#1069 := undef29 [p 2104 2118] [t 5:6] 
#2084 := (>= undef181 0) [b3 := T no-cgc] [t 5:9] 
#1072 := undef181 [p 2094] [t 5:8] 
#2283 := k!2 [b4 := T] 
#2326 := k!0 [b5 := T] 
#2087 := (<= undef378 1) [b6 := F no-cgc] [t 5:11] 
#1081 := undef378 [p 2111 2125] [t 5:10] 
#2091 := (>= undef178 4) [b7 := T no-cgc] [t 5:13] 
#1085 := undef178 [p 2094] [t 5:12] 
#2092 := (<= #2090 14) [b8 := T no-cgc] [t 5:16] 
#1091 := undef28 [p 2090 2103 2117] [t 5:14] 
#1741 := -1 [p 2080 1786 1748 1749 1750 1753 1756 1757 1760 1763 1768 1774 1771 1779 1814 1812 1818 1806 2321 2264 1791 1834 1839 1867 1895 1893 1899 1887 2138 2165 1872 1915 1920 1953 1954 1955 1958 1961 1962 1965 1968 1969 1976 1982 2002 1996 2026 2029 2024 2018 3389 3386 2048 2042 1819 1823 1815 1810 3554 3551 2242 1830 2282 1911 2312 2341 2141 2171 2151 3825 2140 3828 3839 3842 3871 3873 8426 8470 8475 8486 8519 8528 8530 8533 8641 8656 8660 8678 8714 8751 8761 8762 8765 8770 8772 8773 8805 8472 8861 8531 8861 8474] [t 5:176] 
#2080 := (* -1 undef377) [p 2090] 
#2090 := (+ undef28 #2080) [t 5:15] 
#2095 := (>= undef28 15) [b9 := T no-cgc] [t 5:17] 
#2096 := (<= #2094 536870909) [b10 := F no-cgc] [t 5:19] 
#2094 := (+ undef178 undef181) [t 5:18] 
#3180 := k!4 [b11 := F] 
#2113 := (<= #2112 0) [b12 := T no-cgc] [t 5:49] 
#13 := Nl4arg31 [r 87] [p 2111 163 330 1814 3083 543 725 857 993 1252 8572 8574] [t 5:21] [j 87 arith 252 356 --> 13 == 87] 
#2111 := (* Nl4arg31 undef378) [r 87] [p 2112 8836] [t 5:20] [j 2125 congruence] 
#142 := Nl4CT1 [p 2112 143 284 1791 497 707 839 975 1233 8287 8380 2952] [t 5:22] 
#16 := Nl4arg41 [p 2112 169 338 1818 1795 551 731 863 999 1258 8426 8763 3532] [t 5:23] 
#19 := Nl4arg51 [r 87] [p 2100 175 2284 347 3108 1834 560 737 869 2020 1005 2231 1264 8572 1855 3232 8398] [t 5:24] [j 87 sat: 792] 
#25 := Nl4arg71 [r 87] [p 2101 186 358 1839 571 748 880 2021 1016 2233 1277 1856 1855 3797 8396] [t 5:25] [j 87 sat: 226] 
#7 := Nl4arg11 [r 87] [p 2103 152 316 3086 529 714 846 982 1830 4098 4121 4155 1241 1856 1860 1855 3226 8402 8412] [t 5:27] [j 982 arith -338 533 --> 7 == 982] 
#2103 := (* Nl4arg11 undef28) [r 87] [p 2112 8837] [t 5:26] [j 87 sat: 801] 
#10 := Nl4arg21 [p 2104 321 1786 157 534 851 719 987 1246 3501 2952] [t 5:29] 
#2104 := (* Nl4arg21 undef29) [r 87] [p 2112 8839] [t 5:28] [j 87 sat: 803] 
#28 := Nl4arg81 [r 87] [p 2105 190 362 1843 575 752 884 1020 1281 8866 1022] [t 5:31] [j 87 sat: 598] 
#1128 := undef35 [r 87] [p 2105 2119 8736] [t 5:32] [j 87 sat: 716] 
#2105 := (* Nl4arg81 undef35) [r 87] [p 2112 8601 8777] [t 5:30] [j 87 sat: 746] 
#31 := Nl4arg91 [r 87] [p 2106 194 366 1845 579 756 888 1024 1285 8854 8857 8866 1026 8395 8396 8398 8402 8406] [t 5:34] [j 87 sat: 593] 
#1130 := undef36 [p 2106 2120 8718] [t 5:35] 
#2106 := (* Nl4arg91 undef36) [r 87] [p 2112 8608 8642 8738] [t 5:33] [j 2120 congruence] 
#34 := Nl4arg101 [p 2107 198 370 1847 583 760 892 1028 1289 1030] [t 5:37] 
#1132 := undef37 [r 87] [p 2107 2121 8758] [t 5:38] [j 87 sat: 736] 
#2107 := (* Nl4arg101 undef37) [r 87] [p 2112 8610 8752 8775] [t 5:36] [j 2121 sat: 601] 
#37 := Nl4arg111 [r 87] [p 2108 202 374 1849 587 764 896 1032 1293 1034] [t 5:40] [j 87 sat: 595] 
#1134 := undef38 [p 2108 2122 8719] [t 5:41] 
#2108 := (* Nl4arg111 undef38) [r 87] [p 2112 8599 8715 8778] [t 5:39] [j 2122 sat: 590] 
#40 := Nl4arg121 [r 87] [p 2109 206 378 1851 591 768 900 1036 1297 1038] [t 5:43] [j 87 sat: 596] 
#1136 := undef39 [r 87] [p 2109 2123 8339] [t 5:44] [j 87 sat: 352] 
#2109 := (* Nl4arg121 undef39) [r 87] [p 2112 8600 8657 8825] [t 5:42] [j 87 sat: 790] 
#43 := Nl4arg131 [r 87] [p 2110 210 382 1853 595 772 904 1040 1301 1042] [t 5:46] [j 87 sat: 597] 
#1138 := undef40 [r 87] [p 2110 2124 8341] [t 5:47] [j 87 sat: 354] 
#2110 := (* Nl4arg131 undef40) [r 87] [p 2112 8609 8679 8755] [t 5:45] [j 2124 sat: 600] 
#1117 := 12 [p 2101 2115] 
#2101 := (* 12 Nl4arg71) [p 2112 2126 8531 8824] [t 5:846] 
#1113 := 16 [p 2100 2114] 
#2100 := (* 16 Nl4arg51) [p 2112 2126 8531 8824] [t 5:845] 
#2112 := (+ Nl4CT1 Nl4arg41 #2100 #2101 #2103 #2104 #2105 #2106 #2107 #2108 #2109 #2110 #2111) [t 5:48] 
#2127 := (<= #2126 0) [b13 := T no-cgc] [t 5:73] 
#52 := Nl4arg32 [r 87] [p 2125 164 331 544 1895 3277 726 858 994 1253 8526 8570] [t 5:51] [j 87 arith 259 336 --> 52 == 87] 
#2125 := (* Nl4arg32 undef378) [r 87] [p 2126] [t 5:50] [j 87 arith 336 259 --> 87 == 2125] 
#144 := Nl4CT2 [r 87] [p 2126 145 285 498 1872 708 840 976 1234 8285 8475 8531] [t 5:52] [j 87 sat: 298] 
#55 := Nl4arg42 [r 87] [p 2126 170 339 552 1899 1876 732 864 1000 1259 8471 8531 8774 8783 8824] [t 5:53] [j 87 arith 325 539 --> 55 == 87] 
#58 := Nl4arg52 [r 87] [p 2114 176 348 2058 561 3299 1915 738 870 1006 2066 2272 1265 8570] [t 5:54] [j 738 arith 427 426 --> 58 == 738] 
#64 := Nl4arg72 [r 87] [p 2115 187 359 572 1920 749 881 1017 2067 2273 1278] [t 5:55] [j 87 sat: 247] 
#46 := Nl4arg12 [r 87] [p 2117 153 317 530 3279 715 847 983 1911 4129 4148 4178 1242 8529] [t 5:57] [j 87 arith 147 -343 --> 46 == 87] 
#2117 := (* Nl4arg12 undef28) [r 87] [p 2126] [t 5:56] [j 87 arith -343 147 --> 87 == 2117] 
#49 := Nl4arg22 [r 158] [p 2118 322 158 535 1867 852 720 988 1247] [t 5:59] [j 720 arith 427 426 --> 49 == 720] 
#2118 := (* Nl4arg22 undef29) [p 2126] [t 5:58] 
#67 := Nl4arg82 [r 87] [p 2119 191 363 576 1924 753 885 1021 1282 8864] [t 5:61] [j 87 arith 321 86 87 == 192 87 == 192 67 == 191 67 == 191 --> 67 == 87] 
#2119 := (* Nl4arg82 undef35) [r 87] [p 2126 8601] [t 5:60] [j 2105 congruence] 
#70 := Nl4arg92 [r 87] [p 2120 195 367 580 1926 757 889 1025 1286 8853] [t 5:63] [j 87 arith 321 86 70 == 195 70 == 195 87 == 196 87 == 196 --> 70 == 87] 
#2120 := (* Nl4arg92 undef36) [r 87] [p 2126 8608 8641] [t 5:62] [j 87 arith 756 755 --> 87 == 2120] 
#73 := Nl4arg102 [r 87] [p 2121 199 371 584 1928 761 893 1029 1290] [t 5:65] [j 87 sat: 163] 
#2121 := (* Nl4arg102 undef37) [r 87] [p 2126 8610 8751 8896] [t 5:64] [j 87 arith 607 606 --> 87 == 2121] 
#76 := Nl4arg112 [r 87] [p 2122 203 375 588 1930 765 897 1033 1294 8860] [t 5:67] [j 87 arith 321 86 76 == 203 76 == 203 87 == 204 87 == 204 --> 76 == 87] 
#2122 := (* Nl4arg112 undef38) [r 87] [p 2126 8599 8714] [t 5:66] [j 87 arith 657 656 --> 87 == 2122] 
#79 := Nl4arg122 [r 87] [p 2123 207 379 592 1932 769 901 1037 1298 8859] [t 5:69] [j 87 sat: 165] 
#2123 := (* Nl4arg122 undef39) [r 87] [p 2126 8600 8656 8740] [t 5:68] [j 87 sat: 721] 
#82 := Nl4arg132 [r 87] [p 2124 211 383 596 1934 773 905 1041 1302] [t 5:71] [j 87 sat: 166] 
#2124 := (* Nl4arg132 undef40) [r 87] [p 2126 8609 8678 8902] [t 5:70] [j 87 arith 659 658 --> 87 == 2124] 
#2115 := (* 12 Nl4arg72) [r 2101] [p 2126 8531 8824] [t 5:846] [j 2101 congruence] 
#2114 := (* 16 Nl4arg52) [r 2100] [p 2126 8531 8824] [t 5:845] [j 2100 congruence] 
#2126 := (+ Nl4CT2 Nl4arg42 #2114 #2115 #2117 #2118 #2119 #2120 #2121 #2122 #2123 #2124 #2125) [t 5:72] 
#3179 := (>= Nl4arg11 -2) [b16 := T no-cgc] [t 5:74] 
#9 := (<= Nl4arg11 2) [b17 := T no-cgc] [t 5:75] 
#2281 := (>= Nl4arg21 -2) [b18 := T no-cgc] [t 5:76] 
#12 := (<= Nl4arg21 2) [b19 := T no-cgc] [t 5:77] 
#3164 := (>= Nl4arg31 -2) [b20 := T no-cgc] [t 5:78] 
#15 := (<= Nl4arg31 2) [b21 := T no-cgc] [t 5:79] 
#4014 := (>= Nl4arg41 -2) [b22 := T no-cgc] [t 5:80] 
#18 := (<= Nl4arg41 2) [b23 := T no-cgc] [t 5:81] 
#4011 := (>= Nl4arg51 -2) [b24 := T no-cgc] [t 5:82] 
#21 := (<= Nl4arg51 2) [b25 := T no-cgc] [t 5:83] 
#4013 := (>= Nl4arg61 -2) [b26 := T no-cgc] [t 5:85] 
#22 := Nl4arg61 [r 87] [p 180 352 1838 565 742 874 1010 1270 8574 1856 1819 1860 1855 3160 8406] [t 5:84] [j 87 sat: 130] 
#24 := (<= Nl4arg61 2) [b27 := T no-cgc] [t 5:86] 
#2938 := (>= Nl4arg71 -2) [b28 := T no-cgc] [t 5:87] 
#27 := (<= Nl4arg71 2) [b29 := T no-cgc] [t 5:88] 
#3222 := (>= Nl4arg81 -2) [b30 := T no-cgc] [t 5:89] 
#30 := (<= Nl4arg81 2) [b31 := T no-cgc] [t 5:90] 
#3369 := (>= Nl4arg91 -2) [b32 := T no-cgc] [t 5:91] 
#33 := (<= Nl4arg91 2) [b33 := T no-cgc] [t 5:92] 
#3398 := (>= Nl4arg101 -2) [b34 := T no-cgc] [t 5:93] 
#36 := (<= Nl4arg101 2) [b35 := T no-cgc] [t 5:94] 
#4185 := (>= Nl4arg111 -2) [b36 := T no-cgc] [t 5:95] 
#39 := (<= Nl4arg111 2) [b37 := T no-cgc] [t 5:96] 
#4187 := (>= Nl4arg121 -2) [b38 := T no-cgc] [t 5:97] 
#42 := (<= Nl4arg121 2) [b39 := T no-cgc] [t 5:98] 
#3560 := (>= Nl4arg131 -2) [b40 := T no-cgc] [t 5:99] 
#45 := (<= Nl4arg131 2) [b41 := T no-cgc] [t 5:100] 
#3542 := (>= Nl4arg12 -2) [b42 := T no-cgc] [t 5:101] 
#48 := (<= Nl4arg12 2) [b43 := T no-cgc] [t 5:102] 
#3543 := (>= Nl4arg22 -2) [b44 := T no-cgc] [t 5:103] 
#51 := (<= Nl4arg22 2) [b45 := T no-cgc] [t 5:104] 
#3557 := (>= Nl4arg32 -2) [b46 := T no-cgc] [t 5:105] 
#54 := (<= Nl4arg32 2) [b47 := T no-cgc] [t 5:106] 
#3558 := (>= Nl4arg42 -2) [b48 := T no-cgc] [t 5:107] 
#57 := (<= Nl4arg42 2) [b49 := T no-cgc] [t 5:108] 
#3559 := (>= Nl4arg52 -2) [b50 := T no-cgc] [t 5:109] 
#60 := (<= Nl4arg52 2) [b51 := T no-cgc] [t 5:110] 
#3171 := (>= Nl4arg62 -2) [b52 := T no-cgc] [t 5:112] 
#61 := Nl4arg62 [r 87] [p 181 353 566 1919 743 875 1011 1271] [t 5:111] [j 87 sat: 159] 
#63 := (<= Nl4arg62 2) [b53 := T no-cgc] [t 5:113] 
#3172 := (>= Nl4arg72 -2) [b54 := T no-cgc] [t 5:114] 
#66 := (<= Nl4arg72 2) [b55 := T no-cgc] [t 5:115] 
#3006 := (>= Nl4arg82 -2) [b56 := T no-cgc] [t 5:116] 
#69 := (<= Nl4arg82 2) [b57 := T no-cgc] [t 5:117] 
#3376 := (>= Nl4arg92 -2) [b58 := T no-cgc] [t 5:118] 
#72 := (<= Nl4arg92 2) [b59 := T no-cgc] [t 5:119] 
#3382 := (>= Nl4arg102 -2) [b60 := T no-cgc] [t 5:120] 
#75 := (<= Nl4arg102 2) [b61 := T no-cgc] [t 5:121] 
#3944 := (>= Nl4arg112 -2) [b62 := T no-cgc] [t 5:122] 
#78 := (<= Nl4arg112 2) [b63 := T no-cgc] [t 5:123] 
#3964 := (>= Nl4arg122 -2) [b64 := T no-cgc] [t 5:124] 
#81 := (<= Nl4arg122 2) [b65 := T no-cgc] [t 5:125] 
#3972 := (>= Nl4arg132 -2) [b66 := T no-cgc] [t 5:126] 
#84 := (<= Nl4arg132 2) [b67 := T no-cgc] [t 5:127] 
#2960 := (>= #2959 0) [b68 := T no-cgc] [t 5:133] 
#269 := lam1n17 [p 321 330 338 358 316 352 347 284 362 366 370 374 378 382] [t 5:129] 
#321 := (* Nl4arg21 lam1n17) [p 2959 2170 8882] [t 5:128] 
#271 := lam1n18 [r 87] [p 322 331 339 359 317 353 348 285 363 367 371 375 379 383 8760] [t 5:131] [j 87 arith 385 122 --> 87 == 271] 
#322 := (* Nl4arg22 lam1n18) [r 87] [p 2959 2170 8881] [t 5:130] [j 988 congruence] 
#1786 := (* -1 Nl4arg21) [p 2959 3336] 
#2959 := (+ #321 #322 #1786) [t 5:132] 
#88 := (>= lam0n0 0) [b69 := T no-cgc] [t 5:135] 
#86 := lam0n0 [r 158] [p 1745 1753] [t 5:134] [j 720 arith 321 86 426 566 427 567 158 == 720 158 == 720 --> 86 == 720] 
#90 := (>= lam0n1 0) [b70 := T no-cgc] [t 5:137] 
#89 := lam0n1 [r 107] [p 1760] [t 5:136] [j 107 arith 337 448 449 356 323 321 86 325 252 539 364 540 541 259 426 336 427 170 == 732 170 == 732 --> 89 == 107] 
#92 := (>= lam0n2 0) [b71 := T no-cgc] [t 5:139] 
#91 := lam0n2 [r 87] [p 1775] [t 5:138] [j 87 sat: 104] 
#94 := (>= lam0n3 0) [b72 := T no-cgc] [t 5:141] 
#93 := lam0n3 [r 87] [p 1776] [t 5:140] [j 87 sat: 105] 
#96 := (>= lam0n4 0) [b73 := T no-cgc] [t 5:143] 
#95 := lam0n4 [r 117] [p 1779] [t 5:142] [j 117 arith 321 451 450 86 85 584 536 585 87 == 187 87 == 187 --> 95 == 117] 
#98 := (>= lam0n5 0) [b74 := T no-cgc] [t 5:145] 
#97 := lam0n5 [r 87] [p 1783] [t 5:144] [j 87 sat: 108] 
#100 := (>= lam0n6 0) [b75 := T no-cgc] [t 5:147] 
#99 := lam0n6 [r 87] [p 1784] [t 5:146] [j 87 sat: 109] 
#102 := (>= lam0n7 0) [b76 := T no-cgc] [t 5:149] 
#101 := lam0n7 [p 128 1748 1766] [t 5:148] 
#104 := (>= lam0n8 0) [b77 := T no-cgc] [t 5:151] 
#103 := lam0n8 [p 129 1749 1769] [t 5:150] 
#106 := (>= lam0n9 0) [b78 := T no-cgc] [t 5:153] 
#105 := lam0n9 [p 130 1756] [t 5:152] 
#108 := (>= lam0n10 0) [b79 := T no-cgc] [t 5:155] 
#107 := lam0n10 [p 131 1757 1761 1758 8531 8824] [t 5:154] 
#110 := (>= lam0n11 0) [b80 := T no-cgc] [t 5:157] 
#109 := lam0n11 [p 132 1763] [t 5:156] 
#112 := (>= lam0n12 0) [b81 := T no-cgc] [t 5:159] 
#111 := lam0n12 [p 134 1750] [t 5:158] 
#114 := (>= lam0n13 0) [b82 := T no-cgc] [t 5:161] 
#113 := lam0n13 [r 87] [p 135 1772] [t 5:160] [j 87 sat: 102] 
#116 := (>= lam0n14 0) [b83 := T no-cgc] [t 5:163] 
#115 := lam0n14 [r 117] [p 136 1774] [t 5:162] [j 117 arith 568 536 569 450 451 85 --> 115 == 117] 
#118 := (>= lam0n15 0) [b84 := T no-cgc] [t 5:165] 
#117 := lam0n15 [p 1740 1764 1768 1777 1780 136] [t 5:164] 
#120 := (>= lam0n16 0) [b85 := T no-cgc] [t 5:167] 
#119 := lam0n16 [r 87] [p 141 1773 1771] [t 5:166] [j 87 sat: 103] 
#122 := (>= lam0n17 0) [b86 := T no-cgc] [t 5:169] 
#121 := lam0n17 [r 87] [p 143 152 157 163 169 175 180 186 190 194 198 202 206 210 8381 8431] [t 5:168] [j 87 arith 321 86 --> 87 == 121] 
#124 := (>= lam0n18 0) [b87 := T no-cgc] [t 5:171] 
#123 := lam0n18 [r 125] [p 145 153 158 164 170 176 181 187 191 195 199 203 207 211 8376 8517 8528 8823] [t 5:170] [j 125 sat: 389] 
#1746 := (<= #1745 1) [b88 := F no-cgc] [t 5:175] 
#145 := (* Nl4CT2 lam0n18) [r 87] [p 1745 8375 8517 8530 1950 2126 285 498 708 840 976 1234 8285 8475 8531] [t 5:172] [j 708 congruence] 
#143 := (* Nl4CT1 lam0n17) [r 87] [p 1745 8382] [t 5:173] [j 87 arith 86 321 --> 87 == 143] 
#140 := 536870914 [p 141 706] 
#141 := (* 536870914 lam0n16) [p 1745] 
#1739 := -536870913 [p 1740] 
#1740 := (* -536870913 lam0n15) [p 1745] 
#133 := 4 [p 136 135 134 705 704 703 3930 3929] 
#136 := (* 4 lam0n14) [p 1745] 
#135 := (* 4 lam0n13) [r 704] [p 1745] [j 3930 congruence] 
#134 := (* 4 lam0n12) [p 1745] 
#5 := 2 [p 132 131 130 3079 3078 2149 2148 3273 3272 1994 1993 702 701 700 3442 3441 1937 1936 3607 3606 3234 3232 3915 8526 8760 8769 8776 8785 8823 8826 8824 8826] [t 5:843] 
#132 := (* 2 lam0n11) [p 1745] 
#131 := (* 2 lam0n10) [p 1745] 
#130 := (* 2 lam0n9) [p 1745] 
#127 := 3 [p 129 128 699 698] 
#129 := (* 3 lam0n8) [p 1745] 
#128 := (* 3 lam0n7) [p 1745] 
#1745 := (+ lam0n0 #128 #129 #130 #131 #132 #134 #135 #136 #1740 #141 #143 #145) [t 5:174] 
#1748 := (* -1 lam0n7) [r 87] [p 1751] [t 5:177] [j 181 arith 86 321 446 447 --> 181 == 1748] 
#1749 := (* -1 lam0n8) [r 1779] [p 1751] [t 5:178] [j 1779 arith 321 451 450 86 85 536 584 585 87 == 187 87 == 187 --> 1749 == 1779] 
#1750 := (* -1 lam0n12) [p 1751] [t 5:179] 
#152 := (* Nl4arg11 lam0n17) [r 87] [p 1751 8535] [t 5:180] [j 87 arith 86 321 --> 87 == 152] 
#153 := (* Nl4arg12 lam0n18) [r 87] [p 1751 8534] [t 5:181] [j 164 congruence] 
#1751 := (+ #1748 #1749 #1750 #152 #153) [r 87] [p 1752] [t 5:182] [j 87 sat: 89] 
#1752 := (= #1751 0) [r 8448] [b89 := T] [j 8534 congruence] 
#1753 := (* -1 lam0n0) [p 1754 3154 3501] [t 5:183] 
#157 := (* Nl4arg21 lam0n17) [r 87] [p 1754 8539] [t 5:184] [j 87 arith 86 321 --> 87 == 157] 
#158 := (* Nl4arg22 lam0n18) [p 1754 8536 1959 2118 322 535 1867 852 720 988 1247 1745 1950] [t 5:185] 
#1754 := (+ #1753 #157 #158) [r 87] [p 1755] [t 5:186] [j 87 sat: 90] 
#1755 := (= #1754 0) [r 8448] [b90 := T] [j 8534 congruence] 
#1756 := (* -1 lam0n9) [r 107] [p 1758 8531 8824] [t 5:187] [j 107 arith 337 448 449 364 356 259 252 336 --> 107 == 1756] 
#1757 := (* -1 lam0n10) [r 1760] [p 1758] [t 5:188] [j 1760 arith 321 448 323 356 449 337 86 325 252 539 364 540 541 259 426 336 427 170 == 732 170 == 732 --> 1757 == 1760] 
#163 := (* Nl4arg31 lam0n17) [r 87] [p 1758 8513 8573 8575] [t 5:189] [j 87 arith 356 252 --> 87 == 163] 
#164 := (* Nl4arg32 lam0n18) [r 87] [p 1758 8509 8571] [t 5:190] [j 87 arith 336 259 --> 87 == 164] 
#1758 := (+ #1756 #1757 #163 #164) [r 87] [p 1759] [t 5:191] [j 87 sat: 91] 
#1759 := (= #1758 0) [r 8448] [b91 := T] [j 8534 congruence] 
#1760 := (* -1 lam0n1) [p 1761 8531 8824 1758] [t 5:192] 
#169 := (* Nl4arg41 lam0n17) [r 87] [p 1761 8431] [t 5:193] [j 87 arith 86 321 --> 87 == 169] 
#170 := (* Nl4arg42 lam0n18) [r 87] [p 1761 1966 8472 2126 339 552 1899 1876 732 864 1000 1259 8471 8531 8774 8783 8824 8945] [t 5:194] [j 732 congruence] 
#1761 := (+ #1760 lam0n10 #169 #170) [r 87] [p 1762] [t 5:195] [j 87 sat: 92] 
#1762 := (= #1761 0) [r 8448] [b92 := T] [j 8534 congruence] 
#1763 := (* -1 lam0n11) [p 1764] [t 5:196] 
#175 := (* Nl4arg51 lam0n17) [r 87] [p 1764 8508 8573] [t 5:197] [j 87 arith 86 321 --> 87 == 175] 
#176 := (* Nl4arg52 lam0n18) [r 87] [p 1764 8511 8571 1970 8449 2114 348 2058 561 3299 1915 738 870 1006 2272 1265] [t 5:198] [j 87 sat: 511] 
#1764 := (+ #1763 lam0n15 #175 #176) [r 87] [p 1765] [t 5:199] [j 87 sat: 93] 
#1765 := (= #1764 0) [r 8448] [b93 := T] [j 8534 congruence] 
#180 := (* Nl4arg61 lam0n17) [r 87] [p 1766 8510 8575] [t 5:200] [j 87 arith 86 321 --> 87 == 180] 
#181 := (* Nl4arg62 lam0n18) [r 87] [p 1766 8512 1972 353 566 1919 743 875 1011 1271 1751] [t 5:201] [j 743 congruence] 
#1766 := (+ lam0n7 #180 #181) [r 87] [p 1767] [t 5:202] [j 87 sat: 94] 
#1767 := (= #1766 0) [r 8448] [b94 := T] [j 8534 congruence] 
#1768 := (* -1 lam0n15) [r 1779] [p 1769] [t 5:203] [j 1779 arith 536 450 451 85 --> 1768 == 1779] 
#186 := (* Nl4arg71 lam0n17) [r 87] [p 1769 8515 8661 8903] [t 5:204] [j 87 arith 86 321 --> 87 == 186] 
#187 := (* Nl4arg72 lam0n18) [r 87] [p 1769 8514] [t 5:205] [j 164 congruence] 
#1769 := (+ lam0n8 #1768 #186 #187) [r 87] [p 1770] [t 5:206] [j 87 sat: 95] 
#1770 := (= #1769 0) [r 8448] [b95 := T] [j 8534 congruence] 
#190 := (* Nl4arg81 lam0n17) [r 87] [p 192 8867] [t 5:207] [j 87 arith 86 321 --> 87 == 190] 
#191 := (* Nl4arg82 lam0n18) [r 87] [p 192 8864 2119 363 576 1924 753 885 1021 1282 8864 754 8906] [t 5:208] [j 67 sat: 827] 
#192 := (+ #190 #191) [r 87] [p 193] [t 5:209] [j 87 sat: 96] 
#193 := (= #192 0) [r 8448] [b96 := T] [j 8534 congruence] 
#194 := (* Nl4arg91 lam0n17) [r 87] [p 196 8510 8513 8515 8660 8854 8863 8867] [t 5:210] [j 87 arith 86 321 --> 87 == 194] 
#195 := (* Nl4arg92 lam0n18) [r 87] [p 196 8509 8512 8514 8853 2120 367 580 757 889 1025 1286 8853 758 8449 8906] [t 5:211] [j 70 sat: 817] 
#196 := (+ #194 #195) [r 87] [p 197] [t 5:212] [j 87 sat: 97] 
#197 := (= #196 0) [r 8448] [b97 := T] [j 8534 congruence] 
#198 := (* Nl4arg101 lam0n17) [r 87] [p 200] [t 5:213] [j 87 arith 86 321 --> 87 == 198] 
#199 := (* Nl4arg102 lam0n18) [r 87] [p 200 8834 762 2121 371 584 761 893 1029 1290 8934 8934] [t 5:214] [j 761 congruence] 
#200 := (+ #198 #199) [r 87] [p 201] [t 5:215] [j 87 sat: 98] 
#201 := (= #200 0) [r 8448] [b98 := T] [j 8534 congruence] 
#202 := (* Nl4arg111 lam0n17) [r 87] [p 204 1295] [t 5:216] [j 87 arith 86 321 --> 87 == 202] 
#203 := (* Nl4arg112 lam0n18) [r 87] [p 204 8860 2122 375 588 1930 765 897 1033 1294 8860 766] [t 5:217] [j 76 sat: 823] 
#204 := (+ #202 #203) [r 87] [p 205] [t 5:218] [j 87 sat: 99] 
#205 := (= #204 0) [r 8448] [b99 := T] [j 8534 congruence] 
#206 := (* Nl4arg121 lam0n17) [r 87] [p 208] [t 5:219] [j 87 arith 758 757 79 == 207 79 == 207 87 == 208 87 == 208 --> 87 == 206] 
#207 := (* Nl4arg122 lam0n18) [r 87] [p 208 8859 2123 379 592 1932 769 901 1037 1298 8859 770] [t 5:220] [j 79 sat: 822] 
#208 := (+ #206 #207) [r 87] [p 209] [t 5:221] [j 87 sat: 100] 
#209 := (= #208 0) [r 8448] [b100 := T] [j 8534 congruence] 
#210 := (* Nl4arg131 lam0n17) [r 87] [p 212] [t 5:222] [j 772 arith 426 427 87 == 212 87 == 212 211 == 773 211 == 773 87 == 774 87 == 774 --> 210 == 772] 
#211 := (* Nl4arg132 lam0n18) [r 87] [p 212 774 2124 383 596 1934 773 905 1041 1302] [t 5:223] [j 773 congruence] 
#212 := (+ #210 #211) [r 87] [p 213] [t 5:224] [j 87 sat: 101] 
#213 := (= #212 0) [r 8448] [b101 := T] [j 8534 congruence] 
#1772 := (= lam0n13 0) [r 8448] [b102 := T] [j 8534 congruence] 
#1773 := (= lam0n16 0) [r 8448] [b103 := T] [j 8534 congruence] 
#1775 := (= lam0n2 0) [r 8448] [b104 := T] [j 8534 congruence] 
#1776 := (= lam0n3 0) [r 8448] [b105 := T] [j 8534 congruence] 
#1774 := (* -1 lam0n14) [r 1779] [p 1777] [t 5:225] [j 1779 arith 568 569 450 451 --> 1774 == 1779] 
#1771 := (* -1 lam0n16) [r 87] [p 1777 1780 8507] [t 5:226] [j 1895 congruence] 
#1777 := (+ #1774 lam0n15 #1771) [r 87] [p 1778] [t 5:227] [j 87 sat: 106] 
#1778 := (= #1777 0) [r 8448] [b106 := T] [j 8534 congruence] 
#1779 := (* -1 lam0n4) [p 1780 1769 1751] [t 5:228] 
#1780 := (+ #1779 lam0n15 #1771) [r 87] [p 1781] [t 5:229] [j 87 sat: 107] 
#1781 := (= #1780 0) [r 8448] [b107 := T] [j 8534 congruence] 
#1783 := (= lam0n5 0) [r 8448] [b108 := T] [j 8534 congruence] 
#1784 := (= lam0n6 0) [r 8448] [b109 := T] [j 8534 congruence] 
#2993 := (>= #2992 0) [b110 := F no-cgc] [t 5:236] 
#253 := lam1n9 [p 1812] [t 5:230] 
#330 := (* Nl4arg31 lam1n17) [r 87] [p 2992 2975 3078] [t 5:231] [j 87 arith 356 252 --> 87 == 330] 
#331 := (* Nl4arg32 lam1n18) [r 87] [p 2992 2975 3079] [t 5:232] [j 87 arith 336 259 --> 87 == 331] 
#338 := (* Nl4arg41 lam1n17) [p 2992 8761] [t 5:233] 
#339 := (* Nl4arg42 lam1n18) [r 87] [p 2992 8762] [t 5:234] [j 331 congruence] 
#1814 := (* -1 Nl4arg31) [r 87] [p 2992 2975 3367 3351] [j 1895 congruence] 
#1812 := (* -1 lam1n9) [p 2992 2975] 
#1818 := (* -1 Nl4arg41) [p 2992 3367 4124 4172] 
#2992 := (+ #1812 #330 #331 #1814 #338 #339 #1818) [t 5:235] 
#2285 := (>= #2284 0) [b111 := F no-cgc] [t 5:245] 
#358 := (* Nl4arg71 lam1n17) [r 87] [p 2284 2300 2199 2190 8875] [t 5:237] [j 330 congruence] 
#359 := (* Nl4arg72 lam1n18) [r 87] [p 2284 2300 2199 2191] [t 5:238] [j 331 congruence] 
#259 := lam1n12 [p 1806 2173] [t 5:239] 
#316 := (* Nl4arg11 lam1n17) [r 87] [p 2284 2202 2300 2199 2176 8874] [t 5:240] [j 330 congruence] 
#317 := (* Nl4arg12 lam1n18) [r 87] [p 2284 2202 2300 2199 2169] [t 5:241] [j 331 congruence] 
#352 := (* Nl4arg61 lam1n17) [r 87] [p 2284 2321 2202 2300 2199 2180 8873] [t 5:242] [j 330 congruence] 
#353 := (* Nl4arg62 lam1n18) [r 87] [p 2284 2264 2202 2300 2199 2172 8879] [t 5:243] [j 1011 congruence] 
#1806 := (* -1 lam1n12) [p 2284 2202 2300 2199] 
#2284 := (+ #358 #359 #1806 #316 #317 #352 #353 Nl4arg51) [t 5:244] 
#2204 := (>= #2200 0) [b112 := T no-cgc] [t 5:247] 
#2321 := (* -1 #352) [r 87] [p 2200] [j 1895 congruence] 
#2264 := (* -1 #353) [r 87] [p 2200] [j 1895 congruence] 
#2200 := (+ #2321 #2264) [r 87] [t 5:246] [j 8478 congruence] 
#2195 := (>= #2202 0) [b113 := F no-cgc] [t 5:249] 
#2202 := (+ #1806 #316 #317 #352 #353) [t 5:248] 
#254 := (>= lam1n9 0) [b114 := T no-cgc] [t 5:250] 
#3047 := (>= #2975 0) [b115 := F no-cgc] [t 5:252] 
#2975 := (+ #1812 #330 #331 #1814) [t 5:251] 
#2198 := (>= #2300 0) [b116 := F no-cgc] [t 5:256] 
#347 := (* Nl4arg51 lam1n17) [r 87] [p 2300 2148 8878] [t 5:253] [j 330 congruence] 
#348 := (* Nl4arg52 lam1n18) [r 87] [p 2300 2149 8876] [t 5:254] [j 331 congruence] 
#2300 := (+ #347 #348 #358 #359 #1806 #316 #317 #352 #353) [r 2202] [t 5:255] [j 2202 arith 122 385 87 == 359 87 == 359 19 == 87 19 == 87 87 == 347 87 == 347 87 == 358 87 == 358 --> 2202 == 2300] 
#260 := (>= lam1n12 0) [b117 := T no-cgc] [t 5:257] 
#3050 := (<= Nl4arg11 0) [b118 := T no-cgc] [t 5:258] 
#2203 := (>= #2199 0) [b119 := F no-cgc] [t 5:260] 
#2199 := (+ #358 #359 #1806 #316 #317 #352 #353) [r 2202] [t 5:259] [j 2202 arith 87 == 359 87 == 359 19 == 87 19 == 87 87 == 358 87 == 358 --> 2199 == 2202] 
#3052 := (<= Nl4arg51 0) [b120 := T no-cgc] [t 5:261] 
#270 := (>= lam1n17 0) [b121 := T no-cgc] [t 5:262] 
#272 := (>= lam1n18 0) [b122 := T no-cgc] [t 5:263] 
#2167 := (<= #2170 -1) [b123 := F no-cgc] [t 5:267] 
#284 := (* Nl4CT1 lam1n17) [p 2170] [t 5:264] 
#285 := (* Nl4CT2 lam1n18) [r 87] [p 2170] [t 5:265] [j 976 congruence] 
#1791 := (* -1 Nl4CT1) [p 2170 1940 4124 4172] 
#3107 := -536870910 [p 3108 3299] 
#3108 := (* -536870910 Nl4arg51) [p 2170 1999] 
#3085 := -4 [p 3086 3279] 
#3086 := (* -4 Nl4arg11) [p 2170 1940 1999 2952] 
#1712 := -2 [p 3083 1795 3277 1876 3920 3919] 
#3083 := (* -2 Nl4arg31) [r 87] [p 2170 1940 4124 4172] [j 3277 congruence] 
#3079 := (* 2 #331) [r 87] [p 2170] [j 8526 congruence] 
#3078 := (* 2 #330) [r 87] [p 2170] [j 8526 congruence] 
#3103 := -536870907 [p 2172 2180 2191 2190 2076 2078 2073 2072] 
#2172 := (* -536870907 #353) [r 2073] [p 2170] [j 2191 congruence] 
#2180 := (* -536870907 #352) [r 2073] [p 2170] [j 2191 congruence] 
#2175 := -536870904 [p 2169 2176 1998 1997] 
#2169 := (* -536870904 #317) [r 1998] [p 2170] [j 1998 congruence] 
#2176 := (* -536870904 #316) [r 1998] [p 2170] [j 2169 congruence] 
#2150 := 536870908 [p 2173 1995] 
#2173 := (* 536870908 lam1n12) [p 2170] 
#2191 := (* -536870907 #359) [r 2073] [p 2170] [j 2073 congruence] 
#2190 := (* -536870907 #358) [r 2073] [p 2170] [j 2191 congruence] 
#2149 := (* 2 #348) [r 87] [p 2170] [j 8526 congruence] 
#2148 := (* 2 #347) [r 87] [p 2170] [j 8526 congruence] 
#1795 := (* -2 Nl4arg41) [p 2170 1940] 
#2170 := (+ #321 #322 #2148 #2149 #2190 #2191 #2173 #2176 #2169 #2180 #2172 #3078 #3079 #3083 #3086 #3108 ...) [t 5:266] 
#362 := (* Nl4arg81 lam1n17) [r 87] [p 364] [t 5:268] [j 330 congruence] 
#363 := (* Nl4arg82 lam1n18) [r 87] [p 364] [t 5:269] [j 331 congruence] 
#364 := (+ #362 #363) [r 87] [p 365] [t 5:270] [j 8478 congruence] 
#365 := (= #364 0) [r 8448] [b124 := T] [j 8534 congruence] 
#366 := (* Nl4arg91 lam1n17) [r 87] [p 368] [t 5:271] [j 330 congruence] 
#367 := (* Nl4arg92 lam1n18) [r 87] [p 368] [t 5:272] [j 331 congruence] 
#368 := (+ #366 #367) [r 87] [p 369] [t 5:273] [j 8478 congruence] 
#369 := (= #368 0) [r 8448] [b125 := T] [j 8534 congruence] 
#370 := (* Nl4arg101 lam1n17) [p 372] [t 5:274] 
#371 := (* Nl4arg102 lam1n18) [r 87] [p 372 8832] [t 5:275] [j 87 sat: 796] 
#372 := (+ #370 #371) [p 373] [t 5:276] 
#373 := (= #372 0) [b126 := F] 
#374 := (* Nl4arg111 lam1n17) [r 87] [p 376] [t 5:277] [j 330 congruence] 
#375 := (* Nl4arg112 lam1n18) [r 87] [p 376] [t 5:278] [j 331 congruence] 
#376 := (+ #374 #375) [r 87] [p 377] [t 5:279] [j 8478 congruence] 
#377 := (= #376 0) [r 8448] [b127 := T] [j 8534 congruence] 
#378 := (* Nl4arg121 lam1n17) [r 87] [p 380] [t 5:280] [j 330 congruence] 
#379 := (* Nl4arg122 lam1n18) [r 87] [p 380] [t 5:281] [j 331 congruence] 
#380 := (+ #378 #379) [r 87] [p 381] [t 5:282] [j 8478 congruence] 
#381 := (= #380 0) [r 8448] [b128 := T] [j 8534 congruence] 
#382 := (* Nl4arg131 lam1n17) [r 87] [p 384] [t 5:283] [j 330 congruence] 
#383 := (* Nl4arg132 lam1n18) [r 87] [p 384] [t 5:284] [j 331 congruence] 
#384 := (+ #382 #383) [r 87] [p 385] [t 5:285] [j 8478 congruence] 
#385 := (= #384 0) [r 8448] [b129 := T] [j 8534 congruence] 
#1838 := (= Nl4arg61 0) [r 8448] [b130 := T] [j 8534 congruence] 
#1834 := (* -1 Nl4arg51) [r 87] [p 3117 8835] [t 5:286] [j 1920 sat: 799] 
#1839 := (* -1 Nl4arg71) [r 87] [p 3117 8827] [t 5:287] [j 1895 congruence] 
#3117 := (+ #1834 #1839) [r 87] [p 3118] [t 5:288] [j 8478 congruence] 
#3118 := (= #3117 0) [r 8448] [b131 := T] [j 8534 congruence] 
#1843 := (= Nl4arg81 0) [r 8448] [b132 := T] [j 8534 congruence] 
#1845 := (= Nl4arg91 0) [r 8448] [b133 := T] [j 8534 congruence] 
#1847 := (= Nl4arg101 0) [b134 := F] 
#1849 := (= Nl4arg111 0) [r 8448] [b135 := T] [j 8534 congruence] 
#1851 := (= Nl4arg121 0) [r 8448] [b136 := T] [j 8534 congruence] 
#1853 := (= Nl4arg131 0) [r 8448] [b137 := T] [j 8534 congruence] 
#3155 := (>= #3154 0) [b138 := F no-cgc] [t 5:294] 
#482 := lam2n17 [p 534 543 551 571 529 565 560 497 575 579 583 587 591 595 8434] [t 5:290] 
#534 := (* Nl4arg21 lam2n17) [p 3154 1999] [t 5:289] 
#484 := lam2n18 [r 87] [p 535 544 552 572 530 566 561 498 576 580 584 588 592 596 8473 8486 8769] [t 5:292] [j 87 arith 334 151 --> 87 == 484] 
#535 := (* Nl4arg22 lam2n18) [r 87] [p 3154 1999] [t 5:291] [j 988 congruence] 
#1867 := (* -1 Nl4arg22) [r 1753] [p 3154 3501] [j 1753 congruence] 
#3154 := (+ #534 #535 #1867) [t 5:293] 
#3188 := (>= #3187 0) [b139 := T no-cgc] [t 5:301] 
#466 := lam2n9 [p 1893] [t 5:295] 
#543 := (* Nl4arg31 lam2n17) [r 87] [p 3187 3170 3272 8770] [t 5:296] [j 87 arith 356 252 --> 87 == 543] 
#544 := (* Nl4arg32 lam2n18) [r 87] [p 3187 3170 3273] [t 5:297] [j 87 arith 336 259 --> 87 == 544] 
#551 := (* Nl4arg41 lam2n17) [p 3187 8434 8772] [t 5:298] 
#552 := (* Nl4arg42 lam2n18) [r 87] [p 3187 8487 8773 8784] [t 5:299] [j 544 congruence] 
#1895 := (* -1 Nl4arg32) [r 87] [p 3187 3170 3532 3516] [j 8771 congruence] 
#1893 := (* -1 lam2n9) [p 3187 3170] 
#1899 := (* -1 Nl4arg42) [r 87] [p 3187 3532 4150 4194 8561] [t 5:869] [j 87 arith 539 325 --> 87 == 1899] 
#3187 := (+ #1893 #543 #544 #1895 #551 #552 #1899) [t 5:300] 
#2059 := (>= #2058 0) [b140 := T no-cgc] [t 5:310] 
#571 := (* Nl4arg71 lam2n17) [r 87] [p 2058 2057 2069 2072] [t 5:302] [j 543 congruence] 
#572 := (* Nl4arg72 lam2n18) [r 87] [p 2058 2057 2069 2073] [t 5:303] [j 544 congruence] 
#472 := lam2n12 [p 1887 1995] [t 5:304] 
#529 := (* Nl4arg11 lam2n17) [r 87] [p 2058 2063 2057 2069 1997] [t 5:305] [j 543 congruence] 
#530 := (* Nl4arg12 lam2n18) [r 87] [p 2058 2063 2057 2069 1998] [t 5:306] [j 544 congruence] 
#565 := (* Nl4arg61 lam2n17) [r 87] [p 2058 2138 2063 2057 2069 2078] [t 5:307] [j 543 congruence] 
#566 := (* Nl4arg62 lam2n18) [r 87] [p 2058 2165 2063 2057 2069 2076] [t 5:308] [j 1011 congruence] 
#1887 := (* -1 lam2n12) [p 2058 2063 2057 2069] 
#2058 := (+ #571 #572 #1887 #529 #530 #565 #566 Nl4arg52) [r 2069] [t 5:309] [j 2069 arith 118 426 151 -343 -347 366 334 147 427 87 == 572 87 == 572 176 == 738 176 == 738 87 == 176 87 == 176 87 == 565 87 == 565 87 == 571 87 == 571 --> 2058 == 2069] 
#2062 := (>= #2061 0) [b141 := T no-cgc] [t 5:312] 
#2138 := (* -1 #565) [r 87] [p 2061] [j 1895 congruence] 
#2165 := (* -1 #566) [r 87] [p 2061] [j 1895 congruence] 
#2061 := (+ #2138 #2165) [r 87] [t 5:311] [j 8478 congruence] 
#2064 := (>= #2063 0) [b142 := T no-cgc] [t 5:314] 
#2063 := (+ #1887 #529 #530 #565 #566) [r 2069] [t 5:313] [j 2069 arith 118 151 -343 -347 366 334 147 87 == 572 87 == 572 87 == 565 87 == 565 87 == 571 87 == 571 --> 2063 == 2069] 
#467 := (>= lam2n9 0) [b143 := T no-cgc] [t 5:315] 
#3242 := (>= #3170 0) [b144 := T no-cgc] [t 5:317] 
#3170 := (+ #1893 #543 #544 #1895) [t 5:316] 
#2065 := (>= #2057 0) [b145 := T no-cgc] [t 5:321] 
#560 := (* Nl4arg51 lam2n17) [r 87] [p 2057 1993] [t 5:318] [j 543 congruence] 
#561 := (* Nl4arg52 lam2n18) [r 87] [p 2057 1994] [t 5:319] [j 544 congruence] 
#2057 := (+ #560 #561 #571 #572 #1887 #529 #530 #565 #566) [r 2069] [t 5:320] [j 2069 arith 118 151 -343 -347 366 334 147 87 == 572 87 == 572 87 == 560 87 == 560 87 == 565 87 == 565 87 == 571 87 == 571 --> 2057 == 2069] 
#473 := (>= lam2n12 0) [b146 := T no-cgc] [t 5:322] 
#3245 := (<= Nl4arg12 0) [b147 := T no-cgc] [t 5:323] 
#2070 := (>= #2069 0) [b148 := T no-cgc] [t 5:325] 
#2069 := (+ #571 #572 #1887 #529 #530 #565 #566) [t 5:324] 
#3247 := (<= Nl4arg52 0) [b149 := T no-cgc] [t 5:326] 
#483 := (>= lam2n17 0) [b150 := T no-cgc] [t 5:327] 
#485 := (>= lam2n18 0) [b151 := T no-cgc] [t 5:328] 
#2000 := (<= #1999 -1) [b152 := F no-cgc] [t 5:332] 
#497 := (* Nl4CT1 lam2n17) [p 1999] [t 5:329] 
#498 := (* Nl4CT2 lam2n18) [r 87] [p 1999 8379 8473] [t 5:330] [j 87 arith 382 -730 --> 87 == 498] 
#1872 := (* -1 Nl4CT2) [r 87] [p 1999 2952 4150 4194 8375 8379 8384 8429 8561 8531] [t 5:762] [j 8530 congruence] 
#3299 := (* -536870910 Nl4arg52) [r 3108] [p 1999] [j 3108 congruence] 
#3279 := (* -4 Nl4arg12) [r 3086] [p 1999 2952] [j 3086 congruence] 
#3277 := (* -2 Nl4arg32) [r 87] [p 1999 2952 4150 4194 8561] [t 5:871] [j 87 arith 259 336 --> 87 == 3277] 
#3273 := (* 2 #544) [r 87] [p 1999] [j 8526 congruence] 
#3272 := (* 2 #543) [r 87] [p 1999] [j 8526 congruence] 
#2076 := (* -536870907 #566) [r 2073] [p 1999] [j 2191 congruence] 
#2078 := (* -536870907 #565) [r 2073] [p 1999] [j 2191 congruence] 
#1998 := (* -536870904 #530) [p 1999 2170 2170 1999] 
#1997 := (* -536870904 #529) [r 1998] [p 1999] [j 2169 congruence] 
#1995 := (* 536870908 lam2n12) [p 1999] 
#2073 := (* -536870907 #572) [p 1999 2170 2170 1999 2170 1999 2170 1999] 
#2072 := (* -536870907 #571) [r 2073] [p 1999] [j 2191 congruence] 
#1994 := (* 2 #561) [r 87] [p 1999] [j 8526 congruence] 
#1993 := (* 2 #560) [r 87] [p 1999] [j 8526 congruence] 
#1876 := (* -2 Nl4arg42) [r 87] [p 1999 2952] [j 3277 congruence] 
#1999 := (+ #534 #535 #1993 #1994 #2072 #2073 #1995 #1997 #1998 #2078 #2076 #3272 #3273 #3277 #3279 #3299 ...) [t 5:331] 
#575 := (* Nl4arg81 lam2n17) [r 87] [p 577] [t 5:333] [j 543 congruence] 
#576 := (* Nl4arg82 lam2n18) [r 87] [p 577] [t 5:334] [j 544 congruence] 
#577 := (+ #575 #576) [r 87] [p 578] [t 5:335] [j 8478 congruence] 
#578 := (= #577 0) [r 8448] [b153 := T] [j 8534 congruence] 
#579 := (* Nl4arg91 lam2n17) [r 87] [p 581] [t 5:336] [j 543 congruence] 
#580 := (* Nl4arg92 lam2n18) [r 87] [p 581 8786] [t 5:337] [j 544 congruence] 
#581 := (+ #579 #580) [r 87] [p 582] [t 5:338] [j 8478 congruence] 
#582 := (= #581 0) [r 8448] [b154 := T] [j 8534 congruence] 
#583 := (* Nl4arg101 lam2n17) [p 585] [t 5:339] 
#584 := (* Nl4arg102 lam2n18) [r 87] [p 585] [t 5:340] [j 544 congruence] 
#585 := (+ #583 #584) [p 586] [t 5:341] 
#586 := (= #585 0) [b155 := F] 
#587 := (* Nl4arg111 lam2n17) [r 87] [p 589] [t 5:342] [j 543 congruence] 
#588 := (* Nl4arg112 lam2n18) [r 87] [p 589] [t 5:343] [j 544 congruence] 
#589 := (+ #587 #588) [r 87] [p 590] [t 5:344] [j 8478 congruence] 
#590 := (= #589 0) [r 8448] [b156 := T] [j 8534 congruence] 
#591 := (* Nl4arg121 lam2n17) [r 87] [p 593] [t 5:345] [j 543 congruence] 
#592 := (* Nl4arg122 lam2n18) [r 87] [p 593] [t 5:346] [j 544 congruence] 
#593 := (+ #591 #592) [r 87] [p 594] [t 5:347] [j 8478 congruence] 
#594 := (= #593 0) [r 8448] [b157 := T] [j 8534 congruence] 
#595 := (* Nl4arg131 lam2n17) [r 87] [p 597] [t 5:348] [j 543 congruence] 
#596 := (* Nl4arg132 lam2n18) [r 87] [p 597] [t 5:349] [j 544 congruence] 
#597 := (+ #595 #596) [r 87] [p 598] [t 5:350] [j 8478 congruence] 
#598 := (= #597 0) [r 8448] [b158 := T] [j 8534 congruence] 
#1919 := (= Nl4arg62 0) [r 8448] [b159 := T] [j 8534 congruence] 
#1915 := (* -1 Nl4arg52) [r 87] [p 3308 3309 8727] [t 5:351] [j 87 sat: 858] 
#1920 := (* -1 Nl4arg72) [r 87] [p 3308] [t 5:352] [j 1895 congruence] 
#3308 := (+ #1915 #1920) [r 87] [p 3309 8727] [t 5:353] [j 1915 arith 64 == 87 64 == 87 --> 1915 == 3308] 
#3309 := (= #3308 0) [r 8448] [b160 := T] [j 8534 congruence] 
#1924 := (= Nl4arg82 0) [r 8448] [b161 := T] [j 8534 congruence] 
#1926 := (= Nl4arg92 0) [r 8448] [b162 := T] [j 8509 congruence] 
#1928 := (= Nl4arg102 0) [r 8448] [b163 := T] [j 8834 congruence] 
#1930 := (= Nl4arg112 0) [r 8448] [b164 := T] [j 8534 congruence] 
#1932 := (= Nl4arg122 0) [r 8448] [b165 := T] [j 8534 congruence] 
#1934 := (= Nl4arg132 0) [r 8448] [b166 := T] [j 8534 congruence] 
#3337 := (>= #3336 0) [b167 := F no-cgc] [t 5:359] 
#825 := lam4n16 [p 851 857 863 880 846 874 869 839 884 888 892 896 900 904] [t 5:355] 
#851 := (* Nl4arg21 lam4n16) [p 3336 1940] [t 5:354] 
#827 := lam4n17 [p 852 858 864 875 881 847 870 840 885 889 893 897 901 905] [t 5:357] 
#852 := (* Nl4arg22 lam4n17) [p 3336 1940] [t 5:356] 
#3336 := (+ #851 #852 #1786) [t 5:358] 
#662 := (>= lam3n0 0) [b168 := T no-cgc] [t 5:361] 
#661 := lam3n0 [r 158] [p 1950 1958] [t 5:360] [j 86 arith 321 -429 86 566 184 567 426 427 320 158 == 720 158 == 720 87 == 1959 87 == 1959 --> 86 == 661] 
#664 := (>= lam3n1 0) [b169 := T no-cgc] [t 5:363] 
#663 := lam3n1 [r 1961] [p 1965] [t 5:362] [j 1961 arith 427 356 491 492 325 342 184 252 539 259 426 320 336 87 == 1966 87 == 1966 --> 663 == 1961] 
#666 := (>= lam3n2 0) [b170 := T no-cgc] [t 5:365] 
#665 := lam3n2 [r 87] [p 1978] [t 5:364] [j 87 sat: 201] 
#668 := (>= lam3n3 0) [b171 := T no-cgc] [t 5:367] 
#667 := lam3n3 [r 87] [p 1979] [t 5:366] [j 87 sat: 202] 
#670 := (>= lam3n4 0) [b172 := T no-cgc] [t 5:369] 
#669 := lam3n4 [p 1982] [t 5:368] 
#672 := (>= lam3n5 0) [b173 := T no-cgc] [t 5:371] 
#671 := lam3n5 [r 87] [p 1986] [t 5:370] [j 87 sat: 205] 
#674 := (>= lam3n6 0) [b174 := T no-cgc] [t 5:373] 
#673 := lam3n6 [r 87] [p 1987] [t 5:372] [j 87 sat: 206] 
#676 := (>= lam3n7 0) [b175 := T no-cgc] [t 5:375] 
#675 := lam3n7 [p 698 1953 1972] [t 5:374] 
#678 := (>= lam3n8 0) [b176 := T no-cgc] [t 5:377] 
#677 := lam3n8 [p 699 1954 1974] [t 5:376] 
#680 := (>= lam3n9 0) [b177 := T no-cgc] [t 5:379] 
#679 := lam3n9 [p 700 1961] [t 5:378] 
#682 := (>= lam3n10 0) [b178 := T no-cgc] [t 5:381] 
#681 := lam3n10 [r 1961] [p 701 1962 1966] [t 5:380] [j 1961 arith 491 356 342 252 259 336 492 --> 681 == 1961] 
#684 := (>= lam3n11 0) [b179 := T no-cgc] [t 5:383] 
#683 := lam3n11 [p 702 1968] [t 5:382] 
#686 := (>= lam3n12 0) [b180 := T no-cgc] [t 5:385] 
#685 := lam3n12 [p 703 1955] [t 5:384] 
#688 := (>= lam3n13 0) [b181 := T no-cgc] [t 5:387] 
#687 := lam3n13 [r 87] [p 704 1977] [t 5:386] [j 87 sat: 200] 
#690 := (>= lam3n14 0) [b182 := T no-cgc] [t 5:389] 
#689 := lam3n14 [p 705 1976] [t 5:388] 
#692 := (>= lam3n15 0) [b183 := T no-cgc] [t 5:391] 
#691 := lam3n15 [p 706 1969 1974] [t 5:390] 
#694 := (>= lam3n16 0) [b184 := T no-cgc] [t 5:393] 
#693 := lam3n16 [r 87] [p 707 714 719 725 731 737 742 748 752 756 760 764 768 772 8391 8425 8946] [t 5:392] [j 87 arith 320 184 --> 87 == 693] 
#696 := (>= lam3n17 0) [b185 := T no-cgc] [t 5:395] 
#695 := lam3n17 [r 125] [p 708 715 720 726 732 738 743 749 753 757 761 765 769 773 8385 8470 8484] [t 5:394] [j 125 sat: 396] 
#1951 := (<= #1950 1) [b186 := F no-cgc] [t 5:399] 
#708 := (* Nl4CT2 lam3n17) [r 87] [p 1950 8384 8484] [t 5:396] [j 144 arith 427 426 --> 144 == 708] 
#707 := (* Nl4CT1 lam3n16) [r 87] [p 1950 8392] [t 5:397] [j 143 congruence] 
#706 := (* 536870914 lam3n15) [p 1950] 
#705 := (* 4 lam3n14) [p 1950] 
#704 := (* 4 lam3n13) [p 1950 3206 1745 3206] 
#703 := (* 4 lam3n12) [p 1950] 
#702 := (* 2 lam3n11) [p 1950] 
#701 := (* 2 lam3n10) [p 1950] 
#700 := (* 2 lam3n9) [p 1950] 
#699 := (* 3 lam3n8) [p 1950] 
#698 := (* 3 lam3n7) [p 1950] 
#1950 := (+ lam3n0 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708) [t 5:398] 
#1953 := (* -1 lam3n7) [p 1956] [t 5:400] 
#1954 := (* -1 lam3n8) [p 1956] [t 5:401] 
#1955 := (* -1 lam3n12) [p 1956] [t 5:402] 
#714 := (* Nl4arg11 lam3n16) [r 87] [p 1956 8461] [t 5:403] [j 152 congruence] 
#715 := (* Nl4arg12 lam3n17) [r 87] [p 1956 8448] [t 5:404] [j 726 congruence] 
#1956 := (+ #1953 #1954 #1955 #714 #715) [r 87] [p 1957] [t 5:405] [j 87 sat: 187] 
#1957 := (= #1956 0) [r 8448] [b187 := T] [j 8534 congruence] 
#1958 := (* -1 lam3n0) [r 1753] [p 1959] [t 5:406] [j 1753 arith 321 -429 86 184 566 567 426 320 427 158 == 720 158 == 720 87 == 1959 87 == 1959 --> 1753 == 1958] 
#719 := (* Nl4arg21 lam3n16) [r 87] [p 1959] [t 5:407] [j 157 congruence] 
#720 := (* Nl4arg22 lam3n17) [r 158] [p 1959 8454] [t 5:408] [j 158 congruence] 
#1959 := (+ #1958 #719 #720) [r 87] [p 1960] [t 5:409] [j 87 sat: 188] 
#1960 := (= #1959 0) [r 8448] [b188 := T] [j 8534 congruence] 
#1961 := (* -1 lam3n9) [p 1963 701 1962 1966 8946] [t 5:410] 
#1962 := (* -1 lam3n10) [p 1963 1966 8946] [t 5:411] 
#725 := (* Nl4arg31 lam3n16) [r 87] [p 1963] [t 5:412] [j 87 arith 356 252 --> 87 == 725] 
#726 := (* Nl4arg32 lam3n17) [r 87] [p 1963] [t 5:413] [j 87 arith 336 259 --> 87 == 726] 
#1963 := (+ #1961 #1962 #725 #726) [r 87] [p 1964] [t 5:414] [j 87 sat: 189] 
#1964 := (= #1963 0) [r 8448] [b189 := T] [j 8534 congruence] 
#1965 := (* -1 lam3n1) [r 1962] [p 1966 8946] [t 5:415] [j 1962 arith 427 491 356 492 325 342 252 184 539 259 426 336 320 87 == 1966 87 == 1966 --> 1962 == 1965] 
#731 := (* Nl4arg41 lam3n16) [r 87] [p 1966 8425 8946] [t 5:416] [j 169 congruence] 
#732 := (* Nl4arg42 lam3n17) [r 87] [p 1966 8472] [t 5:417] [j 55 arith 427 426 --> 55 == 732] 
#1966 := (+ #1965 lam3n10 #731 #732) [r 87] [p 1967] [t 5:418] [j 87 sat: 190] 
#1967 := (= #1966 0) [r 8448] [b190 := T] [j 8534 congruence] 
#1968 := (* -1 lam3n11) [p 1970] [t 5:419] 
#1969 := (* -1 lam3n15) [p 1970 1980 1983] [t 5:420] 
#737 := (* Nl4arg51 lam3n16) [r 87] [p 1970 8465] [t 5:421] [j 175 congruence] 
#738 := (* Nl4arg52 lam3n17) [r 87] [p 1970 8449] [t 5:422] [j 176 congruence] 
#1970 := (+ #1968 #1969 #737 #738) [r 87] [p 1971] [t 5:423] [j 87 sat: 191] 
#1971 := (= #1970 0) [r 8448] [b191 := T] [j 8534 congruence] 
#742 := (* Nl4arg61 lam3n16) [r 87] [p 1972] [t 5:424] [j 180 congruence] 
#743 := (* Nl4arg62 lam3n17) [r 87] [p 1972] [t 5:425] [j 61 arith 427 426 --> 61 == 743] 
#1972 := (+ lam3n7 #742 #743) [r 87] [p 1973] [t 5:426] [j 87 sat: 192] 
#1973 := (= #1972 0) [r 8448] [b192 := T] [j 8534 congruence] 
#748 := (* Nl4arg71 lam3n16) [r 87] [p 1974 8446 8806 8904] [t 5:427] [j 186 congruence] 
#749 := (* Nl4arg72 lam3n17) [r 87] [p 1974 8462] [t 5:428] [j 726 congruence] 
#1974 := (+ lam3n8 lam3n15 #748 #749) [r 87] [p 1975] [t 5:429] [j 87 sat: 193] 
#1975 := (= #1974 0) [r 8448] [b193 := T] [j 8534 congruence] 
#752 := (* Nl4arg81 lam3n16) [r 87] [p 754] [t 5:430] [j 87 arith 321 86 87 == 192 87 == 192 191 == 753 191 == 753 87 == 754 87 == 754 --> 87 == 752] 
#753 := (* Nl4arg82 lam3n17) [r 87] [p 754] [t 5:431] [j 191 congruence] 
#754 := (+ #752 #753) [r 87] [p 755] [t 5:432] [j 87 sat: 194] 
#755 := (= #754 0) [r 8448] [b194 := T] [j 8534 congruence] 
#756 := (* Nl4arg91 lam3n16) [r 87] [p 758 8446 8464 8805 8863] [t 5:433] [j 87 arith 321 86 87 == 758 87 == 758 87 == 196 195 == 757 195 == 757 87 == 196 --> 87 == 756] 
#757 := (* Nl4arg92 lam3n17) [r 87] [p 758 8449 8462 8463] [t 5:434] [j 195 congruence] 
#758 := (+ #756 #757) [r 87] [p 759] [t 5:435] [j 87 sat: 195] 
#759 := (= #758 0) [r 8448] [b195 := T] [j 8534 congruence] 
#760 := (* Nl4arg101 lam3n16) [r 87] [p 762] [t 5:436] [j 87 arith 321 86 87 == 762 87 == 762 87 == 200 87 == 200 199 == 761 199 == 761 --> 87 == 760] 
#761 := (* Nl4arg102 lam3n17) [r 87] [p 762] [t 5:437] [j 73 arith 427 426 --> 73 == 761] 
#762 := (+ #760 #761) [r 87] [p 763] [t 5:438] [j 87 sat: 196] 
#763 := (= #762 0) [r 8448] [b196 := T] [j 8534 congruence] 
#764 := (* Nl4arg111 lam3n16) [r 87] [p 766] [t 5:439] [j 202 arith 87 == 766 87 == 766 76 == 203 76 == 203 87 == 204 87 == 204 203 == 765 203 == 765 --> 202 == 764] 
#765 := (* Nl4arg112 lam3n17) [r 87] [p 766] [t 5:440] [j 203 congruence] 
#766 := (+ #764 #765) [r 87] [p 767] [t 5:441] [j 87 sat: 197] 
#767 := (= #766 0) [r 8448] [b197 := T] [j 8534 congruence] 
#768 := (* Nl4arg121 lam3n16) [r 87] [p 770] [t 5:442] [j 206 arith 207 == 769 207 == 769 79 == 207 79 == 207 87 == 770 87 == 770 87 == 208 87 == 208 --> 206 == 768] 
#769 := (* Nl4arg122 lam3n17) [r 87] [p 770] [t 5:443] [j 207 congruence] 
#770 := (+ #768 #769) [r 87] [p 771] [t 5:444] [j 87 sat: 198] 
#771 := (= #770 0) [r 8448] [b198 := T] [j 8534 congruence] 
#772 := (* Nl4arg131 lam3n16) [r 87] [p 774] [t 5:445] [j 87 arith 658 659 426 427 87 == 774 87 == 774 --> 87 == 772] 
#773 := (* Nl4arg132 lam3n17) [r 87] [p 774] [t 5:446] [j 82 arith 427 426 --> 82 == 773] 
#774 := (+ #772 #773) [r 87] [p 775] [t 5:447] [j 87 sat: 199] 
#775 := (= #774 0) [r 8448] [b199 := T] [j 8534 congruence] 
#1977 := (= lam3n13 0) [r 8448] [b200 := T] [j 8534 congruence] 
#1978 := (= lam3n2 0) [r 8448] [b201 := T] [j 8534 congruence] 
#1979 := (= lam3n3 0) [r 8448] [b202 := T] [j 8534 congruence] 
#1976 := (* -1 lam3n14) [p 1980] [t 5:448] 
#1980 := (+ #1976 #1969) [r 87] [p 1981] [t 5:449] [j 87 sat: 203] 
#1981 := (= #1980 0) [r 8448] [b203 := T] [j 8534 congruence] 
#1982 := (* -1 lam3n4) [p 1983] [t 5:450] 
#1983 := (+ #1982 #1969) [r 87] [p 1984] [t 5:451] [j 87 sat: 204] 
#1984 := (= #1983 0) [r 8448] [b204 := T] [j 8534 congruence] 
#1986 := (= lam3n5 0) [r 8448] [b205 := T] [j 8534 congruence] 
#1987 := (= lam3n6 0) [r 8448] [b206 := T] [j 8534 congruence] 
#3368 := (>= #3367 0) [b207 := F no-cgc] [t 5:458] 
#811 := lam4n9 [p 2002] [t 5:452] 
#857 := (* Nl4arg31 lam4n16) [r 87] [p 3367 3351 3441] [t 5:453] [j 87 arith 356 252 --> 87 == 857] 
#858 := (* Nl4arg32 lam4n17) [r 87] [p 3367 3351 3442] [t 5:454] [j 87 arith 336 259 --> 87 == 858] 
#863 := (* Nl4arg41 lam4n16) [p 3367] [t 5:455] 
#864 := (* Nl4arg42 lam4n17) [r 87] [p 3367] [t 5:456] [j 858 congruence] 
#2002 := (* -1 lam4n9) [p 3367 3351] 
#3367 := (+ #2002 #857 #858 #1814 #863 #864 #1818) [t 5:457] 
#1892 := (>= #1891 0) [b208 := T no-cgc] [t 5:467] 
#875 := (* Nl4arg62 lam4n17) [r 87] [p 1891 2029 1898 1890 1916] [t 5:459] [j 858 congruence] 
#880 := (* Nl4arg71 lam4n16) [r 87] [p 1891 1890 3386 1907] [t 5:460] [j 857 congruence] 
#881 := (* Nl4arg72 lam4n17) [r 87] [p 1891 1890 3389 1908] [t 5:461] [j 858 congruence] 
#817 := lam4n12 [p 1996 1903 1935] [t 5:462] 
#846 := (* Nl4arg11 lam4n16) [r 87] [p 1891 1898 1890 2018 1938] [t 5:463] [j 857 congruence] 
#847 := (* Nl4arg12 lam4n17) [r 87] [p 1891 1898 1890 2024 1939] [t 5:464] [j 858 congruence] 
#874 := (* Nl4arg61 lam4n16) [r 87] [p 1891 2026 1898 1890 1913] [t 5:465] [j 857 congruence] 
#1996 := (* -1 lam4n12) [p 1891 1898 1890] 
#1891 := (+ #880 #881 #1996 #846 #847 #874 #875) [r 1898] [t 5:466] [j 1898 arith 118 -343 366 147 87 == 880 87 == 881 87 == 881 87 == 875 87 == 875 87 == 874 87 == 874 87 == 880 --> 1891 == 1898] 
#1897 := (>= #1896 0) [b209 := T no-cgc] [t 5:469] 
#2026 := (* -1 #874) [r 87] [p 1896 1903] [j 1895 congruence] 
#2029 := (* -1 #875) [r 87] [p 1896 1903] [j 1895 congruence] 
#1896 := (+ #2026 #2029) [r 87] [t 5:468] [j 8478 congruence] 
#1900 := (>= #1898 0) [b210 := T no-cgc] [t 5:471] 
#1898 := (+ #1996 #846 #847 #874 #875) [t 5:470] 
#812 := (>= lam4n9 0) [b211 := T no-cgc] [t 5:472] 
#3415 := (>= #3351 0) [b212 := T no-cgc] [t 5:474] 
#3351 := (+ #2002 #857 #858 #1814) [t 5:473] 
#1901 := (>= #1890 0) [b213 := T no-cgc] [t 5:478] 
#869 := (* Nl4arg51 lam4n16) [r 87] [p 1890 1936] [t 5:475] [j 857 congruence] 
#870 := (* Nl4arg52 lam4n17) [r 87] [p 1890 1937] [t 5:476] [j 858 congruence] 
#1890 := (+ #869 #870 #880 #881 #1996 #846 #847 #874 #875) [r 1898] [t 5:477] [j 1898 arith 87 == 870 87 == 870 87 == 881 87 == 881 87 == 869 87 == 869 87 == 880 87 == 880 --> 1890 == 1898] 
#818 := (>= lam4n12 0) [b214 := T no-cgc] [t 5:479] 
#1904 := (>= #1903 0) [b215 := T no-cgc] [t 5:481] 
#2024 := (* -1 #847) [r 87] [p 1903] [j 1895 congruence] 
#2018 := (* -1 #846) [r 87] [p 1903] [j 1895 congruence] 
#3389 := (* -1 #881) [r 87] [p 1903] [j 1895 congruence] 
#3386 := (* -1 #880) [r 87] [p 1903] [j 1895 congruence] 
#1903 := (+ #3386 #3389 lam4n12 #2018 #2024 #2026 #2029) [t 5:480] 
#826 := (>= lam4n16 0) [b216 := F no-cgc] [t 5:482] 
#828 := (>= lam4n17 0) [b217 := T no-cgc] [t 5:483] 
#1941 := (<= #1940 -1) [b218 := F no-cgc] [t 5:487] 
#839 := (* Nl4CT1 lam4n16) [p 1940] [t 5:484] 
#840 := (* Nl4CT2 lam4n17) [r 87] [p 1940] [t 5:485] [j 858 congruence] 
#3442 := (* 2 #858) [r 87] [p 1940] [j 8526 congruence] 
#3441 := (* 2 #857) [r 87] [p 1940] [j 8526 congruence] 
#3459 := -536870908 [p 1916 1913 1908 1907 3168 3160 3799 3797] 
#1916 := (* -536870908 #875) [r 3799] [p 1940] [j 1908 congruence] 
#1913 := (* -536870908 #874) [r 3799] [p 1940] [j 1908 congruence] 
#4122 := -536870905 [p 1939 1938 3303 3226 4123 4149] 
#1939 := (* -536870905 #847) [r 3303] [p 1940] [j 3303 congruence] 
#1938 := (* -536870905 #846) [r 3303] [p 1940] [j 1939 congruence] 
#1098 := 536870909 [p 1935 3189] 
#1935 := (* 536870909 lam4n12) [p 1940] 
#1908 := (* -536870908 #881) [r 3799] [p 1940] [j 3799 congruence] 
#1907 := (* -536870908 #880) [r 3799] [p 1940] [j 1908 congruence] 
#1937 := (* 2 #870) [r 87] [p 1940] [j 8526 congruence] 
#1936 := (* 2 #869) [r 87] [p 1940] [j 8526 congruence] 
#1940 := (+ #851 #852 #1936 #1937 #1907 #1908 #1935 #1938 #1939 #1913 #1916 #3441 #3442 #3083 #3086 #839 ...) [t 5:486] 
#884 := (* Nl4arg81 lam4n16) [r 87] [p 886] [t 5:488] [j 857 congruence] 
#885 := (* Nl4arg82 lam4n17) [r 87] [p 886] [t 5:489] [j 858 congruence] 
#886 := (+ #884 #885) [r 87] [p 887] [t 5:490] [j 8478 congruence] 
#887 := (= #886 0) [r 8448] [b219 := T] [j 8534 congruence] 
#888 := (* Nl4arg91 lam4n16) [r 87] [p 890] [t 5:491] [j 857 congruence] 
#889 := (* Nl4arg92 lam4n17) [r 87] [p 890] [t 5:492] [j 858 congruence] 
#890 := (+ #888 #889) [r 87] [p 891] [t 5:493] [j 8478 congruence] 
#891 := (= #890 0) [r 8448] [b220 := T] [j 8534 congruence] 
#892 := (* Nl4arg101 lam4n16) [p 894] [t 5:494] 
#893 := (* Nl4arg102 lam4n17) [r 87] [p 894 8766] [t 5:495] [j 87 sat: 741] 
#894 := (+ #892 #893) [p 895] [t 5:496] 
#895 := (= #894 0) [b221 := F] 
#896 := (* Nl4arg111 lam4n16) [r 87] [p 898] [t 5:497] [j 857 congruence] 
#897 := (* Nl4arg112 lam4n17) [r 87] [p 898] [t 5:498] [j 858 congruence] 
#898 := (+ #896 #897) [r 87] [p 899] [t 5:499] [j 8478 congruence] 
#899 := (= #898 0) [r 8448] [b222 := T] [j 8534 congruence] 
#900 := (* Nl4arg121 lam4n16) [r 87] [p 902] [t 5:500] [j 857 congruence] 
#901 := (* Nl4arg122 lam4n17) [r 87] [p 902] [t 5:501] [j 858 congruence] 
#902 := (+ #900 #901) [r 87] [p 903] [t 5:502] [j 8478 congruence] 
#903 := (= #902 0) [r 8448] [b223 := T] [j 8534 congruence] 
#904 := (* Nl4arg131 lam4n16) [r 87] [p 906] [t 5:503] [j 857 congruence] 
#905 := (* Nl4arg132 lam4n17) [r 87] [p 906] [t 5:504] [j 858 congruence] 
#906 := (+ #904 #905) [r 87] [p 907] [t 5:505] [j 8478 congruence] 
#907 := (= #906 0) [r 8448] [b224 := T] [j 8534 congruence] 
#2020 := (= Nl4arg51 0) [r 8448] [b225 := T] [j 8534 congruence] 
#2021 := (= Nl4arg71 0) [r 8448] [b226 := T] [j 8534 congruence] 
#3502 := (>= #3501 0) [b227 := F no-cgc] [t 5:511] 
#961 := lam5n16 [r 125] [p 987 993 999 1016 982 1010 1005 975 1020 1024 1028 1032 1036 1040 8389] [t 5:507] [j 125 sat: 410] 
#987 := (* Nl4arg21 lam5n16) [r 10] [p 3501 2952] [t 5:506] [j 10 arith -338 533 --> 10 == 987] 
#963 := lam5n17 [r 87] [p 988 994 1000 1011 1017 983 1006 976 1021 1025 1029 1033 1037 1041 8478 8519] [t 5:509] [j 87 arith 340 238 --> 87 == 963] 
#988 := (* Nl4arg22 lam5n17) [r 87] [p 3501 2952] [t 5:508] [j 87 arith 238 340 --> 87 == 988] 
#3501 := (+ #987 #988 #1867) [t 5:510] 
#3533 := (>= #3532 0) [b228 := T no-cgc] [t 5:518] 
#947 := lam5n9 [p 2048] [t 5:512] 
#993 := (* Nl4arg31 lam5n16) [r 87] [p 3532 3516 3606 8413] [t 5:513] [j 87 arith 356 252 --> 87 == 993] 
#994 := (* Nl4arg32 lam5n17) [r 87] [p 3532 3516 3607 8400] [t 5:514] [j 87 arith 336 259 --> 87 == 994] 
#999 := (* Nl4arg41 lam5n16) [r 16] [p 3532] [t 5:515] [j 16 arith -338 533 --> 16 == 999] 
#1000 := (* Nl4arg42 lam5n17) [r 87] [p 3532 8520 8592] [t 5:516] [j 87 arith 238 340 --> 87 == 1000] 
#2048 := (* -1 lam5n9) [p 3532 3516] 
#3532 := (+ #2048 #993 #994 #1895 #999 #1000 #1899) [t 5:517] 
#1854 := (>= #1856 0) [b229 := F no-cgc] [t 5:527] 
#1011 := (* Nl4arg62 lam5n17) [r 87] [p 1856 1823 1860 1855 3168 8403] [t 5:519] [j 87 arith 238 340 --> 87 == 1011] 
#1016 := (* Nl4arg71 lam5n16) [r 87] [p 1856 1855 3551 3797 8396] [t 5:520] [j 25 arith -338 533 --> 25 == 1016] 
#1017 := (* Nl4arg72 lam5n17) [r 87] [p 1856 1855 3554 3799 8401] [t 5:521] [j 994 congruence] 
#953 := lam5n12 [p 2042 1864 3189] [t 5:522] 
#982 := (* Nl4arg11 lam5n16) [r 87] [p 1856 1860 1855 1810 3226 8402 8412] [t 5:523] [j 87 sat: 423] 
#983 := (* Nl4arg12 lam5n17) [r 87] [p 1856 1860 1855 1815 3303] [t 5:524] [j 994 congruence] 
#1010 := (* Nl4arg61 lam5n16) [r 87] [p 1856 1819 1860 1855 3160 8406] [t 5:525] [j 22 arith -338 533 --> 22 == 1010] 
#2042 := (* -1 lam5n12) [p 1856 1860 1855] 
#1856 := (+ #1016 #1017 #2042 #982 #983 #1010 #1011) [t 5:526] 
#1859 := (>= #1858 0) [b230 := T no-cgc] [t 5:529] 
#1819 := (* -1 #1010) [r 87] [p 1858 1864] [j 1895 congruence] 
#1823 := (* -1 #1011) [r 87] [p 1858 1864] [j 1895 congruence] 
#1858 := (+ #1819 #1823) [r 87] [t 5:528] [j 8478 congruence] 
#1861 := (>= #1860 0) [b231 := F no-cgc] [t 5:531] 
#1860 := (+ #2042 #982 #983 #1010 #1011) [t 5:530] 
#948 := (>= lam5n9 0) [b232 := T no-cgc] [t 5:532] 
#3580 := (>= #3516 0) [b233 := T no-cgc] [t 5:534] 
#3516 := (+ #2048 #993 #994 #1895) [t 5:533] 
#1863 := (>= #1855 0) [b234 := F no-cgc] [t 5:538] 
#1005 := (* Nl4arg51 lam5n16) [r 87] [p 1855 3232 8398] [t 5:535] [j 19 arith -338 533 --> 19 == 1005] 
#1006 := (* Nl4arg52 lam5n17) [r 87] [p 1855 3234 8404] [t 5:536] [j 87 arith 238 340 --> 87 == 1006] 
#1855 := (+ #1005 #1006 #1016 #1017 #2042 #982 #983 #1010 #1011) [t 5:537] 
#954 := (>= lam5n12 0) [b235 := T no-cgc] [t 5:539] 
#1862 := (>= #1864 0) [b236 := T no-cgc] [t 5:541] 
#1815 := (* -1 #983) [r 87] [p 1864] [j 1895 congruence] 
#1810 := (* -1 #982) [r 87] [p 1864 4096 4156] [j 1830 congruence] 
#3554 := (* -1 #1017) [r 87] [p 1864] [j 1895 congruence] 
#3551 := (* -1 #1016) [r 87] [p 1864 3117 8827] [t 5:287] [j 1839 congruence] 
#1864 := (+ #3551 #3554 lam5n12 #1810 #1815 #1819 #1823) [t 5:540] 
#962 := (>= lam5n16 0) [b237 := T no-cgc] [t 5:542] 
#964 := (>= lam5n17 0) [b238 := T no-cgc] [t 5:543] 
#3735 := (<= #2952 -1) [b239 := F no-cgc] [t 5:547] 
#975 := (* Nl4CT1 lam5n16) [r 142] [p 2952 8390] [t 5:544] [j 142 arith -338 533 --> 142 == 975] 
#976 := (* Nl4CT2 lam5n17) [r 87] [p 2952 8429 8478] [t 5:545] [j 87 arith -603 387 --> 87 == 976] 
#3607 := (* 2 #994) [r 87] [p 2952] [j 8526 congruence] 
#3606 := (* 2 #993) [r 87] [p 2952] [j 8526 congruence] 
#3168 := (* -536870908 #1011) [r 3799] [p 2952] [j 1908 congruence] 
#3160 := (* -536870908 #1010) [r 3799] [p 2952] [j 1908 congruence] 
#3303 := (* -536870905 #983) [p 2952 1940 2952 1940] 
#3226 := (* -536870905 #982) [r 3303] [p 2952] [j 1939 congruence] 
#3189 := (* 536870909 lam5n12) [p 2952] 
#3799 := (* -536870908 #1017) [p 2952 1940 2952 2952 1940 1940 2952 1940] 
#3797 := (* -536870908 #1016) [r 3799] [p 2952] [j 1908 congruence] 
#3234 := (* 2 #1006) [r 87] [p 2952] [j 8526 congruence] 
#3232 := (* 2 #1005) [r 87] [p 2952] [j 8526 congruence] 
#2952 := (+ #987 #988 #3232 #3234 #3797 #3799 #3189 #3226 #3303 #3160 #3168 #3606 #3607 #3277 #3279 #975 ...) [t 5:546] 
#1020 := (* Nl4arg81 lam5n16) [r 87] [p 1022 8395] [t 5:548] [j 28 arith -338 533 --> 28 == 1020] 
#1021 := (* Nl4arg82 lam5n17) [r 87] [p 1022 8397] [t 5:549] [j 87 arith 238 340 --> 87 == 1021] 
#1022 := (+ #1020 #1021) [r 87] [p 1023] [t 5:550] [j 8478 congruence] 
#1023 := (= #1022 0) [r 8448] [b240 := T] [j 8534 congruence] 
#1024 := (* Nl4arg91 lam5n16) [r 87] [p 1026 8395 8396 8398 8402 8406 8413] [t 5:551] [j 31 arith -338 533 --> 31 == 1024] 
#1025 := (* Nl4arg92 lam5n17) [r 87] [p 1026 8397 8400 8401 8403 8404] [t 5:552] [j 87 arith 238 340 --> 87 == 1025] 
#1026 := (+ #1024 #1025) [r 87] [p 1027] [t 5:553] [j 8857 arith 86 321 238 -338 340 533 --> 1026 == 8857] 
#1027 := (= #1026 0) [r 8448] [b241 := T] [j 1845 congruence] 
#1028 := (* Nl4arg101 lam5n16) [r 34] [p 1030] [t 5:554] [j 34 arith -338 533 --> 34 == 1028] 
#1029 := (* Nl4arg102 lam5n17) [r 87] [p 1030 8764] [t 5:555] [j 87 arith 238 340 --> 87 == 1029] 
#1030 := (+ #1028 #1029) [p 1031] [t 5:556] 
#1031 := (= #1030 0) [b242 := F] 
#1032 := (* Nl4arg111 lam5n16) [r 87] [p 1034] [t 5:557] [j 37 arith -338 533 --> 37 == 1032] 
#1033 := (* Nl4arg112 lam5n17) [r 87] [p 1034] [t 5:558] [j 87 arith 238 340 --> 87 == 1033] 
#1034 := (+ #1032 #1033) [r 87] [p 1035] [t 5:559] [j 1032 arith 238 -338 340 533 --> 1032 == 1034] 
#1035 := (= #1034 0) [r 8448] [b243 := T] [j 1849 congruence] 
#1036 := (* Nl4arg121 lam5n16) [r 87] [p 1038] [t 5:560] [j 40 arith -338 533 --> 40 == 1036] 
#1037 := (* Nl4arg122 lam5n17) [r 87] [p 1038] [t 5:561] [j 87 arith 238 340 --> 87 == 1037] 
#1038 := (+ #1036 #1037) [r 87] [p 1039] [t 5:562] [j 1036 arith 238 -338 340 533 --> 1036 == 1038] 
#1039 := (= #1038 0) [r 8448] [b244 := T] [j 1851 congruence] 
#1040 := (* Nl4arg131 lam5n16) [r 87] [p 1042] [t 5:563] [j 43 arith -338 533 --> 43 == 1040] 
#1041 := (* Nl4arg132 lam5n17) [r 87] [p 1042 8756] [t 5:564] [j 87 arith 238 340 --> 87 == 1041] 
#1042 := (+ #1040 #1041) [r 87] [p 1043] [t 5:565] [j 87 sat: 245] 
#1043 := (= #1042 0) [r 8448] [b245 := T] [j 8534 congruence] 
#2066 := (= Nl4arg52 0) [r 8448] [b246 := T] [j 8511 congruence] 
#2067 := (= Nl4arg72 0) [r 8448] [b247 := T] [j 8534 congruence] 
#3806 := (>= #3805 0) [b248 := T no-cgc] [t 5:571] 
#1218 := lam10n20 [p 1247 1242 1278 1271 1253 1259 1265 1234 1282 1286 1290 1294 1298 1302] [t 5:567] 
#1247 := (* Nl4arg22 lam10n20) [p 3805 3206 8591] [t 5:566] 
#1216 := lam10n19 [r 87] [p 1246 1277 1270 1241 1258 1252 1264 1233 1281 1285 1289 1293 1297 1301] [t 5:569] [j 87 arith 852 289 --> 87 == 1216] 
#1246 := (* Nl4arg21 lam10n19) [r 87] [p 3805 3206 8584 1754] [t 5:568] [j 157 congruence] 
#3805 := (+ #1246 #1247) [t 5:570] 
#4107 := (>= #4096 0) [b249 := T no-cgc] [t 5:574] 
#1489 := lam6n8 [p 2242 4098] [t 5:572] 
#2242 := (* -1 lam6n8) [p 4096] 
#1830 := (* -1 Nl4arg11) [r 87] [p 4096 4156] [j 1895 congruence] 
#4096 := (+ #2242 #1830) [t 5:573] 
#4109 := (<= Nl4arg21 0) [b250 := F no-cgc] [t 5:575] 
#1486 := (>= lam6n6 0) [b251 := T no-cgc] [t 5:577] 
#1485 := lam6n6 [p 4123] [t 5:576] 
#4114 := (<= Nl4arg31 0) [b252 := T no-cgc] [t 5:578] 
#4115 := (>= #4098 0) [b253 := T no-cgc] [t 5:580] 
#4098 := (+ lam6n8 Nl4arg11) [t 5:579] 
#1490 := (>= lam6n8 0) [b254 := T no-cgc] [t 5:581] 
#4119 := (<= #4124 -1) [b255 := F no-cgc] [t 5:583] 
#2230 := -16 [p 2231 2272] 
#2231 := (* -16 Nl4arg51) [p 4124 4172 4150 4194 8561] [t 5:872] 
#4123 := (* -536870905 lam6n6) [p 4124] 
#4120 := -15 [p 4121 4148] 
#4121 := (* -15 Nl4arg11) [r 87] [p 4124 4172] [j 4148 congruence] 
#2232 := -12 [p 2233 2273] 
#2233 := (* -12 Nl4arg71) [p 4124 4172 4150 4194 8561] [t 5:873] 
#4124 := (+ #4121 #3083 #4123 #1791 #1818 #2231 #2233) [t 5:582] 
#4135 := (>= #4130 0) [b256 := T no-cgc] [t 5:586] 
#1552 := lam7n8 [p 2282 4129] [t 5:584] 
#2282 := (* -1 lam7n8) [p 4130] 
#1911 := (* -1 Nl4arg12) [r 87] [p 4130 4179 3187 3170 3532 3516 1903 1864 3308 1903 1864 3830 3844 8727 8827 8835 8774] [t 5:352] [j 1895 congruence] 
#4130 := (+ #2282 #1911) [t 5:585] 
#4137 := (<= Nl4arg22 0) [b257 := F no-cgc] [t 5:587] 
#1549 := (>= lam7n6 0) [b258 := F no-cgc] [t 5:589] 
#1548 := lam7n6 [p 4149] [t 5:588] 
#4142 := (<= Nl4arg32 0) [b259 := T no-cgc] [t 5:590] 
#4143 := (>= #4129 0) [b260 := T no-cgc] [t 5:592] 
#4129 := (+ lam7n8 Nl4arg12) [t 5:591] 
#1553 := (>= lam7n8 0) [b261 := T no-cgc] [t 5:593] 
#4147 := (<= #4150 -1) [b262 := F no-cgc] [t 5:595] 
#2272 := (* -16 Nl4arg52) [r 2231] [p 4150 4194 8561] [t 5:872] [j 2231 congruence] 
#4149 := (* -536870905 lam7n6) [p 4150] 
#4148 := (* -15 Nl4arg12) [r 87] [p 4150 4194 8561] [t 5:870] [j 87 arith -343 147 --> 87 == 4148] 
#2273 := (* -12 Nl4arg72) [r 2233] [p 4150 4194 8561] [t 5:873] [j 2233 congruence] 
#4150 := (+ #4148 #3277 #4149 #1872 #1899 #2272 #2273) [t 5:594] 
#4161 := (>= #4156 0) [b263 := T no-cgc] [t 5:598] 
#1615 := lam8n8 [p 2312 4155] [t 5:596] 
#2312 := (* -1 lam8n8) [p 4156] 
#4156 := (+ #2312 #1830) [t 5:597] 
#1612 := (>= lam8n6 0) [b264 := T no-cgc] [t 5:600] 
#1611 := lam8n6 [r 87] [p 4171] [t 5:599] [j 87 arith 264 267 --> 87 == 1611] 
#4165 := (>= #4155 0) [b265 := T no-cgc] [t 5:602] 
#4155 := (+ lam8n8 Nl4arg11) [t 5:601] 
#1616 := (>= lam8n8 0) [b266 := T no-cgc] [t 5:603] 
#4166 := (<= lam8n6 0) [b267 := T no-cgc] [t 5:604] 
#4173 := (<= #4172 -1) [b268 := F no-cgc] [t 5:606] 
#4170 := -536870906 [p 4171 4193] 
#4171 := (* -536870906 lam8n6) [p 4172] 
#4172 := (+ #4121 #3083 #4171 #1791 #1818 #2231 #2233) [t 5:605] 
#4184 := (>= #4179 0) [b269 := T no-cgc] [t 5:609] 
#1670 := lam9n8 [p 2341 4178] [t 5:607] 
#2341 := (* -1 lam9n8) [p 4179] 
#4179 := (+ #2341 #1911) [t 5:608] 
#1667 := (>= lam9n6 0) [b270 := T no-cgc] [t 5:611] 
#1666 := lam9n6 [p 4193] [t 5:610] 
#4188 := (>= #4178 0) [b271 := T no-cgc] [t 5:613] 
#4178 := (+ lam9n8 Nl4arg12) [t 5:612] 
#1671 := (>= lam9n8 0) [b272 := T no-cgc] [t 5:614] 
#4189 := (<= lam9n6 0) [b273 := F no-cgc] [t 5:615] 
#4195 := (<= #4194 -1) [b274 := T no-cgc] [t 5:617] 
#4193 := (* -536870906 lam9n6) [p 4194] 
#4194 := (+ #4148 #3277 #4193 #1872 #1899 #2272 #2273) [t 5:616] 
#3868 := (>= #3867 0) [b278 := T no-cgc] [t 5:627] 
#1242 := (* Nl4arg12 lam10n20) [r 87] [p 3867 3930] [t 5:618] [j 1253 congruence] 
#1212 := lam10n17 [r 87] [p 2171 3830 3844 3206] [t 5:619] [j 87 arith 287 285 --> 87 == 1212] 
#1277 := (* Nl4arg71 lam10n19) [r 87] [p 3867 3825 3206 8588 1769 8515 8661] [t 5:620] [j 186 congruence] 
#1278 := (* Nl4arg72 lam10n20) [r 87] [p 3867 3828 3206] [t 5:621] [j 1253 congruence] 
#1270 := (* Nl4arg61 lam10n19) [r 87] [p 3867 3839 3206 8585 1766 8510] [t 5:622] [j 180 congruence] 
#1271 := (* Nl4arg62 lam10n20) [r 87] [p 3867 3842 3206 8582] [t 5:623] [j 87 sat: 573] 
#1208 := lam10n15 [p 2141] [t 5:624] 
#1241 := (* Nl4arg11 lam10n19) [r 87] [p 3867 3929 8589 1751] [t 5:625] [j 152 congruence] 
#2141 := (* -1 lam10n15) [p 3867] 
#2171 := (* -1 lam10n17) [r 87] [p 3867] [j 1895 congruence] 
#3867 := (+ #2171 #1277 #1278 #1270 #1271 #2141 #1241 #1242) [t 5:626] 
#3894 := (>= #3893 0) [b279 := T no-cgc] [t 5:634] 
#1253 := (* Nl4arg32 lam10n20) [r 87] [p 3893] [t 5:628] [j 87 arith 336 259 --> 87 == 1253] 
#1190 := lam10n6 [p 2151 3875 3915] [t 5:629] 
#1258 := (* Nl4arg41 lam10n19) [r 87] [p 3893 3871 3919 1761 8431] [t 5:630] [j 169 congruence] 
#1259 := (* Nl4arg42 lam10n20) [r 87] [p 3893 3873 3920] [t 5:631] [j 1253 congruence] 
#1252 := (* Nl4arg31 lam10n19) [r 87] [p 3893] [t 5:632] [j 87 arith 356 252 --> 87 == 1252] 
#2151 := (* -1 lam10n6) [p 3893] 
#3893 := (+ #2151 #1258 #1259 #1252 #1253) [t 5:633] 
#1191 := (>= lam10n6 0) [b280 := T no-cgc] [t 5:635] 
#3895 := (>= #3830 0) [b281 := T no-cgc] [t 5:638] 
#1202 := lam10n12 [p 2140] [t 5:636] 
#3825 := (* -1 #1277) [r 87] [p 3830 3844] [j 1895 congruence] 
#2140 := (* -1 lam10n12) [p 3830 3844] 
#3828 := (* -1 #1278) [r 87] [p 3830 3844] [j 1895 congruence] 
#3830 := (+ #2140 lam10n17 #3825 #3828) [t 5:637] 
#3896 := (>= #3844 0) [b282 := T no-cgc] [t 5:640] 
#3839 := (* -1 #1270) [r 87] [p 3844] [j 1895 congruence] 
#3842 := (* -1 #1271) [r 87] [p 3844] [j 1895 congruence] 
#3844 := (+ #2140 lam10n17 #3825 #3828 #3839 #3842) [t 5:639] 
#1203 := (>= lam10n12 0) [b283 := T no-cgc] [t 5:641] 
#3897 := (>= #3875 0) [b284 := T no-cgc] [t 5:643] 
#3871 := (* -1 #1258) [r 87] [p 3875] [j 1895 congruence] 
#3873 := (* -1 #1259) [r 87] [p 3875] [j 1895 congruence] 
#3875 := (+ lam10n6 #3871 #3873) [t 5:642] 
#3898 := (<= lam10n17 0) [b285 := T no-cgc] [t 5:644] 
#1209 := (>= lam10n15 0) [b286 := T no-cgc] [t 5:645] 
#1213 := (>= lam10n17 0) [b287 := T no-cgc] [t 5:646] 
#4012 := (>= #4009 0) [b288 := T no-cgc] [t 5:650] 
#1265 := (* Nl4arg52 lam10n20) [r 87] [p 4009 3205 8587] [t 5:647] [j 1253 congruence] 
#1264 := (* Nl4arg51 lam10n19) [r 87] [p 4009 4055 8586 1764] [t 5:648] [j 175 congruence] 
#4009 := (+ #1264 #1265) [r 87] [p 8595] [t 5:649] [j 8478 congruence] 
#1217 := (>= lam10n19 0) [b289 := T no-cgc] [t 5:651] 
#1219 := (>= lam10n20 0) [b290 := T no-cgc] [t 5:652] 
#3165 := (<= #3206 1) [b291 := F no-cgc] [t 5:656] 
#1234 := (* Nl4CT2 lam10n20) [r 87] [p 3206] [t 5:653] [j 1253 congruence] 
#1233 := (* Nl4CT1 lam10n19) [r 87] [p 3206 1745 8382] [t 5:654] [j 143 congruence] 
#3930 := (* 4 #1242) [r 704] [p 3206] [j 704 congruence] 
#3929 := (* 4 #1241) [r 704] [p 3206] [j 3930 congruence] 
#3920 := (* -2 #1259) [r 87] [p 3206] [j 3277 congruence] 
#3919 := (* -2 #1258) [r 87] [p 3206] [j 3277 congruence] 
#3915 := (* 2 lam10n6) [p 3206] 
#1231 := 1073741825 [p 3205 4055] 
#3205 := (* 1073741825 #1265) [p 3206 3206] 
#4055 := (* 1073741825 #1264) [r 3205] [p 3206] [j 3205 congruence] 
#3206 := (+ #1246 #1247 #4055 #3205 lam10n17 #1277 #1278 #1270 #1271 #3915 #3919 #3920 #3929 #3930 #1233 #1234 ...) [t 5:655] 
#1281 := (* Nl4arg81 lam10n19) [r 87] [p 1283 192 8867] [t 5:657] [j 190 congruence] 
#1282 := (* Nl4arg82 lam10n20) [r 87] [p 1283] [t 5:658] [j 1253 congruence] 
#1283 := (+ #1281 #1282) [r 87] [p 1284] [t 5:659] [j 87 sat: 292] 
#1284 := (= #1283 0) [r 8448] [b292 := T] [j 8534 congruence] 
#1285 := (* Nl4arg91 lam10n19) [r 87] [p 1287 196 8510 8513 8515 8660 8854 8863 8867] [t 5:660] [j 194 congruence] 
#1286 := (* Nl4arg92 lam10n20) [r 87] [p 1287] [t 5:661] [j 1253 congruence] 
#1287 := (+ #1285 #1286) [r 87] [p 1288] [t 5:662] [j 87 sat: 293] 
#1288 := (= #1287 0) [r 8448] [b293 := T] [j 8534 congruence] 
#1289 := (* Nl4arg101 lam10n19) [r 87] [p 1291] [t 5:663] [j 198 congruence] 
#1290 := (* Nl4arg102 lam10n20) [r 87] [p 1291 8944] [t 5:664] [j 1253 congruence] 
#1291 := (+ #1289 #1290) [r 87] [p 1292] [t 5:665] [j 87 sat: 294] 
#1292 := (= #1291 0) [r 8448] [b294 := T] [j 8534 congruence] 
#1293 := (* Nl4arg111 lam10n19) [r 87] [p 1295] [t 5:666] [j 202 congruence] 
#1294 := (* Nl4arg112 lam10n20) [r 87] [p 1295] [t 5:667] [j 1253 congruence] 
#1295 := (+ #1293 #1294) [r 87] [p 1296] [t 5:668] [j 87 sat: 295] 
#1296 := (= #1295 0) [r 8448] [b295 := T] [j 8534 congruence] 
#1297 := (* Nl4arg121 lam10n19) [r 87] [p 1299] [t 5:669] [j 206 congruence] 
#1298 := (* Nl4arg122 lam10n20) [r 87] [p 1299] [t 5:670] [j 1253 congruence] 
#1299 := (+ #1297 #1298) [r 87] [p 1300] [t 5:671] [j 87 sat: 296] 
#1300 := (= #1299 0) [r 8448] [b296 := T] [j 8534 congruence] 
#1301 := (* Nl4arg131 lam10n19) [r 87] [p 1303] [t 5:672] [j 210 congruence] 
#1302 := (* Nl4arg132 lam10n20) [r 87] [p 1303] [t 5:673] [j 1253 congruence] 
#1303 := (+ #1301 #1302) [r 87] [p 1304] [t 5:674] [j 87 sat: 297] 
#1304 := (= #1303 0) [r 8448] [b297 := T] [j 8534 congruence] 
#8285 := (= Nl4CT2 0) [r 8448] [b298 := T] [j 8534 congruence] 
#8284 := (<= #738 0) [b299 := T no-cgc] [t 5:675] 
#8287 := (= Nl4CT1 0) [b300 := F] 
#8286 := (<= #157 0) [b301 := T no-cgc] [t 5:676] 
#8288 := (<= #719 0) [b302 := T no-cgc] [t 5:677] 
#8289 := (<= #158 0) [b303 := F no-cgc] [t 5:678] 
#8290 := (<= #720 0) [b304 := F no-cgc] [t 5:679] 
#8291 := (<= #152 0) [b305 := T no-cgc] [t 5:680] 
#8292 := (<= #715 0) [b306 := T no-cgc] [t 5:681] 
#8293 := (<= #153 0) [b307 := T no-cgc] [t 5:682] 
#8294 := (<= #714 0) [b308 := T no-cgc] [t 5:683] 
#8295 := (<= #163 0) [b309 := T no-cgc] [t 5:684] 
#8296 := (<= #725 0) [b310 := T no-cgc] [t 5:685] 
#8297 := (<= #164 0) [b311 := T no-cgc] [t 5:686] 
#8298 := (<= #726 0) [b312 := T no-cgc] [t 5:687] 
#8299 := (<= Nl4CT1 0) [b313 := T no-cgc] [t 5:688] 
#8300 := (>= Nl4CT1 0) [b314 := F no-cgc] [t 5:689] 
#8301 := (<= #707 0) [b315 := T no-cgc] [t 5:690] 
#8302 := (<= #143 0) [b316 := T no-cgc] [t 5:691] 
#8303 := (>= #839 0) [b317 := T no-cgc] [t 5:692] 
#8304 := (<= #176 0) [b318 := T no-cgc] [t 5:693] 
#8305 := (>= #284 0) [b319 := F no-cgc] [t 5:694] 
#8306 := (<= lam3n16 0) [b320 := T no-cgc] [t 5:695] 
#8307 := (<= lam0n17 0) [b321 := T no-cgc] [t 5:696] 
#8308 := (>= Nl4arg41 0) [b322 := T no-cgc] [t 5:697] 
#8309 := (>= #169 0) [b323 := T no-cgc] [t 5:698] 
#8310 := (>= #731 0) [b324 := T no-cgc] [t 5:699] 
#8311 := (<= Nl4arg42 0) [b325 := T no-cgc] [t 5:700] 
#8312 := (<= lam0n18 0) [b326 := F no-cgc] [t 5:701] 
#8313 := (<= #170 0) [b327 := T no-cgc] [t 5:702] 
#8314 := (<= lam3n17 0) [b328 := F no-cgc] [t 5:703] 
#8315 := (<= #732 0) [b329 := T no-cgc] [t 5:704] 
#8316 := (<= #999 0) [b330 := F no-cgc] [t 5:705] 
#8317 := (<= #994 0) [b331 := T no-cgc] [t 5:706] 
#8318 := (<= lam2n17 0) [b332 := F no-cgc] [t 5:707] 
#8319 := (<= #497 0) [b333 := T no-cgc] [t 5:708] 
#8320 := (<= lam2n18 0) [b334 := T no-cgc] [t 5:709] 
#8321 := (<= #552 0) [b335 := T no-cgc] [t 5:710] 
#8322 := (>= Nl4arg32 0) [b336 := T no-cgc] [t 5:711] 
#8323 := (>= #164 0) [b337 := T no-cgc] [t 5:712] 
#8324 := (<= lam5n16 0) [b338 := F no-cgc] [t 5:713] 
#8325 := (<= #975 0) [b339 := T no-cgc] [t 5:714] 
#8326 := (<= lam5n17 0) [b340 := T no-cgc] [t 5:715] 
#8327 := (<= #1000 0) [b341 := T no-cgc] [t 5:716] 
#8328 := (>= #726 0) [b342 := T no-cgc] [t 5:717] 
#8329 := (<= Nl4arg12 -1) [b343 := F no-cgc] [t 5:718] 
#8330 := (<= #983 -1) [b344 := F no-cgc] [t 5:719] 
#8331 := (<= #999 -1) [b345 := F no-cgc] [t 5:720] 
#8332 := (<= #153 -1) [b346 := F no-cgc] [t 5:721] 
#8333 := (<= #530 -1) [b347 := F no-cgc] [t 5:722] 
#8334 := (<= #715 -1) [b348 := F no-cgc] [t 5:723] 
#8335 := (<= #982 0) [b349 := T no-cgc] [t 5:724] 
#8336 := (<= #2103 0) [b350 := T no-cgc] [t 5:725] 
#8337 := (<= #529 0) [b351 := T no-cgc] [t 5:726] 
#8339 := (= undef39 0) [r 8448] [b352 := T] [j 8534 congruence] 
#8338 := (<= #2104 0) [b353 := T no-cgc] [t 5:727] 
#8341 := (= undef40 0) [r 8448] [b354 := T] [j 8534 congruence] 
#8340 := (<= Nl4arg41 0) [b355 := F no-cgc] [t 5:728] 
#8342 := (>= Nl4arg31 0) [b356 := T no-cgc] [t 5:729] 
#8343 := (>= #993 0) [b357 := T no-cgc] [t 5:730] 
#8344 := (<= lam4n16 0) [b358 := T no-cgc] [t 5:731] 
#8345 := (<= #839 0) [b359 := F no-cgc] [t 5:732] 
#8346 := (>= #857 0) [b360 := T no-cgc] [t 5:733] 
#8347 := (>= #725 0) [b361 := T no-cgc] [t 5:734] 
#8348 := (<= #551 0) [b362 := F no-cgc] [t 5:735] 
#8349 := (>= #543 0) [b363 := T no-cgc] [t 5:736] 
#8350 := (>= #163 0) [b364 := T no-cgc] [t 5:737] 
#8351 := (>= #169 1) [b365 := F no-cgc] [t 5:738] 
#8352 := (>= Nl4arg11 0) [b366 := T no-cgc] [t 5:739] 
#8353 := (>= #846 0) [b367 := T no-cgc] [t 5:740] 
#8354 := (>= #714 0) [b368 := T no-cgc] [t 5:741] 
#8355 := (>= #529 0) [b369 := T no-cgc] [t 5:742] 
#8356 := (<= lam1n17 0) [b370 := F no-cgc] [t 5:743] 
#8357 := (<= #284 0) [b371 := T no-cgc] [t 5:744] 
#8358 := (<= #338 0) [b372 := F no-cgc] [t 5:745] 
#8359 := (>= #982 0) [b373 := T no-cgc] [t 5:746] 
#8360 := (>= #152 0) [b374 := T no-cgc] [t 5:747] 
#8361 := (<= #551 -1) [b375 := F no-cgc] [t 5:748] 
#8362 := (<= undef40 0) [b376 := T no-cgc] [t 5:749] 
#8363 := (>= undef40 0) [b377 := T no-cgc] [t 5:750] 
#8364 := (<= undef39 0) [b378 := T no-cgc] [t 5:751] 
#8365 := (>= undef39 0) [b379 := T no-cgc] [t 5:752] 
#8366 := (>= Nl4CT2 0) [b380 := T no-cgc] [t 5:753] 
#8367 := (>= #708 0) [b381 := T no-cgc] [t 5:754] 
#8368 := (>= #498 0) [b382 := T no-cgc] [t 5:755] 
#8369 := (>= #145 0) [b383 := T no-cgc] [t 5:756] 
#8370 := (>= Nl4arg22 0) [b384 := T no-cgc] [t 5:757] 
#8371 := (<= lam1n18 0) [b385 := T no-cgc] [t 5:758] 
#8372 := (>= #322 0) [b386 := T no-cgc] [t 5:759] 
#8373 := (>= #976 0) [b387 := T no-cgc] [t 5:760] 
#8374 := (<= #534 0) [b388 := F no-cgc] [t 5:761] 
#8376 := (= lam0n18 1) [r 8385] [b389 := T] [j 8385 congruence] 
#8375 := (+ #145 #1872) [r 87] [p 8378] [t 5:763] [j 87 sat: 390] 
#8378 := (= #8375 0) [r 8448] [b390 := T] [j 8534 congruence] 
#8377 := (<= #8375 0) [b391 := T no-cgc] [t 5:764] 
#8380 := (= Nl4CT1 1) [b392 := F] 
#8381 := (= lam0n17 1) [r 8382] [b393 := F] [j 8382 congruence] 
#8382 := (= #143 1) [b394 := F] 
#8383 := (<= #8379 0) [b395 := T no-cgc] [t 5:766] 
#8379 := (+ #498 #1872) [r 87] [p 8562] [t 5:765] [j 87 sat: 553] 
#8385 := (= lam3n17 1) [b396 := T] 
#8384 := (+ #708 #1872) [r 87] [p 8387] [t 5:767] [j 87 sat: 397] 
#8387 := (= #8384 0) [r 8448] [b397 := T] [j 8534 congruence] 
#8386 := (<= #8384 0) [b398 := T no-cgc] [t 5:768] 
#8389 := (= lam5n16 1) [r 8385] [b399 := T] [j 8385 congruence] 
#8390 := (= #975 1) [r 8380] [b400 := F] [j 8380 congruence] 
#8391 := (= lam3n16 1) [r 8382] [b401 := F] [j 8381 congruence] 
#8392 := (= #707 1) [r 8382] [b402 := F] [j 8381 congruence] 
#8388 := (<= Nl4CT1 1) [b403 := T no-cgc] [t 5:769] 
#8393 := (>= Nl4CT1 1) [b404 := F no-cgc] [t 5:770] 
#8394 := (<= #987 0) [b405 := F no-cgc] [t 5:771] 
#8395 := (= #1024 #1020) [r 8448] [b406 := T] [j 8866 congruence] 
#8396 := (= #1024 #1016) [r 8448] [b407 := T] [j 2021 congruence] 
#8397 := (= #1025 #1021) [r 8448] [b408 := T] [j 8534 congruence] 
#8398 := (= #1024 #1005) [r 8448] [b409 := T] [j 2020 congruence] 
#8399 := (= 1 lam5n16) [r 8385] [b410 := T] [j 8389 congruence] 
#8400 := (= #1025 #994) [r 8448] [b411 := T] [j 8534 congruence] 
#8401 := (= #1025 #1017) [r 8448] [b412 := T] [j 8400 congruence] 
#8402 := (= #1024 #982) [r 8448] [b413 := T] [j 8412 congruence] 
#8403 := (= #1025 #1011) [r 8448] [b414 := T] [j 8534 congruence] 
#8404 := (= #1025 #1006) [r 8448] [b415 := T] [j 8534 congruence] 
#8405 := (= 0 #1022) [r 8448] [b416 := T] [j 1023 congruence] 
#8406 := (= #1024 #1010) [r 8448] [b417 := T] [j 1838 congruence] 
#8407 := (<= #1764 0) [b418 := T no-cgc] [t 5:772] 
#8408 := (>= #1764 0) [b419 := T no-cgc] [t 5:773] 
#8409 := (<= #143 1) [b420 := T no-cgc] [t 5:774] 
#8410 := (>= #143 1) [b421 := F no-cgc] [t 5:775] 
#8411 := (<= lam0n5 0) [b422 := T no-cgc] [t 5:776] 
#8412 := (= 0 #982) [r 8448] [b423 := T] [j 8534 congruence] 
#8413 := (= #1024 #993) [r 8448] [b424 := T] [j 1845 congruence] 
#8414 := (<= lam0n3 0) [b425 := T no-cgc] [t 5:777] 
#8415 := (<= lam3n17 1) [b426 := T no-cgc] [t 5:778] 
#8416 := (>= lam3n17 1) [b427 := T no-cgc] [t 5:779] 
#8417 := (>= Nl4arg21 0) [b428 := T no-cgc] [t 5:780] 
#8418 := (<= #157 -1) [b429 := F no-cgc] [t 5:781] 
#8419 := (<= #534 -1) [b430 := F no-cgc] [t 5:782] 
#8420 := (<= #719 -1) [b431 := F no-cgc] [t 5:783] 
#8421 := (<= lam0n18 1) [b432 := T no-cgc] [t 5:784] 
#8422 := (>= lam0n18 1) [b433 := T no-cgc] [t 5:785] 
#8423 := (<= lam0n2 0) [b434 := T no-cgc] [t 5:786] 
#8424 := (<= lam0n6 0) [b435 := T no-cgc] [t 5:787] 
#8426 := (= Nl4arg41 -1) [b436 := F] 
#8425 := (+ #731 lam3n16) [r 87] [p 8428] [t 5:788] [j 87 sat: 467] 
#8428 := (= #8425 0) [r 8448] [b437 := T] [j 8534 congruence] 
#8427 := (<= #8425 0) [b438 := T no-cgc] [t 5:789] 
#8430 := (<= #8429 0) [b439 := T no-cgc] [t 5:791] 
#8429 := (+ #976 #1872) [r 87] [p 8527] [t 5:790] [j 8379 congruence] 
#8431 := (+ lam0n17 #169) [r 87] [p 8433] [t 5:792] [j 87 arith 86 321 --> 87 == 8431] 
#8433 := (= #8431 0) [r 8448] [b440 := T] [j 8534 congruence] 
#8432 := (<= #8431 0) [b441 := T no-cgc] [t 5:793] 
#8434 := (+ lam2n17 #551) [p 8436] [t 5:794] 
#8436 := (= #8434 0) [b442 := F] 
#8435 := (<= #8434 0) [b443 := F no-cgc] [t 5:795] 
#8437 := (<= #1751 0) [b444 := T no-cgc] [t 5:796] 
#8438 := (>= #1751 0) [b445 := T no-cgc] [t 5:797] 
#8439 := (<= #1766 0) [b446 := T no-cgc] [t 5:798] 
#8440 := (>= #1766 0) [b447 := T no-cgc] [t 5:799] 
#8441 := (<= #1758 0) [b448 := T no-cgc] [t 5:800] 
#8442 := (>= #1758 0) [b449 := T no-cgc] [t 5:801] 
#8443 := (<= #1780 0) [b450 := T no-cgc] [t 5:802] 
#8444 := (>= #1780 0) [b451 := T no-cgc] [t 5:803] 
#8445 := (>= #8384 0) [b452 := T no-cgc] [t 5:804] 
#8446 := (= #756 #748) [r 8448] [b453 := T] [j 8904 congruence] 
#8447 := (= 0 Nl4arg52) [r 8448] [b454 := T] [j 2066 congruence] 
#8448 := (= 0 #715) [b455 := T] 
#8449 := (= #757 #738) [r 8448] [b456 := T] [j 8511 congruence] 
#8450 := (= 0 #1956) [r 8448] [b457 := T] [j 1957 congruence] 
#8451 := (= 0 #1959) [r 8448] [b458 := T] [j 1960 congruence] 
#8452 := (= 0 #1963) [r 8448] [b459 := T] [j 1964 congruence] 
#8453 := (= 0 #1966) [r 8448] [b460 := T] [j 1967 congruence] 
#8454 := (= 0 #720) [b461 := F] 
#8455 := (= 0 #1970) [r 8448] [b462 := T] [j 1971 congruence] 
#8456 := (= 0 #1974) [r 8448] [b463 := T] [j 1975 congruence] 
#8457 := (= 0 lam3n13) [r 8448] [b464 := T] [j 1977 congruence] 
#8458 := (= 0 Nl4arg72) [r 8448] [b465 := T] [j 2067 congruence] 
#8459 := (= 0 #1980) [r 8448] [b466 := T] [j 1981 congruence] 
#8460 := (= 0 #8425) [r 8448] [b467 := T] [j 8428 congruence] 
#8461 := (= 0 #714) [r 8448] [b468 := T] [j 8534 congruence] 
#8462 := (= #757 #749) [r 8448] [b469 := T] [j 8463 congruence] 
#8463 := (= 0 #757) [r 8448] [b470 := T] [j 8509 congruence] 
#8464 := (= 0 #756) [r 8448] [b471 := T] [j 8534 congruence] 
#8465 := (= 0 #737) [r 8448] [b472 := T] [j 8534 congruence] 
#8466 := (>= #8425 0) [b473 := T no-cgc] [t 5:805] 
#8467 := (<= Nl4arg41 -1) [b474 := F no-cgc] [t 5:806] 
#8468 := (>= Nl4arg41 -1) [b475 := T no-cgc] [t 5:807] 
#8469 := (<= #169 -2) [b476 := F no-cgc] [t 5:808] 
#8471 := (= Nl4arg42 1) [r 8382] [b477 := F] [j 8381 congruence] 
#8470 := (* -1 lam3n17) [r 1741] [p 8472 8861] [t 5:809] [j 1741 arith 426 427 --> 1741 == 8470] 
#8472 := (+ #732 #8470) [r 1741] [p 8474] [t 5:810] [j 1741 arith 539 325 426 427 --> 1741 == 8472] 
#8474 := (= #8472 0) [b478 := F] 
#8475 := (= Nl4CT2 -1) [r 8474] [b479 := F] [j 8474 congruence] 
#8473 := (+ #498 lam2n18) [r 87] [p 8477] [t 5:811] [j 87 sat: 480] 
#8477 := (= #8473 0) [r 8448] [b480 := T] [j 8534 congruence] 
#8476 := (<= #8473 0) [b481 := T no-cgc] [t 5:812] 
#8478 := (+ #976 lam5n17) [r 87] [p 8480] [t 5:813] [j 87 sat: 499] 
#8480 := (= #8478 0) [r 8448] [b482 := T] [j 8534 congruence] 
#8479 := (<= #8478 0) [b483 := T no-cgc] [t 5:814] 
#8481 := (<= Nl4CT2 -1) [b484 := F no-cgc] [t 5:815] 
#8482 := (>= Nl4CT2 -1) [b485 := T no-cgc] [t 5:816] 
#8483 := (<= #708 -4) [b486 := F no-cgc] [t 5:817] 
#8485 := (<= #8484 0) [b487 := F no-cgc] [t 5:819] 
#8484 := (+ lam3n17 #708) [r 125] [t 5:818] [j 125 arith 497 391 452 398 426 427 87 == 145 87 == 145 --> 125 == 8484] 
#8486 := (* -1 lam2n18) [r 87] [p 8487] [t 5:820] [j 87 arith 481 537 -730 382 --> 87 == 8486] 
#8487 := (+ #552 #8486) [r 87] [p 8489] [t 5:821] [j 87 arith 539 481 382 325 537 -730 --> 87 == 8487] 
#8489 := (= #8487 0) [r 8448] [b488 := T] [j 8534 congruence] 
#8488 := (<= Nl4arg42 1) [b489 := T no-cgc] [t 5:822] 
#8490 := (>= Nl4arg42 1) [b490 := F no-cgc] [t 5:823] 
#8491 := (<= #1963 0) [b491 := T no-cgc] [t 5:824] 
#8492 := (>= #1963 0) [b492 := T no-cgc] [t 5:825] 
#8493 := (<= #1974 0) [b493 := T no-cgc] [t 5:826] 
#8494 := (>= #1974 0) [b494 := T no-cgc] [t 5:827] 
#8495 := (<= lam3n3 0) [b495 := T no-cgc] [t 5:828] 
#8496 := (<= lam3n6 0) [b496 := T no-cgc] [t 5:829] 
#8497 := (>= #8375 0) [b497 := T no-cgc] [t 5:830] 
#8498 := (<= lam3n2 0) [b498 := T no-cgc] [t 5:831] 
#8499 := (= 0 #8478) [r 8448] [b499 := T] [j 8480 congruence] 
#8500 := (>= #8478 0) [b500 := T no-cgc] [t 5:832] 
#8501 := (<= lam3n5 0) [b501 := T no-cgc] [t 5:833] 
#8502 := (= 0 #1754) [r 8448] [b502 := T] [j 1755 congruence] 
#8503 := (= 0 #1761) [r 8448] [b503 := T] [j 1762 congruence] 
#8504 := (= 0 #1769) [r 8448] [b504 := T] [j 1770 congruence] 
#8505 := (= 0 lam0n13) [r 8448] [b505 := T] [j 1772 congruence] 
#8506 := (= 0 #1777) [r 8448] [b506 := T] [j 1778 congruence] 
#8507 := (= 0 #1771) [r 8448] [b507 := T] [j 8534 congruence] 
#8508 := (= 0 #175) [r 8448] [b508 := T] [j 8586 congruence] 
#8509 := (= #195 #164) [r 8448] [b509 := T] [j 8534 congruence] 
#8510 := (= #194 #180) [r 8448] [b510 := T] [j 8585 congruence] 
#8511 := (= 0 #176) [r 8448] [b511 := T] [j 8534 congruence] 
#8512 := (= #195 #181) [r 8448] [b512 := T] [j 1919 congruence] 
#8513 := (= #194 #163) [r 8448] [b513 := T] [j 8534 congruence] 
#8514 := (= #195 #187) [r 8448] [b514 := T] [j 8509 congruence] 
#8515 := (= #194 #186) [r 8448] [b515 := T] [j 8588 congruence] 
#8516 := (<= #145 -4) [b516 := F no-cgc] [t 5:834] 
#8518 := (<= #8517 0) [b517 := F no-cgc] [t 5:836] 
#8517 := (+ lam0n18 #145) [r 125] [t 5:835] [j 8484 congruence] 
#8519 := (* -1 lam5n17) [r 87] [p 8520] [t 5:837] [j 87 arith 238 340 --> 87 == 8519] 
#8520 := (+ #1000 #8519) [r 87] [p 8522] [t 5:838] [j 87 arith 238 340 --> 87 == 8520] 
#8522 := (= #8520 0) [r 8448] [b518 := T] [j 8534 congruence] 
#8521 := (<= #1972 0) [b519 := T no-cgc] [t 5:839] 
#8523 := (>= #1972 0) [b520 := T no-cgc] [t 5:840] 
#8524 := (<= #1980 0) [b521 := T no-cgc] [t 5:841] 
#8525 := (>= #1980 0) [b522 := T no-cgc] [t 5:842] 
#8527 := (= #8429 0) [r 8448] [b523 := T] [j 8562 congruence] 
#8526 := (* 2 Nl4arg32) [r 87] [p 8531] [t 5:844] [j 87 arith 259 336 --> 87 == 8526] 
#8528 := (* -1 lam0n18) [r 1741] [p 8531 8861] [t 5:847] [j 8470 sat: 824] 
#1094 := 15 [p 8529] [t 5:848] 
#8529 := (* 15 Nl4arg12) [r 87] [p 8531] [t 5:849] [j 87 arith -343 147 --> 87 == 8529] 
#8530 := (* -1 #145) [r 87] [p 8531] [t 5:850] [j 1895 congruence] 
#8531 := (+ #8526 Nl4CT2 Nl4arg42 #2114 #2115 #1756 #1760 #8528 #8529 #8530) [r 1741] [p 8533] [t 5:851] [j 1741 arith 321 448 356 449 323 391 -326 252 364 540 541 259 426 427 336 337 147 86 432 -343 497 170 == 732 170 == 732 176 == 738 176 == 738 87 == 176 87 == 176 64 == 87 64 == 87 --> 1741 == 8531] 
#8533 := (= #8531 -1) [r 8861] [b524 := T] [j 8861 congruence] 
#8532 := (= 0 lam0n16) [r 8448] [b525 := T] [j 1773 congruence] 
#8534 := (= 0 #153) [r 8448] [b526 := T] [j 8448 congruence] 
#8535 := (= 0 #152) [r 8448] [b527 := T] [j 8589 congruence] 
#8536 := (= 0 #158) [r 8454] [b528 := F] [j 8454 congruence] 
#8537 := (= 0 #1751) [r 8448] [b529 := T] [j 1752 congruence] 
#8538 := (= 0 #1764) [r 8448] [b530 := T] [j 1765 congruence] 
#8539 := (= 0 #157) [r 8448] [b531 := T] [j 8584 congruence] 
#8540 := (= 0 #8429) [r 8448] [b532 := T] [j 8527 congruence] 
#8541 := (<= lam5n16 1) [b533 := T no-cgc] [t 5:852] 
#8542 := (>= lam5n16 1) [b534 := T no-cgc] [t 5:853] 
#8543 := (= 0 #8431) [r 8448] [b535 := T] [j 8433 congruence] 
#8544 := (<= lam0n16 0) [b536 := T no-cgc] [t 5:854] 
#8545 := (>= #8473 0) [b537 := T no-cgc] [t 5:855] 
#8546 := (<= Nl4CT2 0) [b538 := T no-cgc] [t 5:856] 
#8547 := (>= Nl4arg42 0) [b539 := T no-cgc] [t 5:857] 
#8548 := (<= #1761 0) [b540 := T no-cgc] [t 5:858] 
#8549 := (>= #1761 0) [b541 := T no-cgc] [t 5:859] 
#8550 := (<= #732 -2) [b542 := F no-cgc] [t 5:860] 
#8551 := (<= #1970 0) [b543 := T no-cgc] [t 5:861] 
#8552 := (>= #1970 0) [b544 := T no-cgc] [t 5:862] 
#8553 := (<= #1956 0) [b545 := T no-cgc] [t 5:863] 
#8554 := (>= #1956 0) [b546 := T no-cgc] [t 5:864] 
#8555 := (<= lam3n13 0) [b547 := T no-cgc] [t 5:865] 
#8556 := (<= #1983 0) [b548 := T no-cgc] [t 5:866] 
#8557 := (>= #1983 0) [b549 := T no-cgc] [t 5:867] 
#8558 := (= -1 #8531) [r 8861] [b550 := T] [j 8533 congruence] 
#8559 := (>= #8429 0) [b551 := T no-cgc] [t 5:868] 
#8560 := (= 0 #8487) [r 8448] [b552 := T] [j 8489 congruence] 
#8562 := (= #8379 0) [r 8448] [b553 := T] [j 8534 congruence] 
#8561 := (+ #1899 #4148 #3277 #1872 #2272 #2273) [r 87] [p 8564] [t 5:874] [j 87 sat: 587] 
#8564 := (= #8561 0) [r 8448] [b554 := T] [j 8534 congruence] 
#8563 := (<= lam3n16 1) [b555 := T no-cgc] [t 5:875] 
#8565 := (>= lam3n16 1) [b556 := F no-cgc] [t 5:876] 
#8566 := (= 0 #8379) [r 8448] [b557 := T] [j 8562 congruence] 
#8567 := (>= #8379 0) [b558 := T no-cgc] [t 5:877] 
#8568 := (= 0 #1758) [r 8448] [b559 := T] [j 1759 congruence] 
#8570 := (= Nl4arg32 Nl4arg52) [r 8448] [b560 := T] [j 2066 congruence] 
#8571 := (= #164 #176) [r 8448] [b561 := T] [j 8511 congruence] 
#8572 := (= Nl4arg31 Nl4arg51) [r 8448] [b562 := T] [j 2020 congruence] 
#8573 := (= #163 #175) [r 8448] [b563 := T] [j 8508 congruence] 
#8574 := (= Nl4arg31 Nl4arg61) [r 8448] [b564 := T] [j 1838 congruence] 
#8575 := (= #163 #180) [r 8448] [b565 := T] [j 8585 congruence] 
#8569 := (<= #1754 0) [b566 := T no-cgc] [t 5:878] 
#8576 := (>= #1754 0) [b567 := T no-cgc] [t 5:879] 
#8577 := (<= #1777 0) [b568 := T no-cgc] [t 5:880] 
#8578 := (>= #1777 0) [b569 := T no-cgc] [t 5:881] 
#8579 := (<= lam0n13 0) [b570 := T no-cgc] [t 5:882] 
#8580 := (<= #8531 -1) [b571 := T no-cgc] [t 5:883] 
#8581 := (>= #8531 -1) [b572 := T no-cgc] [t 5:884] 
#8582 := (= 0 #1271) [r 8448] [b573 := T] [j 8534 congruence] 
#8583 := (= 0 #1278) [r 8448] [b574 := T] [j 8534 congruence] 
#8584 := (= 0 #1246) [r 8448] [b575 := T] [j 8534 congruence] 
#8585 := (= 0 #1270) [r 8448] [b576 := T] [j 8534 congruence] 
#8586 := (= 0 #1264) [r 8448] [b577 := T] [j 8534 congruence] 
#8587 := (= 0 #1265) [r 8448] [b578 := T] [j 8534 congruence] 
#8588 := (= 0 #1277) [r 8448] [b579 := T] [j 8534 congruence] 
#8589 := (= 0 #1241) [r 8448] [b580 := T] [j 8534 congruence] 
#8590 := (= 0 #1242) [r 8448] [b581 := T] [j 8534 congruence] 
#8591 := (= 0 #1247) [b582 := F] 
#8592 := (= 0 #1000) [r 8448] [b583 := T] [j 8534 congruence] 
#8593 := (<= #1769 0) [b584 := T no-cgc] [t 5:885] 
#8594 := (>= #1769 0) [b585 := T no-cgc] [t 5:886] 
#8595 := (= 0 #4009) [r 8448] [b586 := T] [j 8534 congruence] 
#8596 := (= 0 #8561) [r 8448] [b587 := T] [j 8564 congruence] 
#8597 := (<= #8561 0) [b588 := T no-cgc] [t 5:887] 
#8598 := (>= #8561 0) [b589 := T no-cgc] [t 5:888] 
#8599 := (= #2122 #2108) [r 8448] [b590 := T] [j 8778 congruence] 
#8600 := (= #2123 #2109) [r 8448] [b591 := T] [j 8825 congruence] 
#8601 := (= #2119 #2105) [r 8448] [b592 := T] [j 8534 congruence] 
#8602 := (= 0 Nl4arg91) [r 8448] [b593 := T] [j 1845 congruence] 
#8603 := (= 0 Nl4arg101) [r 1847] [b594 := F] [j 1847 congruence] 
#8604 := (= 0 Nl4arg111) [r 8448] [b595 := T] [j 1849 congruence] 
#8605 := (= 0 Nl4arg121) [r 8448] [b596 := T] [j 1851 congruence] 
#8606 := (= 0 Nl4arg131) [r 8448] [b597 := T] [j 1853 congruence] 
#8607 := (= 0 Nl4arg81) [r 8448] [b598 := T] [j 1843 congruence] 
#8608 := (= #2120 #2106) [r 8448] [b599 := T] [j 8738 congruence] 
#8609 := (= #2124 #2110) [r 8448] [b600 := T] [j 8755 congruence] 
#8610 := (= #2121 #2107) [r 8448] [b601 := T] [j 8775 congruence] 
#8611 := (<= #1000 -1) [b602 := F no-cgc] [t 5:889] 
#8612 := (>= #976 1) [b603 := F no-cgc] [t 5:890] 
#8613 := (<= Nl4arg91 0) [b604 := T no-cgc] [t 5:891] 
#8614 := (>= Nl4arg91 0) [b605 := T no-cgc] [t 5:892] 
#8615 := (<= Nl4arg102 0) [b606 := T no-cgc] [t 5:893] 
#8616 := (>= Nl4arg102 0) [b607 := T no-cgc] [t 5:894] 
#8617 := (<= Nl4arg111 0) [b608 := T no-cgc] [t 5:895] 
#8618 := (>= Nl4arg111 0) [b609 := T no-cgc] [t 5:896] 
#8619 := (<= Nl4arg121 0) [b610 := T no-cgc] [t 5:897] 
#8620 := (>= Nl4arg121 0) [b611 := T no-cgc] [t 5:898] 
#8621 := (<= #372 0) [b612 := T no-cgc] [t 5:899] 
#8622 := (>= #372 0) [b613 := F no-cgc] [t 5:900] 
#8623 := (<= #898 0) [b614 := T no-cgc] [t 5:901] 
#8624 := (>= #898 0) [b615 := T no-cgc] [t 5:902] 
#8625 := (<= #368 0) [b616 := T no-cgc] [t 5:903] 
#8626 := (>= #368 0) [b617 := T no-cgc] [t 5:904] 
#8627 := (<= #894 0) [b618 := F no-cgc] [t 5:905] 
#8628 := (>= #894 0) [b619 := T no-cgc] [t 5:906] 
#8629 := (<= #376 0) [b620 := T no-cgc] [t 5:907] 
#8630 := (>= #376 0) [b621 := T no-cgc] [t 5:908] 
#8631 := (<= #902 0) [b622 := T no-cgc] [t 5:909] 
#8632 := (>= #902 0) [b623 := T no-cgc] [t 5:910] 
#8633 := (<= #585 0) [b624 := T no-cgc] [t 5:911] 
#8634 := (>= #585 0) [b625 := F no-cgc] [t 5:912] 
#8635 := (<= #378 -1) [b626 := F no-cgc] [t 5:913] 
#8636 := (<= #199 -2) [b627 := F no-cgc] [t 5:914] 
#8637 := (<= #761 -2) [b628 := F no-cgc] [t 5:915] 
#8638 := (<= #888 -1) [b629 := F no-cgc] [t 5:916] 
#8639 := (<= #1029 -1) [b630 := F no-cgc] [t 5:917] 
#8640 := (<= #8642 0) [b631 := T no-cgc] [t 5:919] 
#8641 := (* -1 #2120) [r 87] [p 8642] [j 1895 congruence] 
#8642 := (+ #2106 #8641) [r 87] [t 5:918] [j 8478 congruence] 
#8643 := (>= #8642 0) [b632 := T no-cgc] [t 5:920] 
#8644 := (<= #1030 0) [b633 := T no-cgc] [t 5:921] 
#8645 := (>= #1030 0) [b634 := F no-cgc] [t 5:922] 
#8646 := (>= #584 1) [b635 := F no-cgc] [t 5:923] 
#8647 := (>= #761 2) [b636 := F no-cgc] [t 5:924] 
#8648 := (>= #888 1) [b637 := F no-cgc] [t 5:925] 
#8649 := (>= #893 0) [b638 := T no-cgc] [t 5:926] 
#8650 := (>= #1029 1) [b639 := F no-cgc] [t 5:927] 
#8651 := (>= #199 2) [b640 := F no-cgc] [t 5:928] 
#8652 := (>= #366 1) [b641 := F no-cgc] [t 5:929] 
#8653 := (>= #371 1) [b642 := F no-cgc] [t 5:930] 
#8654 := (<= #374 -1) [b643 := F no-cgc] [t 5:931] 
#8655 := (<= #8657 0) [b644 := T no-cgc] [t 5:933] 
#8656 := (* -1 #2123) [r 87] [p 8657] [j 1895 congruence] 
#8657 := (+ #2109 #8656) [r 87] [t 5:932] [j 8478 congruence] 
#8658 := (>= #8657 0) [b645 := T no-cgc] [t 5:934] 
#8659 := (<= #8661 0) [b646 := T no-cgc] [t 5:936] 
#8660 := (* -1 #194) [r 87] [p 8661 8857] [j 1895 congruence] 
#8661 := (+ #186 #8660) [r 87] [p 8905] [t 5:935] [j 87 arith 86 321 --> 87 == 8661] 
#8662 := (>= #8661 0) [b647 := T no-cgc] [t 5:937] 
#8663 := (<= #366 -1) [b648 := F no-cgc] [t 5:938] 
#8664 := (>= #2109 1) [b649 := F no-cgc] [t 5:939] 
#8665 := (<= #206 -1) [b650 := F no-cgc] [t 5:940] 
#8666 := (>= #145 2) [b651 := F no-cgc] [t 5:941] 
#8667 := (<= #194 -1) [b652 := F no-cgc] [t 5:942] 
#8668 := (>= #900 1) [b653 := F no-cgc] [t 5:943] 
#8669 := (>= #194 1) [b654 := F no-cgc] [t 5:944] 
#8670 := (>= #206 1) [b655 := F no-cgc] [t 5:945] 
#8671 := (<= Nl4arg112 0) [b656 := T no-cgc] [t 5:946] 
#8672 := (>= Nl4arg112 0) [b657 := T no-cgc] [t 5:947] 
#8673 := (<= Nl4arg132 0) [b658 := T no-cgc] [t 5:948] 
#8674 := (>= Nl4arg132 0) [b659 := T no-cgc] [t 5:949] 
#8675 := (<= #380 0) [b660 := T no-cgc] [t 5:950] 
#8676 := (>= #380 0) [b661 := T no-cgc] [t 5:951] 
#8677 := (<= #8679 0) [b662 := T no-cgc] [t 5:953] 
#8678 := (* -1 #2124) [r 87] [p 8679] [j 1895 congruence] 
#8679 := (+ #2110 #8678) [r 87] [t 5:952] [j 8478 congruence] 
#8680 := (>= #8679 0) [b663 := T no-cgc] [t 5:954] 
#8681 := (<= #597 0) [b664 := T no-cgc] [t 5:955] 
#8682 := (>= #597 0) [b665 := T no-cgc] [t 5:956] 
#8683 := (<= #906 0) [b666 := T no-cgc] [t 5:957] 
#8684 := (>= #906 0) [b667 := T no-cgc] [t 5:958] 
#8685 := (<= #1042 0) [b668 := T no-cgc] [t 5:959] 
#8686 := (>= #1042 0) [b669 := T no-cgc] [t 5:960] 
#8687 := (<= #1034 0) [b670 := T no-cgc] [t 5:961] 
#8688 := (>= #1034 0) [b671 := T no-cgc] [t 5:962] 
#8689 := (>= #896 1) [b672 := F no-cgc] [t 5:963] 
#8690 := (<= #2124 -1) [b673 := F no-cgc] [t 5:964] 
#8691 := (<= #588 -1) [b674 := F no-cgc] [t 5:965] 
#8692 := (<= #203 -2) [b675 := F no-cgc] [t 5:966] 
#8693 := (<= #211 -2) [b676 := F no-cgc] [t 5:967] 
#8694 := (<= #773 -2) [b677 := F no-cgc] [t 5:968] 
#8695 := (<= #765 -2) [b678 := F no-cgc] [t 5:969] 
#8696 := (<= #383 -1) [b679 := F no-cgc] [t 5:970] 
#8697 := (<= #589 0) [b680 := T no-cgc] [t 5:971] 
#8698 := (>= #589 0) [b681 := T no-cgc] [t 5:972] 
#8699 := (<= #384 0) [b682 := T no-cgc] [t 5:973] 
#8700 := (>= #384 0) [b683 := T no-cgc] [t 5:974] 
#8701 := (>= #1041 1) [b684 := F no-cgc] [t 5:975] 
#8702 := (>= #1033 1) [b685 := F no-cgc] [t 5:976] 
#8703 := (>= #203 2) [b686 := F no-cgc] [t 5:977] 
#8704 := (>= #211 2) [b687 := F no-cgc] [t 5:978] 
#8705 := (>= #375 1) [b688 := F no-cgc] [t 5:979] 
#8706 := (>= #383 1) [b689 := F no-cgc] [t 5:980] 
#8707 := (>= #588 1) [b690 := F no-cgc] [t 5:981] 
#8708 := (>= #596 1) [b691 := F no-cgc] [t 5:982] 
#8709 := (>= #765 2) [b692 := F no-cgc] [t 5:983] 
#8710 := (>= #773 2) [b693 := F no-cgc] [t 5:984] 
#8711 := (>= #897 0) [b694 := T no-cgc] [t 5:985] 
#8712 := (>= #905 0) [b695 := T no-cgc] [t 5:986] 
#8713 := (<= #8715 0) [b696 := T no-cgc] [t 5:988] 
#8714 := (* -1 #2122) [r 87] [p 8715] [j 1895 congruence] 
#8715 := (+ #2108 #8714) [r 87] [t 5:987] [j 8478 congruence] 
#8716 := (>= #8715 0) [b697 := T no-cgc] [t 5:989] 
#8718 := (= undef36 0) [b698 := F] 
#8719 := (= undef38 0) [b699 := F] 
#8717 := (<= undef38 0) [b700 := T no-cgc] [t 5:990] 
#8720 := (>= undef38 0) [b701 := F no-cgc] [t 5:991] 
#8721 := (<= #2108 -1) [b702 := F no-cgc] [t 5:992] 
#8722 := (>= #2108 1) [b703 := F no-cgc] [t 5:993] 
#8723 := (>= #374 1) [b704 := F no-cgc] [t 5:994] 
#8724 := (<= undef36 0) [b705 := T no-cgc] [t 5:995] 
#8725 := (>= undef36 0) [b706 := F no-cgc] [t 5:996] 
#8726 := (= 0 Nl4arg122) [r 8448] [b707 := T] [j 1932 congruence] 
#8727 := (= #1920 #3308) [r 8448] [b708 := T] [j 3309 congruence] 
#8728 := (= #2105 #2119) [r 8448] [b709 := T] [j 8601 congruence] 
#8729 := (<= #581 0) [b710 := T no-cgc] [t 5:997] 
#8730 := (>= #581 0) [b711 := T no-cgc] [t 5:998] 
#8731 := (<= #591 -1) [b712 := F no-cgc] [t 5:999] 
#8732 := (>= #378 1) [b713 := F no-cgc] [t 5:1000] 
#8733 := (<= #587 -1) [b714 := F no-cgc] [t 5:1001] 
#8734 := (<= #579 -1) [b715 := F no-cgc] [t 5:1002] 
#8736 := (= undef35 0) [r 8448] [b716 := T] [j 8534 congruence] 
#8735 := (<= undef35 0) [b717 := T no-cgc] [t 5:1003] 
#8737 := (>= undef35 0) [b718 := T no-cgc] [t 5:1004] 
#8738 := (= 0 #2106) [r 8448] [b719 := T] [j 8534 congruence] 
#8739 := (= 0 Nl4arg82) [r 8448] [b720 := T] [j 1924 congruence] 
#8740 := (= 0 #2123) [r 8448] [b721 := T] [j 8534 congruence] 
#8741 := (<= #2106 0) [b722 := T no-cgc] [t 5:1005] 
#8742 := (>= #2106 0) [b723 := T no-cgc] [t 5:1006] 
#8743 := (= 0 Nl4arg92) [r 8448] [b724 := T] [j 1926 congruence] 
#8744 := (<= #2123 0) [b725 := T no-cgc] [t 5:1007] 
#8745 := (>= #2123 0) [b726 := T no-cgc] [t 5:1008] 
#8746 := (= #2109 #2123) [r 8448] [b727 := T] [j 8600 congruence] 
#8747 := (<= #1026 0) [b728 := T no-cgc] [t 5:1009] 
#8748 := (>= #1026 0) [b729 := T no-cgc] [t 5:1010] 
#8749 := (>= #498 1) [b730 := F no-cgc] [t 5:1011] 
#8750 := (<= #8752 0) [b731 := T no-cgc] [t 5:1013] 
#8751 := (* -1 #2121) [r 87] [p 8752] [j 1895 congruence] 
#8752 := (+ #2107 #8751) [r 87] [t 5:1012] [j 8478 congruence] 
#8753 := (>= #8752 0) [b732 := T no-cgc] [t 5:1014] 
#8754 := (>= #579 1) [b733 := F no-cgc] [t 5:1015] 
#8755 := (= 0 #2110) [r 8448] [b734 := T] [j 8534 congruence] 
#8756 := (= 0 #1041) [r 8448] [b735 := T] [j 8534 congruence] 
#8758 := (= undef37 0) [r 8448] [b736 := T] [j 8534 congruence] 
#8757 := (<= undef37 0) [b737 := T no-cgc] [t 5:1016] 
#8759 := (>= undef37 0) [b738 := T no-cgc] [t 5:1017] 
#8760 := (* 2 lam1n18) [r 87] [p 8763] [t 5:1018] [j 87 arith 122 385 --> 87 == 8760] 
#8761 := (* -1 #338) [p 8763] [t 5:1019] 
#8762 := (* -1 #339) [r 87] [p 8763] [t 5:1020] [j 1895 congruence] 
#8763 := (+ #8760 Nl4arg41 #8761 #8762) [p 8765] [t 5:1021] 
#8765 := (= #8763 -1) [b739 := F] 
#8764 := (= 0 #1029) [r 8448] [b740 := T] [j 8534 congruence] 
#8766 := (= 0 #893) [r 8448] [b741 := T] [j 8534 congruence] 
#8767 := (<= #900 -1) [b742 := F no-cgc] [t 5:1022] 
#8768 := (<= #896 -1) [b743 := F no-cgc] [t 5:1023] 
#8769 := (* 2 lam2n18) [r 87] [p 8774 8784] [t 5:1024] [j 87 arith 481 537 -730 382 --> 87 == 8769] 
#8770 := (* -1 #543) [r 87] [p 8774] [t 5:1025] [j 87 arith 356 252 --> 87 == 8770] 
#8771 := (* -1 #544) [r 87] [p 8774] [t 5:1026] [j 87 arith 259 336 --> 87 == 8771] 
#8772 := (* -1 #551) [r 8783] [p 8774 8783 8945] [t 5:1027] [j 8783 arith 539 325 --> 8772 == 8783] 
#8773 := (* -1 #552) [r 87] [p 8774 8783 8945] [t 5:1028] [j 1895 congruence] 
#8774 := (+ Nl4arg32 #8769 Nl4arg42 #8770 #8771 #8772 #8773) [r 8783] [p 8776] [t 5:1029] [j 8783 arith 539 363 481 356 382 325 259 537 -730 336 252 --> 8774 == 8783] 
#8776 := (= #8774 2) [b744 := F] 
#8775 := (= 0 #2107) [r 8448] [b745 := T] [j 8534 congruence] 
#8777 := (= 0 #2105) [r 8448] [b746 := T] [j 8534 congruence] 
#8778 := (= 0 #2108) [r 8448] [b747 := T] [j 8534 congruence] 
#8779 := (= 0 Nl4arg112) [r 8448] [b748 := T] [j 1930 congruence] 
#8780 := (<= #2105 0) [b749 := T no-cgc] [t 5:1030] 
#8781 := (>= #2105 0) [b750 := T no-cgc] [t 5:1031] 
#8782 := (= 0 Nl4arg102) [r 8448] [b751 := T] [j 1928 congruence] 
#8783 := (+ Nl4arg42 #8772 #8773) [p 8785 8774 8783 8945 8947] [t 5:1032] 
#8785 := (= #8783 2) [r 8776] [b752 := F] [j 8776 congruence] 
#8784 := (= #552 #8769) [r 8448] [b753 := T] [j 8534 congruence] 
#8786 := (= 0 #580) [r 8448] [b754 := T] [j 8534 congruence] 
#8787 := (<= Nl4arg92 0) [b755 := T no-cgc] [t 5:1033] 
#8788 := (>= Nl4arg92 0) [b756 := T no-cgc] [t 5:1034] 
#8789 := (<= Nl4arg122 0) [b757 := T no-cgc] [t 5:1035] 
#8790 := (>= Nl4arg122 0) [b758 := T no-cgc] [t 5:1036] 
#8791 := (<= #580 0) [b759 := T no-cgc] [t 5:1037] 
#8792 := (>= #580 0) [b760 := T no-cgc] [t 5:1038] 
#8793 := (<= #890 0) [b761 := T no-cgc] [t 5:1039] 
#8794 := (>= #890 0) [b762 := T no-cgc] [t 5:1040] 
#8795 := (<= #195 -2) [b763 := F no-cgc] [t 5:1041] 
#8796 := (<= #207 -2) [b764 := F no-cgc] [t 5:1042] 
#8797 := (>= #2120 1) [b765 := F no-cgc] [t 5:1043] 
#8798 := (<= #367 -1) [b766 := F no-cgc] [t 5:1044] 
#8799 := (<= #379 -1) [b767 := F no-cgc] [t 5:1045] 
#8800 := (>= #592 1) [b768 := F no-cgc] [t 5:1046] 
#8801 := (<= #757 -2) [b769 := F no-cgc] [t 5:1047] 
#8802 := (<= #769 -2) [b770 := F no-cgc] [t 5:1048] 
#8803 := (<= #1025 -1) [b771 := F no-cgc] [t 5:1049] 
#8804 := (<= #8806 0) [b772 := T no-cgc] [t 5:1051] 
#8805 := (* -1 #756) [r 87] [p 8806] [j 1895 congruence] 
#8806 := (+ #748 #8805) [r 87] [p 8905] [t 5:1050] [j 8478 congruence] 
#8807 := (>= #8806 0) [b773 := T no-cgc] [t 5:1052] 
#8808 := (>= #195 2) [b774 := F no-cgc] [t 5:1053] 
#8809 := (>= #207 2) [b775 := F no-cgc] [t 5:1054] 
#8810 := (<= #756 -2) [b776 := F no-cgc] [t 5:1055] 
#8811 := (>= #757 2) [b777 := F no-cgc] [t 5:1056] 
#8812 := (>= #764 2) [b778 := F no-cgc] [t 5:1057] 
#8813 := (>= #768 2) [b779 := F no-cgc] [t 5:1058] 
#8814 := (>= #1037 1) [b780 := F no-cgc] [t 5:1059] 
#8815 := (>= #889 0) [b781 := T no-cgc] [t 5:1060] 
#8816 := (<= #1038 0) [b782 := T no-cgc] [t 5:1061] 
#8817 := (>= #1038 0) [b783 := T no-cgc] [t 5:1062] 
#8818 := (<= #202 -1) [b784 := F no-cgc] [t 5:1063] 
#8819 := (>= #769 2) [b785 := F no-cgc] [t 5:1064] 
#8820 := (>= #2122 1) [b786 := F no-cgc] [t 5:1065] 
#8821 := (<= #764 -2) [b787 := F no-cgc] [t 5:1066] 
#8822 := (= 0 #212) [r 8448] [b788 := T] [j 213 congruence] 
#8823 := (* 2 lam0n18) [r 5] [p 8824] [t 5:1067] [j 5 arith 432 -326 --> 5 == 8823] 
#8824 := (+ #8526 Nl4arg42 #2114 #2115 #1756 #8529 #8823 #1760) [r 5] [p 8826] [t 5:1068] [j 5 sat: 789] 
#8826 := (= #8824 2) [b789 := T] 
#8825 := (= 0 #2109) [r 8448] [b790 := T] [j 8534 congruence] 
#8827 := (= #1920 #1839) [r 8448] [b791 := T] [j 8534 congruence] 
#8828 := (= 0 Nl4arg51) [r 8448] [b792 := T] [j 2020 congruence] 
#8829 := (<= #840 -1) [b793 := F no-cgc] [t 5:1069] 
#8830 := (= 0 #200) [r 8448] [b794 := T] [j 201 congruence] 
#8831 := (= 0 #204) [r 8448] [b795 := T] [j 205 congruence] 
#8832 := (= 0 #371) [r 8448] [b796 := T] [j 8534 congruence] 
#8833 := (= 0 #766) [r 8448] [b797 := T] [j 767 congruence] 
#8834 := (= 0 #199) [r 8448] [b798 := T] [j 8534 congruence] 
#8835 := (= #1920 #1834) [r 8448] [b799 := T] [j 8534 congruence] 
#8836 := (= 0 #2111) [r 8448] [b800 := T] [j 8534 congruence] 
#8837 := (= 0 #2103) [r 8448] [b801 := T] [j 8534 congruence] 
#8838 := (= 0 #758) [r 8448] [b802 := T] [j 759 congruence] 
#8839 := (= 0 #2104) [r 8448] [b803 := T] [j 8534 congruence] 
#8840 := (<= #901 -1) [b804 := F no-cgc] [t 5:1070] 
#8841 := (<= #592 -1) [b805 := F no-cgc] [t 5:1071] 
#8842 := (<= #768 -2) [b806 := F no-cgc] [t 5:1072] 
#8843 := (<= Nl4arg81 0) [b807 := T no-cgc] [t 5:1073] 
#8844 := (>= Nl4arg81 0) [b808 := T no-cgc] [t 5:1074] 
#8845 := (<= #364 0) [b809 := T no-cgc] [t 5:1075] 
#8846 := (>= #364 0) [b810 := T no-cgc] [t 5:1076] 
#8847 := (<= #886 0) [b811 := T no-cgc] [t 5:1077] 
#8848 := (>= #886 0) [b812 := T no-cgc] [t 5:1078] 
#8849 := (<= #752 -2) [b813 := F no-cgc] [t 5:1079] 
#8850 := (>= #884 1) [b814 := F no-cgc] [t 5:1080] 
#8851 := (>= #362 1) [b815 := F no-cgc] [t 5:1081] 
#8852 := (>= #752 2) [b816 := F no-cgc] [t 5:1082] 
#8853 := (= Nl4arg92 #195) [r 8448] [b817 := T] [j 8534 congruence] 
#8854 := (= Nl4arg91 #194) [r 8448] [b818 := T] [j 1845 congruence] 
#8855 := (= 0 #196) [r 8448] [b819 := T] [j 197 congruence] 
#8856 := (<= #8857 0) [b820 := T no-cgc] [t 5:1084] 
#8857 := (+ Nl4arg91 #8660) [r 87] [t 5:1083] [j 1024 arith 86 321 -338 533 --> 1024 == 8857] 
#8858 := (>= #8857 0) [b821 := T no-cgc] [t 5:1085] 
#8859 := (= Nl4arg122 #207) [r 8448] [b822 := T] [j 8534 congruence] 
#8860 := (= Nl4arg112 #203) [r 8448] [b823 := T] [j 8534 congruence] 
#8861 := (= #8528 #8470) [b824 := T] 
#8862 := (= 0 #898) [r 8448] [b825 := T] [j 899 congruence] 
#8863 := (= #194 #756) [r 8448] [b826 := T] [j 8464 congruence] 
#8864 := (= Nl4arg82 #191) [r 8448] [b827 := T] [j 8534 congruence] 
#8865 := (= 0 Nl4arg71) [r 8448] [b828 := T] [j 2021 congruence] 
#8866 := (= Nl4arg81 Nl4arg91) [r 8448] [b829 := T] [j 1845 congruence] 
#8867 := (= #194 #190) [r 8448] [b830 := T] [j 8534 congruence] 
#8868 := (= 0 #192) [r 8448] [b831 := T] [j 193 congruence] 
#8869 := (= #756 #194) [r 8448] [b832 := T] [j 8863 congruence] 
#8870 := (<= #143 -1) [b833 := F no-cgc] [t 5:1086] 
#8871 := (<= #707 -2) [b834 := F no-cgc] [t 5:1087] 
#8872 := (= 0 #359) [r 8448] [b835 := T] [j 8534 congruence] 
#8873 := (= 0 #352) [r 8448] [b836 := T] [j 8534 congruence] 
#8874 := (= 0 #316) [r 8448] [b837 := T] [j 8534 congruence] 
#8875 := (= 0 #358) [r 8448] [b838 := T] [j 8534 congruence] 
#8876 := (= 0 #348) [r 8448] [b839 := T] [j 8534 congruence] 
#8877 := (= 0 #8375) [r 8448] [b840 := T] [j 8378 congruence] 
#8878 := (= 0 #347) [r 8448] [b841 := T] [j 8534 congruence] 
#8879 := (= 0 #353) [r 8448] [b842 := T] [j 8534 congruence] 
#8880 := (= 0 #317) [r 8448] [b843 := T] [j 8534 congruence] 
#8881 := (= 0 #322) [r 8448] [b844 := T] [j 8534 congruence] 
#8882 := (= 0 #321) [b845 := F] 
#8883 := (<= lam10n20 0) [b846 := F no-cgc] [t 5:1088] 
#8884 := (<= #1234 0) [b847 := T no-cgc] [t 5:1089] 
#8885 := (<= #1233 0) [b848 := T no-cgc] [t 5:1090] 
#8886 := (>= #1286 1) [b849 := F no-cgc] [t 5:1091] 
#8887 := (>= #1294 1) [b850 := F no-cgc] [t 5:1092] 
#8888 := (>= #1298 1) [b851 := F no-cgc] [t 5:1093] 
#8889 := (<= lam10n19 0) [b852 := T no-cgc] [t 5:1094] 
#8890 := (>= #1285 0) [b853 := T no-cgc] [t 5:1095] 
#8891 := (>= #1281 0) [b854 := T no-cgc] [t 5:1096] 
#8892 := (>= #1297 0) [b855 := T no-cgc] [t 5:1097] 
#8893 := (>= #1293 0) [b856 := T no-cgc] [t 5:1098] 
#8894 := (<= #1233 -1) [b857 := F no-cgc] [t 5:1099] 
#8895 := (= 0 #1915) [r 8448] [b858 := T] [j 3309 congruence] 
#8896 := (= 0 #2121) [r 8448] [b859 := T] [j 8534 congruence] 
#8897 := (= #195 Nl4arg92) [r 8448] [b860 := T] [j 8853 congruence] 
#8898 := (= #203 Nl4arg112) [r 8448] [b861 := T] [j 8860 congruence] 
#8899 := (= #191 Nl4arg82) [r 8448] [b862 := T] [j 8864 congruence] 
#8900 := (= 0 undef35) [r 8448] [b863 := T] [j 8736 congruence] 
#8901 := (= #203 #765) [r 8448] [b864 := T] [j 8860 congruence] 
#8902 := (= 0 #2124) [r 8448] [b865 := T] [j 8534 congruence] 
#8903 := (= 0 #186) [r 8448] [b866 := T] [j 8588 congruence] 
#8904 := (= 0 #748) [r 8448] [b867 := T] [j 8534 congruence] 
#8905 := (= #8806 #8661) [r 8448] [b868 := T] [j 8534 congruence] 
#8906 := (= #195 #191) [r 8448] [b869 := T] [j 1924 congruence] 
#8907 := (<= Nl4arg131 0) [b870 := T no-cgc] [t 5:1100] 
#8908 := (>= Nl4arg131 0) [b871 := T no-cgc] [t 5:1101] 
#8909 := (>= #772 2) [b872 := F no-cgc] [t 5:1102] 
#8910 := (<= #1033 -1) [b873 := F no-cgc] [t 5:1103] 
#8911 := (<= #1037 -1) [b874 := F no-cgc] [t 5:1104] 
#8912 := (<= #2110 -1) [b875 := F no-cgc] [t 5:1105] 
#8913 := (>= #382 1) [b876 := F no-cgc] [t 5:1106] 
#8914 := (<= #1301 -1) [b877 := F no-cgc] [t 5:1107] 
#8915 := (>= #904 1) [b878 := F no-cgc] [t 5:1108] 
#8916 := (>= #2110 1) [b879 := F no-cgc] [t 5:1109] 
#8917 := (<= #210 -1) [b880 := F no-cgc] [t 5:1110] 
#8918 := (<= #772 -2) [b881 := F no-cgc] [t 5:1111] 
#8919 := (<= #1302 -1) [b882 := F no-cgc] [t 5:1112] 
#8920 := (<= #2121 -1) [b883 := F no-cgc] [t 5:1113] 
#8921 := (>= #893 1) [b884 := F no-cgc] [t 5:1114] 
#8922 := (<= #1290 -1) [b885 := F no-cgc] [t 5:1115] 
#8923 := (= 0 #762) [r 8448] [b886 := T] [j 763 congruence] 
#8924 := (<= lam4n17 -1) [b887 := F no-cgc] [t 5:1116] 
#8925 := (>= #316 1) [b888 := F no-cgc] [t 5:1117] 
#8926 := (>= #1241 1) [b889 := F no-cgc] [t 5:1118] 
#8927 := (<= #382 -1) [b890 := F no-cgc] [t 5:1119] 
#8928 := (>= #1246 1) [b891 := F no-cgc] [t 5:1120] 
#8929 := (>= #321 1) [b892 := T no-cgc] [t 5:1121] 
#8930 := (>= #719 2) [b893 := F no-cgc] [t 5:1122] 
#8931 := (= 0 #770) [r 8448] [b894 := T] [j 771 congruence] 
#8932 := (= #207 #769) [r 8448] [b895 := T] [j 8859 congruence] 
#8933 := (= #207 Nl4arg122) [r 8448] [b896 := T] [j 8859 congruence] 
#8934 := (= #199 #761) [r 8448] [b897 := T] [j 8534 congruence] 
#8935 := (>= #756 2) [b898 := F no-cgc] [t 5:1123] 
#8936 := (>= #1247 1) [b899 := T no-cgc] [t 5:1124] 
#8937 := (>= #1285 1) [b900 := F no-cgc] [t 5:1125] 
#8938 := (>= #2118 0) [b901 := T no-cgc] [t 5:1126] 
#8939 := (<= #8824 2) [b902 := T no-cgc] [t 5:1127] 
#8940 := (>= #8824 2) [b903 := T no-cgc] [t 5:1128] 
#8941 := (<= #863 -1) [b904 := T no-cgc] [t 5:1129] 
#8942 := (<= #497 -1) [b905 := T no-cgc] [t 5:1130] 
#8943 := (= 0 #1291) [r 8448] [b906 := T] [j 8534 congruence] 
#8944 := (= 0 #1290) [r 8448] [b907 := T] [j 8534 congruence] 
#8945 := (+ #8770 #8771 #8772 #8773 Nl4arg32 Nl4arg42) [r 8783] [p 8947] [t 5:1131] [j 8783 arith 539 325 259 356 252 336 --> 8783 == 8945] 
#8947 := (= #8945 0) [b908 := F] 
#8946 := (+ #731 lam3n16 #1961 #1965) [r 87] [p 8949] [t 5:1132] [j 87 sat: 909] 
#8949 := (= #8946 0) [r 8448] [b909 := T] [j 8534 congruence] 
bool-vars
1: 2082 l_true (>= undef377 1) arith
2: 2083 l_true (>= undef29 0) arith
3: 2084 l_true (>= undef181 0) arith
4: 2283 l_true k!2
5: 2326 l_true k!0
6: 2087 l_false (<= undef378 1) arith
7: 2091 l_true (>= undef178 4) arith
8: 2092 l_true (<= #2090 14) arith
9: 2095 l_true (>= undef28 15) arith
10: 2096 l_false (<= #2094 536870909) arith
11: 3180 l_false k!4
12: 2113 l_true (<= #2112 0) arith
13: 2127 l_true (<= #2126 0) arith
16: 3179 l_true (>= Nl4arg11 -2) arith
17: 9 l_true (<= Nl4arg11 2) arith
18: 2281 l_true (>= Nl4arg21 -2) arith
19: 12 l_true (<= Nl4arg21 2) arith
20: 3164 l_true (>= Nl4arg31 -2) arith
21: 15 l_true (<= Nl4arg31 2) arith
22: 4014 l_true (>= Nl4arg41 -2) arith
23: 18 l_true (<= Nl4arg41 2) arith
24: 4011 l_true (>= Nl4arg51 -2) arith
25: 21 l_true (<= Nl4arg51 2) arith
26: 4013 l_true (>= Nl4arg61 -2) arith
27: 24 l_true (<= Nl4arg61 2) arith
28: 2938 l_true (>= Nl4arg71 -2) arith
29: 27 l_true (<= Nl4arg71 2) arith
30: 3222 l_true (>= Nl4arg81 -2) arith
31: 30 l_true (<= Nl4arg81 2) arith
32: 3369 l_true (>= Nl4arg91 -2) arith
33: 33 l_true (<= Nl4arg91 2) arith
34: 3398 l_true (>= Nl4arg101 -2) arith
35: 36 l_true (<= Nl4arg101 2) arith
36: 4185 l_true (>= Nl4arg111 -2) arith
37: 39 l_true (<= Nl4arg111 2) arith
38: 4187 l_true (>= Nl4arg121 -2) arith
39: 42 l_true (<= Nl4arg121 2) arith
40: 3560 l_true (>= Nl4arg131 -2) arith
41: 45 l_true (<= Nl4arg131 2) arith
42: 3542 l_true (>= Nl4arg12 -2) arith
43: 48 l_true (<= Nl4arg12 2) arith
44: 3543 l_true (>= Nl4arg22 -2) arith
45: 51 l_true (<= Nl4arg22 2) arith
46: 3557 l_true (>= Nl4arg32 -2) arith
47: 54 l_true (<= Nl4arg32 2) arith
48: 3558 l_true (>= Nl4arg42 -2) arith
49: 57 l_true (<= Nl4arg42 2) arith
50: 3559 l_true (>= Nl4arg52 -2) arith
51: 60 l_true (<= Nl4arg52 2) arith
52: 3171 l_true (>= Nl4arg62 -2) arith
53: 63 l_true (<= Nl4arg62 2) arith
54: 3172 l_true (>= Nl4arg72 -2) arith
55: 66 l_true (<= Nl4arg72 2) arith
56: 3006 l_true (>= Nl4arg82 -2) arith
57: 69 l_true (<= Nl4arg82 2) arith
58: 3376 l_true (>= Nl4arg92 -2) arith
59: 72 l_true (<= Nl4arg92 2) arith
60: 3382 l_true (>= Nl4arg102 -2) arith
61: 75 l_true (<= Nl4arg102 2) arith
62: 3944 l_true (>= Nl4arg112 -2) arith
63: 78 l_true (<= Nl4arg112 2) arith
64: 3964 l_true (>= Nl4arg122 -2) arith
65: 81 l_true (<= Nl4arg122 2) arith
66: 3972 l_true (>= Nl4arg132 -2) arith
67: 84 l_true (<= Nl4arg132 2) arith
68: 2960 l_true (>= #2959 0) arith
69: 88 l_true (>= lam0n0 0) arith
70: 90 l_true (>= lam0n1 0) arith
71: 92 l_true (>= lam0n2 0) arith
72: 94 l_true (>= lam0n3 0) arith
73: 96 l_true (>= lam0n4 0) arith
74: 98 l_true (>= lam0n5 0) arith
75: 100 l_true (>= lam0n6 0) arith
76: 102 l_true (>= lam0n7 0) arith
77: 104 l_true (>= lam0n8 0) arith
78: 106 l_true (>= lam0n9 0) arith
79: 108 l_true (>= lam0n10 0) arith
80: 110 l_true (>= lam0n11 0) arith
81: 112 l_true (>= lam0n12 0) arith
82: 114 l_true (>= lam0n13 0) arith
83: 116 l_true (>= lam0n14 0) arith
84: 118 l_true (>= lam0n15 0) arith
85: 120 l_true (>= lam0n16 0) arith
86: 122 l_true (>= lam0n17 0) arith
87: 124 l_true (>= lam0n18 0) arith
88: 1746 l_false (<= #1745 1) arith
89: 1752 l_true (= #1751 0)
90: 1755 l_true (= #1754 0)
91: 1759 l_true (= #1758 0)
92: 1762 l_true (= #1761 0)
93: 1765 l_true (= #1764 0)
94: 1767 l_true (= #1766 0)
95: 1770 l_true (= #1769 0)
96: 193 l_true (= #192 0)
97: 197 l_true (= #196 0)
98: 201 l_true (= #200 0)
99: 205 l_true (= #204 0)
100: 209 l_true (= #208 0)
101: 213 l_true (= #212 0)
102: 1772 l_true (= lam0n13 0)
103: 1773 l_true (= lam0n16 0)
104: 1775 l_true (= lam0n2 0)
105: 1776 l_true (= lam0n3 0)
106: 1778 l_true (= #1777 0)
107: 1781 l_true (= #1780 0)
108: 1783 l_true (= lam0n5 0)
109: 1784 l_true (= lam0n6 0)
110: 2993 l_false (>= #2992 0) arith
111: 2285 l_false (>= #2284 0) arith
112: 2204 l_true (>= #2200 0) arith
113: 2195 l_false (>= #2202 0) arith
114: 254 l_true (>= lam1n9 0) arith
115: 3047 l_false (>= #2975 0) arith
116: 2198 l_false (>= #2300 0) arith
117: 260 l_true (>= lam1n12 0) arith
118: 3050 l_true (<= Nl4arg11 0) arith
119: 2203 l_false (>= #2199 0) arith
120: 3052 l_true (<= Nl4arg51 0) arith
121: 270 l_true (>= lam1n17 0) arith
122: 272 l_true (>= lam1n18 0) arith
123: 2167 l_false (<= #2170 -1) arith
124: 365 l_true (= #364 0)
125: 369 l_true (= #368 0)
126: 373 l_false (= #372 0)
127: 377 l_true (= #376 0)
128: 381 l_true (= #380 0)
129: 385 l_true (= #384 0)
130: 1838 l_true (= Nl4arg61 0)
131: 3118 l_true (= #3117 0)
132: 1843 l_true (= Nl4arg81 0)
133: 1845 l_true (= Nl4arg91 0)
134: 1847 l_false (= Nl4arg101 0)
135: 1849 l_true (= Nl4arg111 0)
136: 1851 l_true (= Nl4arg121 0)
137: 1853 l_true (= Nl4arg131 0)
138: 3155 l_false (>= #3154 0) arith
139: 3188 l_true (>= #3187 0) arith
140: 2059 l_true (>= #2058 0) arith
141: 2062 l_true (>= #2061 0) arith
142: 2064 l_true (>= #2063 0) arith
143: 467 l_true (>= lam2n9 0) arith
144: 3242 l_true (>= #3170 0) arith
145: 2065 l_true (>= #2057 0) arith
146: 473 l_true (>= lam2n12 0) arith
147: 3245 l_true (<= Nl4arg12 0) arith
148: 2070 l_true (>= #2069 0) arith
149: 3247 l_true (<= Nl4arg52 0) arith
150: 483 l_true (>= lam2n17 0) arith
151: 485 l_true (>= lam2n18 0) arith
152: 2000 l_false (<= #1999 -1) arith
153: 578 l_true (= #577 0)
154: 582 l_true (= #581 0)
155: 586 l_false (= #585 0)
156: 590 l_true (= #589 0)
157: 594 l_true (= #593 0)
158: 598 l_true (= #597 0)
159: 1919 l_true (= Nl4arg62 0)
160: 3309 l_true (= #3308 0)
161: 1924 l_true (= Nl4arg82 0)
162: 1926 l_true (= Nl4arg92 0)
163: 1928 l_true (= Nl4arg102 0)
164: 1930 l_true (= Nl4arg112 0)
165: 1932 l_true (= Nl4arg122 0)
166: 1934 l_true (= Nl4arg132 0)
167: 3337 l_false (>= #3336 0) arith
168: 662 l_true (>= lam3n0 0) arith
169: 664 l_true (>= lam3n1 0) arith
170: 666 l_true (>= lam3n2 0) arith
171: 668 l_true (>= lam3n3 0) arith
172: 670 l_true (>= lam3n4 0) arith
173: 672 l_true (>= lam3n5 0) arith
174: 674 l_true (>= lam3n6 0) arith
175: 676 l_true (>= lam3n7 0) arith
176: 678 l_true (>= lam3n8 0) arith
177: 680 l_true (>= lam3n9 0) arith
178: 682 l_true (>= lam3n10 0) arith
179: 684 l_true (>= lam3n11 0) arith
180: 686 l_true (>= lam3n12 0) arith
181: 688 l_true (>= lam3n13 0) arith
182: 690 l_true (>= lam3n14 0) arith
183: 692 l_true (>= lam3n15 0) arith
184: 694 l_true (>= lam3n16 0) arith
185: 696 l_true (>= lam3n17 0) arith
186: 1951 l_false (<= #1950 1) arith
187: 1957 l_true (= #1956 0)
188: 1960 l_true (= #1959 0)
189: 1964 l_true (= #1963 0)
190: 1967 l_true (= #1966 0)
191: 1971 l_true (= #1970 0)
192: 1973 l_true (= #1972 0)
193: 1975 l_true (= #1974 0)
194: 755 l_true (= #754 0)
195: 759 l_true (= #758 0)
196: 763 l_true (= #762 0)
197: 767 l_true (= #766 0)
198: 771 l_true (= #770 0)
199: 775 l_true (= #774 0)
200: 1977 l_true (= lam3n13 0)
201: 1978 l_true (= lam3n2 0)
202: 1979 l_true (= lam3n3 0)
203: 1981 l_true (= #1980 0)
204: 1984 l_true (= #1983 0)
205: 1986 l_true (= lam3n5 0)
206: 1987 l_true (= lam3n6 0)
207: 3368 l_false (>= #3367 0) arith
208: 1892 l_true (>= #1891 0) arith
209: 1897 l_true (>= #1896 0) arith
210: 1900 l_true (>= #1898 0) arith
211: 812 l_true (>= lam4n9 0) arith
212: 3415 l_true (>= #3351 0) arith
213: 1901 l_true (>= #1890 0) arith
214: 818 l_true (>= lam4n12 0) arith
215: 1904 l_true (>= #1903 0) arith
216: 826 l_false (>= lam4n16 0) arith
217: 828 l_true (>= lam4n17 0) arith
218: 1941 l_false (<= #1940 -1) arith
219: 887 l_true (= #886 0)
220: 891 l_true (= #890 0)
221: 895 l_false (= #894 0)
222: 899 l_true (= #898 0)
223: 903 l_true (= #902 0)
224: 907 l_true (= #906 0)
225: 2020 l_true (= Nl4arg51 0)
226: 2021 l_true (= Nl4arg71 0)
227: 3502 l_false (>= #3501 0) arith
228: 3533 l_true (>= #3532 0) arith
229: 1854 l_false (>= #1856 0) arith
230: 1859 l_true (>= #1858 0) arith
231: 1861 l_false (>= #1860 0) arith
232: 948 l_true (>= lam5n9 0) arith
233: 3580 l_true (>= #3516 0) arith
234: 1863 l_false (>= #1855 0) arith
235: 954 l_true (>= lam5n12 0) arith
236: 1862 l_true (>= #1864 0) arith
237: 962 l_true (>= lam5n16 0) arith
238: 964 l_true (>= lam5n17 0) arith
239: 3735 l_false (<= #2952 -1) arith
240: 1023 l_true (= #1022 0)
241: 1027 l_true (= #1026 0)
242: 1031 l_false (= #1030 0)
243: 1035 l_true (= #1034 0)
244: 1039 l_true (= #1038 0)
245: 1043 l_true (= #1042 0)
246: 2066 l_true (= Nl4arg52 0)
247: 2067 l_true (= Nl4arg72 0)
248: 3806 l_true (>= #3805 0) arith
249: 4107 l_true (>= #4096 0) arith
250: 4109 l_false (<= Nl4arg21 0) arith
251: 1486 l_true (>= lam6n6 0) arith
252: 4114 l_true (<= Nl4arg31 0) arith
253: 4115 l_true (>= #4098 0) arith
254: 1490 l_true (>= lam6n8 0) arith
255: 4119 l_false (<= #4124 -1) arith
256: 4135 l_true (>= #4130 0) arith
257: 4137 l_false (<= Nl4arg22 0) arith
258: 1549 l_false (>= lam7n6 0) arith
259: 4142 l_true (<= Nl4arg32 0) arith
260: 4143 l_true (>= #4129 0) arith
261: 1553 l_true (>= lam7n8 0) arith
262: 4147 l_false (<= #4150 -1) arith
263: 4161 l_true (>= #4156 0) arith
264: 1612 l_true (>= lam8n6 0) arith
265: 4165 l_true (>= #4155 0) arith
266: 1616 l_true (>= lam8n8 0) arith
267: 4166 l_true (<= lam8n6 0) arith
268: 4173 l_false (<= #4172 -1) arith
269: 4184 l_true (>= #4179 0) arith
270: 1667 l_true (>= lam9n6 0) arith
271: 4188 l_true (>= #4178 0) arith
272: 1671 l_true (>= lam9n8 0) arith
273: 4189 l_false (<= lam9n6 0) arith
274: 4195 l_true (<= #4194 -1) arith
278: 3868 l_true (>= #3867 0) arith
279: 3894 l_true (>= #3893 0) arith
280: 1191 l_true (>= lam10n6 0) arith
281: 3895 l_true (>= #3830 0) arith
282: 3896 l_true (>= #3844 0) arith
283: 1203 l_true (>= lam10n12 0) arith
284: 3897 l_true (>= #3875 0) arith
285: 3898 l_true (<= lam10n17 0) arith
286: 1209 l_true (>= lam10n15 0) arith
287: 1213 l_true (>= lam10n17 0) arith
288: 4012 l_true (>= #4009 0) arith
289: 1217 l_true (>= lam10n19 0) arith
290: 1219 l_true (>= lam10n20 0) arith
291: 3165 l_false (<= #3206 1) arith
292: 1284 l_true (= #1283 0)
293: 1288 l_true (= #1287 0)
294: 1292 l_true (= #1291 0)
295: 1296 l_true (= #1295 0)
296: 1300 l_true (= #1299 0)
297: 1304 l_true (= #1303 0)
298: 8285 l_true (= Nl4CT2 0)
299: 8284 l_true (<= #738 0) arith
300: 8287 l_false (= Nl4CT1 0)
301: 8286 l_true (<= #157 0) arith
302: 8288 l_true (<= #719 0) arith
303: 8289 l_false (<= #158 0) arith
304: 8290 l_false (<= #720 0) arith
305: 8291 l_true (<= #152 0) arith
306: 8292 l_true (<= #715 0) arith
307: 8293 l_true (<= #153 0) arith
308: 8294 l_true (<= #714 0) arith
309: 8295 l_true (<= #163 0) arith
310: 8296 l_true (<= #725 0) arith
311: 8297 l_true (<= #164 0) arith
312: 8298 l_true (<= #726 0) arith
313: 8299 l_true (<= Nl4CT1 0) arith
314: 8300 l_false (>= Nl4CT1 0) arith
315: 8301 l_true (<= #707 0) arith
316: 8302 l_true (<= #143 0) arith
317: 8303 l_true (>= #839 0) arith
318: 8304 l_true (<= #176 0) arith
319: 8305 l_false (>= #284 0) arith
320: 8306 l_true (<= lam3n16 0) arith
321: 8307 l_true (<= lam0n17 0) arith
322: 8308 l_true (>= Nl4arg41 0) arith
323: 8309 l_true (>= #169 0) arith
324: 8310 l_true (>= #731 0) arith
325: 8311 l_true (<= Nl4arg42 0) arith
326: 8312 l_false (<= lam0n18 0) arith
327: 8313 l_true (<= #170 0) arith
328: 8314 l_false (<= lam3n17 0) arith
329: 8315 l_true (<= #732 0) arith
330: 8316 l_false (<= #999 0) arith
331: 8317 l_true (<= #994 0) arith
332: 8318 l_false (<= lam2n17 0) arith
333: 8319 l_true (<= #497 0) arith
334: 8320 l_true (<= lam2n18 0) arith
335: 8321 l_true (<= #552 0) arith
336: 8322 l_true (>= Nl4arg32 0) arith
337: 8323 l_true (>= #164 0) arith
338: 8324 l_false (<= lam5n16 0) arith
339: 8325 l_true (<= #975 0) arith
340: 8326 l_true (<= lam5n17 0) arith
341: 8327 l_true (<= #1000 0) arith
342: 8328 l_true (>= #726 0) arith
343: 8329 l_false (<= Nl4arg12 -1) arith
344: 8330 l_false (<= #983 -1) arith
345: 8331 l_false (<= #999 -1) arith
346: 8332 l_false (<= #153 -1) arith
347: 8333 l_false (<= #530 -1) arith
348: 8334 l_false (<= #715 -1) arith
349: 8335 l_true (<= #982 0) arith
350: 8336 l_true (<= #2103 0) arith
351: 8337 l_true (<= #529 0) arith
352: 8339 l_true (= undef39 0)
353: 8338 l_true (<= #2104 0) arith
354: 8341 l_true (= undef40 0)
355: 8340 l_false (<= Nl4arg41 0) arith
356: 8342 l_true (>= Nl4arg31 0) arith
357: 8343 l_true (>= #993 0) arith
358: 8344 l_true (<= lam4n16 0) arith
359: 8345 l_false (<= #839 0) arith
360: 8346 l_true (>= #857 0) arith
361: 8347 l_true (>= #725 0) arith
362: 8348 l_false (<= #551 0) arith
363: 8349 l_true (>= #543 0) arith
364: 8350 l_true (>= #163 0) arith
365: 8351 l_false (>= #169 1) arith
366: 8352 l_true (>= Nl4arg11 0) arith
367: 8353 l_true (>= #846 0) arith
368: 8354 l_true (>= #714 0) arith
369: 8355 l_true (>= #529 0) arith
370: 8356 l_false (<= lam1n17 0) arith
371: 8357 l_true (<= #284 0) arith
372: 8358 l_false (<= #338 0) arith
373: 8359 l_true (>= #982 0) arith
374: 8360 l_true (>= #152 0) arith
375: 8361 l_false (<= #551 -1) arith
376: 8362 l_true (<= undef40 0) arith
377: 8363 l_true (>= undef40 0) arith
378: 8364 l_true (<= undef39 0) arith
379: 8365 l_true (>= undef39 0) arith
380: 8366 l_true (>= Nl4CT2 0) arith
381: 8367 l_true (>= #708 0) arith
382: 8368 l_true (>= #498 0) arith
383: 8369 l_true (>= #145 0) arith
384: 8370 l_true (>= Nl4arg22 0) arith
385: 8371 l_true (<= lam1n18 0) arith
386: 8372 l_true (>= #322 0) arith
387: 8373 l_true (>= #976 0) arith
388: 8374 l_false (<= #534 0) arith
389: 8376 l_true (= lam0n18 1)
390: 8378 l_true (= #8375 0)
391: 8377 l_true (<= #8375 0) arith
392: 8380 l_false (= Nl4CT1 1)
393: 8381 l_false (= lam0n17 1)
394: 8382 l_false (= #143 1)
395: 8383 l_true (<= #8379 0) arith
396: 8385 l_true (= lam3n17 1)
397: 8387 l_true (= #8384 0)
398: 8386 l_true (<= #8384 0) arith
399: 8389 l_true (= lam5n16 1)
400: 8390 l_false (= #975 1)
401: 8391 l_false (= lam3n16 1)
402: 8392 l_false (= #707 1)
403: 8388 l_true (<= Nl4CT1 1) arith
404: 8393 l_false (>= Nl4CT1 1) arith
405: 8394 l_false (<= #987 0) arith
406: 8395 l_true (= #1024 #1020)
407: 8396 l_true (= #1024 #1016)
408: 8397 l_true (= #1025 #1021)
409: 8398 l_true (= #1024 #1005)
410: 8399 l_true (= 1 lam5n16)
411: 8400 l_true (= #1025 #994)
412: 8401 l_true (= #1025 #1017)
413: 8402 l_true (= #1024 #982)
414: 8403 l_true (= #1025 #1011)
415: 8404 l_true (= #1025 #1006)
416: 8405 l_true (= 0 #1022)
417: 8406 l_true (= #1024 #1010)
418: 8407 l_true (<= #1764 0) arith
419: 8408 l_true (>= #1764 0) arith
420: 8409 l_true (<= #143 1) arith
421: 8410 l_false (>= #143 1) arith
422: 8411 l_true (<= lam0n5 0) arith
423: 8412 l_true (= 0 #982)
424: 8413 l_true (= #1024 #993)
425: 8414 l_true (<= lam0n3 0) arith
426: 8415 l_true (<= lam3n17 1) arith
427: 8416 l_true (>= lam3n17 1) arith
428: 8417 l_true (>= Nl4arg21 0) arith
429: 8418 l_false (<= #157 -1) arith
430: 8419 l_false (<= #534 -1) arith
431: 8420 l_false (<= #719 -1) arith
432: 8421 l_true (<= lam0n18 1) arith
433: 8422 l_true (>= lam0n18 1) arith
434: 8423 l_true (<= lam0n2 0) arith
435: 8424 l_true (<= lam0n6 0) arith
436: 8426 l_false (= Nl4arg41 -1)
437: 8428 l_true (= #8425 0)
438: 8427 l_true (<= #8425 0) arith
439: 8430 l_true (<= #8429 0) arith
440: 8433 l_true (= #8431 0)
441: 8432 l_true (<= #8431 0) arith
442: 8436 l_false (= #8434 0)
443: 8435 l_false (<= #8434 0) arith
444: 8437 l_true (<= #1751 0) arith
445: 8438 l_true (>= #1751 0) arith
446: 8439 l_true (<= #1766 0) arith
447: 8440 l_true (>= #1766 0) arith
448: 8441 l_true (<= #1758 0) arith
449: 8442 l_true (>= #1758 0) arith
450: 8443 l_true (<= #1780 0) arith
451: 8444 l_true (>= #1780 0) arith
452: 8445 l_true (>= #8384 0) arith
453: 8446 l_true (= #756 #748)
454: 8447 l_true (= 0 Nl4arg52)
455: 8448 l_true (= 0 #715)
456: 8449 l_true (= #757 #738)
457: 8450 l_true (= 0 #1956)
458: 8451 l_true (= 0 #1959)
459: 8452 l_true (= 0 #1963)
460: 8453 l_true (= 0 #1966)
461: 8454 l_false (= 0 #720)
462: 8455 l_true (= 0 #1970)
463: 8456 l_true (= 0 #1974)
464: 8457 l_true (= 0 lam3n13)
465: 8458 l_true (= 0 Nl4arg72)
466: 8459 l_true (= 0 #1980)
467: 8460 l_true (= 0 #8425)
468: 8461 l_true (= 0 #714)
469: 8462 l_true (= #757 #749)
470: 8463 l_true (= 0 #757)
471: 8464 l_true (= 0 #756)
472: 8465 l_true (= 0 #737)
473: 8466 l_true (>= #8425 0) arith
474: 8467 l_false (<= Nl4arg41 -1) arith
475: 8468 l_true (>= Nl4arg41 -1) arith
476: 8469 l_false (<= #169 -2) arith
477: 8471 l_false (= Nl4arg42 1)
478: 8474 l_false (= #8472 0)
479: 8475 l_false (= Nl4CT2 -1)
480: 8477 l_true (= #8473 0)
481: 8476 l_true (<= #8473 0) arith
482: 8480 l_true (= #8478 0)
483: 8479 l_true (<= #8478 0) arith
484: 8481 l_false (<= Nl4CT2 -1) arith
485: 8482 l_true (>= Nl4CT2 -1) arith
486: 8483 l_false (<= #708 -4) arith
487: 8485 l_false (<= #8484 0) arith
488: 8489 l_true (= #8487 0)
489: 8488 l_true (<= Nl4arg42 1) arith
490: 8490 l_false (>= Nl4arg42 1) arith
491: 8491 l_true (<= #1963 0) arith
492: 8492 l_true (>= #1963 0) arith
493: 8493 l_true (<= #1974 0) arith
494: 8494 l_true (>= #1974 0) arith
495: 8495 l_true (<= lam3n3 0) arith
496: 8496 l_true (<= lam3n6 0) arith
497: 8497 l_true (>= #8375 0) arith
498: 8498 l_true (<= lam3n2 0) arith
499: 8499 l_true (= 0 #8478)
500: 8500 l_true (>= #8478 0) arith
501: 8501 l_true (<= lam3n5 0) arith
502: 8502 l_true (= 0 #1754)
503: 8503 l_true (= 0 #1761)
504: 8504 l_true (= 0 #1769)
505: 8505 l_true (= 0 lam0n13)
506: 8506 l_true (= 0 #1777)
507: 8507 l_true (= 0 #1771)
508: 8508 l_true (= 0 #175)
509: 8509 l_true (= #195 #164)
510: 8510 l_true (= #194 #180)
511: 8511 l_true (= 0 #176)
512: 8512 l_true (= #195 #181)
513: 8513 l_true (= #194 #163)
514: 8514 l_true (= #195 #187)
515: 8515 l_true (= #194 #186)
516: 8516 l_false (<= #145 -4) arith
517: 8518 l_false (<= #8517 0) arith
518: 8522 l_true (= #8520 0)
519: 8521 l_true (<= #1972 0) arith
520: 8523 l_true (>= #1972 0) arith
521: 8524 l_true (<= #1980 0) arith
522: 8525 l_true (>= #1980 0) arith
523: 8527 l_true (= #8429 0)
524: 8533 l_true (= #8531 -1)
525: 8532 l_true (= 0 lam0n16)
526: 8534 l_true (= 0 #153)
527: 8535 l_true (= 0 #152)
528: 8536 l_false (= 0 #158)
529: 8537 l_true (= 0 #1751)
530: 8538 l_true (= 0 #1764)
531: 8539 l_true (= 0 #157)
532: 8540 l_true (= 0 #8429)
533: 8541 l_true (<= lam5n16 1) arith
534: 8542 l_true (>= lam5n16 1) arith
535: 8543 l_true (= 0 #8431)
536: 8544 l_true (<= lam0n16 0) arith
537: 8545 l_true (>= #8473 0) arith
538: 8546 l_true (<= Nl4CT2 0) arith
539: 8547 l_true (>= Nl4arg42 0) arith
540: 8548 l_true (<= #1761 0) arith
541: 8549 l_true (>= #1761 0) arith
542: 8550 l_false (<= #732 -2) arith
543: 8551 l_true (<= #1970 0) arith
544: 8552 l_true (>= #1970 0) arith
545: 8553 l_true (<= #1956 0) arith
546: 8554 l_true (>= #1956 0) arith
547: 8555 l_true (<= lam3n13 0) arith
548: 8556 l_true (<= #1983 0) arith
549: 8557 l_true (>= #1983 0) arith
550: 8558 l_true (= -1 #8531)
551: 8559 l_true (>= #8429 0) arith
552: 8560 l_true (= 0 #8487)
553: 8562 l_true (= #8379 0)
554: 8564 l_true (= #8561 0)
555: 8563 l_true (<= lam3n16 1) arith
556: 8565 l_false (>= lam3n16 1) arith
557: 8566 l_true (= 0 #8379)
558: 8567 l_true (>= #8379 0) arith
559: 8568 l_true (= 0 #1758)
560: 8570 l_true (= Nl4arg32 Nl4arg52)
561: 8571 l_true (= #164 #176)
562: 8572 l_true (= Nl4arg31 Nl4arg51)
563: 8573 l_true (= #163 #175)
564: 8574 l_true (= Nl4arg31 Nl4arg61)
565: 8575 l_true (= #163 #180)
566: 8569 l_true (<= #1754 0) arith
567: 8576 l_true (>= #1754 0) arith
568: 8577 l_true (<= #1777 0) arith
569: 8578 l_true (>= #1777 0) arith
570: 8579 l_true (<= lam0n13 0) arith
571: 8580 l_true (<= #8531 -1) arith
572: 8581 l_true (>= #8531 -1) arith
573: 8582 l_true (= 0 #1271)
574: 8583 l_true (= 0 #1278)
575: 8584 l_true (= 0 #1246)
576: 8585 l_true (= 0 #1270)
577: 8586 l_true (= 0 #1264)
578: 8587 l_true (= 0 #1265)
579: 8588 l_true (= 0 #1277)
580: 8589 l_true (= 0 #1241)
581: 8590 l_true (= 0 #1242)
582: 8591 l_false (= 0 #1247)
583: 8592 l_true (= 0 #1000)
584: 8593 l_true (<= #1769 0) arith
585: 8594 l_true (>= #1769 0) arith
586: 8595 l_true (= 0 #4009)
587: 8596 l_true (= 0 #8561)
588: 8597 l_true (<= #8561 0) arith
589: 8598 l_true (>= #8561 0) arith
590: 8599 l_true (= #2122 #2108)
591: 8600 l_true (= #2123 #2109)
592: 8601 l_true (= #2119 #2105)
593: 8602 l_true (= 0 Nl4arg91)
594: 8603 l_false (= 0 Nl4arg101)
595: 8604 l_true (= 0 Nl4arg111)
596: 8605 l_true (= 0 Nl4arg121)
597: 8606 l_true (= 0 Nl4arg131)
598: 8607 l_true (= 0 Nl4arg81)
599: 8608 l_true (= #2120 #2106)
600: 8609 l_true (= #2124 #2110)
601: 8610 l_true (= #2121 #2107)
602: 8611 l_false (<= #1000 -1) arith
603: 8612 l_false (>= #976 1) arith
604: 8613 l_true (<= Nl4arg91 0) arith
605: 8614 l_true (>= Nl4arg91 0) arith
606: 8615 l_true (<= Nl4arg102 0) arith
607: 8616 l_true (>= Nl4arg102 0) arith
608: 8617 l_true (<= Nl4arg111 0) arith
609: 8618 l_true (>= Nl4arg111 0) arith
610: 8619 l_true (<= Nl4arg121 0) arith
611: 8620 l_true (>= Nl4arg121 0) arith
612: 8621 l_true (<= #372 0) arith
613: 8622 l_false (>= #372 0) arith
614: 8623 l_true (<= #898 0) arith
615: 8624 l_true (>= #898 0) arith
616: 8625 l_true (<= #368 0) arith
617: 8626 l_true (>= #368 0) arith
618: 8627 l_false (<= #894 0) arith
619: 8628 l_true (>= #894 0) arith
620: 8629 l_true (<= #376 0) arith
621: 8630 l_true (>= #376 0) arith
622: 8631 l_true (<= #902 0) arith
623: 8632 l_true (>= #902 0) arith
624: 8633 l_true (<= #585 0) arith
625: 8634 l_false (>= #585 0) arith
626: 8635 l_false (<= #378 -1) arith
627: 8636 l_false (<= #199 -2) arith
628: 8637 l_false (<= #761 -2) arith
629: 8638 l_false (<= #888 -1) arith
630: 8639 l_false (<= #1029 -1) arith
631: 8640 l_true (<= #8642 0) arith
632: 8643 l_true (>= #8642 0) arith
633: 8644 l_true (<= #1030 0) arith
634: 8645 l_false (>= #1030 0) arith
635: 8646 l_false (>= #584 1) arith
636: 8647 l_false (>= #761 2) arith
637: 8648 l_false (>= #888 1) arith
638: 8649 l_true (>= #893 0) arith
639: 8650 l_false (>= #1029 1) arith
640: 8651 l_false (>= #199 2) arith
641: 8652 l_false (>= #366 1) arith
642: 8653 l_false (>= #371 1) arith
643: 8654 l_false (<= #374 -1) arith
644: 8655 l_true (<= #8657 0) arith
645: 8658 l_true (>= #8657 0) arith
646: 8659 l_true (<= #8661 0) arith
647: 8662 l_true (>= #8661 0) arith
648: 8663 l_false (<= #366 -1) arith
649: 8664 l_false (>= #2109 1) arith
650: 8665 l_false (<= #206 -1) arith
651: 8666 l_false (>= #145 2) arith
652: 8667 l_false (<= #194 -1) arith
653: 8668 l_false (>= #900 1) arith
654: 8669 l_false (>= #194 1) arith
655: 8670 l_false (>= #206 1) arith
656: 8671 l_true (<= Nl4arg112 0) arith
657: 8672 l_true (>= Nl4arg112 0) arith
658: 8673 l_true (<= Nl4arg132 0) arith
659: 8674 l_true (>= Nl4arg132 0) arith
660: 8675 l_true (<= #380 0) arith
661: 8676 l_true (>= #380 0) arith
662: 8677 l_true (<= #8679 0) arith
663: 8680 l_true (>= #8679 0) arith
664: 8681 l_true (<= #597 0) arith
665: 8682 l_true (>= #597 0) arith
666: 8683 l_true (<= #906 0) arith
667: 8684 l_true (>= #906 0) arith
668: 8685 l_true (<= #1042 0) arith
669: 8686 l_true (>= #1042 0) arith
670: 8687 l_true (<= #1034 0) arith
671: 8688 l_true (>= #1034 0) arith
672: 8689 l_false (>= #896 1) arith
673: 8690 l_false (<= #2124 -1) arith
674: 8691 l_false (<= #588 -1) arith
675: 8692 l_false (<= #203 -2) arith
676: 8693 l_false (<= #211 -2) arith
677: 8694 l_false (<= #773 -2) arith
678: 8695 l_false (<= #765 -2) arith
679: 8696 l_false (<= #383 -1) arith
680: 8697 l_true (<= #589 0) arith
681: 8698 l_true (>= #589 0) arith
682: 8699 l_true (<= #384 0) arith
683: 8700 l_true (>= #384 0) arith
684: 8701 l_false (>= #1041 1) arith
685: 8702 l_false (>= #1033 1) arith
686: 8703 l_false (>= #203 2) arith
687: 8704 l_false (>= #211 2) arith
688: 8705 l_false (>= #375 1) arith
689: 8706 l_false (>= #383 1) arith
690: 8707 l_false (>= #588 1) arith
691: 8708 l_false (>= #596 1) arith
692: 8709 l_false (>= #765 2) arith
693: 8710 l_false (>= #773 2) arith
694: 8711 l_true (>= #897 0) arith
695: 8712 l_true (>= #905 0) arith
696: 8713 l_true (<= #8715 0) arith
697: 8716 l_true (>= #8715 0) arith
698: 8718 l_false (= undef36 0)
699: 8719 l_false (= undef38 0)
700: 8717 l_true (<= undef38 0) arith
701: 8720 l_false (>= undef38 0) arith
702: 8721 l_false (<= #2108 -1) arith
703: 8722 l_false (>= #2108 1) arith
704: 8723 l_false (>= #374 1) arith
705: 8724 l_true (<= undef36 0) arith
706: 8725 l_false (>= undef36 0) arith
707: 8726 l_true (= 0 Nl4arg122)
708: 8727 l_true (= #1920 #3308)
709: 8728 l_true (= #2105 #2119)
710: 8729 l_true (<= #581 0) arith
711: 8730 l_true (>= #581 0) arith
712: 8731 l_false (<= #591 -1) arith
713: 8732 l_false (>= #378 1) arith
714: 8733 l_false (<= #587 -1) arith
715: 8734 l_false (<= #579 -1) arith
716: 8736 l_true (= undef35 0)
717: 8735 l_true (<= undef35 0) arith
718: 8737 l_true (>= undef35 0) arith
719: 8738 l_true (= 0 #2106)
720: 8739 l_true (= 0 Nl4arg82)
721: 8740 l_true (= 0 #2123)
722: 8741 l_true (<= #2106 0) arith
723: 8742 l_true (>= #2106 0) arith
724: 8743 l_true (= 0 Nl4arg92)
725: 8744 l_true (<= #2123 0) arith
726: 8745 l_true (>= #2123 0) arith
727: 8746 l_true (= #2109 #2123)
728: 8747 l_true (<= #1026 0) arith
729: 8748 l_true (>= #1026 0) arith
730: 8749 l_false (>= #498 1) arith
731: 8750 l_true (<= #8752 0) arith
732: 8753 l_true (>= #8752 0) arith
733: 8754 l_false (>= #579 1) arith
734: 8755 l_true (= 0 #2110)
735: 8756 l_true (= 0 #1041)
736: 8758 l_true (= undef37 0)
737: 8757 l_true (<= undef37 0) arith
738: 8759 l_true (>= undef37 0) arith
739: 8765 l_false (= #8763 -1)
740: 8764 l_true (= 0 #1029)
741: 8766 l_true (= 0 #893)
742: 8767 l_false (<= #900 -1) arith
743: 8768 l_false (<= #896 -1) arith
744: 8776 l_false (= #8774 2)
745: 8775 l_true (= 0 #2107)
746: 8777 l_true (= 0 #2105)
747: 8778 l_true (= 0 #2108)
748: 8779 l_true (= 0 Nl4arg112)
749: 8780 l_true (<= #2105 0) arith
750: 8781 l_true (>= #2105 0) arith
751: 8782 l_true (= 0 Nl4arg102)
752: 8785 l_false (= #8783 2)
753: 8784 l_true (= #552 #8769)
754: 8786 l_true (= 0 #580)
755: 8787 l_true (<= Nl4arg92 0) arith
756: 8788 l_true (>= Nl4arg92 0) arith
757: 8789 l_true (<= Nl4arg122 0) arith
758: 8790 l_true (>= Nl4arg122 0) arith
759: 8791 l_true (<= #580 0) arith
760: 8792 l_true (>= #580 0) arith
761: 8793 l_true (<= #890 0) arith
762: 8794 l_true (>= #890 0) arith
763: 8795 l_false (<= #195 -2) arith
764: 8796 l_false (<= #207 -2) arith
765: 8797 l_false (>= #2120 1) arith
766: 8798 l_false (<= #367 -1) arith
767: 8799 l_false (<= #379 -1) arith
768: 8800 l_false (>= #592 1) arith
769: 8801 l_false (<= #757 -2) arith
770: 8802 l_false (<= #769 -2) arith
771: 8803 l_false (<= #1025 -1) arith
772: 8804 l_true (<= #8806 0) arith
773: 8807 l_true (>= #8806 0) arith
774: 8808 l_false (>= #195 2) arith
775: 8809 l_false (>= #207 2) arith
776: 8810 l_false (<= #756 -2) arith
777: 8811 l_false (>= #757 2) arith
778: 8812 l_false (>= #764 2) arith
779: 8813 l_false (>= #768 2) arith
780: 8814 l_false (>= #1037 1) arith
781: 8815 l_true (>= #889 0) arith
782: 8816 l_true (<= #1038 0) arith
783: 8817 l_true (>= #1038 0) arith
784: 8818 l_false (<= #202 -1) arith
785: 8819 l_false (>= #769 2) arith
786: 8820 l_false (>= #2122 1) arith
787: 8821 l_false (<= #764 -2) arith
788: 8822 l_true (= 0 #212)
789: 8826 l_true (= #8824 2)
790: 8825 l_true (= 0 #2109)
791: 8827 l_true (= #1920 #1839)
792: 8828 l_true (= 0 Nl4arg51)
793: 8829 l_false (<= #840 -1) arith
794: 8830 l_true (= 0 #200)
795: 8831 l_true (= 0 #204)
796: 8832 l_true (= 0 #371)
797: 8833 l_true (= 0 #766)
798: 8834 l_true (= 0 #199)
799: 8835 l_true (= #1920 #1834)
800: 8836 l_true (= 0 #2111)
801: 8837 l_true (= 0 #2103)
802: 8838 l_true (= 0 #758)
803: 8839 l_true (= 0 #2104)
804: 8840 l_false (<= #901 -1) arith
805: 8841 l_false (<= #592 -1) arith
806: 8842 l_false (<= #768 -2) arith
807: 8843 l_true (<= Nl4arg81 0) arith
808: 8844 l_true (>= Nl4arg81 0) arith
809: 8845 l_true (<= #364 0) arith
810: 8846 l_true (>= #364 0) arith
811: 8847 l_true (<= #886 0) arith
812: 8848 l_true (>= #886 0) arith
813: 8849 l_false (<= #752 -2) arith
814: 8850 l_false (>= #884 1) arith
815: 8851 l_false (>= #362 1) arith
816: 8852 l_false (>= #752 2) arith
817: 8853 l_true (= Nl4arg92 #195)
818: 8854 l_true (= Nl4arg91 #194)
819: 8855 l_true (= 0 #196)
820: 8856 l_true (<= #8857 0) arith
821: 8858 l_true (>= #8857 0) arith
822: 8859 l_true (= Nl4arg122 #207)
823: 8860 l_true (= Nl4arg112 #203)
824: 8861 l_true (= #8528 #8470)
825: 8862 l_true (= 0 #898)
826: 8863 l_true (= #194 #756)
827: 8864 l_true (= Nl4arg82 #191)
828: 8865 l_true (= 0 Nl4arg71)
829: 8866 l_true (= Nl4arg81 Nl4arg91)
830: 8867 l_true (= #194 #190)
831: 8868 l_true (= 0 #192)
832: 8869 l_true (= #756 #194)
833: 8870 l_false (<= #143 -1) arith
834: 8871 l_false (<= #707 -2) arith
835: 8872 l_true (= 0 #359)
836: 8873 l_true (= 0 #352)
837: 8874 l_true (= 0 #316)
838: 8875 l_true (= 0 #358)
839: 8876 l_true (= 0 #348)
840: 8877 l_true (= 0 #8375)
841: 8878 l_true (= 0 #347)
842: 8879 l_true (= 0 #353)
843: 8880 l_true (= 0 #317)
844: 8881 l_true (= 0 #322)
845: 8882 l_false (= 0 #321)
846: 8883 l_false (<= lam10n20 0) arith
847: 8884 l_true (<= #1234 0) arith
848: 8885 l_true (<= #1233 0) arith
849: 8886 l_false (>= #1286 1) arith
850: 8887 l_false (>= #1294 1) arith
851: 8888 l_false (>= #1298 1) arith
852: 8889 l_true (<= lam10n19 0) arith
853: 8890 l_true (>= #1285 0) arith
854: 8891 l_true (>= #1281 0) arith
855: 8892 l_true (>= #1297 0) arith
856: 8893 l_true (>= #1293 0) arith
857: 8894 l_false (<= #1233 -1) arith
858: 8895 l_true (= 0 #1915)
859: 8896 l_true (= 0 #2121)
860: 8897 l_true (= #195 Nl4arg92)
861: 8898 l_true (= #203 Nl4arg112)
862: 8899 l_true (= #191 Nl4arg82)
863: 8900 l_true (= 0 undef35)
864: 8901 l_true (= #203 #765)
865: 8902 l_true (= 0 #2124)
866: 8903 l_true (= 0 #186)
867: 8904 l_true (= 0 #748)
868: 8905 l_true (= #8806 #8661)
869: 8906 l_true (= #195 #191)
870: 8907 l_true (<= Nl4arg131 0) arith
871: 8908 l_true (>= Nl4arg131 0) arith
872: 8909 l_false (>= #772 2) arith
873: 8910 l_false (<= #1033 -1) arith
874: 8911 l_false (<= #1037 -1) arith
875: 8912 l_false (<= #2110 -1) arith
876: 8913 l_false (>= #382 1) arith
877: 8914 l_false (<= #1301 -1) arith
878: 8915 l_false (>= #904 1) arith
879: 8916 l_false (>= #2110 1) arith
880: 8917 l_false (<= #210 -1) arith
881: 8918 l_false (<= #772 -2) arith
882: 8919 l_false (<= #1302 -1) arith
883: 8920 l_false (<= #2121 -1) arith
884: 8921 l_false (>= #893 1) arith
885: 8922 l_false (<= #1290 -1) arith
886: 8923 l_true (= 0 #762)
887: 8924 l_false (<= lam4n17 -1) arith
888: 8925 l_false (>= #316 1) arith
889: 8926 l_false (>= #1241 1) arith
890: 8927 l_false (<= #382 -1) arith
891: 8928 l_false (>= #1246 1) arith
892: 8929 l_true (>= #321 1) arith
893: 8930 l_false (>= #719 2) arith
894: 8931 l_true (= 0 #770)
895: 8932 l_true (= #207 #769)
896: 8933 l_true (= #207 Nl4arg122)
897: 8934 l_true (= #199 #761)
898: 8935 l_false (>= #756 2) arith
899: 8936 l_true (>= #1247 1) arith
900: 8937 l_false (>= #1285 1) arith
901: 8938 l_true (>= #2118 0) arith
902: 8939 l_true (<= #8824 2) arith
903: 8940 l_true (>= #8824 2) arith
904: 8941 l_true (<= #863 -1) arith
905: 8942 l_true (<= #497 -1) arith
906: 8943 l_true (= 0 #1291)
907: 8944 l_true (= 0 #1290)
908: 8947 l_false (= #8945 0)
909: 8949 l_true (= #8946 0)
number of constraints = 1758
(0) j0 >= 1
(1) j0 <= 1
(2) j1 >= 1
(3) j1 <= 1
(4) j2 >= 0
(5) j2 <= 0
(6) j3 >= 0
(7) j3 <= 0
(8) j4 >= 1
(10) j5 >= 0
(12) j6 >= 0
(15) j7 >= 2
(16) j8 >= 4
(18) j9 - j4 <= 14
(20) j9 >= 15
(23) j8 + j6 >= 536870910
(24) j32 + j17 + j35 + j36 + j37 + 16j38 + 12j39 + j20 + j23 + j26 + j13 + j29 + j15 <= 0
(26) j44 + j48 + j50 + j58 + j52 + j54 + j56 + j42 + j59 + j60 + 16j61 + j46 + 12j62 <= 0
(28) j14 >= -2
(30) j14 <= 2
(32) j16 >= -2
(34) j16 <= 2
(36) j12 >= -2
(38) j12 <= 2
(40) j37 >= -2
(42) j37 <= 2
(44) j38 >= -2
(46) j38 <= 2
(48) j64 >= -2
(50) j64 <= 2
(52) j39 >= -2
(54) j39 <= 2
(56) j18 >= -2
(58) j18 <= 2
(60) j21 >= -2
(62) j21 <= 2
(64) j24 >= -2
(66) j24 <= 2
(68) j27 >= -2
(70) j27 <= 2
(72) j30 >= -2
(74) j30 <= 2
(76) j33 >= -2
(78) j33 <= 2
(80) j43 >= -2
(82) j43 <= 2
(84) j45 >= -2
(86) j45 <= 2
(88) j41 >= -2
(90) j41 <= 2
(92) j60 >= -2
(94) j60 <= 2
(96) j61 >= -2
(98) j61 <= 2
(100) j65 >= -2
(102) j65 <= 2
(104) j62 >= -2
(106) j62 <= 2
(108) j47 >= -2
(110) j47 <= 2
(112) j49 >= -2
(114) j49 <= 2
(116) j51 >= -2
(118) j51 <= 2
(120) j53 >= -2
(122) j53 <= 2
(124) j55 >= -2
(126) j55 <= 2
(128) j57 >= -2
(130) j57 <= 2
(132)  - j16 + j67 + j69 >= 0
(134) j71 >= 0
(136) j72 >= 0
(138) j73 >= 0
(140) j74 >= 0
(142) j75 >= 0
(144) j76 >= 0
(146) j77 >= 0
(148) j78 >= 0
(150) j79 >= 0
(152) j80 >= 0
(154) j81 >= 0
(156) j82 >= 0
(158) j83 >= 0
(160) j84 >= 0
(162) j85 >= 0
(164) j86 >= 0
(166) j87 >= 0
(168) j88 >= 0
(170) j89 >= 0
(173) 2j80 + 2j81 + 2j82 + 4j83 + 4j84 + 4j85 - 536870913j86 + j71 + 536870914j87 + j90 + j91 + 3j78 + 3j79 >= 2
(174) j93 >= -1
(175) j93 <= -1
(177) j149 + j150 + j147 + j148 - j37 - j12 - j151 <= -1
(179) j38 + j153 + j154 + j155 + j156 + j157 + j158 - j159 <= -1
(180)  - j157 - j158 >= 0
(183) j155 + j156 + j157 + j158 - j159 <= -1
(184) j151 >= 0
(187) j147 - j12 + j148 - j151 <= -1
(189) j164 + j165 + j153 + j154 + j155 + j156 + j157 + j158 - j159 <= -1
(190) j159 >= 0
(192) j14 <= 0
(195) j153 + j154 + j155 + j156 + j157 + j158 - j159 <= -1
(196) j38 <= 0
(198) j66 >= 0
(200) j68 >= 0
(203) j67 + 2j164 - 2j37 + j69 + 2j165 - 536870910j38 + j168 + j169 - j36 - 2j12 - 4j14 + 2j147 + 2j148 - 536870907j153 - 536870907j154 - 536870904j155 - 536870904j156 - 536870907j157 - 536870907j158 + 536870908j159 >= 0
(205) j193 + j195 - j45 <= -1
(206) j200 - j201 - j41 - j60 + j197 + j198 + j199 >= 0
(208) j206 - j209 + j208 + j203 + j204 + j61 + j205 + j207 >= 0
(210)  - j208 - j207 >= 0
(212) j208 - j209 + j205 + j206 + j207 >= 0
(214) j201 >= 0
(216)  - j41 - j201 + j197 + j198 >= 0
(218) j208 - j209 + j214 + j215 + j203 + j204 + j205 + j206 + j207 >= 0
(220) j209 >= 0
(222) j43 <= 0
(224) j208 - j209 + j203 + j204 + j205 + j206 + j207 >= 0
(226) j61 <= 0
(228) j192 >= 0
(230) j194 >= 0
(233) j193 + j195 + 2j197 + 2j198 - 2j41 - 536870907j203 - 536870907j204 - 536870904j205 - 536870904j206 - 536870907j207 - 536870907j208 + 536870908j209 - 4j43 + 2j214 + 2j215 + j218 + j219 - 2j60 - 536870910j61 - j59 >= 0
(235)  - j16 + j243 + j245 <= -1
(236) j247 >= 0
(238) j248 >= 0
(240) j249 >= 0
(242) j250 >= 0
(244) j251 >= 0
(246) j252 >= 0
(248) j253 >= 0
(250) j254 >= 0
(252) j255 >= 0
(254) j256 >= 0
(256) j257 >= 0
(258) j258 >= 0
(260) j259 >= 0
(262) j260 >= 0
(264) j261 >= 0
(266) j262 >= 0
(268) j263 >= 0
(270) j264 >= 0
(273) 2j256 + 2j257 + 2j258 + 4j259 + 4j260 + 4j261 + 536870914j262 + j247 + j265 + j266 + 3j254 + 3j255 >= 2
(275) j320 + j321 + j322 + j323 - j324 - j37 - j12 <= -1
(276) j328 + j329 + j330 + j331 - j332 + j326 + j327 >= 0
(278)  - j331 - j326 >= 0
(280) j329 + j330 + j331 - j332 + j326 >= 0
(282) j324 >= 0
(284) j320 + j321 - j12 - j324 >= 0
(286) j337 + j338 + j326 + j327 + j328 + j329 + j330 + j331 - j332 >= 0
(288) j332 >= 0
(290)  - j328 - j329 - j330 - j331 + j332 - j326 - j327 >= 0
(293) j242 <= -1
(294) j244 >= 0
(297) 2j320 + 2j321 - j36 - 2j37 - 536870908j326 - 536870908j327 - 536870908j328 - 536870905j329 - 536870905j330 - 536870908j331 + 536870909j332 - 2j12 - 4j14 + 2j337 + 2j338 + j243 + j245 + j341 + j342 >= 0
(299) j363 - j45 + j365 <= -1
(300) j368 - j41 + j369 - j371 - j60 + j370 + j367 >= 0
(303) j376 + j377 + j378 - j379 + j373 + j374 + j375 <= -1
(304)  - j378 - j373 >= 0
(307) j376 + j377 + j378 - j379 + j373 <= -1
(308) j371 >= 0
(310) j368 - j41 - j371 + j367 >= 0
(313) j384 + j385 + j373 + j374 + j375 + j376 + j377 + j378 - j379 <= -1
(314) j379 >= 0
(316)  - j376 - j377 - j378 + j379 - j373 - j374 - j375 >= 0
(318) j362 >= 0
(320) j364 >= 0
(323) 2j384 + 2j385 + j388 + j389 - 2j41 + j363 - 4j43 + j365 + 2j367 + 2j368 - 536870908j373 - 536870908j374 - 536870908j375 - 536870905j376 - 536870905j377 - 536870908j378 + 536870909j379 - 2j60 - j59 >= 0
(324) j410 + j412 >= 0
(326)  - j14 - j414 >= 0
(329) j16 >= 1
(330) j416 >= 0
(332) j12 <= 0
(334) j14 + j414 >= 0
(336) j414 >= 0
(339) -536870905j416 - j37 - 16j38 - 2j12 - j36 - 15j14 - 12j39 >= 0
(340)  - j43 - j419 >= 0
(343) j45 >= 1
(345) j421 <= -1
(346) j41 <= 0
(348) j43 + j419 >= 0
(350) j419 >= 0
(353) -16j61 - 2j41 - 15j43 - j59 - 536870905j421 - 12j62 - j60 >= 0
(354)  - j424 - j14 >= 0
(356) j426 >= 0
(358) j424 + j14 >= 0
(360) j424 >= 0
(362) j426 <= 0
(365)  - j37 - 16j38 - 536870906j426 - 2j12 - j36 - 15j14 - 12j39 >= 0
(366)  - j43 - j429 >= 0
(368) j431 >= 0
(370) j43 + j429 >= 0
(372) j429 >= 0
(375) j431 >= 1
(376) -16j61 - 2j41 - 15j43 - j59 - j60 - 12j62 - 536870906j431 <= -1
(378) j434 + j435 + j436 + j437 + j438 + j439 - j440 - j441 >= 0
(380) j443 + j444 + j445 + j446 - j447 >= 0
(382) j447 >= 0
(384) j440 - j449 - j435 - j436 >= 0
(386) j440 - j449 - j435 - j436 - j437 - j438 >= 0
(388) j449 >= 0
(390)  - j444 - j445 + j447 >= 0
(392) j440 <= 0
(394) j441 >= 0
(396) j440 >= 0
(398) j453 + j454 >= 0
(400) j411 >= 0
(402) j409 >= 0
(405) 1073741825j453 + 1073741825j454 + j456 + j457 + 4j434 + j435 + j436 + j437 + j438 + 4j439 + j440 + j410 + j412 - 2j444 - 2j445 + 2j447 >= 2
(406) j290 <= 0
(408) j101 <= 0
(410) j275 <= 0
(413) j102 >= 1
(415) j276 >= 1
(416) j97 <= 0
(418) j272 <= 0
(420) j98 <= 0
(422) j271 <= 0
(424) j106 <= 0
(426) j280 <= 0
(428) j107 <= 0
(430) j281 <= 0
(432) j36 <= 0
(435) j36 <= -1
(436) j266 <= 0
(438) j91 <= 0
(440) j341 >= 0
(442) j115 <= 0
(445) j168 <= -1
(446) j263 <= 0
(448) j88 <= 0
(450) j37 >= 0
(452) j110 >= 0
(454) j284 >= 0
(456) j60 <= 0
(459) j89 >= 1
(460) j111 <= 0
(463) j264 >= 1
(464) j285 <= 0
(467) j369 >= 1
(468) j368 <= 0
(471) j192 >= 1
(472) j218 <= 0
(474) j194 <= 0
(476) j200 <= 0
(478) j41 >= 0
(480) j107 >= 0
(483) j362 >= 1
(484) j388 <= 0
(486) j364 <= 0
(488) j370 <= 0
(490) j281 >= 0
(493) j43 >= 0
(495) j377 >= 0
(497) j369 >= 0
(499) j98 >= 0
(501) j206 >= 0
(503) j272 >= 0
(504) j376 <= 0
(506) j15 <= 0
(508) j205 <= 0
(510) j17 <= 0
(513) j37 >= 1
(514) j12 >= 0
(516) j367 >= 0
(518) j242 <= 0
(521) j341 >= 1
(522) j320 >= 0
(524) j280 >= 0
(527) j199 >= 1
(528) j197 >= 0
(530) j106 >= 0
(533) j110 <= 0
(534) j14 >= 0
(536) j329 >= 0
(538) j271 >= 0
(540) j205 >= 0
(543) j66 >= 1
(544) j168 <= 0
(547) j149 >= 1
(548) j376 >= 0
(550) j97 >= 0
(553) j199 >= 0
(554) j34 <= 0
(556) j34 >= 0
(558) j31 <= 0
(560) j31 >= 0
(562) j59 >= 0
(564) j265 >= 0
(566) j219 >= 0
(568) j90 >= 0
(570) j45 >= 0
(572) j68 <= 0
(574) j69 >= 0
(576) j389 >= 0
(579) j193 >= 1
(580) j90 - j59 <= 0
(582)  - j59 + j219 <= 0
(584) j265 - j59 <= 0
(586) j36 <= 1
(589) j36 <= 0
(591) j363 >= 1
(592)  - j82 + j115 + j114 + j86 <= 0
(594)  - j82 + j115 + j114 + j86 >= 0
(596) j91 <= 1
(599) j91 <= 0
(600) j76 <= 0
(602) j74 <= 0
(604) j264 <= 1
(606) j264 >= 1
(608) j16 >= 0
(611) j101 >= 0
(613) j193 >= 0
(615) j275 >= 0
(616) j89 <= 1
(618) j89 >= 1
(620) j73 <= 0
(622) j77 <= 0
(624) j284 + j263 <= 0
(626)  - j59 + j389 <= 0
(628) j88 + j110 <= 0
(631) j192 + j199 >= 1
(632) j97 + j98 - j83 - j78 - j79 <= 0
(634) j97 + j98 - j83 - j78 - j79 >= 0
(636) j117 + j118 + j78 <= 0
(638) j117 + j118 + j78 >= 0
(640)  - j80 - j81 + j106 + j107 <= 0
(642)  - j80 - j81 + j106 + j107 >= 0
(644)  - j75 + j86 - j87 <= 0
(646)  - j75 + j86 - j87 >= 0
(648) j265 - j59 >= 0
(650) j284 + j263 >= 0
(653) j37 >= 0
(654) j37 >= -1
(657) j110 >= -1
(658) j194 + j219 <= 0
(660) j364 + j389 <= 0
(663) j59 >= 0
(664) j59 >= -1
(667) j265 >= -3
(669) j264 + j265 >= 1
(670) j60 <= 1
(673) j60 <= 0
(674)  - j256 + j281 - j257 + j280 <= 0
(676)  - j256 + j281 - j257 + j280 >= 0
(678) j296 + j295 + j262 + j255 <= 0
(680) j296 + j295 + j262 + j255 >= 0
(682) j250 <= 0
(684) j253 <= 0
(686) j90 - j59 >= 0
(688) j249 <= 0
(690) j364 + j389 >= 0
(692) j252 <= 0
(695) j90 >= -3
(697) j89 + j90 >= 1
(698) j292 + j293 + j254 <= 0
(700) j292 + j293 + j254 >= 0
(702)  - j261 - j262 <= 0
(704)  - j261 - j262 >= 0
(706) j495 >= 2
(707) j495 <= 2
(708) j500 >= 15
(709) j500 <= 15
(710) j362 <= 1
(712) j362 >= 1
(714) j87 <= 0
(716) j194 + j219 >= 0
(718) j59 <= 0
(720) j60 >= 0
(722)  - j72 + j81 + j110 + j111 <= 0
(724)  - j72 + j81 + j110 + j111 >= 0
(727) j285 >= -1
(728) j289 + j290 - j258 - j262 <= 0
(730) j289 + j290 - j258 - j262 >= 0
(732) j272 + j271 - j259 - j254 - j255 <= 0
(734) j272 + j271 - j259 - j254 - j255 >= 0
(736) j260 <= 0
(738)  - j251 - j262 <= 0
(740)  - j251 - j262 >= 0
(742)  - j59 + j389 >= 0
(744) j263 <= 1
(747) j263 <= 0
(748)  - j59 + j219 >= 0
(750) j2 - j98 >= 0
(751) j2 - j98 <= 0
(752) j2 - j156 >= 0
(753) j2 - j156 <= 0
(754) j2 - j206 >= 0
(755) j2 - j206 <= 0
(756)  - j272 + j2 >= 0
(757)  - j272 + j2 <= 0
(758) j2 - j330 >= 0
(759) j2 - j330 <= 0
(760)  - j377 + j2 >= 0
(761)  - j377 + j2 <= 0
(762) j2 - j434 >= 0
(763) j2 - j434 <= 0
(764) j2 - j62 >= 0
(765) j2 - j62 <= 0
(766) j2 - j122 >= 0
(767) j2 - j122 <= 0
(768) j2 - j154 >= 0
(769) j2 - j154 <= 0
(770) j2 - j204 >= 0
(771) j2 - j204 <= 0
(772)  - j296 + j2 >= 0
(773)  - j296 + j2 <= 0
(774)  - j328 + j2 >= 0
(775)  - j328 + j2 <= 0
(776) j2 - j375 >= 0
(777) j2 - j375 <= 0
(778) j2 - j436 >= 0
(779) j2 - j436 <= 0
(780) j101 + j102 - j71 <= 0
(782) j101 + j102 - j71 >= 0
(784)  - j85 + j86 - j87 <= 0
(786)  - j85 + j86 - j87 >= 0
(788) j84 <= 0
(790)  - j80 + 15j43 - j72 + 2j41 - j90 + j59 + j60 + 16j61 + 12j62 - j89 <= -1
(792)  - j80 + 15j43 - j72 + 2j41 - j90 + j59 + j60 + 16j61 + 12j62 - j89 >= -1
(794) j121 + j122 - j86 + j79 <= 0
(796) j121 + j122 - j86 + j79 >= 0
(798) -2j41 - 15j43 - j60 - j59 - 12j62 - 16j61 <= 0
(800) -2j41 - 15j43 - j60 - j59 - 12j62 - 16j61 >= 0
(803) j370 >= 0
(805) j389 <= 0
(806) j21 <= 0
(808) j21 >= 0
(810) j51 <= 0
(812) j51 >= 0
(814) j27 <= 0
(816) j27 >= 0
(818) j30 <= 0
(820) j30 >= 0
(822) j177 + j178 <= 0
(825) j177 + j178 <= -1
(826) j353 + j354 <= 0
(828) j353 + j354 >= 0
(830) j174 + j175 <= 0
(832) j174 + j175 >= 0
(835) j350 + j351 >= 1
(836) j350 + j351 >= 0
(838) j180 + j181 <= 0
(840) j180 + j181 >= 0
(842) j356 + j357 <= 0
(844) j356 + j357 >= 0
(846) j227 + j228 <= 0
(849) j227 + j228 <= -1
(851) j183 >= 0
(853) j131 >= -1
(855) j305 >= -1
(857) j347 >= 0
(859) j398 >= 0
(860)  - j50 + j23 <= 0
(862)  - j50 + j23 >= 0
(864) j397 + j398 <= 0
(867) j397 + j398 <= -1
(869) j228 <= 0
(871) j305 <= 1
(873) j347 <= 0
(874) j351 >= 0
(877) j398 <= 0
(879) j131 <= 1
(881) j174 <= 0
(883) j178 <= 0
(885) j180 >= 0
(886)  - j56 + j32 <= 0
(888)  - j56 + j32 >= 0
(890) j121 - j127 <= 0
(892) j121 - j127 >= 0
(895) j174 >= 0
(897) j32 <= 0
(899) j136 >= 0
(901) j90 <= 1
(903) j127 >= 0
(905) j356 <= 0
(907) j127 <= 0
(909) j136 <= 0
(910) j53 <= 0
(912) j53 >= 0
(914) j57 <= 0
(916) j57 >= 0
(918) j184 + j183 <= 0
(920) j184 + j183 >= 0
(922)  - j58 + j35 <= 0
(924)  - j58 + j35 >= 0
(926) j236 + j237 <= 0
(928) j236 + j237 >= 0
(930) j360 + j359 <= 0
(932) j360 + j359 >= 0
(934) j406 + j407 <= 0
(936) j406 + j407 >= 0
(938) j400 + j401 <= 0
(940) j400 + j401 >= 0
(943) j353 <= 0
(945) j58 >= 0
(947) j231 >= 0
(949) j134 >= -1
(951) j140 >= -1
(953) j314 >= -1
(955) j308 >= -1
(957) j187 >= 0
(958) j230 + j231 <= 0
(960) j230 + j231 >= 0
(962) j186 + j187 <= 0
(964) j186 + j187 >= 0
(967) j407 <= 0
(969) j401 <= 0
(971) j134 <= 1
(973) j140 <= 1
(975) j181 <= 0
(977) j187 <= 0
(979) j231 <= 0
(981) j237 <= 0
(983) j308 <= 1
(985) j314 <= 1
(986) j354 >= 0
(988) j360 >= 0
(990) j29 - j54 <= 0
(992) j29 - j54 >= 0
(994) j28 <= 0
(997) j28 <= -1
(999) j29 >= 0
(1001) j29 <= 0
(1003) j180 <= 0
(1004) j22 <= 0
(1007) j22 <= -1
(1008) j224 + j225 <= 0
(1010) j224 + j225 >= 0
(1013) j233 >= 0
(1015) j183 <= 0
(1017) j230 >= 0
(1019) j224 >= 0
(1020) j19 <= 0
(1022) j19 >= 0
(1024) j23 <= 0
(1026) j23 >= 0
(1028) j56 <= 0
(1030) j56 >= 0
(1032) j394 + j395 <= 0
(1034) j394 + j395 >= 0
(1037) j219 <= 0
(1038) j26 - j52 <= 0
(1040) j26 - j52 >= 0
(1043) j224 <= 0
(1044) j25 <= 0
(1046) j25 >= 0
(1049) j356 >= 0
(1051) j353 >= 0
(1052) j20 <= 0
(1054) j20 >= 0
(1056) j49 <= 0
(1058) j49 >= 0
(1060) j55 <= 0
(1062) j55 >= 0
(1064) j225 <= 0
(1066) j225 >= 0
(1068) j347 + j348 <= 0
(1070) j347 + j348 >= 0
(1073) j128 >= -1
(1075) j137 >= -1
(1077) j50 <= 0
(1079) j175 >= 0
(1081) j184 >= 0
(1083) j234 <= 0
(1085) j302 >= -1
(1087) j311 >= -1
(1089) j395 >= 0
(1090)  - j301 + j295 <= 0
(1092)  - j301 + j295 >= 0
(1095) j128 <= 1
(1097) j137 <= 1
(1099) j301 >= -1
(1101) j302 <= 1
(1103) j307 <= 1
(1105) j310 <= 1
(1107) j404 <= 0
(1108) j348 >= 0
(1110) j403 + j404 <= 0
(1112) j403 + j404 >= 0
(1115) j133 >= 0
(1117) j311 <= 1
(1119) j54 <= 0
(1121) j307 >= -1
(1123) j342 >= 0
(1125) j357 >= 0
(1127) j234 >= 0
(1129) j310 >= -1
(1130) j18 <= 0
(1132) j18 >= 0
(1134) j171 + j172 <= 0
(1136) j171 + j172 >= 0
(1138) j344 + j345 <= 0
(1140) j344 + j345 >= 0
(1143) j298 >= -1
(1145) j344 <= 0
(1147) j171 <= 0
(1149) j298 <= 1
(1150) j21 - j127 <= 0
(1152) j21 - j127 >= 0
(1155) j91 >= 0
(1157) j266 >= -1
(1158)  - j62 + j198 >= 0
(1159)  - j62 + j198 <= 0
(1160) j2 + j62 >= 0
(1161) j2 + j62 <= 0
(1162) j2 - j13 >= 0
(1163) j2 - j13 <= 0
(1164) j0 - j264 >= 0
(1165) j0 - j264 <= 0
(1166)  - j265 + j2 + j59 >= 0
(1167)  - j265 + j2 + j59 <= 0
(1168) j0 - j89 >= 0
(1169) j0 - j89 <= 0
(1170) j2 - j90 + j59 >= 0
(1171) j2 - j90 + j59 <= 0
(1172) j128 - j49 >= 0
(1173) j128 - j49 <= 0
(1174) j137 - j55 >= 0
(1175) j137 - j55 <= 0
(1176)  - j53 + j134 >= 0
(1177)  - j53 + j134 <= 0
(1178) j89 + j93 >= 0
(1179) j89 + j93 <= 0
(1180) j125 - j47 >= 0
(1181) j125 - j47 <= 0
(1182)  - j265 + j90 >= 0
(1183)  - j265 + j90 <= 0
(1184)  - j276 + j102 >= 0
(1185)  - j276 + j102 <= 0
(1186)  - j285 + j111 >= 0
(1187)  - j285 + j111 <= 0
(1188)  - j290 + j115 >= 0
(1189)  - j290 + j115 <= 0
(1190)  - j293 + j118 >= 0
(1191)  - j293 + j118 <= 0
(1192)  - j299 + j125 >= 0
(1193)  - j299 + j125 <= 0
(1194) j128 - j302 >= 0
(1195) j128 - j302 <= 0
(1196)  - j305 + j131 >= 0
(1197)  - j305 + j131 <= 0
(1198)  - j308 + j134 >= 0
(1199)  - j308 + j134 <= 0
(1200) j137 - j311 >= 0
(1201) j137 - j311 <= 0
(1202)  - j314 + j140 >= 0
(1203)  - j314 + j140 <= 0
(1204) j264 + j265 - j89 - j90 >= 0
(1205) j264 + j265 - j89 - j90 <= 0
(1206)  - j57 + j140 >= 0
(1207)  - j57 + j140 <= 0
(1208) j131 - j51 >= 0
(1209) j131 - j51 <= 0
(1210)  - j65 + j118 >= 0
(1211)  - j65 + j118 <= 0
(1212) j115 - j61 >= 0
(1213) j115 - j61 <= 0
(1214)  - j60 + j111 >= 0
(1215)  - j60 + j111 <= 0
(1216)  - j45 + j102 >= 0
(1217)  - j45 + j102 <= 0
(1218) j90 - j59 >= 0
(1219) j90 - j59 <= 0
(1220) j90 - j59 >= 0
(1221) j90 - j59 <= 0
(1223) j409 >= 1
(1224) j456 <= 0
(1226) j457 <= 0
(1229) j463 <= 0
(1231) j469 <= 0
(1233) j472 <= 0
(1234) j411 <= 0
(1236) j462 >= 0
(1238) j459 >= 0
(1240) j471 >= 0
(1242) j468 >= 0
(1245) j457 >= 0
(1246) j33 <= 0
(1248) j33 >= 0
(1251) j313 <= 1
(1253) j401 >= 0
(1255) j404 >= 0
(1257) j35 >= 0
(1259) j186 <= 0
(1261) j474 >= 0
(1263) j359 <= 0
(1265) j35 <= 0
(1267) j139 >= 0
(1269) j313 >= -1
(1271) j475 >= 0
(1273) j52 >= 0
(1275) j351 <= 0
(1277) j466 >= 0
(1279) j244 >= 0
(1281) j155 <= 0
(1283) j439 <= 0
(1285) j186 >= 0
(1287) j412 <= 0
(1288) j67 >= 1
(1291) j275 <= 1
(1292) j0 - j362 >= 0
(1293) j0 - j362 <= 0
(1294) j2 - j364 - j389 >= 0
(1295) j2 - j364 - j389 <= 0
(1296)  - j272 + j255 + j2 + j259 + j254 - j271 >= 0
(1297)  - j272 + j255 + j2 + j259 + j254 - j271 <= 0
(1298) j2 - j275 - j276 + j247 >= 0
(1299) j2 - j275 - j276 + j247 <= 0
(1300) j256 - j281 + j2 + j257 - j280 >= 0
(1301) j256 - j281 + j2 + j257 - j280 <= 0
(1302) j248 - j257 + j2 - j284 - j285 >= 0
(1303) j248 - j257 + j2 - j284 - j285 <= 0
(1304)  - j289 + j2 - j290 + j258 + j262 >= 0
(1305)  - j289 + j2 - j290 + j258 + j262 <= 0
(1306) j2 - j292 - j293 - j254 >= 0
(1307) j2 - j292 - j293 - j254 <= 0
(1308)  - j296 - j255 + j2 - j262 - j295 >= 0
(1309)  - j296 - j255 + j2 - j262 - j295 <= 0
(1310) j2 - j298 - j299 >= 0
(1311) j2 - j298 - j299 <= 0
(1312) j2 - j301 - j302 >= 0
(1313) j2 - j301 - j302 <= 0
(1314)  - j304 - j305 + j2 >= 0
(1315)  - j304 - j305 + j2 <= 0
(1316) j2 - j307 - j308 >= 0
(1317) j2 - j307 - j308 <= 0
(1318) j2 - j310 - j311 >= 0
(1319) j2 - j310 - j311 <= 0
(1320)  - j313 + j2 - j314 >= 0
(1321)  - j313 + j2 - j314 <= 0
(1322) j2 - j260 >= 0
(1323) j2 - j260 <= 0
(1324)  - j249 + j2 >= 0
(1325)  - j249 + j2 <= 0
(1326) j2 - j250 >= 0
(1327) j2 - j250 <= 0
(1328) j2 + j261 + j262 >= 0
(1329) j2 + j261 + j262 <= 0
(1330) j2 + j251 + j262 >= 0
(1331) j2 + j251 + j262 <= 0
(1332) j2 - j252 >= 0
(1333) j2 - j252 <= 0
(1334) j2 - j253 >= 0
(1335) j2 - j253 <= 0
(1336)  - j97 + j2 - j98 + j83 + j78 + j79 >= 0
(1337)  - j97 + j2 - j98 + j83 + j78 + j79 <= 0
(1338) j2 - j101 - j102 + j71 >= 0
(1339) j2 - j101 - j102 + j71 <= 0
(1340) j80 + j81 + j2 - j106 - j107 >= 0
(1341) j80 + j81 + j2 - j106 - j107 <= 0
(1342) j72 - j81 + j2 - j110 - j111 >= 0
(1343) j72 - j81 + j2 - j110 - j111 <= 0
(1344) j2 + j82 - j115 - j114 - j86 >= 0
(1345) j2 + j82 - j115 - j114 - j86 <= 0
(1346) j2 - j117 - j118 - j78 >= 0
(1347) j2 - j117 - j118 - j78 <= 0
(1348)  - j121 + j2 - j122 + j86 - j79 >= 0
(1349)  - j121 + j2 - j122 + j86 - j79 <= 0
(1350) j2 - j124 - j125 >= 0
(1351) j2 - j124 - j125 <= 0
(1352)  - j128 + j2 - j127 >= 0
(1353)  - j128 + j2 - j127 <= 0
(1354) j2 - j130 - j131 >= 0
(1355) j2 - j130 - j131 <= 0
(1356) j2 - j133 - j134 >= 0
(1357) j2 - j133 - j134 <= 0
(1358)  - j136 - j137 + j2 >= 0
(1359)  - j136 - j137 + j2 <= 0
(1360) j2 - j139 - j140 >= 0
(1361) j2 - j139 - j140 <= 0
(1362) j2 - j84 >= 0
(1363) j2 - j84 <= 0
(1364) j2 - j87 >= 0
(1365) j2 - j87 <= 0
(1366)  - j73 + j2 >= 0
(1367)  - j73 + j2 <= 0
(1368) j2 - j74 >= 0
(1369) j2 - j74 <= 0
(1370) j2 + j85 - j86 + j87 >= 0
(1371) j2 + j85 - j86 + j87 <= 0
(1372) j2 + j75 - j86 + j87 >= 0
(1373) j2 + j75 - j86 + j87 <= 0
(1374) j2 - j76 >= 0
(1375) j2 - j76 <= 0
(1376) j2 - j77 >= 0
(1377) j2 - j77 <= 0
(1378) j2 - j459 - j460 >= 0
(1379) j2 - j459 - j460 <= 0
(1380) j2 - j462 - j463 >= 0
(1381) j2 - j462 - j463 <= 0
(1382)  - j465 + j2 - j466 >= 0
(1383)  - j465 + j2 - j466 <= 0
(1384) j2 - j468 - j469 >= 0
(1385) j2 - j468 - j469 <= 0
(1386)  - j472 + j2 - j471 >= 0
(1387)  - j472 + j2 - j471 <= 0
(1388) j2 - j474 - j475 >= 0
(1389) j2 - j474 - j475 <= 0
(1390) j2 + j87 >= 0
(1391) j2 + j87 <= 0
(1393) j301 <= 1
(1394) j410 >= 1
(1397) j462 <= 0
(1398) j46 >= 0
(1400)  - j80 - j72 + 2j41 + 2j89 + 15j43 + j60 + 16j61 + 12j62 <= 2
(1402)  - j80 - j72 + 2j41 + 2j89 + 15j43 + j60 + 16j61 + 12j62 >= 2
(1404) j322 <= -1
(1406) j218 <= -1
(1408)  - j137 + j2 >= 0
(1409)  - j137 + j2 <= 0
(1410) j2 - j140 >= 0
(1411) j2 - j140 <= 0
(1412) j2 - j131 >= 0
(1413) j2 - j131 <= 0
(1414) j2 - j351 >= 0
(1415) j2 - j351 <= 0
(1416) j2 - j178 >= 0
(1417) j2 - j178 <= 0
(1418)  - j56 + j2 >= 0
(1419)  - j56 + j2 <= 0
(1420)  - j184 + j2 >= 0
(1421)  - j184 + j2 <= 0
(1422) j2 - j234 >= 0
(1423) j2 - j234 <= 0
(1424) j2 - j357 >= 0
(1425) j2 - j357 <= 0
(1426)  - j472 + j2 >= 0
(1427)  - j472 + j2 <= 0
(1428) j2 - j187 >= 0
(1429) j2 - j187 <= 0
(1430) j2 - j237 >= 0
(1431) j2 - j237 <= 0
(1432)  - j360 + j2 >= 0
(1433)  - j360 + j2 <= 0
(1434) j2 - j475 >= 0
(1435) j2 - j475 <= 0
(1436) j2 - j228 >= 0
(1437) j2 - j228 <= 0
(1438) j2 - j466 >= 0
(1439) j2 - j466 <= 0
(1440) j412 - j101 >= 0
(1441) j412 - j101 <= 0
(1442)  - j121 + j435 >= 0
(1443)  - j121 + j435 <= 0
(1444) j437 - j117 >= 0
(1445) j437 - j117 <= 0
(1446)  - j97 + j439 >= 0
(1447)  - j97 + j439 <= 0
(1448) j444 - j110 >= 0
(1449) j444 - j110 <= 0
(1450)  - j114 + j454 >= 0
(1451)  - j114 + j454 <= 0
(1452) j457 - j91 >= 0
(1453) j457 - j91 <= 0
(1454) j459 - j124 >= 0
(1455) j459 - j124 <= 0
(1456) j462 - j127 >= 0
(1457) j462 - j127 <= 0
(1458) j465 - j130 >= 0
(1459) j465 - j130 <= 0
(1460)  - j468 + j133 >= 0
(1461)  - j468 + j133 <= 0
(1462) j2 - j471 >= 0
(1463) j2 - j471 <= 0
(1464) j2 - j474 >= 0
(1465) j2 - j474 <= 0
(1466)  - j465 + j2 >= 0
(1467)  - j465 + j2 <= 0
(1468) j2 - j462 >= 0
(1469) j2 - j462 <= 0
(1470) j2 - j459 >= 0
(1471) j2 - j459 <= 0
(1472) j2 - j435 >= 0
(1473) j2 - j435 <= 0
(1474) j2 - j437 >= 0
(1475) j2 - j437 <= 0
(1476) j2 - j454 >= 0
(1477) j2 - j454 <= 0
(1478) j2 - j444 >= 0
(1479) j2 - j444 <= 0
(1480) j2 - j412 >= 0
(1481) j2 - j412 <= 0
(1482) j2 - j439 >= 0
(1483) j2 - j439 <= 0
(1484)  - j457 + j2 >= 0
(1485)  - j457 + j2 <= 0
(1486) j2 - j134 >= 0
(1487) j2 - j134 <= 0
(1488)  - j128 + j2 >= 0
(1489)  - j128 + j2 <= 0
(1490) j2 - j125 >= 0
(1491) j2 - j125 <= 0
(1492) j102 - j71 >= 0
(1493) j102 - j71 <= 0
(1494) j2 - j181 >= 0
(1495) j2 - j181 <= 0
(1496) j2 - j231 >= 0
(1497) j2 - j231 <= 0
(1498) j2 - j354 >= 0
(1499) j2 - j354 <= 0
(1500) j2 - j469 >= 0
(1501) j2 - j469 <= 0
(1502) j2 - j175 >= 0
(1503) j2 - j175 <= 0
(1504)  - j225 + j2 >= 0
(1505)  - j225 + j2 <= 0
(1506) j2 - j348 >= 0
(1507) j2 - j348 <= 0
(1508) j2 - j463 >= 0
(1509) j2 - j463 <= 0
(1510) j2 - j172 >= 0
(1511) j2 - j172 <= 0
(1512) j2 - j222 >= 0
(1513) j2 - j222 <= 0
(1514)  - j345 + j2 >= 0
(1515)  - j345 + j2 <= 0
(1516) j2 - j460 >= 0
(1517) j2 - j460 <= 0
(1518) j2 - j35 >= 0
(1519) j2 - j35 <= 0
(1520) j2 + j58 - j35 >= 0
(1521) j2 + j58 - j35 <= 0
(1522) j2 - j20 >= 0
(1523) j2 - j20 <= 0
(1524) j2 - j18 >= 0
(1525) j2 - j18 <= 0
(1526)  - j48 + j2 >= 0
(1527)  - j48 + j2 <= 0
(1528) j2 - j171 >= 0
(1529) j2 - j171 <= 0
(1530) j2 - j221 >= 0
(1531) j2 - j221 <= 0
(1532)  - j344 + j2 >= 0
(1533)  - j344 + j2 <= 0
(1534)  - j392 + j2 - j391 >= 0
(1535)  - j392 + j2 - j391 <= 0
(1536) j2 - j171 - j172 >= 0
(1537) j2 - j171 - j172 <= 0
(1538) j2 - j221 - j222 >= 0
(1539) j2 - j221 - j222 <= 0
(1540)  - j344 - j345 + j2 >= 0
(1541)  - j344 - j345 + j2 <= 0
(1542) j248 + j256 + j2 - j284 - j263 >= 0
(1543) j248 + j256 + j2 - j284 - j263 <= 0
(1544) j2 - j111 >= 0
(1545) j2 - j111 <= 0
(1546) j2 - j150 >= 0
(1547) j2 - j150 <= 0
(1548)  - j200 + j2 >= 0
(1549)  - j200 + j2 <= 0
(1550) j2 - j323 >= 0
(1551) j2 - j323 <= 0
(1552) j2 - j445 >= 0
(1553) j2 - j445 <= 0
(1554) j2 + j150 >= 0
(1555) j2 + j150 <= 0
(1556) j200 + j2 >= 0
(1557) j200 + j2 <= 0
(1558) j2 - j284 - j263 >= 0
(1559) j2 - j284 - j263 <= 0
(1560) j2 - j266 >= 0
(1561) j2 - j266 <= 0
(1562) j2 - j271 >= 0
(1563) j2 - j271 <= 0
(1564) j2 - j275 >= 0
(1565) j2 - j275 <= 0
(1566) j2 - j284 >= 0
(1567) j2 - j284 <= 0
(1568)  - j289 + j2 >= 0
(1569)  - j289 + j2 <= 0
(1570) j2 - j292 >= 0
(1571) j2 - j292 <= 0
(1572) j2 - j295 >= 0
(1573) j2 - j295 <= 0
(1574) j2 + j301 - j295 >= 0
(1575) j2 + j301 - j295 <= 0
(1576) j102 - j247 >= 0
(1577) j102 - j247 <= 0
(1578) j2 - j115 >= 0
(1579) j2 - j115 <= 0
(1580) j2 + j61 >= 0
(1581) j2 + j61 <= 0
(1582) j2 - j165 >= 0
(1583) j2 - j165 <= 0
(1584) j2 - j215 >= 0
(1585) j2 - j215 <= 0
(1586) j2 - j338 >= 0
(1587) j2 - j338 <= 0
(1588) j2 - j453 >= 0
(1589) j2 - j453 <= 0
(1590) j2 - j453 - j454 >= 0
(1591) j2 - j453 - j454 <= 0
(1592) j2 - j19 >= 0
(1593) j2 - j19 <= 0
(1594) j2 - j69 >= 0
(1595) j2 - j69 <= 0
(1596) j2 - j158 >= 0
(1597) j2 - j158 <= 0
(1598)  - j169 + j2 >= 0
(1599)  - j169 + j2 <= 0
(1600) j2 - j194 - j219 >= 0
(1601) j2 - j194 - j219 <= 0
(1602) j2 - j195 >= 0
(1603) j2 - j195 <= 0
(1604)  - j208 + j2 >= 0
(1605)  - j208 + j2 <= 0
(1606) j219 - j389 >= 0
(1607) j219 - j389 <= 0
(1608) j2 - j26 >= 0
(1609) j2 - j26 <= 0
(1610)  - j25 + j2 >= 0
(1611)  - j25 + j2 <= 0
(1612) j2 - j26 + j52 >= 0
(1613) j2 - j26 + j52 <= 0
(1614) j2 - j90 >= 0
(1615) j2 - j90 <= 0
(1616) j2 + j59 - j219 >= 0
(1617) j2 + j59 - j219 <= 0
(1618) j2 + j59 >= 0
(1619) j2 + j59 <= 0
(1620) j2 - j342 >= 0
(1621) j2 - j342 <= 0
(1622)  - j456 + j2 >= 0
(1623)  - j456 + j2 <= 0
(1624) 2j41 + j2 + 15j43 + j60 + j59 + 12j62 + 16j61 >= 0
(1625) 2j41 + j2 + 15j43 + j60 + j59 + 12j62 + 16j61 <= 0
(1626) j2 - j21 >= 0
(1627) j2 - j21 <= 0
(1628) j2 - j23 >= 0
(1629) j2 - j23 <= 0
(1630) j2 - j174 >= 0
(1631) j2 - j174 <= 0
(1632)  - j224 + j2 >= 0
(1633)  - j224 + j2 <= 0
(1634) j2 - j347 >= 0
(1635) j2 - j347 <= 0
(1636) j2 + j50 - j23 >= 0
(1637) j2 + j50 - j23 <= 0
(1638) j2 - j174 - j175 >= 0
(1639) j2 - j174 - j175 <= 0
(1640)  - j224 - j225 + j2 >= 0
(1641)  - j224 - j225 + j2 <= 0
(1642) j2 - j347 - j348 >= 0
(1643) j2 - j347 - j348 <= 0
(1644) j80 + j72 - 2j41 - 2j89 - 15j43 - j60 - 16j61 - 12j62 + j495 >= 0
(1645) j80 + j72 - 2j41 - 2j89 - 15j43 - j60 - 16j61 - 12j62 + j495 <= 0
(1646) j2 - j27 >= 0
(1647) j2 - j27 <= 0
(1648) j2 - j29 >= 0
(1649) j2 - j29 <= 0
(1650) j2 - j180 >= 0
(1651) j2 - j180 <= 0
(1652) j2 - j230 >= 0
(1653) j2 - j230 <= 0
(1654)  - j353 + j2 >= 0
(1655)  - j353 + j2 <= 0
(1656) j2 - j29 + j54 >= 0
(1657) j2 - j29 + j54 <= 0
(1658) j2 - j180 - j181 >= 0
(1659) j2 - j180 - j181 <= 0
(1660) j2 - j230 - j231 >= 0
(1661) j2 - j230 - j231 <= 0
(1662)  - j353 + j2 - j354 >= 0
(1663)  - j353 + j2 - j354 <= 0
(1664)  - j32 + j2 >= 0
(1665)  - j32 + j2 <= 0
(1666) j56 - j32 + j2 >= 0
(1667) j56 - j32 + j2 <= 0
(1668) j2 - j34 >= 0
(1669) j2 - j34 <= 0
(1670) j2 - j30 >= 0
(1671) j2 - j30 <= 0
(1672) j2 - j183 >= 0
(1673) j2 - j183 <= 0
(1674)  - j233 + j2 >= 0
(1675)  - j233 + j2 <= 0
(1676) j2 - j356 >= 0
(1677) j2 - j356 <= 0
(1678)  - j184 + j2 - j183 >= 0
(1679)  - j184 + j2 - j183 <= 0
(1680)  - j233 + j2 - j234 >= 0
(1681)  - j233 + j2 - j234 <= 0
(1682) j2 - j356 - j357 >= 0
(1683) j2 - j356 - j357 <= 0
(1684) j2 - j15 >= 0
(1685) j2 - j15 <= 0
(1686) j2 - j39 >= 0
(1687) j2 - j39 <= 0
(1688)  - j153 + j2 >= 0
(1689)  - j153 + j2 <= 0
(1690) j2 + j39 >= 0
(1691) j2 + j39 <= 0
(1692) j2 - j203 >= 0
(1693) j2 - j203 <= 0
(1694) j2 - j327 >= 0
(1695) j2 - j327 <= 0
(1696) j2 - j38 >= 0
(1697) j2 - j38 <= 0
(1698) j2 + j38 >= 0
(1699) j2 + j38 <= 0
(1700) j2 - j164 >= 0
(1701) j2 - j164 <= 0
(1702) j2 - j214 >= 0
(1703) j2 - j214 <= 0
(1704)  - j337 + j2 >= 0
(1705)  - j337 + j2 <= 0
(1706) j2 + j38 + j39 >= 0
(1707) j2 + j38 + j39 <= 0
(1708)  - j17 + j2 >= 0
(1709)  - j17 + j2 <= 0
(1710)  - j33 + j2 >= 0
(1711)  - j33 + j2 <= 0
(1712) j2 - j406 - j407 >= 0
(1713) j2 - j406 - j407 <= 0
(1714) j2 - j186 >= 0
(1715) j2 - j186 <= 0
(1716) j2 - j236 >= 0
(1717) j2 - j236 <= 0
(1718) j2 - j359 >= 0
(1719) j2 - j359 <= 0
(1720) j2 - j186 - j187 >= 0
(1721) j2 - j186 - j187 <= 0
(1722) j2 - j236 - j237 >= 0
(1723) j2 - j236 - j237 <= 0
(1724)  - j360 + j2 - j359 >= 0
(1725)  - j360 + j2 - j359 <= 0
(1726) j2 - j14 >= 0
(1727) j2 - j14 <= 0
(1728) j2 - j155 >= 0
(1729) j2 - j155 <= 0
(1730) j2 - j205 >= 0
(1731) j2 - j205 <= 0
(1732)  - j329 + j2 >= 0
(1733)  - j329 + j2 <= 0
(1734) j2 - j118 >= 0
(1735) j2 - j118 <= 0
(1736) j2 - j438 >= 0
(1737) j2 - j438 <= 0
(1738) j2 - j326 >= 0
(1739) j2 - j326 <= 0
(1740)  - j64 + j2 >= 0
(1741)  - j64 + j2 <= 0
(1742) j2 - j157 >= 0
(1743) j2 - j157 <= 0
(1744) j2 - j207 >= 0
(1745) j2 - j207 <= 0
(1746) j2 - j331 >= 0
(1747) j2 - j331 <= 0
(1748) j2 + j378 + j373 >= 0
(1749) j2 + j378 + j373 <= 0
(1750) j2 + j157 + j158 >= 0
(1751) j2 + j157 + j158 <= 0
(1752) j208 + j2 + j207 >= 0
(1753) j208 + j2 + j207 <= 0
(1754) j2 + j331 + j326 >= 0
(1755) j2 + j331 + j326 <= 0
(1756) j2 - j31 >= 0
(1757) j2 - j31 <= 0
j9 - j4
j8 + j6
j32 + j17 + j35 + j36 + j37 + 16j38 + 12j39 + j20 + j23 + j26 + j13 + j29 + j15
j44 + j48 + j50 + j58 + j52 + j54 + j56 + j42 + j59 + j60 + 16j61 + j46 + 12j62
 - j16 + j67 + j69
2j80 + 2j81 + 2j82 + 4j83 + 4j84 + 4j85 - 536870913j86 + j71 + 536870914j87 + j90 + j91 + 3j78 + 3j79
 - j78
 - j79
 - j83
j97 + j98 - j83 - j78 - j79
 - j71
j101 + j102 - j71
 - j80
 - j81
 - j80 - j81 + j106 + j107
 - j72
 - j72 + j81 + j110 + j111
 - j82
 - j82 + j115 + j114 + j86
j117 + j118 + j78
 - j86
j121 + j122 - j86 + j79
j124 + j125
j128 + j127
j130 + j131
j133 + j134
j136 + j137
j139 + j140
 - j85
 - j87
 - j85 + j86 - j87
 - j75
 - j75 + j86 - j87
j149 + j150 + j147 + j148 - j37 - j12 - j151
j38 + j153 + j154 + j155 + j156 + j157 + j158 - j159
 - j157 - j158
j155 + j156 + j157 + j158 - j159
j147 - j12 + j148 - j151
j164 + j165 + j153 + j154 + j155 + j156 + j157 + j158 - j159
j153 + j154 + j155 + j156 + j157 + j158 - j159
j67 + 2j164 - 2j37 + j69 + 2j165 - 536870910j38 + j168 + j169 - j36 - 2j12 - 4j14 + 2j147 + 2j148 - 536870907j153 - 536870907j154 - 536870904j155 - 536870904j156 - 536870907j157 - 536870907j158 + 536870908j159
j171 + j172
j174 + j175
j177 + j178
j180 + j181
j184 + j183
j186 + j187
 - j38
 - j39
 - j38 - j39
j193 + j195 - j45
j200 - j201 - j41 - j60 + j197 + j198 + j199
j206 - j209 + j208 + j203 + j204 + j61 + j205 + j207
 - j208 - j207
j208 - j209 + j205 + j206 + j207
 - j41 - j201 + j197 + j198
j208 - j209 + j214 + j215 + j203 + j204 + j205 + j206 + j207
j208 - j209 + j203 + j204 + j205 + j206 + j207
j193 + j195 + 2j197 + 2j198 - 2j41 - 536870907j203 - 536870907j204 - 536870904j205 - 536870904j206 - 536870907j207 - 536870907j208 + 536870908j209 - 4j43 + 2j214 + 2j215 + j218 + j219 - 2j60 - 536870910j61 - j59
j221 + j222
j224 + j225
j227 + j228
j230 + j231
j233 + j234
j236 + j237
 - j61
 - j62
 - j61 - j62
 - j16 + j243 + j245
2j256 + 2j257 + 2j258 + 4j259 + 4j260 + 4j261 + 536870914j262 + j247 + j265 + j266 + 3j254 + 3j255
 - j254
 - j255
 - j259
j272 + j271 - j259 - j254 - j255
 - j247
j275 + j276 - j247
 - j256
 - j257
 - j256 + j281 - j257 + j280
 - j248
 - j248 + j257 + j284 + j285
 - j258
 - j262
j289 + j290 - j258 - j262
j292 + j293 + j254
j296 + j295 + j262 + j255
j298 + j299
j301 + j302
j304 + j305
j307 + j308
j310 + j311
j313 + j314
 - j261
 - j261 - j262
 - j251
 - j251 - j262
j320 + j321 + j322 + j323 - j324 - j37 - j12
j328 + j329 + j330 + j331 - j332 + j326 + j327
 - j331 - j326
j329 + j330 + j331 - j332 + j326
j320 + j321 - j12 - j324
j337 + j338 + j326 + j327 + j328 + j329 + j330 + j331 - j332
 - j328 - j329 - j330 - j331 + j332 - j326 - j327
2j320 + 2j321 - j36 - 2j37 - 536870908j326 - 536870908j327 - 536870908j328 - 536870905j329 - 536870905j330 - 536870908j331 + 536870909j332 - 2j12 - 4j14 + 2j337 + 2j338 + j243 + j245 + j341 + j342
j344 + j345
j347 + j348
j350 + j351
j353 + j354
j356 + j357
j360 + j359
j363 - j45 + j365
j368 - j41 + j369 - j371 - j60 + j370 + j367
j376 + j377 + j378 - j379 + j373 + j374 + j375
 - j378 - j373
j376 + j377 + j378 - j379 + j373
j368 - j41 - j371 + j367
j384 + j385 + j373 + j374 + j375 + j376 + j377 + j378 - j379
 - j376 - j377 - j378 + j379 - j373 - j374 - j375
2j384 + 2j385 + j388 + j389 - 2j41 + j363 - 4j43 + j365 + 2j367 + 2j368 - 536870908j373 - 536870908j374 - 536870908j375 - 536870905j376 - 536870905j377 - 536870908j378 + 536870909j379 - 2j60 - j59
j392 + j391
j394 + j395
j397 + j398
j400 + j401
j403 + j404
j406 + j407
j410 + j412
 - j14 - j414
j14 + j414
-536870905j416 - j37 - 16j38 - 2j12 - j36 - 15j14 - 12j39
 - j43 - j419
j43 + j419
-16j61 - 2j41 - 15j43 - j59 - 536870905j421 - 12j62 - j60
 - j424 - j14
j424 + j14
 - j37 - 16j38 - 536870906j426 - 2j12 - j36 - 15j14 - 12j39
 - j43 - j429
j43 + j429
-16j61 - 2j41 - 15j43 - j59 - j60 - 12j62 - 536870906j431
j434 + j435 + j436 + j437 + j438 + j439 - j440 - j441
j443 + j444 + j445 + j446 - j447
j440 - j449 - j435 - j436
j440 - j449 - j435 - j436 - j437 - j438
 - j444 - j445 + j447
j453 + j454
1073741825j453 + 1073741825j454 + j456 + j457 + 4j434 + j435 + j436 + j437 + j438 + 4j439 + j440 + j410 + j412 - 2j444 - 2j445 + 2j447
j459 + j460
j462 + j463
j465 + j466
j468 + j469
j472 + j471
j474 + j475
 - j59
j90 - j59
 - j59 + j219
j265 - j59
j284 + j263
 - j59 + j389
j88 + j110
j192 + j199
 - j264
 - j264 + j285
j194 + j219
j364 + j389
j264 + j265
 - j194
j200 - j194
j89 + j90
 - j364
j370 - j364
2j41
16j61
12j62
 - j89
15j43
 - j90
 - j80 + 15j43 - j72 + 2j41 - j90 + j59 + j60 + 16j61 + 12j62 - j89
 - j60
-15j43
-2j41
-16j61
-12j62
-2j41 - 15j43 - j60 - j59 - 12j62 - 16j61
j2 - j98
j2 - j156
j2 - j206
 - j272 + j2
j2 - j330
 - j377 + j2
j2 - j434
j2 - j62
j2 - j122
j2 - j154
j2 - j204
 - j296 + j2
 - j328 + j2
j2 - j375
j2 - j436
 - j50 + j23
 - j56 + j32
j121 - j127
 - j58 + j35
j29 - j54
j26 - j52
2j68
 - j149
 - j150
2j68 + j37 - j150 - j149
2j194
 - j197
 - j198
 - j199
 - j200
 - j200 + j41 + 2j194 + j60 - j197 - j198 - j199
 - j200 + j60 - j199
 - j301 + j295
2j89
 - j80 - j72 + 2j41 + 2j89 + 15j43 + j60 + 16j61 + 12j62
j21 - j127
 - j62 + j198
j2 + j62
j2 - j13
j0 - j264
 - j265 + j2 + j59
j0 - j89
j2 - j90 + j59
j128 - j49
j137 - j55
 - j53 + j134
j89 + j93
j125 - j47
 - j265 + j90
 - j276 + j102
 - j285 + j111
 - j290 + j115
 - j293 + j118
 - j299 + j125
j128 - j302
 - j305 + j131
 - j308 + j134
j137 - j311
 - j314 + j140
j264 + j265 - j89 - j90
 - j57 + j314
j311 - j55
j308 - j53
j305 - j51
 - j49 + j302
j299 - j47
j296 - j62
 - j65 + j293
j290 - j61
 - j60 + j285
j276 - j45
j265 - j59
 - j57 + j140
j131 - j51
 - j65 + j118
j115 - j61
 - j60 + j111
 - j45 + j102
j90 - j59
j90 - j59
 - j57 + j140
j137 - j55
 - j53 + j134
 - j51 + j131
j128 - j49
j125 - j47
j122 - j62
 - j65 + j118
j115 - j61
 - j60 + j111
 - j45 + j102
j90 - j59
j0 - j362
 - j33 + j406
j403 - j30
j400 - j27
 - j24 + j397
j394 - j21
 - j18 + j391
 - j36 + j388
j384 - j38
 - j64 + j378
j376 - j14
j374 - j39
j369 - j37
 - j16 + j363
j2 - j364 - j389
 - j272 + j255 + j2 + j259 + j254 - j271
j2 - j275 - j276 + j247
j256 - j281 + j2 + j257 - j280
j248 - j257 + j2 - j284 - j285
 - j289 + j2 - j290 + j258 + j262
j2 - j292 - j293 - j254
 - j296 - j255 + j2 - j262 - j295
j2 - j298 - j299
j2 - j301 - j302
 - j304 - j305 + j2
j2 - j307 - j308
j2 - j310 - j311
 - j313 + j2 - j314
j2 - j260
 - j249 + j2
j2 - j250
j2 + j261 + j262
j2 + j251 + j262
j2 - j252
j2 - j253
 - j97 + j2 - j98 + j83 + j78 + j79
j2 - j101 - j102 + j71
j80 + j81 + j2 - j106 - j107
j72 - j81 + j2 - j110 - j111
j2 + j82 - j115 - j114 - j86
j2 - j117 - j118 - j78
 - j121 + j2 - j122 + j86 - j79
j2 - j124 - j125
 - j128 + j2 - j127
j2 - j130 - j131
j2 - j133 - j134
 - j136 - j137 + j2
j2 - j139 - j140
j2 - j84
j2 - j87
 - j73 + j2
j2 - j74
j2 + j85 - j86 + j87
j2 + j75 - j86 + j87
j2 - j76
j2 - j77
j2 - j459 - j460
j2 - j462 - j463
 - j465 + j2 - j466
j2 - j468 - j469
 - j472 + j2 - j471
j2 - j474 - j475
j2 + j87
 - j137 + j2
j2 - j140
j2 - j131
j2 - j351
j2 - j178
 - j56 + j2
 - j184 + j2
j2 - j234
j2 - j357
 - j472 + j2
j2 - j187
j2 - j237
 - j360 + j2
j2 - j475
j2 - j228
j2 - j466
j412 - j101
 - j121 + j435
j437 - j117
 - j97 + j439
j444 - j110
 - j114 + j454
j457 - j91
j459 - j124
j462 - j127
j465 - j130
 - j468 + j133
j2 - j471
j2 - j474
 - j465 + j2
j2 - j462
j2 - j459
j2 - j435
j2 - j437
j2 - j454
j2 - j444
j2 - j412
j2 - j439
 - j457 + j2
j2 - j134
 - j128 + j2
j2 - j125
j102 - j71
j2 - j181
j2 - j231
j2 - j354
j2 - j469
j2 - j175
 - j225 + j2
j2 - j348
j2 - j463
j2 - j172
j2 - j222
 - j345 + j2
j2 - j460
 - j200 + j41 + j60 - j197 - j198 - j199
 - j248 - j256 + j284 + j263
j2 - j35
j2 + j58 - j35
j2 - j20
j2 - j18
 - j48 + j2
j2 - j171
j2 - j221
 - j344 + j2
 - j392 + j2 - j391
j2 - j171 - j172
j2 - j221 - j222
 - j344 - j345 + j2
j248 + j256 + j2 - j284 - j263
j2 - j111
j2 - j150
 - j200 + j2
j2 - j323
j2 - j445
j2 + j150
j200 + j2
j2 - j284 - j263
j2 - j266
j2 - j271
j2 - j275
j2 - j284
 - j289 + j2
j2 - j292
j2 - j295
j2 + j301 - j295
j102 - j247
j2 - j115
j2 + j61
j2 - j165
j2 - j215
j2 - j338
j2 - j453
j2 - j453 - j454
j2 - j19
j2 - j69
j2 - j158
 - j169 + j2
j2 - j194 - j219
j2 - j195
 - j208 + j2
j219 - j389
j2 - j26
 - j25 + j2
j2 - j26 + j52
j2 - j90
j2 + j59 - j219
j2 + j59
j2 - j342
 - j456 + j2
2j41 + j2 + 15j43 + j60 + j59 + 12j62 + 16j61
j2 - j21
j2 - j23
j2 - j174
 - j224 + j2
j2 - j347
j2 + j50 - j23
j2 - j174 - j175
 - j224 - j225 + j2
j2 - j347 - j348
j80 + j72 - 2j41 - 2j89 - 15j43 - j60 - 16j61 - 12j62 + j495
j2 - j27
j2 - j29
j2 - j180
j2 - j230
 - j353 + j2
j2 - j29 + j54
j2 - j180 - j181
j2 - j230 - j231
 - j353 + j2 - j354
 - j32 + j2
j56 - j32 + j2
j2 - j34
j2 - j30
j2 - j183
 - j233 + j2
j2 - j356
 - j184 + j2 - j183
 - j233 + j2 - j234
j2 - j356 - j357
j2 - j15
j2 - j39
 - j153 + j2
j2 + j39
j2 - j203
j2 - j327
j2 - j38
j2 + j38
j2 - j164
j2 - j214
 - j337 + j2
j2 + j38 + j39
 - j17 + j2
 - j33 + j2
j2 - j406 - j407
j2 - j186
j2 - j236
j2 - j359
j2 - j186 - j187
j2 - j236 - j237
 - j360 + j2 - j359
j2 - j14
j2 - j155
j2 - j205
 - j329 + j2
j2 - j118
j2 - j438
j2 - j326
 - j64 + j2
j2 - j157
j2 - j207
j2 - j331
j2 + j378 + j373
j2 + j157 + j158
j208 + j2 + j207
j2 + j331 + j326
j2 - j31
 +  j4 -  j9 +  _t10 = 0
 +  j6 +  j8 -  _t11 = 0
 +  1/536870908j45 +  j83 -  1/536870908_t92 = 0
 = 0
 -  j67 +  _t70 +  j363 = 0
 -  j37 +  _t372 -  _t383 = 0
 +  _t94 = 0
 +  1/536870908j45 -  1/536870908_t92 +  _t95 = 0
 -  1/536870908j45 +  1/536870908_t92 +  _t96 = 0
 +  1/536870908j45 -  1/536870908_t92 +  _t142 = 0
 +  j45 +  _t100 = 0
 -  1/536870908j45 +  j86 +  1/536870908_t92 = 0
 +  j80 +  _t104 = 0
 -  j80 +  _t105 = 0
 +  j80 +  j81 = 0
 -  j80 +  _t109 = 0
 +  _t502 = 0
 +  1/536870908j45 -  1/536870908_t92 +  _t113 = 0
 +  j115 = 0
 -  1/536870908j45 +  j75 +  1/536870908_t92 = 0
 +  1/536870908j45 -  1/536870908_t92 +  _t120 = 0
 +  j265 = 0
 +  _t126 = 0
 +  _t129 = 0
 +  _t132 = 0
 +  _t135 = 0
 +  _t138 = 0
 +  _t141 = 0
 -  j45 +  j71 = 0
 +  _t143 = 0
 -  *1 +  _t492 = 0
 +  1/536870908j45 -  1/536870908_t92 +  _t145 = 0
 -  1/536870908j45 +  j85 +  1/536870908_t92 = 0
 +  j151 +  _t163 = 0
 +  j38 = 0
 +  _t161 = 0
 +  j159 +  _t162 = 0
 +  j37 -  j149 +  _t152 -  _t163 = 0
 +  j159 +  _t166 = 0
 +  j159 +  _t167 = 0
 +  j157 = 0
 = 0
 = 0
 -  j177 +  _t179 = 0
 = 0
 = 0
 = 0
 +  _t189 = 0
 +  _t190 = 0
 +  _t191 = 0
 +  j45 -  j193 +  _t196 = 0
 +  j201 +  _t213 = 0
 +  j209 +  _t210 = 0
 +  _t211 = 0
 +  j209 +  _t212 = 0
 = 0
 +  j209 +  _t216 = 0
 +  j209 +  _t217 = 0
 +  _t491 = 0
 = 0
 = 0
 +  j227 -  _t229 = 0
 = 0
 +  _t235 = 0
 = 0
 +  _t239 = 0
 +  _t240 = 0
 +  _t241 = 0
 -  j243 -  j245 +  _t246 +  j363 = 0
 +  _t277 = 0
 +  _t268 = 0
 +  1/536870909j45 -  1/536870909_t267 +  _t269 = 0
 +  1/536870909j45 +  j262 -  1/536870909_t267 = 0
 -  2/536870909j37 +  1/536870909j67 +  536870908/536870909j159 +  1/536870909j168 -  1/536870909_t170 +  1/536870909j363 +  j379 -  1/536870909_t390 = 0
 +  1/536870909j45 -  1/536870909_t267 +  _t287 = 0
 +  1/536870909j45 -  1/536870909_t267 +  _t316 = 0
 +  j256 +  _t278 = 0
 -  j256 +  _t279 = 0
 +  j248 +  j256 = 0
 -  j256 +  _t283 = 0
 -  1/536870909j45 +  j261 +  1/536870909_t267 = 0
 -  1/536870909j45 +  1/536870909_t267 +  _t270 = 0
 -  1/536870909j45 +  1/536870909_t267 +  _t288 = 0
 -  1/536870909j45 +  j258 +  1/536870909_t267 = 0
 +  j45 +  _t274 = 0
 -  1/536870909j45 +  j251 +  1/536870909_t267 = 0
 +  j305 = 0
 +  j391 = 0
 +  j311 = 0
 +  _t309 = 0
 +  j302 = 0
 +  _t315 = 0
 +  j256 +  j257 = 0
 -  1/536870909j45 +  j255 +  1/536870909_t267 = 0
 +  1/536870909j45 -  1/536870909_t267 +  _t318 = 0
 = 0
 +  j67 +  536870908j159 +  j168 -  _t170 -  j243 -  j245 -  536870909j332 -  j341 +  _t343 = 0
 +  j37 -  j322 +  _t325 -  _t336 = 0
 +  _t334 = 0
 +  j332 +  _t335 = 0
 -  j37 +  j67 +  536870908j159 +  j168 -  _t170 +  536870905j416 +  _t418 = 0
 +  j332 +  _t339 = 0
 -  j332 +  _t340 = 0
 +  j324 +  _t336 = 0
 +  j345 = 0
 = 0
 +  j350 -  _t352 = 0
 = 0
 = 0
 = 0
 +  j45 -  j363 +  _t366 = 0
 +  _t223 = 0
 +  2j37 -  j67 -  536870908j159 -  j168 +  _t170 +  j388 = 0
 +  _t381 = 0
 +  j118 = 0
 +  j371 +  _t383 = 0
 +  2/536870909j37 -  1/536870909j67 -  536870908/536870909j159 -  1/536870909j168 +  1/536870909_t170 -  1/536870909j363 +  _t386 +  1/536870909_t390 = 0
 -  2/536870909j37 +  1/536870909j67 +  536870908/536870909j159 +  1/536870909j168 -  1/536870909_t170 +  1/536870909j363 +  _t387 -  1/536870909_t390 = 0
 = 0
 +  j128 = 0
 +  j406 = 0
 = 0
 +  j400 = 0
 +  j403 = 0
 = 0
 -  j410 +  _t413 = 0
 +  _t415 +  _t417 = 0
 +  j414 -  _t417 = 0
 +  j331 = 0
 +  _t420 +  _t422 = 0
 +  j419 -  _t422 = 0
 +  j397 -  _t399 = 0
 +  _t425 +  _t427 = 0
 +  j424 -  _t427 = 0
 -  j37 +  j67 +  536870908j159 +  j168 -  _t170 +  _t428 = 0
 +  _t430 +  _t432 = 0
 +  j429 -  _t432 = 0
 +  536870906j431 +  _t433 = 0
 +  j441 +  _t442 = 0
 +  j447 +  _t448 = 0
 +  j449 +  _t450 = 0
 +  j449 +  _t451 = 0
 -  j410 -  2j447 +  _t458 = 0
 +  _t455 = 0
 = 0
 +  _t461 = 0
 +  _t464 = 0
 +  _t467 = 0
 +  _t470 = 0
 +  _t473 = 0
 +  _t476 = 0
 +  _t477 = 0
 +  536870905j421 +  _t423 = 0
 -  j199 +  j201 +  _t202 = 0
 -  *1 +  _t489 = 0
 +  _t286 = 0
 +  1/536870909j45 +  j259 -  1/536870909_t267 = 0
 +  *1 +  *-1 = 0
 = 0
 +  *1 +  _t485 = 0
 +  *1 +  _t486 = 0
 -  j193 -  536870908j209 -  j218 +  _t220 = 0
 = 0
 = 0
 +  _t490 = 0
 -  j192 -  j199 +  _t484 = 0
 +  j90 = 0
 +  _t493 = 0
 +  _t494 = 0
 +  _t496 = 0
 +  _t497 = 0
 +  _t498 = 0
 +  *1 +  _t499 = 0
 +  _t501 = 0
 +  _t483 = 0
 +  j72 +  j80 = 0
 +  _t504 = 0
 +  _t505 = 0
 +  _t506 = 0
 +  _t507 = 0
 +  _t508 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  j62 = 0
 +  j122 = 0
 = 0
 = 0
 +  j296 = 0
 +  j328 = 0
 +  j374 = 0
 +  j436 = 0
 = 0
 +  j37 +  _t40 -  j67 -  536870908j159 -  j168 +  _t170 = 0
 +  j47 = 0
 = 0
 = 0
 = 0
 +  _t531 = 0
 +  j149 +  _t532 = 0
 +  _t533 = 0
 -  j37 +  j149 +  _t534 = 0
 +  _t535 = 0
 +  _t536 = 0
 +  _t537 = 0
 +  j199 +  _t538 = 0
 +  _t539 = 0
 +  j199 +  _t540 = 0
 +  j199 +  _t541 = 0
 = 0
 -  2*1 +  _t543 = 0
 -  2*1 +  *2 = 0
 = 0
 = 0
 = 0
 = 0
   -*1 +  *1 = 0
 = 0
   -*1 +  *1 = 0
 = 0
 = 0
 +  j137 = 0
 +  j134 = 0
 -  *1 -  *-1 = 0
 +  j125 = 0
 = 0
 -  j45 +  j276 = 0
 +  j285 = 0
 +  j290 = 0
 +  j293 = 0
 +  _t300 = 0
 = 0
 +  j131 = 0
 +  j308 = 0
 +  _t312 = 0
 +  j314 = 0
 +  *1 -  *1 = 0
 +  j140 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  j65 = 0
 +  j61 = 0
 +  j111 = 0
 -  j45 +  j102 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
   -*1 +  *1 = 0
 = 0
 = 0
 = 0
 +  j24 -  _t399 = 0
 +  j394 = 0
 +  _t393 = 0
 +  j36 +  2j37 -  j67 -  536870908j159 -  j168 +  _t170 = 0
 +  j384 = 0
 +  j64 = 0
 = 0
 +  j39 = 0
 -  j37 +  j369 = 0
 +  j16 -  j363 = 0
 = 0
 = 0
 -  j45 +  j247 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  _t303 = 0
 +  _t306 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  j299 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  j460 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  j199 +  _t720 = 0
 +  _t721 = 0
 = 0
 = 0
 = 0
 = 0
 +  j78 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 -  j447 +  _t452 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  j254 = 0
 = 0
 = 0
 = 0
 -  1/536870908j45 +  j79 +  1/536870908_t92 = 0
 = 0
 = 0
 = 0
 +  j338 = 0
 +  j453 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  j46 -  _t63 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  2*1 -  *2 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 +  2/536870909j37 -  1/536870909j67 -  536870908/536870909j159 -  1/536870909j168 +  1/536870909_t170 -  1/536870909j363 +  _t380 +  1/536870909_t390 = 0
 +  j153 = 0
 = 0
 +  j203 = 0
 +  j327 = 0
 +  2/536870909j37 -  1/536870909j67 -  536870908/536870909j159 -  1/536870909j168 +  1/536870909_t170 -  1/536870909j363 +  _t382 +  1/536870909_t390 = 0
 = 0
 +  j164 = 0
 +  j214 = 0
 +  j337 = 0
 = 0
 +  j17 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 = 0
 -  1/536870908j45 +  j82 +  1/536870908_t92 = 0
 +  j438 = 0
 +  j326 = 0
 +  j378 = 0
 +  j159 +  _t160 = 0
 +  j207 = 0
 +  j332 +  _t333 = 0
 = 0
 = 0
 = 0
 = 0
 = 0

inf columns: none
[0]    := (1, 0)               [(1, 0), (1, 0)]
[1]    := (1, 0)               [(1, 0), (1, 0)]
[2]    := (0, 0)               [(0, 0), (0, 0)]
[3]    := (0, 0)               [(0, 0), (0, 0)]
[4]    := (1, 0)               [(1, 0), oo]
[5]    := (0, 0)               [(0, 0), oo]
[6]    := (536870906, 0) base  [(0, 0), oo]
[7]    := (2, 0)               [(2, 0), oo]
[8]    := (4, 0)               [(4, 0), oo]
[9]    := (15, 0)              [(15, 0), oo]
[10]    := (14, 0) base         [-oo, (14, 0)]
j9 - j4
[11]    := (536870910, 0)       [(536870910, 0), oo]
j8 + j6
[12]    := (0, 0)               [(0, 0), (0, 0)]
[13]    := (0, 0)               [(0, 0), (0, 0)]
[14]    := (0, 0)               [(0, 0), (0, 0)]
[15]    := (0, 0) base          [(0, 0), (0, 0)]
[16]    := (1, 0) base          [(1, 0), (2, 0)]
[17]    := (0, 0) base          [-oo, (0, 0)]
[18]    := (0, 0)               [(0, 0), (0, 0)]
[19]    := (0, 0)               [(0, 0), (0, 0)]
[20]    := (0, 0)               [(0, 0), (0, 0)]
[21]    := (0, 0)               [(0, 0), (0, 0)]
[22]    := (-1, 0)              [-oo, (-1, 0)]
[23]    := (0, 0)               [(0, 0), (0, 0)]
[24]    := (-1, 0) base         [(-2, 0), (2, 0)]
[25]    := (0, 0)               [(0, 0), (0, 0)]
[26]    := (0, 0) base          [(0, 0), (0, 0)]
[27]    := (0, 0)               [(0, 0), (0, 0)]
[28]    := (-1, 0)              [-oo, (-1, 0)]
[29]    := (0, 0)               [(0, 0), (0, 0)]
[30]    := (0, 0)               [(0, 0), (0, 0)]
[31]    := (0, 0)               [(0, 0), (0, 0)]
[32]    := (0, 0) base          [(0, 0), (0, 0)]
[33]    := (0, 0)               [(0, 0), (0, 0)]
[34]    := (0, 0)               [(0, 0), (0, 0)]
[35]    := (0, 0)               [(0, 0), (0, 0)]
[36]    := (-12, 0) base        [-oo, (-1, 0)]
[37]    := (2, 0)               [(1, 0), (2, 0)]
[38]    := (0, 0) base          [(-2, 0), (0, 0)]
[39]    := (0, 0) base          [(-2, 0), (2, 0)]
[40]    := (-10, 0) base        [-oo, (0, 0)]
j32 + j17 + j35 + j36 + j37 + 16j38 + 12j39 + j20 + j23 + j26 + j13 + j29 + j15
[41]    := (0, 0)               [(0, 0), (0, 0)]
[42]    := (0, 0)               [(0, 0), (0, 0)]
[43]    := (0, 0)               [(0, 0), (0, 0)]
[44]    := (0, 0)               [(0, 0), (0, 0)]
[45]    := (2, 0)               [(1, 0), (2, 0)]
[46]    := (0, 0) base          [(0, 0), oo]
[47]    := (0, 0) base          [(-2, 0), (2, 0)]
[48]    := (0, 0) base          [(0, 0), (0, 0)]
[49]    := (0, 0) base          [(0, 0), (0, 0)]
[50]    := (0, 0)               [(0, 0), (0, 0)]
[51]    := (0, 0) base          [(0, 0), (0, 0)]
[52]    := (0, 0)               [(0, 0), (0, 0)]
[53]    := (0, 0) base          [(0, 0), (0, 0)]
[54]    := (0, 0)               [(0, 0), (0, 0)]
[55]    := (0, 0)               [(0, 0), (0, 0)]
[56]    := (0, 0)               [(0, 0), (0, 0)]
[57]    := (0, 0)               [(0, 0), (0, 0)]
[58]    := (0, 0) base          [(0, 0), (0, 0)]
[59]    := (0, 0) base          [(0, 0), (0, 0)]
[60]    := (0, 0)               [(0, 0), (0, 0)]
[61]    := (0, 0) base          [(-2, 0), (0, 0)]
[62]    := (0, 0) base          [(-2, 0), (2, 0)]
[63]    := (0, 0)               [-oo, (0, 0)]
j44 + j48 + j50 + j58 + j52 + j54 + j56 + j42 + j59 + j60 + 16j61 + j46 + 12j62
[64]    := (0, 0) base          [(-2, 0), (2, 0)]
[65]    := (0, 0) base          [(-2, 0), (2, 0)]
[66]    := (3, 0)               [(1, 0), oo]
[67]    := (3, 0)               [(1, 0), oo]
[68]    := (0, 0)               [(0, 0), (0, 0)]
[69]    := (0, 0)               [(0, 0), (0, 0)]
[70]    := (2, 0) base          [(0, 0), oo]
- j16 + j67 + j69
[71]    := (2, 0) base          [(0, 0), oo]
[72]    := (0, 0) base          [(0, 0), oo]
[73]    := (0, 0)               [(0, 0), (0, 0)]
[74]    := (0, 0)               [(0, 0), (0, 0)]
[75]    := (0, 0) base          [(0, 0), oo]
[76]    := (0, 0)               [(0, 0), (0, 0)]
[77]    := (0, 0)               [(0, 0), (0, 0)]
[78]    := (0, 0) base          [(0, 0), oo]
[79]    := (0, 0) base          [(0, 0), oo]
[80]    := (0, 0)               [(0, 0), oo]
[81]    := (0, 0) base          [(0, 0), oo]
[82]    := (0, 0) base          [(0, 0), oo]
[83]    := (0, 0) base          [(0, 0), oo]
[84]    := (0, 0)               [(0, 0), (0, 0)]
[85]    := (0, 0) base          [(0, 0), oo]
[86]    := (0, 0) base          [(0, 0), oo]
[87]    := (0, 0)               [(0, 0), (0, 0)]
[88]    := (0, 0)               [(0, 0), (0, 0)]
[89]    := (1, 0)               [(1, 0), (1, 0)]
[90]    := (0, 0) base          [(0, 0), (1, 0)]
[91]    := (0, 0)               [(0, 0), (0, 0)]
[92]    := (2, 0)               [(2, 0), oo]
2j80 + 2j81 + 2j82 + 4j83 + 4j84 + 4j85 - 536870913j86 + j71 + 536870914j87 + j90 + j91 + 3j78 + 3j79
[93]    := (-1, 0)              [(-1, 0), (-1, 0)]
[94]    := (0, 0) base          [-oo, oo]
- j78
[95]    := (0, 0) base          [-oo, oo]
- j79
[96]    := (0, 0) base          [-oo, oo]
- j83
[97]    := (0, 0)               [(0, 0), (0, 0)]
[98]    := (0, 0)               [(0, 0), (0, 0)]
[99]    := (0, 0)               [(0, 0), (0, 0)]
j97 + j98 - j83 - j78 - j79
[100]    := (-2, 0) base         [-oo, oo]
- j71
[101]    := (0, 0)               [(0, 0), (0, 0)]
[102]    := (2, 0) base          [(1, 0), oo]
[103]    := (0, 0)               [(0, 0), (0, 0)]
j101 + j102 - j71
[104]    := (0, 0) base          [-oo, oo]
- j80
[105]    := (0, 0) base          [-oo, oo]
- j81
[106]    := (0, 0)               [(0, 0), (0, 0)]
[107]    := (0, 0)               [(0, 0), (0, 0)]
[108]    := (0, 0)               [(0, 0), (0, 0)]
- j80 - j81 + j106 + j107
[109]    := (0, 0) base          [-oo, oo]
- j72
[110]    := (0, 0)               [(0, 0), (0, 0)]
[111]    := (0, 0) base          [-oo, (0, 0)]
[112]    := (0, 0)               [(0, 0), (0, 0)]
- j72 + j81 + j110 + j111
[113]    := (0, 0) base          [-oo, oo]
- j82
[114]    := (0, 0)               [(0, 0), (0, 0)]
[115]    := (0, 0) base          [-oo, (0, 0)]
[116]    := (0, 0)               [(0, 0), (0, 0)]
- j82 + j115 + j114 + j86
[117]    := (0, 0)               [(0, 0), (0, 0)]
[118]    := (0, 0) base          [-oo, oo]
[119]    := (0, 0)               [(0, 0), (0, 0)]
j117 + j118 + j78
[120]    := (0, 0) base          [-oo, oo]
- j86
[121]    := (0, 0)               [(0, 0), (0, 0)]
[122]    := (0, 0) base          [-oo, oo]
[123]    := (0, 0)               [(0, 0), (0, 0)]
j121 + j122 - j86 + j79
[124]    := (0, 0)               [(0, 0), (0, 0)]
[125]    := (0, 0) base          [-oo, oo]
[126]    := (0, 0) base          [-oo, oo]
j124 + j125
[127]    := (0, 0)               [(0, 0), (0, 0)]
[128]    := (0, 0) base          [(-1, 0), (1, 0)]
[129]    := (0, 0) base          [-oo, oo]
j128 + j127
[130]    := (0, 0)               [(0, 0), (0, 0)]
[131]    := (0, 0) base          [(-1, 0), (1, 0)]
[132]    := (0, 0) base          [-oo, oo]
j130 + j131
[133]    := (0, 0)               [(0, 0), (0, 0)]
[134]    := (0, 0) base          [(-1, 0), (1, 0)]
[135]    := (0, 0) base          [-oo, oo]
j133 + j134
[136]    := (0, 0) base          [(0, 0), (0, 0)]
[137]    := (0, 0) base          [(-1, 0), (1, 0)]
[138]    := (0, 0) base          [-oo, oo]
j136 + j137
[139]    := (0, 0) base          [(0, 0), (0, 0)]
[140]    := (0, 0) base          [(-1, 0), (1, 0)]
[141]    := (0, 0) base          [-oo, oo]
j139 + j140
[142]    := (0, 0) base          [-oo, oo]
- j85
[143]    := (0, 0) base          [-oo, oo]
- j87
[144]    := (0, 0)               [(0, 0), (0, 0)]
- j85 + j86 - j87
[145]    := (0, 0) base          [-oo, oo]
- j75
[146]    := (0, 0)               [(0, 0), (0, 0)]
- j75 + j86 - j87
[147]    := (0, 0)               [(0, 0), (0, 0)]
[148]    := (0, 0)               [(0, 0), (0, 0)]
[149]    := (1, 0)               [(1, 0), oo]
[150]    := (0, 0)               [(0, 0), (0, 0)]
[151]    := (1, 0) base          [(0, 0), oo]
[152]    := (-2, 0) base         [-oo, (-1, 0)]
j149 + j150 + j147 + j148 - j37 - j12 - j151
[153]    := (0, 0) base          [-oo, oo]
[154]    := (0, 0) base          [(0, 0), (0, 0)]
[155]    := (0, 0)               [(0, 0), (0, 0)]
[156]    := (0, 0)               [(0, 0), (0, 0)]
[157]    := (0, 0) base          [-oo, oo]
[158]    := (0, 0)               [(0, 0), (0, 0)]
[159]    := (1, 0)               [(0, 0), oo]
[160]    := (-1, 0) base         [-oo, (-1, 0)]
j38 + j153 + j154 + j155 + j156 + j157 + j158 - j159
[161]    := (0, 0) base          [(0, 0), oo]
- j157 - j158
[162]    := (-1, 0) base         [-oo, (-1, 0)]
j155 + j156 + j157 + j158 - j159
[163]    := (-1, 0)              [-oo, (-1, 0)]
j147 - j12 + j148 - j151
[164]    := (0, 0) base          [-oo, oo]
[165]    := (0, 0)               [(0, 0), (0, 0)]
[166]    := (-1, 0) base         [-oo, (-1, 0)]
j164 + j165 + j153 + j154 + j155 + j156 + j157 + j158 - j159
[167]    := (-1, 0) base         [-oo, (-1, 0)]
j153 + j154 + j155 + j156 + j157 + j158 - j159
[168]    := (-36, 0)             [-oo, (-1, 0)]
[169]    := (0, 0)               [(0, 0), (0, 0)]
[170]    := (536870883, 0)       [(0, 0), oo]
j67 + 2j164 - 2j37 + j69 + 2j165 - 536870910j38 + j168 + j169 - j36 - 2j12 - 4j14 + 2j147 + 2j148 - 536870907j153 - 536870907j154 - 536870904j155 - 536870904j156 - 536870907j157 - 536870907j158 + 536870908j159
[171]    := (0, 0) base          [(0, 0), (0, 0)]
[172]    := (0, 0) base          [(0, 0), (0, 0)]
[173]    := (0, 0)               [(0, 0), (0, 0)]
j171 + j172
[174]    := (0, 0)               [(0, 0), (0, 0)]
[175]    := (0, 0)               [(0, 0), (0, 0)]
[176]    := (0, 0) base          [(0, 0), (0, 0)]
j174 + j175
[177]    := (-3, 0)              [-oo, oo]
[178]    := (0, 0)               [(0, 0), (0, 0)]
[179]    := (-3, 0) base         [-oo, (-1, 0)]
j177 + j178
[180]    := (0, 0)               [(0, 0), (0, 0)]
[181]    := (0, 0)               [(0, 0), (0, 0)]
[182]    := (0, 0) base          [(0, 0), (0, 0)]
j180 + j181
[183]    := (0, 0) base          [(0, 0), (0, 0)]
[184]    := (0, 0)               [(0, 0), (0, 0)]
[185]    := (0, 0) base          [(0, 0), (0, 0)]
j184 + j183
[186]    := (0, 0) base          [(0, 0), (0, 0)]
[187]    := (0, 0)               [(0, 0), (0, 0)]
[188]    := (0, 0)               [(0, 0), (0, 0)]
j186 + j187
[189]    := (0, 0) base          [-oo, oo]
- j38
[190]    := (0, 0) base          [-oo, oo]
- j39
[191]    := (0, 0) base          [-oo, oo]
- j38 - j39
[192]    := (1, 0)               [(1, 0), oo]
[193]    := (1, 0)               [(1, 0), oo]
[194]    := (0, 0) base          [(0, 0), (0, 0)]
[195]    := (0, 0)               [(0, 0), (0, 0)]
[196]    := (-1, 0) base         [-oo, (-1, 0)]
j193 + j195 - j45
[197]    := (0, 0)               [(0, 0), (0, 0)]
[198]    := (0, 0)               [(0, 0), (0, 0)]
[199]    := (2, 0)               [(1, 0), oo]
[200]    := (0, 0)               [(0, 0), (0, 0)]
[201]    := (0, 0)               [(0, 0), oo]
[202]    := (2, 0) base          [(0, 0), oo]
j200 - j201 - j41 - j60 + j197 + j198 + j199
[203]    := (0, 0) base          [-oo, oo]
[204]    := (0, 0) base          [(0, 0), (0, 0)]
[205]    := (0, 0)               [(0, 0), (0, 0)]
[206]    := (0, 0)               [(0, 0), (0, 0)]
[207]    := (0, 0) base          [-oo, oo]
[208]    := (0, 0)               [(0, 0), (0, 0)]
[209]    := (0, 0)               [(0, 0), oo]
[210]    := (0, 0) base          [(0, 0), oo]
j206 - j209 + j208 + j203 + j204 + j61 + j205 + j207
[211]    := (0, 0) base          [(0, 0), oo]
- j208 - j207
[212]    := (0, 0) base          [(0, 0), oo]
j208 - j209 + j205 + j206 + j207
[213]    := (0, 0) base          [(0, 0), oo]
- j41 - j201 + j197 + j198
[214]    := (0, 0) base          [-oo, oo]
[215]    := (0, 0)               [(0, 0), (0, 0)]
[216]    := (0, 0) base          [(0, 0), oo]
j208 - j209 + j214 + j215 + j203 + j204 + j205 + j206 + j207
[217]    := (0, 0) base          [(0, 0), oo]
j208 - j209 + j203 + j204 + j205 + j206 + j207
[218]    := (-1, 0)              [-oo, (-1, 0)]
[219]    := (0, 0)               [(0, 0), (0, 0)]
[220]    := (0, 0) base          [(0, 0), oo]
j193 + j195 + 2j197 + 2j198 - 2j41 - 536870907j203 - 536870907j204 - 536870904j205 - 536870904j206 - 536870907j207 - 536870907j208 + 536870908j209 - 4j43 + 2j214 + 2j215 + j218 + j219 - 2j60 - 536870910j61 - j59
[221]    := (0, 0)               [(0, 0), (0, 0)]
[222]    := (0, 0) base          [(0, 0), (0, 0)]
[223]    := (0, 0) base          [-oo, oo]
j221 + j222
[224]    := (0, 0)               [(0, 0), (0, 0)]
[225]    := (0, 0)               [(0, 0), (0, 0)]
[226]    := (0, 0) base          [(0, 0), (0, 0)]
j224 + j225
[227]    := (-1, 0) base         [-oo, oo]
[228]    := (0, 0)               [(0, 0), (0, 0)]
[229]    := (-1, 0)              [-oo, (-1, 0)]
j227 + j228
[230]    := (0, 0)               [(0, 0), (0, 0)]
[231]    := (0, 0)               [(0, 0), (0, 0)]
[232]    := (0, 0) base          [(0, 0), (0, 0)]
j230 + j231
[233]    := (0, 0) base          [(0, 0), (0, 0)]
[234]    := (0, 0)               [(0, 0), (0, 0)]
[235]    := (0, 0) base          [-oo, oo]
j233 + j234
[236]    := (0, 0) base          [(0, 0), (0, 0)]
[237]    := (0, 0)               [(0, 0), (0, 0)]
[238]    := (0, 0)               [(0, 0), (0, 0)]
j236 + j237
[239]    := (0, 0) base          [-oo, oo]
- j61
[240]    := (0, 0) base          [-oo, oo]
- j62
[241]    := (0, 0) base          [-oo, oo]
- j61 - j62
[242]    := (-1, 0)              [-oo, (-1, 0)]
[243]    := (-1, 0)              [-oo, oo]
[244]    := (0, 0)               [(0, 0), oo]
[245]    := (0, 0)               [-oo, oo]
[246]    := (-2, 0) base         [-oo, (-1, 0)]
- j16 + j243 + j245
[247]    := (2, 0) base          [(0, 0), oo]
[248]    := (0, 0) base          [(0, 0), oo]
[249]    := (0, 0)               [(0, 0), (0, 0)]
[250]    := (0, 0)               [(0, 0), (0, 0)]
[251]    := (0, 0) base          [(0, 0), oo]
[252]    := (0, 0)               [(0, 0), (0, 0)]
[253]    := (0, 0)               [(0, 0), (0, 0)]
[254]    := (0, 0) base          [(0, 0), oo]
[255]    := (0, 0) base          [(0, 0), oo]
[256]    := (0, 0)               [(0, 0), oo]
[257]    := (0, 0) base          [(0, 0), oo]
[258]    := (0, 0) base          [(0, 0), oo]
[259]    := (0, 0) base          [(0, 0), oo]
[260]    := (0, 0)               [(0, 0), (0, 0)]
[261]    := (0, 0) base          [(0, 0), oo]
[262]    := (0, 0) base          [(0, 0), oo]
[263]    := (0, 0)               [(0, 0), (0, 0)]
[264]    := (1, 0)               [(1, 0), (1, 0)]
[265]    := (0, 0) base          [(0, 0), oo]
[266]    := (0, 0)               [(0, 0), (0, 0)]
[267]    := (2, 0)               [(2, 0), oo]
2j256 + 2j257 + 2j258 + 4j259 + 4j260 + 4j261 + 536870914j262 + j247 + j265 + j266 + 3j254 + 3j255
[268]    := (0, 0) base          [-oo, oo]
- j254
[269]    := (0, 0) base          [-oo, oo]
- j255
[270]    := (0, 0) base          [-oo, oo]
- j259
[271]    := (0, 0)               [(0, 0), (0, 0)]
[272]    := (0, 0)               [(0, 0), (0, 0)]
[273]    := (0, 0)               [(0, 0), (0, 0)]
j272 + j271 - j259 - j254 - j255
[274]    := (-2, 0) base         [-oo, oo]
- j247
[275]    := (0, 0)               [(0, 0), (0, 0)]
[276]    := (2, 0) base          [(1, 0), oo]
[277]    := (0, 0) base          [-oo, oo]
j275 + j276 - j247
[278]    := (0, 0) base          [-oo, oo]
- j256
[279]    := (0, 0) base          [-oo, oo]
- j257
[280]    := (0, 0)               [(0, 0), (0, 0)]
[281]    := (0, 0)               [(0, 0), (0, 0)]
[282]    := (0, 0)               [(0, 0), (0, 0)]
- j256 + j281 - j257 + j280
[283]    := (0, 0) base          [-oo, oo]
- j248
[284]    := (0, 0)               [(0, 0), (0, 0)]
[285]    := (0, 0) base          [(-1, 0), (0, 0)]
[286]    := (0, 0) base          [-oo, oo]
- j248 + j257 + j284 + j285
[287]    := (0, 0) base          [-oo, oo]
- j258
[288]    := (0, 0) base          [-oo, oo]
- j262
[289]    := (0, 0)               [(0, 0), (0, 0)]
[290]    := (0, 0) base          [-oo, (0, 0)]
[291]    := (0, 0)               [(0, 0), (0, 0)]
j289 + j290 - j258 - j262
[292]    := (0, 0) base          [(0, 0), (0, 0)]
[293]    := (0, 0) base          [-oo, oo]
[294]    := (0, 0)               [(0, 0), (0, 0)]
j292 + j293 + j254
[295]    := (0, 0)               [(0, 0), (0, 0)]
[296]    := (0, 0) base          [-oo, oo]
[297]    := (0, 0)               [(0, 0), (0, 0)]
j296 + j295 + j262 + j255
[298]    := (0, 0) base          [(0, 0), (0, 0)]
[299]    := (0, 0) base          [-oo, oo]
[300]    := (0, 0) base          [-oo, oo]
j298 + j299
[301]    := (0, 0) base          [(0, 0), (0, 0)]
[302]    := (0, 0) base          [(-1, 0), (1, 0)]
[303]    := (0, 0) base          [-oo, oo]
j301 + j302
[304]    := (0, 0) base          [(0, 0), (0, 0)]
[305]    := (0, 0) base          [(-1, 0), (1, 0)]
[306]    := (0, 0) base          [-oo, oo]
j304 + j305
[307]    := (0, 0) base          [(0, 0), (0, 0)]
[308]    := (0, 0) base          [(-1, 0), (1, 0)]
[309]    := (0, 0) base          [-oo, oo]
j307 + j308
[310]    := (0, 0) base          [(0, 0), (0, 0)]
[311]    := (0, 0) base          [(-1, 0), (1, 0)]
[312]    := (0, 0) base          [-oo, oo]
j310 + j311
[313]    := (0, 0) base          [(0, 0), (0, 0)]
[314]    := (0, 0) base          [(-1, 0), (1, 0)]
[315]    := (0, 0) base          [-oo, oo]
j313 + j314
[316]    := (0, 0) base          [-oo, oo]
- j261
[317]    := (0, 0)               [(0, 0), (0, 0)]
- j261 - j262
[318]    := (0, 0) base          [-oo, oo]
- j251
[319]    := (0, 0)               [(0, 0), (0, 0)]
- j251 - j262
[320]    := (0, 0)               [(0, 0), (0, 0)]
[321]    := (0, 0)               [(0, 0), (0, 0)]
[322]    := (-2, 0)              [-oo, (-1, 0)]
[323]    := (0, 0)               [(0, 0), (0, 0)]
[324]    := (0, 0) base          [(0, 0), oo]
[325]    := (-4, 0) base         [-oo, (-1, 0)]
j320 + j321 + j322 + j323 - j324 - j37 - j12
[326]    := (0, 0) base          [-oo, oo]
[327]    := (0, 0) base          [-oo, oo]
[328]    := (0, 0) base          [-oo, oo]
[329]    := (0, 0)               [(0, 0), (0, 0)]
[330]    := (0, 0)               [(0, 0), (0, 0)]
[331]    := (0, 0) base          [-oo, oo]
[332]    := (0, 0)               [(0, 0), oo]
[333]    := (0, 0) base          [(0, 0), oo]
j328 + j329 + j330 + j331 - j332 + j326 + j327
[334]    := (0, 0) base          [(0, 0), oo]
- j331 - j326
[335]    := (0, 0) base          [(0, 0), oo]
j329 + j330 + j331 - j332 + j326
[336]    := (0, 0)               [(0, 0), oo]
j320 + j321 - j12 - j324
[337]    := (0, 0) base          [-oo, oo]
[338]    := (0, 0) base          [-oo, oo]
[339]    := (0, 0) base          [(0, 0), oo]
j337 + j338 + j326 + j327 + j328 + j329 + j330 + j331 - j332
[340]    := (0, 0) base          [(0, 0), oo]
- j328 - j329 - j330 - j331 + j332 - j326 - j327
[341]    := (12, 0)              [(1, 0), oo]
[342]    := (0, 0)               [(0, 0), (0, 0)]
[343]    := (19, 0) base         [(0, 0), oo]
2j320 + 2j321 - j36 - 2j37 - 536870908j326 - 536870908j327 - 536870908j328 - 536870905j329 - 536870905j330 - 536870908j331 + 536870909j332 - 2j12 - 4j14 + 2j337 + 2j338 + j243 + j245 + j341 + j342
[344]    := (0, 0) base          [(0, 0), (0, 0)]
[345]    := (0, 0) base          [-oo, oo]
[346]    := (0, 0)               [(0, 0), (0, 0)]
j344 + j345
[347]    := (0, 0) base          [(0, 0), (0, 0)]
[348]    := (0, 0) base          [(0, 0), (0, 0)]
[349]    := (0, 0)               [(0, 0), (0, 0)]
j347 + j348
[350]    := (1, 0) base          [-oo, oo]
[351]    := (0, 0)               [(0, 0), (0, 0)]
[352]    := (1, 0)               [(1, 0), oo]
j350 + j351
[353]    := (0, 0)               [(0, 0), (0, 0)]
[354]    := (0, 0)               [(0, 0), (0, 0)]
[355]    := (0, 0) base          [(0, 0), (0, 0)]
j353 + j354
[356]    := (0, 0) base          [(0, 0), (0, 0)]
[357]    := (0, 0)               [(0, 0), (0, 0)]
[358]    := (0, 0) base          [(0, 0), (0, 0)]
j356 + j357
[359]    := (0, 0)               [(0, 0), (0, 0)]
[360]    := (0, 0)               [(0, 0), (0, 0)]
[361]    := (0, 0) base          [(0, 0), (0, 0)]
j360 + j359
[362]    := (1, 0)               [(1, 0), (1, 0)]
[363]    := (1, 0)               [(1, 0), oo]
[364]    := (0, 0)               [(0, 0), (0, 0)]
[365]    := (0, 0)               [(0, 0), (0, 0)]
[366]    := (-1, 0) base         [-oo, (-1, 0)]
j363 - j45 + j365
[367]    := (0, 0)               [(0, 0), (0, 0)]
[368]    := (0, 0)               [(0, 0), (0, 0)]
[369]    := (2, 0) base          [(1, 0), oo]
[370]    := (0, 0)               [(0, 0), (0, 0)]
[371]    := (0, 0) base          [(0, 0), oo]
[372]    := (2, 0) base          [(0, 0), oo]
j368 - j41 + j369 - j371 - j60 + j370 + j367
[373]    := (0, 0)               [(0, 0), (0, 0)]
[374]    := (0, 0) base          [-oo, oo]
[375]    := (0, 0) base          [(0, 0), (0, 0)]
[376]    := (0, 0) base          [(0, 0), (0, 0)]
[377]    := (0, 0)               [(0, 0), (0, 0)]
[378]    := (0, 0) base          [-oo, oo]
[379]    := (1, 0) base          [(0, 0), oo]
[380]    := (-1, 0) base         [-oo, (-1, 0)]
j376 + j377 + j378 - j379 + j373 + j374 + j375
[381]    := (0, 0) base          [(0, 0), oo]
- j378 - j373
[382]    := (-1, 0) base         [-oo, (-1, 0)]
j376 + j377 + j378 - j379 + j373
[383]    := (0, 0)               [(0, 0), oo]
j368 - j41 - j371 + j367
[384]    := (0, 0) base          [-oo, oo]
[385]    := (0, 0)               [(0, 0), (0, 0)]
[386]    := (-1, 0) base         [-oo, (-1, 0)]
j384 + j385 + j373 + j374 + j375 + j376 + j377 + j378 - j379
[387]    := (1, 0) base          [(0, 0), oo]
- j376 - j377 - j378 + j379 - j373 - j374 - j375
[388]    := (-12, 0) base        [-oo, (0, 0)]
[389]    := (0, 0)               [(0, 0), (0, 0)]
[390]    := (536870898, 0)       [(0, 0), oo]
2j384 + 2j385 + j388 + j389 - 2j41 + j363 - 4j43 + j365 + 2j367 + 2j368 - 536870908j373 - 536870908j374 - 536870908j375 - 536870905j376 - 536870905j377 - 536870908j378 + 536870909j379 - 2j60 - j59
[391]    := (0, 0) base          [-oo, oo]
[392]    := (0, 0)               [(0, 0), (0, 0)]
[393]    := (0, 0) base          [-oo, oo]
j392 + j391
[394]    := (0, 0) base          [-oo, oo]
[395]    := (0, 0)               [(0, 0), (0, 0)]
[396]    := (0, 0) base          [(0, 0), (0, 0)]
j394 + j395
[397]    := (-1, 0) base         [-oo, oo]
[398]    := (0, 0)               [(0, 0), (0, 0)]
[399]    := (-1, 0)              [-oo, (-1, 0)]
j397 + j398
[400]    := (0, 0) base          [-oo, oo]
[401]    := (0, 0)               [(0, 0), (0, 0)]
[402]    := (0, 0) base          [(0, 0), (0, 0)]
j400 + j401
[403]    := (0, 0) base          [-oo, oo]
[404]    := (0, 0)               [(0, 0), (0, 0)]
[405]    := (0, 0) base          [(0, 0), (0, 0)]
j403 + j404
[406]    := (0, 0) base          [-oo, oo]
[407]    := (0, 0)               [(0, 0), (0, 0)]
[408]    := (0, 0) base          [(0, 0), (0, 0)]
j406 + j407
[409]    := (6, 0)               [(1, 0), oo]
[410]    := (12, 0)              [(1, 0), oo]
[411]    := (0, 0)               [(0, 0), (0, 0)]
[412]    := (0, 0)               [(0, 0), (0, 0)]
[413]    := (12, 0) base         [(0, 0), oo]
j410 + j412
[414]    := (0, 0) base          [(0, 0), oo]
[415]    := (0, 0) base          [(0, 0), oo]
- j14 - j414
[416]    := (0, 0)               [(0, 0), oo]
[417]    := (0, 0)               [(0, 0), oo]
j14 + j414
[418]    := (10, 0) base         [(0, 0), oo]
- 536870905j416 - j37 - 16j38 - 2j12 - j36 - 15j14 - 12j39
[419]    := (0, 0) base          [(0, 0), oo]
[420]    := (0, 0) base          [(0, 0), oo]
- j43 - j419
[421]    := (-1, 0)              [-oo, (-1, 0)]
[422]    := (0, 0)               [(0, 0), oo]
j43 + j419
[423]    := (536870905, 0) base  [(0, 0), oo]
- 16j61 - 2j41 - 15j43 - j59 - 536870905j421 - 12j62 - j60
[424]    := (0, 0) base          [(0, 0), oo]
[425]    := (0, 0) base          [(0, 0), oo]
- j424 - j14
[426]    := (0, 0)               [(0, 0), (0, 0)]
[427]    := (0, 0)               [(0, 0), oo]
j424 + j14
[428]    := (10, 0) base         [(0, 0), oo]
- j37 - 16j38 - 536870906j426 - 2j12 - j36 - 15j14 - 12j39
[429]    := (0, 0) base          [(0, 0), oo]
[430]    := (0, 0) base          [(0, 0), oo]
- j43 - j429
[431]    := (1, 0)               [(1, 0), oo]
[432]    := (0, 0)               [(0, 0), oo]
j43 + j429
[433]    := (-536870906, 0) base [-oo, (-1, 0)]
- 16j61 - 2j41 - 15j43 - j59 - j60 - 12j62 - 536870906j431
[434]    := (0, 0)               [(0, 0), (0, 0)]
[435]    := (0, 0)               [(0, 0), (0, 0)]
[436]    := (0, 0) base          [-oo, oo]
[437]    := (0, 0)               [(0, 0), (0, 0)]
[438]    := (0, 0) base          [-oo, oo]
[439]    := (0, 0)               [(0, 0), (0, 0)]
[440]    := (0, 0)               [(0, 0), (0, 0)]
[441]    := (0, 0)               [(0, 0), oo]
[442]    := (0, 0) base          [(0, 0), oo]
j434 + j435 + j436 + j437 + j438 + j439 - j440 - j441
[443]    := (0, 0)               [(0, 0), (0, 0)]
[444]    := (0, 0)               [(0, 0), (0, 0)]
[445]    := (0, 0) base          [(0, 0), (0, 0)]
[446]    := (0, 0)               [(0, 0), (0, 0)]
[447]    := (0, 0)               [(0, 0), oo]
[448]    := (0, 0) base          [(0, 0), oo]
j443 + j444 + j445 + j446 - j447
[449]    := (0, 0)               [(0, 0), oo]
[450]    := (0, 0) base          [(0, 0), oo]
j440 - j449 - j435 - j436
[451]    := (0, 0) base          [(0, 0), oo]
j440 - j449 - j435 - j436 - j437 - j438
[452]    := (0, 0) base          [(0, 0), oo]
- j444 - j445 + j447
[453]    := (0, 0) base          [-oo, oo]
[454]    := (0, 0)               [(0, 0), (0, 0)]
[455]    := (0, 0) base          [(0, 0), oo]
j453 + j454
[456]    := (0, 0)               [(0, 0), (0, 0)]
[457]    := (0, 0)               [(0, 0), (0, 0)]
[458]    := (12, 0) base         [(2, 0), oo]
1073741825j453 + 1073741825j454 + j456 + j457 + 4j434 + j435 + j436 + j437 + j438 + 4j439 + j440 + j410 + j412 - 2j444 - 2j445 + 2j447
[459]    := (0, 0) base          [(0, 0), (0, 0)]
[460]    := (0, 0) base          [-oo, oo]
[461]    := (0, 0) base          [-oo, oo]
j459 + j460
[462]    := (0, 0) base          [(0, 0), (0, 0)]
[463]    := (0, 0)               [(0, 0), (0, 0)]
[464]    := (0, 0) base          [-oo, oo]
j462 + j463
[465]    := (0, 0) base          [(0, 0), (0, 0)]
[466]    := (0, 0)               [(0, 0), (0, 0)]
[467]    := (0, 0) base          [-oo, oo]
j465 + j466
[468]    := (0, 0) base          [(0, 0), (0, 0)]
[469]    := (0, 0)               [(0, 0), (0, 0)]
[470]    := (0, 0) base          [-oo, oo]
j468 + j469
[471]    := (0, 0) base          [(0, 0), (0, 0)]
[472]    := (0, 0)               [(0, 0), (0, 0)]
[473]    := (0, 0) base          [-oo, oo]
j472 + j471
[474]    := (0, 0) base          [(0, 0), (0, 0)]
[475]    := (0, 0)               [(0, 0), (0, 0)]
[476]    := (0, 0) base          [-oo, oo]
j474 + j475
[477]    := (0, 0) base          [-oo, oo]
- j59
[478]    := (0, 0)               [(0, 0), (0, 0)]
j90 - j59
[479]    := (0, 0) base          [(0, 0), (0, 0)]
- j59 + j219
[480]    := (0, 0)               [(0, 0), (0, 0)]
j265 - j59
[481]    := (0, 0) base          [(0, 0), (0, 0)]
j284 + j263
[482]    := (0, 0) base          [(0, 0), (0, 0)]
- j59 + j389
[483]    := (0, 0) base          [-oo, (0, 0)]
j88 + j110
[484]    := (3, 0) base          [(1, 0), oo]
j192 + j199
[485]    := (-1, 0) base         [-oo, oo]
- j264
[486]    := (-1, 0) base         [-oo, oo]
- j264 + j285
[487]    := (0, 0)               [(0, 0), (0, 0)]
j194 + j219
[488]    := (0, 0) base          [(0, 0), (0, 0)]
j364 + j389
[489]    := (1, 0) base          [(1, 0), oo]
j264 + j265
[490]    := (0, 0) base          [-oo, oo]
- j194
[491]    := (0, 0) base          [-oo, oo]
j200 - j194
[492]    := (1, 0) base          [(1, 0), oo]
j89 + j90
[493]    := (0, 0) base          [-oo, oo]
- j364
[494]    := (0, 0) base          [-oo, oo]
j370 - j364
[495]    := (2, 0)               [(2, 0), (2, 0)]
[496]    := (0, 0) base          [-oo, oo]
2j41
[497]    := (0, 0) base          [-oo, oo]
16j61
[498]    := (0, 0) base          [-oo, oo]
12j62
[499]    := (-1, 0) base         [-oo, oo]
- j89
[500]    := (15, 0)              [(15, 0), (15, 0)]
[501]    := (0, 0) base          [-oo, oo]
15j43
[502]    := (0, 0) base          [-oo, oo]
- j90
[503]    := (-1, 0) base         [(-1, 0), (-1, 0)]
- j80 + 15j43 - j72 + 2j41 - j90 + j59 + j60 + 16j61 + 12j62 - j89
[504]    := (0, 0) base          [-oo, oo]
- j60
[505]    := (0, 0) base          [-oo, oo]
- 15j43
[506]    := (0, 0) base          [-oo, oo]
- 2j41
[507]    := (0, 0) base          [-oo, oo]
- 16j61
[508]    := (0, 0) base          [-oo, oo]
- 12j62
[509]    := (0, 0) base          [(0, 0), (0, 0)]
- 2j41 - 15j43 - j60 - j59 - 12j62 - 16j61
[510]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j98
[511]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j156
[512]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j206
[513]    := (0, 0) base          [(0, 0), (0, 0)]
- j272 + j2
[514]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j330
[515]    := (0, 0) base          [(0, 0), (0, 0)]
- j377 + j2
[516]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j434
[517]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j62
[518]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j122
[519]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j154
[520]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j204
[521]    := (0, 0)               [(0, 0), (0, 0)]
- j296 + j2
[522]    := (0, 0)               [(0, 0), (0, 0)]
- j328 + j2
[523]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j375
[524]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j436
[525]    := (0, 0) base          [(0, 0), (0, 0)]
- j50 + j23
[526]    := (0, 0)               [(0, 0), (0, 0)]
- j56 + j32
[527]    := (0, 0) base          [(0, 0), (0, 0)]
j121 - j127
[528]    := (0, 0)               [(0, 0), (0, 0)]
- j58 + j35
[529]    := (0, 0) base          [(0, 0), (0, 0)]
j29 - j54
[530]    := (0, 0)               [(0, 0), (0, 0)]
j26 - j52
[531]    := (0, 0) base          [-oo, oo]
2j68
[532]    := (-1, 0) base         [-oo, oo]
- j149
[533]    := (0, 0) base          [-oo, oo]
- j150
[534]    := (1, 0) base          [-oo, oo]
2j68 + j37 - j150 - j149
[535]    := (0, 0) base          [-oo, oo]
2j194
[536]    := (0, 0) base          [-oo, oo]
- j197
[537]    := (0, 0) base          [-oo, oo]
- j198
[538]    := (-2, 0) base         [-oo, oo]
- j199
[539]    := (0, 0) base          [-oo, oo]
- j200
[540]    := (-2, 0) base         [-oo, oo]
- j200 + j41 + 2j194 + j60 - j197 - j198 - j199
[541]    := (-2, 0) base         [-oo, oo]
- j200 + j60 - j199
[542]    := (0, 0) base          [(0, 0), (0, 0)]
- j301 + j295
[543]    := (2, 0) base          [-oo, oo]
2j89
[544]    := (2, 0) base          [(2, 0), (2, 0)]
- j80 - j72 + 2j41 + 2j89 + 15j43 + j60 + 16j61 + 12j62
[545]    := (0, 0) base          [(0, 0), (0, 0)]
j21 - j127
[546]    := (0, 0) base          [(0, 0), (0, 0)]
- j62 + j198
[547]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j62
[548]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j13
[549]    := (0, 0) base          [(0, 0), (0, 0)]
j0 - j264
[550]    := (0, 0) base          [(0, 0), (0, 0)]
- j265 + j2 + j59
[551]    := (0, 0) base          [(0, 0), (0, 0)]
j0 - j89
[552]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j90 + j59
[553]    := (0, 0)               [(0, 0), (0, 0)]
j128 - j49
[554]    := (0, 0)               [(0, 0), (0, 0)]
j137 - j55
[555]    := (0, 0)               [(0, 0), (0, 0)]
- j53 + j134
[556]    := (0, 0) base          [(0, 0), (0, 0)]
j89 + j93
[557]    := (0, 0)               [(0, 0), (0, 0)]
j125 - j47
[558]    := (0, 0) base          [(0, 0), (0, 0)]
- j265 + j90
[559]    := (0, 0)               [(0, 0), (0, 0)]
- j276 + j102
[560]    := (0, 0)               [(0, 0), (0, 0)]
- j285 + j111
[561]    := (0, 0)               [(0, 0), (0, 0)]
- j290 + j115
[562]    := (0, 0)               [(0, 0), (0, 0)]
- j293 + j118
[563]    := (0, 0)               [(0, 0), (0, 0)]
- j299 + j125
[564]    := (0, 0)               [(0, 0), (0, 0)]
j128 - j302
[565]    := (0, 0)               [(0, 0), (0, 0)]
- j305 + j131
[566]    := (0, 0)               [(0, 0), (0, 0)]
- j308 + j134
[567]    := (0, 0)               [(0, 0), (0, 0)]
j137 - j311
[568]    := (0, 0)               [(0, 0), (0, 0)]
- j314 + j140
[569]    := (0, 0) base          [(0, 0), (0, 0)]
j264 + j265 - j89 - j90
[570]    := (0, 0)               [(0, 0), (0, 0)]
- j57 + j314
[571]    := (0, 0) base          [(0, 0), (0, 0)]
j311 - j55
[572]    := (0, 0) base          [(0, 0), (0, 0)]
j308 - j53
[573]    := (0, 0)               [(0, 0), (0, 0)]
j305 - j51
[574]    := (0, 0) base          [(0, 0), (0, 0)]
- j49 + j302
[575]    := (0, 0) base          [(0, 0), (0, 0)]
j299 - j47
[576]    := (0, 0) base          [(0, 0), (0, 0)]
j296 - j62
[577]    := (0, 0)               [(0, 0), (0, 0)]
- j65 + j293
[578]    := (0, 0)               [(0, 0), (0, 0)]
j290 - j61
[579]    := (0, 0)               [(0, 0), (0, 0)]
- j60 + j285
[580]    := (0, 0)               [(0, 0), (0, 0)]
j276 - j45
[581]    := (0, 0) base          [(0, 0), (0, 0)]
j265 - j59
[582]    := (0, 0) base          [(0, 0), (0, 0)]
- j57 + j140
[583]    := (0, 0) base          [(0, 0), (0, 0)]
j131 - j51
[584]    := (0, 0) base          [(0, 0), (0, 0)]
- j65 + j118
[585]    := (0, 0) base          [(0, 0), (0, 0)]
j115 - j61
[586]    := (0, 0) base          [(0, 0), (0, 0)]
- j60 + j111
[587]    := (0, 0) base          [(0, 0), (0, 0)]
- j45 + j102
[588]    := (0, 0) base          [(0, 0), (0, 0)]
j90 - j59
[589]    := (0, 0) base          [(0, 0), (0, 0)]
j90 - j59
[590]    := (0, 0) base          [(0, 0), (0, 0)]
- j57 + j140
[591]    := (0, 0) base          [(0, 0), (0, 0)]
j137 - j55
[592]    := (0, 0) base          [(0, 0), (0, 0)]
- j53 + j134
[593]    := (0, 0) base          [(0, 0), (0, 0)]
- j51 + j131
[594]    := (0, 0) base          [(0, 0), (0, 0)]
j128 - j49
[595]    := (0, 0) base          [(0, 0), (0, 0)]
j125 - j47
[596]    := (0, 0) base          [(0, 0), (0, 0)]
j122 - j62
[597]    := (0, 0) base          [(0, 0), (0, 0)]
- j65 + j118
[598]    := (0, 0) base          [(0, 0), (0, 0)]
j115 - j61
[599]    := (0, 0) base          [(0, 0), (0, 0)]
- j60 + j111
[600]    := (0, 0) base          [(0, 0), (0, 0)]
- j45 + j102
[601]    := (0, 0) base          [(0, 0), (0, 0)]
j90 - j59
[602]    := (0, 0) base          [(0, 0), (0, 0)]
j0 - j362
[603]    := (0, 0)               [(0, 0), (0, 0)]
- j33 + j406
[604]    := (0, 0)               [(0, 0), (0, 0)]
j403 - j30
[605]    := (0, 0)               [(0, 0), (0, 0)]
j400 - j27
[606]    := (0, 0)               [(0, 0), (0, 0)]
- j24 + j397
[607]    := (0, 0)               [(0, 0), (0, 0)]
j394 - j21
[608]    := (0, 0)               [(0, 0), (0, 0)]
- j18 + j391
[609]    := (0, 0)               [(0, 0), (0, 0)]
- j36 + j388
[610]    := (0, 0)               [(0, 0), (0, 0)]
j384 - j38
[611]    := (0, 0)               [(0, 0), (0, 0)]
- j64 + j378
[612]    := (0, 0)               [(0, 0), (0, 0)]
j376 - j14
[613]    := (0, 0)               [(0, 0), (0, 0)]
j374 - j39
[614]    := (0, 0)               [(0, 0), (0, 0)]
j369 - j37
[615]    := (0, 0)               [(0, 0), (0, 0)]
- j16 + j363
[616]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j364 - j389
[617]    := (0, 0) base          [(0, 0), (0, 0)]
- j272 + j255 + j2 + j259 + j254 - j271
[618]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j275 - j276 + j247
[619]    := (0, 0) base          [(0, 0), (0, 0)]
j256 - j281 + j2 + j257 - j280
[620]    := (0, 0)               [(0, 0), (0, 0)]
j248 - j257 + j2 - j284 - j285
[621]    := (0, 0) base          [(0, 0), (0, 0)]
- j289 + j2 - j290 + j258 + j262
[622]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j292 - j293 - j254
[623]    := (0, 0) base          [(0, 0), (0, 0)]
- j296 - j255 + j2 - j262 - j295
[624]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j298 - j299
[625]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j301 - j302
[626]    := (0, 0)               [(0, 0), (0, 0)]
- j304 - j305 + j2
[627]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j307 - j308
[628]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j310 - j311
[629]    := (0, 0)               [(0, 0), (0, 0)]
- j313 + j2 - j314
[630]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j260
[631]    := (0, 0) base          [(0, 0), (0, 0)]
- j249 + j2
[632]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j250
[633]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j261 + j262
[634]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j251 + j262
[635]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j252
[636]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j253
[637]    := (0, 0) base          [(0, 0), (0, 0)]
- j97 + j2 - j98 + j83 + j78 + j79
[638]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j101 - j102 + j71
[639]    := (0, 0) base          [(0, 0), (0, 0)]
j80 + j81 + j2 - j106 - j107
[640]    := (0, 0) base          [(0, 0), (0, 0)]
j72 - j81 + j2 - j110 - j111
[641]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j82 - j115 - j114 - j86
[642]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j117 - j118 - j78
[643]    := (0, 0) base          [(0, 0), (0, 0)]
- j121 + j2 - j122 + j86 - j79
[644]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j124 - j125
[645]    := (0, 0)               [(0, 0), (0, 0)]
- j128 + j2 - j127
[646]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j130 - j131
[647]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j133 - j134
[648]    := (0, 0)               [(0, 0), (0, 0)]
- j136 - j137 + j2
[649]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j139 - j140
[650]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j84
[651]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j87
[652]    := (0, 0) base          [(0, 0), (0, 0)]
- j73 + j2
[653]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j74
[654]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j85 - j86 + j87
[655]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j75 - j86 + j87
[656]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j76
[657]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j77
[658]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j459 - j460
[659]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j462 - j463
[660]    := (0, 0)               [(0, 0), (0, 0)]
- j465 + j2 - j466
[661]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j468 - j469
[662]    := (0, 0)               [(0, 0), (0, 0)]
- j472 + j2 - j471
[663]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j474 - j475
[664]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j87
[665]    := (0, 0) base          [(0, 0), (0, 0)]
- j137 + j2
[666]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j140
[667]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j131
[668]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j351
[669]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j178
[670]    := (0, 0) base          [(0, 0), (0, 0)]
- j56 + j2
[671]    := (0, 0) base          [(0, 0), (0, 0)]
- j184 + j2
[672]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j234
[673]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j357
[674]    := (0, 0) base          [(0, 0), (0, 0)]
- j472 + j2
[675]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j187
[676]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j237
[677]    := (0, 0) base          [(0, 0), (0, 0)]
- j360 + j2
[678]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j475
[679]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j228
[680]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j466
[681]    := (0, 0) base          [(0, 0), (0, 0)]
j412 - j101
[682]    := (0, 0) base          [(0, 0), (0, 0)]
- j121 + j435
[683]    := (0, 0) base          [(0, 0), (0, 0)]
j437 - j117
[684]    := (0, 0) base          [(0, 0), (0, 0)]
- j97 + j439
[685]    := (0, 0) base          [(0, 0), (0, 0)]
j444 - j110
[686]    := (0, 0) base          [(0, 0), (0, 0)]
- j114 + j454
[687]    := (0, 0) base          [(0, 0), (0, 0)]
j457 - j91
[688]    := (0, 0)               [(0, 0), (0, 0)]
j459 - j124
[689]    := (0, 0) base          [(0, 0), (0, 0)]
j462 - j127
[690]    := (0, 0) base          [(0, 0), (0, 0)]
j465 - j130
[691]    := (0, 0) base          [(0, 0), (0, 0)]
- j468 + j133
[692]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j471
[693]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j474
[694]    := (0, 0) base          [(0, 0), (0, 0)]
- j465 + j2
[695]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j462
[696]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j459
[697]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j435
[698]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j437
[699]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j454
[700]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j444
[701]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j412
[702]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j439
[703]    := (0, 0) base          [(0, 0), (0, 0)]
- j457 + j2
[704]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j134
[705]    := (0, 0) base          [(0, 0), (0, 0)]
- j128 + j2
[706]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j125
[707]    := (0, 0) base          [(0, 0), (0, 0)]
j102 - j71
[708]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j181
[709]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j231
[710]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j354
[711]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j469
[712]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j175
[713]    := (0, 0) base          [(0, 0), (0, 0)]
- j225 + j2
[714]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j348
[715]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j463
[716]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j172
[717]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j222
[718]    := (0, 0)               [(0, 0), (0, 0)]
- j345 + j2
[719]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j460
[720]    := (-2, 0) base         [-oo, oo]
- j200 + j41 + j60 - j197 - j198 - j199
[721]    := (0, 0) base          [-oo, oo]
- j248 - j256 + j284 + j263
[722]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j35
[723]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j58 - j35
[724]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j20
[725]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j18
[726]    := (0, 0)               [(0, 0), (0, 0)]
- j48 + j2
[727]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j171
[728]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j221
[729]    := (0, 0) base          [(0, 0), (0, 0)]
- j344 + j2
[730]    := (0, 0) base          [(0, 0), (0, 0)]
- j392 + j2 - j391
[731]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j171 - j172
[732]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j221 - j222
[733]    := (0, 0) base          [(0, 0), (0, 0)]
- j344 - j345 + j2
[734]    := (0, 0) base          [(0, 0), (0, 0)]
j248 + j256 + j2 - j284 - j263
[735]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j111
[736]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j150
[737]    := (0, 0) base          [(0, 0), (0, 0)]
- j200 + j2
[738]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j323
[739]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j445
[740]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j150
[741]    := (0, 0) base          [(0, 0), (0, 0)]
j200 + j2
[742]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j284 - j263
[743]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j266
[744]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j271
[745]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j275
[746]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j284
[747]    := (0, 0) base          [(0, 0), (0, 0)]
- j289 + j2
[748]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j292
[749]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j295
[750]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j301 - j295
[751]    := (0, 0) base          [(0, 0), (0, 0)]
j102 - j247
[752]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j115
[753]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j61
[754]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j165
[755]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j215
[756]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j338
[757]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j453
[758]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j453 - j454
[759]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j19
[760]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j69
[761]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j158
[762]    := (0, 0) base          [(0, 0), (0, 0)]
- j169 + j2
[763]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j194 - j219
[764]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j195
[765]    := (0, 0) base          [(0, 0), (0, 0)]
- j208 + j2
[766]    := (0, 0) base          [(0, 0), (0, 0)]
j219 - j389
[767]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j26
[768]    := (0, 0) base          [(0, 0), (0, 0)]
- j25 + j2
[769]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j26 + j52
[770]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j90
[771]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j59 - j219
[772]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j59
[773]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j342
[774]    := (0, 0) base          [(0, 0), (0, 0)]
- j456 + j2
[775]    := (0, 0) base          [(0, 0), (0, 0)]
2j41 + j2 + 15j43 + j60 + j59 + 12j62 + 16j61
[776]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j21
[777]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j23
[778]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j174
[779]    := (0, 0) base          [(0, 0), (0, 0)]
- j224 + j2
[780]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j347
[781]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j50 - j23
[782]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j174 - j175
[783]    := (0, 0) base          [(0, 0), (0, 0)]
- j224 - j225 + j2
[784]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j347 - j348
[785]    := (0, 0) base          [(0, 0), (0, 0)]
j80 + j72 - 2j41 - 2j89 - 15j43 - j60 - 16j61 - 12j62 + j495
[786]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j27
[787]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j29
[788]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j180
[789]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j230
[790]    := (0, 0) base          [(0, 0), (0, 0)]
- j353 + j2
[791]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j29 + j54
[792]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j180 - j181
[793]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j230 - j231
[794]    := (0, 0) base          [(0, 0), (0, 0)]
- j353 + j2 - j354
[795]    := (0, 0) base          [(0, 0), (0, 0)]
- j32 + j2
[796]    := (0, 0) base          [(0, 0), (0, 0)]
j56 - j32 + j2
[797]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j34
[798]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j30
[799]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j183
[800]    := (0, 0)               [(0, 0), (0, 0)]
- j233 + j2
[801]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j356
[802]    := (0, 0) base          [(0, 0), (0, 0)]
- j184 + j2 - j183
[803]    := (0, 0) base          [(0, 0), (0, 0)]
- j233 + j2 - j234
[804]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j356 - j357
[805]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j15
[806]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j39
[807]    := (0, 0)               [(0, 0), (0, 0)]
- j153 + j2
[808]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j39
[809]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j203
[810]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j327
[811]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j38
[812]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j38
[813]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j164
[814]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j214
[815]    := (0, 0)               [(0, 0), (0, 0)]
- j337 + j2
[816]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j38 + j39
[817]    := (0, 0)               [(0, 0), (0, 0)]
- j17 + j2
[818]    := (0, 0) base          [(0, 0), (0, 0)]
- j33 + j2
[819]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j406 - j407
[820]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j186
[821]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j236
[822]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j359
[823]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j186 - j187
[824]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j236 - j237
[825]    := (0, 0) base          [(0, 0), (0, 0)]
- j360 + j2 - j359
[826]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j14
[827]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j155
[828]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j205
[829]    := (0, 0) base          [(0, 0), (0, 0)]
- j329 + j2
[830]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j118
[831]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j438
[832]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j326
[833]    := (0, 0)               [(0, 0), (0, 0)]
- j64 + j2
[834]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j157
[835]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j207
[836]    := (0, 0)               [(0, 0), (0, 0)]
j2 - j331
[837]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j378 + j373
[838]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j157 + j158
[839]    := (0, 0) base          [(0, 0), (0, 0)]
j208 + j2 + j207
[840]    := (0, 0) base          [(0, 0), (0, 0)]
j2 + j331 + j326
[841]    := (0, 0) base          [(0, 0), (0, 0)]
j2 - j31
[(j13 = 0 = (j7 = 2)*(j12 = 0))
[13]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j7 = 2)*(j12 = 0)
[7]    := (2, 0)               [(2, 0), oo]
root=j7
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12

same rvars, and m.rsign = 0 of course
[(j15 = 0 = (j9 = 15)*(j14 = 0))
[15]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j9 = 15)*(j14 = 0)
[9]    := (15, 0)              [(15, 0), oo]
root=j9
[14]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rvars:(j9 = 15)*(j98 = 0)
[9]    := (15, 0)              [(15, 0), oo]
root=j9
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j17 = 0 = (j5 = 0)*(j16 = 1))
[17]    := (0, 0) base          [-oo, (0, 0)]
root=j98
]
vars:(j5 = 0)*(j16 = 1)
[5]    := (0, 0)               [(0, 0), oo]
root=j5
[16]    := (1, 0) base          [(1, 0), (2, 0)]
root=j363

rvars:(j5 = 0)*(j363 = 1)
[5]    := (0, 0)               [(0, 0), oo]
root=j5
(j363 = 1 = (j16 = 1)*(j362 = 1))
[363]    := (1, 0)               [(1, 0), oo]
root=j363

rsign:0
[(j20 = 0 = (j18 = 0)*(j19 = 0))
[20]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j18 = 0)*(j19 = 0)
[18]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[19]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j23 = 0 = (j21 = 0)*(j22 = -1))
[23]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j21 = 0)*(j22 = -1)
[21]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[22]    := (-1, 0)              [-oo, (-1, 0)]
root=j22

rvars:(j22 = -1)*(j98 = 0)
[22]    := (-1, 0)              [-oo, (-1, 0)]
root=j22
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j26 = 0 = (j24 = -1)*(j25 = 0))
[26]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j24 = -1)*(j25 = 0)
[24]    := (-1, 0) base         [(-2, 0), (2, 0)]
root=j397
[25]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rvars:(j98 = 0)*(j397 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j397 = -1 = (j24 = -1)*(j362 = 1))
[397]    := (-1, 0) base         [-oo, oo]
root=j397

rsign:0
[(j29 = 0 = (j27 = 0)*(j28 = -1))
[29]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j27 = 0)*(j28 = -1)
[27]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[28]    := (-1, 0)              [-oo, (-1, 0)]
root=j28

rvars:(j28 = -1)*(j98 = 0)
[28]    := (-1, 0)              [-oo, (-1, 0)]
root=j28
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j32 = 0 = (j30 = 0)*(j31 = 0))
[32]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j30 = 0)*(j31 = 0)
[30]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[31]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j35 = 0 = (j33 = 0)*(j34 = 0))
[35]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j33 = 0)*(j34 = 0)
[33]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[34]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j42 = 0 = (j7 = 2)*(j41 = 0))
[42]    := (0, 0)               [(0, 0), (0, 0)]
root=j42
]
vars:(j7 = 2)*(j41 = 0)
[7]    := (2, 0)               [(2, 0), oo]
root=j7
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41

same rvars, and m.rsign = 0 of course
[(j44 = 0 = (j9 = 15)*(j43 = 0))
[44]    := (0, 0)               [(0, 0), (0, 0)]
root=j44
]
vars:(j9 = 15)*(j43 = 0)
[9]    := (15, 0)              [(15, 0), oo]
root=j9
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43

same rvars, and m.rsign = 0 of course
[(j46 = 0 = (j5 = 0)*(j45 = 2))
[46]    := (0, 0) base          [(0, 0), oo]
root=j46
]
vars:(j5 = 0)*(j45 = 2)
[5]    := (0, 0)               [(0, 0), oo]
root=j5
[45]    := (2, 0)               [(1, 0), (2, 0)]
root=j102

rvars:(j5 = 0)*(j102 = 2)
[5]    := (0, 0)               [(0, 0), oo]
root=j5
(j102 = 2 = (j45 = 2)*(j89 = 1))
[102]    := (2, 0) base          [(1, 0), oo]
root=j102

rsign:0
[(j48 = 0 = (j19 = 0)*(j47 = 0))
[48]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j19 = 0)*(j47 = 0)
[19]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[47]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j50 = 0 = (j22 = -1)*(j49 = 0))
[50]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j22 = -1)*(j49 = 0)
[22]    := (-1, 0)              [-oo, (-1, 0)]
root=j22
[49]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98

rvars:(j22 = -1)*(j98 = 0)
[22]    := (-1, 0)              [-oo, (-1, 0)]
root=j22
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j52 = 0 = (j25 = 0)*(j51 = 0))
[52]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j25 = 0)*(j51 = 0)
[25]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[51]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j54 = 0 = (j28 = -1)*(j53 = 0))
[54]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j28 = -1)*(j53 = 0)
[28]    := (-1, 0)              [-oo, (-1, 0)]
root=j28
[53]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98

rvars:(j28 = -1)*(j98 = 0)
[28]    := (-1, 0)              [-oo, (-1, 0)]
root=j28
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j56 = 0 = (j31 = 0)*(j55 = 0))
[56]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j31 = 0)*(j55 = 0)
[31]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[55]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j58 = 0 = (j34 = 0)*(j57 = 0))
[58]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j34 = 0)*(j57 = 0)
[34]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[57]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j67 = 3 = (j16 = 1)*(j66 = 3))
[67]    := (3, 0)               [(1, 0), oo]
root=j67
]
vars:(j16 = 1)*(j66 = 3)
[16]    := (1, 0) base          [(1, 0), (2, 0)]
root=j363
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j363 = 1)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j363 = 1 = (j16 = 1)*(j362 = 1))
[363]    := (1, 0)               [(1, 0), oo]
root=j363

rsign:0
[(j69 = 0 = (j45 = 2)*(j68 = 0))
[69]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j45 = 2)*(j68 = 0)
[45]    := (2, 0)               [(1, 0), (2, 0)]
root=j102
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j102 = 2)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j102 = 2 = (j45 = 2)*(j89 = 1))
[102]    := (2, 0) base          [(1, 0), oo]
root=j102

rsign:0
[(j90 = 0 = (j59 = 0)*(j89 = 1))
[90]    := (0, 0) base          [(0, 0), (1, 0)]
root=j98
]
vars:(j59 = 0)*(j89 = 1)
[59]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j91 = 0 = (j36 = -12)*(j88 = 0))
[91]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j36 = -12)*(j88 = 0)
[36]    := (-12, 0) base        [-oo, (-1, 0)]
root=j388
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j388 = -12)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j388 = -12 = (j36 = -12)*(j362 = 1))
[388]    := (-12, 0) base        [-oo, (0, 0)]
root=j388

rsign:0
[(j97 = 0 = (j14 = 0)*(j88 = 0))
[97]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j14 = 0)*(j88 = 0)
[14]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j98 = 0)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j43 = 0)*(j89 = 1)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j43 = 0)*(j264 = 1)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j101 = 0 = (j16 = 1)*(j88 = 0))
[101]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j16 = 1)*(j88 = 0)
[16]    := (1, 0) base          [(1, 0), (2, 0)]
root=j363
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j363 = 1)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j363 = 1 = (j16 = 1)*(j362 = 1))
[363]    := (1, 0)               [(1, 0), oo]
root=j363

rsign:0
[(j102 = 2 = (j45 = 2)*(j89 = 1))
[102]    := (2, 0) base          [(1, 0), oo]
root=j102
]
vars:(j45 = 2)*(j89 = 1)
[45]    := (2, 0)               [(1, 0), (2, 0)]
root=j102
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j102 = 2)*(j264 = 1)
(j102 = 2 = (j45 = 2)*(j89 = 1))
[102]    := (2, 0) base          [(1, 0), oo]
root=j102
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j106 = 0 = (j12 = 0)*(j88 = 0))
[106]    := (0, 0)               [(0, 0), (0, 0)]
root=j106
]
vars:(j12 = 0)*(j88 = 0)
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

same rvars, and m.rsign = 0 of course
[(j107 = 0 = (j41 = 0)*(j89 = 1))
[107]    := (0, 0)               [(0, 0), (0, 0)]
root=j107
]
vars:(j41 = 0)*(j89 = 1)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j41 = 0)*(j264 = 1)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j110 = 0 = (j37 = 2)*(j88 = 0))
[110]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j37 = 2)*(j88 = 0)
[37]    := (2, 0)               [(1, 0), (2, 0)]
root=j37
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

same rvars, and m.rsign = 0 of course
[(j111 = 0 = (j60 = 0)*(j89 = 1))
[111]    := (0, 0) base          [-oo, (0, 0)]
root=j98
]
vars:(j60 = 0)*(j89 = 1)
[60]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j114 = 0 = (j38 = 0)*(j88 = 0))
[114]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j38 = 0)*(j88 = 0)
[38]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j98 = 0)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j115 = 0 = (j61 = 0)*(j89 = 1))
[115]    := (0, 0) base          [-oo, (0, 0)]
root=j98
]
vars:(j61 = 0)*(j89 = 1)
[61]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j117 = 0 = (j64 = 0)*(j88 = 0))
[117]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j64 = 0)*(j88 = 0)
[64]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j98 = 0)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j118 = 0 = (j65 = 0)*(j89 = 1))
[118]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j65 = 0)*(j89 = 1)
[65]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j121 = 0 = (j39 = 0)*(j88 = 0))
[121]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j39 = 0)*(j88 = 0)
[39]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j98 = 0)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j122 = 0 = (j62 = 0)*(j89 = 1))
[122]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j62 = 0)*(j89 = 1)
[62]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j124 = 0 = (j18 = 0)*(j88 = 0))
[124]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j18 = 0)*(j88 = 0)
[18]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j98 = 0)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j125 = 0 = (j47 = 0)*(j89 = 1))
[125]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j47 = 0)*(j89 = 1)
[47]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j127 = 0 = (j21 = 0)*(j88 = 0))
[127]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j21 = 0)*(j88 = 0)
[21]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j98 = 0)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j128 = 0 = (j49 = 0)*(j89 = 1))
[128]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j49 = 0)*(j89 = 1)
[49]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j130 = 0 = (j24 = -1)*(j88 = 0))
[130]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j24 = -1)*(j88 = 0)
[24]    := (-1, 0) base         [(-2, 0), (2, 0)]
root=j397
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j397 = -1)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j397 = -1 = (j24 = -1)*(j362 = 1))
[397]    := (-1, 0) base         [-oo, oo]
root=j397

rsign:0
[(j131 = 0 = (j51 = 0)*(j89 = 1))
[131]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j51 = 0)*(j89 = 1)
[51]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j133 = 0 = (j27 = 0)*(j88 = 0))
[133]    := (0, 0)               [(0, 0), (0, 0)]
root=j133
]
vars:(j27 = 0)*(j88 = 0)
[27]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j98 = 0)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j134 = 0 = (j53 = 0)*(j89 = 1))
[134]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j53 = 0)*(j89 = 1)
[53]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j136 = 0 = (j30 = 0)*(j88 = 0))
[136]    := (0, 0) base          [(0, 0), (0, 0)]
root=j136
]
vars:(j30 = 0)*(j88 = 0)
[30]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j98 = 0)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j137 = 0 = (j55 = 0)*(j89 = 1))
[137]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j55 = 0)*(j89 = 1)
[55]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j139 = 0 = (j33 = 0)*(j88 = 0))
[139]    := (0, 0) base          [(0, 0), (0, 0)]
root=j139
]
vars:(j33 = 0)*(j88 = 0)
[33]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88

rvars:(j88 = 0)*(j98 = 0)
[88]    := (0, 0)               [(0, 0), (0, 0)]
root=j88
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j140 = 0 = (j57 = 0)*(j89 = 1))
[140]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j57 = 0)*(j89 = 1)
[57]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[89]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j147 = 0 = (j12 = 0)*(j66 = 3))
[147]    := (0, 0)               [(0, 0), (0, 0)]
root=j147
]
vars:(j12 = 0)*(j66 = 3)
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12
[66]    := (3, 0)               [(1, 0), oo]
root=j66

same rvars, and m.rsign = 0 of course
[(j148 = 0 = (j41 = 0)*(j68 = 0))
[148]    := (0, 0)               [(0, 0), (0, 0)]
root=j148
]
vars:(j41 = 0)*(j68 = 0)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

same rvars, and m.rsign = 0 of course
[(j149 = 1 = (j37 = 2)*(j66 = 3))
[149]    := (1, 0)               [(1, 0), oo]
root=j149
]
vars:(j37 = 2)*(j66 = 3)
[37]    := (2, 0)               [(1, 0), (2, 0)]
root=j37
[66]    := (3, 0)               [(1, 0), oo]
root=j66

same rvars, and m.rsign = 0 of course
[(j150 = 0 = (j60 = 0)*(j68 = 0))
[150]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j60 = 0)*(j68 = 0)
[60]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j153 = 0 = (j39 = 0)*(j66 = 3))
[153]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j39 = 0)*(j66 = 3)
[39]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j98 = 0)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j154 = 0 = (j62 = 0)*(j68 = 0))
[154]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j62 = 0)*(j68 = 0)
[62]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j155 = 0 = (j14 = 0)*(j66 = 3))
[155]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j14 = 0)*(j66 = 3)
[14]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j98 = 0)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j156 = 0 = (j43 = 0)*(j68 = 0))
[156]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j43 = 0)*(j68 = 0)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

same rvars, and m.rsign = 0 of course
[(j157 = 0 = (j64 = 0)*(j66 = 3))
[157]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j64 = 0)*(j66 = 3)
[64]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j98 = 0)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j158 = 0 = (j65 = 0)*(j68 = 0))
[158]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j65 = 0)*(j68 = 0)
[65]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j164 = 0 = (j38 = 0)*(j66 = 3))
[164]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j38 = 0)*(j66 = 3)
[38]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j98 = 0)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j165 = 0 = (j61 = 0)*(j68 = 0))
[165]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j61 = 0)*(j68 = 0)
[61]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j168 = -36 = (j36 = -12)*(j66 = 3))
[168]    := (-36, 0)             [-oo, (-1, 0)]
root=j168
]
vars:(j36 = -12)*(j66 = 3)
[36]    := (-12, 0) base        [-oo, (-1, 0)]
root=j388
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j388 = -12)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j388 = -12 = (j36 = -12)*(j362 = 1))
[388]    := (-12, 0) base        [-oo, (0, 0)]
root=j388

rsign:0
[(j169 = 0 = (j59 = 0)*(j68 = 0))
[169]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j59 = 0)*(j68 = 0)
[59]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j171 = 0 = (j18 = 0)*(j66 = 3))
[171]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98
]
vars:(j18 = 0)*(j66 = 3)
[18]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j98 = 0)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j172 = 0 = (j47 = 0)*(j68 = 0))
[172]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j47 = 0)*(j68 = 0)
[47]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j174 = 0 = (j21 = 0)*(j66 = 3))
[174]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j21 = 0)*(j66 = 3)
[21]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j98 = 0)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j175 = 0 = (j49 = 0)*(j68 = 0))
[175]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j49 = 0)*(j68 = 0)
[49]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j177 = -3 = (j24 = -1)*(j66 = 3))
[177]    := (-3, 0)              [-oo, oo]
root=j177
]
vars:(j24 = -1)*(j66 = 3)
[24]    := (-1, 0) base         [(-2, 0), (2, 0)]
root=j397
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j397 = -1)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j397 = -1 = (j24 = -1)*(j362 = 1))
[397]    := (-1, 0) base         [-oo, oo]
root=j397

rsign:0
[(j178 = 0 = (j51 = 0)*(j68 = 0))
[178]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j51 = 0)*(j68 = 0)
[51]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j180 = 0 = (j27 = 0)*(j66 = 3))
[180]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j27 = 0)*(j66 = 3)
[27]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j98 = 0)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j181 = 0 = (j53 = 0)*(j68 = 0))
[181]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j53 = 0)*(j68 = 0)
[53]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j183 = 0 = (j30 = 0)*(j66 = 3))
[183]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98
]
vars:(j30 = 0)*(j66 = 3)
[30]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j98 = 0)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j184 = 0 = (j55 = 0)*(j68 = 0))
[184]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j55 = 0)*(j68 = 0)
[55]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j186 = 0 = (j33 = 0)*(j66 = 3))
[186]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98
]
vars:(j33 = 0)*(j66 = 3)
[33]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[66]    := (3, 0)               [(1, 0), oo]
root=j66

rvars:(j66 = 3)*(j98 = 0)
[66]    := (3, 0)               [(1, 0), oo]
root=j66
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j187 = 0 = (j57 = 0)*(j68 = 0))
[187]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j57 = 0)*(j68 = 0)
[57]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68

rvars:(j68 = 0)*(j98 = 0)
[68]    := (0, 0)               [(0, 0), (0, 0)]
root=j68
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:0
[(j193 = 1 = (j16 = 1)*(j192 = 1))
[193]    := (1, 0)               [(1, 0), oo]
root=j193
]
vars:(j16 = 1)*(j192 = 1)
[16]    := (1, 0) base          [(1, 0), (2, 0)]
root=j363
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j192 = 1)*(j363 = 1)
[192]    := (1, 0)               [(1, 0), oo]
root=j192
(j363 = 1 = (j16 = 1)*(j362 = 1))
[363]    := (1, 0)               [(1, 0), oo]
root=j363

rsign:0
[(j195 = 0 = (j45 = 2)*(j194 = 0))
[195]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j45 = 2)*(j194 = 0)
[45]    := (2, 0)               [(1, 0), (2, 0)]
root=j102
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j102 = 2)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j102 = 2 = (j45 = 2)*(j89 = 1))
[102]    := (2, 0) base          [(1, 0), oo]
root=j102

rsign:1
[(j197 = 0 = (j12 = 0)*(j192 = 1))
[197]    := (0, 0)               [(0, 0), (0, 0)]
root=j197
]
vars:(j12 = 0)*(j192 = 1)
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12
[192]    := (1, 0)               [(1, 0), oo]
root=j192

same rvars, and m.rsign = 0 of course
[(j198 = 0 = (j41 = 0)*(j194 = 0))
[198]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j41 = 0)*(j194 = 0)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j41 = 0)*(j98 = 0)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j199 = 2 = (j37 = 2)*(j192 = 1))
[199]    := (2, 0)               [(1, 0), oo]
root=j199
]
vars:(j37 = 2)*(j192 = 1)
[37]    := (2, 0)               [(1, 0), (2, 0)]
root=j37
[192]    := (1, 0)               [(1, 0), oo]
root=j192

same rvars, and m.rsign = 0 of course
[(j200 = 0 = (j60 = 0)*(j194 = 0))
[200]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j60 = 0)*(j194 = 0)
[60]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j203 = 0 = (j39 = 0)*(j192 = 1))
[203]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j39 = 0)*(j192 = 1)
[39]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j98 = 0)*(j192 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rsign:0
[(j204 = 0 = (j62 = 0)*(j194 = 0))
[204]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j62 = 0)*(j194 = 0)
[62]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j205 = 0 = (j14 = 0)*(j192 = 1))
[205]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j14 = 0)*(j192 = 1)
[14]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j98 = 0)*(j192 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rsign:0
[(j206 = 0 = (j43 = 0)*(j194 = 0))
[206]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j43 = 0)*(j194 = 0)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j43 = 0)*(j98 = 0)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j207 = 0 = (j64 = 0)*(j192 = 1))
[207]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j64 = 0)*(j192 = 1)
[64]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j98 = 0)*(j192 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rsign:0
[(j208 = 0 = (j65 = 0)*(j194 = 0))
[208]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j65 = 0)*(j194 = 0)
[65]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j214 = 0 = (j38 = 0)*(j192 = 1))
[214]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j38 = 0)*(j192 = 1)
[38]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j98 = 0)*(j192 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rsign:0
[(j215 = 0 = (j61 = 0)*(j194 = 0))
[215]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j61 = 0)*(j194 = 0)
[61]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j218 = -1 = (j36 = -12)*(j192 = 1))
[218]    := (-1, 0)              [-oo, (-1, 0)]
root=j218
]
vars:(j36 = -12)*(j192 = 1)
[36]    := (-12, 0) base        [-oo, (-1, 0)]
root=j388
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j192 = 1)*(j388 = -12)
[192]    := (1, 0)               [(1, 0), oo]
root=j192
(j388 = -12 = (j36 = -12)*(j362 = 1))
[388]    := (-12, 0) base        [-oo, (0, 0)]
root=j388

rsign:0
[(j219 = 0 = (j59 = 0)*(j194 = 0))
[219]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j59 = 0)*(j194 = 0)
[59]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j221 = 0 = (j18 = 0)*(j192 = 1))
[221]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j18 = 0)*(j192 = 1)
[18]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j98 = 0)*(j192 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rsign:0
[(j222 = 0 = (j47 = 0)*(j194 = 0))
[222]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j47 = 0)*(j194 = 0)
[47]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j224 = 0 = (j21 = 0)*(j192 = 1))
[224]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j21 = 0)*(j192 = 1)
[21]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j98 = 0)*(j192 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rsign:0
[(j225 = 0 = (j49 = 0)*(j194 = 0))
[225]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j49 = 0)*(j194 = 0)
[49]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j227 = -1 = (j24 = -1)*(j192 = 1))
[227]    := (-1, 0) base         [-oo, oo]
root=j227
]
vars:(j24 = -1)*(j192 = 1)
[24]    := (-1, 0) base         [(-2, 0), (2, 0)]
root=j397
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j192 = 1)*(j397 = -1)
[192]    := (1, 0)               [(1, 0), oo]
root=j192
(j397 = -1 = (j24 = -1)*(j362 = 1))
[397]    := (-1, 0) base         [-oo, oo]
root=j397

rsign:0
[(j228 = 0 = (j51 = 0)*(j194 = 0))
[228]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j51 = 0)*(j194 = 0)
[51]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j230 = 0 = (j27 = 0)*(j192 = 1))
[230]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j27 = 0)*(j192 = 1)
[27]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j98 = 0)*(j192 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rsign:0
[(j231 = 0 = (j53 = 0)*(j194 = 0))
[231]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j53 = 0)*(j194 = 0)
[53]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j233 = 0 = (j30 = 0)*(j192 = 1))
[233]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j30 = 0)*(j192 = 1)
[30]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j98 = 0)*(j192 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rsign:0
[(j234 = 0 = (j55 = 0)*(j194 = 0))
[234]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j55 = 0)*(j194 = 0)
[55]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j236 = 0 = (j33 = 0)*(j192 = 1))
[236]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98
]
vars:(j33 = 0)*(j192 = 1)
[33]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rvars:(j98 = 0)*(j192 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[192]    := (1, 0)               [(1, 0), oo]
root=j192

rsign:0
[(j237 = 0 = (j57 = 0)*(j194 = 0))
[237]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j57 = 0)*(j194 = 0)
[57]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[194]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j243 = -1 = (j16 = 1)*(j242 = -1))
[243]    := (-1, 0)              [-oo, oo]
root=j243
]
vars:(j16 = 1)*(j242 = -1)
[16]    := (1, 0) base          [(1, 0), (2, 0)]
root=j363
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j242 = -1)*(j363 = 1)
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242
(j363 = 1 = (j16 = 1)*(j362 = 1))
[363]    := (1, 0)               [(1, 0), oo]
root=j363

rsign:0
[(j245 = 0 = (j45 = 2)*(j244 = 0))
[245]    := (0, 0)               [-oo, oo]
root=j245
]
vars:(j45 = 2)*(j244 = 0)
[45]    := (2, 0)               [(1, 0), (2, 0)]
root=j102
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j102 = 2)*(j244 = 0)
(j102 = 2 = (j45 = 2)*(j89 = 1))
[102]    := (2, 0) base          [(1, 0), oo]
root=j102
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j265 = 0 = (j59 = 0)*(j264 = 1))
[265]    := (0, 0) base          [(0, 0), oo]
root=j98
]
vars:(j59 = 0)*(j264 = 1)
[59]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j266 = 0 = (j36 = -12)*(j263 = 0))
[266]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j36 = -12)*(j263 = 0)
[36]    := (-12, 0) base        [-oo, (-1, 0)]
root=j388
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j388 = -12)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j388 = -12 = (j36 = -12)*(j362 = 1))
[388]    := (-12, 0) base        [-oo, (0, 0)]
root=j388

rsign:1
[(j271 = 0 = (j14 = 0)*(j263 = 0))
[271]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j14 = 0)*(j263 = 0)
[14]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j272 = 0 = (j43 = 0)*(j264 = 1))
[272]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j43 = 0)*(j264 = 1)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

same rvars, and m.rsign = 0 of course
[(j275 = 0 = (j16 = 1)*(j263 = 0))
[275]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j16 = 1)*(j263 = 0)
[16]    := (1, 0) base          [(1, 0), (2, 0)]
root=j363
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j363 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j363 = 1 = (j16 = 1)*(j362 = 1))
[363]    := (1, 0)               [(1, 0), oo]
root=j363

rsign:1
[(j276 = 2 = (j45 = 2)*(j264 = 1))
[276]    := (2, 0) base          [(1, 0), oo]
root=j102
]
vars:(j45 = 2)*(j264 = 1)
[45]    := (2, 0)               [(1, 0), (2, 0)]
root=j102
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j102 = 2)*(j264 = 1)
(j102 = 2 = (j45 = 2)*(j89 = 1))
[102]    := (2, 0) base          [(1, 0), oo]
root=j102
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j280 = 0 = (j12 = 0)*(j263 = 0))
[280]    := (0, 0)               [(0, 0), (0, 0)]
root=j280
]
vars:(j12 = 0)*(j263 = 0)
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j12 = 0)*(j98 = 0)
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j281 = 0 = (j41 = 0)*(j264 = 1))
[281]    := (0, 0)               [(0, 0), (0, 0)]
root=j281
]
vars:(j41 = 0)*(j264 = 1)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

same rvars, and m.rsign = 0 of course
[(j284 = 0 = (j37 = 2)*(j263 = 0))
[284]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j37 = 2)*(j263 = 0)
[37]    := (2, 0)               [(1, 0), (2, 0)]
root=j37
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j37 = 2)*(j98 = 0)
[37]    := (2, 0)               [(1, 0), (2, 0)]
root=j37
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j285 = 0 = (j60 = 0)*(j264 = 1))
[285]    := (0, 0) base          [(-1, 0), (0, 0)]
root=j98
]
vars:(j60 = 0)*(j264 = 1)
[60]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j289 = 0 = (j38 = 0)*(j263 = 0))
[289]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j38 = 0)*(j263 = 0)
[38]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j290 = 0 = (j61 = 0)*(j264 = 1))
[290]    := (0, 0) base          [-oo, (0, 0)]
root=j98
]
vars:(j61 = 0)*(j264 = 1)
[61]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j292 = 0 = (j64 = 0)*(j263 = 0))
[292]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j64 = 0)*(j263 = 0)
[64]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j293 = 0 = (j65 = 0)*(j264 = 1))
[293]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j65 = 0)*(j264 = 1)
[65]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j295 = 0 = (j39 = 0)*(j263 = 0))
[295]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j39 = 0)*(j263 = 0)
[39]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j296 = 0 = (j62 = 0)*(j264 = 1))
[296]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j62 = 0)*(j264 = 1)
[62]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j298 = 0 = (j18 = 0)*(j263 = 0))
[298]    := (0, 0) base          [(0, 0), (0, 0)]
root=j298
]
vars:(j18 = 0)*(j263 = 0)
[18]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j299 = 0 = (j47 = 0)*(j264 = 1))
[299]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j47 = 0)*(j264 = 1)
[47]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j301 = 0 = (j21 = 0)*(j263 = 0))
[301]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j21 = 0)*(j263 = 0)
[21]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j302 = 0 = (j49 = 0)*(j264 = 1))
[302]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j49 = 0)*(j264 = 1)
[49]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j304 = 0 = (j24 = -1)*(j263 = 0))
[304]    := (0, 0) base          [(0, 0), (0, 0)]
root=j304
]
vars:(j24 = -1)*(j263 = 0)
[24]    := (-1, 0) base         [(-2, 0), (2, 0)]
root=j397
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j397 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j397 = -1 = (j24 = -1)*(j362 = 1))
[397]    := (-1, 0) base         [-oo, oo]
root=j397

rsign:1
[(j305 = 0 = (j51 = 0)*(j264 = 1))
[305]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j51 = 0)*(j264 = 1)
[51]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j307 = 0 = (j27 = 0)*(j263 = 0))
[307]    := (0, 0) base          [(0, 0), (0, 0)]
root=j307
]
vars:(j27 = 0)*(j263 = 0)
[27]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j308 = 0 = (j53 = 0)*(j264 = 1))
[308]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j53 = 0)*(j264 = 1)
[53]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j310 = 0 = (j30 = 0)*(j263 = 0))
[310]    := (0, 0) base          [(0, 0), (0, 0)]
root=j310
]
vars:(j30 = 0)*(j263 = 0)
[30]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j311 = 0 = (j55 = 0)*(j264 = 1))
[311]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j55 = 0)*(j264 = 1)
[55]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j313 = 0 = (j33 = 0)*(j263 = 0))
[313]    := (0, 0) base          [(0, 0), (0, 0)]
root=j313
]
vars:(j33 = 0)*(j263 = 0)
[33]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[263]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j314 = 0 = (j57 = 0)*(j264 = 1))
[314]    := (0, 0) base          [(-1, 0), (1, 0)]
root=j98
]
vars:(j57 = 0)*(j264 = 1)
[57]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j320 = 0 = (j12 = 0)*(j242 = -1))
[320]    := (0, 0)               [(0, 0), (0, 0)]
root=j320
]
vars:(j12 = 0)*(j242 = -1)
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

same rvars, and m.rsign = 0 of course
[(j321 = 0 = (j41 = 0)*(j244 = 0))
[321]    := (0, 0)               [(0, 0), (0, 0)]
root=j321
]
vars:(j41 = 0)*(j244 = 0)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
[244]    := (0, 0)               [(0, 0), oo]
root=j244

same rvars, and m.rsign = 0 of course
[(j322 = -2 = (j37 = 2)*(j242 = -1))
[322]    := (-2, 0)              [-oo, (-1, 0)]
root=j322
]
vars:(j37 = 2)*(j242 = -1)
[37]    := (2, 0)               [(1, 0), (2, 0)]
root=j37
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

same rvars, and m.rsign = 0 of course
[(j323 = 0 = (j60 = 0)*(j244 = 0))
[323]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j60 = 0)*(j244 = 0)
[60]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j326 = 0 = (j65 = 0)*(j244 = 0))
[326]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j65 = 0)*(j244 = 0)
[65]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j327 = 0 = (j39 = 0)*(j242 = -1))
[327]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j39 = 0)*(j242 = -1)
[39]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j98 = 0)*(j242 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rsign:0
[(j328 = 0 = (j62 = 0)*(j244 = 0))
[328]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j62 = 0)*(j244 = 0)
[62]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j329 = 0 = (j14 = 0)*(j242 = -1))
[329]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j14 = 0)*(j242 = -1)
[14]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j98 = 0)*(j242 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rsign:0
[(j330 = 0 = (j43 = 0)*(j244 = 0))
[330]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j43 = 0)*(j244 = 0)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
[244]    := (0, 0)               [(0, 0), oo]
root=j244

same rvars, and m.rsign = 0 of course
[(j331 = 0 = (j64 = 0)*(j242 = -1))
[331]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j64 = 0)*(j242 = -1)
[64]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j98 = 0)*(j242 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rsign:0
[(j337 = 0 = (j38 = 0)*(j242 = -1))
[337]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j38 = 0)*(j242 = -1)
[38]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j98 = 0)*(j242 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rsign:0
[(j338 = 0 = (j61 = 0)*(j244 = 0))
[338]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j61 = 0)*(j244 = 0)
[61]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j341 = 12 = (j36 = -12)*(j242 = -1))
[341]    := (12, 0)              [(1, 0), oo]
root=j341
]
vars:(j36 = -12)*(j242 = -1)
[36]    := (-12, 0) base        [-oo, (-1, 0)]
root=j388
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j242 = -1)*(j388 = -12)
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242
(j388 = -12 = (j36 = -12)*(j362 = 1))
[388]    := (-12, 0) base        [-oo, (0, 0)]
root=j388

rsign:0
[(j342 = 0 = (j59 = 0)*(j244 = 0))
[342]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j59 = 0)*(j244 = 0)
[59]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j344 = 0 = (j18 = 0)*(j242 = -1))
[344]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98
]
vars:(j18 = 0)*(j242 = -1)
[18]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j98 = 0)*(j242 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rsign:0
[(j345 = 0 = (j47 = 0)*(j244 = 0))
[345]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j47 = 0)*(j244 = 0)
[47]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j347 = 0 = (j21 = 0)*(j242 = -1))
[347]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98
]
vars:(j21 = 0)*(j242 = -1)
[21]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j98 = 0)*(j242 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rsign:0
[(j348 = 0 = (j49 = 0)*(j244 = 0))
[348]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j49 = 0)*(j244 = 0)
[49]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j350 = 1 = (j24 = -1)*(j242 = -1))
[350]    := (1, 0) base          [-oo, oo]
root=j350
]
vars:(j24 = -1)*(j242 = -1)
[24]    := (-1, 0) base         [(-2, 0), (2, 0)]
root=j397
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j242 = -1)*(j397 = -1)
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242
(j397 = -1 = (j24 = -1)*(j362 = 1))
[397]    := (-1, 0) base         [-oo, oo]
root=j397

rsign:0
[(j351 = 0 = (j51 = 0)*(j244 = 0))
[351]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j51 = 0)*(j244 = 0)
[51]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j353 = 0 = (j27 = 0)*(j242 = -1))
[353]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j27 = 0)*(j242 = -1)
[27]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j98 = 0)*(j242 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rsign:0
[(j354 = 0 = (j53 = 0)*(j244 = 0))
[354]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j53 = 0)*(j244 = 0)
[53]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j356 = 0 = (j30 = 0)*(j242 = -1))
[356]    := (0, 0) base          [(0, 0), (0, 0)]
root=-j98
]
vars:(j30 = 0)*(j242 = -1)
[30]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j98 = 0)*(j242 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rsign:0
[(j357 = 0 = (j55 = 0)*(j244 = 0))
[357]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j55 = 0)*(j244 = 0)
[55]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j359 = 0 = (j33 = 0)*(j242 = -1))
[359]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j33 = 0)*(j242 = -1)
[33]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rvars:(j98 = 0)*(j242 = -1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[242]    := (-1, 0)              [-oo, (-1, 0)]
root=j242

rsign:0
[(j360 = 0 = (j57 = 0)*(j244 = 0))
[360]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j57 = 0)*(j244 = 0)
[57]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rvars:(j98 = 0)*(j244 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[244]    := (0, 0)               [(0, 0), oo]
root=j244

rsign:0
[(j363 = 1 = (j16 = 1)*(j362 = 1))
[363]    := (1, 0)               [(1, 0), oo]
root=j363
]
vars:(j16 = 1)*(j362 = 1)
[16]    := (1, 0) base          [(1, 0), (2, 0)]
root=j363
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j264 = 1)*(j363 = 1)
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264
(j363 = 1 = (j16 = 1)*(j362 = 1))
[363]    := (1, 0)               [(1, 0), oo]
root=j363

rsign:0
[(j365 = 0 = (j45 = 2)*(j364 = 0))
[365]    := (0, 0)               [(0, 0), (0, 0)]
root=j365
]
vars:(j45 = 2)*(j364 = 0)
[45]    := (2, 0)               [(1, 0), (2, 0)]
root=j102
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j102 = 2)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j102 = 2 = (j45 = 2)*(j89 = 1))
[102]    := (2, 0) base          [(1, 0), oo]
root=j102

rsign:1
[(j367 = 0 = (j12 = 0)*(j362 = 1))
[367]    := (0, 0)               [(0, 0), (0, 0)]
root=j367
]
vars:(j12 = 0)*(j362 = 1)
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j12 = 0)*(j264 = 1)
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j368 = 0 = (j41 = 0)*(j364 = 0))
[368]    := (0, 0)               [(0, 0), (0, 0)]
root=j368
]
vars:(j41 = 0)*(j364 = 0)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j41 = 0)*(j98 = 0)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j369 = 2 = (j37 = 2)*(j362 = 1))
[369]    := (2, 0) base          [(1, 0), oo]
root=j37
]
vars:(j37 = 2)*(j362 = 1)
[37]    := (2, 0)               [(1, 0), (2, 0)]
root=j37
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j37 = 2)*(j264 = 1)
[37]    := (2, 0)               [(1, 0), (2, 0)]
root=j37
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j370 = 0 = (j60 = 0)*(j364 = 0))
[370]    := (0, 0)               [(0, 0), (0, 0)]
root=j370
]
vars:(j60 = 0)*(j364 = 0)
[60]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j373 = 0 = (j65 = 0)*(j364 = 0))
[373]    := (0, 0)               [(0, 0), (0, 0)]
root=j373
]
vars:(j65 = 0)*(j364 = 0)
[65]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j374 = 0 = (j39 = 0)*(j362 = 1))
[374]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j39 = 0)*(j362 = 1)
[39]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j375 = 0 = (j62 = 0)*(j364 = 0))
[375]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j62 = 0)*(j364 = 0)
[62]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j376 = 0 = (j14 = 0)*(j362 = 1))
[376]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j14 = 0)*(j362 = 1)
[14]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j377 = 0 = (j43 = 0)*(j364 = 0))
[377]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j43 = 0)*(j364 = 0)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j43 = 0)*(j98 = 0)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j378 = 0 = (j64 = 0)*(j362 = 1))
[378]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j64 = 0)*(j362 = 1)
[64]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j384 = 0 = (j38 = 0)*(j362 = 1))
[384]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j38 = 0)*(j362 = 1)
[38]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j385 = 0 = (j61 = 0)*(j364 = 0))
[385]    := (0, 0)               [(0, 0), (0, 0)]
root=j385
]
vars:(j61 = 0)*(j364 = 0)
[61]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j388 = -12 = (j36 = -12)*(j362 = 1))
[388]    := (-12, 0) base        [-oo, (0, 0)]
root=j388
]
vars:(j36 = -12)*(j362 = 1)
[36]    := (-12, 0) base        [-oo, (-1, 0)]
root=j388
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j264 = 1)*(j388 = -12)
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264
(j388 = -12 = (j36 = -12)*(j362 = 1))
[388]    := (-12, 0) base        [-oo, (0, 0)]
root=j388

rsign:0
[(j389 = 0 = (j59 = 0)*(j364 = 0))
[389]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j59 = 0)*(j364 = 0)
[59]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j391 = 0 = (j18 = 0)*(j362 = 1))
[391]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j18 = 0)*(j362 = 1)
[18]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j392 = 0 = (j47 = 0)*(j364 = 0))
[392]    := (0, 0)               [(0, 0), (0, 0)]
root=j392
]
vars:(j47 = 0)*(j364 = 0)
[47]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j394 = 0 = (j21 = 0)*(j362 = 1))
[394]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j21 = 0)*(j362 = 1)
[21]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j395 = 0 = (j49 = 0)*(j364 = 0))
[395]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j49 = 0)*(j364 = 0)
[49]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j397 = -1 = (j24 = -1)*(j362 = 1))
[397]    := (-1, 0) base         [-oo, oo]
root=j397
]
vars:(j24 = -1)*(j362 = 1)
[24]    := (-1, 0) base         [(-2, 0), (2, 0)]
root=j397
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j264 = 1)*(j397 = -1)
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264
(j397 = -1 = (j24 = -1)*(j362 = 1))
[397]    := (-1, 0) base         [-oo, oo]
root=j397

rsign:0
[(j398 = 0 = (j51 = 0)*(j364 = 0))
[398]    := (0, 0)               [(0, 0), (0, 0)]
root=j398
]
vars:(j51 = 0)*(j364 = 0)
[51]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j400 = 0 = (j27 = 0)*(j362 = 1))
[400]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j27 = 0)*(j362 = 1)
[27]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j401 = 0 = (j53 = 0)*(j364 = 0))
[401]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j53 = 0)*(j364 = 0)
[53]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j403 = 0 = (j30 = 0)*(j362 = 1))
[403]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j30 = 0)*(j362 = 1)
[30]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j404 = 0 = (j55 = 0)*(j364 = 0))
[404]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j55 = 0)*(j364 = 0)
[55]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j406 = 0 = (j33 = 0)*(j362 = 1))
[406]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j33 = 0)*(j362 = 1)
[33]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[362]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rvars:(j98 = 0)*(j264 = 1)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[264]    := (1, 0)               [(1, 0), (1, 0)]
root=j264

rsign:0
[(j407 = 0 = (j57 = 0)*(j364 = 0))
[407]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98
]
vars:(j57 = 0)*(j364 = 0)
[57]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[364]    := (0, 0)               [(0, 0), (0, 0)]
root=-j98

rvars:(j98 = 0)*(j98 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98

rsign:1
[(j410 = 12 = (j45 = 2)*(j409 = 6))
[410]    := (12, 0)              [(1, 0), oo]
root=j410
]
vars:(j45 = 2)*(j409 = 6)
[45]    := (2, 0)               [(1, 0), (2, 0)]
root=j102
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j102 = 2)*(j409 = 6)
(j102 = 2 = (j45 = 2)*(j89 = 1))
[102]    := (2, 0) base          [(1, 0), oo]
root=j102
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j412 = 0 = (j16 = 1)*(j411 = 0))
[412]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j16 = 1)*(j411 = 0)
[16]    := (1, 0) base          [(1, 0), (2, 0)]
root=j363
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j363 = 1)*(j411 = 0)
(j363 = 1 = (j16 = 1)*(j362 = 1))
[363]    := (1, 0)               [(1, 0), oo]
root=j363
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j434 = 0 = (j43 = 0)*(j409 = 6))
[434]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j43 = 0)*(j409 = 6)
[43]    := (0, 0)               [(0, 0), (0, 0)]
root=j43
[409]    := (6, 0)               [(1, 0), oo]
root=j409

same rvars, and m.rsign = 0 of course
[(j435 = 0 = (j39 = 0)*(j411 = 0))
[435]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j39 = 0)*(j411 = 0)
[39]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j98 = 0)*(j411 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j436 = 0 = (j62 = 0)*(j409 = 6))
[436]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j62 = 0)*(j409 = 6)
[62]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j437 = 0 = (j64 = 0)*(j411 = 0))
[437]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j64 = 0)*(j411 = 0)
[64]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j98 = 0)*(j411 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j438 = 0 = (j65 = 0)*(j409 = 6))
[438]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j65 = 0)*(j409 = 6)
[65]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j439 = 0 = (j14 = 0)*(j411 = 0))
[439]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j14 = 0)*(j411 = 0)
[14]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j98 = 0)*(j411 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j443 = 0 = (j41 = 0)*(j409 = 6))
[443]    := (0, 0)               [(0, 0), (0, 0)]
root=j443
]
vars:(j41 = 0)*(j409 = 6)
[41]    := (0, 0)               [(0, 0), (0, 0)]
root=j41
[409]    := (6, 0)               [(1, 0), oo]
root=j409

same rvars, and m.rsign = 0 of course
[(j444 = 0 = (j37 = 2)*(j411 = 0))
[444]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j37 = 2)*(j411 = 0)
[37]    := (2, 0)               [(1, 0), (2, 0)]
root=j37
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

same rvars, and m.rsign = 0 of course
[(j445 = 0 = (j60 = 0)*(j409 = 6))
[445]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j60 = 0)*(j409 = 6)
[60]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j446 = 0 = (j12 = 0)*(j411 = 0))
[446]    := (0, 0)               [(0, 0), (0, 0)]
root=j446
]
vars:(j12 = 0)*(j411 = 0)
[12]    := (0, 0)               [(0, 0), (0, 0)]
root=j12
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

same rvars, and m.rsign = 0 of course
[(j453 = 0 = (j61 = 0)*(j409 = 6))
[453]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j61 = 0)*(j409 = 6)
[61]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j454 = 0 = (j38 = 0)*(j411 = 0))
[454]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j38 = 0)*(j411 = 0)
[38]    := (0, 0) base          [(-2, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j98 = 0)*(j411 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j456 = 0 = (j59 = 0)*(j409 = 6))
[456]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j59 = 0)*(j409 = 6)
[59]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j457 = 0 = (j36 = -12)*(j411 = 0))
[457]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j36 = -12)*(j411 = 0)
[36]    := (-12, 0) base        [-oo, (-1, 0)]
root=j388
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j388 = -12)*(j411 = 0)
(j388 = -12 = (j36 = -12)*(j362 = 1))
[388]    := (-12, 0) base        [-oo, (0, 0)]
root=j388
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j459 = 0 = (j18 = 0)*(j411 = 0))
[459]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j18 = 0)*(j411 = 0)
[18]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j98 = 0)*(j411 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j460 = 0 = (j47 = 0)*(j409 = 6))
[460]    := (0, 0) base          [-oo, oo]
root=j98
]
vars:(j47 = 0)*(j409 = 6)
[47]    := (0, 0) base          [(-2, 0), (2, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j462 = 0 = (j21 = 0)*(j411 = 0))
[462]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j21 = 0)*(j411 = 0)
[21]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j98 = 0)*(j411 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j463 = 0 = (j49 = 0)*(j409 = 6))
[463]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j49 = 0)*(j409 = 6)
[49]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j465 = 0 = (j24 = -1)*(j411 = 0))
[465]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j24 = -1)*(j411 = 0)
[24]    := (-1, 0) base         [(-2, 0), (2, 0)]
root=j397
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j397 = -1)*(j411 = 0)
(j397 = -1 = (j24 = -1)*(j362 = 1))
[397]    := (-1, 0) base         [-oo, oo]
root=j397
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j466 = 0 = (j51 = 0)*(j409 = 6))
[466]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j51 = 0)*(j409 = 6)
[51]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j468 = 0 = (j27 = 0)*(j411 = 0))
[468]    := (0, 0) base          [(0, 0), (0, 0)]
root=j133
]
vars:(j27 = 0)*(j411 = 0)
[27]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j98 = 0)*(j411 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j469 = 0 = (j53 = 0)*(j409 = 6))
[469]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j53 = 0)*(j409 = 6)
[53]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j471 = 0 = (j30 = 0)*(j411 = 0))
[471]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j30 = 0)*(j411 = 0)
[30]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j98 = 0)*(j411 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j472 = 0 = (j55 = 0)*(j409 = 6))
[472]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j55 = 0)*(j409 = 6)
[55]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
[(j474 = 0 = (j33 = 0)*(j411 = 0))
[474]    := (0, 0) base          [(0, 0), (0, 0)]
root=j98
]
vars:(j33 = 0)*(j411 = 0)
[33]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rvars:(j98 = 0)*(j411 = 0)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[411]    := (0, 0)               [(0, 0), (0, 0)]
root=j411

rsign:0
[(j475 = 0 = (j57 = 0)*(j409 = 6))
[475]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
]
vars:(j57 = 0)*(j409 = 6)
[57]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rvars:(j98 = 0)*(j409 = 6)
(j98 = 0 = (j43 = 0)*(j89 = 1))
[98]    := (0, 0)               [(0, 0), (0, 0)]
root=j98
[409]    := (6, 0)               [(1, 0), oo]
root=j409

rsign:0
j13 = j7 j12 
j15 = j9 j14 
j17 = j5 j16 
j20 = j18 j19 
j23 = j21 j22 
j26 = j24 j25 
j29 = j27 j28 
j32 = j30 j31 
j35 = j33 j34 
j42 = j7 j41 
j44 = j9 j43 
j46 = j5 j45 
j48 = j19 j47 
j50 = j22 j49 
j52 = j25 j51 
j54 = j28 j53 
j56 = j31 j55 
j58 = j34 j57 
j67 = j16 j66 
j69 = j45 j68 
j90 = j59 j89 
j91 = j36 j88 
j97 = j14 j88 
j98 = j43 j89 
j101 = j16 j88 
j102 = j45 j89 
j106 = j12 j88 
j107 = j41 j89 
j110 = j37 j88 
j111 = j60 j89 
j114 = j38 j88 
j115 = j61 j89 
j117 = j64 j88 
j118 = j65 j89 
j121 = j39 j88 
j122 = j62 j89 
j124 = j18 j88 
j125 = j47 j89 
j127 = j21 j88 
j128 = j49 j89 
j130 = j24 j88 
j131 = j51 j89 
j133 = j27 j88 
j134 = j53 j89 
j136 = j30 j88 
j137 = j55 j89 
j139 = j33 j88 
j140 = j57 j89 
j147 = j12 j66 
j148 = j41 j68 
j149 = j37 j66 
j150 = j60 j68 
j153 = j39 j66 
j154 = j62 j68 
j155 = j14 j66 
j156 = j43 j68 
j157 = j64 j66 
j158 = j65 j68 
j164 = j38 j66 
j165 = j61 j68 
j168 = j36 j66 
j169 = j59 j68 
j171 = j18 j66 
j172 = j47 j68 
j174 = j21 j66 
j175 = j49 j68 
j177 = j24 j66 
j178 = j51 j68 
j180 = j27 j66 
j181 = j53 j68 
j183 = j30 j66 
j184 = j55 j68 
j186 = j33 j66 
j187 = j57 j68 
j193 = j16 j192 
j195 = j45 j194 
j197 = j12 j192 
j198 = j41 j194 
j199 = j37 j192 
j200 = j60 j194 
j203 = j39 j192 
j204 = j62 j194 
j205 = j14 j192 
j206 = j43 j194 
j207 = j64 j192 
j208 = j65 j194 
j214 = j38 j192 
j215 = j61 j194 
j218 = j36 j192 
j219 = j59 j194 
j221 = j18 j192 
j222 = j47 j194 
j224 = j21 j192 
j225 = j49 j194 
j227 = j24 j192 
j228 = j51 j194 
j230 = j27 j192 
j231 = j53 j194 
j233 = j30 j192 
j234 = j55 j194 
j236 = j33 j192 
j237 = j57 j194 
j243 = j16 j242 
j245 = j45 j244 
j265 = j59 j264 
j266 = j36 j263 
j271 = j14 j263 
j272 = j43 j264 
j275 = j16 j263 
j276 = j45 j264 
j280 = j12 j263 
j281 = j41 j264 
j284 = j37 j263 
j285 = j60 j264 
j289 = j38 j263 
j290 = j61 j264 
j292 = j64 j263 
j293 = j65 j264 
j295 = j39 j263 
j296 = j62 j264 
j298 = j18 j263 
j299 = j47 j264 
j301 = j21 j263 
j302 = j49 j264 
j304 = j24 j263 
j305 = j51 j264 
j307 = j27 j263 
j308 = j53 j264 
j310 = j30 j263 
j311 = j55 j264 
j313 = j33 j263 
j314 = j57 j264 
j320 = j12 j242 
j321 = j41 j244 
j322 = j37 j242 
j323 = j60 j244 
j326 = j65 j244 
j327 = j39 j242 
j328 = j62 j244 
j329 = j14 j242 
j330 = j43 j244 
j331 = j64 j242 
j337 = j38 j242 
j338 = j61 j244 
j341 = j36 j242 
j342 = j59 j244 
j344 = j18 j242 
j345 = j47 j244 
j347 = j21 j242 
j348 = j49 j244 
j350 = j24 j242 
j351 = j51 j244 
j353 = j27 j242 
j354 = j53 j244 
j356 = j30 j242 
j357 = j55 j244 
j359 = j33 j242 
j360 = j57 j244 
j363 = j16 j362 
j365 = j45 j364 
j367 = j12 j362 
j368 = j41 j364 
j369 = j37 j362 
j370 = j60 j364 
j373 = j65 j364 
j374 = j39 j362 
j375 = j62 j364 
j376 = j14 j362 
j377 = j43 j364 
j378 = j64 j362 
j384 = j38 j362 
j385 = j61 j364 
j388 = j36 j362 
j389 = j59 j364 
j391 = j18 j362 
j392 = j47 j364 
j394 = j21 j362 
j395 = j49 j364 
j397 = j24 j362 
j398 = j51 j364 
j400 = j27 j362 
j401 = j53 j364 
j403 = j30 j362 
j404 = j55 j364 
j406 = j33 j362 
j407 = j57 j364 
j410 = j45 j409 
j412 = j16 j411 
j434 = j43 j409 
j435 = j39 j411 
j436 = j62 j409 
j437 = j64 j411 
j438 = j65 j409 
j439 = j14 j411 
j443 = j41 j409 
j444 = j37 j411 
j445 = j60 j409 
j446 = j12 j411 
j453 = j61 j409 
j454 = j38 j411 
j456 = j59 j409 
j457 = j36 j411 
j459 = j18 j411 
j460 = j47 j409 
j462 = j21 j411 
j463 = j49 j409 
j465 = j24 j411 
j466 = j51 j409 
j468 = j27 j411 
j469 = j53 j409 
j471 = j30 j411 
j472 = j55 j409 
j474 = j33 j411 
j475 = j57 j409 
v0 j0 = 1, int := #125: 1
v1 j1 = 1 := #2972: 1.0
v2 j2 = 0, int := #87: 0
v3 j3 = 0 := #8283: 0.0
v4 j4 = 3, int := #1065: undef377
v5 1 l_true := #2082: (>= undef377 1)
v6 j5 = 0, int := #1069: undef29
v7 2 l_true := #2083: (>= undef29 0)
v8 j6 = 536870906, int := #1072: undef181
v9 3 l_true := #2084: (>= undef181 0)
v10 j7 = 3, int := #1081: undef378
v11 6 l_false := #2087: (<= undef378 1)
v12 j8 = 4, int := #1085: undef178
v13 7 l_true := #2091: (>= undef178 4)
v14 j9 = 16, int := #1091: undef28
v15 t10 = 13, int := #2090: (+ undef28 (* -1 undef377))
v16 8 l_true := #2092: (<= (+ undef28 (* -1 undef377)) 14)
v17 9 l_true := #2095: (>= undef28 15)
v18 t11 = 536870910, int := #2094: (+ undef178 undef181)
v19 10 l_false := #2096: (<= (+ undef178 undef181) 536870909)
v20 j13 = 0, int := #2111: (* Nl4arg31 undef378)
v21 j12 = 0, int := #13: Nl4arg31
v22 j36 = -1, int := #142: Nl4CT1
v23 j37 = 1, int := #16: Nl4arg41
v24 j38 = 0, int := #19: Nl4arg51
v25 j39 = 0, int := #25: Nl4arg71
v26 j15 = 0, int := #2103: (* Nl4arg11 undef28)
v27 j14 = 0, int := #7: Nl4arg11
v28 j17 = 0, int := #2104: (* Nl4arg21 undef29)
v29 j16 = 1, int := #10: Nl4arg21
v30 j20 = 0, int := #2105: (* Nl4arg81 undef35)
v31 j18 = 0, int := #28: Nl4arg81
v32 j19 = 0, int := #1128: undef35
v33 j23 = 0, int := #2106: (* Nl4arg91 undef36)
v34 j21 = 0, int := #31: Nl4arg91
v35 j22 = -2, int := #1130: undef36
v36 j26 = 0, int := #2107: (* Nl4arg101 undef37)
v37 j24 = -2, int := #34: Nl4arg101
v38 j25 = 0, int := #1132: undef37
v39 j29 = 0, int := #2108: (* Nl4arg111 undef38)
v40 j27 = 0, int := #37: Nl4arg111
v41 j28 = -2, int := #1134: undef38
v42 j32 = 0, int := #2109: (* Nl4arg121 undef39)
v43 j30 = 0, int := #40: Nl4arg121
v44 j31 = 0, int := #1136: undef39
v45 j35 = 0, int := #2110: (* Nl4arg131 undef40)
v46 j33 = 0, int := #43: Nl4arg131
v47 j34 = 0, int := #1138: undef40
v48 t40 = 0, int := #2112: (+ Nl4CT1 Nl4arg41 (* 16 Nl4arg51) (* 12 Nl4arg71) (* Nl4arg11 undef28) (* Nl4arg21 undef29) (* Nl4arg81 undef35) (* Nl4arg91 undef36) (* Nl4arg101 undef37) (* Nl4arg111 undef38) (* Nl4arg121 undef39) (* Nl4arg131 undef40) (* Nl4arg31 undef378))
v49 12 l_true := #2113: (<= (+ Nl4CT1 Nl4arg41 (* 16 Nl4arg51) (* 12 Nl4arg71) (* Nl4arg11 undef28) (* Nl4arg21 undef29) (* Nl4arg81 undef35) (* Nl4arg91 undef36) (* Nl4arg101 undef37) (* Nl4arg111 undef38) (* Nl4arg121 undef39) (* Nl4arg131 undef40) (* Nl4arg31 undef378)) 0)
v50 j42 = 0, int := #2125: (* Nl4arg32 undef378)
v51 j41 = 0, int := #52: Nl4arg32
v52 j59 = 0, int := #144: Nl4CT2
v53 j60 = 0, int := #55: Nl4arg42
v54 j61 = 0, int := #58: Nl4arg52
v55 j62 = 0, int := #64: Nl4arg72
v56 j44 = 0, int := #2117: (* Nl4arg12 undef28)
v57 j43 = 0, int := #46: Nl4arg12
v58 j46 = 0, int := #2118: (* Nl4arg22 undef29)
v59 j45 = 2, int := #49: Nl4arg22
v60 j48 = 0, int := #2119: (* Nl4arg82 undef35)
v61 j47 = 0, int := #67: Nl4arg82
v62 j50 = 0, int := #2120: (* Nl4arg92 undef36)
v63 j49 = 0, int := #70: Nl4arg92
v64 j52 = 0, int := #2121: (* Nl4arg102 undef37)
v65 j51 = 0, int := #73: Nl4arg102
v66 j54 = 0, int := #2122: (* Nl4arg112 undef38)
v67 j53 = 0, int := #76: Nl4arg112
v68 j56 = 0, int := #2123: (* Nl4arg122 undef39)
v69 j55 = 0, int := #79: Nl4arg122
v70 j58 = 0, int := #2124: (* Nl4arg132 undef40)
v71 j57 = 0, int := #82: Nl4arg132
v72 t63 = 0, int := #2126: (+ Nl4CT2 Nl4arg42 (* 16 Nl4arg52) (* 12 Nl4arg72) (* Nl4arg12 undef28) (* Nl4arg22 undef29) (* Nl4arg82 undef35) (* Nl4arg92 undef36) (* Nl4arg102 undef37) (* Nl4arg112 undef38) (* Nl4arg122 undef39) (* Nl4arg132 undef40) (* Nl4arg32 undef378))
v73 13 l_true := #2127: (<= (+ Nl4CT2 Nl4arg42 (* 16 Nl4arg52) (* 12 Nl4arg72) (* Nl4arg12 undef28) (* Nl4arg22 undef29) (* Nl4arg82 undef35) (* Nl4arg92 undef36) (* Nl4arg102 undef37) (* Nl4arg112 undef38) (* Nl4arg122 undef39) (* Nl4arg132 undef40) (* Nl4arg32 undef378)) 0)
v74 16 l_true := #3179: (>= Nl4arg11 -2)
v75 17 l_true := #9: (<= Nl4arg11 2)
v76 18 l_true := #2281: (>= Nl4arg21 -2)
v77 19 l_true := #12: (<= Nl4arg21 2)
v78 20 l_true := #3164: (>= Nl4arg31 -2)
v79 21 l_true := #15: (<= Nl4arg31 2)
v80 22 l_true := #4014: (>= Nl4arg41 -2)
v81 23 l_true := #18: (<= Nl4arg41 2)
v82 24 l_true := #4011: (>= Nl4arg51 -2)
v83 25 l_true := #21: (<= Nl4arg51 2)
v84 j64 = 0, int := #22: Nl4arg61
v85 26 l_true := #4013: (>= Nl4arg61 -2)
v86 27 l_true := #24: (<= Nl4arg61 2)
v87 28 l_true := #2938: (>= Nl4arg71 -2)
v88 29 l_true := #27: (<= Nl4arg71 2)
v89 30 l_true := #3222: (>= Nl4arg81 -2)
v90 31 l_true := #30: (<= Nl4arg81 2)
v91 32 l_true := #3369: (>= Nl4arg91 -2)
v92 33 l_true := #33: (<= Nl4arg91 2)
v93 34 l_true := #3398: (>= Nl4arg101 -2)
v94 35 l_true := #36: (<= Nl4arg101 2)
v95 36 l_true := #4185: (>= Nl4arg111 -2)
v96 37 l_true := #39: (<= Nl4arg111 2)
v97 38 l_true := #4187: (>= Nl4arg121 -2)
v98 39 l_true := #42: (<= Nl4arg121 2)
v99 40 l_true := #3560: (>= Nl4arg131 -2)
v100 41 l_true := #45: (<= Nl4arg131 2)
v101 42 l_true := #3542: (>= Nl4arg12 -2)
v102 43 l_true := #48: (<= Nl4arg12 2)
v103 44 l_true := #3543: (>= Nl4arg22 -2)
v104 45 l_true := #51: (<= Nl4arg22 2)
v105 46 l_true := #3557: (>= Nl4arg32 -2)
v106 47 l_true := #54: (<= Nl4arg32 2)
v107 48 l_true := #3558: (>= Nl4arg42 -2)
v108 49 l_true := #57: (<= Nl4arg42 2)
v109 50 l_true := #3559: (>= Nl4arg52 -2)
v110 51 l_true := #60: (<= Nl4arg52 2)
v111 j65 = 0, int := #61: Nl4arg62
v112 52 l_true := #3171: (>= Nl4arg62 -2)
v113 53 l_true := #63: (<= Nl4arg62 2)
v114 54 l_true := #3172: (>= Nl4arg72 -2)
v115 55 l_true := #66: (<= Nl4arg72 2)
v116 56 l_true := #3006: (>= Nl4arg82 -2)
v117 57 l_true := #69: (<= Nl4arg82 2)
v118 58 l_true := #3376: (>= Nl4arg92 -2)
v119 59 l_true := #72: (<= Nl4arg92 2)
v120 60 l_true := #3382: (>= Nl4arg102 -2)
v121 61 l_true := #75: (<= Nl4arg102 2)
v122 62 l_true := #3944: (>= Nl4arg112 -2)
v123 63 l_true := #78: (<= Nl4arg112 2)
v124 64 l_true := #3964: (>= Nl4arg122 -2)
v125 65 l_true := #81: (<= Nl4arg122 2)
v126 66 l_true := #3972: (>= Nl4arg132 -2)
v127 67 l_true := #84: (<= Nl4arg132 2)
v128 j67 = 2, int := #321: (* Nl4arg21 lam1n17)
v129 j66 = 2, int := #269: lam1n17
v130 j69 = 0, int := #322: (* Nl4arg22 lam1n18)
v131 j68 = 0, int := #271: lam1n18
v132 t70 = 1, int := #2959: (+ (* Nl4arg21 lam1n17) (* Nl4arg22 lam1n18) (* -1 Nl4arg21))
v133 68 l_true := #2960: (>= (+ (* Nl4arg21 lam1n17) (* Nl4arg22 lam1n18) (* -1 Nl4arg21)) 0)
v134 j71 = 2, int := #86: lam0n0
v135 69 l_true := #88: (>= lam0n0 0)
v136 j72 = 0, int := #89: lam0n1
v137 70 l_true := #90: (>= lam0n1 0)
v138 j73 = 0, int := #91: lam0n2
v139 71 l_true := #92: (>= lam0n2 0)
v140 j74 = 0, int := #93: lam0n3
v141 72 l_true := #94: (>= lam0n3 0)
v142 j75 = 0, int := #95: lam0n4
v143 73 l_true := #96: (>= lam0n4 0)
v144 j76 = 0, int := #97: lam0n5
v145 74 l_true := #98: (>= lam0n5 0)
v146 j77 = 0, int := #99: lam0n6
v147 75 l_true := #100: (>= lam0n6 0)
v148 j78 = 0, int := #101: lam0n7
v149 76 l_true := #102: (>= lam0n7 0)
v150 j79 = 0, int := #103: lam0n8
v151 77 l_true := #104: (>= lam0n8 0)
v152 j80 = 0, int := #105: lam0n9
v153 78 l_true := #106: (>= lam0n9 0)
v154 j81 = 0, int := #107: lam0n10
v155 79 l_true := #108: (>= lam0n10 0)
v156 j82 = 0, int := #109: lam0n11
v157 80 l_true := #110: (>= lam0n11 0)
v158 j83 = 0, int := #111: lam0n12
v159 81 l_true := #112: (>= lam0n12 0)
v160 j84 = 0, int := #113: lam0n13
v161 82 l_true := #114: (>= lam0n13 0)
v162 j85 = 0, int := #115: lam0n14
v163 83 l_true := #116: (>= lam0n14 0)
v164 j86 = 0, int := #117: lam0n15
v165 84 l_true := #118: (>= lam0n15 0)
v166 j87 = 0, int := #119: lam0n16
v167 85 l_true := #120: (>= lam0n16 0)
v168 j88 = 0, int := #121: lam0n17
v169 86 l_true := #122: (>= lam0n17 0)
v170 j89 = 1, int := #123: lam0n18
v171 87 l_true := #124: (>= lam0n18 0)
v172 j90 = 0, int := #145: (* Nl4CT2 lam0n18)
v173 j91 = 0, int := #143: (* Nl4CT1 lam0n17)
v174 t92 = 2, int := #1745: (+ lam0n0 (* 3 lam0n7) (* 3 lam0n8) (* 2 lam0n9) (* 2 lam0n10) (* 2 lam0n11) (* 4 lam0n12) (* 4 lam0n13) (* 4 lam0n14) (* -536870913 lam0n15) (* 536870914 lam0n16) (* Nl4CT1 lam0n17) (* Nl4CT2 lam0n18))
v175 88 l_false := #1746: (<= (+ lam0n0 (* 3 lam0n7) (* 3 lam0n8) (* 2 lam0n9) (* 2 lam0n10) (* 2 lam0n11) (* 4 lam0n12) (* 4 lam0n13) (* 4 lam0n14) (* -536870913 lam0n15) (* 536870914 lam0n16) (* Nl4CT1 lam0n17) (* Nl4CT2 lam0n18)) 1)
v176 j93 = -1, int := #1741: -1
v177 t94 = 0, int := #1748: (* -1 lam0n7)
v178 t95 = 0, int := #1749: (* -1 lam0n8)
v179 t96 = 0, int := #1750: (* -1 lam0n12)
v180 j97 = 0, int := #152: (* Nl4arg11 lam0n17)
v181 j98 = 0, int := #153: (* Nl4arg12 lam0n18)
v182 t99 = 0, int := #1751: (+ (* -1 lam0n7) (* -1 lam0n8) (* -1 lam0n12) (* Nl4arg11 lam0n17) (* Nl4arg12 lam0n18))
v183 t100 = -2, int := #1753: (* -1 lam0n0)
v184 j101 = 0, int := #157: (* Nl4arg21 lam0n17)
v185 j102 = 2, int := #158: (* Nl4arg22 lam0n18)
v186 t103 = 0, int := #1754: (+ (* -1 lam0n0) (* Nl4arg21 lam0n17) (* Nl4arg22 lam0n18))
v187 t104 = 0, int := #1756: (* -1 lam0n9)
v188 t105 = 0, int := #1757: (* -1 lam0n10)
v189 j106 = 0, int := #163: (* Nl4arg31 lam0n17)
v190 j107 = 0, int := #164: (* Nl4arg32 lam0n18)
v191 t108 = 0, int := #1758: (+ (* -1 lam0n9) (* -1 lam0n10) (* Nl4arg31 lam0n17) (* Nl4arg32 lam0n18))
v192 t109 = 0, int := #1760: (* -1 lam0n1)
v193 j110 = 0, int := #169: (* Nl4arg41 lam0n17)
v194 j111 = 0, int := #170: (* Nl4arg42 lam0n18)
v195 t112 = 0, int := #1761: (+ (* -1 lam0n1) lam0n10 (* Nl4arg41 lam0n17) (* Nl4arg42 lam0n18))
v196 t113 = 0, int := #1763: (* -1 lam0n11)
v197 j114 = 0, int := #175: (* Nl4arg51 lam0n17)
v198 j115 = 0, int := #176: (* Nl4arg52 lam0n18)
v199 t116 = 0, int := #1764: (+ (* -1 lam0n11) lam0n15 (* Nl4arg51 lam0n17) (* Nl4arg52 lam0n18))
v200 j117 = 0, int := #180: (* Nl4arg61 lam0n17)
v201 j118 = 0, int := #181: (* Nl4arg62 lam0n18)
v202 t119 = 0, int := #1766: (+ lam0n7 (* Nl4arg61 lam0n17) (* Nl4arg62 lam0n18))
v203 t120 = 0, int := #1768: (* -1 lam0n15)
v204 j121 = 0, int := #186: (* Nl4arg71 lam0n17)
v205 j122 = 0, int := #187: (* Nl4arg72 lam0n18)
v206 t123 = 0, int := #1769: (+ lam0n8 (* -1 lam0n15) (* Nl4arg71 lam0n17) (* Nl4arg72 lam0n18))
v207 j124 = 0, int := #190: (* Nl4arg81 lam0n17)
v208 j125 = 0, int := #191: (* Nl4arg82 lam0n18)
v209 t126 = 0, int := #192: (+ (* Nl4arg81 lam0n17) (* Nl4arg82 lam0n18))
v210 j127 = 0, int := #194: (* Nl4arg91 lam0n17)
v211 j128 = 0, int := #195: (* Nl4arg92 lam0n18)
v212 t129 = 0, int := #196: (+ (* Nl4arg91 lam0n17) (* Nl4arg92 lam0n18))
v213 j130 = 0, int := #198: (* Nl4arg101 lam0n17)
v214 j131 = 0, int := #199: (* Nl4arg102 lam0n18)
v215 t132 = 0, int := #200: (+ (* Nl4arg101 lam0n17) (* Nl4arg102 lam0n18))
v216 j133 = 0, int := #202: (* Nl4arg111 lam0n17)
v217 j134 = 0, int := #203: (* Nl4arg112 lam0n18)
v218 t135 = 0, int := #204: (+ (* Nl4arg111 lam0n17) (* Nl4arg112 lam0n18))
v219 j136 = 0, int := #206: (* Nl4arg121 lam0n17)
v220 j137 = 0, int := #207: (* Nl4arg122 lam0n18)
v221 t138 = 0, int := #208: (+ (* Nl4arg121 lam0n17) (* Nl4arg122 lam0n18))
v222 j139 = 0, int := #210: (* Nl4arg131 lam0n17)
v223 j140 = 0, int := #211: (* Nl4arg132 lam0n18)
v224 t141 = 0, int := #212: (+ (* Nl4arg131 lam0n17) (* Nl4arg132 lam0n18))
v225 t142 = 0, int := #1774: (* -1 lam0n14)
v226 t143 = 0, int := #1771: (* -1 lam0n16)
v227 t144 = 0, int := #1777: (+ (* -1 lam0n14) lam0n15 (* -1 lam0n16))
v228 t145 = 0, int := #1779: (* -1 lam0n4)
v229 t146 = 0, int := #1780: (+ (* -1 lam0n4) lam0n15 (* -1 lam0n16))
v230 j151 = 3, int := #253: lam1n9
v231 j147 = 0, int := #330: (* Nl4arg31 lam1n17)
v232 j148 = 0, int := #331: (* Nl4arg32 lam1n18)
v233 j149 = 2, int := #338: (* Nl4arg41 lam1n17)
v234 j150 = 0, int := #339: (* Nl4arg42 lam1n18)
v235 t152 = -2, int := #2992: (+ (* -1 lam1n9) (* Nl4arg31 lam1n17) (* Nl4arg32 lam1n18) (* -1 Nl4arg31) (* Nl4arg41 lam1n17) (* Nl4arg42 lam1n18) (* -1 Nl4arg41))
v236 110 l_false := #2993: (>= (+ (* -1 lam1n9) (* Nl4arg31 lam1n17) (* Nl4arg32 lam1n18) (* -1 Nl4arg31) (* Nl4arg41 lam1n17) (* Nl4arg42 lam1n18) (* -1 Nl4arg41)) 0)
v237 j153 = 0, int := #358: (* Nl4arg71 lam1n17)
v238 j154 = 0, int := #359: (* Nl4arg72 lam1n18)
v239 j159 = 2, int := #259: lam1n12
v240 j155 = 0, int := #316: (* Nl4arg11 lam1n17)
v241 j156 = 0, int := #317: (* Nl4arg12 lam1n18)
v242 j157 = 0, int := #352: (* Nl4arg61 lam1n17)
v243 j158 = 0, int := #353: (* Nl4arg62 lam1n18)
v244 t160 = -2, int := #2284: (+ (* Nl4arg71 lam1n17) (* Nl4arg72 lam1n18) (* -1 lam1n12) (* Nl4arg11 lam1n17) (* Nl4arg12 lam1n18) (* Nl4arg61 lam1n17) (* Nl4arg62 lam1n18) Nl4arg51)
v245 111 l_false := #2285: (>= (+ (* Nl4arg71 lam1n17) (* Nl4arg72 lam1n18) (* -1 lam1n12) (* Nl4arg11 lam1n17) (* Nl4arg12 lam1n18) (* Nl4arg61 lam1n17) (* Nl4arg62 lam1n18) Nl4arg51) 0)
v246 t161 = 0, int := #2200: (+ (* -1 (* Nl4arg61 lam1n17)) (* -1 (* Nl4arg62 lam1n18)))
v247 112 l_true := #2204: (>= (+ (* -1 #352) (* -1 #353)) 0)
v248 t162 = -2, int := #2202: (+ (* -1 lam1n12) (* Nl4arg11 lam1n17) (* Nl4arg12 lam1n18) (* Nl4arg61 lam1n17) (* Nl4arg62 lam1n18))
v249 113 l_false := #2195: (>= (+ (* -1 lam1n12) (* Nl4arg11 lam1n17) (* Nl4arg12 lam1n18) (* Nl4arg61 lam1n17) (* Nl4arg62 lam1n18)) 0)
v250 114 l_true := #254: (>= lam1n9 0)
v251 t163 = -3, int := #2975: (+ (* -1 lam1n9) (* Nl4arg31 lam1n17) (* Nl4arg32 lam1n18) (* -1 Nl4arg31))
v252 115 l_false := #3047: (>= (+ (* -1 lam1n9) (* Nl4arg31 lam1n17) (* Nl4arg32 lam1n18) (* -1 Nl4arg31)) 0)
v253 j164 = 0, int := #347: (* Nl4arg51 lam1n17)
v254 j165 = 0, int := #348: (* Nl4arg52 lam1n18)
v255 t166 = -2, int := #2300: (+ (* Nl4arg51 lam1n17) (* Nl4arg52 lam1n18) (* Nl4arg71 lam1n17) (* Nl4arg72 lam1n18) (* -1 lam1n12) (* Nl4arg11 lam1n17) (* Nl4arg12 lam1n18) (* Nl4arg61 lam1n17) (* Nl4arg62 lam1n18))
v256 116 l_false := #2198: (>= (+ (* Nl4arg51 lam1n17) (* Nl4arg52 lam1n18) (* Nl4arg71 lam1n17) (* Nl4arg72 lam1n18) (* -1 lam1n12) (* Nl4arg11 lam1n17) (* Nl4arg12 lam1n18) (* Nl4arg61 lam1n17) (* Nl4arg62 lam1n18)) 0)
v257 117 l_true := #260: (>= lam1n12 0)
v258 118 l_true := #3050: (<= Nl4arg11 0)
v259 t167 = -2, int := #2199: (+ (* Nl4arg71 lam1n17) (* Nl4arg72 lam1n18) (* -1 lam1n12) (* Nl4arg11 lam1n17) (* Nl4arg12 lam1n18) (* Nl4arg61 lam1n17) (* Nl4arg62 lam1n18))
v260 119 l_false := #2203: (>= (+ (* Nl4arg71 lam1n17) (* Nl4arg72 lam1n18) (* -1 lam1n12) (* Nl4arg11 lam1n17) (* Nl4arg12 lam1n18) (* Nl4arg61 lam1n17) (* Nl4arg62 lam1n18)) 0)
v261 120 l_true := #3052: (<= Nl4arg51 0)
v262 121 l_true := #270: (>= lam1n17 0)
v263 122 l_true := #272: (>= lam1n18 0)
v264 j168 = -2, int := #284: (* Nl4CT1 lam1n17)
v265 j169 = 0, int := #285: (* Nl4CT2 lam1n18)
v266 t170 = 1073741815, int := #2170: (+ (* Nl4arg21 lam1n17) (* Nl4arg22 lam1n18) (* 2 (* Nl4arg51 lam1n17)) (* 2 (* Nl4arg52 lam1n18)) (* -536870907 (* Nl4arg71 lam1n17)) (* -536870907 (* Nl4arg72 lam1n18)) (* 536870908 lam1n12) (* -536870904 (* Nl4arg11 lam1n17)) (* -536870904 (* Nl4arg12 lam1n18)) (* -536870907 (* Nl4arg61 lam1n17)) (* -536870907 (* Nl4arg62 lam1n18)) (* 2 (* Nl4arg31 lam1n17)) (* 2 (* Nl4arg32 lam1n18)) (* -2 Nl4arg31) (* -4 Nl4arg11) (* -536870910 Nl4arg51) ...)
v267 123 l_false := #2167: (<= (+ (* Nl4arg21 lam1n17) (* Nl4arg22 lam1n18) (* 2 #347) (* 2 #348) (* -536870907 #358) (* -536870907 #359) (* 536870908 lam1n12) (* -536870904 #316) (* -536870904 #317) (* -536870907 #352) (* -536870907 #353) (* 2 #330) (* 2 #331) (* -2 Nl4arg31) (* -4 Nl4arg11) (* -536870910 Nl4arg51) ...) -1)
v268 j171 = 0, int := #362: (* Nl4arg81 lam1n17)
v269 j172 = 0, int := #363: (* Nl4arg82 lam1n18)
v270 t173 = 0, int := #364: (+ (* Nl4arg81 lam1n17) (* Nl4arg82 lam1n18))
v271 j174 = 0, int := #366: (* Nl4arg91 lam1n17)
v272 j175 = 0, int := #367: (* Nl4arg92 lam1n18)
v273 t176 = 0, int := #368: (+ (* Nl4arg91 lam1n17) (* Nl4arg92 lam1n18))
v274 j177 = -4, int := #370: (* Nl4arg101 lam1n17)
v275 j178 = 0, int := #371: (* Nl4arg102 lam1n18)
v276 t179 = -4, int := #372: (+ (* Nl4arg101 lam1n17) (* Nl4arg102 lam1n18))
v277 j180 = 0, int := #374: (* Nl4arg111 lam1n17)
v278 j181 = 0, int := #375: (* Nl4arg112 lam1n18)
v279 t182 = 0, int := #376: (+ (* Nl4arg111 lam1n17) (* Nl4arg112 lam1n18))
v280 j183 = 0, int := #378: (* Nl4arg121 lam1n17)
v281 j184 = 0, int := #379: (* Nl4arg122 lam1n18)
v282 t185 = 0, int := #380: (+ (* Nl4arg121 lam1n17) (* Nl4arg122 lam1n18))
v283 j186 = 0, int := #382: (* Nl4arg131 lam1n17)
v284 j187 = 0, int := #383: (* Nl4arg132 lam1n18)
v285 t188 = 0, int := #384: (+ (* Nl4arg131 lam1n17) (* Nl4arg132 lam1n18))
v286 t189 = 0, int := #1834: (* -1 Nl4arg51)
v287 t190 = 0, int := #1839: (* -1 Nl4arg71)
v288 t191 = 0, int := #3117: (+ (* -1 Nl4arg51) (* -1 Nl4arg71))
v289 j193 = 1, int := #534: (* Nl4arg21 lam2n17)
v290 j192 = 1, int := #482: lam2n17
v291 j195 = 0, int := #535: (* Nl4arg22 lam2n18)
v292 j194 = 0, int := #484: lam2n18
v293 t196 = -1, int := #3154: (+ (* Nl4arg21 lam2n17) (* Nl4arg22 lam2n18) (* -1 Nl4arg22))
v294 138 l_false := #3155: (>= (+ (* Nl4arg21 lam2n17) (* Nl4arg22 lam2n18) (* -1 Nl4arg22)) 0)
v295 j201 = 0, int := #466: lam2n9
v296 j197 = 0, int := #543: (* Nl4arg31 lam2n17)
v297 j198 = 0, int := #544: (* Nl4arg32 lam2n18)
v298 j199 = 1, int := #551: (* Nl4arg41 lam2n17)
v299 j200 = 0, int := #552: (* Nl4arg42 lam2n18)
v300 t202 = 1, int := #3187: (+ (* -1 lam2n9) (* Nl4arg31 lam2n17) (* Nl4arg32 lam2n18) (* -1 Nl4arg32) (* Nl4arg41 lam2n17) (* Nl4arg42 lam2n18) (* -1 Nl4arg42))
v301 139 l_true := #3188: (>= (+ (* -1 lam2n9) (* Nl4arg31 lam2n17) (* Nl4arg32 lam2n18) (* -1 Nl4arg32) (* Nl4arg41 lam2n17) (* Nl4arg42 lam2n18) (* -1 Nl4arg42)) 0)
v302 j203 = 0, int := #571: (* Nl4arg71 lam2n17)
v303 j204 = 0, int := #572: (* Nl4arg72 lam2n18)
v304 j209 = 0, int := #472: lam2n12
v305 j205 = 0, int := #529: (* Nl4arg11 lam2n17)
v306 j206 = 0, int := #530: (* Nl4arg12 lam2n18)
v307 j207 = 0, int := #565: (* Nl4arg61 lam2n17)
v308 j208 = 0, int := #566: (* Nl4arg62 lam2n18)
v309 t210 = 0, int := #2058: (+ (* Nl4arg71 lam2n17) (* Nl4arg72 lam2n18) (* -1 lam2n12) (* Nl4arg11 lam2n17) (* Nl4arg12 lam2n18) (* Nl4arg61 lam2n17) (* Nl4arg62 lam2n18) Nl4arg52)
v310 140 l_true := #2059: (>= (+ (* Nl4arg71 lam2n17) (* Nl4arg72 lam2n18) (* -1 lam2n12) (* Nl4arg11 lam2n17) (* Nl4arg12 lam2n18) (* Nl4arg61 lam2n17) (* Nl4arg62 lam2n18) Nl4arg52) 0)
v311 t211 = 0, int := #2061: (+ (* -1 (* Nl4arg61 lam2n17)) (* -1 (* Nl4arg62 lam2n18)))
v312 141 l_true := #2062: (>= (+ (* -1 #565) (* -1 #566)) 0)
v313 t212 = 0, int := #2063: (+ (* -1 lam2n12) (* Nl4arg11 lam2n17) (* Nl4arg12 lam2n18) (* Nl4arg61 lam2n17) (* Nl4arg62 lam2n18))
v314 142 l_true := #2064: (>= (+ (* -1 lam2n12) (* Nl4arg11 lam2n17) (* Nl4arg12 lam2n18) (* Nl4arg61 lam2n17) (* Nl4arg62 lam2n18)) 0)
v315 143 l_true := #467: (>= lam2n9 0)
v316 t213 = 0, int := #3170: (+ (* -1 lam2n9) (* Nl4arg31 lam2n17) (* Nl4arg32 lam2n18) (* -1 Nl4arg32))
v317 144 l_true := #3242: (>= (+ (* -1 lam2n9) (* Nl4arg31 lam2n17) (* Nl4arg32 lam2n18) (* -1 Nl4arg32)) 0)
v318 j214 = 0, int := #560: (* Nl4arg51 lam2n17)
v319 j215 = 0, int := #561: (* Nl4arg52 lam2n18)
v320 t216 = 0, int := #2057: (+ (* Nl4arg51 lam2n17) (* Nl4arg52 lam2n18) (* Nl4arg71 lam2n17) (* Nl4arg72 lam2n18) (* -1 lam2n12) (* Nl4arg11 lam2n17) (* Nl4arg12 lam2n18) (* Nl4arg61 lam2n17) (* Nl4arg62 lam2n18))
v321 145 l_true := #2065: (>= (+ (* Nl4arg51 lam2n17) (* Nl4arg52 lam2n18) (* Nl4arg71 lam2n17) (* Nl4arg72 lam2n18) (* -1 lam2n12) (* Nl4arg11 lam2n17) (* Nl4arg12 lam2n18) (* Nl4arg61 lam2n17) (* Nl4arg62 lam2n18)) 0)
v322 146 l_true := #473: (>= lam2n12 0)
v323 147 l_true := #3245: (<= Nl4arg12 0)
v324 t217 = 0, int := #2069: (+ (* Nl4arg71 lam2n17) (* Nl4arg72 lam2n18) (* -1 lam2n12) (* Nl4arg11 lam2n17) (* Nl4arg12 lam2n18) (* Nl4arg61 lam2n17) (* Nl4arg62 lam2n18))
v325 148 l_true := #2070: (>= (+ (* Nl4arg71 lam2n17) (* Nl4arg72 lam2n18) (* -1 lam2n12) (* Nl4arg11 lam2n17) (* Nl4arg12 lam2n18) (* Nl4arg61 lam2n17) (* Nl4arg62 lam2n18)) 0)
v326 149 l_true := #3247: (<= Nl4arg52 0)
v327 150 l_true := #483: (>= lam2n17 0)
v328 151 l_true := #485: (>= lam2n18 0)
v329 j218 = -1, int := #497: (* Nl4CT1 lam2n17)
v330 j219 = 0, int := #498: (* Nl4CT2 lam2n18)
v331 t220 = 0, int := #1999: (+ (* Nl4arg21 lam2n17) (* Nl4arg22 lam2n18) (* 2 (* Nl4arg51 lam2n17)) (* 2 (* Nl4arg52 lam2n18)) (* -536870907 (* Nl4arg71 lam2n17)) (* -536870907 (* Nl4arg72 lam2n18)) (* 536870908 lam2n12) (* -536870904 (* Nl4arg11 lam2n17)) (* -536870904 (* Nl4arg12 lam2n18)) (* -536870907 (* Nl4arg61 lam2n17)) (* -536870907 (* Nl4arg62 lam2n18)) (* 2 (* Nl4arg31 lam2n17)) (* 2 (* Nl4arg32 lam2n18)) (* -2 Nl4arg32) (* -4 Nl4arg12) (* -536870910 Nl4arg52) ...)
v332 152 l_false := #2000: (<= (+ (* Nl4arg21 lam2n17) (* Nl4arg22 lam2n18) (* 2 #560) (* 2 #561) (* -536870907 #571) (* -536870907 #572) (* 536870908 lam2n12) (* -536870904 #529) (* -536870904 #530) (* -536870907 #565) (* -536870907 #566) (* 2 #543) (* 2 #544) (* -2 Nl4arg32) (* -4 Nl4arg12) (* -536870910 Nl4arg52) ...) -1)
v333 j221 = 0, int := #575: (* Nl4arg81 lam2n17)
v334 j222 = 0, int := #576: (* Nl4arg82 lam2n18)
v335 t223 = 0, int := #577: (+ (* Nl4arg81 lam2n17) (* Nl4arg82 lam2n18))
v336 j224 = 0, int := #579: (* Nl4arg91 lam2n17)
v337 j225 = 0, int := #580: (* Nl4arg92 lam2n18)
v338 t226 = 0, int := #581: (+ (* Nl4arg91 lam2n17) (* Nl4arg92 lam2n18))
v339 j227 = -2, int := #583: (* Nl4arg101 lam2n17)
v340 j228 = 0, int := #584: (* Nl4arg102 lam2n18)
v341 t229 = -2, int := #585: (+ (* Nl4arg101 lam2n17) (* Nl4arg102 lam2n18))
v342 j230 = 0, int := #587: (* Nl4arg111 lam2n17)
v343 j231 = 0, int := #588: (* Nl4arg112 lam2n18)
v344 t232 = 0, int := #589: (+ (* Nl4arg111 lam2n17) (* Nl4arg112 lam2n18))
v345 j233 = 0, int := #591: (* Nl4arg121 lam2n17)
v346 j234 = 0, int := #592: (* Nl4arg122 lam2n18)
v347 t235 = 0, int := #593: (+ (* Nl4arg121 lam2n17) (* Nl4arg122 lam2n18))
v348 j236 = 0, int := #595: (* Nl4arg131 lam2n17)
v349 j237 = 0, int := #596: (* Nl4arg132 lam2n18)
v350 t238 = 0, int := #597: (+ (* Nl4arg131 lam2n17) (* Nl4arg132 lam2n18))
v351 t239 = 0, int := #1915: (* -1 Nl4arg52)
v352 t240 = 0, int := #1920: (* -1 Nl4arg72)
v353 t241 = 0, int := #3308: (+ (* -1 Nl4arg52) (* -1 Nl4arg72))
v354 j243 = -2, int := #851: (* Nl4arg21 lam4n16)
v355 j242 = -2, int := #825: lam4n16
v356 j245 = 2, int := #852: (* Nl4arg22 lam4n17)
v357 j244 = 1, int := #827: lam4n17
v358 t246 = -1, int := #3336: (+ (* Nl4arg21 lam4n16) (* Nl4arg22 lam4n17) (* -1 Nl4arg21))
v359 167 l_false := #3337: (>= (+ (* Nl4arg21 lam4n16) (* Nl4arg22 lam4n17) (* -1 Nl4arg21)) 0)
v360 j247 = 2, int := #661: lam3n0
v361 168 l_true := #662: (>= lam3n0 0)
v362 j248 = 0, int := #663: lam3n1
v363 169 l_true := #664: (>= lam3n1 0)
v364 j249 = 0, int := #665: lam3n2
v365 170 l_true := #666: (>= lam3n2 0)
v366 j250 = 0, int := #667: lam3n3
v367 171 l_true := #668: (>= lam3n3 0)
v368 j251 = 0, int := #669: lam3n4
v369 172 l_true := #670: (>= lam3n4 0)
v370 j252 = 0, int := #671: lam3n5
v371 173 l_true := #672: (>= lam3n5 0)
v372 j253 = 0, int := #673: lam3n6
v373 174 l_true := #674: (>= lam3n6 0)
v374 j254 = 0, int := #675: lam3n7
v375 175 l_true := #676: (>= lam3n7 0)
v376 j255 = 0, int := #677: lam3n8
v377 176 l_true := #678: (>= lam3n8 0)
v378 j256 = 0, int := #679: lam3n9
v379 177 l_true := #680: (>= lam3n9 0)
v380 j257 = 0, int := #681: lam3n10
v381 178 l_true := #682: (>= lam3n10 0)
v382 j258 = 0, int := #683: lam3n11
v383 179 l_true := #684: (>= lam3n11 0)
v384 j259 = 0, int := #685: lam3n12
v385 180 l_true := #686: (>= lam3n12 0)
v386 j260 = 0, int := #687: lam3n13
v387 181 l_true := #688: (>= lam3n13 0)
v388 j261 = 0, int := #689: lam3n14
v389 182 l_true := #690: (>= lam3n14 0)
v390 j262 = 0, int := #691: lam3n15
v391 183 l_true := #692: (>= lam3n15 0)
v392 j263 = 0, int := #693: lam3n16
v393 184 l_true := #694: (>= lam3n16 0)
v394 j264 = 1, int := #695: lam3n17
v395 185 l_true := #696: (>= lam3n17 0)
v396 j265 = 0, int := #708: (* Nl4CT2 lam3n17)
v397 j266 = 0, int := #707: (* Nl4CT1 lam3n16)
v398 t267 = 2, int := #1950: (+ lam3n0 (* 3 lam3n7) (* 3 lam3n8) (* 2 lam3n9) (* 2 lam3n10) (* 2 lam3n11) (* 4 lam3n12) (* 4 lam3n13) (* 4 lam3n14) (* 536870914 lam3n15) (* Nl4CT1 lam3n16) (* Nl4CT2 lam3n17))
v399 186 l_false := #1951: (<= (+ lam3n0 (* 3 lam3n7) (* 3 lam3n8) (* 2 lam3n9) (* 2 lam3n10) (* 2 lam3n11) (* 4 lam3n12) (* 4 lam3n13) (* 4 lam3n14) (* 536870914 lam3n15) (* Nl4CT1 lam3n16) (* Nl4CT2 lam3n17)) 1)
v400 t268 = 0, int := #1953: (* -1 lam3n7)
v401 t269 = 0, int := #1954: (* -1 lam3n8)
v402 t270 = 0, int := #1955: (* -1 lam3n12)
v403 j271 = 0, int := #714: (* Nl4arg11 lam3n16)
v404 j272 = 0, int := #715: (* Nl4arg12 lam3n17)
v405 t273 = 0, int := #1956: (+ (* -1 lam3n7) (* -1 lam3n8) (* -1 lam3n12) (* Nl4arg11 lam3n16) (* Nl4arg12 lam3n17))
v406 t274 = -2, int := #1958: (* -1 lam3n0)
v407 j275 = 0, int := #719: (* Nl4arg21 lam3n16)
v408 j276 = 2, int := #720: (* Nl4arg22 lam3n17)
v409 t277 = 0, int := #1959: (+ (* -1 lam3n0) (* Nl4arg21 lam3n16) (* Nl4arg22 lam3n17))
v410 t278 = 0, int := #1961: (* -1 lam3n9)
v411 t279 = 0, int := #1962: (* -1 lam3n10)
v412 j280 = 0, int := #725: (* Nl4arg31 lam3n16)
v413 j281 = 0, int := #726: (* Nl4arg32 lam3n17)
v414 t282 = 0, int := #1963: (+ (* -1 lam3n9) (* -1 lam3n10) (* Nl4arg31 lam3n16) (* Nl4arg32 lam3n17))
v415 t283 = 0, int := #1965: (* -1 lam3n1)
v416 j284 = 0, int := #731: (* Nl4arg41 lam3n16)
v417 j285 = 0, int := #732: (* Nl4arg42 lam3n17)
v418 t286 = 0, int := #1966: (+ (* -1 lam3n1) lam3n10 (* Nl4arg41 lam3n16) (* Nl4arg42 lam3n17))
v419 t287 = 0, int := #1968: (* -1 lam3n11)
v420 t288 = 0, int := #1969: (* -1 lam3n15)
v421 j289 = 0, int := #737: (* Nl4arg51 lam3n16)
v422 j290 = 0, int := #738: (* Nl4arg52 lam3n17)
v423 t291 = 0, int := #1970: (+ (* -1 lam3n11) (* -1 lam3n15) (* Nl4arg51 lam3n16) (* Nl4arg52 lam3n17))
v424 j292 = 0, int := #742: (* Nl4arg61 lam3n16)
v425 j293 = 0, int := #743: (* Nl4arg62 lam3n17)
v426 t294 = 0, int := #1972: (+ lam3n7 (* Nl4arg61 lam3n16) (* Nl4arg62 lam3n17))
v427 j295 = 0, int := #748: (* Nl4arg71 lam3n16)
v428 j296 = 0, int := #749: (* Nl4arg72 lam3n17)
v429 t297 = 0, int := #1974: (+ lam3n8 lam3n15 (* Nl4arg71 lam3n16) (* Nl4arg72 lam3n17))
v430 j298 = 0, int := #752: (* Nl4arg81 lam3n16)
v431 j299 = 0, int := #753: (* Nl4arg82 lam3n17)
v432 t300 = 0, int := #754: (+ (* Nl4arg81 lam3n16) (* Nl4arg82 lam3n17))
v433 j301 = 0, int := #756: (* Nl4arg91 lam3n16)
v434 j302 = 0, int := #757: (* Nl4arg92 lam3n17)
v435 t303 = 0, int := #758: (+ (* Nl4arg91 lam3n16) (* Nl4arg92 lam3n17))
v436 j304 = 0, int := #760: (* Nl4arg101 lam3n16)
v437 j305 = 0, int := #761: (* Nl4arg102 lam3n17)
v438 t306 = 0, int := #762: (+ (* Nl4arg101 lam3n16) (* Nl4arg102 lam3n17))
v439 j307 = 0, int := #764: (* Nl4arg111 lam3n16)
v440 j308 = 0, int := #765: (* Nl4arg112 lam3n17)
v441 t309 = 0, int := #766: (+ (* Nl4arg111 lam3n16) (* Nl4arg112 lam3n17))
v442 j310 = 0, int := #768: (* Nl4arg121 lam3n16)
v443 j311 = 0, int := #769: (* Nl4arg122 lam3n17)
v444 t312 = 0, int := #770: (+ (* Nl4arg121 lam3n16) (* Nl4arg122 lam3n17))
v445 j313 = 0, int := #772: (* Nl4arg131 lam3n16)
v446 j314 = 0, int := #773: (* Nl4arg132 lam3n17)
v447 t315 = 0, int := #774: (+ (* Nl4arg131 lam3n16) (* Nl4arg132 lam3n17))
v448 t316 = 0, int := #1976: (* -1 lam3n14)
v449 t317 = 0, int := #1980: (+ (* -1 lam3n14) (* -1 lam3n15))
v450 t318 = 0, int := #1982: (* -1 lam3n4)
v451 t319 = 0, int := #1983: (+ (* -1 lam3n4) (* -1 lam3n15))
v452 j324 = 0, int := #811: lam4n9
v453 j320 = 0, int := #857: (* Nl4arg31 lam4n16)
v454 j321 = 0, int := #858: (* Nl4arg32 lam4n17)
v455 j322 = -2, int := #863: (* Nl4arg41 lam4n16)
v456 j323 = 0, int := #864: (* Nl4arg42 lam4n17)
v457 t325 = -3, int := #3367: (+ (* -1 lam4n9) (* Nl4arg31 lam4n16) (* Nl4arg32 lam4n17) (* -1 Nl4arg31) (* Nl4arg41 lam4n16) (* Nl4arg42 lam4n17) (* -1 Nl4arg41))
v458 207 l_false := #3368: (>= (+ (* -1 lam4n9) (* Nl4arg31 lam4n16) (* Nl4arg32 lam4n17) (* -1 Nl4arg31) (* Nl4arg41 lam4n16) (* Nl4arg42 lam4n17) (* -1 Nl4arg41)) 0)
v459 j326 = 0, int := #875: (* Nl4arg62 lam4n17)
v460 j327 = 0, int := #880: (* Nl4arg71 lam4n16)
v461 j328 = 0, int := #881: (* Nl4arg72 lam4n17)
v462 j332 = 0, int := #817: lam4n12
v463 j329 = 0, int := #846: (* Nl4arg11 lam4n16)
v464 j330 = 0, int := #847: (* Nl4arg12 lam4n17)
v465 j331 = 0, int := #874: (* Nl4arg61 lam4n16)
v466 t333 = 0, int := #1891: (+ (* Nl4arg71 lam4n16) (* Nl4arg72 lam4n17) (* -1 lam4n12) (* Nl4arg11 lam4n16) (* Nl4arg12 lam4n17) (* Nl4arg61 lam4n16) (* Nl4arg62 lam4n17))
v467 208 l_true := #1892: (>= (+ (* Nl4arg71 lam4n16) (* Nl4arg72 lam4n17) (* -1 lam4n12) (* Nl4arg11 lam4n16) (* Nl4arg12 lam4n17) (* Nl4arg61 lam4n16) (* Nl4arg62 lam4n17)) 0)
v468 t334 = 0, int := #1896: (+ (* -1 (* Nl4arg61 lam4n16)) (* -1 (* Nl4arg62 lam4n17)))
v469 209 l_true := #1897: (>= (+ (* -1 #874) (* -1 #875)) 0)
v470 t335 = 0, int := #1898: (+ (* -1 lam4n12) (* Nl4arg11 lam4n16) (* Nl4arg12 lam4n17) (* Nl4arg61 lam4n16) (* Nl4arg62 lam4n17))
v471 210 l_true := #1900: (>= (+ (* -1 lam4n12) (* Nl4arg11 lam4n16) (* Nl4arg12 lam4n17) (* Nl4arg61 lam4n16) (* Nl4arg62 lam4n17)) 0)
v472 211 l_true := #812: (>= lam4n9 0)
v473 t336 = 0, int := #3351: (+ (* -1 lam4n9) (* Nl4arg31 lam4n16) (* Nl4arg32 lam4n17) (* -1 Nl4arg31))
v474 212 l_true := #3415: (>= (+ (* -1 lam4n9) (* Nl4arg31 lam4n16) (* Nl4arg32 lam4n17) (* -1 Nl4arg31)) 0)
v475 j337 = 0, int := #869: (* Nl4arg51 lam4n16)
v476 j338 = 0, int := #870: (* Nl4arg52 lam4n17)
v477 t339 = 0, int := #1890: (+ (* Nl4arg51 lam4n16) (* Nl4arg52 lam4n17) (* Nl4arg71 lam4n16) (* Nl4arg72 lam4n17) (* -1 lam4n12) (* Nl4arg11 lam4n16) (* Nl4arg12 lam4n17) (* Nl4arg61 lam4n16) (* Nl4arg62 lam4n17))
v478 213 l_true := #1901: (>= (+ (* Nl4arg51 lam4n16) (* Nl4arg52 lam4n17) (* Nl4arg71 lam4n16) (* Nl4arg72 lam4n17) (* -1 lam4n12) (* Nl4arg11 lam4n16) (* Nl4arg12 lam4n17) (* Nl4arg61 lam4n16) (* Nl4arg62 lam4n17)) 0)
v479 214 l_true := #818: (>= lam4n12 0)
v480 t340 = 0, int := #1903: (+ (* -1 (* Nl4arg71 lam4n16)) (* -1 (* Nl4arg72 lam4n17)) lam4n12 (* -1 (* Nl4arg11 lam4n16)) (* -1 (* Nl4arg12 lam4n17)) (* -1 (* Nl4arg61 lam4n16)) (* -1 (* Nl4arg62 lam4n17)))
v481 215 l_true := #1904: (>= (+ (* -1 #880) (* -1 #881) lam4n12 (* -1 #846) (* -1 #847) (* -1 #874) (* -1 #875)) 0)
v482 216 l_false := #826: (>= lam4n16 0)
v483 217 l_true := #828: (>= lam4n17 0)
v484 j341 = 2, int := #839: (* Nl4CT1 lam4n16)
v485 j342 = 0, int := #840: (* Nl4CT2 lam4n17)
v486 t343 = 1, int := #1940: (+ (* Nl4arg21 lam4n16) (* Nl4arg22 lam4n17) (* 2 (* Nl4arg51 lam4n16)) (* 2 (* Nl4arg52 lam4n17)) (* -536870908 (* Nl4arg71 lam4n16)) (* -536870908 (* Nl4arg72 lam4n17)) (* 536870909 lam4n12) (* -536870905 (* Nl4arg11 lam4n16)) (* -536870905 (* Nl4arg12 lam4n17)) (* -536870908 (* Nl4arg61 lam4n16)) (* -536870908 (* Nl4arg62 lam4n17)) (* 2 (* Nl4arg31 lam4n16)) (* 2 (* Nl4arg32 lam4n17)) (* -2 Nl4arg31) (* -4 Nl4arg11) (* Nl4CT1 lam4n16) ...)
v487 218 l_false := #1941: (<= (+ (* Nl4arg21 lam4n16) (* Nl4arg22 lam4n17) (* 2 #869) (* 2 #870) (* -536870908 #880) (* -536870908 #881) (* 536870909 lam4n12) (* -536870905 #846) (* -536870905 #847) (* -536870908 #874) (* -536870908 #875) (* 2 #857) (* 2 #858) (* -2 Nl4arg31) (* -4 Nl4arg11) (* Nl4CT1 lam4n16) ...) -1)
v488 j344 = 0, int := #884: (* Nl4arg81 lam4n16)
v489 j345 = 0, int := #885: (* Nl4arg82 lam4n17)
v490 t346 = 0, int := #886: (+ (* Nl4arg81 lam4n16) (* Nl4arg82 lam4n17))
v491 j347 = 0, int := #888: (* Nl4arg91 lam4n16)
v492 j348 = 0, int := #889: (* Nl4arg92 lam4n17)
v493 t349 = 0, int := #890: (+ (* Nl4arg91 lam4n16) (* Nl4arg92 lam4n17))
v494 j350 = 4, int := #892: (* Nl4arg101 lam4n16)
v495 j351 = 0, int := #893: (* Nl4arg102 lam4n17)
v496 t352 = 4, int := #894: (+ (* Nl4arg101 lam4n16) (* Nl4arg102 lam4n17))
v497 j353 = 0, int := #896: (* Nl4arg111 lam4n16)
v498 j354 = 0, int := #897: (* Nl4arg112 lam4n17)
v499 t355 = 0, int := #898: (+ (* Nl4arg111 lam4n16) (* Nl4arg112 lam4n17))
v500 j356 = 0, int := #900: (* Nl4arg121 lam4n16)
v501 j357 = 0, int := #901: (* Nl4arg122 lam4n17)
v502 t358 = 0, int := #902: (+ (* Nl4arg121 lam4n16) (* Nl4arg122 lam4n17))
v503 j359 = 0, int := #904: (* Nl4arg131 lam4n16)
v504 j360 = 0, int := #905: (* Nl4arg132 lam4n17)
v505 t361 = 0, int := #906: (+ (* Nl4arg131 lam4n16) (* Nl4arg132 lam4n17))
v506 j363 = 1, int := #987: (* Nl4arg21 lam5n16)
v507 j362 = 1, int := #961: lam5n16
v508 j365 = 0, int := #988: (* Nl4arg22 lam5n17)
v509 j364 = 0, int := #963: lam5n17
v510 t366 = -1, int := #3501: (+ (* Nl4arg21 lam5n16) (* Nl4arg22 lam5n17) (* -1 Nl4arg22))
v511 227 l_false := #3502: (>= (+ (* Nl4arg21 lam5n16) (* Nl4arg22 lam5n17) (* -1 Nl4arg22)) 0)
v512 j371 = 0, int := #947: lam5n9
v513 j367 = 0, int := #993: (* Nl4arg31 lam5n16)
v514 j368 = 0, int := #994: (* Nl4arg32 lam5n17)
v515 j369 = 1, int := #999: (* Nl4arg41 lam5n16)
v516 j370 = 0, int := #1000: (* Nl4arg42 lam5n17)
v517 t372 = 1, int := #3532: (+ (* -1 lam5n9) (* Nl4arg31 lam5n16) (* Nl4arg32 lam5n17) (* -1 Nl4arg32) (* Nl4arg41 lam5n16) (* Nl4arg42 lam5n17) (* -1 Nl4arg42))
v518 228 l_true := #3533: (>= (+ (* -1 lam5n9) (* Nl4arg31 lam5n16) (* Nl4arg32 lam5n17) (* -1 Nl4arg32) (* Nl4arg41 lam5n16) (* Nl4arg42 lam5n17) (* -1 Nl4arg42)) 0)
v519 j373 = 0, int := #1011: (* Nl4arg62 lam5n17)
v520 j374 = 0, int := #1016: (* Nl4arg71 lam5n16)
v521 j375 = 0, int := #1017: (* Nl4arg72 lam5n17)
v522 j379 = 2, int := #953: lam5n12
v523 j376 = 0, int := #982: (* Nl4arg11 lam5n16)
v524 j377 = 0, int := #983: (* Nl4arg12 lam5n17)
v525 j378 = 0, int := #1010: (* Nl4arg61 lam5n16)
v526 t380 = -2, int := #1856: (+ (* Nl4arg71 lam5n16) (* Nl4arg72 lam5n17) (* -1 lam5n12) (* Nl4arg11 lam5n16) (* Nl4arg12 lam5n17) (* Nl4arg61 lam5n16) (* Nl4arg62 lam5n17))
v527 229 l_false := #1854: (>= (+ (* Nl4arg71 lam5n16) (* Nl4arg72 lam5n17) (* -1 lam5n12) (* Nl4arg11 lam5n16) (* Nl4arg12 lam5n17) (* Nl4arg61 lam5n16) (* Nl4arg62 lam5n17)) 0)
v528 t381 = 0, int := #1858: (+ (* -1 (* Nl4arg61 lam5n16)) (* -1 (* Nl4arg62 lam5n17)))
v529 230 l_true := #1859: (>= (+ (* -1 #1010) (* -1 #1011)) 0)
v530 t382 = -2, int := #1860: (+ (* -1 lam5n12) (* Nl4arg11 lam5n16) (* Nl4arg12 lam5n17) (* Nl4arg61 lam5n16) (* Nl4arg62 lam5n17))
v531 231 l_false := #1861: (>= (+ (* -1 lam5n12) (* Nl4arg11 lam5n16) (* Nl4arg12 lam5n17) (* Nl4arg61 lam5n16) (* Nl4arg62 lam5n17)) 0)
v532 232 l_true := #948: (>= lam5n9 0)
v533 t383 = 0, int := #3516: (+ (* -1 lam5n9) (* Nl4arg31 lam5n16) (* Nl4arg32 lam5n17) (* -1 Nl4arg32))
v534 233 l_true := #3580: (>= (+ (* -1 lam5n9) (* Nl4arg31 lam5n16) (* Nl4arg32 lam5n17) (* -1 Nl4arg32)) 0)
v535 j384 = 0, int := #1005: (* Nl4arg51 lam5n16)
v536 j385 = 0, int := #1006: (* Nl4arg52 lam5n17)
v537 t386 = -2, int := #1855: (+ (* Nl4arg51 lam5n16) (* Nl4arg52 lam5n17) (* Nl4arg71 lam5n16) (* Nl4arg72 lam5n17) (* -1 lam5n12) (* Nl4arg11 lam5n16) (* Nl4arg12 lam5n17) (* Nl4arg61 lam5n16) (* Nl4arg62 lam5n17))
v538 234 l_false := #1863: (>= (+ (* Nl4arg51 lam5n16) (* Nl4arg52 lam5n17) (* Nl4arg71 lam5n16) (* Nl4arg72 lam5n17) (* -1 lam5n12) (* Nl4arg11 lam5n16) (* Nl4arg12 lam5n17) (* Nl4arg61 lam5n16) (* Nl4arg62 lam5n17)) 0)
v539 235 l_true := #954: (>= lam5n12 0)
v540 t387 = 2, int := #1864: (+ (* -1 (* Nl4arg71 lam5n16)) (* -1 (* Nl4arg72 lam5n17)) lam5n12 (* -1 (* Nl4arg11 lam5n16)) (* -1 (* Nl4arg12 lam5n17)) (* -1 (* Nl4arg61 lam5n16)) (* -1 (* Nl4arg62 lam5n17)))
v541 236 l_true := #1862: (>= (+ (* -1 #1016) (* -1 #1017) lam5n12 (* -1 #982) (* -1 #983) (* -1 #1010) (* -1 #1011)) 0)
v542 237 l_true := #962: (>= lam5n16 0)
v543 238 l_true := #964: (>= lam5n17 0)
v544 j388 = -1, int := #975: (* Nl4CT1 lam5n16)
v545 j389 = 0, int := #976: (* Nl4CT2 lam5n17)
v546 t390 = 1073741818, int := #2952: (+ (* Nl4arg21 lam5n16) (* Nl4arg22 lam5n17) (* 2 (* Nl4arg51 lam5n16)) (* 2 (* Nl4arg52 lam5n17)) (* -536870908 (* Nl4arg71 lam5n16)) (* -536870908 (* Nl4arg72 lam5n17)) (* 536870909 lam5n12) (* -536870905 (* Nl4arg11 lam5n16)) (* -536870905 (* Nl4arg12 lam5n17)) (* -536870908 (* Nl4arg61 lam5n16)) (* -536870908 (* Nl4arg62 lam5n17)) (* 2 (* Nl4arg31 lam5n16)) (* 2 (* Nl4arg32 lam5n17)) (* -2 Nl4arg32) (* -4 Nl4arg12) (* Nl4CT1 lam5n16) ...)
v547 239 l_false := #3735: (<= (+ (* Nl4arg21 lam5n16) (* Nl4arg22 lam5n17) (* 2 #1005) (* 2 #1006) (* -536870908 #1016) (* -536870908 #1017) (* 536870909 lam5n12) (* -536870905 #982) (* -536870905 #983) (* -536870908 #1010) (* -536870908 #1011) (* 2 #993) (* 2 #994) (* -2 Nl4arg32) (* -4 Nl4arg12) (* Nl4CT1 lam5n16) ...) -1)
v548 j391 = 0, int := #1020: (* Nl4arg81 lam5n16)
v549 j392 = 0, int := #1021: (* Nl4arg82 lam5n17)
v550 t393 = 0, int := #1022: (+ (* Nl4arg81 lam5n16) (* Nl4arg82 lam5n17))
v551 j394 = 0, int := #1024: (* Nl4arg91 lam5n16)
v552 j395 = 0, int := #1025: (* Nl4arg92 lam5n17)
v553 t396 = 0, int := #1026: (+ (* Nl4arg91 lam5n16) (* Nl4arg92 lam5n17))
v554 j397 = -2, int := #1028: (* Nl4arg101 lam5n16)
v555 j398 = 0, int := #1029: (* Nl4arg102 lam5n17)
v556 t399 = -2, int := #1030: (+ (* Nl4arg101 lam5n16) (* Nl4arg102 lam5n17))
v557 j400 = 0, int := #1032: (* Nl4arg111 lam5n16)
v558 j401 = 0, int := #1033: (* Nl4arg112 lam5n17)
v559 t402 = 0, int := #1034: (+ (* Nl4arg111 lam5n16) (* Nl4arg112 lam5n17))
v560 j403 = 0, int := #1036: (* Nl4arg121 lam5n16)
v561 j404 = 0, int := #1037: (* Nl4arg122 lam5n17)
v562 t405 = 0, int := #1038: (+ (* Nl4arg121 lam5n16) (* Nl4arg122 lam5n17))
v563 j406 = 0, int := #1040: (* Nl4arg131 lam5n16)
v564 j407 = 0, int := #1041: (* Nl4arg132 lam5n17)
v565 t408 = 0, int := #1042: (+ (* Nl4arg131 lam5n16) (* Nl4arg132 lam5n17))
v566 j410 = 4, int := #1247: (* Nl4arg22 lam10n20)
v567 j409 = 2, int := #1218: lam10n20
v568 j412 = 0, int := #1246: (* Nl4arg21 lam10n19)
v569 j411 = 0, int := #1216: lam10n19
v570 t413 = 4, int := #3805: (+ (* Nl4arg21 lam10n19) (* Nl4arg22 lam10n20))
v571 248 l_true := #3806: (>= (+ (* Nl4arg21 lam10n19) (* Nl4arg22 lam10n20)) 0)
v572 j414 = 0, int := #1489: lam6n8
v573 t415 = 0, int := #4096: (+ (* -1 lam6n8) (* -1 Nl4arg11))
v574 249 l_true := #4107: (>= (+ (* -1 lam6n8) (* -1 Nl4arg11)) 0)
v575 250 l_false := #4109: (<= Nl4arg21 0)
v576 j416 = 0, int := #1485: lam6n6
v577 251 l_true := #1486: (>= lam6n6 0)
v578 252 l_true := #4114: (<= Nl4arg31 0)
v579 t417 = 0, int := #4098: (+ lam6n8 Nl4arg11)
v580 253 l_true := #4115: (>= (+ lam6n8 Nl4arg11) 0)
v581 254 l_true := #1490: (>= lam6n8 0)
v582 t418 = 0, int := #4124: (+ (* -15 Nl4arg11) (* -2 Nl4arg31) (* -536870905 lam6n6) (* -1 Nl4CT1) (* -1 Nl4arg41) (* -16 Nl4arg51) (* -12 Nl4arg71))
v583 255 l_false := #4119: (<= (+ (* -15 Nl4arg11) (* -2 Nl4arg31) (* -536870905 lam6n6) (* -1 Nl4CT1) (* -1 Nl4arg41) (* -16 Nl4arg51) (* -12 Nl4arg71)) -1)
v584 j419 = 0, int := #1552: lam7n8
v585 t420 = 0, int := #4130: (+ (* -1 lam7n8) (* -1 Nl4arg12))
v586 256 l_true := #4135: (>= (+ (* -1 lam7n8) (* -1 Nl4arg12)) 0)
v587 257 l_false := #4137: (<= Nl4arg22 0)
v588 j421 = -2, int := #1548: lam7n6
v589 258 l_false := #1549: (>= lam7n6 0)
v590 259 l_true := #4142: (<= Nl4arg32 0)
v591 t422 = 0, int := #4129: (+ lam7n8 Nl4arg12)
v592 260 l_true := #4143: (>= (+ lam7n8 Nl4arg12) 0)
v593 261 l_true := #1553: (>= lam7n8 0)
v594 t423 = 1073741810, int := #4150: (+ (* -15 Nl4arg12) (* -2 Nl4arg32) (* -536870905 lam7n6) (* -1 Nl4CT2) (* -1 Nl4arg42) (* -16 Nl4arg52) (* -12 Nl4arg72))
v595 262 l_false := #4147: (<= (+ (* -15 Nl4arg12) (* -2 Nl4arg32) (* -536870905 lam7n6) (* -1 Nl4CT2) (* -1 Nl4arg42) (* -16 Nl4arg52) (* -12 Nl4arg72)) -1)
v596 j424 = 0, int := #1615: lam8n8
v597 t425 = 0, int := #4156: (+ (* -1 lam8n8) (* -1 Nl4arg11))
v598 263 l_true := #4161: (>= (+ (* -1 lam8n8) (* -1 Nl4arg11)) 0)
v599 j426 = 0, int := #1611: lam8n6
v600 264 l_true := #1612: (>= lam8n6 0)
v601 t427 = 0, int := #4155: (+ lam8n8 Nl4arg11)
v602 265 l_true := #4165: (>= (+ lam8n8 Nl4arg11) 0)
v603 266 l_true := #1616: (>= lam8n8 0)
v604 267 l_true := #4166: (<= lam8n6 0)
v605 t428 = 0, int := #4172: (+ (* -15 Nl4arg11) (* -2 Nl4arg31) (* -536870906 lam8n6) (* -1 Nl4CT1) (* -1 Nl4arg41) (* -16 Nl4arg51) (* -12 Nl4arg71))
v606 268 l_false := #4173: (<= (+ (* -15 Nl4arg11) (* -2 Nl4arg31) (* -536870906 lam8n6) (* -1 Nl4CT1) (* -1 Nl4arg41) (* -16 Nl4arg51) (* -12 Nl4arg71)) -1)
v607 j429 = 0, int := #1670: lam9n8
v608 t430 = 0, int := #4179: (+ (* -1 lam9n8) (* -1 Nl4arg12))
v609 269 l_true := #4184: (>= (+ (* -1 lam9n8) (* -1 Nl4arg12)) 0)
v610 j431 = 2, int := #1666: lam9n6
v611 270 l_true := #1667: (>= lam9n6 0)
v612 t432 = 0, int := #4178: (+ lam9n8 Nl4arg12)
v613 271 l_true := #4188: (>= (+ lam9n8 Nl4arg12) 0)
v614 272 l_true := #1671: (>= lam9n8 0)
v615 273 l_false := #4189: (<= lam9n6 0)
v616 t433 = -1073741812, int := #4194: (+ (* -15 Nl4arg12) (* -2 Nl4arg32) (* -536870906 lam9n6) (* -1 Nl4CT2) (* -1 Nl4arg42) (* -16 Nl4arg52) (* -12 Nl4arg72))
v617 274 l_true := #4195: (<= (+ (* -15 Nl4arg12) (* -2 Nl4arg32) (* -536870906 lam9n6) (* -1 Nl4CT2) (* -1 Nl4arg42) (* -16 Nl4arg52) (* -12 Nl4arg72)) -1)
v618 j434 = 0, int := #1242: (* Nl4arg12 lam10n20)
v619 j440 = 0, int := #1212: lam10n17
v620 j435 = 0, int := #1277: (* Nl4arg71 lam10n19)
v621 j436 = 0, int := #1278: (* Nl4arg72 lam10n20)
v622 j437 = 0, int := #1270: (* Nl4arg61 lam10n19)
v623 j438 = 0, int := #1271: (* Nl4arg62 lam10n20)
v624 j441 = 0, int := #1208: lam10n15
v625 j439 = 0, int := #1241: (* Nl4arg11 lam10n19)
v626 t442 = 0, int := #3867: (+ (* -1 lam10n17) (* Nl4arg71 lam10n19) (* Nl4arg72 lam10n20) (* Nl4arg61 lam10n19) (* Nl4arg62 lam10n20) (* -1 lam10n15) (* Nl4arg11 lam10n19) (* Nl4arg12 lam10n20))
v627 278 l_true := #3868: (>= (+ (* -1 lam10n17) (* Nl4arg71 lam10n19) (* Nl4arg72 lam10n20) (* Nl4arg61 lam10n19) (* Nl4arg62 lam10n20) (* -1 lam10n15) (* Nl4arg11 lam10n19) (* Nl4arg12 lam10n20)) 0)
v628 j443 = 0, int := #1253: (* Nl4arg32 lam10n20)
v629 j447 = 0, int := #1190: lam10n6
v630 j444 = 0, int := #1258: (* Nl4arg41 lam10n19)
v631 j445 = 0, int := #1259: (* Nl4arg42 lam10n20)
v632 j446 = 0, int := #1252: (* Nl4arg31 lam10n19)
v633 t448 = 0, int := #3893: (+ (* -1 lam10n6) (* Nl4arg41 lam10n19) (* Nl4arg42 lam10n20) (* Nl4arg31 lam10n19) (* Nl4arg32 lam10n20))
v634 279 l_true := #3894: (>= (+ (* -1 lam10n6) (* Nl4arg41 lam10n19) (* Nl4arg42 lam10n20) (* Nl4arg31 lam10n19) (* Nl4arg32 lam10n20)) 0)
v635 280 l_true := #1191: (>= lam10n6 0)
v636 j449 = 0, int := #1202: lam10n12
v637 t450 = 0, int := #3830: (+ (* -1 lam10n12) lam10n17 (* -1 (* Nl4arg71 lam10n19)) (* -1 (* Nl4arg72 lam10n20)))
v638 281 l_true := #3895: (>= (+ (* -1 lam10n12) lam10n17 (* -1 #1277) (* -1 #1278)) 0)
v639 t451 = 0, int := #3844: (+ (* -1 lam10n12) lam10n17 (* -1 (* Nl4arg71 lam10n19)) (* -1 (* Nl4arg72 lam10n20)) (* -1 (* Nl4arg61 lam10n19)) (* -1 (* Nl4arg62 lam10n20)))
v640 282 l_true := #3896: (>= (+ (* -1 lam10n12) lam10n17 (* -1 #1277) (* -1 #1278) (* -1 #1270) (* -1 #1271)) 0)
v641 283 l_true := #1203: (>= lam10n12 0)
v642 t452 = 0, int := #3875: (+ lam10n6 (* -1 (* Nl4arg41 lam10n19)) (* -1 (* Nl4arg42 lam10n20)))
v643 284 l_true := #3897: (>= (+ lam10n6 (* -1 #1258) (* -1 #1259)) 0)
v644 285 l_true := #3898: (<= lam10n17 0)
v645 286 l_true := #1209: (>= lam10n15 0)
v646 287 l_true := #1213: (>= lam10n17 0)
v647 j453 = 0, int := #1265: (* Nl4arg52 lam10n20)
v648 j454 = 0, int := #1264: (* Nl4arg51 lam10n19)
v649 t455 = 0, int := #4009: (+ (* Nl4arg51 lam10n19) (* Nl4arg52 lam10n20))
v650 288 l_true := #4012: (>= (+ (* Nl4arg51 lam10n19) (* Nl4arg52 lam10n20)) 0)
v651 289 l_true := #1217: (>= lam10n19 0)
v652 290 l_true := #1219: (>= lam10n20 0)
v653 j456 = 0, int := #1234: (* Nl4CT2 lam10n20)
v654 j457 = 0, int := #1233: (* Nl4CT1 lam10n19)
v655 t458 = 4, int := #3206: (+ (* Nl4arg21 lam10n19) (* Nl4arg22 lam10n20) (* 1073741825 (* Nl4arg51 lam10n19)) (* 1073741825 (* Nl4arg52 lam10n20)) lam10n17 (* Nl4arg71 lam10n19) (* Nl4arg72 lam10n20) (* Nl4arg61 lam10n19) (* Nl4arg62 lam10n20) (* 2 lam10n6) (* -2 (* Nl4arg41 lam10n19)) (* -2 (* Nl4arg42 lam10n20)) (* 4 (* Nl4arg11 lam10n19)) (* 4 (* Nl4arg12 lam10n20)) (* Nl4CT1 lam10n19) (* Nl4CT2 lam10n20) ...)
v656 291 l_false := #3165: (<= (+ (* Nl4arg21 lam10n19) (* Nl4arg22 lam10n20) (* 1073741825 #1264) (* 1073741825 #1265) lam10n17 (* Nl4arg71 lam10n19) (* Nl4arg72 lam10n20) (* Nl4arg61 lam10n19) (* Nl4arg62 lam10n20) (* 2 lam10n6) (* -2 #1258) (* -2 #1259) (* 4 #1241) (* 4 #1242) (* Nl4CT1 lam10n19) (* Nl4CT2 lam10n20) ...) 1)
v657 j459 = 0, int := #1281: (* Nl4arg81 lam10n19)
v658 j460 = 0, int := #1282: (* Nl4arg82 lam10n20)
v659 t461 = 0, int := #1283: (+ (* Nl4arg81 lam10n19) (* Nl4arg82 lam10n20))
v660 j462 = 0, int := #1285: (* Nl4arg91 lam10n19)
v661 j463 = 0, int := #1286: (* Nl4arg92 lam10n20)
v662 t464 = 0, int := #1287: (+ (* Nl4arg91 lam10n19) (* Nl4arg92 lam10n20))
v663 j465 = 0, int := #1289: (* Nl4arg101 lam10n19)
v664 j466 = 0, int := #1290: (* Nl4arg102 lam10n20)
v665 t467 = 0, int := #1291: (+ (* Nl4arg101 lam10n19) (* Nl4arg102 lam10n20))
v666 j468 = 0, int := #1293: (* Nl4arg111 lam10n19)
v667 j469 = 0, int := #1294: (* Nl4arg112 lam10n20)
v668 t470 = 0, int := #1295: (+ (* Nl4arg111 lam10n19) (* Nl4arg112 lam10n20))
v669 j471 = 0, int := #1297: (* Nl4arg121 lam10n19)
v670 j472 = 0, int := #1298: (* Nl4arg122 lam10n20)
v671 t473 = 0, int := #1299: (+ (* Nl4arg121 lam10n19) (* Nl4arg122 lam10n20))
v672 j474 = 0, int := #1301: (* Nl4arg131 lam10n19)
v673 j475 = 0, int := #1302: (* Nl4arg132 lam10n20)
v674 t476 = 0, int := #1303: (+ (* Nl4arg131 lam10n19) (* Nl4arg132 lam10n20))
v675 299 l_true := #8284: (<= (* Nl4arg52 lam3n17) 0)
v676 301 l_true := #8286: (<= (* Nl4arg21 lam0n17) 0)
v677 302 l_true := #8288: (<= (* Nl4arg21 lam3n16) 0)
v678 303 l_false := #8289: (<= (* Nl4arg22 lam0n18) 0)
v679 304 l_false := #8290: (<= (* Nl4arg22 lam3n17) 0)
v680 305 l_true := #8291: (<= (* Nl4arg11 lam0n17) 0)
v681 306 l_true := #8292: (<= (* Nl4arg12 lam3n17) 0)
v682 307 l_true := #8293: (<= (* Nl4arg12 lam0n18) 0)
v683 308 l_true := #8294: (<= (* Nl4arg11 lam3n16) 0)
v684 309 l_true := #8295: (<= (* Nl4arg31 lam0n17) 0)
v685 310 l_true := #8296: (<= (* Nl4arg31 lam3n16) 0)
v686 311 l_true := #8297: (<= (* Nl4arg32 lam0n18) 0)
v687 312 l_true := #8298: (<= (* Nl4arg32 lam3n17) 0)
v688 313 l_true := #8299: (<= Nl4CT1 0)
v689 314 l_false := #8300: (>= Nl4CT1 0)
v690 315 l_true := #8301: (<= (* Nl4CT1 lam3n16) 0)
v691 316 l_true := #8302: (<= (* Nl4CT1 lam0n17) 0)
v692 317 l_true := #8303: (>= (* Nl4CT1 lam4n16) 0)
v693 318 l_true := #8304: (<= (* Nl4arg52 lam0n18) 0)
v694 319 l_false := #8305: (>= (* Nl4CT1 lam1n17) 0)
v695 320 l_true := #8306: (<= lam3n16 0)
v696 321 l_true := #8307: (<= lam0n17 0)
v697 322 l_true := #8308: (>= Nl4arg41 0)
v698 323 l_true := #8309: (>= (* Nl4arg41 lam0n17) 0)
v699 324 l_true := #8310: (>= (* Nl4arg41 lam3n16) 0)
v700 325 l_true := #8311: (<= Nl4arg42 0)
v701 326 l_false := #8312: (<= lam0n18 0)
v702 327 l_true := #8313: (<= (* Nl4arg42 lam0n18) 0)
v703 328 l_false := #8314: (<= lam3n17 0)
v704 329 l_true := #8315: (<= (* Nl4arg42 lam3n17) 0)
v705 330 l_false := #8316: (<= (* Nl4arg41 lam5n16) 0)
v706 331 l_true := #8317: (<= (* Nl4arg32 lam5n17) 0)
v707 332 l_false := #8318: (<= lam2n17 0)
v708 333 l_true := #8319: (<= (* Nl4CT1 lam2n17) 0)
v709 334 l_true := #8320: (<= lam2n18 0)
v710 335 l_true := #8321: (<= (* Nl4arg42 lam2n18) 0)
v711 336 l_true := #8322: (>= Nl4arg32 0)
v712 337 l_true := #8323: (>= (* Nl4arg32 lam0n18) 0)
v713 338 l_false := #8324: (<= lam5n16 0)
v714 339 l_true := #8325: (<= (* Nl4CT1 lam5n16) 0)
v715 340 l_true := #8326: (<= lam5n17 0)
v716 341 l_true := #8327: (<= (* Nl4arg42 lam5n17) 0)
v717 342 l_true := #8328: (>= (* Nl4arg32 lam3n17) 0)
v718 343 l_false := #8329: (<= Nl4arg12 -1)
v719 344 l_false := #8330: (<= (* Nl4arg12 lam5n17) -1)
v720 345 l_false := #8331: (<= (* Nl4arg41 lam5n16) -1)
v721 346 l_false := #8332: (<= (* Nl4arg12 lam0n18) -1)
v722 347 l_false := #8333: (<= (* Nl4arg12 lam2n18) -1)
v723 348 l_false := #8334: (<= (* Nl4arg12 lam3n17) -1)
v724 349 l_true := #8335: (<= (* Nl4arg11 lam5n16) 0)
v725 350 l_true := #8336: (<= (* Nl4arg11 undef28) 0)
v726 351 l_true := #8337: (<= (* Nl4arg11 lam2n17) 0)
v727 353 l_true := #8338: (<= (* Nl4arg21 undef29) 0)
v728 355 l_false := #8340: (<= Nl4arg41 0)
v729 356 l_true := #8342: (>= Nl4arg31 0)
v730 357 l_true := #8343: (>= (* Nl4arg31 lam5n16) 0)
v731 358 l_true := #8344: (<= lam4n16 0)
v732 359 l_false := #8345: (<= (* Nl4CT1 lam4n16) 0)
v733 360 l_true := #8346: (>= (* Nl4arg31 lam4n16) 0)
v734 361 l_true := #8347: (>= (* Nl4arg31 lam3n16) 0)
v735 362 l_false := #8348: (<= (* Nl4arg41 lam2n17) 0)
v736 363 l_true := #8349: (>= (* Nl4arg31 lam2n17) 0)
v737 364 l_true := #8350: (>= (* Nl4arg31 lam0n17) 0)
v738 365 l_false := #8351: (>= (* Nl4arg41 lam0n17) 1)
v739 366 l_true := #8352: (>= Nl4arg11 0)
v740 367 l_true := #8353: (>= (* Nl4arg11 lam4n16) 0)
v741 368 l_true := #8354: (>= (* Nl4arg11 lam3n16) 0)
v742 369 l_true := #8355: (>= (* Nl4arg11 lam2n17) 0)
v743 370 l_false := #8356: (<= lam1n17 0)
v744 371 l_true := #8357: (<= (* Nl4CT1 lam1n17) 0)
v745 372 l_false := #8358: (<= (* Nl4arg41 lam1n17) 0)
v746 373 l_true := #8359: (>= (* Nl4arg11 lam5n16) 0)
v747 374 l_true := #8360: (>= (* Nl4arg11 lam0n17) 0)
v748 375 l_false := #8361: (<= (* Nl4arg41 lam2n17) -1)
v749 376 l_true := #8362: (<= undef40 0)
v750 377 l_true := #8363: (>= undef40 0)
v751 378 l_true := #8364: (<= undef39 0)
v752 379 l_true := #8365: (>= undef39 0)
v753 380 l_true := #8366: (>= Nl4CT2 0)
v754 381 l_true := #8367: (>= (* Nl4CT2 lam3n17) 0)
v755 382 l_true := #8368: (>= (* Nl4CT2 lam2n18) 0)
v756 383 l_true := #8369: (>= (* Nl4CT2 lam0n18) 0)
v757 384 l_true := #8370: (>= Nl4arg22 0)
v758 385 l_true := #8371: (<= lam1n18 0)
v759 386 l_true := #8372: (>= (* Nl4arg22 lam1n18) 0)
v760 387 l_true := #8373: (>= (* Nl4CT2 lam5n17) 0)
v761 388 l_false := #8374: (<= (* Nl4arg21 lam2n17) 0)
v762 t477 = 0, int := #1872: (* -1 Nl4CT2)
v763 t478 = 0, int := #8375: (+ (* Nl4CT2 lam0n18) (* -1 Nl4CT2))
v764 391 l_true := #8377: (<= (+ (* Nl4CT2 lam0n18) (* -1 Nl4CT2)) 0)
v765 t479 = 0, int := #8379: (+ (* Nl4CT2 lam2n18) (* -1 Nl4CT2))
v766 395 l_true := #8383: (<= (+ (* Nl4CT2 lam2n18) (* -1 Nl4CT2)) 0)
v767 t480 = 0, int := #8384: (+ (* Nl4CT2 lam3n17) (* -1 Nl4CT2))
v768 398 l_true := #8386: (<= (+ (* Nl4CT2 lam3n17) (* -1 Nl4CT2)) 0)
v769 403 l_true := #8388: (<= Nl4CT1 1)
v770 404 l_false := #8393: (>= Nl4CT1 1)
v771 405 l_false := #8394: (<= (* Nl4arg21 lam5n16) 0)
v772 418 l_true := #8407: (<= (+ (* -1 lam0n11) lam0n15 (* Nl4arg51 lam0n17) (* Nl4arg52 lam0n18)) 0)
v773 419 l_true := #8408: (>= (+ (* -1 lam0n11) lam0n15 (* Nl4arg51 lam0n17) (* Nl4arg52 lam0n18)) 0)
v774 420 l_true := #8409: (<= (* Nl4CT1 lam0n17) 1)
v775 421 l_false := #8410: (>= (* Nl4CT1 lam0n17) 1)
v776 422 l_true := #8411: (<= lam0n5 0)
v777 425 l_true := #8414: (<= lam0n3 0)
v778 426 l_true := #8415: (<= lam3n17 1)
v779 427 l_true := #8416: (>= lam3n17 1)
v780 428 l_true := #8417: (>= Nl4arg21 0)
v781 429 l_false := #8418: (<= (* Nl4arg21 lam0n17) -1)
v782 430 l_false := #8419: (<= (* Nl4arg21 lam2n17) -1)
v783 431 l_false := #8420: (<= (* Nl4arg21 lam3n16) -1)
v784 432 l_true := #8421: (<= lam0n18 1)
v785 433 l_true := #8422: (>= lam0n18 1)
v786 434 l_true := #8423: (<= lam0n2 0)
v787 435 l_true := #8424: (<= lam0n6 0)
v788 t481 = 0, int := #8425: (+ (* Nl4arg41 lam3n16) lam3n16)
v789 438 l_true := #8427: (<= (+ (* Nl4arg41 lam3n16) lam3n16) 0)
v790 t482 = 0, int := #8429: (+ (* Nl4CT2 lam5n17) (* -1 Nl4CT2))
v791 439 l_true := #8430: (<= (+ (* Nl4CT2 lam5n17) (* -1 Nl4CT2)) 0)
v792 t483 = 0, int := #8431: (+ lam0n17 (* Nl4arg41 lam0n17))
v793 441 l_true := #8432: (<= (+ lam0n17 (* Nl4arg41 lam0n17)) 0)
v794 t484 = 2, int := #8434: (+ lam2n17 (* Nl4arg41 lam2n17))
v795 443 l_false := #8435: (<= (+ lam2n17 (* Nl4arg41 lam2n17)) 0)
v796 444 l_true := #8437: (<= (+ (* -1 lam0n7) (* -1 lam0n8) (* -1 lam0n12) (* Nl4arg11 lam0n17) (* Nl4arg12 lam0n18)) 0)
v797 445 l_true := #8438: (>= (+ (* -1 lam0n7) (* -1 lam0n8) (* -1 lam0n12) (* Nl4arg11 lam0n17) (* Nl4arg12 lam0n18)) 0)
v798 446 l_true := #8439: (<= (+ lam0n7 (* Nl4arg61 lam0n17) (* Nl4arg62 lam0n18)) 0)
v799 447 l_true := #8440: (>= (+ lam0n7 (* Nl4arg61 lam0n17) (* Nl4arg62 lam0n18)) 0)
v800 448 l_true := #8441: (<= (+ (* -1 lam0n9) (* -1 lam0n10) (* Nl4arg31 lam0n17) (* Nl4arg32 lam0n18)) 0)
v801 449 l_true := #8442: (>= (+ (* -1 lam0n9) (* -1 lam0n10) (* Nl4arg31 lam0n17) (* Nl4arg32 lam0n18)) 0)
v802 450 l_true := #8443: (<= (+ (* -1 lam0n4) lam0n15 (* -1 lam0n16)) 0)
v803 451 l_true := #8444: (>= (+ (* -1 lam0n4) lam0n15 (* -1 lam0n16)) 0)
v804 452 l_true := #8445: (>= (+ (* Nl4CT2 lam3n17) (* -1 Nl4CT2)) 0)
v805 473 l_true := #8466: (>= (+ (* Nl4arg41 lam3n16) lam3n16) 0)
v806 474 l_false := #8467: (<= Nl4arg41 -1)
v807 475 l_true := #8468: (>= Nl4arg41 -1)
v808 476 l_false := #8469: (<= (* Nl4arg41 lam0n17) -2)
v809 t485 = -1, int := #8470: (* -1 lam3n17)
v810 t486 = -1, int := #8472: (+ (* Nl4arg42 lam3n17) (* -1 lam3n17))
v811 t487 = 0, int := #8473: (+ (* Nl4CT2 lam2n18) lam2n18)
v812 481 l_true := #8476: (<= (+ (* Nl4CT2 lam2n18) lam2n18) 0)
v813 t488 = 0, int := #8478: (+ (* Nl4CT2 lam5n17) lam5n17)
v814 483 l_true := #8479: (<= (+ (* Nl4CT2 lam5n17) lam5n17) 0)
v815 484 l_false := #8481: (<= Nl4CT2 -1)
v816 485 l_true := #8482: (>= Nl4CT2 -1)
v817 486 l_false := #8483: (<= (* Nl4CT2 lam3n17) -4)
v818 t489 = 1, int := #8484: (+ lam3n17 (* Nl4CT2 lam3n17))
v819 487 l_false := #8485: (<= (+ lam3n17 (* Nl4CT2 lam3n17)) 0)
v820 t490 = 0, int := #8486: (* -1 lam2n18)
v821 t491 = 0, int := #8487: (+ (* Nl4arg42 lam2n18) (* -1 lam2n18))
v822 489 l_true := #8488: (<= Nl4arg42 1)
v823 490 l_false := #8490: (>= Nl4arg42 1)
v824 491 l_true := #8491: (<= (+ (* -1 lam3n9) (* -1 lam3n10) (* Nl4arg31 lam3n16) (* Nl4arg32 lam3n17)) 0)
v825 492 l_true := #8492: (>= (+ (* -1 lam3n9) (* -1 lam3n10) (* Nl4arg31 lam3n16) (* Nl4arg32 lam3n17)) 0)
v826 493 l_true := #8493: (<= (+ lam3n8 lam3n15 (* Nl4arg71 lam3n16) (* Nl4arg72 lam3n17)) 0)
v827 494 l_true := #8494: (>= (+ lam3n8 lam3n15 (* Nl4arg71 lam3n16) (* Nl4arg72 lam3n17)) 0)
v828 495 l_true := #8495: (<= lam3n3 0)
v829 496 l_true := #8496: (<= lam3n6 0)
v830 497 l_true := #8497: (>= (+ (* Nl4CT2 lam0n18) (* -1 Nl4CT2)) 0)
v831 498 l_true := #8498: (<= lam3n2 0)
v832 500 l_true := #8500: (>= (+ (* Nl4CT2 lam5n17) lam5n17) 0)
v833 501 l_true := #8501: (<= lam3n5 0)
v834 516 l_false := #8516: (<= (* Nl4CT2 lam0n18) -4)
v835 t492 = 1, int := #8517: (+ lam0n18 (* Nl4CT2 lam0n18))
v836 517 l_false := #8518: (<= (+ lam0n18 (* Nl4CT2 lam0n18)) 0)
v837 t493 = 0, int := #8519: (* -1 lam5n17)
v838 t494 = 0, int := #8520: (+ (* Nl4arg42 lam5n17) (* -1 lam5n17))
v839 519 l_true := #8521: (<= (+ lam3n7 (* Nl4arg61 lam3n16) (* Nl4arg62 lam3n17)) 0)
v840 520 l_true := #8523: (>= (+ lam3n7 (* Nl4arg61 lam3n16) (* Nl4arg62 lam3n17)) 0)
v841 521 l_true := #8524: (<= (+ (* -1 lam3n14) (* -1 lam3n15)) 0)
v842 522 l_true := #8525: (>= (+ (* -1 lam3n14) (* -1 lam3n15)) 0)
v843 j495 = 2, int := #5: 2
v844 t496 = 0, int := #8526: (* 2 Nl4arg32)
v845 t497 = 0, int := #2114: (* 16 Nl4arg52)
v846 t498 = 0, int := #2115: (* 12 Nl4arg72)
v847 t499 = -1, int := #8528: (* -1 lam0n18)
v848 j500 = 15, int := #1094: 15
v849 t501 = 0, int := #8529: (* 15 Nl4arg12)
v850 t502 = 0, int := #8530: (* -1 (* Nl4CT2 lam0n18))
v851 t503 = -1, int := #8531: (+ (* 2 Nl4arg32) Nl4CT2 Nl4arg42 (* 16 Nl4arg52) (* 12 Nl4arg72) (* -1 lam0n9) (* -1 lam0n1) (* -1 lam0n18) (* 15 Nl4arg12) (* -1 (* Nl4CT2 lam0n18)))
v852 533 l_true := #8541: (<= lam5n16 1)
v853 534 l_true := #8542: (>= lam5n16 1)
v854 536 l_true := #8544: (<= lam0n16 0)
v855 537 l_true := #8545: (>= (+ (* Nl4CT2 lam2n18) lam2n18) 0)
v856 538 l_true := #8546: (<= Nl4CT2 0)
v857 539 l_true := #8547: (>= Nl4arg42 0)
v858 540 l_true := #8548: (<= (+ (* -1 lam0n1) lam0n10 (* Nl4arg41 lam0n17) (* Nl4arg42 lam0n18)) 0)
v859 541 l_true := #8549: (>= (+ (* -1 lam0n1) lam0n10 (* Nl4arg41 lam0n17) (* Nl4arg42 lam0n18)) 0)
v860 542 l_false := #8550: (<= (* Nl4arg42 lam3n17) -2)
v861 543 l_true := #8551: (<= (+ (* -1 lam3n11) (* -1 lam3n15) (* Nl4arg51 lam3n16) (* Nl4arg52 lam3n17)) 0)
v862 544 l_true := #8552: (>= (+ (* -1 lam3n11) (* -1 lam3n15) (* Nl4arg51 lam3n16) (* Nl4arg52 lam3n17)) 0)
v863 545 l_true := #8553: (<= (+ (* -1 lam3n7) (* -1 lam3n8) (* -1 lam3n12) (* Nl4arg11 lam3n16) (* Nl4arg12 lam3n17)) 0)
v864 546 l_true := #8554: (>= (+ (* -1 lam3n7) (* -1 lam3n8) (* -1 lam3n12) (* Nl4arg11 lam3n16) (* Nl4arg12 lam3n17)) 0)
v865 547 l_true := #8555: (<= lam3n13 0)
v866 548 l_true := #8556: (<= (+ (* -1 lam3n4) (* -1 lam3n15)) 0)
v867 549 l_true := #8557: (>= (+ (* -1 lam3n4) (* -1 lam3n15)) 0)
v868 551 l_true := #8559: (>= (+ (* Nl4CT2 lam5n17) (* -1 Nl4CT2)) 0)
v869 t504 = 0, int := #1899: (* -1 Nl4arg42)
v870 t505 = 0, int := #4148: (* -15 Nl4arg12)
v871 t506 = 0, int := #3277: (* -2 Nl4arg32)
v872 t507 = 0, int := #2272: (* -16 Nl4arg52)
v873 t508 = 0, int := #2273: (* -12 Nl4arg72)
v874 t509 = 0, int := #8561: (+ (* -1 Nl4arg42) (* -15 Nl4arg12) (* -2 Nl4arg32) (* -1 Nl4CT2) (* -16 Nl4arg52) (* -12 Nl4arg72))
v875 555 l_true := #8563: (<= lam3n16 1)
v876 556 l_false := #8565: (>= lam3n16 1)
v877 558 l_true := #8567: (>= (+ (* Nl4CT2 lam2n18) (* -1 Nl4CT2)) 0)
v878 566 l_true := #8569: (<= (+ (* -1 lam0n0) (* Nl4arg21 lam0n17) (* Nl4arg22 lam0n18)) 0)
v879 567 l_true := #8576: (>= (+ (* -1 lam0n0) (* Nl4arg21 lam0n17) (* Nl4arg22 lam0n18)) 0)
v880 568 l_true := #8577: (<= (+ (* -1 lam0n14) lam0n15 (* -1 lam0n16)) 0)
v881 569 l_true := #8578: (>= (+ (* -1 lam0n14) lam0n15 (* -1 lam0n16)) 0)
v882 570 l_true := #8579: (<= lam0n13 0)
v883 571 l_true := #8580: (<= (+ (* 2 Nl4arg32) Nl4CT2 Nl4arg42 (* 16 Nl4arg52) (* 12 Nl4arg72) (* -1 lam0n9) (* -1 lam0n1) (* -1 lam0n18) (* 15 Nl4arg12) (* -1 #145)) -1)
v884 572 l_true := #8581: (>= (+ (* 2 Nl4arg32) Nl4CT2 Nl4arg42 (* 16 Nl4arg52) (* 12 Nl4arg72) (* -1 lam0n9) (* -1 lam0n1) (* -1 lam0n18) (* 15 Nl4arg12) (* -1 #145)) -1)
v885 584 l_true := #8593: (<= (+ lam0n8 (* -1 lam0n15) (* Nl4arg71 lam0n17) (* Nl4arg72 lam0n18)) 0)
v886 585 l_true := #8594: (>= (+ lam0n8 (* -1 lam0n15) (* Nl4arg71 lam0n17) (* Nl4arg72 lam0n18)) 0)
v887 588 l_true := #8597: (<= (+ (* -1 Nl4arg42) (* -15 Nl4arg12) (* -2 Nl4arg32) (* -1 Nl4CT2) (* -16 Nl4arg52) (* -12 Nl4arg72)) 0)
v888 589 l_true := #8598: (>= (+ (* -1 Nl4arg42) (* -15 Nl4arg12) (* -2 Nl4arg32) (* -1 Nl4CT2) (* -16 Nl4arg52) (* -12 Nl4arg72)) 0)
v889 602 l_false := #8611: (<= (* Nl4arg42 lam5n17) -1)
v890 603 l_false := #8612: (>= (* Nl4CT2 lam5n17) 1)
v891 604 l_true := #8613: (<= Nl4arg91 0)
v892 605 l_true := #8614: (>= Nl4arg91 0)
v893 606 l_true := #8615: (<= Nl4arg102 0)
v894 607 l_true := #8616: (>= Nl4arg102 0)
v895 608 l_true := #8617: (<= Nl4arg111 0)
v896 609 l_true := #8618: (>= Nl4arg111 0)
v897 610 l_true := #8619: (<= Nl4arg121 0)
v898 611 l_true := #8620: (>= Nl4arg121 0)
v899 612 l_true := #8621: (<= (+ (* Nl4arg101 lam1n17) (* Nl4arg102 lam1n18)) 0)
v900 613 l_false := #8622: (>= (+ (* Nl4arg101 lam1n17) (* Nl4arg102 lam1n18)) 0)
v901 614 l_true := #8623: (<= (+ (* Nl4arg111 lam4n16) (* Nl4arg112 lam4n17)) 0)
v902 615 l_true := #8624: (>= (+ (* Nl4arg111 lam4n16) (* Nl4arg112 lam4n17)) 0)
v903 616 l_true := #8625: (<= (+ (* Nl4arg91 lam1n17) (* Nl4arg92 lam1n18)) 0)
v904 617 l_true := #8626: (>= (+ (* Nl4arg91 lam1n17) (* Nl4arg92 lam1n18)) 0)
v905 618 l_false := #8627: (<= (+ (* Nl4arg101 lam4n16) (* Nl4arg102 lam4n17)) 0)
v906 619 l_true := #8628: (>= (+ (* Nl4arg101 lam4n16) (* Nl4arg102 lam4n17)) 0)
v907 620 l_true := #8629: (<= (+ (* Nl4arg111 lam1n17) (* Nl4arg112 lam1n18)) 0)
v908 621 l_true := #8630: (>= (+ (* Nl4arg111 lam1n17) (* Nl4arg112 lam1n18)) 0)
v909 622 l_true := #8631: (<= (+ (* Nl4arg121 lam4n16) (* Nl4arg122 lam4n17)) 0)
v910 623 l_true := #8632: (>= (+ (* Nl4arg121 lam4n16) (* Nl4arg122 lam4n17)) 0)
v911 624 l_true := #8633: (<= (+ (* Nl4arg101 lam2n17) (* Nl4arg102 lam2n18)) 0)
v912 625 l_false := #8634: (>= (+ (* Nl4arg101 lam2n17) (* Nl4arg102 lam2n18)) 0)
v913 626 l_false := #8635: (<= (* Nl4arg121 lam1n17) -1)
v914 627 l_false := #8636: (<= (* Nl4arg102 lam0n18) -2)
v915 628 l_false := #8637: (<= (* Nl4arg102 lam3n17) -2)
v916 629 l_false := #8638: (<= (* Nl4arg91 lam4n16) -1)
v917 630 l_false := #8639: (<= (* Nl4arg102 lam5n17) -1)
v918 t525 = 0, int := #8642: (+ (* Nl4arg91 undef36) (* -1 (* Nl4arg92 undef36)))
v919 631 l_true := #8640: (<= (+ (* Nl4arg91 undef36) (* -1 #2120)) 0)
v920 632 l_true := #8643: (>= (+ (* Nl4arg91 undef36) (* -1 #2120)) 0)
v921 633 l_true := #8644: (<= (+ (* Nl4arg101 lam5n16) (* Nl4arg102 lam5n17)) 0)
v922 634 l_false := #8645: (>= (+ (* Nl4arg101 lam5n16) (* Nl4arg102 lam5n17)) 0)
v923 635 l_false := #8646: (>= (* Nl4arg102 lam2n18) 1)
v924 636 l_false := #8647: (>= (* Nl4arg102 lam3n17) 2)
v925 637 l_false := #8648: (>= (* Nl4arg91 lam4n16) 1)
v926 638 l_true := #8649: (>= (* Nl4arg102 lam4n17) 0)
v927 639 l_false := #8650: (>= (* Nl4arg102 lam5n17) 1)
v928 640 l_false := #8651: (>= (* Nl4arg102 lam0n18) 2)
v929 641 l_false := #8652: (>= (* Nl4arg91 lam1n17) 1)
v930 642 l_false := #8653: (>= (* Nl4arg102 lam1n18) 1)
v931 643 l_false := #8654: (<= (* Nl4arg111 lam1n17) -1)
v932 t526 = 0, int := #8657: (+ (* Nl4arg121 undef39) (* -1 (* Nl4arg122 undef39)))
v933 644 l_true := #8655: (<= (+ (* Nl4arg121 undef39) (* -1 #2123)) 0)
v934 645 l_true := #8658: (>= (+ (* Nl4arg121 undef39) (* -1 #2123)) 0)
v935 t527 = 0, int := #8661: (+ (* Nl4arg71 lam0n17) (* -1 (* Nl4arg91 lam0n17)))
v936 646 l_true := #8659: (<= (+ (* Nl4arg71 lam0n17) (* -1 #194)) 0)
v937 647 l_true := #8662: (>= (+ (* Nl4arg71 lam0n17) (* -1 #194)) 0)
v938 648 l_false := #8663: (<= (* Nl4arg91 lam1n17) -1)
v939 649 l_false := #8664: (>= (* Nl4arg121 undef39) 1)
v940 650 l_false := #8665: (<= (* Nl4arg121 lam0n17) -1)
v941 651 l_false := #8666: (>= (* Nl4CT2 lam0n18) 2)
v942 652 l_false := #8667: (<= (* Nl4arg91 lam0n17) -1)
v943 653 l_false := #8668: (>= (* Nl4arg121 lam4n16) 1)
v944 654 l_false := #8669: (>= (* Nl4arg91 lam0n17) 1)
v945 655 l_false := #8670: (>= (* Nl4arg121 lam0n17) 1)
v946 656 l_true := #8671: (<= Nl4arg112 0)
v947 657 l_true := #8672: (>= Nl4arg112 0)
v948 658 l_true := #8673: (<= Nl4arg132 0)
v949 659 l_true := #8674: (>= Nl4arg132 0)
v950 660 l_true := #8675: (<= (+ (* Nl4arg121 lam1n17) (* Nl4arg122 lam1n18)) 0)
v951 661 l_true := #8676: (>= (+ (* Nl4arg121 lam1n17) (* Nl4arg122 lam1n18)) 0)
v952 t528 = 0, int := #8679: (+ (* Nl4arg131 undef40) (* -1 (* Nl4arg132 undef40)))
v953 662 l_true := #8677: (<= (+ (* Nl4arg131 undef40) (* -1 #2124)) 0)
v954 663 l_true := #8680: (>= (+ (* Nl4arg131 undef40) (* -1 #2124)) 0)
v955 664 l_true := #8681: (<= (+ (* Nl4arg131 lam2n17) (* Nl4arg132 lam2n18)) 0)
v956 665 l_true := #8682: (>= (+ (* Nl4arg131 lam2n17) (* Nl4arg132 lam2n18)) 0)
v957 666 l_true := #8683: (<= (+ (* Nl4arg131 lam4n16) (* Nl4arg132 lam4n17)) 0)
v958 667 l_true := #8684: (>= (+ (* Nl4arg131 lam4n16) (* Nl4arg132 lam4n17)) 0)
v959 668 l_true := #8685: (<= (+ (* Nl4arg131 lam5n16) (* Nl4arg132 lam5n17)) 0)
v960 669 l_true := #8686: (>= (+ (* Nl4arg131 lam5n16) (* Nl4arg132 lam5n17)) 0)
v961 670 l_true := #8687: (<= (+ (* Nl4arg111 lam5n16) (* Nl4arg112 lam5n17)) 0)
v962 671 l_true := #8688: (>= (+ (* Nl4arg111 lam5n16) (* Nl4arg112 lam5n17)) 0)
v963 672 l_false := #8689: (>= (* Nl4arg111 lam4n16) 1)
v964 673 l_false := #8690: (<= (* Nl4arg132 undef40) -1)
v965 674 l_false := #8691: (<= (* Nl4arg112 lam2n18) -1)
v966 675 l_false := #8692: (<= (* Nl4arg112 lam0n18) -2)
v967 676 l_false := #8693: (<= (* Nl4arg132 lam0n18) -2)
v968 677 l_false := #8694: (<= (* Nl4arg132 lam3n17) -2)
v969 678 l_false := #8695: (<= (* Nl4arg112 lam3n17) -2)
v970 679 l_false := #8696: (<= (* Nl4arg132 lam1n18) -1)
v971 680 l_true := #8697: (<= (+ (* Nl4arg111 lam2n17) (* Nl4arg112 lam2n18)) 0)
v972 681 l_true := #8698: (>= (+ (* Nl4arg111 lam2n17) (* Nl4arg112 lam2n18)) 0)
v973 682 l_true := #8699: (<= (+ (* Nl4arg131 lam1n17) (* Nl4arg132 lam1n18)) 0)
v974 683 l_true := #8700: (>= (+ (* Nl4arg131 lam1n17) (* Nl4arg132 lam1n18)) 0)
v975 684 l_false := #8701: (>= (* Nl4arg132 lam5n17) 1)
v976 685 l_false := #8702: (>= (* Nl4arg112 lam5n17) 1)
v977 686 l_false := #8703: (>= (* Nl4arg112 lam0n18) 2)
v978 687 l_false := #8704: (>= (* Nl4arg132 lam0n18) 2)
v979 688 l_false := #8705: (>= (* Nl4arg112 lam1n18) 1)
v980 689 l_false := #8706: (>= (* Nl4arg132 lam1n18) 1)
v981 690 l_false := #8707: (>= (* Nl4arg112 lam2n18) 1)
v982 691 l_false := #8708: (>= (* Nl4arg132 lam2n18) 1)
v983 692 l_false := #8709: (>= (* Nl4arg112 lam3n17) 2)
v984 693 l_false := #8710: (>= (* Nl4arg132 lam3n17) 2)
v985 694 l_true := #8711: (>= (* Nl4arg112 lam4n17) 0)
v986 695 l_true := #8712: (>= (* Nl4arg132 lam4n17) 0)
v987 t529 = 0, int := #8715: (+ (* Nl4arg111 undef38) (* -1 (* Nl4arg112 undef38)))
v988 696 l_true := #8713: (<= (+ (* Nl4arg111 undef38) (* -1 #2122)) 0)
v989 697 l_true := #8716: (>= (+ (* Nl4arg111 undef38) (* -1 #2122)) 0)
v990 700 l_true := #8717: (<= undef38 0)
v991 701 l_false := #8720: (>= undef38 0)
v992 702 l_false := #8721: (<= (* Nl4arg111 undef38) -1)
v993 703 l_false := #8722: (>= (* Nl4arg111 undef38) 1)
v994 704 l_false := #8723: (>= (* Nl4arg111 lam1n17) 1)
v995 705 l_true := #8724: (<= undef36 0)
v996 706 l_false := #8725: (>= undef36 0)
v997 710 l_true := #8729: (<= (+ (* Nl4arg91 lam2n17) (* Nl4arg92 lam2n18)) 0)
v998 711 l_true := #8730: (>= (+ (* Nl4arg91 lam2n17) (* Nl4arg92 lam2n18)) 0)
v999 712 l_false := #8731: (<= (* Nl4arg121 lam2n17) -1)
v1000 713 l_false := #8732: (>= (* Nl4arg121 lam1n17) 1)
v1001 714 l_false := #8733: (<= (* Nl4arg111 lam2n17) -1)
v1002 715 l_false := #8734: (<= (* Nl4arg91 lam2n17) -1)
v1003 717 l_true := #8735: (<= undef35 0)
v1004 718 l_true := #8737: (>= undef35 0)
v1005 722 l_true := #8741: (<= (* Nl4arg91 undef36) 0)
v1006 723 l_true := #8742: (>= (* Nl4arg91 undef36) 0)
v1007 725 l_true := #8744: (<= (* Nl4arg122 undef39) 0)
v1008 726 l_true := #8745: (>= (* Nl4arg122 undef39) 0)
v1009 728 l_true := #8747: (<= (+ (* Nl4arg91 lam5n16) (* Nl4arg92 lam5n17)) 0)
v1010 729 l_true := #8748: (>= (+ (* Nl4arg91 lam5n16) (* Nl4arg92 lam5n17)) 0)
v1011 730 l_false := #8749: (>= (* Nl4CT2 lam2n18) 1)
v1012 t530 = 0, int := #8752: (+ (* Nl4arg101 undef37) (* -1 (* Nl4arg102 undef37)))
v1013 731 l_true := #8750: (<= (+ (* Nl4arg101 undef37) (* -1 #2121)) 0)
v1014 732 l_true := #8753: (>= (+ (* Nl4arg101 undef37) (* -1 #2121)) 0)
v1015 733 l_false := #8754: (>= (* Nl4arg91 lam2n17) 1)
v1016 737 l_true := #8757: (<= undef37 0)
v1017 738 l_true := #8759: (>= undef37 0)
v1018 t531 = 0, int := #8760: (* 2 lam1n18)
v1019 t532 = -2, int := #8761: (* -1 (* Nl4arg41 lam1n17))
v1020 t533 = 0, int := #8762: (* -1 (* Nl4arg42 lam1n18))
v1021 t534 = -1, int := #8763: (+ (* 2 lam1n18) Nl4arg41 (* -1 (* Nl4arg41 lam1n17)) (* -1 (* Nl4arg42 lam1n18)))
v1022 742 l_false := #8767: (<= (* Nl4arg121 lam4n16) -1)
v1023 743 l_false := #8768: (<= (* Nl4arg111 lam4n16) -1)
v1024 t535 = 0, int := #8769: (* 2 lam2n18)
v1025 t536 = 0, int := #8770: (* -1 (* Nl4arg31 lam2n17))
v1026 t537 = 0, int := #8771: (* -1 (* Nl4arg32 lam2n18))
v1027 t538 = -1, int := #8772: (* -1 (* Nl4arg41 lam2n17))
v1028 t539 = 0, int := #8773: (* -1 (* Nl4arg42 lam2n18))
v1029 t540 = -1, int := #8774: (+ Nl4arg32 (* 2 lam2n18) Nl4arg42 (* -1 (* Nl4arg31 lam2n17)) (* -1 (* Nl4arg32 lam2n18)) (* -1 (* Nl4arg41 lam2n17)) (* -1 (* Nl4arg42 lam2n18)))
v1030 749 l_true := #8780: (<= (* Nl4arg81 undef35) 0)
v1031 750 l_true := #8781: (>= (* Nl4arg81 undef35) 0)
v1032 t541 = -1, int := #8783: (+ Nl4arg42 (* -1 (* Nl4arg41 lam2n17)) (* -1 (* Nl4arg42 lam2n18)))
v1033 755 l_true := #8787: (<= Nl4arg92 0)
v1034 756 l_true := #8788: (>= Nl4arg92 0)
v1035 757 l_true := #8789: (<= Nl4arg122 0)
v1036 758 l_true := #8790: (>= Nl4arg122 0)
v1037 759 l_true := #8791: (<= (* Nl4arg92 lam2n18) 0)
v1038 760 l_true := #8792: (>= (* Nl4arg92 lam2n18) 0)
v1039 761 l_true := #8793: (<= (+ (* Nl4arg91 lam4n16) (* Nl4arg92 lam4n17)) 0)
v1040 762 l_true := #8794: (>= (+ (* Nl4arg91 lam4n16) (* Nl4arg92 lam4n17)) 0)
v1041 763 l_false := #8795: (<= (* Nl4arg92 lam0n18) -2)
v1042 764 l_false := #8796: (<= (* Nl4arg122 lam0n18) -2)
v1043 765 l_false := #8797: (>= (* Nl4arg92 undef36) 1)
v1044 766 l_false := #8798: (<= (* Nl4arg92 lam1n18) -1)
v1045 767 l_false := #8799: (<= (* Nl4arg122 lam1n18) -1)
v1046 768 l_false := #8800: (>= (* Nl4arg122 lam2n18) 1)
v1047 769 l_false := #8801: (<= (* Nl4arg92 lam3n17) -2)
v1048 770 l_false := #8802: (<= (* Nl4arg122 lam3n17) -2)
v1049 771 l_false := #8803: (<= (* Nl4arg92 lam5n17) -1)
v1050 t542 = 0, int := #8806: (+ (* Nl4arg71 lam3n16) (* -1 (* Nl4arg91 lam3n16)))
v1051 772 l_true := #8804: (<= (+ (* Nl4arg71 lam3n16) (* -1 #756)) 0)
v1052 773 l_true := #8807: (>= (+ (* Nl4arg71 lam3n16) (* -1 #756)) 0)
v1053 774 l_false := #8808: (>= (* Nl4arg92 lam0n18) 2)
v1054 775 l_false := #8809: (>= (* Nl4arg122 lam0n18) 2)
v1055 776 l_false := #8810: (<= (* Nl4arg91 lam3n16) -2)
v1056 777 l_false := #8811: (>= (* Nl4arg92 lam3n17) 2)
v1057 778 l_false := #8812: (>= (* Nl4arg111 lam3n16) 2)
v1058 779 l_false := #8813: (>= (* Nl4arg121 lam3n16) 2)
v1059 780 l_false := #8814: (>= (* Nl4arg122 lam5n17) 1)
v1060 781 l_true := #8815: (>= (* Nl4arg92 lam4n17) 0)
v1061 782 l_true := #8816: (<= (+ (* Nl4arg121 lam5n16) (* Nl4arg122 lam5n17)) 0)
v1062 783 l_true := #8817: (>= (+ (* Nl4arg121 lam5n16) (* Nl4arg122 lam5n17)) 0)
v1063 784 l_false := #8818: (<= (* Nl4arg111 lam0n17) -1)
v1064 785 l_false := #8819: (>= (* Nl4arg122 lam3n17) 2)
v1065 786 l_false := #8820: (>= (* Nl4arg112 undef38) 1)
v1066 787 l_false := #8821: (<= (* Nl4arg111 lam3n16) -2)
v1067 t543 = 2, int := #8823: (* 2 lam0n18)
v1068 t544 = 2, int := #8824: (+ (* 2 Nl4arg32) Nl4arg42 (* 16 Nl4arg52) (* 12 Nl4arg72) (* -1 lam0n9) (* 15 Nl4arg12) (* 2 lam0n18) (* -1 lam0n1))
v1069 793 l_false := #8829: (<= (* Nl4CT2 lam4n17) -1)
v1070 804 l_false := #8840: (<= (* Nl4arg122 lam4n17) -1)
v1071 805 l_false := #8841: (<= (* Nl4arg122 lam2n18) -1)
v1072 806 l_false := #8842: (<= (* Nl4arg121 lam3n16) -2)
v1073 807 l_true := #8843: (<= Nl4arg81 0)
v1074 808 l_true := #8844: (>= Nl4arg81 0)
v1075 809 l_true := #8845: (<= (+ (* Nl4arg81 lam1n17) (* Nl4arg82 lam1n18)) 0)
v1076 810 l_true := #8846: (>= (+ (* Nl4arg81 lam1n17) (* Nl4arg82 lam1n18)) 0)
v1077 811 l_true := #8847: (<= (+ (* Nl4arg81 lam4n16) (* Nl4arg82 lam4n17)) 0)
v1078 812 l_true := #8848: (>= (+ (* Nl4arg81 lam4n16) (* Nl4arg82 lam4n17)) 0)
v1079 813 l_false := #8849: (<= (* Nl4arg81 lam3n16) -2)
v1080 814 l_false := #8850: (>= (* Nl4arg81 lam4n16) 1)
v1081 815 l_false := #8851: (>= (* Nl4arg81 lam1n17) 1)
v1082 816 l_false := #8852: (>= (* Nl4arg81 lam3n16) 2)
v1083 t545 = 0, int := #8857: (+ Nl4arg91 (* -1 (* Nl4arg91 lam0n17)))
v1084 820 l_true := #8856: (<= (+ Nl4arg91 (* -1 #194)) 0)
v1085 821 l_true := #8858: (>= (+ Nl4arg91 (* -1 #194)) 0)
v1086 833 l_false := #8870: (<= (* Nl4CT1 lam0n17) -1)
v1087 834 l_false := #8871: (<= (* Nl4CT1 lam3n16) -2)
v1088 846 l_false := #8883: (<= lam10n20 0)
v1089 847 l_true := #8884: (<= (* Nl4CT2 lam10n20) 0)
v1090 848 l_true := #8885: (<= (* Nl4CT1 lam10n19) 0)
v1091 849 l_false := #8886: (>= (* Nl4arg92 lam10n20) 1)
v1092 850 l_false := #8887: (>= (* Nl4arg112 lam10n20) 1)
v1093 851 l_false := #8888: (>= (* Nl4arg122 lam10n20) 1)
v1094 852 l_true := #8889: (<= lam10n19 0)
v1095 853 l_true := #8890: (>= (* Nl4arg91 lam10n19) 0)
v1096 854 l_true := #8891: (>= (* Nl4arg81 lam10n19) 0)
v1097 855 l_true := #8892: (>= (* Nl4arg121 lam10n19) 0)
v1098 856 l_true := #8893: (>= (* Nl4arg111 lam10n19) 0)
v1099 857 l_false := #8894: (<= (* Nl4CT1 lam10n19) -1)
v1100 870 l_true := #8907: (<= Nl4arg131 0)
v1101 871 l_true := #8908: (>= Nl4arg131 0)
v1102 872 l_false := #8909: (>= (* Nl4arg131 lam3n16) 2)
v1103 873 l_false := #8910: (<= (* Nl4arg112 lam5n17) -1)
v1104 874 l_false := #8911: (<= (* Nl4arg122 lam5n17) -1)
v1105 875 l_false := #8912: (<= (* Nl4arg131 undef40) -1)
v1106 876 l_false := #8913: (>= (* Nl4arg131 lam1n17) 1)
v1107 877 l_false := #8914: (<= (* Nl4arg131 lam10n19) -1)
v1108 878 l_false := #8915: (>= (* Nl4arg131 lam4n16) 1)
v1109 879 l_false := #8916: (>= (* Nl4arg131 undef40) 1)
v1110 880 l_false := #8917: (<= (* Nl4arg131 lam0n17) -1)
v1111 881 l_false := #8918: (<= (* Nl4arg131 lam3n16) -2)
v1112 882 l_false := #8919: (<= (* Nl4arg132 lam10n20) -1)
v1113 883 l_false := #8920: (<= (* Nl4arg102 undef37) -1)
v1114 884 l_false := #8921: (>= (* Nl4arg102 lam4n17) 1)
v1115 885 l_false := #8922: (<= (* Nl4arg102 lam10n20) -1)
v1116 887 l_false := #8924: (<= lam4n17 -1)
v1117 888 l_false := #8925: (>= (* Nl4arg11 lam1n17) 1)
v1118 889 l_false := #8926: (>= (* Nl4arg11 lam10n19) 1)
v1119 890 l_false := #8927: (<= (* Nl4arg131 lam1n17) -1)
v1120 891 l_false := #8928: (>= (* Nl4arg21 lam10n19) 1)
v1121 892 l_true := #8929: (>= (* Nl4arg21 lam1n17) 1)
v1122 893 l_false := #8930: (>= (* Nl4arg21 lam3n16) 2)
v1123 898 l_false := #8935: (>= (* Nl4arg91 lam3n16) 2)
v1124 899 l_true := #8936: (>= (* Nl4arg22 lam10n20) 1)
v1125 900 l_false := #8937: (>= (* Nl4arg91 lam10n19) 1)
v1126 901 l_true := #8938: (>= (* Nl4arg22 undef29) 0)
v1127 902 l_true := #8939: (<= (+ (* 2 Nl4arg32) Nl4arg42 (* 16 Nl4arg52) (* 12 Nl4arg72) (* -1 lam0n9) (* 15 Nl4arg12) (* 2 lam0n18) (* -1 lam0n1)) 2)
v1128 903 l_true := #8940: (>= (+ (* 2 Nl4arg32) Nl4arg42 (* 16 Nl4arg52) (* 12 Nl4arg72) (* -1 lam0n9) (* 15 Nl4arg12) (* 2 lam0n18) (* -1 lam0n1)) 2)
v1129 904 l_true := #8941: (<= (* Nl4arg41 lam4n16) -1)
v1130 905 l_true := #8942: (<= (* Nl4CT1 lam2n17) -1)
v1131 t720 = -1, int := #8945: (+ (* -1 (* Nl4arg31 lam2n17)) (* -1 (* Nl4arg32 lam2n18)) (* -1 (* Nl4arg41 lam2n17)) (* -1 (* Nl4arg42 lam2n18)) Nl4arg32 Nl4arg42)
v1132 t721 = 0, int := #8946: (+ (* Nl4arg41 lam3n16) lam3n16 (* -1 lam3n9) (* -1 lam3n1))
)
8765: (= (+ (* 2 lam1n18) Nl4arg41 (* -1 #338) (* -1 #339)) -1) :=
value according to model:  true
value of Boolean literal:  l_false
(define-fun k!2 () Bool
  true)
(define-fun k!0 () Bool
  true)
(define-fun k!4 () Bool
  false)
(define-fun undef377 () Int
  3)
(define-fun undef29 () Int
  0)
(define-fun undef181 () Int
  536870906)
(define-fun undef378 () Int
  3)
(define-fun undef178 () Int
  4)
(define-fun undef28 () Int
  16)
(define-fun Nl4arg31 () Int
  0)
(define-fun Nl4CT1 () Int
  (- 1))
(define-fun Nl4arg41 () Int
  1)
(define-fun Nl4arg51 () Int
  0)
(define-fun Nl4arg71 () Int
  0)
(define-fun Nl4arg11 () Int
  0)
(define-fun Nl4arg21 () Int
  1)
(define-fun Nl4arg81 () Int
  0)
(define-fun undef35 () Int
  0)
(define-fun Nl4arg91 () Int
  0)
(define-fun undef36 () Int
  (- 2))
(define-fun Nl4arg101 () Int
  (- 2))
(define-fun undef37 () Int
  0)
(define-fun Nl4arg111 () Int
  0)
(define-fun undef38 () Int
  (- 2))
(define-fun Nl4arg121 () Int
  0)
(define-fun undef39 () Int
  0)
(define-fun Nl4arg131 () Int
  0)
(define-fun undef40 () Int
  0)
(define-fun Nl4arg32 () Int
  0)
(define-fun Nl4CT2 () Int
  0)
(define-fun Nl4arg42 () Int
  0)
(define-fun Nl4arg52 () Int
  0)
(define-fun Nl4arg72 () Int
  0)
(define-fun Nl4arg12 () Int
  0)
(define-fun Nl4arg22 () Int
  2)
(define-fun Nl4arg82 () Int
  0)
(define-fun Nl4arg92 () Int
  0)
(define-fun Nl4arg102 () Int
  0)
(define-fun Nl4arg112 () Int
  0)
(define-fun Nl4arg122 () Int
  0)
(define-fun Nl4arg132 () Int
  0)
(define-fun Nl4arg61 () Int
  0)
(define-fun Nl4arg62 () Int
  0)
(define-fun lam1n17 () Int
  2)
(define-fun lam1n18 () Int
  0)
(define-fun lam0n0 () Int
  2)
(define-fun lam0n1 () Int
  0)
(define-fun lam0n2 () Int
  0)
(define-fun lam0n3 () Int
  0)
(define-fun lam0n4 () Int
  0)
(define-fun lam0n5 () Int
  0)
(define-fun lam0n6 () Int
  0)
(define-fun lam0n7 () Int
  0)
(define-fun lam0n8 () Int
  0)
(define-fun lam0n9 () Int
  0)
(define-fun lam0n10 () Int
  0)
(define-fun lam0n11 () Int
  0)
(define-fun lam0n12 () Int
  0)
(define-fun lam0n13 () Int
  0)
(define-fun lam0n14 () Int
  0)
(define-fun lam0n15 () Int
  0)
(define-fun lam0n16 () Int
  0)
(define-fun lam0n17 () Int
  0)
(define-fun lam0n18 () Int
  1)
(define-fun lam1n9 () Int
  3)
(define-fun lam1n12 () Int
  2)
(define-fun lam2n17 () Int
  1)
(define-fun lam2n18 () Int
  0)
(define-fun lam2n9 () Int
  0)
(define-fun lam2n12 () Int
  0)
(define-fun lam4n16 () Int
  (- 2))
(define-fun lam4n17 () Int
  1)
(define-fun lam3n0 () Int
  2)
(define-fun lam3n1 () Int
  0)
(define-fun lam3n2 () Int
  0)
(define-fun lam3n3 () Int
  0)
(define-fun lam3n4 () Int
  0)
(define-fun lam3n5 () Int
  0)
(define-fun lam3n6 () Int
  0)
(define-fun lam3n7 () Int
  0)
(define-fun lam3n8 () Int
  0)
(define-fun lam3n9 () Int
  0)
(define-fun lam3n10 () Int
  0)
(define-fun lam3n11 () Int
  0)
(define-fun lam3n12 () Int
  0)
(define-fun lam3n13 () Int
  0)
(define-fun lam3n14 () Int
  0)
(define-fun lam3n15 () Int
  0)
(define-fun lam3n16 () Int
  0)
(define-fun lam3n17 () Int
  1)
(define-fun lam4n9 () Int
  0)
(define-fun lam4n12 () Int
  0)
(define-fun lam5n16 () Int
  1)
(define-fun lam5n17 () Int
  0)
(define-fun lam5n9 () Int
  0)
(define-fun lam5n12 () Int
  2)
(define-fun lam10n20 () Int
  2)
(define-fun lam10n19 () Int
  0)
(define-fun lam6n8 () Int
  0)
(define-fun lam6n6 () Int
  0)
(define-fun lam7n8 () Int
  0)
(define-fun lam7n6 () Int
  (- 2))
(define-fun lam8n8 () Int
  0)
(define-fun lam8n6 () Int
  0)
(define-fun lam9n8 () Int
  0)
(define-fun lam9n6 () Int
  2)
(define-fun lam10n17 () Int
  0)
(define-fun lam10n15 () Int
  0)
(define-fun lam10n6 () Int
  0)
(define-fun lam10n12 () Int
  0)

ramon: end                  Sat Oct 26 11:53:07 2024
ramon: root.execname        z3
ramon: root.utime           1.040s
ramon: root.stime           0.180s
ramon: group.total          1.235s
ramon: group.utime          1.047s
ramon: group.stime          0.188s
ramon: group.mempeak        66312KiB
ramon: group.pidpeak        2
ramon: status               exited
[31mramon: exitcode             1[0m
ramon: walltime             1.239s
ramon: loadavg              1.00
