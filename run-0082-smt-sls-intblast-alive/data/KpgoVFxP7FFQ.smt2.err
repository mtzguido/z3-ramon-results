ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:15:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28544 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KpgoVFxP7FFQ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             755917
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 1&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 1&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 1&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 1&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 1 := 2 << 5
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   70.4225     10000        49          0            1        2)
(smt.stats    0    101   3567    404  1113/1004/105      96/22     6   16   51.86)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 31 := 137438953471&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 274877906943 := 137438953471 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 31 := 31&31
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 31 := 1 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 31 := 64&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 30 := 64&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 64&31
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 64&31
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 1 := 2 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 0&31
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 1 := 4294967296 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 29 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 28 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 8 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 24 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 0&31
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 1 := 4294967296 << 5
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 8 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 8 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 4 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 4 := 32&31
(sat.ddfw       1      1    42.021     20001        98          1            1        3)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 4 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 1 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 2 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 4 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 31 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 30 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 28 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 24 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 4 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 8 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 29 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 28 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 29 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 28 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 24 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 16 := 32&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 133005438816&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 1 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 133005438816&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 4 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 133005438816&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 1 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 133005438816&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 2 := 133005438816&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 32&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 2 := 32&31
(smt.stats    1    202   6452   1711  1333/1194/178     193/30    12   34   52.73)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 128&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 2 := 128&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 128&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 8 := 128&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 128&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 8 := 128&31
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 128&31
band: (band[37] (shl[37] (bv2int %0) (mod #103 37)) (if (= #567 36) 1 (if #569 3 #669))) 8 := 128&31
(smt.stats    2    313   7959   3486  2028/1571/205     311/89    14   41   52.73)
(sat.ddfw       1      1   47.2813     40001       196          2            1        5)
(smt.stats    3    414  11221   5680  2234/2035/216     411/118    18   43   53.02)
(smt.stats    4    525  12555   7866  2505/2285/219     514/139    19   48   53.02)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 225&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 225&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 226&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 226&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 290&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 322&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 258&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 258&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 258&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 258&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 514&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 514&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1050&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1042&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 1026&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 2050&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 2050&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 6146&32767
(smt.stats    5    647  16570  12197  2682/2377/296     738/173    21   69   53.30)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 8730&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 8730&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8730&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8730&32767
(sat.ddfw       1      1   42.6743     70001       343          3            1        8)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8778&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8842&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8842&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8778&32767
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8778&32767
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19632  15916  2855/2489/306     917/185    22   71   53.50)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 8842&1023
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 10250&1023
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 4260607567882 := 40 << 10
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 10250&1023
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 4260607567882 := 40 << 10
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 10 := 10250&1023
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 4260607567882 := 40 << 10
(smt.stats    7    859  22132  18658  2919/2646/339    1161/201    24   85   53.59)
(smt.stats    8    982  25290  22920  2992/2765/354    1593/248    25   92   53.78)
ramon: poll                 wall=1.000s usage=0.893s mem=56340KiB load=0.89 rootload=0.87
(smt.stats    9   1116  29613  28264  3121/2774/355    1936/312    26  105   54.07)
(sat.ddfw       1      1   37.0714    110001       539          4            1       12)
(smt.stats   10   1217  32511  36150  3332/2971/355    2286/410    27  111   54.16)
(smt.stats   11   1328  34712  43389  3595/3128/355    2593/413    27  111   54.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  36756  50428  3789/3567/357    2911/490    29  118   54.36)
(smt.stats   13   1584  42902  60952  3954/3579/357    3765/494    29  118   54.62)
(sat.ddfw       1      1   32.2991    160000       784          5            1       17)
(smt.stats   14   1731  51002  76569  4272/3774/357    4550/495    29  118   54.81)
ramon: poll                 wall=2.000s usage=1.892s mem=57200KiB load=1.00 rootload=1.00
(smt.stats   15   1832  56383  87694  4414/4050/357    5049/497    29  118   54.91)
(sat.ddfw       1      1   28.5447    220001      1078          6            1       23)
(smt.stats   16   1943  61912 100583  4603/4377/359    5545/607    30  123   55.19)
(smt.stats   17   2065  69166 131188  4646/4383/359    6911/609    30  123   55.32)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2199  76038 151451  5018/4434/359    7879/1017    31  129   55.42)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 4294967601&7
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 2 := 4294967601&7
(smt.stats   19   2346  83099 169624  5498/4798/359    8416/1025    31  129   55.61)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 3 := 4294967601&7
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 4294967601&7
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 416611828017 := 8724152517 << 3
(sat.ddfw       1      1   25.4453    290001      1421          7            1       30)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 4294967601&7
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 416611828017 := 8724152517 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 1 := 4294967601&7
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 416611828017 := 8724152517 << 3
(smt.stats   20   2507  88198 190115  5545/5317/365    8694/1148    32  131   55.71)
ramon: poll                 wall=3.000s usage=2.891s mem=58120KiB load=1.00 rootload=1.00
(smt.stats   21   2608  93943 209845  5584/5318/365    9074/1148    32  131   56.03)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 1024&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 274877907968 := 8589934624 << 1
(smt.stats   22   2719  97115 224628  5731/5383/365    9482/1149    32  131   56.13)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 1024&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 274877907968 := 8589934624 << 1
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 1024&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #298) 64)) 274877907968 := 8589934624 << 1
(smt.stats   23   2841 100859 229261  5775/5536/371    9950/1433    33  132   56.22)
(smt.stats   24   2975 107356 255680  5797/5543/373   11380/1719    34  140   56.32)
(sat.ddfw       1      1   22.8571    370001      1813          8            1       38)
(smt.stats   25   3122 113737 270605  5917/5672/376   12021/1762    35  162   56.42)
ramon: poll                 wall=4.000s usage=3.890s mem=58816KiB load=1.00 rootload=1.00
(smt.stats   26   3283 122174 297108  6073/5715/377   13307/1765    35  162   56.63)
(smt.stats   27   3460 126324 321943  6136/5896/380   13849/1892    36  163   56.73)
(sat.ddfw       1      1   20.7373    460001      2254          9            1       47)
(smt.stats   28   3561 129112 344839  6138/5898/380   14128/2014    37  171   56.73)
(smt.stats   29   3672 133100 357015  6297/5902/380   14395/2017    37  171   56.82)
(smt.stats   30   3794 135925 375962  6568/6245/386   14976/2080    38  172   57.02)
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 34359739392&7
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 81604348615 := 21474836608 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 34359739392&7
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 81604348615 := 21474836608 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #299 64)) (if (= #688 63) 0 (if #690 1 #839))) 0 := 34359739392&7
shl: (shl[37] (bv2int %0) (mod (bv2int %1) 37)) 81604348615 := 21474836608 << 3
(smt.stats   31   3928 139345 391763  6660/6338/386   15321/2087    38  172   57.32)
ramon: poll                 wall=5.000s usage=4.890s mem=59384KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.9789    560001      2745         10            1       57)
(smt.stats   32   4075 146175 422251  6778/6431/391   16139/2186    39  182   57.51)
(smt.stats   33   4236 153982 468582  6857/6563/391   16368/2187    39  182   57.51)
(smt.stats   34   4413 158286 507046  6948/6708/395   16709/2373    41  194   57.61)
(smt.stats   35   4607 165989 559368  6961/6717/395   17297/2373    41  194   57.61)
ramon: poll                 wall=6.000s usage=6.103s mem=59952KiB load=1.21 rootload=1.20
(smt.stats   36   4708 170013 584749  7007/6761/396   18406/2732    42  197   57.85)
(sat.ddfw       1      1   17.9299    670001      3284         11            1       68)
(smt.stats   37   4819 172656 599379  7090/6765/397   18725/2735    42  197   57.94)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 177813 635092  7216/6898/397   19471/2896    43  203   58.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 182841 644895  7296/6971/397   20149/2904    43  203   58.24)
(smt.stats   40   5222 191232 673839  7374/7055/398   20405/3019    44  212   58.47)
ramon: poll                 wall=7.000s usage=7.103s mem=60676KiB load=1.00 rootload=1.00
(smt.stats   41   5383 199821 713393  7513/7126/398   20737/3023    44  212   58.47)
(sat.ddfw       1      1   16.5426    790001      3872         12            1       80)
(smt.stats   42   5560 206585 729476  7606/7257/398   20983/3025    44  212   58.56)
ramon: poll                 wall=8.000s usage=8.104s mem=60948KiB load=1.00 rootload=1.01
(smt.stats   43   5754 217512 766201  7785/7347/400   21657/3087    45  218   58.99)
(smt.stats   44   5967 223923 793213  7938/7544/400   22480/3098    45  218   59.18)
(sat.ddfw       1      1   15.3501    920001      4509         13            1       93)
(smt.stats   45   6068 227208 806478  7958/7687/400   22795/3098    45  218   59.18)
(smt.stats   46   6179 233045 822740  8068/7793/402   23279/3264    46  222   59.28)
ramon: poll                 wall=9.000s usage=9.102s mem=61336KiB load=1.00 rootload=0.99
(smt.stats   47   6301 238923 833659  8149/7797/402   23626/3268    46  222   59.28)
(smt.stats   48   6435 244475 857686  8327/7953/402   24340/3270    46  222   59.47)
(sat.ddfw       1      1   14.3354   1060001      5196         14            1      108)
(smt.stats   49   6582 250678 896484  8426/8093/402   25455/3479    47  223   59.57)
ramon: poll                 wall=10.000s usage=10.102s mem=61752KiB load=1.00 rootload=1.00
(smt.stats   50   6743 257878 942869  8496/8179/402   25831/3480    47  223   59.66)
(smt.stats   51   6920 265666 990476  8551/8232/402   26132/3482    47  223   59.66)
ramon: poll                 wall=11.000s usage=11.101s mem=62160KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   52   7114 273285 1037211  8558/8287/403   27840/3833    48  232   59.98)
(sat.ddfw       1      1   13.4517   1210001      5931         15            1      123)
(smt.stats   53   7327 284708 1104382  8646/8322/403   28618/3838    48  232   60.17)
ramon: poll                 wall=12.000s usage=12.101s mem=62756KiB load=1.00 rootload=1.00
(smt.stats   54   7561 296191 1183209  8735/8387/403   29508/3842    48  232   60.32)
(smt.stats   55   7662 300800 1226762  8764/8475/403   30226/3842    48  232   60.42)
(smt.stats   56   7773 305390 1256230  8786/8505/404   30864/4168    49  247   60.61)
(sat.ddfw       1      1   12.6542   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=13.101s mem=63012KiB load=1.00 rootload=1.00
(smt.stats   57   7895 309466 1294565  8844/8509/405   31595/4168    49  247   60.70)
ramon: poll                 wall=14.000s usage=14.102s mem=63368KiB load=1.00 rootload=1.00
(smt.stats   58   8029 312891 1324532  8927/8580/405   33348/4169    49  247   61.49)
(sat.ddfw       1      1   11.9542   1540001      7549         17            1      156)
(smt.stats   59   8176 318860 1369067  9012/8668/405   33810/4497    50  262   61.49)
ramon: poll                 wall=15.000s usage=15.065s mem=63476KiB load=0.96 rootload=0.97
(smt.stats   60   8337 328464 1445389  9151/8870/406   34376/4611    51  276   61.68)
(sat.ddfw       1      1   11.3087   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.054s mem=63624KiB load=0.99 rootload=0.99
(smt.stats   61   8514 332866 1493527  9234/8879/406   35582/4616    51  276   61.77)
ramon: poll                 wall=17.000s usage=17.037s mem=63864KiB load=0.98 rootload=0.98
(smt.stats   62   8708 338219 1554053  9339/8970/406   36193/4621    51  276   61.97)
(sat.ddfw       1      1    10.743   1910001      9362         19            1      193)
(smt.stats   63   8921 344225 1640483  9434/9091/406   36952/4626    51  276   61.97)
ramon: poll                 wall=18.000s usage=18.034s mem=64020KiB load=1.00 rootload=1.00
(smt.stats   64   9155 351190 1672779  9567/9200/407   37851/4834    52  292   62.06)
ramon: poll                 wall=19.000s usage=19.018s mem=64240KiB load=0.98 rootload=0.98
(smt.stats   65   9412 360966 1743564 10024/9736/408   38762/4982    53  296   62.25)
(sat.ddfw       1      1   10.2375   2110001     10343         20            1      214)
(smt.stats   66   9513 363104 1767922 10031/9743/409   40020/4982    53  296   62.35)
(smt.stats   67   9624 367201 1786971 10113/9744/409   40304/4982    53  296   62.44)
ramon: poll                 wall=20.000s usage=20.016s mem=64536KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:15:53 2024
ramon: root.execname        z3
ramon: root.utime           20.040s
ramon: root.stime           0.020s
ramon: group.total          20.070s
ramon: group.utime          20.046s
ramon: group.stime          0.024s
ramon: group.mempeak        65048KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.057s
ramon: loadavg              1.00
