ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:55:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24867 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/lRGW6BtLVvXW.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             139630
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4309    301  1147/998/97     102/14     5   16   19.26)
(smt.stats    1    202   5100    521  1979/1755/97     205/15     5   16   19.55)
(smt.stats    2    313   7119   1289  2159/1944/97     321/16     5   16   19.45)
(smt.stats    3    414   8024   1757  2207/1988/97     419/18     5   16   19.64)
(smt.stats    4    525   9441   2901  2489/2310/105     539/53     7   23   19.64)
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&79
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&1
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 1 := 9204504430324482048 >>l 57
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1580 := 1097262433806 >>l 34
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&79
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&79
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 63 := 9204504429988937728 >>l 57
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1559 := 1097262433766 >>l 34
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 63 := 9204504429988937728 >>l 57
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1559 := 1097262433766 >>l 34
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&62
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 62 := 9204504429988937728 >>l 57
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1559 := 1097262433766 >>l 34
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1559 := 1097262433766 >>l 34
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1308 := 1097262433806 >>l 34
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1308 := 1099511627766 >>l 34
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 1 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 2 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 1 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 2 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 4 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 8 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 16 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 32 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 32 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 16 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 1 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 4 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 4 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 2 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 21 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 21 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 20 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 16 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 2 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 4 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 8 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 4 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 16 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 4 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 4 := 64&63
(smt.stats    5    647  11033   6070  2905/2684/204     659/100    11   44   20.14)
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 8 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 2 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 2 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 1 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 16 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 32 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 32 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 32 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 64&63
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 32 := 64&63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 24 := 64&25
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  12534   9475  2953/2737/250     774/113    13   58   20.23)
(smt.stats    7    859  17129  14042  3062/2775/250     895/115    13   58   20.43)
ramon: poll                 wall=1.000s usage=0.991s mem=21552KiB load=0.99 rootload=0.97
(smt.stats    8    981  17913  15547  3277/2874/250    1036/127    14   58   20.52)
(smt.stats    9   1115  22532  21306  3305/3068/255    1174/158    16   72   20.52)
(smt.stats   10   1216  26971  25039  3319/3086/255    1271/169    17   74   20.62)
(smt.stats   11   1327  30324  31390  3333/3104/256    1430/181    18   75   20.62)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  33326  35646  3389/3158/260    1569/234    19   81   20.73)
(smt.stats   13   1583  37145  39391  3456/3175/261    1704/254    20   87   20.73)
(smt.stats   14   1730  41400  47082  3532/3268/263    1868/273    22   88   20.84)
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 1&268437777
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 1&268437777
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 1&268437778
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 2449958197557987602 := 0 >>l 63
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 1&268437778
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 2449958197557987602 := 0 >>l 63
(smt.stats   15   1831  44405  51406  3570/3322/263    1990/274    22   88   20.84)
(smt.stats   16   1942  49668  57437  3592/3353/268    2172/285    23   89   20.93)
(smt.stats   17   2064  53839  63794  3647/3399/270    2300/327    25   97   20.93)
ramon: poll                 wall=2.000s usage=1.990s mem=22176KiB load=1.00 rootload=1.00
(smt.stats   18   2198  59157  73190  3696/3461/271    2463/337    26  100   21.03)
(smt.stats   19   2345  64173  81926  3826/3575/274    2760/358    27  105   21.13)
(smt.stats   20   2506  68505  91276  3899/3640/278    3092/402    29  112   21.22)
(smt.stats   21   2607  72241  98258  3977/3674/278    3195/435    30  124   21.22)
(smt.stats   22   2718  73741 102074  4073/3744/278    3305/441    30  124   21.33)
(smt.stats   23   2840  75541 106751  4119/3834/278    3426/443    30  124   21.33)
(smt.stats   24   2974  77386 113956  4144/3879/280    3624/491    31  135   21.43)
(smt.stats   25   3121  81415 122492  4194/3921/281    3829/509    32  138   21.52)
(smt.stats   26   3282  86264 132254  4270/3968/282    4016/521    33  139   21.65)
ramon: poll                 wall=3.001s usage=2.988s mem=23028KiB load=1.00 rootload=1.00
(smt.stats   27   3459  90878 145057  4365/4013/282    4344/527    33  139   21.65)
(smt.stats   28   3560  92972 150364  4387/4113/283    4523/561    34  140   21.65)
(smt.stats   29   3671  96510 161697  4431/4127/283    4778/562    34  140   21.75)
(smt.stats   30   3793 100467 172561  4477/4169/283    4946/562    34  140   21.75)
(smt.stats   31   3927 103215 179912  4589/4213/283    5232/566    34  140   21.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 106627 188307  4666/4371/284    5499/627    35  141   21.84)
(smt.stats   33   4235 112282 204476  4711/4409/284    5756/628    35  141   21.94)
(smt.stats   34   4412 118730 224313  4730/4447/284    6123/628    35  141   21.94)
(smt.stats   35   4606 123894 241421  4761/4463/285    6460/674    36  143   22.04)
(smt.stats   36   4707 126974 248825  4771/4486/285    6622/674    36  143   22.04)
ramon: poll                 wall=4.000s usage=3.983s mem=23532KiB load=1.00 rootload=1.00
(smt.stats   37   4818 130249 258144  4779/4489/285    6807/675    36  143   22.16)
(smt.stats   38   4940 131974 264101  4795/4510/286    6953/730    37  152   22.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 135667 271215  4844/4517/286    7155/734    37  152   22.25)
(smt.stats   40   5221 139987 282540  4908/4564/286    7429/740    37  152   22.25)
(smt.stats   41   5382 145881 298067  5020/4713/288    7764/766    38  160   22.35)
(smt.stats   42   5559 149960 313531  5033/4748/288    8099/796    39  160   22.45)
(smt.stats   43   5753 154511 329013  5048/4763/288    8480/796    39  160   22.45)
(smt.stats   44   5966 161052 357391  5059/4774/288    8814/796    39  160   22.54)
(smt.stats   45   6067 164085 372690  5068/4783/288    9035/796    39  160   22.54)
(smt.stats   46   6178 167862 393728  5070/4785/288    9165/796    39  160   22.54)
ramon: poll                 wall=5.000s usage=4.983s mem=24036KiB load=1.00 rootload=1.00
(smt.stats   47   6300 172560 412208  5076/4791/289    9377/906    40  180   22.54)
(smt.stats   48   6434 175566 430120  5087/4802/290    9643/906    40  180   22.65)
(smt.stats   49   6581 179149 444584  5110/4809/290    9851/927    41  198   22.65)
(smt.stats   50   6742 183569 458989  5138/4832/290   10086/934    41  198   22.65)
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 250 := 256&1030792151089
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 250 := 256&1030792151089
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 245 := 256&1030792151089
(smt.stats   51   6919 187241 470223  5182/4864/290   10302/936    41  198   22.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   52   7113 190467 482983  5263/4916/290   10628/939    41  198   22.86)
(smt.stats   53   7326 195877 504426  5421/4982/290   10942/956    41  198   22.86)
ramon: poll                 wall=6.000s usage=5.982s mem=24928KiB load=1.00 rootload=1.00
(smt.stats   54   7560 200178 526834  5578/5145/290   11391/965    41  198   23.25)
(smt.stats   55   7661 202428 538204  5706/5307/290   11587/967    41  198   23.25)
(smt.stats   56   7772 207610 563370  5723/5430/290   11750/967    41  198   23.25)
(smt.stats   57   7894 213000 593425  5752/5439/290   11958/969    41  198   23.25)
(smt.stats   58   8028 214546 600973  5806/5472/291   12103/1106    42  203   23.35)
(smt.stats   59   8175 217999 610422  5900/5531/291   12286/1107    42  203   23.45)
(smt.stats   60   8336 222110 631313  6056/5707/291   12587/1111    42  203   23.45)
ramon: poll                 wall=7.000s usage=6.982s mem=24948KiB load=1.00 rootload=0.99
(smt.stats   61   8513 224502 643066  6181/5892/293   12859/1147    43  207   23.45)
(smt.stats   62   8707 230379 673682  6247/5913/293   13163/1148    43  207   23.55)
(smt.stats   63   8920 235483 697720  6270/5975/293   13485/1145    44  224   23.76)
(smt.stats   64   9154 241597 721327  6280/5995/293   14004/1145    44  224   23.86)
(smt.stats   65   9411 246912 747940  6291/6005/293   14430/1145    44  224   23.86)
(smt.stats   66   9512 248850 753752  6302/6015/293   14636/1145    44  224   23.95)
(smt.stats   67   9623 252872 768871  6310/6023/293   14825/1145    44  224   23.95)
(smt.stats   68   9745 257746 787634  6315/6028/293   15016/1145    44  224   23.95)
(smt.stats   69   9879 261321 805807  6333/6038/293   15276/1145    44  224   23.95)
ramon: poll                 wall=8.000s usage=7.981s mem=25392KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10026 264218 824064  6347/6060/293   15567/1145    44  224   24.05)
(smt.stats   71  10187 269764 868355  6357/6070/293   15746/1145    44  224   24.05)
(smt.stats   72  10364 277381 929639  6366/6072/293   16007/1147    44  224   24.05)
(smt.stats   73  10558 281862 944514  6403/6082/293   16393/1148    44  224   24.14)
(smt.stats   74  10771 287413 968717  6460/6125/293   16729/1150    44  224   24.14)
(smt.stats   75  11005 291975 989105  6568/6188/293   17127/1151    44  224   24.14)
ramon: poll                 wall=9.000s usage=8.981s mem=25648KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11262 298302 1008685  6678/6286/293   17584/1153    44  224   24.25)
(smt.stats   77  11544 305596 1041180  6732/6428/293   18254/1154    44  224   24.44)
(smt.stats   78  11645 308136 1055412  6739/6452/293   18395/1154    44  224   24.44)
(smt.stats   79  11756 311055 1075649  6753/6454/293   18539/1154    44  224   24.53)
(smt.stats   80  11878 312454 1081562  6789/6469/293   18664/1154    44  224   24.53)
(smt.stats   81  12012 314263 1094568  6818/6531/295   18886/1510    45  253   24.53)
(smt.stats   82  12159 320078 1118860  6820/6533/295   19176/1510    45  253   24.53)
(smt.stats   83  12320 323639 1137972  6828/6541/295   19520/1510    45  253   24.63)
(smt.stats   84  12497 326792 1155899  6833/6546/296   19840/1592    46  264   24.63)
ramon: poll                 wall=10.000s usage=9.980s mem=26160KiB load=1.00 rootload=1.00
(smt.stats   85  12691 331886 1178765  6858/6557/296   20125/1593    46  264   24.63)
(smt.stats   86  12904 338146 1208819  6908/6581/296   20383/1594    46  264   24.73)
(smt.stats   87  13138 343266 1241679  6929/6642/297   20831/1642    47  280   24.73)
(smt.stats   88  13395 348725 1278273  6971/6651/297   21249/1645    47  280   24.82)
(smt.stats   89  13677 353890 1311021  7011/6705/297   21973/1647    47  280   24.92)
ramon: poll                 wall=11.000s usage=10.980s mem=26416KiB load=1.00 rootload=1.00
(smt.stats   90  13987 360330 1338302  7129/6728/297   22384/1652    47  280   24.92)
(smt.stats   91  14088 362113 1349065  7244/6926/297   22592/1653    47  280   25.03)
(smt.stats   92  14199 364453 1359723  7287/6955/297   22876/1656    47  280   25.03)
(smt.stats   93  14321 367320 1378392  7325/7009/297   23186/1656    47  280   25.13)
(smt.stats   94  14455 370669 1399233  7392/7054/297   23593/1656    47  280   25.13)
(smt.stats   95  14602 374412 1426548  7442/7127/297   24040/1657    47  280   25.22)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   96  14763 379115 1454346  7458/7162/297   24543/1657    47  280   25.22)
(smt.stats   97  14940 383813 1482627  7482/7172/297   24908/1657    47  280   25.34)
ramon: poll                 wall=12.000s usage=11.979s mem=26928KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 17)
(smt.stats   98  15134 388804 1512235  7613/7201/297   25204/1659    47  280   25.34)
(smt.stats   99  15347 392918 1544944  7748/7359/297   25488/1661    47  280   25.43)
(smt.stats  100  15581 396630 1564085  7832/7470/297   25872/1663    47  280   25.43)
(smt.stats  101  15838 402181 1594385  7861/7547/297   26277/1664    47  280   25.43)
ramon: poll                 wall=13.000s usage=12.979s mem=26928KiB load=1.00 rootload=1.00
(smt.stats  102  16120 406567 1632032  7887/7597/297   26715/1664    47  280   25.89)
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 4 := 256&128
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 4 := 256&128
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 8 := 256&128
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 16 := 256&128
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 16 := 256&128
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 32 := 256&128
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 32 := 256&128
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 96 := 256&128
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 192 := 256&384
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 256 := 256&384
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 701709420358271360 := 738197504 >>l 55
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 256 := 256&256
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 701709420358271232 := 738197504 >>l 55
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 256 := 256&1664
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 256 := 256&1664
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 256 := 256&1792
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 701708320846644992 := 738197504 >>l 55
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 256 := 256&1792
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 701708320846644992 := 738197504 >>l 55
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 256&0
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1308 := 88 >>l 32
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 256&0
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1104 := 88 >>l 32
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 256&0
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 212 := 88 >>l 32
(smt.stats  103  16430 411938 1661856  7931/7604/297   27158/1667    47  280   26.11)
(smt.stats  104  16770 421008 1729131  7949/7650/327   27697/1957    48  286   26.22)
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&68719476864
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&68719476864
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&137438953600
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 701708458285596800 := 637534208 >>l 27
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&137438953600
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 557592170698113152 := 637534208 >>l 27
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&137438953600
lshr: (lshr[64] (* 8388608 (bv2int %0)) (mod (+ 63 #559 #563) 64)) 557592170698113152 := 637534208 >>l 27
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&4
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1308 := 76 >>l 4
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&4
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1308 := 76 >>l 4
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&4
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1308 := 76 >>l 4
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&4
lshr: (lshr[40] (bv2int %0) (+ 40 (* 1099511627775 #107))) 1308 := 76 >>l 4
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&4
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 1 := 68719476736&4
band: (band[40] (if (= #280 63) 9223372036854775808 (if #449 4611686018427387904 #446)) (lshr[64] (* 8388608 #105) (mod #566 64))) 0 := 68719476736&4
band: (band[40] (if (= #111 39) 549755813888 (if #469 274877906944 #545)) (lshr[40] (bv2int %0) (+ 40 #548))) 1 := 68719476736&4
(smt.stats  105  16871 422551 1739580  8018/7678/327   27841/1959    48  286   26.42)
(smt.stats  106  16982 423845 1754966  8047/7737/354   27991/1983    49  294   26.52)
(smt.stats  107  17104 428286 1774030  8085/7747/354   28285/1985    49  294   26.62)
ramon: poll                 wall=14.000s usage=13.978s mem=28076KiB load=1.00 rootload=0.99
(smt.stats  108  17238 432523 1795776  8143/7786/354   28515/1988    49  294   26.62)
(smt.stats  109  17385 437113 1817041  8223/7844/354   28753/1989    49  294   26.71)
(smt.stats  110  17546 440898 1837325  8267/7933/354   29315/2042    50  317   26.81)
(smt.stats  111  17723 446564 1874222  8301/7980/354   29787/2043    50  317   26.91)
ramon: poll                 wall=15.000s usage=14.978s mem=28564KiB load=1.00 rootload=1.00
(smt.stats  112  17917 453541 1919137  8391/7999/354   30184/2044    50  317   27.01)
(smt.stats  113  18130 459426 1937072  8480/8127/354   30888/2045    50  317   27.21)
(smt.stats  114  18364 466678 1992292  8604/8203/354   31561/2050    50  317   27.21)
ramon: poll                 wall=16.000s usage=15.981s mem=28820KiB load=1.00 rootload=1.01
(smt.stats  115  18621 472506 2023567  8758/8304/354   32099/2050    50  317   27.30)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  116  18903 479743 2064786  8916/8488/354   32583/2053    50  317   27.40)
(smt.stats  117  19213 485822 2107391  9074/8648/354   33768/2055    50  317   27.49)
ramon: poll                 wall=17.005s usage=16.985s mem=29076KiB load=1.00 rootload=1.00
(smt.stats  118  19553 494267 2171214  9171/8821/355   35094/2361    51  332   27.69)
(smt.stats  119  19926 504277 2208227  9223/8890/355   35685/2362    51  332   27.69)
(smt.delete-inactive-clauses  :num-deleted-clauses 1646)
(smt.stats  120  20027 506460 2223167  9265/8929/355   34477/2362    51  332   27.69)
(smt.stats  121  20138 510545 2239783  9343/8965/355   34703/2363    51  332   27.69)
ramon: poll                 wall=18.000s usage=17.976s mem=29288KiB load=1.00 rootload=0.99
(smt.stats  122  20260 515604 2265494  9502/9045/355   34940/2364    51  332   27.69)
(smt.stats  123  20394 521068 2287982  9595/9196/355   35336/2365    51  332   27.84)
(smt.stats  124  20541 525121 2302143  9622/9312/355   35597/2365    51  332   27.84)
(smt.stats  125  20702 533036 2341828  9641/9326/355   36100/2366    51  332   27.94)
(smt.stats  126  20879 538692 2387372  9648/9336/355   36361/2366    51  332   27.94)
(smt.stats  127  21073 543382 2423623  9662/9352/355   37363/2366    51  332   28.03)
ramon: poll                 wall=19.000s usage=18.976s mem=29552KiB load=1.00 rootload=1.00
(smt.stats  128  21286 551570 2467938  9673/9355/355   37648/2366    51  332   28.03)
(smt.stats  129  21520 556540 2512169  9684/9372/355   38173/2366    51  332   28.13)
(smt.stats  130  21777 563917 2550649  9700/9390/355   38676/2366    51  332   28.13)
(smt.stats  131  22059 568762 2572791  9829/9399/355   38983/2369    51  332   28.23)
ramon: poll                 wall=20.000s usage=19.975s mem=30064KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:55:57 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.985s
ramon: group.utime          19.961s
ramon: group.stime          0.024s
ramon: group.mempeak        30320KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
