ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:30:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42755 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1248
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5o7DR7Gu1RdC.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2797529
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5230    447  1241/1116/104      80/16     9   29   19.27)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&1
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&4
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&1
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&4
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&4
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&1
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 17592186044415&9
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&4
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2 := 17592186044415&10
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2 := 17592186044415&10
(smt.stats    1    202   6587   1188  2277/2065/167     197/34    12   46   19.46)
(smt.stats    2    313  10422   2746  2408/2151/170     307/48    13   49   19.76)
(smt.stats    3    414  12102   3875  2545/2324/172     418/61    15   57   19.76)
(smt.stats    4    525  13657   5051  2755/2399/173     540/87    16   58   19.85)
(smt.stats    5    647  15084   6262  2889/2544/173     676/92    16   58   20.04)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  17462   8790  3067/2739/173     790/95    16   58   20.04)
(smt.stats    7    859  21082  11791  3082/2843/173     918/95    16   58   20.04)
(smt.stats    8    981  23811  14672  3102/2868/173    1049/95    16   58   20.15)
(smt.stats    9   1115  28033  19082  3105/2871/173    1189/95    16   58   20.15)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 880 := 67108863&880
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 76561193665299312 := 2251799813685696 << 26
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 880 := 67108863&880
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 4503599627371376 := 2251799813685696 << 26
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 16 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 16 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 32 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 64 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 128 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 256 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 512 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1024 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2048 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4096 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 128 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 256 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 512 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 256 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 512 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1024 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2048 := 67108863&30064771072
(smt.stats   10   1216  29118  20546  3209/2882/174    1296/153    17   60   20.64)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4528 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4528 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2992 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2992 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2976 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2976 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2976 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2976 := 67108863&30064771072
(smt.stats   11   1327  29881  22249  3462/3056/216    1629/162    18   69   20.64)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&2848
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&2976
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&2976
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&3104
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&3744
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&3616
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&3744
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&4256
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&4128
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&9696
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&8672
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&8608
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&8352
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 160 := 134217727&12448
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  32514  28307  3557/3314/279    2044/265    19   80   20.86)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 31&1348
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 4503599627371844 := 2251799813685738 << 5
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 31&1364
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 31&1412
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 4503599627371908 := 2251799813685738 << 5
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 31&1217
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 4503599627371713 := 2251799813685738 << 5
(smt.stats   13   1583  35655  31882  3624/3386/290    2278/496    21   94   20.95)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 8 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1125899906843306 := 1125899906842869 << 6
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1125899906843306 := 1125899906842869 << 6
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1125899906843306 := 1125899906842869 << 6
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1125899906843103 := 1125899906842869 << 6
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 1 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 31 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 30 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 28 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 24 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 16 := 31&15680
ramon: poll                 wall=1.002s usage=0.892s mem=22260KiB load=0.89 rootload=0.88
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 16 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 4 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 4 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 4 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 1 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 8 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 8 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 31&15680
(smt.stats   14   1730  40773  38528  3769/3469/346    2534/508    21   94   21.24)
(smt.stats   15   1831  43136  41414  4112/3669/347    2701/585    22  108   21.86)
(smt.stats   16   1942  48284  50884  4257/3966/352    3106/646    23  116   22.05)
ramon: poll                 wall=2.000s usage=1.889s mem=23340KiB load=1.00 rootload=0.99
(smt.stats   17   2064  51431  59374  4273/3974/353    3410/648    23  116   22.05)
(smt.stats   18   2198  55993  70319  4334/4007/356    3729/725    24  139   22.15)
(smt.stats   19   2345  61153  81495  4514/4065/356    4280/779    25  141   22.44)
(smt.stats   20   2506  65124  93683  4623/4264/356    4958/784    25  141   22.53)
(smt.stats   21   2607  68819 101298  4700/4341/356    5293/787    25  141   22.53)
(smt.stats   22   2718  73114 114055  4828/4509/359    5588/956    26  145   22.67)
ramon: poll                 wall=3.000s usage=2.889s mem=24004KiB load=1.00 rootload=1.00
(smt.stats   23   2840  76771 121595  4965/4548/359    5963/973    27  145   22.77)
(smt.stats   24   2974  79412 131229  5071/4735/359    6422/975    27  145   22.97)
(smt.stats   25   3121  85365 140691  5079/4786/360    6602/1023    28  147   23.11)
(smt.stats   26   3282  92282 174009  5098/4807/363    7160/1055    29  153   23.11)
(smt.stats   27   3459  96750 203057  5179/4872/368    7931/1148    31  181   23.33)
ramon: poll                 wall=4.000s usage=3.889s mem=24812KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560 100285 213910  5222/4877/369    8575/1193    32  188   23.61)
(smt.stats   29   3671 105349 235919  5322/4947/369    8808/1200    32  188   23.87)
ramon: poll                 wall=5.000s usage=4.888s mem=25308KiB load=1.00 rootload=1.00
(smt.stats   30   3793 111915 252969  5449/5020/369    9489/1317    33  190   23.87)
(smt.stats   31   3927 117437 273689  5472/5165/370   10105/1398    34  196   23.96)
(smt.stats   32   4074 121203 292298  5586/5205/372   10727/1504    35  214   24.06)
(smt.stats   33   4235 127982 304319  5781/5292/372   11180/1507    35  214   24.15)
ramon: poll                 wall=6.000s usage=5.888s mem=25480KiB load=1.00 rootload=1.00
(smt.stats   34   4412 134198 332955  5878/5483/372   11737/1510    35  214   24.25)
(smt.stats   35   4606 138561 350880  5944/5616/374   12546/1561    36  218   24.25)
(smt.stats   36   4707 140952 363418  6056/5749/375   12758/1648    37  242   24.39)
(smt.stats   37   4818 143290 380184  6147/5823/377   13023/1648    37  242   24.39)
(smt.stats   38   4940 147184 399773  6147/5840/377   13282/1648    37  242   24.51)
(smt.delete-inactive-clauses  :num-deleted-clauses 65)
(smt.stats   39   5074 150404 405488  6162/5851/378   13349/1714    38  270   24.51)
(smt.stats   40   5221 155207 458122  6190/5864/378   13598/1717    38  270   24.51)
(smt.stats   41   5382 161083 493346  6198/5891/378   14030/1768    39  271   24.77)
ramon: poll                 wall=7.000s usage=6.883s mem=26284KiB load=0.99 rootload=1.00
(smt.stats   42   5559 166503 507277  6263/5895/380   15382/1837    40  297   25.00)
(smt.stats   43   5753 176095 557397  6417/5996/380   16058/1846    40  297   25.09)
ramon: poll                 wall=8.000s usage=7.883s mem=26700KiB load=1.00 rootload=1.00
(smt.stats   44   5966 181579 588156  6593/6286/381   17109/2020    41  305   25.28)
(smt.stats   45   6067 184586 603958  6606/6299/381   17553/2020    41  305   25.28)
(smt.stats   46   6178 186808 619758  6670/6306/381   17701/2023    41  305   25.28)
(smt.stats   47   6300 187432 622036  6852/6381/381   17857/2038    41  305   25.40)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 189247 633524  7049/6742/384   18153/2183    42  307   25.49)
ramon: poll                 wall=9.002s usage=8.884s mem=26872KiB load=1.00 rootload=1.00
(smt.stats   49   6581 193368 645961  7184/6755/384   18496/2184    42  307   25.59)
(smt.stats   50   6742 197125 678736  7318/6933/385   19140/2185    42  307   25.68)
(smt.stats   51   6919 202985 711418  7466/7024/385   19730/2291    43  336   25.68)
(smt.stats   52   7113 207268 724406  7648/7169/385   20753/2291    43  336   25.90)
ramon: poll                 wall=10.000s usage=9.882s mem=27240KiB load=1.00 rootload=0.99
(smt.stats   53   7326 212925 759640  7942/7362/385   21507/2292    43  336   26.09)
ramon: poll                 wall=11.000s usage=10.882s mem=27724KiB load=1.00 rootload=1.00
(smt.stats   54   7560 217627 783177  8157/7688/385   22508/2292    43  336   26.18)
(smt.stats   55   7661 220008 799123  8248/7882/385   23071/2294    43  336   26.29)
(smt.stats   56   7772 222119 820085  8290/7973/385   23294/2296    43  336   26.29)
(smt.stats   57   7894 225171 834847  8374/7989/385   23815/2296    43  336   26.38)
(smt.stats   58   8028 228683 852986  8458/8139/387   24419/2579    44  341   26.48)
ramon: poll                 wall=12.000s usage=11.881s mem=27908KiB load=1.00 rootload=1.00
(smt.stats   59   8175 231673 868621  8710/8156/387   24952/2583    44  341   26.58)
(smt.stats   60   8336 235539 895785  9067/8489/387   25818/2584    44  341   26.93)
ramon: poll                 wall=13.000s usage=12.881s mem=28488KiB load=1.00 rootload=1.00
(smt.stats   61   8513 239236 919866  9271/8776/387   27069/2584    44  341   27.13)
(smt.stats   62   8707 245094 946881  9405/8991/387   28610/2589    44  341   27.38)
(smt.stats   63   8920 250708 968039  9535/9143/387   29530/2590    44  341   27.59)
ramon: poll                 wall=14.000s usage=13.881s mem=29208KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9154 257189 1004981  9675/9256/387   31586/2596    44  341   27.78)
(smt.stats   65   9411 266145 1058072  9848/9410/387   33435/2598    44  341   27.97)
(smt.stats   66   9512 267874 1072795  9989/9631/387   34778/2599    44  341   28.06)
ramon: poll                 wall=15.000s usage=14.880s mem=29612KiB load=1.00 rootload=1.00
(smt.stats   67   9623 270754 1101644 10080/9686/387   35715/2601    44  341   28.30)
(smt.stats   68   9745 274901 1128965 10197/9788/387   36829/2601    44  341   28.39)
(smt.stats   69   9879 280157 1165349 10313/9910/387   37923/2605    44  341   28.49)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   70  10026 283069 1182983 10373/10025/387   38694/2605    44  341   28.59)
ramon: poll                 wall=16.002s usage=15.882s mem=30172KiB load=1.00 rootload=1.00
(smt.stats   71  10187 290859 1231133 10555/10082/387   39837/2610    44  341   28.78)
(smt.stats   72  10364 296979 1280729 10885/10306/387   40895/2614    44  341   29.07)
ramon: poll                 wall=17.000s usage=16.878s mem=30840KiB load=1.00 rootload=1.00
(smt.stats   73  10558 304368 1323794 11056/10617/387   41511/2621    44  341   29.28)
(smt.stats   74  10771 315633 1414838 11110/10758/387   42352/2623    44  341   29.37)
(smt.stats   75  11005 324655 1481433 11284/10861/388   44376/3739    45  347   29.56)
ramon: poll                 wall=18.000s usage=17.878s mem=31184KiB load=1.00 rootload=1.00
(smt.stats   76  11262 331877 1540869 11461/10985/389   45516/3743    45  347   29.77)
ramon: poll                 wall=19.000s usage=18.878s mem=31652KiB load=1.00 rootload=1.00
(smt.stats   77  11544 336357 1591946 11858/11181/389   47556/3895    46  349   30.16)
(smt.stats   78  11645 339484 1612810 11962/11556/389   48172/3901    46  349   30.26)
(smt.stats   79  11756 342172 1637360 12130/11717/389   48933/3909    46  349   30.35)
ramon: poll                 wall=20.000s usage=19.875s mem=32496KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 14:30:49 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.960s
ramon: group.utime          19.944s
ramon: group.stime          0.016s
ramon: group.mempeak        34008KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              0.99
