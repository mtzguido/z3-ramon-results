ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:29:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25481 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/V2OPTczUGY0h.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             54970
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 21 := 687011649&21
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011648 := 687011649&21474836480
(smt.stats    0    101   2834    858  1097/981/98      94/5     4   15   19.18)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011648 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011648 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011584 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011328 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687010816 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011648 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&21474836480
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1 := 10 << 31
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&21474836480
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1 := 10 << 31
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&21474836480
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1 := 10 << 31
(smt.stats    1    202   4150   2330  1919/1724/115     183/18    10   22   19.37)
(smt.stats    2    313   6824   5796  1976/1774/116     299/20    11   23   19.47)
(smt.stats    3    414   7562   7165  2085/1783/118     402/20    12   26   19.56)
(smt.stats    4    525   8709   8738  2130/1926/121     480/24    13   29   19.56)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10482 := 10482&10483
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023266035 := 2559800510688 << 14
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10482 := 10482&17179871402
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871402
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871238
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871236
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871238
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871236
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10485
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10485
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10496
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&12288
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10496
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&12288
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&12288
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023271936 := 2559800510606 << 14
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023271936 := 2559800510606 << 14
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10496
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10496
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&12288
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023271936 := 2559800510606 << 14
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023271936 := 2559800510606 << 14
(smt.stats    5    647  11372  11303  2210/1996/169     601/30    15   36   19.77)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 32 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 32 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 14 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 12 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 208 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 240 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 6384 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10352 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10352 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 112 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 144 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 176 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 432 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 510 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 432 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 496 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 432 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 496 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 752 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1264 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1264 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1264 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2288 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2300 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2296 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2288 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8944 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8956 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8952 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8944 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10480 := 10482&10484
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023266036 := 2542620649770 << 14
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  12711  14045  2395/2056/233     771/43    16   45   20.16)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1281779302400 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1281779302400 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1281779302400 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1281779302400 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1290033692672 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1290033692672 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1290033692672 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1290033692671 := 1290033692672 << 15
(smt.stats    7    859  14622  17521  2463/2221/274     992/81    18   76   20.65)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1290033692672 << 15
(smt.stats    8    981  15700  19491  2740/2518/289    1250/156    19   81   20.84)
(smt.stats    9   1115  19379  25469  2824/2525/291    1412/260    21  129   20.93)
(smt.stats   10   1216  20876  28461  2897/2660/292    1608/293    22  130   20.93)
(smt.stats   11   1327  22200  31845  3071/2664/292    1735/298    22  130   21.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  25800  40698  3095/2858/293    1874/334    23  132   21.04)
ramon: poll                 wall=1.000s usage=0.923s mem=22296KiB load=0.92 rootload=0.91
(smt.stats   13   1583  29596  49638  3096/2859/294    2127/334    23  132   21.14)
(smt.stats   14   1730  35657  60419  3205/2954/295    2314/394    25  147   21.14)
(smt.stats   15   1831  39106  69459  3243/2994/295    2459/394    25  147   21.24)
(smt.stats   16   1942  40735  75928  3273/3018/296    2649/403    26  152   21.24)
(smt.stats   17   2064  44949  89126  3288/3028/296    2811/403    26  152   21.34)
(smt.stats   18   2198  49235  99329  3390/3077/296    3031/404    26  152   21.53)
(smt.stats   19   2345  53181 108257  3487/3151/296    3244/404    26  152   21.62)
ramon: poll                 wall=2.000s usage=1.923s mem=22988KiB load=1.00 rootload=1.00
(smt.stats   20   2506  54279 110805  3768/3295/297    3419/438    27  156   21.81)
(smt.stats   21   2607  55315 114197  3813/3536/297    3560/438    27  156   21.81)
(smt.stats   22   2718  56862 118282  3874/3571/297    3759/438    27  156   21.92)
(smt.stats   23   2840  59923 124926  4076/3649/297    3910/440    27  156   22.01)
(smt.stats   24   2974  61860 130623  4113/3855/297    4075/443    27  156   22.01)
(smt.stats   25   3121  65011 141241  4163/3874/300    4452/568    28  169   22.01)
ramon: poll                 wall=3.000s usage=2.923s mem=23444KiB load=1.00 rootload=1.00
(smt.stats   26   3282  68372 154813  4379/3936/300    4987/617    29  171   22.11)
(smt.stats   27   3459  72443 164411  4494/4150/300    5501/620    29  171   22.30)
(smt.stats   28   3560  75309 171056  4509/4253/300    5727/621    29  171   22.30)
(smt.stats   29   3673  79231 185458  4657/4267/300    5973/621    29  171   22.30)
(smt.stats   30   3795  81088 192101  4754/4413/300    6133/623    29  171   22.40)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 2&1486189692928
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43080351765956608 := 1357249771518 << 2
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43080351765956608 := 1357249771518 << 2
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43080351765956608 := 1357249771518 << 2
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43082550789212160 := 1357249787508 << 2
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43082550789212160 := 1357249787508 << 2
(smt.stats   31   3929  84102 206330  4968/4597/300    6451/629    29  171   22.49)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076  88576 222660  5036/4725/310    6708/855    30  173   22.62)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 1&45095821314
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 1&45095821315
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2244119076867 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097136130
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2244120391682 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097136130
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2244120391682 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132034
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2244120387586 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097136130
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 45097136130 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097136130
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 45097136130 := 1408749274314 << 1
(smt.stats   33   4237  92373 238030  5170/4907/322    7120/880    31  173   22.72)
ramon: poll                 wall=4.000s usage=3.923s mem=24056KiB load=1.00 rootload=1.00
(smt.stats   34   4414  96031 247791  5221/4923/323    7459/1003    32  180   22.72)
(smt.stats   35   4609  99105 260612  5277/5020/325    7677/1088    33  189   22.72)
(smt.stats   36   4710 100742 268194  5441/5022/325    7825/1088    33  189   22.80)
(smt.stats   37   4821 102927 281129  5597/5195/325    8011/1088    33  189   22.90)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4943 104208 285423  5670/5345/325    8201/1088    33  189   22.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5077 109114 294362  5716/5442/325    8396/1090    33  189   22.99)
(smt.stats   40   5224 111952 304578  5778/5505/325    8609/1092    33  189   22.99)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180319232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876082176 := 3161110875816 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180335616
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876098560 := 3161110875816 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180352000
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876114944 := 3161110875816 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180352000
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876114944 := 3161110875898 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180352000
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876114944 := 3161110875652 << 3
(smt.stats   41   5385 115052 314174  5890/5522/325    8887/1096    33  189   23.09)
ramon: poll                 wall=5.000s usage=4.922s mem=24500KiB load=1.00 rootload=1.00
(smt.stats   42   5562 118005 324974  5928/5661/330    9246/1196    34  190   23.09)
(smt.stats   43   5756 124279 348097  5941/5682/330    9692/1196    34  190   23.19)
(smt.stats   44   5969 129393 362723  5983/5723/334   10233/1346    35  190   23.29)
(smt.stats   45   6070 132777 369985  6009/5741/334   10393/1346    35  190   23.29)
(smt.stats   46   6181 136169 380860  6054/5758/334   10623/1521    36  207   23.29)
(smt.stats   47   6303 139795 395374  6107/5797/334   10883/1524    36  207   23.39)
(smt.stats   48   6437 143880 416044  6163/5902/336   11221/1578    37  214   23.39)
(smt.stats   49   6584 148784 436778  6180/5917/337   11855/1578    37  214   23.49)
(smt.stats   50   6745 153553 450229  6182/5919/337   12143/1673    38  226   23.61)
ramon: poll                 wall=6.000s usage=5.918s mem=25032KiB load=1.00 rootload=1.00
(smt.stats   51   6922 159661 465740  6196/5927/338   12564/1673    38  226   23.61)
(smt.stats   52   7116 166381 490797  6198/5935/338   13428/1748    39  230   23.70)
(smt.stats   53   7329 176750 542296  6203/5940/338   13703/1748    39  230   23.90)
(smt.stats   54   7563 184206 575257  6206/5943/338   14360/1748    39  230   23.90)
(smt.stats   55   7664 186578 584211  6212/5945/338   14520/1748    39  230   23.90)
(smt.stats   56   7775 190075 600238  6221/5954/338   14767/1749    39  230   23.90)
(smt.stats   57   7897 195183 628504  6232/5961/339   15095/1989    40  230   23.90)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1692217118744 := 8589934597 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 8589934597 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 8589934597 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 1 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 2 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 2 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 1 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 1 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 2&68719476776
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8031 196855 636866  6351/6019/365   15327/1993    40  230   24.11)
ramon: poll                 wall=7.000s usage=6.918s mem=25992KiB load=1.00 rootload=0.99
(smt.stats   59   8178 197644 643191  6625/6109/365   15543/1994    40  230   24.51)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 2&549890068712
(smt.stats   60   8339 199250 657121  7050/6557/365   16022/1994    40  230   24.60)
(smt.stats   61   8516 203642 673983  7075/6792/365   16487/2100    41  236   24.60)
(smt.stats   62   8710 210499 693952  7091/6818/366   16877/2100    41  236   24.69)
(smt.stats   63   8923 213880 717371  7103/6826/366   17250/2210    42  240   24.69)
ramon: poll                 wall=8.000s usage=7.917s mem=26312KiB load=1.00 rootload=1.00
(smt.stats   64   9157 225456 739944  7184/6880/368   18061/2210    42  240   24.99)
(smt.stats   65   9414 232532 763695  7636/7003/369   19013/2412    43  243   25.18)
(smt.stats   66   9515 235690 777902  7651/7364/370   19334/2602    44  247   25.18)
ramon: poll                 wall=9.000s usage=8.917s mem=26592KiB load=1.00 rootload=1.00
(smt.stats   67   9626 240443 806440  7727/7365/370   19600/2608    44  247   25.37)
(smt.stats   68   9748 244195 825522  8033/7516/370   20057/2610    44  247   25.37)
(smt.stats   69   9882 247521 847835  8093/7806/371   20513/2769    45  250   25.47)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10029 251501 870276  8100/7809/372   20937/2769    45  250   25.47)
ramon: poll                 wall=10.000s usage=9.917s mem=26972KiB load=1.00 rootload=1.00
(smt.stats   71  10190 257162 907917  8196/7839/374   21637/2887    46  276   25.56)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 3072 := 10482&158040064
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2048 := 10482&158040064
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2048 := 10482&158040064
(smt.stats   72  10367 261630 955373  8327/7918/375   22100/2892    46  276   25.66)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10561 267625 1002614  8371/8052/386   23136/2893    46  276   25.86)
(smt.stats   74  10774 276826 1068927  8522/8231/387   23813/3062    47  288   25.95)
(smt.stats   75  11008 284359 1097994  8524/8237/387   24444/3167    48  288   25.95)
ramon: poll                 wall=11.000s usage=10.917s mem=27624KiB load=1.00 rootload=1.00
(smt.stats   76  11265 291656 1128186  8583/8249/387   25011/3171    48  288   26.30)
(smt.stats   77  11547 301861 1201637  8601/8310/389   25712/3354    49  301   26.30)
(smt.stats   78  11648 307255 1265269  8615/8323/389   25827/3354    49  301   26.30)
(smt.stats   79  11759 311967 1301916  8732/8323/389   26092/3517    50  320   26.41)
ramon: poll                 wall=12.000s usage=11.916s mem=28128KiB load=1.00 rootload=1.00
(smt.stats   80  11881 317053 1330655  8889/8447/389   26623/3523    50  320   26.58)
(smt.stats   81  12015 320004 1353023  8932/8617/389   27270/3523    50  320   26.67)
(smt.stats   82  12162 323911 1374336  9069/8643/390   27690/3668    51  326   26.80)
(smt.stats   83  12323 329869 1407823  9098/8806/390   28110/3668    51  326   26.89)
(smt.stats   84  12500 337529 1458679  9103/8811/390   28624/3668    51  326   26.89)
ramon: poll                 wall=13.000s usage=12.916s mem=28448KiB load=1.00 rootload=0.99
(smt.stats   85  12694 342459 1488170  9109/8817/390   29329/3668    51  326   27.01)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 703499928672 := 703499928675&2197949513408
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 703499927616 := 703499928675&2197949513408
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 703499927616 := 703499928675&2197949513408
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 703499928641 := 703499928675&2197949513408
(smt.stats   86  12907 349375 1525966  9202/8844/391   30017/3827    52  338   27.22)
(smt.stats   87  13141 357104 1573436  9279/8918/411   30569/3828    52  338   27.32)
ramon: poll                 wall=14.000s usage=13.916s mem=28784KiB load=1.00 rootload=1.00
(smt.stats   88  13398 365703 1635093  9567/9018/411   31046/3832    52  338   27.41)
(smt.stats   89  13680 372521 1680106  9595/9295/411   31568/4333    53  376   27.41)
(smt.stats   90  13990 384133 1758234  9691/9321/411   32738/4339    53  376   27.60)
(smt.stats   91  14091 388182 1775962  9706/9416/412   32941/4543    54  391   27.60)
ramon: poll                 wall=15.000s usage=14.912s mem=29352KiB load=1.00 rootload=0.99
(smt.stats   92  14202 391670 1806593  9741/9431/412   33132/4543    54  391   27.60)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   93  14324 394479 1831751  9805/9455/412   33437/4545    54  391   27.70)
(smt.stats   94  14458 398590 1857650  9859/9555/412   33726/4545    54  391   27.70)
(smt.stats   95  14605 404034 1872901  9887/9572/412   34109/4545    54  391   27.70)
(smt.stats   96  14766 409879 1908126  9905/9617/412   34507/4545    54  391   27.79)
(smt.stats   97  14943 418611 1955635  9910/9622/412   34928/4545    54  391   27.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 82)
ramon: poll                 wall=16.000s usage=15.911s mem=29544KiB load=1.00 rootload=1.00
(smt.stats   98  15137 423335 1981102  9945/9635/412   35378/4545    54  391   27.89)
(smt.stats   99  15350 430355 2001966 10026/9670/412   36000/4550    54  391   27.89)
(smt.stats  100  15584 438449 2041433 10145/9792/412   36571/4553    54  391   27.99)
ramon: poll                 wall=17.000s usage=16.910s mem=29864KiB load=1.00 rootload=1.00
(smt.stats  101  15841 449552 2116169 10369/9880/412   37141/4559    54  391   28.08)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  102  16123 457133 2186619 10680/10110/412   37945/4567    54  391   28.18)
(smt.stats  103  16433 465203 2282733 11171/10439/412   38876/4571    54  391   28.50)
ramon: poll                 wall=18.000s usage=17.909s mem=30392KiB load=1.00 rootload=1.00
(smt.stats  104  16773 476583 2366438 11229/10901/412   40303/4572    54  391   28.69)
(smt.stats  105  16874 482145 2388500 11261/10960/412   40435/4573    54  391   28.69)
(smt.stats  106  16985 485691 2410827 11290/10984/412   40979/4573    54  391   28.90)
(smt.stats  107  17107 489694 2427193 11303/11011/412   41423/4573    54  391   28.90)
(smt.stats  108  17241 492524 2436632 11493/11049/412   41627/4577    54  391   29.09)
ramon: poll                 wall=19.000s usage=18.909s mem=30796KiB load=1.00 rootload=1.00
(smt.stats  109  17388 497801 2460351 11564/11249/412   41784/4578    54  391   29.09)
(smt.stats  110  17549 500766 2472212 11666/11296/412   42124/4578    54  391   29.28)
ramon: poll                 wall=20.000s usage=19.909s mem=31068KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:29:58 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.987s
ramon: group.utime          19.963s
ramon: group.stime          0.024s
ramon: group.mempeak        31328KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
