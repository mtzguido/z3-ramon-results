ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:33:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29468 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/32gl4SWdzwxd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             609617
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627773&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1099511627773 := 1099511627774 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627773&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1099511627773 := 1099511627774 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627773&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1099511627773 := 1099511627774 << 31
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   111.111     10000        49          0            1        2)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1 := 2 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 2147483648&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 8589934594 := 8589934593 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1 := 8589934592 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 2147483648&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 8589934594 := 8589934593 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 2147483648&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 8589934594 := 8589934593 << 31
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 17179869184&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 17179869193 := 17179869192 << 31
(smt.stats    0    101   2095    865  1106/942/117      81/13     9   23   51.85)
(sat.ddfw       1      1   56.5028     20001        98          1            1        3)
(smt.stats    1    202   2801   1551  1508/1360/119     180/16    11   24   52.04)
(sat.ddfw       1      1   57.8035     40001       196          2            1        5)
(smt.stats    2    313   3669   3726  1639/1473/124     287/20    14   27   52.04)
(smt.stats    3    414   4010   4056  1906/1498/124     393/22    15   28   52.23)
(sat.ddfw       1      1   50.1672     70001       343          3            1        8)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 3 := 3&4
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 2 := 2&4
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 512 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 512 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 1 := 1&4
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 512 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 512 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 8388616 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 8388616 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 8388616 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 4611690416473899008 := 8389120 << 39
(smt.stats    4    526   5866   5933  2215/2063/154     466/36    19   55   52.42)
ramon: poll                 wall=1.000s usage=0.891s mem=54440KiB load=0.89 rootload=0.88
(sat.ddfw       1      1   42.5532    110001       539          4            1       12)
(sat.ddfw       1      1    38.789    160000       784          5            1       17)
(sat.ddfw       1      1   36.1017    220001      1078          6            1       23)
ramon: poll                 wall=2.000s usage=1.986s mem=54728KiB load=1.10 rootload=1.10
(smt.stats    5    648   7143   6753  2372/2078/154     595/40    19   55   52.53)
(sat.ddfw       1      1   29.7366    290001      1421          7            1       30)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    749   8776   8421  2493/2277/154     708/52    20   58   52.53)
(smt.stats    7    860  10030  10064  2578/2416/155     820/67    21   59   52.63)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067206606846 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067206606848 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067198710272 << 39
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 0&4
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067198710270 << 39
ramon: poll                 wall=3.000s usage=2.937s mem=54692KiB load=0.95 rootload=0.95
(sat.ddfw       1      1   26.4463    370001      1813          8            1       38)
(smt.stats    8    982  11556  11314  2721/2437/155     947/72    21   59   52.63)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627775&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 3298534883327 := 1067173543419 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1099511627775&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 3298534883327 := 1067173543419 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067265818363&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 3266289073915 := 1067198709248 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1034885791742&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067198709759 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1034835460096&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627774 := 1067173543936 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1034835460094&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1099511627775 := 1067173543935 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1034835460094&0
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1097364144129 := 1067173543935 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 21
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 21
(smt.stats    9   1116  13177  13386  2798/2637/179    1065/93    24   75   52.83)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 20
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 18
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 17
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544436&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544436 := 1067173544433 << 17
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 16
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 14
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 15
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544435&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544435 := 1067173544433 << 35
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544947&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544947 := 1067173544945 << 34
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544449&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544449 := 1067173544447 << 34
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067198709761&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067198709761 := 1067198709759 << 33
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544947&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544947 := 1067173544945 << 32
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544947&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544947 := 1067173544945 << 29
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173544947&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173544947 := 1067173544945 << 29
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067198709761&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067198709761 := 1067198709759 << 30
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173545459&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173545459 := 1067173545457 << 24
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173545459&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173545459 := 1067173545457 << 26
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173545459&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173545459 := 1067173545457 << 27
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1067173545459&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1067173545459 := 1067173545457 << 27
(smt.stats   10   1217  14993  16545  2924/2665/184    1170/110    24   75   53.21)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 962072681473&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 962072681473 := 962072681471 << 28
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 962072681411&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 962072681411 := 962072681409 << 29
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 962072678339&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 962072678339 := 962072678337 << 29
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 962072678339&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 962072678339 := 962072678337 << 29
(sat.ddfw       1      1   23.8095    460001      2254          9            1       47)
(smt.stats   11   1328  16774  18113  3162/2927/264    1275/131    25   93   53.49)
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397192066848&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397192066848 := 397192066846 << 28
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397192066848&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397192066848 := 397192066846 << 30
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397192066848&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397192066848 := 397192066846 << 35
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397192066848&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397192066848 := 397192066846 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645246&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645246 := 397158645244 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645245&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645245 := 397158645243 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645245&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645245 := 397158645243 << 36
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645245&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645245 := 397158645243 << 33
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 397158645245&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 397158645245 := 397158645243 << 32
ramon: poll                 wall=4.004s usage=3.939s mem=55656KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  18575  21011  3251/3066/270    1387/143    27   98   53.59)
(smt.stats   13   1584  21492  23622  3292/3082/274    1490/140    28  114   53.59)
(sat.ddfw       1      1    21.692    560001      2745         10            1       57)
ramon: poll                 wall=5.000s usage=4.938s mem=55820KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   19.8234    670001      3284         11            1       68)
(smt.stats   14   1731  25215  27479  3425/3168/276    1624/144    29  119   53.68)
ramon: poll                 wall=6.000s usage=5.930s mem=55968KiB load=0.99 rootload=1.00
(smt.stats   15   1832  28024  29963  3492/3261/276    1721/148    30  121   53.78)
(smt.stats   16   1943  30473  32344  3533/3348/278    1817/148    31  125   53.87)
(smt.stats   17   2065  32862  34532  3565/3352/278    1937/161    32  132   53.87)
(smt.stats   18   2199  37204  41267  3607/3401/279    2064/170    33  132   53.87)
(sat.ddfw       1      1   18.3402    790001      3872         12            1       80)
(smt.stats   19   2346  40554  47335  3629/3436/279    2201/170    33  132   53.87)
(smt.stats   20   2507  44651  53171  3646/3460/286    2325/176    35  156   54.09)
ramon: poll                 wall=7.000s usage=6.930s mem=56520KiB load=1.00 rootload=1.00
(smt.stats   21   2608  49928  59730  3665/3460/286    2430/178    35  156   54.09)
(smt.stats   22   2719  52862  64216  3698/3486/286    2548/179    35  156   54.09)
(smt.stats   23   2841  54707  68253  3715/3529/286    2654/179    35  156   54.09)
(smt.stats   24   2975  56511  71124  3734/3548/289    2766/188    36  159   54.18)
(smt.stats   25   3122  62786  78156  3745/3553/290    2901/190    37  166   54.28)
(sat.ddfw       1      1   17.0335    920001      4509         13            1       93)
(smt.stats   26   3283  69207  84127  3770/3584/293    3040/195    38  171   54.28)
(smt.stats   27   3460  71556  87356  3793/3607/299    3226/220    39  183   54.37)
(smt.stats   28   3561  75881  91808  4108/3846/299    3366/220    39  183   54.59)
ramon: poll                 wall=8.000s usage=7.928s mem=56980KiB load=1.00 rootload=1.00
(smt.stats   29   3672  81010  99372  4183/3855/308    3487/273    40  192   54.78)
(smt.stats   30   3794  86874 105769  4210/3946/308    3624/273    40  192   54.87)
(smt.stats   31   3928  92222 115457  4238/3974/310    3784/299    41  196   55.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  96125 122195  4251/3991/311    3931/323    42  197   55.10)
(smt.stats   33   4236 107598 132165  4263/4001/311    4094/324    42  197   55.23)
(sat.ddfw       1      1   15.9109   1060001      5196         14            1      108)
ramon: poll                 wall=9.000s usage=8.929s mem=57504KiB load=1.00 rootload=1.00
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 996432412672&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 996432412672 := 1095216660509 << 5
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1065151889408&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1065151889408 := 1095216660511 << 5
band: (band[40] (shl[64] (bv2int %0) (mod #315 64)) (if (or #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787 #788 #789 #790 #791 ...) 0 (if #813 1 #865))) 0 := 1065151889408&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #314) 64)) 1065151889408 := 1095216660511 << 5
(smt.stats   34   4413 114808 139280  4350/4043/314    4278/352    44  199   55.41)
ramon: poll                 wall=10.000s usage=9.932s mem=57552KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.9269   1210001      5931         15            1      123)
(smt.stats   35   4607 119839 146068  4425/4115/319    4482/356    44  199   55.51)
(smt.stats   36   4708 125411 153642  4435/4168/319    4581/374    45  200   55.51)
(smt.stats   37   4819 136668 166554  4445/4173/319    4697/374    45  200   55.51)
ramon: poll                 wall=11.000s usage=10.928s mem=58068KiB load=1.00 rootload=1.00
(smt.stats   38   4941 146064 181918  4452/4190/322    4816/383    46  206   55.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 47)
(smt.stats   39   5075 154861 189318  4459/4193/323    4907/383    46  206   55.77)
(sat.ddfw       1      1   14.0449   1370001      6715         16            1      139)
ramon: poll                 wall=12.000s usage=11.932s mem=57984KiB load=1.00 rootload=1.00
(smt.stats   40   5222 157957 192625  4603/4199/323    5076/393    47  209   55.86)
(sat.ddfw       1      1   13.2719   1540001      7549         17            1      156)
ramon: poll                 wall=13.000s usage=12.930s mem=58468KiB load=1.00 rootload=1.00
(smt.stats   41   5383 160214 196564  4851/4366/323    5309/398    47  209   56.05)
ramon: poll                 wall=14.000s usage=13.933s mem=58452KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.5725   1720001      8431         18            1      174)
(smt.stats   42   5560 161356 198937  5124/4635/323    5517/398    47  209   56.24)
ramon: poll                 wall=15.000s usage=14.933s mem=58456KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.933s mem=58484KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.9459   1910001      9362         19            1      193)
ramon: poll                 wall=17.004s usage=16.936s mem=58568KiB load=1.00 rootload=1.00
(smt.stats   43   5754 164140 202804  5637/5110/323    5736/404    47  209   56.63)
(sat.ddfw       1      1    11.383   2110001     10343         20            1      214)
ramon: poll                 wall=18.002s usage=18.040s mem=59184KiB load=1.11 rootload=1.11
(smt.stats   44   5967 168299 209094  6058/5491/323    5990/410    47  209   56.72)
(smt.stats   45   6068 170681 214760  6211/5950/342    6125/517    48  219   56.82)
(smt.stats   46   6179 177331 222955  6216/5955/342    6248/517    48  219   56.82)
ramon: poll                 wall=19.004s usage=19.238s mem=59196KiB load=1.20 rootload=1.20
(smt.stats   47   6301 184556 231109  6279/5958/342    6372/559    49  248   56.91)
(sat.ddfw       1      1   10.8651   2320001     11372         21            1      235)
(smt.stats   48   6435 188325 237872  6321/6050/342    6531/559    49  248   56.91)
ramon: poll                 wall=20.000s usage=20.232s mem=59360KiB load=1.00 rootload=0.99
(smt.stats   49   6582 191623 244826  6336/6071/342    6723/559    49  248   56.91)
ramon: end                  Fri Nov  1 21:34:08 2024
ramon: root.execname        z3
ramon: root.utime           20.300s
ramon: root.stime           0.000s
ramon: group.total          20.317s
ramon: group.utime          20.309s
ramon: group.stime          0.008s
ramon: group.mempeak        59872KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.090s
ramon: loadavg              1.01
