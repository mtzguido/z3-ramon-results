ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:28:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40959 MiB
ramon: sys.mem.avail        61382 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/G7NJFuY85zVa.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3766163
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   198/198     0/0  66       0    18.54   0.01)
(sat.stats    101    491    0   198/198   101/36  66       0    18.74   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 300 :time 0.00)
(sat.stats    101    491    0   198/198   101/36  66       0    18.74   0.01)
(sat.stats    101    491    0   198/198   101/36  66       0    18.74   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 343018.74 :time 0.00)
(sat.stats    101    491    0   200/200    52/35  66       0    18.74   0.01)
(sat.stats    104    504    1   200/200    55/38  66       0    18.74   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    108    577    2   200/200    59/41  66       0    18.74   0.01)
(sat.stats    111    625    3   200/200    62/41  66       0    18.74   0.01)
(sat.stats    114    713    4   200/200    65/43  66       0    18.83   0.02)
(sat.stats    132   1443    5   200/200    83/56  66       0    18.83   0.02)
(sat.stats    135   1527    6   200/200    86/58  66       0    18.83   0.02)
(sat.stats    138   1620    7   200/200    89/59  66       0    18.83   0.02)
(sat.stats    141   1686    8   200/200    92/59  66       0    18.83   0.02)
(sat.stats    144   1758    9   200/200    95/59  66       0    18.83   0.02)
(sat.stats    147   1834   10   200/200    98/59  66       0    18.83   0.02)
(sat.stats    150   1883   11   200/200   101/60  66       0    18.83   0.02)
(sat.stats    153   1968   12   200/200   104/60  66       0    18.83   0.02)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    210   3882   27   200/200   161/103  66       0    18.93   0.04)
lshr: (lshr[33] (bv2int %1) (mod (bv2int %0) 33)) 0 := 5 >>l 30
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 0&8589934584
lshr: (lshr[64] (* 2147483648 (bv2int %1)) (mod (+ 31 #56 #523 #519) 64)) 10737418240 := 10737418240 >>l 61
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2210 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2543 :time 0.00)
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 3353 :time 0.00)
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 4051 :time 0.00)
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 3 := 7&8589934584
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 4 := 7&8589934584
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 2 := 7&8589934584
(sat.stats    314   6396   60   477/475   257/118 110       0    19.80   0.14)
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 5&8589934584
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 2 := 5&8589934584
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 5&8589934584
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 1 := 5&8589934584
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 5&8589934584
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 4 := 5&8589934584
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 2&8589934584
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 2 := 2&8589934584
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 6947 :time 0.00)
(sat.stats    474  10045   79   532/530   416/200 133       0    20.03   0.18)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 8214 :time 0.00)
lshr: (lshr[33] (bv2int %1) (mod (bv2int %0) 33)) 0 := 0 >>l 18
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 0&8589901824
lshr: (lshr[64] (* 2147483648 (bv2int %1)) (mod (+ 31 #56 #523 #519) 64)) 196168336277505 := 0 >>l 49
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 8&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 8 := 8&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 18&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 16 := 18&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 34&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 32 := 34&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 66&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 64 := 66&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 130&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 128 := 130&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 258&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 256 := 258&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 514&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 512 := 514&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 1026&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 1024 := 1026&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 2050&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 2048 := 2050&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 4098&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 4096 := 4098&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 3144 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 3168 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 16 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 576 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 1920 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 256 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 1024 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 512 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 4096 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 2048 := 4099&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 16 := 4114&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 32 := 28712&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 72 := 28744&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 64 := 28744&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 128 := 28808&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 256 := 28936&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 512 := 29192&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 1024 := 29704&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 2048 := 30728&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 24576 := 30728&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 16384 := 30728&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 30729&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 8192 := 30729&8589901824
band: (band[33] (lshr[33] (bv2int %1) (mod #56 33)) (if (= #446 32) 36893488143124135936 (if #448 18446744071562067968 #510))) 0 := 32767&8589901824
band: (band[33] (lshr[64] (* 2147483648 #61) (mod #524 64)) (if (= #547 63) 158456325010081931113378349056 (if #549 79228162505040965556689174528 #673))) 16384 := 32767&8589901824
(sat.stats    812  20455   83  7775/7771   885/401 136       0    23.02   0.46)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 14154 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 15059 :time 0.00)
ramon: poll                 wall=1.000s usage=0.877s mem=24748KiB load=0.88 rootload=0.86
(sat.stats   1384  45905  109 15723/15719  1582/571 319       0    24.19   1.42)
 (sat-cleaner :elim-literals 23 :elim-clauses 0 :cost 19361 :time 0.00)
ramon: poll                 wall=2.000s usage=1.876s mem=25960KiB load=1.00 rootload=1.00
(sat.stats   1911  63785  111 19374/19370  2132/693 358       0    25.07   2.12)
 (sat-cleaner :elim-literals 17 :elim-clauses 0 :cost 22182 :time 0.00)
ramon: poll                 wall=3.000s usage=2.875s mem=36208KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.875s mem=50396KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.874s mem=56080KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts          :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin           :units         :memory       )
(sat.stats   2397  76066  236 122186/122182  2621/703 360       0    57.32   5.76)
ramon: poll                 wall=6.000s usage=5.874s mem=58736KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.874s mem=61272KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.873s mem=62848KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.873s mem=63248KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.873s mem=64704KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.872s mem=66856KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.872s mem=69332KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.872s mem=69664KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.872s mem=71224KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.871s mem=72156KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.871s mem=73020KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.871s mem=73244KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.871s mem=91500KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.869s mem=93400KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.869s mem=94116KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:29:05 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.030s
ramon: group.total          19.975s
ramon: group.utime          19.939s
ramon: group.stime          0.036s
ramon: group.mempeak        105MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.105s
ramon: loadavg              0.99
