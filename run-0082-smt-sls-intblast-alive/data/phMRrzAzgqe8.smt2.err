ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:08:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27325 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/phMRrzAzgqe8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             931838
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   66.6667     10000        49          0            1        2)
(sat.ddfw       1      1   34.7257     20001        98          1            1        3)
(smt.stats    0    101   5134    303  1357/1159/96     107/10     4   14   51.95)
(sat.ddfw       1      1   34.0136     40001       196          2            1        5)
(smt.stats    1    202  10214   1145  1780/1593/100     210/34     5   24   52.25)
(smt.stats    2    313  11484   2473  2729/2458/101     332/41     6   26   52.35)
(smt.stats    3    414  13909   3592  2773/2509/101     433/41     6   26   52.54)
(smt.stats    4    525  14733   5292  2916/2543/107     559/86     9   35   52.64)
ramon: poll                 wall=1.000s usage=0.812s mem=54688KiB load=0.81 rootload=0.80
(sat.ddfw       1      1   32.1199     70001       343          3            1        8)
(smt.stats    5    647  16768   6899  2960/2677/108     676/96    10   37   52.64)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 825 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 2 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 2 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 2 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 2 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 11 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 31 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 58 := 576460752303423487&826
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  18779   9418  3031/2742/143     763/101    13   42   52.94)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 10 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 26 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 58 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 58 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 734 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 730 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 698 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 730 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 730 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 762 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 762 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 766 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 762 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 762 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 698 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 570 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 314 := 576460752303423487&826
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 314 := 576460752303423487&826
(smt.stats    7    859  20879  14872  3115/2861/238     898/129    15   74   53.15)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 576460752303423487&1025
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 576460752303423487&1025
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 576460752303423487&2048
(smt.stats    8    981  24459  18219  3168/2915/263    1169/192    17   86   53.43)
(smt.stats    9   1115  30436  20763  3194/2931/265    1315/234    18   90   53.63)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3072
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&3104
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1184
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1184
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1184
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1184
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1060
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1060
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1060
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1056 := 9007199254740991&1060
(smt.stats   10   1216  31897  23170  3292/2961/282    1518/253    19   91   54.02)
(smt.stats   11   1327  32848  24923  3453/3071/297    1723/300    20   97   54.14)
(sat.ddfw       1      1   28.6738    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  35143  31312  3635/3324/297    2017/304    20   97   54.14)
(smt.stats   13   1583  37628  38526  3676/3410/298    2598/398    21   97   54.24)
(smt.stats   14   1730  42229  54423  3726/3430/298    2846/730    22  102   54.33)
ramon: poll                 wall=2.000s usage=1.744s mem=56476KiB load=0.93 rootload=0.92
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 264 := 288230376151711743&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 256 := 288230376151711743&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 128 := 288230376151711743&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&1024
(smt.stats   15   1832  44677  65391  3786/3530/311    3005/857    24  121   54.44)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 288230376151711743&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 1729382256910271488 := 1152921504606846974 << 57
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 288230376151711743&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 1729382256910271488 := 1152921504606846974 << 57
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 288230376151711743&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 1729382256910271488 := 1152921504606846974 << 57
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1024 := 288230376151711743&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 2305843009213694976 := 1152921504606846974 << 57
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 576460752303421894 << 58
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 288230376151714694 << 58
(sat.ddfw       1      1   24.2361    160000       784          5            1       17)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 576460752303420360 << 58
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 576460752303423428 << 58
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (+ 59 (* 576460752303423487 #103))) 1 := 576460752303423428 << 58
(smt.stats   16   1943  45868  68527  3895/3531/311    3144/862    24  121   54.54)
(smt.stats   17   2065  47688  72527  3933/3643/322    3288/863    24  121   54.54)
(smt.stats   18   2199  51869  88409  3958/3695/324    3460/947    25  133   54.54)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&1024
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&4096
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&4096
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 576460752303423487&4096
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 1 := 576460752303423487&4096
(smt.stats   19   2346  55826 109165  3981/3717/341    3906/1108    27  153   54.75)
(smt.stats   20   2507  59164 117951  4172/3878/345    4293/1224    28  154   54.89)
(sat.ddfw       1      1   21.6298    220001      1078          6            1       23)
(smt.stats   21   2608  60836 123393  4223/3903/345    4472/1224    28  154   54.98)
ramon: poll                 wall=3.000s usage=2.743s mem=57188KiB load=1.00 rootload=1.00
(smt.stats   22   2719  62976 129961  4240/3951/346    4695/1267    29  161   55.08)
(smt.stats   23   2841  64878 137379  4297/3967/346    4871/1268    29  161   55.27)
(smt.stats   24   2975  66631 143875  4368/4022/346    5000/1287    30  170   55.27)
(sat.ddfw       1      1   19.4823    290001      1421          7            1       30)
(smt.stats   25   3122  68757 166853  4409/4103/347    5198/1288    30  170   55.27)
(smt.stats   26   3283  76768 190115  4503/4199/349    5522/1301    31  179   55.37)
ramon: poll                 wall=4.000s usage=3.743s mem=57628KiB load=1.00 rootload=1.00
(smt.stats   27   3460  81470 218617  4523/4219/355    5722/1338    33  213   55.55)
(sat.ddfw       1      1   17.7187    370001      1813          8            1       38)
(smt.stats   28   3561  84490 232161  4584/4232/356    5883/1340    33  213   55.74)
(smt.stats   29   3672  87403 245446  4658/4293/356    6179/1351    34  223   55.74)
ramon: poll                 wall=5.000s usage=4.743s mem=58112KiB load=1.00 rootload=1.00
(smt.stats   30   3794  89707 261031  4718/4371/356    6524/1351    34  223   55.83)
(smt.stats   31   3928  91882 272395  4750/4442/357    6897/1422    35  226   55.93)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4075  94540 284204  4764/4452/357    7209/1426    35  226   56.11)
(sat.ddfw       1      1   16.1841    460001      2254          9            1       47)
(smt.stats   33   4236  96948 292856  4846/4467/358    7405/1481    36  227   56.11)
ramon: poll                 wall=6.000s usage=5.743s mem=58292KiB load=1.00 rootload=1.00
(smt.stats   34   4413 100625 305277  5117/4593/358    7614/1483    36  227   56.31)
(sat.ddfw       1      1    14.892    560001      2745         10            1       57)
(smt.stats   35   4607 104860 320919  5174/4816/358    7888/1486    36  227   56.31)
ramon: poll                 wall=7.000s usage=6.742s mem=58484KiB load=1.00 rootload=1.00
(smt.stats   36   4708 106426 335486  5220/4877/358    8016/1488    36  227   56.40)
(smt.stats   37   4819 108607 355748  5253/4944/359    8157/1532    37  227   56.40)
(smt.stats   38   4941 111049 376830  5260/4952/360    8372/1552    38  233   56.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 23)
(smt.stats   39   5075 113774 385127  5295/4957/360    8553/1552    38  233   56.50)
ramon: poll                 wall=8.000s usage=7.742s mem=58728KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.7586    670001      3284         11            1       68)
(smt.stats   40   5222 117134 399751  5378/4997/360    8861/1553    38  233   56.59)
(smt.stats   41   5383 120809 415826  5391/5077/360    9119/1553    38  233   56.59)
(smt.stats   42   5560 126066 435107  5417/5091/360    9798/1554    38  233   56.59)
ramon: poll                 wall=9.000s usage=8.742s mem=58916KiB load=1.00 rootload=0.99
(smt.stats   43   5754 131023 459537  5500/5111/360   10119/1560    38  233   56.69)
(smt.stats   44   5967 136201 498441  5587/5279/362   10628/1867    40  246   56.79)
(sat.ddfw       1      1   12.7864    790001      3872         12            1       80)
(smt.stats   45   6068 139407 514625  5606/5298/363   10922/1867    40  246   57.27)
(smt.stats   46   6179 146160 552850  5606/5298/363   11042/1867    40  246   57.27)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 394 := 144115188075855871&394
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 3458764513820541322 := 1066 << 56
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 394 := 144115188075855871&394
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 4611686018427388298 := 1066 << 56
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 394 := 144115188075855871&394
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 58 #875 #879) 64)) 4611686018427388298 := 1066 << 56
(smt.stats   47   6301 148618 567750  5717/5318/364   11343/1898    41  260   57.36)
(smt.stats   48   6435 150987 578684  5734/5424/370   11568/1913    42  283   57.36)
ramon: poll                 wall=10.000s usage=9.742s mem=59492KiB load=1.00 rootload=1.00
(smt.stats   49   6582 158099 596490  5743/5433/370   11711/1913    42  283   57.46)
(smt.stats   50   6743 163634 614640  5898/5442/370   12142/1921    42  283   57.56)
(smt.stats   51   6920 168634 632232  6033/5623/370   12781/1923    42  283   57.79)
(sat.ddfw       1      1   11.9168    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.739s mem=60024KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7114 174244 663483  6078/5736/371   13309/2017    43  289   57.88)
(smt.stats   53   7327 183520 714523  6093/5781/371   13850/2017    43  289   57.88)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 1 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 1 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 8 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 16 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 32 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 64 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 128 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 256 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 512 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 1024 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2048 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4096 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 8192 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 16384 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 32768 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 65536 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 131072 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 262144 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 524288 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 1048576 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 2097152 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4194304 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 8388608 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 16777216 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 33554432 := 288230376151711743&288230376151711744
(smt.stats   54   7561 189450 750458  6243/5906/518   14689/2348    44  319   58.47)
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4480 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4352 := 288230376151711743&288230376151711744
band: (band[59] (if (= #411 63) 1 (if #605 3 #868)) (shl[64] (* 2 #101) (mod #883 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (if (= #107 58) 1 (if #626 3 #792)) (shl[59] (bv2int %0) (+ 59 #795))) 4352 := 288230376151711743&288230376151711744
(smt.stats   55   7662 192852 759596  6372/5998/518   14897/2350    44  319   58.66)
ramon: poll                 wall=12.000s usage=11.739s mem=61060KiB load=1.00 rootload=1.00
(smt.stats   56   7773 196492 777451  6397/6043/523   15037/2351    44  319   58.66)
(sat.ddfw       1      1   11.1723   1060001      5196         14            1      108)
(smt.stats   57   7895 199466 784166  6517/6075/523   15215/2351    44  319   58.76)
(smt.stats   58   8029 204075 800034  6571/6231/524   15720/2485    45  323   58.85)
ramon: poll                 wall=13.000s usage=12.738s mem=61344KiB load=1.00 rootload=1.00
(smt.stats   59   8177 214669 843937  6728/6348/526   16068/2564    46  328   59.30)
(smt.stats   60   8338 220866 868238  6902/6517/528   16529/2568    46  328   59.49)
ramon: poll                 wall=14.000s usage=13.738s mem=61852KiB load=1.00 rootload=1.00
(smt.stats   61   8515 226989 886037  6975/6591/531   17271/2627    47  332   59.68)
(sat.ddfw       1      1   10.5138   1210001      5931         15            1      123)
(smt.stats   62   8709 238592 921339  7085/6688/532   17765/2721    48  348   59.78)
(smt.stats   63   8922 247847 945713  7209/6779/533   18607/2726    48  348   60.07)
ramon: poll                 wall=15.000s usage=14.738s mem=62304KiB load=1.00 rootload=1.00
(smt.stats   64   9156 257470 971115  7316/6926/535   19151/2783    49  356   60.17)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9413 270968 1025912  7501/7117/536   20096/2910    50  399   60.36)
ramon: poll                 wall=16.000s usage=15.737s mem=62628KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.93357   1370001      6715         16            1      139)
(smt.stats   66   9514 272598 1033087  7507/7123/537   20427/2910    50  399   60.36)
(smt.stats   67   9625 277614 1052852  7539/7129/537   20885/2912    50  399   60.55)
ramon: poll                 wall=17.000s usage=16.736s mem=62972KiB load=1.00 rootload=1.00
(smt.stats   68   9747 283255 1068908  7590/7168/537   21225/2916    50  399   60.55)
ramon: poll                 wall=18.000s usage=17.735s mem=63056KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.38812   1540001      7549         17            1      156)
(smt.stats   69   9881 290571 1090550  7683/7299/539   21526/3053    51  412   60.65)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10028 296405 1109092  7715/7318/543   21895/3056    51  412   60.65)
ramon: poll                 wall=19.000s usage=18.735s mem=63152KiB load=1.00 rootload=1.00
(smt.stats   71  10189 302836 1136131  7750/7366/547   22273/3135    52  461   60.74)
(smt.stats   72  10366 310843 1185065  7766/7375/548   23177/3328    53  482   60.84)
ramon: poll                 wall=20.004s usage=19.728s mem=63472KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 23:08:28 2024
ramon: root.execname        z3
ramon: root.utime           19.750s
ramon: root.stime           0.020s
ramon: group.total          19.778s
ramon: group.utime          19.754s
ramon: group.stime          0.024s
ramon: group.mempeak        63984KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.054s
ramon: loadavg              0.99
