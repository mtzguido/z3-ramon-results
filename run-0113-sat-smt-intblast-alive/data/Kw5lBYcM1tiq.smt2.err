ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:40:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40971 MiB
ramon: sys.mem.avail        61381 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Kw5lBYcM1tiq.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3801058
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   228/228     0/0  63       0    18.54   0.00)
(sat.stats    112    523    0   228/228   112/35  63       0    18.83   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 426 :time 0.00)
(sat.stats    112    523    0   228/228   112/35  63       0    18.83   0.00)
(sat.stats    112    523    0   228/228   112/35  63       0    18.83   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 381618.83 :time 0.00)
(sat.stats    112    523    0   228/228    58/35  63       0    18.83   0.00)
(sat.stats    127    678    1   228/228    73/47  63       0    18.83   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    130    709    2   228/228    76/47  63       0    18.83   0.01)
(sat.stats    133    780    3   228/228    79/49  63       0    18.83   0.01)
(sat.stats    171   1981    4   228/228   117/79  63       0    18.92   0.01)
(sat.stats    174   2027    5   228/228   120/79  63       0    18.92   0.01)
(sat.stats    177   2088    6   228/228   123/79  63       0    18.92   0.01)
(sat.stats    180   2157    7   228/228   126/79  63       0    18.92   0.01)
(sat.stats    183   2180    8   228/228   129/81  63       0    18.92   0.01)
(sat.stats    186   2235    9   228/228   132/81  63       0    18.92   0.01)
(sat.stats    189   2282   10   228/228   135/81  63       0    18.92   0.01)
(sat.stats    192   2337   11   228/228   138/81  63       0    18.92   0.01)
(sat.stats    195   2417   12   228/228   141/82  63       0    18.92   0.01)
(sat.stats    210   2468   17   228/228   156/96  63       0    18.92   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    400   5414   20   241/241   346/220  63       0    19.50   0.04)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 3663 :time 0.00)
(sat.stats    582   9142   21  1268/1267   537/244  73       0    20.09   0.22)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4473 :time 0.00)
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 281474976710655 := 281474976710655 >>l 47
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 1&4
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #53 #273) 64)) 0 := 18446744073709486080 >>l 63
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 5419 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5670 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 6621 :time 0.00)
 (sat-cleaner :elim-literals 10 :elim-clauses 0 :cost 8019 :time 0.00)
(sat.stats   1297  42346   38  3265/3265  1274/350  93       0    20.56   0.58)
(sat.stats   1300  42357   39  3265/3265  1277/350  93       0    20.56   0.58)
(sat.stats   1598  46907  112  3277/3277  1575/441  93       0    20.76   0.62)
lshr: (lshr[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 21086 >>l 5
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 657&17592186044416
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #53 #273) 64)) 5101452477903948810 := 1379860480 >>l 21
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 8796093021095 := 8796093022206&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 8796092968224 := 8796093022206&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 8796093022175 := 8796093022205&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 8796093022046 := 8796093022047&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 8796093022044 := 8796093022045&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046511312 := 4398046511313&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046511360 := 4398046511361&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046511616 := 4398046511617&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046512128 := 4398046512129&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046513152 := 4398046513153&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046515200 := 4398046515201&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046519296 := 4398046519297&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046527488 := 4398046527489&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046543872 := 4398046543873&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046576640 := 4398046576641&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046642176 := 4398046642177&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046773248 := 4398046773249&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398047035392 := 4398047035393&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398047559680 := 4398047559681&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398048608256 := 4398048608257&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398050705408 := 4398050705409&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398054899712 := 4398054899713&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398063288320 := 4398063288321&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398080065536 := 4398080065537&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398113619968 := 4398113619969&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398180728832 := 4398180728833&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398314946560 := 4398314946561&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398583382016 := 4398583382017&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4399120252928 := 4399120252929&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4400193994752 := 4400193994753&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4402341478400 := 4402341478401&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4406636445696 := 4406636445697&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4415226380288 := 4415226380289&17592186044416
ramon: poll                 wall=1.000s usage=0.908s mem=24240KiB load=0.91 rootload=0.88
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4432406249472 := 4432406249473&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4466765987840 := 4466765987841&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4535485464576 := 4535485464577&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4672924418048 := 4672924418049&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4947802324992 := 4947802324993&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 5497558138880 := 5497558138881&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 6597069766656 := 6597069766657&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046511296 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046511240 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046511232 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 4398046511104 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 17826 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 60301 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 109368 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 4 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 480256 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 64 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 16 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 32 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 512 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 128 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 256 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 7608320 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 91635712 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 4096 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 8192 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 282984448 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 32768 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 65536 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 5808848896 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 2210398208 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 2621440 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 1048576 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 2097152 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 158125260800 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 8388608 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 190555619328 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 671491293184 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 67108864 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 6199248420864 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 268435456 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 3647500976128 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 4677219385344 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 2147483648 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 6536940224512 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 2370821947392 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 17179869184 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 5497558138880 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 68719476736 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 962072674304 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 274877906944 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 549755813888 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 2199023255552 := 8796093022203&17592186044416
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022203&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 4398046511104 := 8796093022203&17592186044416
 (sat-cleaner :elim-literals 12 :elim-clauses 1 :cost 22245 :time 0.00)
(sat.stats   2594  77335  205 32081/32080  3145/1256 660       0    30.47   1.76)
ramon: poll                 wall=2.000s usage=1.907s mem=31924KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 22581 :time 0.00)
band: (band[48] (lshr[48] (bv2int %0) (mod #53 48)) (if (= #458 47) 281474976710656 (if #460 140737488355328 #552))) 0 := 8796093022191&17592186044416
band: (band[48] (lshr[64] (* 65536 #63) (mod #274 64)) (if (= #575 63) 36893488147419103232 (if #577 18446744073709551616 #701))) 4 := 8796093022191&17592186044416
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 24791 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 2 :cost 24799 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 9 :cost 25471 :time 0.00)
ramon: poll                 wall=3.000s usage=2.904s mem=33852KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.904s mem=34908KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.903s mem=34972KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.903s mem=35060KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 30306 :time 0.00)
ramon: poll                 wall=7.000s usage=6.902s mem=35400KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.901s mem=35924KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 897 :elim-clauses 203 :cost 32268 :time 0.00)
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   4520 138950  307 49527/49525  4808/2196 819       0    34.95   8.47)
ramon: poll                 wall=9.000s usage=8.900s mem=36424KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.900s mem=37176KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.899s mem=37952KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.899s mem=38436KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.899s mem=38912KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.899s mem=39320KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.898s mem=39760KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.898s mem=40180KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.898s mem=40468KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.898s mem=40704KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.897s mem=41020KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.897s mem=41316KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:40:37 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.994s
ramon: group.utime          19.966s
ramon: group.stime          0.028s
ramon: group.mempeak        41832KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.098s
ramon: loadavg              0.99
