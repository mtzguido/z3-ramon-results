ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:34:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29471 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/3SZrKyUw49DO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             613557
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   61.7284     10000        49          0            1        2)
(smt.stats    0    101   4630    669  1322/1195/102      95/14     7   24   51.96)
(sat.ddfw       1      1      36.5     20001        98          1            1        3)
(smt.stats    1    202   6041   1921  1747/1563/102     198/22     7   24   52.15)
(smt.stats    2    313   8062   5521  1802/1609/102     321/24     7   24   52.26)
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1 := 1&274877906943
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 1 := 157 << 39
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1 := 1&274877906943
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 1 := 157 << 39
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1 := 1&274877906943
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 1 := 157 << 39
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1 := 1&274877906943
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 1 := 157 << 39
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1 := 1&274877906943
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 1 := 157 << 39
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 156 := 156&274877906943
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 156 := 157 << 39
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 274877906943 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 274877906942 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 274877906940 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 0 := 86311662780416&274877906943
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 86311662780417 := 157 << 39
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 0 := 86311662780416&274877906943
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 86311662780417 := 157 << 39
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 274877906939 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 274877906938 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 274877906928 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 40 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 32 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 64 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 128 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 256 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 512 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1024 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 2048 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 4096 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 8192 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 16384 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 32768 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 65536 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 131072 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 262144 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 524288 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1048576 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 2097152 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 4194304 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 8388608 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 16777216 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 2097152 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 4194304 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 8388608 := 86311662780416&274877906943
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 16777216 := 86311662780416&274877906943
(sat.ddfw       1      1   40.1606     40001       196          2            1        5)
(smt.stats    3    414   9006   6634  2085/1681/113     445/38     8   27   53.64)
(smt.stats    4    540  11497   8319  2625/2389/247     619/101    12   66   53.44)
(sat.ddfw       1      1   36.0144     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.899s mem=55832KiB load=0.90 rootload=0.89
(smt.stats    5    662  13992  12076  2976/2646/249     842/130    14   73   53.54)
(sat.ddfw       1      1   31.1284    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    763  15215  15751  3135/2779/250    1003/148    15   75   53.64)
(sat.ddfw       1      1    27.085    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.896s mem=55832KiB load=1.00 rootload=1.00
(smt.stats    7    874  16952  21707  3268/2883/251    1370/186    16   77   53.73)
(smt.stats    8    996  20006  29729  3380/3038/251    1666/186    16   77   53.83)
(sat.ddfw       1      1   23.8383    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.897s mem=56040KiB load=1.00 rootload=1.00
(smt.stats    9   1130  23314  32411  3566/3178/252    1924/544    17   78   53.93)
(sat.ddfw       1      1   21.2186    290001      1421          7            1       30)
(smt.stats   10   1231  25905  36123  3817/3491/254    2234/563    18   80   54.02)
(smt.stats   11   1342  27316  39126  4103/3628/254    2497/680    19   81   54.12)
ramon: poll                 wall=4.000s usage=3.899s mem=56316KiB load=1.00 rootload=1.00
(smt.stats   12   1464  29354  44432  4394/4094/255    2911/852    20   84   54.21)
(sat.ddfw       1      1   19.0476    370001      1813          8            1       38)
(smt.stats   13   1598  32136  61671  4519/4157/255    3445/856    20   84   54.37)
(smt.stats   14   1745  35144  82295  4703/4337/255    3626/857    20   84   54.47)
ramon: poll                 wall=5.000s usage=4.911s mem=56604KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   17.4486    460001      2254          9            1       47)
(smt.stats   15   1846  36423  87731  4840/4502/255    3733/860    20   84   54.66)
(smt.stats   16   1957  36848  88556  5027/4744/255    3857/864    20   84   54.75)
(sat.ddfw       1      1    16.975    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.263s mem=57188KiB load=1.35 rootload=1.35
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions    )
(smt.stats   17   2079  39686 102529  5225/4909/259    4169/1273    21   94   54.75)
(smt.stats   18   2213  41598 116672  5318/4983/259    4413/1273    21   94   54.87)
(smt.stats   19   2360  45326 143703  5365/5081/260    4656/1513    22   94   54.96)
(smt.stats   20   2521  47294 155844  5495/5174/260    4868/1517    22   94   54.96)
ramon: poll                 wall=7.000s usage=7.413s mem=57288KiB load=1.15 rootload=1.15
(sat.ddfw       1      1   15.7683    670001      3284         11            1       68)
(smt.stats   21   2622  49888 160239  5606/5249/261    4984/1570    23   95   55.06)
(smt.stats   22   2733  53125 174757  5772/5398/261    5104/1570    23   95   55.15)
ramon: poll                 wall=8.000s usage=8.413s mem=57456KiB load=1.00 rootload=1.00
(smt.stats   23   2855  54596 186157  5940/5570/261    5319/1572    23   95   55.15)
(sat.ddfw       1      1   14.4161    790001      3872         12            1       80)
(smt.stats   24   2989  57036 197455  6105/5780/262    5526/1645    24   96   55.25)
ramon: poll                 wall=9.003s usage=9.416s mem=57584KiB load=1.00 rootload=1.01
(smt.stats   25   3136  60786 204821  6218/5867/262    5692/1647    24   96   55.25)
(smt.stats   26   3297  64970 220096  6353/5991/263    5961/1730    25   99   55.42)
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 1729382256910270464 := 2452619264 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 1729382256910270464 := 2452619264 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 1729382256910270464 := 2452619264 << 2
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 1729382256910270464 := 2452619264 << 2
(smt.stats   27   3474  68519 233247  6475/6150/263    6357/1734    25   99   55.42)
(sat.ddfw       1      1    13.302    920001      4509         13            1       93)
ramon: poll                 wall=10.003s usage=10.416s mem=57728KiB load=1.00 rootload=1.00
(smt.stats   28   3575  71281 234722  6591/6224/268    6466/1956    26  100   55.53)
(smt.stats   29   3686  73369 244623  6684/6346/268    6611/1957    26  100   55.64)
(smt.stats   30   3808  76038 263728  6780/6457/268    6800/1992    27  100   55.64)
(smt.stats   31   3942  78551 281630  6897/6546/268    6956/1992    27  100   55.64)
ramon: poll                 wall=11.000s usage=11.604s mem=57964KiB load=1.19 rootload=1.18
(smt.stats   32   4089  81142 294264  6920/6640/272    7143/2049    28  101   55.77)
(sat.ddfw       1      1   12.4356   1060001      5196         14            1      108)
ramon: poll                 wall=12.003s usage=12.605s mem=58032KiB load=1.00 rootload=1.01
(smt.stats   33   4250  83669 314997  7163/6904/273    7347/2107    29  101   55.87)
(sat.ddfw       1      1   11.6045   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=13.601s mem=58296KiB load=1.00 rootload=0.99
(smt.stats   34   4427  86162 328245  7353/6905/273    7538/2107    29  101   55.96)
(smt.stats   35   4621  89498 349923  7481/7189/273    7885/2109    29  101   55.96)
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 718274370&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554509&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554509&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554510&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554509&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554510&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554512&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554531&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554528&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554528&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554560&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554624&34359738367
(smt.stats   36   4722  92995 368497  7535/7258/302    8035/2237    31  119   56.20)
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554688&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554752&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33554944&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33556047&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33556046&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33556044&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33555520&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33556544&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33556032&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 576 := 33556032&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 263232 := 33554752&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 263232 := 33554752&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 263232 := 33554752&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 263488 := 33554752&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 279616 := 279616&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 17293822569102984256 := 33554457 << 36
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 263232 := 281664&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 263232 := 281664&34359738367
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 263232 := 283712&34359738367
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   37   4833  95219 376918  7778/7429/361    8370/2249    31  119   56.50)
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 263232 := 263232&34359738367
shl: (shl[64] (bv2int %0) (mod (+ #100 #406) 64)) 17293822569102967872 := 33554457 << 36
(smt.stats   38   4955  97965 392516  7837/7532/390    8740/2397    32  153   56.59)
ramon: poll                 wall=14.000s usage=14.599s mem=58764KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5089 101483 409493  8014/7610/390    9243/2402    32  153   56.69)
(sat.ddfw       1      1   10.8762   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=15.600s mem=59048KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=16.601s mem=59108KiB load=1.00 rootload=1.00
(smt.stats   40   5236 105002 430147  8240/7817/390    9514/2403    32  153   56.88)
(sat.ddfw       1      1   10.2366   1540001      7549         17            1      156)
ramon: poll                 wall=17.003s usage=17.604s mem=59252KiB load=1.00 rootload=1.01
(smt.stats   41   5397 111366 462850  8281/7992/390   10012/2403    32  153   56.88)
(smt.stats   42   5574 115642 489218  8387/8053/390   10580/2406    32  153   56.97)
(smt.stats   43   5768 120210 509962  8440/8134/390   10825/2406    32  153   56.97)
ramon: poll                 wall=18.000s usage=18.600s mem=59164KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   9.72973   1720001      8431         18            1      174)
(smt.stats   44   5981 124505 526591  8615/8205/390   11281/2406    32  153   57.07)
ramon: poll                 wall=19.003s usage=19.746s mem=59624KiB load=1.14 rootload=1.15
(smt.stats   45   6082 126257 534443  8739/8359/390   11440/2408    32  153   57.17)
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1717953626112 := 1717986920448&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020737024 := 1718070020096&144115188075855871
(smt.stats   46   6193 128120 547099  8987/8551/390   11622/2419    32  153   57.26)
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020737024 := 1718069757952&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020737024 := 1718069757952&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020737024 := 1718069757952&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020737024 := 1718070020096&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020737024 := 1718070020096&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718068709376&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054029312&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054029312&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054029312&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054029312&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054029312&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054569984&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054529024&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054815744&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054832128&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718054832128&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718056404992&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718058502144&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718058502144&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718058502144&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718062934016&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718062925824&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718062729216&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718062761984&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718062696448&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718062696463&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718020753408 := 1718062696448&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718029142016 := 1718062696448&144115188075855871
band: (band[59] (shl[64] (bv2int %0) (mod #407 64)) (if (or #816 #817) 0 (if #818 1 #943))) 1718029174784 := 1718062696448&144115188075855871
(smt.stats   47   6315 130714 560639  9260/8726/400   11945/3382    33  155   57.69)
(smt.stats   48   6449 133604 576616  9530/9018/490   12975/3438    34  173   57.98)
(smt.stats   49   6596 139102 607210  9539/9279/499   13389/3988    35  180   58.42)
ramon: poll                 wall=20.000s usage=20.933s mem=60748KiB load=1.19 rootload=1.18
ramon: end                  Fri Nov  1 21:35:14 2024
ramon: root.execname        z3
ramon: root.utime           20.980s
ramon: root.stime           0.000s
ramon: group.total          20.989s
ramon: group.utime          20.980s
ramon: group.stime          0.008s
ramon: group.mempeak        61048KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.05
