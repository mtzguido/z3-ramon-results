ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:16:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25846 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1400
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/OQAssQvFeidq.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             12526
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2569    656  1101/992/90      96/4     3   13   18.98)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 73 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 73 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 303105 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4095 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4094 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4092 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4088 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4080 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 32 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1024 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 2080 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 2048 := 4095&303104
(smt.stats    1    203   4008   1838  1707/1541/165     197/21     8   36   19.58)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 15 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 10 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1024 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 5 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2 := 4095&303104
(smt.stats    2    314   6602   5221  1797/1627/249     312/39    12   60   19.98)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1984 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1920 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1024 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 960 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 20 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 20 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 20 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1024 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32 := 4095&303104
(smt.stats    3    416   7918   7730  1888/1713/353     440/52    15   81   20.36)
(smt.stats    4    527  10247  10479  2206/2005/357     546/127    18  106   20.36)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 64 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 44 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 45 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1 := 1&84
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1 := 1&84
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 1&84
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 1&84
(smt.stats    5    650  12631  12836  2281/2075/365     657/148    20  114   20.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    751  15158  17289  2370/2142/368     794/148    20  114   20.84)
(smt.stats    7    862  19127  22913  2420/2181/372     924/177    22  131   20.94)
(smt.stats    8    984  22142  27169  2478/2249/376    1133/249    24  143   21.03)
(smt.stats    9   1118  27805  36118  2503/2259/379    1270/251    24  143   21.03)
(smt.stats   10   1219  29868  40537  2516/2283/380    1413/272    26  149   21.03)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 3 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 3 := 8796093022207&8796093022207
(smt.stats   11   1330  32812  49256  2565/2318/387    1593/314    28  151   21.13)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 7 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 7 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 15 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 15 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 31 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 31 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 63 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 63 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 127 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 127 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 4351 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8447 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8703 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8703 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 9215 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 9215 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 10239 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 10239 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16383 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16383 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8191 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8191 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8191 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8191 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16383 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32767 := 8796093022207&8796093022207
(smt.stats   12   1452  34775  55779  2729/2488/512    1851/333    29  172   21.80)
(smt.stats   13   1586  39152  62184  2840/2575/514    2124/424    31  199   21.90)
(smt.stats   14   1733  43783  75303  3019/2705/516    2440/470    32  199   22.19)
ramon: poll                 wall=1.000s usage=0.991s mem=23432KiB load=0.99 rootload=0.95
(smt.stats   15   1834  45500  79332  3192/2791/516    2647/523    33  203   22.28)
(smt.stats   16   1945  48306  86383  3374/3112/519    3360/630    34  212   22.38)
(smt.stats   17   2067  52781  96443  3418/3155/524    3678/779    35  223   22.47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   18   2201  56625 112037  3594/3260/526    4041/827    36  223   22.57)
(smt.stats   19   2348  60906 133189  3813/3346/527    4590/860    37  226   22.68)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32768 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32768 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32768 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 24576 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 20480 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16384 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16384 := 8796093022207&4398046576640
(smt.stats   20   2509  64216 147832  3958/3659/531    5344/962    38  229   22.88)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 139266 := 8796093022207&4398046584834
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 139266 := 8796093022207&4398046584834
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 139266 := 8796093022207&4398046601218
(smt.stats   21   2610  65737 156969  4194/3722/547    5727/969    38  229   22.97)
(smt.stats   22   2721  67150 164460  4562/3970/553    6000/1313    39  243   23.16)
ramon: poll                 wall=2.000s usage=1.990s mem=24556KiB load=1.00 rootload=1.00
(smt.stats   23   2843  70407 182258  4794/4303/553    6699/1320    39  243   23.26)
(smt.stats   24   2977  73548 196377  4933/4656/554    7645/1532    41  246   23.65)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 30720 := 8796093022207&4398046771200
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046525440
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046525440
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046525440
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046525440
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
(smt.stats   25   3124  77505 215057  5272/4880/556    8341/1909    42  247   23.87)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046263296
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046263296
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046263296
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&538624
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 538624 := 8796093022207&4398046001152
(smt.stats   26   3285  80636 229122  5690/4965/593    8847/1916    42  247   24.06)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 538624 := 8796093022207&800768
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 538624 := 8796093022207&800768
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 538624 := 8796093022207&800768
(smt.stats   27   3462  85506 246737  5841/5513/629    9979/1960    43  260   24.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   28   3563  89355 257921  5869/5542/631   10527/2328    44  264   24.54)
ramon: poll                 wall=3.000s usage=2.989s mem=26052KiB load=1.00 rootload=1.00
(smt.stats   29   3674  93094 269072  5974/5657/633   10781/2431    45  278   24.63)
(smt.stats   30   3796  96835 287890  6064/5750/634   11994/2437    45  278   24.92)
(smt.stats   31   3931 101840 305000  6267/5954/639   13074/2923    46  280   25.02)
(smt.stats   32   4078 107353 333279  6303/5960/639   13502/2923    46  280   25.11)
ramon: poll                 wall=4.000s usage=3.988s mem=26912KiB load=1.00 rootload=1.00
(smt.stats   33   4239 111657 364693  6569/6012/639   14424/3385    47  293   25.44)
(smt.stats   34   4416 114672 388798  7008/6695/642   15463/3588    48  294   25.63)
(smt.stats   35   4610 123624 421361  7026/6713/645   16844/3897    49  323   25.83)
(smt.stats   36   4711 130489 451812  7074/6739/647   17253/4124    50  333   26.02)
ramon: poll                 wall=5.000s usage=4.988s mem=27804KiB load=1.00 rootload=1.00
(smt.stats   37   4822 137007 469440  7151/6763/647   17631/4130    50  333   26.16)
(smt.stats   38   4944 142288 492957  7280/6967/648   18488/4562    51  348   26.44)
(smt.delete-inactive-clauses  :num-deleted-clauses 444)
(smt.stats   39   5078 149913 538548  7298/6979/650   18736/4563    51  348   26.44)
(smt.stats   40   5225 156569 564171  7321/7008/652   19201/4821    52  368   26.54)
(smt.stats   41   5386 164737 598743  7516/7077/652   19771/4834    52  368   26.88)
(smt.stats   42   5563 174226 642226  7567/7232/657   21077/5014    53  376   26.98)
ramon: poll                 wall=6.000s usage=5.987s mem=28448KiB load=1.00 rootload=1.00
(smt.stats   43   5757 186563 716835  7611/7266/657   22100/5319    54  410   27.37)
(smt.stats   44   5970 196110 764551  7764/7401/663   23396/5595    55  419   27.75)
(smt.stats   45   6071 202478 786698  7779/7414/664   23670/6153    56  439   27.75)
(smt.stats   46   6182 209908 817044  7871/7430/664   24065/6160    56  439   27.85)
ramon: poll                 wall=7.000s usage=6.987s mem=29412KiB load=1.00 rootload=0.99
(smt.stats   47   6304 216461 845261  8040/7531/664   24402/6238    57  444   28.04)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6438 222457 867151  8188/7691/664   25079/6243    57  444   28.24)
(smt.stats   49   6585 229308 886797  8201/7841/667   25728/6384    58  458   28.33)
(smt.stats   50   6746 233707 939779  8297/7915/667   26109/6384    58  458   28.73)
ramon: poll                 wall=8.000s usage=7.986s mem=30404KiB load=1.00 rootload=1.00
(smt.stats   51   6923 240705 1004501  8323/7936/667   26656/6384    58  458   28.83)
(smt.stats   52   7117 250047 1060288  8348/7961/667   27362/6384    58  458   29.04)
ramon: poll                 wall=9.003s usage=8.988s mem=30632KiB load=1.00 rootload=1.00
(smt.stats   53   7330 260133 1105406  8438/7976/667   28166/6394    58  458   29.23)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   54   7564 269068 1149389  8701/8247/680   30237/6781    59  461   29.42)
ramon: poll                 wall=10.000s usage=9.985s mem=31116KiB load=1.00 rootload=1.00
(smt.stats   55   7665 274696 1176617  8778/8315/680   30764/6783    59  461   29.62)
(smt.stats   56   7776 281329 1208175  8911/8408/680   31230/7050    60  689   29.72)
(smt.stats   57   7898 287964 1235752  9022/8536/680   31711/7052    60  689   29.72)
ramon: poll                 wall=11.000s usage=10.985s mem=31428KiB load=1.00 rootload=1.00
(smt.stats   58   8032 291879 1251078  9107/8662/680   33106/7055    60  689   29.91)
(smt.stats   59   8179 298196 1276328  9378/8947/681   33872/7232    61  690   30.00)
ramon: poll                 wall=12.000s usage=11.984s mem=31636KiB load=1.00 rootload=1.00
(smt.stats   60   8340 305482 1301279  9600/9022/681   34598/7237    61  690   30.10)
(smt.stats   61   8517 311646 1327346  9755/9254/681   35414/7239    61  690   30.29)
(smt.stats   62   8711 320369 1354448  9886/9374/681   36066/7245    61  690   30.58)
(smt.stats   63   8924 321304 1356488  9979/9581/681   36298/7245    61  690   30.86)
ramon: poll                 wall=13.000s usage=12.983s mem=32720KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   64   9158 331408 1439373 10753/10361/681   38511/7245    61  690   31.05)
(smt.stats   65   9415 340508 1522349 10927/10384/681   39930/7246    61  690   31.24)
ramon: poll                 wall=14.000s usage=13.983s mem=33040KiB load=1.00 rootload=1.00
(smt.stats   66   9516 341693 1529604 10941/10547/681   40645/7246    61  690   31.34)
(smt.stats   67   9627 342143 1540847 10941/10547/681   41019/7246    61  690   31.55)
(smt.stats   68   9749 348981 1564427 10957/10559/681   41320/7246    61  690   31.55)
(smt.stats   69   9883 356277 1622201 10989/10568/681   41682/7249    61  690   31.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10030 359698 1653598 11100/10661/681   42271/7249    61  690   31.85)
(smt.stats   71  10191 366070 1709420 11128/10694/681   42895/7251    61  690   31.95)
ramon: poll                 wall=15.000s usage=14.982s mem=33500KiB load=1.00 rootload=1.00
(smt.stats   72  10368 371275 1728310 11177/10714/682   43294/8718    62  691   31.95)
(smt.stats   73  10562 377443 1788660 11278/10817/682   44270/8719    62  691   32.05)
(smt.stats   74  10775 383527 1807392 11423/10872/682   44830/8723    62  691   32.14)
ramon: poll                 wall=16.000s usage=15.982s mem=33984KiB load=1.00 rootload=1.00
(smt.stats   75  11009 388778 1830575 11526/11110/683   45991/9495    63  703   32.33)
(smt.stats   76  11266 404285 1884966 11581/11118/683   47147/9498    63  703   32.43)
ramon: poll                 wall=17.000s usage=16.981s mem=34404KiB load=1.00 rootload=1.00
(smt.stats   77  11548 420208 1993400 11657/11241/685   48191/9749    64  712   32.62)
(smt.stats   78  11649 426761 2030014 11672/11245/687   48507/9753    64  712   32.71)
(smt.stats   79  11760 433335 2068669 11770/11266/687   48974/9759    64  712   32.71)
ramon: poll                 wall=18.000s usage=17.981s mem=34528KiB load=1.00 rootload=1.00
(smt.stats   80  11882 443427 2166296 11783/11365/688   49304/9759    64  712   32.81)
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas            :deletions     )
(smt.stats   81  12016 447674 2217008 11822/11379/688   49901/10082    65  730   32.81)
(smt.stats   82  12163 455387 2259136 11965/11515/689   50462/10087    65  730   32.91)
ramon: poll                 wall=19.000s usage=18.980s mem=34732KiB load=1.00 rootload=1.00
(smt.stats   83  12324 462461 2322345 12143/11718/692   51555/10317    66  793   33.10)
(smt.stats   84  12501 468131 2386690 12257/11744/692   52798/10318    66  793   33.30)
ramon: poll                 wall=20.000s usage=19.980s mem=35040KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 18:17:19 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.040s
ramon: group.total          19.993s
ramon: group.utime          19.953s
ramon: group.stime          0.040s
ramon: group.mempeak        35300KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
