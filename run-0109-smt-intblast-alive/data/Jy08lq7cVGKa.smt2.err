ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:02:49 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41967 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Jy08lq7cVGKa.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2909301
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4968   1348  1129/1004/100      95/11     6   18   19.17)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1&828984001514
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 1 := 2199023255551 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1&828984001514
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 1 := 2199023255551 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 2199023255550&828984001514
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1&828984001514
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 1 := 2 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1099511627776&828984001514
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 1099511627777 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1&828984001514
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 1 := 2 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1099511627776&828984001514
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 1099511627777 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 1 := 1099511627776&828984001514
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 2 := 2&828984001514
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 2 := 251658239 << 40
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&828984001514
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 184549376 << 40
(smt.stats    1    202   6213   2650  1907/1733/130     182/22     9   28   19.36)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&51811500094
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 184549376 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&51811500094
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 184549376 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&51811500094
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 184549376 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&51811500094
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 184549376 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&51811500094
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 0 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&51811500094
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 0 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&51811500094
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 0 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&51811500094
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 0 << 36
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&51811500094
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 0 << 36
(smt.stats    2    313   9095   4346  2197/1993/143     291/28    11   35   19.59)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 2198754820096 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 2198754820096 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 2198754820096 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 2198754820095 := 2198754820096 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 805306368 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 805306367 := 805306368 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 805306368 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 805306367 := 805306368 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&103623000189
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 0 := 805306368 << 37
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&103623000189
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 369098752 := 805306368 << 37
(smt.stats    3    414  11439   6967  2282/2068/166     393/34    12   41   19.80)
(smt.stats    4    525  12639   8070  2344/2107/167     504/40    12   41   19.90)
(smt.stats    5    647  13237   9466  2543/2181/168     639/49    13   44   20.09)
ramon: poll                 wall=1.001s usage=0.944s mem=21240KiB load=0.94 rootload=0.94
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14520  15087  2708/2392/168     763/62    14   45   20.09)
(smt.stats    7    859  16552  19064  2817/2555/170     909/89    16   48   20.18)
(smt.stats    8    981  18042  22119  2997/2762/173    1036/120    18   53   20.18)
(smt.stats    9   1115  20351  26067  3043/2774/173    1190/135    19   59   20.18)
(smt.stats   10   1216  24288  31940  3057/2817/173    1302/137    19   59   20.30)
(smt.stats   11   1327  25834  34766  3117/2831/173    1427/138    19   59   20.30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27837  38616  3217/2977/179    1562/181    20   62   20.41)
ramon: poll                 wall=2.000s usage=1.942s mem=21552KiB load=1.00 rootload=0.99
(smt.stats   13   1583  31637  43147  3259/2993/186    1674/192    21   95   20.41)
(smt.stats   14   1730  35486  46929  3353/3028/187    1837/206    22  100   20.50)
(smt.stats   15   1831  37792  51437  3432/3194/190    1941/229    23  102   20.50)
(smt.stats   16   1942  39623  55557  3453/3198/190    2070/230    23  102   20.60)
(smt.stats   17   2064  41197  59679  3471/3229/194    2197/242    24  105   20.60)
(smt.stats   18   2198  43103  65541  3488/3240/194    2340/254    25  108   20.60)
(smt.stats   19   2345  45051  71750  3492/3255/195    2490/266    26  110   20.74)
(smt.stats   20   2506  46543  76104  3552/3310/198    2651/274    27  111   20.74)
(smt.stats   21   2607  48888  79533  3568/3325/198    2748/274    27  111   20.74)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000377&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000377&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000377&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000377&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000375&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000373&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 5&207246000378
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 19791209299973 := 2198956146761 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000367&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000367&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000365&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000353&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 207246000353&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 3&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 33&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 65&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 65&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 3&207246000378
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 5&207246000378
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 19791209299973 := 2198956146761 << 38
(smt.stats   22   2718  50824  83235  3697/3332/198    2878/304    28  116   20.94)
(smt.stats   23   2840  52044  86485  3756/3475/228    3008/305    28  116   20.94)
ramon: poll                 wall=3.000s usage=2.942s mem=22136KiB load=1.00 rootload=1.00
(smt.stats   24   2974  54110  91545  3843/3526/228    3144/331    29  122   20.94)
(smt.stats   25   3121  57260  97167  3855/3617/229    3311/338    30  124   21.04)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 369098751 := 402653184 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 369098751 := 402653184 << 38
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&207246000378
shl: (shl[41] (bv2int %0) (mod (bv2int %1) 41)) 1 := 402653184 << 38
(smt.stats   26   3282  60389 107350  3920/3624/229    3479/341    30  124   21.04)
(smt.stats   27   3459  64064 119503  3990/3721/230    3689/371    31  126   21.14)
(smt.stats   28   3560  66751 126224  4009/3754/232    3804/373    31  126   21.23)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 0&395290
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 2199023255552 := 335544323 << 19
(smt.stats   29   3671  69351 133045  4100/3767/232    3919/407    32  132   21.23)
(smt.stats   30   3793  71704 140083  4227/3978/238    4057/416    33  133   21.48)
(smt.stats   31   3927  73587 148978  4259/3992/238    4226/420    34  139   21.48)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  76474 156344  4375/4084/238    4455/425    34  139   21.58)
(smt.stats   33   4235  80956 172435  4407/4117/242    4628/504    35  143   21.67)
(smt.stats   34   4412  85684 187329  4452/4180/243    4811/534    36  145   21.67)
ramon: poll                 wall=4.000s usage=3.942s mem=22896KiB load=1.00 rootload=1.00
(smt.stats   35   4606  90688 205689  4462/4190/243    5025/534    36  145   21.67)
(smt.stats   36   4707  92915 215537  4474/4196/243    5126/534    36  145   21.67)
(smt.stats   37   4818  96564 228767  4476/4204/243    5247/534    36  145   21.67)
(smt.stats   38   4940  98040 236823  4506/4210/243    5377/534    36  145   21.80)
(smt.delete-inactive-clauses  :num-deleted-clauses 1244)
(smt.stats   39   5074 101413 245638  4537/4246/244    4271/569    37  147   21.80)
(smt.stats   40   5221 105786 253551  4557/4275/244    4431/569    37  147   21.89)
(smt.stats   41   5382 111474 269526  4622/4289/244    4617/572    37  147   21.89)
(smt.stats   42   5559 115637 282610  4638/4362/244    4800/572    37  147   21.89)
ramon: poll                 wall=5.000s usage=4.942s mem=23132KiB load=1.00 rootload=1.00
(smt.stats   43   5753 126574 311817  4641/4367/244    4994/572    37  147   21.89)
(smt.stats   44   5966 133030 330912  4652/4371/249    5214/609    38  149   21.89)
(smt.stats   45   6067 135182 335225  4671/4400/249    5325/609    38  149   21.89)
(smt.stats   46   6178 138839 345958  4674/4403/249    5449/609    39  165   21.89)
(smt.stats   47   6300 141457 354384  4689/4413/252    5585/622    40  168   21.89)
(smt.stats   48   6434 142830 362854  4713/4439/252    5707/623    40  168   21.99)
(smt.stats   49   6581 146685 375165  4739/4466/253    5848/629    41  171   21.99)
(smt.stats   50   6742 155572 393532  4743/4472/253    6015/635    42  171   21.99)
(smt.stats   51   6919 162002 419687  4763/4491/255    6220/644    43  185   22.21)
ramon: poll                 wall=6.000s usage=5.941s mem=23496KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 165986 429770  4838/4499/255    6451/650    43  185   22.21)
(smt.stats   53   7326 171786 442013  4948/4610/255    6709/660    43  185   22.30)
(smt.stats   54   7560 176121 455759  5094/4696/255    6967/667    43  185   22.30)
ramon: poll                 wall=7.000s usage=6.941s mem=23756KiB load=1.00 rootload=1.00
(smt.stats   55   7661 177453 463412  5198/4839/255    7085/671    43  185   22.49)
(smt.stats   56   7772 179498 470964  5210/4931/255    7202/671    43  185   22.49)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 2&3
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 2&3
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 2&3
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 6954041609776267266 := 415538085872 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 6954041609776267266 := 415538085872 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 13835003079700774914 := 415538085872 << 2
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 13835003079700774914 := 415538085872 << 2
(smt.stats   57   7894 183066 480643  5308/5017/261    7344/770    44  186   22.49)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 369098751&1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 369098750&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 18446737477008883710 := 415538085863 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 369098750&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 18446737477008883710 := 415538085864 << 1
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 369098750&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 18446737477008883710 := 415538085864 << 1
(smt.stats   58   8028 185593 488084  5360/5063/267    7503/787    45  187   22.49)
(smt.stats   59   8175 189995 496046  5379/5099/277    7656/787    45  187   22.49)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619109344&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619109344&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619107840&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619107840&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619107840&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619107840&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619099648&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619099648&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619066880&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619066880&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1619001344&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1610612736&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1073741824&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1073741824&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 1073741824&1619109377
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 369098752&1619109377
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 369098752 := 415538085885 << 31
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 369098752&1619109377
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 369098752 := 415538085885 << 31
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 0 := 369098752&1619109377
shl: (shl[64] (bv2int %0) (mod (+ #104 #320) 64)) 369098752 := 1099511627775 << 31
(smt.stats   60   8336 193511 506953  5587/5281/339    7867/816    46  189   22.80)
ramon: poll                 wall=8.001s usage=7.942s mem=24160KiB load=1.00 rootload=1.00
(smt.stats   61   8513 195275 516453  5928/5323/339    8070/851    47  203   22.99)
(smt.stats   62   8707 201195 527597  5959/5667/341    8402/897    48  203   23.08)
(smt.stats   63   8920 203406 533327  6002/5711/342    8645/939    49  203   23.28)
ramon: poll                 wall=9.000s usage=8.940s mem=24752KiB load=1.00 rootload=1.00
(smt.stats   64   9154 211077 567059  6717/6435/346    9254/1119    50  205   23.47)
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 83886308 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 83886320 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 83886320 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 83886308 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777216 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777216 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777216 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777216 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777216 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777220 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777220 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777236 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777216 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777220 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777236 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777236 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777236 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777236 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777236 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777268 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777332 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777236 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777268 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777268 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777300 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777332 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777308 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777300 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777268 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777268 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777268 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777268 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777597 := 2199023255550&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16777597 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16778101 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16778101 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16778101 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16778101 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16778229 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16778229 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16778229 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16778229 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16778229 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16779509 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16779509 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16779509 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16779509 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16779509 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16779509 := 2199023255551&414492000757
band: (band[41] (shl[64] (bv2int %0) (mod #321 64)) (if (= #714 63) 0 (if #716 1 #861))) 16779509 := 2199023255551&414492000757
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9412 216843 602390  7118/6832/437   10234/1234    52  218   23.86)
(smt.stats   66   9513 219034 609762  7130/6844/437   10404/1234    52  218   23.95)
(smt.stats   67   9624 220833 624487  7146/6866/439   10660/1382    53  225   24.06)
(smt.stats   68   9746 224484 644242  7257/6944/440   10820/1461    54  235   24.16)
(smt.stats   69   9880 228506 666550  7311/6963/440   11105/1469    54  235   24.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 809)
(smt.stats   70  10027 231048 684965  7331/7027/443   10518/1552    55  237   24.25)
ramon: poll                 wall=10.000s usage=9.933s mem=26200KiB load=0.99 rootload=0.99
(smt.stats   71  10188 237116 710490  7443/7054/445   10851/1665    56  255   24.54)
(smt.stats   72  10365 243861 773233  7472/7159/445   11139/1666    56  255   24.54)
(smt.stats   73  10559 248841 789032  7557/7193/446   11400/1796    57  256   24.54)
ramon: poll                 wall=11.000s usage=10.932s mem=26208KiB load=1.00 rootload=1.00
(smt.stats   74  10772 258483 813758  7817/7322/446   11755/1808    57  256   24.73)
(smt.stats   75  11006 264999 844216  7964/7660/447   12525/2143    59  263   24.86)
ramon: poll                 wall=12.001s usage=11.934s mem=26316KiB load=1.00 rootload=1.00
(smt.stats   76  11263 272575 868551  8132/7670/447   13006/2145    59  263   25.05)
(smt.stats   77  11545 277226 884745  8250/7904/447   13373/2146    59  263   25.05)
(smt.stats   78  11646 281323 903136  8270/7965/449   13652/2310    60  270   25.15)
(smt.stats   79  11757 286758 927275  8279/7974/449   13879/2310    60  270   25.15)
(smt.stats   80  11879 290870 953259  8283/7978/451   14118/2426    61  272   25.24)
ramon: poll                 wall=13.000s usage=12.932s mem=26784KiB load=1.00 rootload=1.00
(smt.stats   81  12013 293751 970916  8359/8038/453   14391/2482    62  292   25.34)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   82  12160 298661 1002445  8369/8048/456   14801/2596    63  325   25.34)
(smt.stats   83  12321 303958 1046207  8372/8051/458   15011/2620    64  356   25.46)
(smt.stats   84  12498 309512 1079936  8383/8062/462   15482/2667    65  373   25.46)
(smt.stats   85  12692 316650 1098104  8460/8067/462   15709/2673    65  373   25.46)
ramon: poll                 wall=14.000s usage=13.932s mem=26948KiB load=1.00 rootload=1.00
(smt.stats   86  12905 322352 1132222  8642/8179/462   16120/2724    66  400   25.72)
(smt.stats   87  13139 325289 1155239  8655/8334/462   16834/2724    66  400   25.72)
(smt.stats   88  13396 334227 1211639  8659/8338/463   17248/2885    67  409   25.84)
ramon: poll                 wall=15.000s usage=14.931s mem=27356KiB load=1.00 rootload=1.00
(smt.stats   89  13678 340367 1244877  8732/8348/463   17656/2888    67  409   25.94)
(smt.stats   90  13988 346863 1289123  8870/8549/464   18191/3040    68  432   25.94)
(smt.stats   91  14089 348612 1300259  8875/8554/464   18365/3040    68  432   26.04)
(smt.stats   92  14200 352307 1322733  8881/8560/465   18555/3040    68  432   26.41)
(smt.stats   93  14322 358106 1362835  8890/8569/465   18810/3129    69  434   26.41)
ramon: poll                 wall=16.000s usage=15.931s mem=27984KiB load=1.00 rootload=1.00
(smt.stats   94  14456 364504 1408720  8897/8576/465   19080/3129    69  434   26.41)
(smt.stats   95  14603 372747 1424632  8904/8583/465   19431/3129    69  434   26.51)
(smt.stats   96  14764 378296 1464493  8910/8589/465   19654/3129    69  434   26.70)
(smt.stats   97  14941 385486 1494871  8913/8592/466   20001/3332    70  437   26.70)
(smt.delete-inactive-clauses  :num-deleted-clauses 1035)
(smt.stats   98  15135 397375 1579383  8916/8595/466   19249/3332    70  437   26.70)
ramon: poll                 wall=17.000s usage=16.931s mem=28200KiB load=1.00 rootload=1.00
(smt.stats   99  15348 406140 1647984  8919/8598/466   19717/3332    70  437   26.70)
(smt.stats  100  15582 412277 1685887  9079/8610/466   19996/3336    70  437   26.70)
ramon: poll                 wall=18.000s usage=17.931s mem=28256KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.001s usage=18.932s mem=28392KiB load=1.00 rootload=1.00
(smt.stats  101  15839 420070 1710924  9598/8803/466   20322/3338    70  437   26.91)
ramon: poll                 wall=20.000s usage=19.927s mem=28664KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:03:09 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.993s
ramon: group.utime          19.981s
ramon: group.stime          0.012s
ramon: group.mempeak        28920KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
