ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:20:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41260 MiB
ramon: sys.mem.avail        61383 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CmQhVD75hOsf.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3740550
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   200/200     0/0  63       0    18.46   0.00)
(sat.stats    102    652    0   200/200   102/33  63       0    18.72   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 574 :time 0.00)
(sat.stats    102    652    0   200/200   102/33  63       0    18.72   0.00)
(sat.stats    102    652    0   200/200   102/33  63       0    18.72   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 403618.72 :time 0.00)
(sat.stats    102    652    0   204/204    58/31  63       0    18.72   0.00)
(sat.stats    105    670    1   204/204    61/34  63       0    18.72   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    108    711    2   204/204    64/37  63       0    18.72   0.01)
(sat.stats    111    761    3   204/204    67/40  63       0    18.81   0.01)
(sat.stats    114    821    4   204/204    70/43  63       0    18.81   0.01)
(sat.stats    117    901    5   204/204    73/46  63       0    18.81   0.01)
(sat.stats    120    995    6   204/204    76/49  63       0    18.81   0.01)
(sat.stats    123   1110    7   204/204    79/51  63       0    18.81   0.01)
(sat.stats    126   1160    8   204/204    82/51  63       0    18.81   0.01)
(sat.stats    129   1229    9   204/204    85/51  63       0    18.81   0.01)
(sat.stats    132   1352   10   204/204    88/52  63       0    18.81   0.01)
(sat.stats    135   1461   11   204/204    91/52  63       0    18.81   0.01)
(sat.stats    141   1687   13   204/204    97/52  63       0    18.81   0.01)
(sat.stats    211   3571   21   204/204   167/97  63       0    18.91   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2064 :time 0.00)
ramon: poll                 wall=1.000s usage=0.936s mem=21260KiB load=0.94 rootload=0.93
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    400   6434   42  1059/1059   366/131  69       0    19.93   1.00)
(sat.stats    910  14730   43  3399/3399   920/152  69       0    20.32   1.27)
(sat.stats    913  14740   44  3399/3399   923/152  69       0    20.32   1.28)
lshr: (lshr[34] (bv2int %0) (+ 34 (* 17179869183 #58))) 0 := 0 >>l 31
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 0&17179869176
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 63 #515 #519) 64)) 17179859414 := 0 >>l 60
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 6481 :time 0.00)
 (sat-cleaner :elim-literals 7 :elim-clauses 1 :cost 8673 :time 0.00)
(sat.stats   1640  24014   64  4367/4365  1708/281  87       0    20.75   1.52)
(sat.stats   1643  24017   65  4367/4365  1711/281  87       0    20.75   1.52)
ramon: poll                 wall=2.000s usage=1.935s mem=22136KiB load=1.00 rootload=1.00
(sat.stats   2575  46009   91  6319/6317  2683/460  87       0    21.15   2.00)
 (sat-cleaner :elim-literals 5 :elim-clauses 2 :cost 15123 :time 0.00)
lshr: (lshr[34] (bv2int %0) (+ 34 (* 17179869183 #58))) 0 := 0 >>l 9
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 0&17146314752
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 63 #515 #519) 64)) 17179841797 := 0 >>l 38
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 17353 :time 0.00)
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 29711 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 50678 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 71684 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 36456 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 45888 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 56464 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 36480 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 37632 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 66560 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 40960 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 36864 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 66048 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 49152 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 65536 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 2916352 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 131072 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 2621440 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 262144 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 3145728 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 2097152 := 4194303&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 20971520 := 33554431&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 8388608 := 33554431&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 16777216 := 33554431&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 2048 := 29367420&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 32 := 29360128&17146314752
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 32 := 25313151&17146314752
 (sat-cleaner :elim-literals 18 :elim-clauses 5 :cost 21757 :time 0.00)
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 32&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 30 := 17146314752&32
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 32&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 25 := 17146314752&32
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 32&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 12 := 17146314752&32
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 32&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 24 := 17146314752&32
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 32&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 16 := 17146314752&32
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 32&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 32 := 17146314752&32
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 64&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 64 := 17146314752&64
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 128&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 128 := 17146314752&128
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 256&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 256 := 17146314752&256
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 512&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 512 := 17146314752&512
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 1024&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 1024 := 17146314752&1024
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 2048&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 2048 := 17146314752&2048
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 4096&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 4096 := 17146314752&4096
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 8192&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 8192 := 17146314752&8192
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 16384&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 16384 := 17146314752&16384
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 32768&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 32768 := 17146314752&32768
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 65536&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 65536 := 17146314752&65536
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 131072&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 131072 := 17146314752&131072
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 262144&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 262144 := 17146314752&262144
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 524288&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 524288 := 17146314752&524288
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 1048576&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 1048576 := 17146314752&1048576
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 2097152&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 2097152 := 17146314752&2097152
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 4194304&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 4194304 := 17146314752&4194304
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 8388640&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 8388608 := 17146314752&8388640
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #436)) (if (= #82 33) 147573952581086478336 (if #440 73786976290543239168 #504))) 0 := 16777216&17146314752
band: (band[34] (if (= #230 63) 158456325019305303150233124864 (if #412 79228162509652651575116562432 #409)) (lshr[64] (* 536870912 #73) (mod #522 64))) 16777216 := 17146314752&16777216
ramon: poll                 wall=3.000s usage=2.934s mem=25804KiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   4327  81827  178 13648/13644  4428/775 256       0    24.81   3.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 26651 :time 0.00)
ramon: poll                 wall=4.000s usage=3.933s mem=43836KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.932s mem=63840KiB load=1.00 rootload=0.99
(sat.stats   5393  97651  440 197942/197938  9276/5054 434       0    63.45   4.98)
ramon: poll                 wall=6.000s usage=5.931s mem=72452KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.931s mem=97380KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.930s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.929s mem=106MiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.928s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.928s mem=115MiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.927s mem=118MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.926s mem=121MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.925s mem=124MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.924s mem=158MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.923s mem=161MiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.923s mem=163MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.922s mem=165MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.921s mem=169MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.920s mem=171MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:20:28 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.080s
ramon: group.total          19.997s
ramon: group.utime          19.913s
ramon: group.stime          0.084s
ramon: group.mempeak        190MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.00
