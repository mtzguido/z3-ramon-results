ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:00:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40607 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/s5iljC1rQurc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3096105
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101    861    629  1300/1169/111      93/22     7   22   19.08)
(smt.stats    1    202   1827   2245  1438/1287/113     196/34     9   24   19.18)
(smt.stats    2    313   2648   3956  1565/1418/118     317/47    11   30   19.28)
(smt.stats    3    414   3388   5643  1647/1500/131     419/53    13   37   19.28)
(smt.stats    4    525   4631   7425  1675/1517/137     523/78    15   52   19.28)
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 0&11
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 72057594037927936 := 72057594037927903 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 12&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 12&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 23&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 23&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 22&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 12&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 23&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 16&11
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 72057594037927952 := 72057594037927903 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037927902 := 72057594037927903 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037927902 := 72057594037927903 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037927902 := 72057594037927903 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 2 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 4 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 8 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 36028797018963967 := 72057594037927903 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 2 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 4 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 8 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 2 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 8 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 4 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 4 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 4 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 8 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 8 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 2 := 36028797018963968&11
(smt.stats    5    647   6318  10869  1769/1603/211     647/91    17   67   19.56)
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 4 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 4 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 4 := 36028797018963968&11
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   8460  13487  1795/1630/226     763/94    18   74   19.66)
(smt.stats    7    859  10738  18073  1818/1665/231     875/108    19   75   19.66)
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 16&11
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 72057594037927952 := 36028797018963951 << 55
(smt.stats    8    981  12830  21217  1899/1735/235    1006/126    21   78   19.75)
(smt.stats    9   1115  15861  23196  1919/1762/235    1136/139    22   84   19.85)
ramon: poll                 wall=1.000s usage=0.855s mem=21032KiB load=0.85 rootload=0.84
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 17293822569102704641 := 431 << 39
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 17365880163140632577 := 431 << 39
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 236944755785728&0
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 36028797018963968 := 431 << 39
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 236944755785728&0
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 36028797018963968 := 431 << 39
(smt.stats   10   1216  17721  24927  1946/1762/236    1240/140    23   85   20.14)
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 239143779041281&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 239143779041281 := 435 << 43
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 3826300464660482&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 3826300464660482 := 435 << 43
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 3826300464660480&0
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037927872 := 435 << 43
(smt.stats   11   1327  20659  28790  2032/1862/258    1364/145    25   90   20.14)
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 3826300464660480&0
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 16 := 435 << 43
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1452  22770  32689  2086/1912/271    1503/152    26   91   20.33)
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 2 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 2 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 1 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 2 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 2 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 8 := 36028797018963968&11
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 36028797018963968&11
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 8 := 36028797018963968&11
(smt.stats   13   1586  23891  34518  2132/1928/272    1675/159    26   91   20.55)
(smt.stats   14   1733  26331  37277  2140/1957/282    1837/193    27  113   20.55)
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 444&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 15996785876420002236 := 444 << 52
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 444&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 15996785876420002236 := 444 << 52
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 444&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 16140901064495858108 := 444 << 52
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 444&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #396) 64)) 16140901064495858108 := 444 << 52
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 54043195528445952&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 54043195528445952 := 444 << 52
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 54043195528445952&1
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 1 := 54043195528445952&1
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 54043195528445952&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 54043195528445952 := 444 << 52
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 54043195528445952&1
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (or #625 #626 #627 #628 #629 #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 ...) 0 (if #676 1 #684))) 1 := 54043195528445952&1
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 54043195528445952&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 54043195528445936 := 444 << 52
band: (band[56] (shl[64] (bv2int %0) (mod #397 64)) (if (or #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 #912 #913 #914 #915 #916 ...) 0 (if #953 1 #980))) 0 := 54043195528445952&1
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 54043195528445936 := 444 << 52
(smt.stats   15   1834  28558  39762  2216/2029/293    1980/216    28  113   20.64)
(smt.stats   16   1945  32888  44971  2237/2048/296    2096/220    30  126   20.74)
(smt.stats   17   2067  35516  50457  2293/2101/298    2249/228    31  127   20.84)
(smt.stats   18   2201  37114  54577  2364/2158/299    2394/244    32  129   20.84)
ramon: poll                 wall=2.000s usage=1.851s mem=22132KiB load=1.00 rootload=0.99
(smt.stats   19   2348  39300  58353  2555/2184/299    2560/251    32  129   21.03)
(smt.stats   20   2509  41732  62822  2738/2401/299    2740/253    32  129   21.03)
ramon: poll                 wall=3.000s usage=2.849s mem=22308KiB load=1.00 rootload=1.00
(smt.stats   21   2610  43477  67963  2805/2579/299    2861/254    32  129   21.12)
(smt.stats   22   2721  45987  75206  2870/2679/300    3022/282    33  131   21.32)
(smt.stats   23   2843  48373  80234  2871/2680/300    3161/282    33  131   21.32)
(smt.stats   24   2977  51595  85976  2911/2685/300    3344/284    33  131   21.41)
ramon: poll                 wall=4.000s usage=3.848s mem=22824KiB load=1.00 rootload=1.00
(smt.stats   25   3124  54766  91834  3021/2740/300    3519/285    33  131   21.41)
ramon: poll                 wall=5.000s usage=4.848s mem=22828KiB load=1.00 rootload=1.00
(smt.stats   26   3285  57498 100545  3260/2904/300    3719/287    33  131   21.51)
(smt.stats   27   3462  60450 106364  3411/3086/300    3931/290    33  131   21.60)
ramon: poll                 wall=6.000s usage=5.846s mem=22900KiB load=1.00 rootload=1.00
(smt.stats   28   3563  62585 110575  3481/3261/300    4072/293    33  131   21.60)
(smt.stats   29   3674  64239 114267  3577/3334/301    4216/340    34  133   21.70)
(smt.stats   30   3796  65793 118620  3671/3453/302    4375/343    34  133   21.78)
ramon: poll                 wall=7.000s usage=6.845s mem=23100KiB load=1.00 rootload=1.00
(smt.stats   31   3930  67743 123517  3782/3503/302    4566/361    35  134   21.78)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077  69957 129651  3898/3665/303    4788/371    36  136   21.87)
ramon: poll                 wall=8.000s usage=7.844s mem=23196KiB load=1.00 rootload=1.00
(smt.stats   33   4238  72746 137998  3997/3736/303    4991/374    36  136   21.97)
(smt.stats   34   4415  75934 145330  4102/3812/303    5230/378    36  136   22.06)
ramon: poll                 wall=9.000s usage=8.843s mem=23320KiB load=1.00 rootload=1.00
(smt.stats   35   4609  78946 151754  4211/3931/303    5471/378    36  136   22.06)
(smt.stats   36   4710  80436 158113  4273/4059/303    5629/378    36  136   22.18)
(smt.stats   37   4821  81746 162689  4325/4089/305    5733/452    37  142   22.18)
ramon: poll                 wall=10.000s usage=9.842s mem=23460KiB load=1.00 rootload=1.00
(smt.stats   38   4943  83875 170070  4434/4150/305    5874/452    37  142   22.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 467)
(smt.stats   39   5077  86757 179471  4457/4252/305    5563/460    38  148   22.27)
(smt.stats   40   5224  91308 187973  4523/4279/305    5775/462    38  148   22.27)
ramon: poll                 wall=11.000s usage=10.841s mem=23536KiB load=1.00 rootload=0.99
(smt.stats   41   5385  94038 192314  4942/4520/306    5988/502    39  149   22.37)
(smt.stats   42   5562  96627 201464  5148/4913/307    6331/503    39  149   22.46)
ramon: poll                 wall=12.000s usage=11.840s mem=23760KiB load=1.00 rootload=1.00
(smt.stats   43   5756 100435 213264  5315/4988/307    6594/568    40  150   22.55)
ramon: poll                 wall=13.000s usage=12.839s mem=24096KiB load=1.00 rootload=1.00
(smt.stats   44   5969 104357 221597  5484/5138/307    6895/569    40  150   22.55)
(smt.stats   45   6070 105983 226922  5587/5378/307    7000/569    40  150   22.55)
ramon: poll                 wall=14.000s usage=13.839s mem=24104KiB load=1.00 rootload=1.00
(smt.stats   46   6181 108464 233259  5682/5406/307    7148/574    40  150   22.65)
ramon: poll                 wall=15.000s usage=14.838s mem=24112KiB load=1.00 rootload=1.00
(smt.stats   47   6303 110533 237156  5800/5515/307    7277/575    40  150   22.65)
(smt.stats   48   6437 112368 243708  5969/5647/307    7471/579    40  150   22.74)
(smt.stats   49   6584 114154 249700  6003/5781/307    7713/579    40  150   22.74)
ramon: poll                 wall=16.003s usage=15.839s mem=24116KiB load=1.00 rootload=1.00
(smt.stats   50   6745 117666 259849  6059/5810/307    7936/579    40  150   22.74)
(smt.stats   51   6922 121993 272146  6132/5878/307    8156/583    40  150   22.84)
ramon: poll                 wall=17.000s usage=16.835s mem=24252KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7116 125358 283176  6204/5960/308    8394/680    41  150   22.94)
ramon: poll                 wall=18.000s usage=17.834s mem=24316KiB load=1.00 rootload=1.00
(smt.stats   53   7329 130733 298214  6393/6055/308    8671/680    41  150   23.03)
ramon: poll                 wall=19.000s usage=18.833s mem=24424KiB load=1.00 rootload=1.00
(smt.stats   54   7563 134448 308679  6649/6298/308    8951/681    41  150   23.13)
ramon: poll                 wall=20.000s usage=19.832s mem=24456KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:00:25 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.010s
ramon: group.total          19.924s
ramon: group.utime          19.912s
ramon: group.stime          0.012s
ramon: group.mempeak        24712KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.093s
ramon: loadavg              0.99
