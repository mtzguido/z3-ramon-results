ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:51:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27677 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/eTQKrdVYNmqB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             878412
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   57.1429     10000        49          0            1        2)
(sat.ddfw       1      1   30.5841     20001        98          1            1        3)
(sat.ddfw       1      1   34.3053     40001       196          2            1        5)
(smt.stats    0    101   2495    283  1313/1111/111     111/18     2   18   52.05)
(smt.stats    1    202   6026   2674  1641/1486/112     221/22     3   21   52.35)
(smt.stats    2    313   8728   6072  2008/1829/113     336/37     4   22   52.45)
(smt.stats    3    414  11311   9016  2067/1862/113     436/37     4   22   52.56)
ramon: poll                 wall=1.000s usage=0.844s mem=54840KiB load=0.84 rootload=0.84
(smt.stats    4    525  12736  10347  2106/1889/118     578/42     5   23   52.67)
(sat.ddfw       1      1   31.1526     70001       343          3            1        8)
(smt.stats    5    647  15919  12685  2107/1921/118     699/49     6   32   52.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18492  14587  2118/1931/118     800/49     6   32   52.67)
(smt.stats    7    859  22935  17124  2168/1945/119     909/56     7   32   52.77)
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 0 := 2048 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 0 := 2048 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 0 := 32768 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 15 := 15 >>l 4
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 0 := 4096 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 1 := 2 >>l 4
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 6144 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2 := 16 >>l 4
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 6144 >>l 15
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 1 := 32 >>l 4
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 1 := 32 >>l 4
(smt.stats    8    981  26657  20270  2627/2393/133    1028/58     8   35   52.86)
(sat.ddfw       1      1   26.9542    110001       539          4            1       12)
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 18446744073709549568 >>l 62
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 3&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 562949953421312 := 9007199254740991 >>l 51
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 98304 >>l 62
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2 := 2251799813685248 >>l 51
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 3&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 3 := 9223372036854775808 >>l 62
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 3&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2 := 6755399441055744 >>l 51
(smt.stats    9   1115  32251  23247  2734/2489/146    1161/60    10   43   53.08)
(smt.stats   10   1216  35258  26471  2755/2509/148    1260/64    11   44   53.18)
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 18446744073709549568 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 562949953421310 := 9007199254740991 >>l 52
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 0 := 18446744073709549568 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 281474976710654 := 4503599627370495 >>l 52
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 2 := 98304 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 562949953421310&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 562949953421310 := 18446744073709549568 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 0 := 9007199254740991 >>l 52
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 0 := 4503599627370496 >>l 52
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 65536 >>l 60
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 35184372088833 := 562949953421312 >>l 49
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 2 := 63488 >>l 60
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 63488 >>l 60
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 35184372088832&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 35184372088832 := 1152921504606877696 >>l 60
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 15&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 562949953421310 := 9007199254740991 >>l 49
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2 := 562949953421312 >>l 49
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2 := 1125899906842623 >>l 49
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 2 := 18446744073709549568 >>l 61
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 7&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 9007199254740990 := 9007199254740991 >>l 50
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 2305843009213693952 >>l 61
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 3 := 1125899906842624 >>l 50
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 2305843009213693952 >>l 61
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 3 := 1125899906842624 >>l 50
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 4611686018427387904 >>l 61
(smt.stats   11   1327  36961  29430  2797/2534/176    1371/70    12   44   53.28)
ramon: poll                 wall=2.000s usage=1.842s mem=55520KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1449  38321  32116  2888/2628/184    1493/73    13   53   53.28)
(smt.stats   13   1583  41201  36689  2912/2632/184    1631/83    14   54   53.44)
(sat.ddfw       1      1   23.5068    160000       784          5            1       17)
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 9007199254740994 := 9223372036854775808 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 281474976710657&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 281474976710657 := 9223372036854775808 >>l 63
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 0 := 9223372036854775808 >>l 63
(smt.stats   14   1730  44120  41259  2936/2669/184    1787/84    14   54   53.44)
(smt.stats   15   1831  44929  42743  2981/2688/184    1892/85    14   54   53.53)
(smt.stats   16   1942  45618  44054  3110/2763/185    2012/99    15   55   53.63)
(sat.ddfw       1      1   20.7114    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.839s mem=55648KiB load=1.00 rootload=0.99
(smt.stats   17   2064  46058  44774  3180/2890/185    2147/103    15   55   53.82)
(sat.ddfw       1      1   18.4599    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.842s mem=55908KiB load=1.00 rootload=1.01
(smt.stats   18   2198  46674  47689  3515/3206/185    2319/104    15   55   53.82)
(smt.stats   19   2345  48019  50774  3623/3273/185    2507/105    15   55   53.91)
(smt.stats   20   2506  49298  55731  3755/3482/190    2707/148    16   62   53.91)
(sat.ddfw       1      1     16.57    370001      1813          8            1       38)
(smt.stats   21   2607  50273  59175  3810/3499/190    2846/150    16   62   54.01)
ramon: poll                 wall=5.000s usage=4.839s mem=56296KiB load=1.00 rootload=0.99
(smt.stats   22   2718  51803  63474  3832/3562/190    2975/151    16   62   54.01)
(smt.stats   23   2840  54555  67852  3838/3578/191    3090/181    17   67   54.01)
(smt.stats   24   2974  56719  72331  3838/3578/191    3224/181    17   67   54.01)
(smt.stats   25   3121  58145  77541  3974/3580/191    3409/181    17   67   54.01)
(smt.stats   26   3282  62218  84071  3985/3716/191    3584/181    17   67   54.22)
(smt.stats   27   3459  65914  93162  4023/3757/195    3907/242    18   67   54.22)
ramon: poll                 wall=6.000s usage=5.839s mem=56292KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.0527    460001      2254          9            1       47)
(smt.stats   28   3560  67137  95319  4051/3781/195    4004/305    19   72   54.34)
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 9007199254740992 := 0 >>l 59
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 0 >>l 59
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 1 := 0 >>l 59
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 562949953421312 := 562949953421311 >>l 48
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 281474976710655 := 281474976710656 >>l 48
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 17592186044417 := 281474976710656 >>l 48
(smt.stats   29   3671  68495  98348  4111/3820/195    4172/307    19   72   54.52)
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 9223372036854775809 := 0 >>l 14
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 9214364837600034817 := 0 >>l 14
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 9007199254740993 := 0 >>l 14
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 140737488355328&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 0 := 1125899906842624 >>l 3
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 70368744177664&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 0 := 562949953421312 >>l 3
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 70368744177664&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 0 := 562949953421312 >>l 3
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   30   3793  69618 101515  4168/3885/205    4299/346    20   74   54.52)
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 2305843009213693953 := 2305843009213693952 >>l 12
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 9007199254740991&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 2305843009213693951 := 2305843009213693952 >>l 12
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 9007199254740993 := 9223372036854773760 >>l 12
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2251799813685247&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 0 := 4503599627370495 >>l 1
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 1 := 4 >>l 1
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 1 := 4 >>l 1
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 9007199254740991&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 9223372036854775807 := 9223372036854773760 >>l 11
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 9007199254740991&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 18014398509481983 := 18014398509481984 >>l 11
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 4503599627370496&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 13510798882111488 := 9223372036854773760 >>l 11
(smt.stats   31   3927  71202 106044  4219/3937/226    4433/350    20   74   54.61)
(smt.stats   32   4074  72854 110864  4267/3977/231    4667/355    21   81   54.61)
(smt.stats   33   4235  75215 117379  4341/3996/231    4865/355    21   81   54.71)
(smt.stats   34   4412  76655 122803  4361/4076/232    5098/412    22   87   54.71)
ramon: poll                 wall=7.000s usage=6.841s mem=56840KiB load=1.00 rootload=1.01
(smt.stats   35   4606  80308 130801  4385/4091/232    5312/414    22   87   54.80)
(smt.stats   36   4707  82213 135470  4436/4156/232    5480/415    22   87   54.80)
(smt.stats   37   4818  85141 139848  4439/4165/232    5592/415    22   87   54.80)
(sat.ddfw       1      1   13.7627    560001      2745         10            1       57)
(smt.stats   38   4940  87280 145450  4456/4181/233    5748/477    23   87   54.90)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
ramon: poll                 wall=8.000s usage=7.838s mem=57272KiB load=1.00 rootload=0.99
(smt.stats   39   5074  89326 149637  4463/4186/233    5886/477    23   87   54.90)
(sat.ddfw       1      1    12.683    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=8.840s mem=57396KiB load=1.00 rootload=1.01
(smt.stats   40   5221  90949 153785  4553/4195/233    6051/479    23   87   54.99)
(smt.stats   41   5382  93511 161722  4643/4343/233    6231/482    23   87   55.39)
ramon: poll                 wall=10.000s usage=9.837s mem=57380KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.7463    790001      3872         12            1       80)
(smt.stats   42   5559  95012 166335  4745/4396/233    6412/488    23   87   55.39)
ramon: poll                 wall=11.000s usage=10.840s mem=57444KiB load=1.00 rootload=1.01
ramon: poll                 wall=12.000s usage=11.795s mem=57476KiB load=0.95 rootload=0.95
(sat.ddfw       1      1   10.8505    920001      4509         13            1       93)
(smt.stats   43   5753  96980 172154  4918/4494/233    6631/492    23   87   55.49)
ramon: poll                 wall=13.000s usage=12.793s mem=57536KiB load=1.00 rootload=1.00
(smt.stats   44   5966  98709 178195  5104/4675/233    6858/493    23   87   55.49)
(smt.stats   45   6067 100766 180866  5115/4840/233    6961/493    23   87   55.58)
(smt.stats   46   6178 104402 187295  5115/4840/233    7072/493    23   87   55.58)
(smt.stats   47   6300 108319 192801  5115/4840/233    7194/493    23   87   55.58)
(smt.stats   48   6434 111885 198966  5117/4842/233    7359/493    23   87   55.58)
(smt.stats   49   6581 114427 204566  5123/4847/233    7507/495    23   87   55.58)
(sat.ddfw       1      1   10.1619   1060001      5196         14            1      108)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   50   6742 117685 210943  5132/4849/233    7674/495    23   87   55.68)
ramon: poll                 wall=14.006s usage=13.802s mem=58052KiB load=1.00 rootload=1.00
(smt.stats   51   6919 121236 218592  5137/4862/233    7850/495    23   87   55.68)
(smt.stats   52   7113 124772 228120  5161/4867/233    8046/497    23   87   55.68)
(smt.stats   53   7326 128990 236493  5166/4891/233    8267/497    23   87   55.77)
(smt.stats   54   7560 133520 246391  5172/4897/233    8499/497    23   87   55.77)
ramon: poll                 wall=15.000s usage=15.000s mem=58240KiB load=1.21 rootload=1.21
(smt.stats   55   7661 135759 250209  5172/4897/233    8606/497    23   87   55.77)
(smt.stats   56   7772 138479 254843  5173/4898/233    8716/497    23   87   56.08)
(smt.stats   57   7894 141645 260757  5173/4898/233    8838/497    23   87   56.08)
(smt.stats   58   8028 144196 266814  5173/4898/233    8972/497    23   87   56.08)
(smt.stats   59   8175 148108 274832  5182/4898/233    9119/497    23   87   56.08)
(sat.ddfw       1      1   9.77071   1210001      5931         15            1      123)
(smt.stats   60   8336 151733 283382  5193/4910/233    9282/497    23   87   56.08)
(smt.stats   61   8513 154601 292288  5206/4931/233    9459/497    23   87   56.18)
ramon: poll                 wall=16.000s usage=16.002s mem=58200KiB load=1.00 rootload=1.00
(smt.stats   62   8707 159374 303574  5207/4932/233    9652/497    23   87   56.18)
(smt.stats   63   8920 163402 312867  5207/4932/233    9865/497    23   87   56.18)
(smt.stats   64   9154 167915 324154  5209/4933/233   10098/497    23   87   56.27)
ramon: poll                 wall=17.000s usage=16.999s mem=58364KiB load=1.00 rootload=0.99
(smt.stats   65   9411 172502 335013  5211/4936/233   10355/497    23   87   56.27)
(smt.stats   66   9512 174207 340061  5212/4936/233   10459/497    23   87   56.27)
(sat.ddfw       1      1   9.19699   1370001      6715         16            1      139)
(smt.stats   67   9623 176301 347527  5219/4944/233   10580/497    23   87   56.27)
(smt.stats   68   9745 178241 356341  5219/4944/233   10702/497    23   87   56.27)
(smt.stats   69   9879 181961 363894  5219/4944/233   10839/497    23   87   56.27)
(smt.delete-inactive-clauses  :num-deleted-clauses 75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   70  10026 184273 372436  5219/4944/233   10911/497    23   87   56.37)
ramon: poll                 wall=18.000s usage=17.995s mem=58792KiB load=1.00 rootload=1.00
(smt.stats   71  10187 186875 380215  5221/4946/233   11070/497    23   87   56.78)
(smt.stats   72  10364 190078 387518  5221/4946/233   11248/497    23   87   56.78)
ramon: poll                 wall=19.000s usage=18.993s mem=59024KiB load=1.00 rootload=0.99
(smt.stats   73  10558 192652 397910  5221/4946/233   11442/497    23   87   56.78)
(smt.stats   74  10771 196583 408194  5221/4946/233   11655/497    23   87   56.78)
(sat.ddfw       1      1   8.68144   1540001      7549         17            1      156)
ramon: poll                 wall=20.000s usage=19.997s mem=59384KiB load=1.00 rootload=1.01
(smt.stats   75  11005 200381 418727  5224/4947/233   11935/497    23   87   56.88)
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 0&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 9007199254740992 := 9223372036854775808 >>l 23
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2251799813685249&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 2251799813685249 := 9223372036854775808 >>l 23
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 2251799813685249&0
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 11 #113 #348) 64)) 2251799813685249 := 9223372036854775808 >>l 23
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1099511627776&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 9007199254740991 := 4503599627370496 >>l 12
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1099511627776&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2251799813685249 := 4503599627370496 >>l 12
band: (band[53] (lshr[64] (* 2048 #112) (mod #349 64)) (if (= #649 63) 83076749736557242056487941267521536 (if #651 41538374868278621028243970633760768 #775))) 0 := 1099511627776&0
lshr: (lshr[53] (bv2int %1) (mod (bv2int %0) 53)) 2251799813685249 := 4503599627370496 >>l 12
ramon: end                  Fri Nov  1 22:52:08 2024
ramon: root.execname        z3
ramon: root.utime           20.070s
ramon: root.stime           0.000s
ramon: group.total          20.079s
ramon: group.utime          20.075s
ramon: group.stime          0.004s
ramon: group.mempeak        59608KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.00
