ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:45:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40936 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/hhVa4z5jmmsj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3049063
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    104   1288    589  1169/1052/114      79/16     9   24   18.94)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 2&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 1125899906842625 := 0 << 49
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 1 := 1&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 1 := 2 << 48
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 1 := 1&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 2251799813685251 := 2 << 48
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 1 := 1&1125899906842623
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 2251799813685247 := 2 << 48
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 1&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 562949953421313 := 1 << 49
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 1&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 562949953421313 := 1 << 49
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 1&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 562949953421313 := 1 << 49
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 1 := 1&562949953421312
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 1 := 1&562949953421312
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 1&562949953421312
band: (band[50] (if (or #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 ...) 0 (if #653 1 #655)) (shl[50] (bv2int %0) (+ 50 #843))) 1 := 1&562949953421312
(smt.stats    1    206   1986   1604  1431/1239/131     172/20    12   32   19.24)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 1&562949953421312
band: (band[50] (if (or #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 ...) 0 (if #653 1 #655)) (shl[50] (bv2int %0) (+ 50 #843))) 1 := 1&562949953421312
(smt.stats    2    317   2887   2961  1518/1360/164     278/21    16   50   19.52)
(smt.stats    3    418   3898   4660  1588/1425/167     383/33    17   51   19.52)
(smt.stats    4    529   6122   6121  1603/1435/169     497/37    18   52   19.62)
(smt.stats    5    651   8899  10638  1619/1448/170     610/48    20   67   19.62)
ramon: poll                 wall=1.005s usage=0.970s mem=21016KiB load=0.97 rootload=0.96
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    752  10154  13301  1689/1481/170     717/48    20   67   19.71)
(smt.stats    7    863  12079  15429  1724/1532/170     856/51    20   67   19.81)
(smt.stats    8    985  13503  17344  1810/1644/176    1013/74    21   79   19.81)
(smt.stats    9   1119  15791  19934  1841/1644/178    1155/90    22   85   19.91)
ramon: poll                 wall=2.000s usage=1.961s mem=21168KiB load=1.00 rootload=0.99
(smt.stats   10   1220  17302  22310  1925/1725/179    1245/97    23   93   20.00)
(smt.stats   11   1331  18249  23857  1976/1766/179    1363/99    23   93   20.00)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1453  19384  26749  2029/1844/188    1510/114    24  109   20.00)
(smt.stats   13   1587  20971  30368  2100/1909/189    1655/128    25  110   20.19)
ramon: poll                 wall=3.000s usage=2.959s mem=21440KiB load=1.00 rootload=1.00
(smt.stats   14   1734  22764  34657  2199/1948/189    1821/134    25  110   20.19)
(smt.stats   15   1835  24075  37365  2321/2072/189    1938/137    25  110   20.19)
(smt.stats   16   1946  25495  41239  2405/2182/189    2076/139    25  110   20.29)
ramon: poll                 wall=4.000s usage=3.958s mem=21660KiB load=1.00 rootload=1.00
(smt.stats   17   2068  27033  44502  2468/2265/189    2205/141    25  110   20.38)
(smt.stats   18   2202  28128  46761  2600/2319/189    2345/142    25  110   20.38)
ramon: poll                 wall=5.000s usage=4.958s mem=21820KiB load=1.00 rootload=1.00
(smt.stats   19   2349  29554  50148  2711/2454/189    2491/147    25  110   20.48)
(smt.stats   20   2510  31249  55504  2831/2598/189    2659/149    25  110   20.48)
(smt.stats   21   2611  32755  58410  2947/2700/189    2768/149    25  110   20.48)
ramon: poll                 wall=6.000s usage=5.957s mem=21924KiB load=1.00 rootload=1.00
(smt.stats   22   2722  34049  61803  3021/2783/189    2883/149    25  110   20.57)
(smt.stats   23   2844  35296  66885  3120/2879/189    3006/149    25  110   20.57)
(smt.stats   24   2978  36853  69882  3234/3043/191    3181/195    26  113   20.67)
ramon: poll                 wall=7.000s usage=6.955s mem=21836KiB load=1.00 rootload=0.99
(smt.stats   25   3125  38581  74029  3334/3109/191    3351/196    26  113   20.67)
(smt.stats   26   3286  40485  79182  3444/3199/191    3521/197    26  113   20.67)
ramon: poll                 wall=8.000s usage=7.954s mem=22172KiB load=1.00 rootload=1.00
(smt.stats   27   3463  42360  86549  3554/3306/191    3722/199    26  113   20.76)
(smt.stats   28   3564  43160  89370  3604/3392/191    3824/201    26  113   20.76)
(smt.stats   29   3675  44583  93391  3641/3437/191    3943/203    26  113   20.76)
ramon: poll                 wall=9.000s usage=8.953s mem=22228KiB load=1.00 rootload=1.00
(smt.stats   30   3797  45974  98834  3744/3504/191    4071/203    26  113   20.85)
(smt.stats   31   3931  47278 103165  3815/3586/191    4208/206    26  113   20.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4078  48436 108466  3898/3669/191    4354/207    26  113   20.94)
ramon: poll                 wall=10.000s usage=9.953s mem=22228KiB load=1.00 rootload=1.00
(smt.stats   33   4239  50431 118964  3971/3744/191    4522/207    26  113   20.94)
(smt.stats   34   4416  53782 127849  3987/3814/191    4711/207    26  113   20.94)
(smt.stats   35   4610  57641 136755  3993/3822/192    4947/230    27  114   20.94)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 10522660529351163907 := 1068 << 15
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 10522660529351163907 := 1068 << 15
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 10522660529351163907 := 1068 << 15
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 10522660529351163907 := 1068 << 15
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&34996224
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 534 << 16
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&34996224
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 534 << 16
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&34996224
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 534 << 16
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&34996224
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 534 << 16
(smt.stats   36   4711  59351 141063  4018/3825/192    5048/230    27  114   21.04)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&34996224
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 534 << 16
(smt.stats   37   4822  60602 147678  4044/3871/202    5160/234    28  116   21.28)
(smt.stats   38   4944  62363 157157  4066/3889/202    5356/234    28  116   21.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&1125899906840850
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 10523786429258004754 := 1076 << 11
(smt.stats   39   5078  65615 161210  4067/3890/202    5487/238    29  116   21.37)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&1125899906842622
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 10523786429258006526 := 1076 << 11
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&1125899906840850
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 10522660529351162130 := 1076 << 11
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&2203648
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906840849 := 538 << 12
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&2203648
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906840849 := 538 << 12
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&2203648
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906840849 := 538 << 12
(smt.stats   40   5225  67420 166324  4212/3938/213    5655/247    30  121   21.56)
ramon: poll                 wall=11.000s usage=10.952s mem=23044KiB load=1.00 rootload=1.00
(smt.stats   41   5386  69194 170413  4360/4035/213    5819/250    30  121   21.66)
ramon: poll                 wall=12.000s usage=11.951s mem=23192KiB load=1.00 rootload=1.00
(smt.stats   42   5563  71361 176764  4572/4275/213    6061/251    30  121   21.76)
ramon: poll                 wall=13.000s usage=12.950s mem=23232KiB load=1.00 rootload=1.00
(smt.stats   43   5757  73097 180730  4992/4422/214    6253/279    31  126   21.95)
ramon: poll                 wall=14.000s usage=13.949s mem=23496KiB load=1.00 rootload=1.00
(smt.stats   44   5970  75512 188334  5305/4898/215    6496/284    31  126   22.14)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 1125899906842634 := 16 << 41
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 10 := 16 << 41
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 10 := 16 << 41
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&35184372088832
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 33355 := 8 << 42
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&35184372088832
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 33355 := 8 << 42
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&35184372088832
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 33355 := 8 << 42
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&35184372088832
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 33353 := 8 << 42
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&35184372088832
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 33354 := 8 << 42
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&35184372088832
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 33354 := 8 << 42
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&283025483563409
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 283025483563409 := 12 << 43
(smt.stats   45   6071  76876 193395  5389/5198/232    6706/301    32  126   22.14)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&105553116266494
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 105553116266494 := 12 << 43
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&105553116266496
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 33483 := 6 << 44
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&105553116266496
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 33355 := 6 << 44
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&105553116266496
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 33355 := 6 << 44
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&105553116266496
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 182041 := 6 << 44
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 0 := 6 << 46
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 0 := 10 << 44
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 0 := 8 << 45
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 0 := 8 << 45
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 0 := 8 << 45
(smt.stats   46   6182  79016 197998  5444/5216/237    6833/306    32  126   22.34)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 0 := 4 << 47
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 3 := 8 << 45
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 3 := 8 << 45
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&281474976710656
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906547522 := 4 << 46
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&281474976710656
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 281474976710658 := 4 << 46
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&283025483563411
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 66711119987278227 := 4 << 47
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&283025483563411
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 66711119987278227 := 4 << 47
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&562949953421313
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 66991044457136129 := 6 << 46
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&562949953421313
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 66991044457136129 := 6 << 46
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&422212465065984
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906840315 := 3 << 47
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&422212465065984
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906840315 := 3 << 47
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906840314 := 2 << 48
(smt.stats   47   6304  80875 202913  5582/5310/257    6967/398    33  149   22.53)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906547522 := 2 << 48
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&562949953421312
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906840312 := 2 << 48
(smt.stats   48   6438  84161 209823  5633/5418/277    7111/399    33  149   22.63)
(smt.stats   49   6585  87535 216081  5632/5425/278    7262/413    34  153   22.72)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&562949953421312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 30962247438172160 := 110 << 44
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&562949953421312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #1059 #1063) 64)) 30962247438172160 := 110 << 44
(smt.stats   50   6746  91289 222886  5662/5428/278    7452/415    34  153   22.72)
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&809240558043136
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906840366 := 55 << 45
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&809240558043136
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906840312 := 55 << 45
band: (band[50] (if (or #423 #426 #429 #432 #435 #438 #441 #444 #447 #450 #453 #456 #459 #462 #465 #468 ...) 0 (if #420 1 #865)) (shl[64] (* 2 #107) (mod #1067 64))) 0 := 0&809240558043136
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 1125899906547576 := 55 << 45
(smt.stats   51   6923  94373 231245  5734/5480/278    7680/426    35  156   22.82)
ramon: poll                 wall=15.000s usage=14.948s mem=24612KiB load=1.00 rootload=0.98
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7117  99663 237504  5909/5526/283    7951/436    35  156   23.10)
ramon: poll                 wall=16.005s usage=15.955s mem=24668KiB load=1.00 rootload=1.01
ramon: poll                 wall=17.000s usage=16.944s mem=24924KiB load=0.99 rootload=0.98
(smt.stats   53   7330 105380 251743  6159/5794/283    8242/446    36  157   23.20)
ramon: poll                 wall=18.000s usage=17.943s mem=24956KiB load=1.00 rootload=1.00
(smt.stats   54   7564 111523 260148  6319/5989/283    8496/449    36  157   23.29)
(smt.stats   55   7665 114496 267316  6399/6108/283    8636/451    36  157   23.49)
ramon: poll                 wall=19.000s usage=18.942s mem=25308KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.941s mem=25316KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:45:29 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.971s
ramon: group.utime          19.947s
ramon: group.stime          0.024s
ramon: group.mempeak        25576KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.026s
ramon: loadavg              1.00
