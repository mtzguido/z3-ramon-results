ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:26:20 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42882 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/448rCA1wJDhO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2783274
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3800   2319  1216/1093/91      96/7     3   13   19.17)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&100
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&100
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&100
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 49 := 50 << 1
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&100
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 1 := 50 << 1
(smt.stats    1    202   5190   4021  2070/1863/99     190/8     6   16   19.27)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&92
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&92
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&92
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&92
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&92
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&92
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&92
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&92
(smt.stats    2    313   6100   6426  2317/2089/124     300/23    10   22   19.47)
(smt.stats    3    414   9352   8756  2344/2112/124     403/23    10   22   19.58)
(smt.stats    4    525  11939  10182  2347/2115/129     509/24    11   24   19.58)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&2251799813685241
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355408
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 4644337115725824 := 2251799813685248 << 46
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 4644337115725824 := 2392537302040550 << 46
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355343
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355343
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 4644337115725824 := 2251799813685248 << 46
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 4644337115725824 := 2251799813685248 << 46
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 2251799813685245 := 1125899908022305 << 47
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 4644337115725824 := 2251799813685248 << 46
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 2251799813685245 := 1125899908022305 << 47
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 4644337115725824 := 2251799816044610 << 46
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 2251799813685245 := 1125899908022305 << 47
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 4644337115725824 := 2251799813685248 << 46
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 2251799813685245 := 1125899908022305 << 47
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&2251799813685231
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&2251799813685229
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&2251799813685216
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&2251799813685199
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 4644337115725824 := 16532 << 46
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 140737488355326&985162418487296
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 16430 := 8215 << 47
(smt.stats    5    647  14231  12696  2446/2117/129     628/35    12   28   19.99)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14828  13765  2586/2241/171     742/44    13   36   20.09)
ramon: poll                 wall=1.000s usage=1.000s mem=21300KiB load=1.00 rootload=0.99
ramon: poll                 wall=2.000s usage=1.999s mem=21476KiB load=1.00 rootload=1.00
(smt.stats    7    859  15727  15598  2770/2522/172     872/59    14   40   20.28)
(smt.stats    8    981  16872  18105  2808/2559/181     989/62    15   46   20.28)
(smt.stats    9   1115  22863  23344  2830/2588/181    1097/63    16   57   20.28)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617569
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617601
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617601
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617729
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617729
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617729
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617569
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617569
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617569
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617601
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617729
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617729
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617985
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488618049
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488618049
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488618497
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488618497
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488879617
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488879617
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488880129
(smt.stats   10   1216  25277  26803  2949/2647/218    1263/76    17   63   20.48)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488879617
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&140737488617985
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&1025
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&1025
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&1025
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&2049
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&2049
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&4097
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&8193
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&8193
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&18433
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&18433
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&18433
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&18433
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&18433
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&20481
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&32769
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&32769
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&32769
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&65537
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&32769
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&16385
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&16385
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&16385
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710652&16385
(smt.stats   11   1327  27182  32604  3191/2923/338    1465/121    19   92   20.87)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  29217  37426  3351/3107/362    1845/126    20  100   20.96)
(smt.stats   13   1583  34813  51965  3427/3127/363    2070/291    21  109   21.06)
(smt.stats   14   1730  37548  57388  3585/3191/363    2435/306    21  109   21.25)
ramon: poll                 wall=3.003s usage=3.002s mem=22448KiB load=1.00 rootload=1.00
(smt.stats   15   1831  38308  58788  3811/3415/363    2699/306    21  109   21.34)
(smt.stats   16   1942  40998  63548  3923/3679/366    2949/583    22  110   21.54)
(smt.stats   17   2064  45062  67766  3933/3689/366    3074/583    22  110   21.71)
(smt.stats   18   2198  50798  84693  4055/3781/368    3561/707    24  118   21.71)
(smt.stats   19   2345  57016 102394  4067/3805/369    3935/917    25  118   21.80)
(smt.stats   20   2506  61791 117302  4088/3826/369    4238/999    26  119   21.90)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2607  64980 124494  4138/3827/369    4489/1005    26  119   21.99)
(smt.stats   22   2718  67622 130006  4276/3905/369    4689/1008    26  119   21.99)
(smt.stats   23   2840  72495 147878  4329/4059/369    4813/1008    26  119   22.10)
(smt.stats   24   2974  78977 166427  4375/4113/371    5079/1171    27  121   22.10)
ramon: poll                 wall=4.000s usage=3.999s mem=23416KiB load=1.00 rootload=1.00
(smt.stats   25   3121  84474 186843  4517/4165/372    5372/1257    29  121   22.20)
(smt.stats   26   3282  86395 193957  5121/4278/372    5845/1260    29  121   22.39)
(smt.stats   27   3459  88666 204000  5529/5267/380    6785/1377    30  123   22.59)
(smt.stats   28   3560  91383 220264  5544/5268/380    6929/1379    30  123   22.59)
(smt.stats   29   3671  97489 257157  5559/5298/381    7578/1617    31  153   22.68)
(smt.stats   30   3793 103530 292360  5626/5351/381    7940/1617    31  153   22.78)
(smt.stats   31   3927 108125 298502  5655/5374/383    8211/2245    32  159   22.87)
(smt.stats   32   4075 113316 313002  5671/5392/387    8611/2245    32  159   22.97)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1245183 := 2199023255551&7487488
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1245183 := 2199023255551&7487488
(smt.stats   33   4236 119732 332335  5743/5404/387    9080/2433    33  177   22.97)
ramon: poll                 wall=5.000s usage=4.998s mem=24652KiB load=1.00 rootload=1.00
(smt.stats   34   4413 125298 348234  6128/5560/387    9836/2444    33  177   23.16)
(smt.stats   35   4607 130774 367905  6152/5866/387   10234/2444    33  177   23.16)
(smt.stats   36   4710 135091 394310  6165/5890/389   10421/2820    34  186   23.16)
(smt.stats   37   4821 138574 419336  6274/5900/389   10627/2823    34  186   23.34)
(smt.stats   38   4943 141978 441244  6374/6006/389   11460/2828    34  186   23.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   39   5077 144298 448326  6482/6182/391   11996/3261    35  197   23.55)
(smt.stats   40   5224 147215 471237  6720/6285/392   13014/3276    35  197   23.74)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   41   5385 150828 509970  6861/6464/392   13281/3407    36  209   23.86)
ramon: poll                 wall=6.000s usage=5.998s mem=25300KiB load=1.00 rootload=0.99
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534308 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534312 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534320 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534320 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534320 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534310 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534308 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534308 := 17179869183&11534336
(smt.stats   42   5562 154782 532325  6979/6657/393   14351/3587    37  210   24.07)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534308 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534312 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534312 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534312 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534306 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534306 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534306 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534306 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534306 := 17179869183&11534336
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 11534336 := 17179869183&11534336
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 3472275312714186752 := 34 << 33
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 3145728 := 17179869183&3145728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 3472275312705798144 := 34 << 33
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 3145728 := 17179869183&3145728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 3472275312705798144 := 34 << 33
(smt.stats   43   5756 160339 551449  7192/6719/413   15133/3606    37  210   24.27)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1646592 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1695744 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1687552 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1622016 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1613824 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1998848 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1802240 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1703936 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1703936 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1638400 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1572864 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1310720 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1310720 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1310720 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 10551296 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 10551296 := 17179869183&292057776128
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 10485760 := 17179869183&292057776128
(smt.stats   44   5969 165132 564773  7459/7095/460   15647/3806    38  220   24.56)
(smt.stats   45   6070 169742 582790  7540/7240/471   16260/3807    38  220   24.75)
(smt.stats   46   6181 173685 600976  7583/7266/472   16838/3969    39  231   24.75)
(smt.stats   47   6303 176935 622323  7864/7330/472   17151/3976    39  231   24.84)
(smt.stats   48   6437 180037 638349  7969/7599/472   17470/4120    40  237   24.94)
ramon: poll                 wall=7.000s usage=6.998s mem=26356KiB load=1.00 rootload=1.00
(smt.stats   49   6584 186435 657115  8035/7700/472   18152/4126    40  237   25.04)
(smt.stats   50   6745 191851 671944  8257/7761/472   18465/4133    40  237   25.23)
(smt.stats   51   6922 198971 692280  8529/8048/472   18988/4137    40  237   25.23)
(smt.stats   52   7116 206217 709411  8560/8271/472   19340/4137    40  237   25.32)
ramon: poll                 wall=8.000s usage=7.997s mem=26820KiB load=1.00 rootload=1.00
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 3&1
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 2251799813685248 := 140737488879578 << 1
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 2251799813685248 := 140737488879578 << 1
(smt.stats   53   7329 212077 755371  8728/8276/473   19992/4669    41  244   25.69)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&140737488618562
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&140737488618562
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&140737488618562
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&140737488618562
(smt.stats   54   7563 217447 777926  8955/8621/486   20386/4672    41  244   25.89)
(smt.stats   55   7664 219934 796299  9053/8658/486   20743/4703    42  264   25.99)
(smt.stats   56   7775 221958 809056  9147/8787/487   21144/4706    42  264   25.99)
ramon: poll                 wall=9.000s usage=8.997s mem=27568KiB load=1.00 rootload=1.00
(smt.stats   57   7897 223563 815537  9232/8854/487   21554/4706    42  264   26.09)
(smt.stats   58   8031 225734 840534  9380/8936/487   21909/4708    42  264   26.19)
(smt.stats   59   8178 228723 875046  9548/9098/487   22332/4879    43  269   26.28)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&292056530944
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&292056530944
(smt.stats   60   8339 233116 898207  9605/9282/488   22662/4879    43  269   26.38)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8516 238199 908188  9612/9296/488   22940/4918    44  273   26.47)
ramon: poll                 wall=10.003s usage=9.999s mem=27988KiB load=1.00 rootload=1.00
(smt.stats   62   8710 247880 972084  9624/9306/488   23388/4918    44  273   26.47)
(smt.stats   63   8923 257020 1025603  9664/9317/488   24032/4920    44  273   26.79)
(smt.stats   64   9157 265455 1066348  9766/9426/489   24590/5154    45  275   26.89)
ramon: poll                 wall=11.000s usage=10.996s mem=28468KiB load=1.00 rootload=1.00
(smt.stats   65   9414 270807 1100598 10281/9455/489   25541/5160    45  275   27.08)
(smt.stats   66   9515 274336 1122529 10294/9978/492   26982/5160    45  275   27.27)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   67   9626 281820 1167148 10300/9982/492   27675/5362    46  285   27.38)
(smt.stats   68   9748 289517 1197495 10436/9988/492   28339/5372    46  285   27.56)
ramon: poll                 wall=12.000s usage=11.996s mem=29020KiB load=1.00 rootload=1.00
(smt.stats   69   9882 294874 1217520 10622/10163/492   28758/5375    46  285   27.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 226)
(smt.stats   70  10029 299744 1238973 10704/10386/493   29359/6088    47  288   27.75)
(smt.stats   71  10190 306059 1278335 10837/10426/494   30158/6103    47  288   27.85)
(smt.stats   72  10367 315320 1336297 10950/10551/494   31071/6565    48  288   27.94)
ramon: poll                 wall=13.000s usage=12.995s mem=29596KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   73  10561 321460 1374705 11077/10636/494   31899/6574    48  288   28.14)
(smt.stats   74  10775 327693 1442611 11332/10798/494   32784/6578    48  288   28.33)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 40 := 63&4587520
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 40 := 63&4587520
(smt.stats   75  11009 333305 1492475 11494/11027/495   33850/6970    49  291   28.43)
ramon: poll                 wall=14.003s usage=13.997s mem=29912KiB load=1.00 rootload=1.00
(smt.stats   76  11266 344138 1577920 11571/11255/495   35214/6970    49  291   28.54)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 32 := 63&393216
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 63&393216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 18444492273896259584 := 2251799813161152 << 5
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 63&393216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 18444492273896259584 := 2251799813161152 << 5
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 63&393216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 18444492273896259584 := 2251799813161152 << 5
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 63&393216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 18444492273896259584 := 2251799813209602 << 5
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 63&393216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 18444492273896259584 := 2251799813209602 << 5
(smt.stats   77  11548 348272 1597012 11674/11260/495   35629/6977    49  291   28.63)
(smt.stats   78  11649 349666 1610708 11850/11358/500   35754/7513    50  292   28.73)
(smt.stats   79  11760 350848 1617464 11878/11543/500   35881/7513    50  292   28.73)
(smt.stats   80  11882 352068 1623390 11927/11565/500   36015/7513    50  292   28.73)
(smt.stats   81  12016 356097 1651938 11987/11669/506   36475/7513    50  292   28.83)
ramon: poll                 wall=15.000s usage=14.994s mem=30352KiB load=1.00 rootload=1.00
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 15&70368741228228
(smt.stats   82  12163 360788 1709007 12116/11716/507   36637/7605    51  332   28.83)
(smt.stats   83  12324 370107 1775340 12136/11818/507   37008/7605    51  332   28.93)
(smt.stats   84  12501 377010 1825766 12166/11824/507   37886/7605    51  332   29.03)
(smt.stats   85  12695 387183 1880265 12288/11970/508   38429/8011    52  343   29.13)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 5 := 4294967295&2097157
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 5 := 4294967295&2097157
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 2097157 := 4294967295&2097157
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 2097157 := 2251799813685890 << 31
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 2097157 := 4294967295&2097157
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 135107988823212037 := 2251799813685890 << 31
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 2097157 := 4294967295&2097157
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 135107988823212037 := 2251799813685890 << 31
(smt.stats   86  12908 397116 1917848 12538/12179/524   39055/8018    52  343   29.70)
ramon: poll                 wall=16.000s usage=15.993s mem=31476KiB load=1.00 rootload=1.00
(smt.stats   87  13142 407648 1981036 12567/12196/524   40577/8020    52  343   29.89)
(smt.stats   88  13399 424188 2037802 12631/12224/525   42963/8235    53  353   30.43)
ramon: poll                 wall=17.000s usage=16.993s mem=32060KiB load=1.00 rootload=1.00
(smt.stats   89  13681 437854 2081450 12814/12351/526   44775/8237    53  353   30.62)
ramon: poll                 wall=18.000s usage=17.993s mem=32248KiB load=1.00 rootload=1.00
(smt.stats   90  13991 453782 2175238 13154/12520/526   46974/8618    54  391   30.81)
(smt.stats   91  14092 459989 2236746 13159/12803/526   47409/8618    54  391   30.93)
(smt.stats   92  14203 466263 2281903 13302/12809/526   47800/8621    54  391   31.03)
ramon: poll                 wall=19.000s usage=18.992s mem=32592KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   93  14325 472405 2311683 13491/12969/526   48567/8625    54  391   31.12)
(smt.stats   94  14459 477335 2353183 13663/13153/526   49661/8630    54  391   31.21)
ramon: poll                 wall=20.000s usage=19.992s mem=33256KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:26:40 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.001s
ramon: group.utime          19.989s
ramon: group.stime          0.012s
ramon: group.mempeak        33512KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
