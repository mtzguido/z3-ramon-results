ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:25:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41402 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1251
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/VV9zTKFVhZQ8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2985492
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 18 := 1073741823&39
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #879 #881) 64)) 18446181123756130304 := 1125899906842602 << 29
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 1073741823 := 1073741823&1073741842
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&40
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&40
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #879 #881) 64)) 562949953421312 := 38 << 29
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 21 := 1073741823&40
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 22 := 1073741823&40
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&40
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&48
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 21 := 1073741823&38
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 20 := 1073741823&38
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 20 := 1073741823&36
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #879 #881) 64)) 562949953421312 := 38 << 29
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #879 #881) 64)) 562949953421312 := 1048638 << 29
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #879 #881) 64)) 562949953421312 := 1048638 << 29
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #879 #881) 64)) 562949953421312 := 1048638 << 29
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #879 #881) 64)) 562949953421312 := 1048736 << 29
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #879 #881) 64)) 562949953421312 := 1048638 << 29
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 562949953421311 := 14155776 << 30
(smt.stats    0    101   2734    626  1263/1106/133      91/10    11   23   19.36)
(smt.stats    1    202   4159   1669  2125/1929/138     187/21    14   29   19.46)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 562949953421311 := 223338299392 << 30
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 562949953421311 := 223338299392 << 30
(smt.stats    2    313   7452   3770  2156/1931/138     298/21    14   29   19.56)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&0
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 1065151889409 := 1065151889408 << 30
(smt.stats    3    414   9078   5397  2261/2047/140     405/33    15   34   19.65)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 1 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 1 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 2 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 4 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 8 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 1073741808 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 32 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 64 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 128 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 512 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 1024 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 2048 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 4096 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 8192 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 16384 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 32768 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 65536 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 131072 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 262144 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 524288 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 1048576 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 2097152 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 4194304 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 8388608 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 16777216 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 33554432 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 67108864 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 134217728 := 1073741823&103079215104
(smt.stats    4    525  10410   6902  2558/2108/149     531/54    17   40   20.57)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 512 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 64 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 64 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 1 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 2 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 4 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 8 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 8 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 4 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 8 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 8 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 2 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 0 := 1073741823&103079215104
band: (band[49] (if (= #119 48) 1 (if #558 3 #694)) (shl[49] (bv2int %0) (+ 49 #697))) 1 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 1073741820 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 1073741816 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 40 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 40 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 48 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 64 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 128 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 512 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 1024 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 2048 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 4096 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 8192 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 16384 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 32768 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 65536 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 131072 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 262144 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 524288 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 1048576 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 2097152 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 4194304 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 8388608 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 16777216 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 33554432 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 67108864 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 134217728 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 268435456 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 536870912 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 268435456 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 536870912 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 134217728 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 268435456 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 268435456 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 268435456 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 268435456 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 268435456 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 33554432 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 67108864 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 33554432 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 16777216 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 16777216 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 16777216 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 10485760 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 10485760 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 12582912 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 12582912 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 10485760 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 8388608 := 1073741823&155692564480
(smt.stats    5    647  12548  14072  2544/2298/401     716/103    21  100   20.96)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 40 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 40 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 40 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 64 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 40 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 64 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 64 := 1073741823&155692564480
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  13744  16410  2696/2371/457     914/139    22  109   21.06)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 192 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 160 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 128 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 128 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 128 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 512 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 256 := 1073741823&103079215104
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 512 := 1073741823&562908077490176
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 512 := 1073741823&155692564480
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 512 := 1073741823&155692564480
(smt.stats    7    859  15655  20856  2790/2502/462    1254/188    23  114   21.54)
(smt.stats    8    981  18170  27525  3121/2715/486    1792/541    26  132   21.73)
(smt.stats    9   1115  23193  36092  3170/2936/490    2126/648    28  139   21.92)
(smt.stats   10   1216  28289  45983  3209/2943/491    2303/693    29  139   21.92)
ramon: poll                 wall=1.000s usage=0.955s mem=23264KiB load=0.95 rootload=0.95
(smt.stats   11   1327  32765  52377  3352/2983/491    2472/693    29  139   22.01)
(smt.stats   12   1449  36617  64498  3427/3194/498    2805/803    32  147   22.21)
(smt.stats   13   1583  41875  74935  3584/3316/504    2984/879    33  155   22.31)
(smt.stats   14   1730  49527  92685  3652/3381/515    3414/928    36  184   22.50)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 562949953421309 := 562949953421311&562949953421311
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 562949953421309 := 562949953421311&562949953421311
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 562949953421310 := 562949953421311&562949953421311
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 562949953421308 := 562949953421311&562949953421309
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 562949953421308 := 562949953421311&562949953421309
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   15   1831  53062 100588  3853/3549/531    3669/979    38  195   22.71)
(smt.stats   16   1942  59267 109440  3988/3655/535    4087/1009    39  196   23.00)
(smt.stats   17   2064  64614 127063  4023/3685/535    4496/1009    39  196   23.09)
(smt.stats   18   2198  70334 141651  4121/3695/535    4790/1147    40  207   23.30)
(smt.stats   19   2345  84519 186498  4140/3797/537    5064/1161    41  209   23.30)
ramon: poll                 wall=2.000s usage=1.955s mem=25068KiB load=1.00 rootload=0.99
(smt.stats   20   2506  90793 204549  4170/3827/544    5447/1182    43  226   23.52)
(smt.stats   21   2607  97940 225896  4188/3841/546    5652/1220    44  254   23.65)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 2 := 1023&562949953421310
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 2 := 1023&562949953421310
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 2 := 1023&562949953421310
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 2 := 1023&562949953421310
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 2 := 1023&562949953421310
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 2 := 1023&562949953421310
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   22   2718 102242 240403  4248/3848/546    6134/1246    45  259   23.74)
(smt.stats   23   2840 106819 255178  4300/3915/562    6470/1285    46  264   23.95)
(smt.stats   24   2974 110040 267984  4379/3981/562    6849/1298    47  264   23.95)
(smt.stats   25   3121 116383 285407  4391/4042/565    7374/1324    48  271   24.04)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 37 := 63&541065268
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 38 := 63&541065268
(smt.stats   26   3282 122503 301324  4542/4057/567    7792/1358    49  286   24.25)
ramon: poll                 wall=3.000s usage=2.954s mem=26112KiB load=1.00 rootload=1.00
(smt.stats   27   3459 124922 310761  4953/4605/568    8470/1395    50  298   24.67)
(smt.stats   28   3560 129725 323539  4990/4610/569    9317/1398    50  298   24.86)
(smt.stats   29   3671 138931 354916  4997/4649/570    9581/1649    52  317   24.96)
(smt.stats   30   3793 144224 375192  5014/4653/571   10048/1649    52  317   24.96)
(smt.stats   31   3927 151558 398579  5034/4682/571   10627/1698    53  320   25.17)
(smt.stats   32   4074 157733 416209  5040/4688/572   11202/1787    54  324   25.26)
ramon: poll                 wall=4.000s usage=3.954s mem=26796KiB load=1.00 rootload=1.00
(smt.stats   33   4235 166567 445332  5205/4732/573   11822/1946    55  325   25.45)
ramon: poll                 wall=5.000s usage=4.954s mem=27068KiB load=1.00 rootload=1.00
(smt.stats   34   4412 172569 463763  5483/5095/575   12486/2053    56  330   25.65)
(smt.stats   35   4606 180060 485752  5572/5161/575   13699/2062    56  330   25.84)
(smt.stats   36   4707 183532 505220  5671/5311/575   14521/2062    56  330   25.95)
ramon: poll                 wall=6.000s usage=5.954s mem=27684KiB load=1.00 rootload=1.00
(smt.stats   37   4818 188367 530477  5690/5326/576   14915/2485    57  343   25.95)
(smt.stats   38   4940 192044 553896  5709/5357/581   15594/2536    58  374   26.07)
(smt.delete-inactive-clauses  :num-deleted-clauses 486)
(smt.stats   39   5074 196707 571050  5757/5368/581   15985/2543    58  374   26.26)
(smt.stats   40   5221 204255 598595  5882/5430/581   17048/2547    58  374   26.35)
ramon: poll                 wall=7.000s usage=6.953s mem=27976KiB load=1.00 rootload=1.00
(smt.stats   41   5382 213093 641391  5987/5549/584   17823/2953    59  403   26.57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5559 217667 659588  6132/5773/588   18971/3084    60  450   26.76)
ramon: poll                 wall=8.005s usage=7.957s mem=28360KiB load=1.00 rootload=1.00
(smt.stats   43   5753 226606 689560  6294/5800/588   19916/3087    60  450   27.04)
(smt.stats   44   5966 235274 713603  6460/5955/588   21338/3285    61  473   27.14)
ramon: poll                 wall=9.000s usage=8.952s mem=28640KiB load=1.00 rootload=1.00
(smt.stats   45   6067 240840 724250  6481/6121/588   21626/3286    61  473   27.24)
(smt.stats   46   6178 245980 754020  6501/6149/588   22370/3286    61  473   27.33)
(smt.stats   47   6300 255170 792081  6625/6270/594   22875/3512    62  500   27.43)
ramon: poll                 wall=10.000s usage=9.952s mem=28988KiB load=1.00 rootload=1.00
(smt.stats   48   6434 261388 818876  6688/6281/594   23436/3524    62  500   27.53)
(smt.stats   49   6581 264476 837554  6751/6374/600   24336/3604    63  574   27.62)
(smt.stats   50   6742 272526 875164  6765/6413/600   24799/3604    63  574   27.72)
(smt.stats   51   6919 283423 920305  6765/6415/600   25037/3778    64  594   27.72)
(smt.stats   52   7113 287874 932723  6873/6422/600   25612/3783    64  594   27.81)
ramon: poll                 wall=11.000s usage=10.952s mem=29348KiB load=1.00 rootload=0.99
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 570426452 := 274877906943&275448333392
(smt.stats   53   7326 296163 949058  7100/6551/600   26185/3789    64  594   27.91)
(smt.stats   54   7560 304782 988429  7339/6805/600   27786/3800    64  594   28.26)
ramon: poll                 wall=12.000s usage=11.951s mem=29884KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   55   7661 310740 1022148  7420/7010/600   28053/3804    64  594   28.50)
(smt.stats   56   7772 315262 1050451  7527/7087/600   28436/3807    64  594   28.50)
(smt.stats   57   7894 318427 1063058  7664/7190/601   28762/4082    65  620   28.59)
(smt.stats   58   8028 322979 1082549  7731/7354/601   29599/4090    65  620   28.69)
ramon: poll                 wall=13.000s usage=12.951s mem=30232KiB load=1.00 rootload=1.00
(smt.stats   59   8176 328713 1109227  7971/7621/602   30211/4101    65  620   28.78)
(smt.stats   60   8337 333681 1128927  8146/7624/602   30840/4198    66  645   28.97)
ramon: poll                 wall=14.000s usage=13.951s mem=30476KiB load=1.00 rootload=1.00
(smt.stats   61   8514 338918 1148480  8344/7877/602   31675/4208    66  645   29.07)
(smt.stats   62   8708 352846 1213728  8386/8029/603   32439/4432    67  670   29.32)
ramon: poll                 wall=15.000s usage=14.951s mem=30908KiB load=1.00 rootload=1.00
(smt.stats   63   8921 362311 1275133  8460/8110/605   33604/4529    68  694   29.42)
(smt.stats   64   9155 374943 1332364  8480/8128/606   35027/4529    68  694   29.61)
(smt.stats   65   9412 381225 1368318  8834/8135/606   35871/4541    68  694   29.80)
ramon: poll                 wall=16.000s usage=15.950s mem=31352KiB load=1.00 rootload=1.00
(smt.stats   66   9513 383526 1387199  8898/8546/609   36746/4840    69  758   29.90)
(smt.stats   67   9624 387614 1411658  8938/8556/609   37180/4843    69  758   29.99)
(smt.stats   68   9746 393037 1437152  8997/8608/609   37474/4847    69  758   30.09)
ramon: poll                 wall=17.000s usage=16.950s mem=32200KiB load=1.00 rootload=1.00
(smt.stats   69   9880 397068 1460253  9176/8738/610   38254/4848    69  758   30.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 280)
(smt.stats   70  10027 399219 1473718  9202/8848/611   38235/4994    70  807   30.37)
(smt.stats   71  10188 407996 1540215  9230/8866/611   39473/4994    70  807   30.46)
ramon: poll                 wall=18.000s usage=17.949s mem=32232KiB load=1.00 rootload=1.00
(smt.stats   72  10365 413102 1567891  9500/8886/612   40054/5163    71  811   30.46)
(smt.stats   73  10559 416619 1602205  9598/9244/615   41469/5163    71  811   30.75)
ramon: poll                 wall=19.000s usage=18.949s mem=32256KiB load=1.00 rootload=1.00
(smt.stats   74  10772 433971 1771554  9606/9252/615   42338/5163    71  811   30.86)
band: (band[49] (if (or #709 #710 #711 #712 #713 #714 #715 #716 #717 #718 #719 #720 #721 #722 #723) 0 (if #724 1 #820)) (shl[64] (* 2 #113) (mod #882 64))) 2 := 255&442
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   75  11006 439580 1832504  9679/9267/616   43598/5534    72  889   30.96)
(smt.stats   76  11263 446459 1896020  9849/9425/618   44915/5546    72  889   31.19)
ramon: poll                 wall=20.000s usage=19.943s mem=33036KiB load=0.99 rootload=1.00
ramon: end                  Tue Dec 24 15:26:04 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.988s
ramon: group.stime          0.012s
ramon: group.mempeak        34932KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.055s
ramon: loadavg              1.00
