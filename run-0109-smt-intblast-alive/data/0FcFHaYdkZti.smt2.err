ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:16:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         43148 MiB
ramon: sys.mem.avail        61717 MiB
ramon: sys.nprocs           1379
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0FcFHaYdkZti.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2749378
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4639   1086  1232/1090/91      97/13     3   13   19.04)
(smt.stats    1    202   5805   2402  1835/1648/94     192/14     5   17   19.24)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 11 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 10 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&47
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&47
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&46
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&19
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&32
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&19
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&32
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&128
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&128
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&12
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&59
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&58
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&56
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&59
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&128
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&16
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&32
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&32
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&40
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&40
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&40
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&40
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&34
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&34
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 32 := 2047&42
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 34 := 2047&42
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&64
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&65
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&65
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&65
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&33
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9007199254740993 := 11 << 11
(smt.stats    2    313   7268   4196  1998/1796/209     334/25     6   39   19.73)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1 := 2047&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9007199254740993 := 11 << 11
(smt.stats    3    414   8588   6362  2037/1833/219     429/39     8   57   19.83)
(smt.stats    4    525  10013  10010  2526/2277/234     543/70    10   75   20.14)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 4 := 2 << 2
(smt.stats    5    647  15653  16729  2619/2350/237     674/74    11   95   20.27)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 4 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 2 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 2 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 7 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 2 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 8 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&8
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 2 := 8&3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 64 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 128 := 2 << 2
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 3&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 128 := 2 << 2
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    749  16981  20079  2694/2416/269     843/88    12  107   20.48)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2 := 3&8
(smt.stats    7    860  21839  27964  2756/2468/271    1009/102    13  110   20.58)
(smt.stats    8    982  25345  34213  2783/2489/271    1195/102    13  110   20.67)
(smt.stats    9   1116  31075  42053  2798/2502/289    1393/117    14  112   20.77)
(smt.stats   10   1217  35327  49374  2808/2515/290    1554/169    16  132   20.87)
(smt.stats   11   1328  36163  54835  2822/2527/292    1737/178    17  135   20.87)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  38791  60706  2829/2534/293    1909/178    17  135   20.98)
(smt.stats   13   1585  44297  70488  2845/2550/294    2067/196    19  144   20.98)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&512
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 512 := 4503599627370496 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&512
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 512 := 4503599627370496 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&384
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 384 := 2251799813685275 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&384
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 384 := 2251799813685275 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 641 := 160 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 320 := 160 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 320&1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 320 := 160 << 1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 320&1
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&320
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 157 := 160 << 1
(smt.stats   14   1732  46912  76812  2881/2582/306    2250/201    20  144   21.47)
(smt.stats   15   1833  50087  84042  2925/2617/306    2364/202    20  144   21.47)
(smt.stats   16   1944  53747  93369  2943/2640/308    2538/212    22  150   21.47)
(smt.stats   17   2066  56223  98230  2967/2664/309    2713/213    22  150   21.56)
(smt.stats   18   2200  60192 110847  2975/2672/309    2846/244    23  160   21.56)
(smt.stats   19   2347  63624 116423  3041/2709/311    3135/255    24  168   21.66)
ramon: poll                 wall=1.000s usage=0.938s mem=23476KiB load=0.94 rootload=0.92
(smt.stats   20   2508  66587 123258  3105/2800/315    3460/267    25  172   21.84)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 36 := 63&9007199254740977
(smt.stats   21   2609  70662 134302  3145/2836/317    3658/308    26  182   21.84)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 45 := 63&9007199254740989
(smt.stats   22   2720  72908 146005  3243/2857/317    3925/312    26  182   22.04)
(smt.stats   23   2842  75861 157592  3400/3009/319    4340/322    27  183   22.04)
(smt.stats   24   2976  79039 164984  3536/3107/319    4746/354    28  194   22.14)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 25 := 63&9007199254740829
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 25 := 63&9007199254740829
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 25 := 63&9007199254740829
(smt.stats   25   3123  84110 178287  3608/3247/319    5424/358    28  194   22.24)
(smt.stats   26   3284  90102 189472  3634/3324/327    5649/471    29  195   22.34)
(smt.stats   27   3461  97146 212086  3688/3382/330    6167/521    31  201   22.34)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 1&9007199254740990
band: (band[53] (shl[53] (bv2int %0) (mod #109 53)) (if (= #619 52) 1 (if #621 3 #768))) 1 := 9007199254740990&1
(smt.stats   28   3562  99129 217782  3716/3404/331    6555/521    31  201   22.34)
(smt.stats   29   3673 103755 233311  3728/3418/332    6615/742    32  382   22.46)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 20 := 63&4503599627370448
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 16 := 63&4503599627370448
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 4503599627370448 := 4503599627370448 << 6
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 16 := 63&4503599627370448
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 4503599627370448 := 4503599627370448 << 6
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 16 := 63&4503599627370448
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 4503599627370448 := 4503599627370448 << 6
(smt.stats   30   3795 107465 244100  3784/3419/332    6828/742    32  382   22.56)
ramon: poll                 wall=2.000s usage=1.937s mem=23860KiB load=1.00 rootload=0.99
(smt.stats   31   3929 109267 249033  4072/3496/337    7203/745    32  382   22.66)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076 113278 260367  4103/3791/337    7636/745    32  382   22.75)
(smt.stats   33   4237 120323 275654  4108/3797/339    7988/832    33  383   22.98)
(smt.stats   34   4414 127493 295018  4199/3808/339    8531/862    34  405   23.16)
(smt.stats   35   4608 137207 322910  4213/3900/339    9049/862    34  405   23.16)
(smt.stats   36   4709 145113 348336  4230/3913/339    9203/862    34  405   23.16)
(smt.stats   37   4820 149396 359442  4275/3924/339    9505/866    34  405   23.16)
(smt.stats   38   4942 152936 371395  4302/3989/344    9874/1038    35  424   23.16)
ramon: poll                 wall=3.000s usage=2.936s mem=24704KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 397)
(smt.stats   39   5076 156123 380873  4310/3997/344    9848/1038    35  424   23.28)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5223 162186 409422  4312/3999/344   10044/1038    35  424   23.28)
(smt.stats   41   5384 169366 439870  4315/4002/344   10330/1112    36  492   23.28)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 7&9007199254740224
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9007199254740224 := 4503599627370498 << 3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 7&9007199254740224
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9007199254740224 := 4503599627370498 << 3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 0 := 7&9007199254740224
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 36028797018963200 := 4503599627370498 << 3
(smt.stats   42   5561 172537 451382  4399/4003/344   10810/1113    36  492   23.37)
(smt.stats   43   5755 176674 476215  4738/4133/349   11366/1174    37  493   23.47)
(smt.stats   44   5968 180620 488482  4775/4450/349   11748/1187    38  493   23.47)
(smt.stats   45   6069 184602 497887  4786/4468/349   12058/1187    38  493   23.47)
(smt.stats   46   6180 188530 509827  4833/4482/350   12334/1256    39  493   23.59)
ramon: poll                 wall=4.000s usage=3.936s mem=25256KiB load=1.00 rootload=1.00
(smt.stats   47   6302 193191 521308  4971/4594/351   12707/1259    39  493   23.78)
(smt.stats   48   6436 195690 528207  5046/4689/351   13323/1259    39  493   23.78)
(smt.stats   49   6583 200306 542949  5066/4752/351   14049/1259    39  493   23.88)
(smt.stats   50   6744 206142 575456  5073/4759/354   14573/1421    40  493   23.88)
(smt.stats   51   6921 212807 614560  5076/4762/354   15197/1421    40  493   23.98)
(smt.stats   52   7115 219411 651007  5085/4766/354   15649/1544    41  498   24.07)
(smt.stats   53   7328 225997 678617  5126/4775/354   16305/1553    41  498   24.07)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2251799813685240 := 2251799813685247&9007199254740800
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2251799813685240 := 2251799813685247&9007199254740736
ramon: poll                 wall=5.000s usage=4.935s mem=25892KiB load=1.00 rootload=1.00
(smt.stats   54   7562 231236 697890  5244/4820/354   17328/1556    41  498   24.36)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2251799813684966 := 2251799813685247&9007199254740326
(smt.stats   55   7663 234075 711392  5296/4951/354   17719/1558    41  498   24.36)
(smt.stats   56   7774 236551 725117  5389/5016/359   18179/1748    42  499   24.55)
(smt.stats   57   7896 239280 736409  5722/5105/359   18386/1748    42  499   25.23)
(smt.stats   58   8030 242524 750943  5729/5416/359   18977/1748    42  499   25.23)
(smt.stats   59   8177 245989 762452  5829/5418/359   19317/1841    43  499   25.33)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8338 249239 783327  6047/5518/359   19912/1842    43  499   25.52)
ramon: poll                 wall=6.000s usage=5.934s mem=27500KiB load=1.00 rootload=1.00
(smt.stats   61   8515 251303 794110  6185/5745/359   20368/1842    43  499   25.61)
(smt.stats   62   8709 253997 805920  6475/5962/359   20862/1843    43  499   25.61)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875787440 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875788944 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 2251799813683600 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875789072 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875787536 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875787536 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875787536 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536872208 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536872720 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536872208 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536871952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536870672 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536870672 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536870672 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 536870672 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1808 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1808 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1808 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1808 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 5904 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 7952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 7952 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 16144 := 4503599627370495&9007199254740752
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 12048 := 4503599627370495&9007199254740752
(smt.stats   63   8922 258282 836025  6852/6491/452   21616/1950    44  501   26.03)
(smt.stats   64   9156 265014 856254  6892/6555/458   22406/1953    44  501   26.22)
ramon: poll                 wall=7.000s usage=6.929s mem=27808KiB load=0.99 rootload=0.99
(smt.stats   65   9413 280240 919403  6915/6573/458   23546/1955    44  501   26.31)
(smt.stats   66   9514 282121 931159  6906/6593/460   24455/2224    45  531   26.41)
(smt.stats   67   9625 289386 954754  6955/6630/460   24968/2224    45  531   26.50)
(smt.stats   68   9747 295171 980378  7037/6631/460   25640/2225    45  531   26.60)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   69   9881 300150 1000221  7130/6714/460   26065/2496    46  533   26.70)
(smt.delete-inactive-clauses  :num-deleted-clauses 3959)
(smt.stats   70  10028 303660 1017608  7239/6867/460   22977/2498    46  533   26.80)
ramon: poll                 wall=8.000s usage=7.928s mem=28600KiB load=1.00 rootload=1.00
(smt.stats   71  10189 307211 1033671  7548/6935/460   23370/2500    46  533   26.80)
(smt.stats   72  10366 310887 1057106  7928/7266/460   23979/2501    46  533   26.99)
(smt.stats   73  10560 314814 1084845  8325/7630/460   24655/2505    46  533   27.18)
ramon: poll                 wall=9.000s usage=8.928s mem=28716KiB load=1.00 rootload=0.99
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1125900980597192 := 2251799813685247&2251799813685512
(smt.stats   74  10773 317408 1103871  8795/8039/460   25155/2506    46  533   27.37)
(smt.stats   75  11007 319327 1113609  9272/8489/460   25763/2508    46  533   27.58)
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875789704 := 2251799813685247&2251799813685512
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875789576 := 2251799813685247&2251799813685512
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 1501199875790088 := 2251799813685247&2251799813685512
ramon: poll                 wall=10.000s usage=9.927s mem=29472KiB load=1.00 rootload=1.00
(smt.stats   76  11264 322744 1134187  9735/8964/460   26312/2508    46  533   27.76)
(smt.stats   77  11546 327931 1170079 10004/9679/461   28505/2778    47  535   28.08)
(smt.stats   78  11647 334463 1189020 10019/9681/461   28889/2779    47  535   28.17)
ramon: poll                 wall=11.000s usage=10.927s mem=29956KiB load=1.00 rootload=1.00
(smt.stats   79  11758 341408 1210812 10036/9711/461   29767/2779    47  535   28.17)
(smt.stats   80  11880 347259 1252645 10124/9715/461   31024/2783    47  535   28.27)
(smt.stats   81  12014 350188 1277668 10150/9812/461   32313/2783    47  535   28.36)
(smt.stats   82  12161 354290 1300831 10217/9834/461   32781/2785    47  535   28.46)
(smt.stats   83  12322 357077 1320135 10547/9917/461   33160/2785    47  535   28.65)
ramon: poll                 wall=12.000s usage=11.926s mem=30384KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   84  12499 360467 1356714 10718/10248/461   34190/2785    47  535   28.74)
(smt.stats   85  12693 364975 1381835 11130/10391/461   35139/2789    47  535   29.03)
ramon: poll                 wall=13.000s usage=12.926s mem=30808KiB load=1.00 rootload=1.00
(smt.stats   86  12906 368261 1416558 11490/10806/461   36532/2791    47  535   29.32)
(smt.stats   87  13140 377813 1465797 11524/11197/461   38743/2791    47  535   29.41)
(smt.stats   88  13397 390371 1513872 11532/11205/461   39541/2791    47  535   29.51)
ramon: poll                 wall=14.000s usage=13.925s mem=31232KiB load=1.00 rootload=1.00
(smt.stats   89  13679 401379 1580040 11555/11211/463   41629/4149    48  537   29.80)
(smt.stats   90  13989 413711 1650018 11764/11243/463   44124/4155    48  537   30.20)
ramon: poll                 wall=15.000s usage=14.925s mem=31736KiB load=1.00 rootload=1.00
(smt.stats   91  14090 417718 1663759 11782/11455/463   44763/4632    49  545   30.29)
(smt.stats   92  14201 423606 1705646 11796/11469/463   45321/4632    49  545   30.29)
(smt.stats   93  14323 426043 1726051 11900/11470/463   45712/4632    49  545   30.39)
(smt.stats   94  14457 428480 1749581 12100/11730/464   46085/4632    49  545   30.39)
(smt.stats   95  14604 434921 1809466 12101/11774/464   47283/4632    49  545   30.58)
ramon: poll                 wall=16.000s usage=15.923s mem=32356KiB load=1.00 rootload=1.00
(smt.stats   96  14765 441297 1879940 12105/11778/464   47988/5177    50  564   30.58)
(smt.stats   97  14942 448151 1955361 12106/11779/464   48736/5177    50  564   30.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 322)
(smt.stats   98  15136 456042 2002936 12120/11792/464   49734/5177    50  564   30.77)
(smt.stats   99  15349 462698 2057152 12135/11807/466   51286/5894    51  589   31.36)
(smt.stats  100  15583 470896 2099862 12147/11815/468   52417/5894    51  589   31.45)
ramon: poll                 wall=17.000s usage=16.923s mem=33248KiB load=1.00 rootload=1.00
(smt.stats  101  15840 482265 2175982 12382/11848/468   53561/5904    51  589   31.55)
(smt.stats  102  16122 494301 2260224 12489/12081/468   54472/6383    52  608   31.65)
ramon: poll                 wall=18.000s usage=17.923s mem=33504KiB load=1.00 rootload=1.00
(smt.stats  103  16432 505771 2356030 12560/12232/469   56168/6544    53  621   31.85)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  104  16772 515241 2427926 12572/12244/472   57997/6544    53  621   32.04)
(smt.stats  105  16873 519464 2443655 12574/12246/473   58209/6544    53  621   32.04)
(smt.stats  106  16984 521470 2458897 12576/12248/473   58479/6544    53  621   32.04)
(smt.stats  107  17106 525897 2473692 12590/12248/473   58729/6544    53  621   32.13)
(smt.stats  108  17240 529571 2491159 12614/12264/473   59319/6885    54  682   32.13)
ramon: poll                 wall=19.000s usage=18.922s mem=34016KiB load=1.00 rootload=0.99
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 3 := 7&4503599627370523
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9227875636482146331 := 4503599627371028 << 3
band: (band[53] (if (or #784 #785 #786 #787 #788 #789 #790 #791 #792 #793 #794 #795) 0 (if #796 1 #898)) (shl[64] (bv2int %0) (mod #943 64))) 3 := 7&4503599627370523
shl: (shl[64] (bv2int %0) (mod (+ #109 #942) 64)) 9227875636482146331 := 4503599627371028 << 3
(smt.stats  109  17387 532782 2509642 12719/12339/474   59694/6887    54  682   32.25)
(smt.stats  110  17549 536121 2563240 12747/12414/474   60845/6887    54  682   32.34)
(smt.stats  111  17726 540321 2607425 12778/12421/474   61702/6887    54  682   32.68)
(smt.stats  112  17920 545858 2648947 12778/12449/474   62165/6887    54  682   32.68)
(smt.stats  113  18133 553475 2683254 12781/12452/474   62734/7123    55  685   32.79)
ramon: poll                 wall=20.000s usage=19.922s mem=34528KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:16:55 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.040s
ramon: group.total          19.988s
ramon: group.utime          19.944s
ramon: group.stime          0.044s
ramon: group.mempeak        34784KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
