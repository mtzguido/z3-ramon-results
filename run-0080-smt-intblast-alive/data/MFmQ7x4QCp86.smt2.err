ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:12:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25985 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1403
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/MFmQ7x4QCp86.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4191342
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 524287 := 524287&524287
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 524287 := 20 << 19
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 524287 := 524287&524287
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 524287 := 20 << 19
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 524287 := 524287&524287
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 524287 := 20 << 19
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 524287 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 256 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1024 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2048 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 65536 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 262144 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 6 := 524287&6
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 1073741830 := 20 << 19
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 6 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
(smt.stats    0    101   2585    683   764/685/189      96/19    11   41   19.47)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 1 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 1 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 1 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 0 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 0 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 65536 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 262144 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 262144 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2048 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 256 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1024 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 256 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 1 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 524272 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 256 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 1024 := 524287&10485760
(smt.stats    1    202   4018   2260  1411/1264/331     286/88    14   71   20.07)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 2048 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 65536 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 262144 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 262144 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 65536 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32878 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 12288 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 10240 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 96 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 12 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 1 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 16 := 524287&10485760
(smt.stats    2    313   5639   4344  1612/1452/456     506/148    17  102   20.55)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1048576 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1048576 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1048576 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 3145728 := 4194303&7340032
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 7340032 := 14 << 22
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1572864 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1048576 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 3145728 := 4194303&7340032
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 7340032 := 14 << 22
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 3145728 := 4194303&7340032
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 7340032 := 14 << 22
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16 := 2097151&8388608
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16 := 2097151&8388608
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32 := 2097151&8388608
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32 := 2097151&8388608
(smt.stats    3    414   8416   8046  1810/1587/472     724/184    18  105   20.85)
(smt.stats    4    525  12098  12806  1883/1672/519     971/303    22  161   21.32)
(smt.stats    5    647  15884  16640  2024/1860/521    1212/347    23  161   21.52)
ramon: poll                 wall=1.000s usage=0.930s mem=22856KiB load=0.93 rootload=0.91
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  19733  21176  2149/1985/523    1426/402    24  169   21.70)
(smt.stats    7    859  22931  25812  2317/1986/523    1732/414    24  169   21.80)
ramon: poll                 wall=2.000s usage=1.927s mem=23264KiB load=1.00 rootload=1.00
(smt.stats    8    981  26083  31579  2596/2243/523    2110/416    24  169   21.89)
(smt.stats    9   1115  30529  40349  2805/2474/524    2590/645    25  172   22.08)
(smt.stats   10   1216  33269  44412  3019/2690/524    2986/650    25  172   22.20)
ramon: poll                 wall=3.000s usage=2.922s mem=23860KiB load=1.00 rootload=0.99
(smt.stats   11   1327  36251  50791  3258/2880/525    3245/893    26  172   22.38)
(smt.stats   12   1449  38525  56019  3555/3174/525    3579/908    26  172   22.48)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   13   1583  41943  62975  3719/3462/531    3968/1007    27  175   22.57)
ramon: poll                 wall=4.000s usage=3.919s mem=24200KiB load=1.00 rootload=1.00
(smt.stats   14   1730  45815  67371  3920/3640/531    4410/1141    28  186   22.67)
(smt.stats   15   1831  48267  71891  4299/3986/531    4760/1154    28  186   22.86)
(smt.stats   16   1942  51418  78916  4553/4387/533    5424/1445    29  188   22.86)
(smt.stats   17   2064  54415  85129  4690/4399/533    5829/1452    29  188   23.05)
ramon: poll                 wall=5.000s usage=4.918s mem=24712KiB load=1.00 rootload=1.00
(smt.stats   18   2198  58875  90474  4813/4569/533    6208/1890    30  190   23.15)
(smt.stats   19   2345  62144  99534  5203/4944/534    6701/2211    31  190   23.33)
(smt.stats   20   2506  63260 106194  5357/5077/534    6981/2222    31  190   23.52)
(smt.stats   21   2607  64922 115845  5954/5661/534    7198/2223    31  190   23.52)
ramon: poll                 wall=6.000s usage=5.918s mem=24968KiB load=1.00 rootload=1.00
(smt.stats   22   2718  69621 158615  6106/5877/536    7759/2368    33  194   23.52)
(smt.stats   23   2840  73482 180322  6279/5961/536    8120/2368    33  194   23.62)
(smt.stats   24   2974  76906 203671  6437/6224/537    8957/2670    34  199   23.81)
ramon: poll                 wall=7.000s usage=6.918s mem=25480KiB load=1.00 rootload=1.00
(smt.stats   25   3121  81623 227068  6608/6305/537    9700/2676    34  199   23.90)
(smt.stats   26   3282  84287 248817  7044/6879/539   10270/3280    35  199   24.09)
(smt.stats   27   3459  87671 277672  7277/6882/540   10776/3287    35  199   24.19)
(smt.stats   28   3560  90997 288701  7553/7267/541   11766/3366    36  199   24.38)
ramon: poll                 wall=8.000s usage=7.918s mem=25992KiB load=1.00 rootload=1.00
(smt.stats   29   3671  96129 301454  7673/7399/541   12538/3376    36  199   24.48)
(smt.stats   30   3793 101116 330767  7880/7548/541   13373/3768    37  200   24.74)
(smt.stats   31   3927 104352 345852  7972/7807/542   14191/4089    38  208   24.93)
ramon: poll                 wall=9.000s usage=8.918s mem=26504KiB load=1.00 rootload=1.00
(smt.stats   32   4074 109483 367352  8199/7904/543   15338/4092    38  208   25.03)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4235 114906 406988  8377/8044/543   16171/4446    39  216   25.22)
ramon: poll                 wall=10.000s usage=9.918s mem=27016KiB load=1.00 rootload=1.00
(smt.stats   34   4412 120152 431369  8688/8236/543   17168/4452    39  216   25.42)
(smt.stats   35   4606 126801 479938  8857/8640/548   19146/5090    41  243   25.71)
(smt.stats   36   4707 129293 494127  9011/8768/549   19627/5091    41  243   25.80)
ramon: poll                 wall=11.000s usage=10.918s mem=27528KiB load=1.00 rootload=1.00
(smt.stats   37   4819 133292 520726  9055/8835/554   20421/5257    42  255   25.99)
(smt.stats   38   4941 137608 537935  9166/8843/554   21114/5257    42  255   26.09)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 141284 566649  9266/8984/557   22480/5258    42  255   26.72)
(smt.stats   40   5222 146190 609113  9413/9162/559   23352/5588    43  275   26.72)
ramon: poll                 wall=12.000s usage=11.918s mem=28296KiB load=1.00 rootload=1.00
(smt.stats   41   5383 153982 661957  9613/9190/559   24335/5591    43  275   26.91)
(smt.stats   42   5560 158894 699140  9728/9407/559   25379/5992    44  282   27.10)
ramon: poll                 wall=13.000s usage=12.918s mem=28808KiB load=1.00 rootload=1.00
(smt.stats   43   5754 165829 739589  9834/9519/559   26575/5996    44  282   27.29)
(smt.stats   44   5967 171624 774764  9987/9604/559   27629/5997    44  282   27.58)
ramon: poll                 wall=14.000s usage=13.918s mem=29320KiB load=1.00 rootload=1.00
(smt.stats   45   6068 175423 803557 10006/9770/561   28813/6527    45  291   27.77)
(smt.stats   46   6179 178955 820497 10103/9773/561   29202/6530    45  291   27.86)
(smt.stats   47   6301 182617 847524 10163/9888/561   29873/6530    45  291   27.86)
ramon: poll                 wall=15.000s usage=14.918s mem=29576KiB load=1.00 rootload=1.00
(smt.stats   48   6435 185879 875093 10230/9940/561   30554/6533    45  291   28.15)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   49   6582 188935 894277 10324/10048/562   30970/6947    46  298   28.24)
ramon: poll                 wall=16.000s usage=15.918s mem=30028KiB load=1.00 rootload=1.00
(smt.stats   50   6743 193304 923144 10423/10118/562   31424/6947    46  298   28.24)
(smt.stats   51   6920 200044 976324 10545/10201/562   32369/6950    46  298   28.45)
(smt.stats   52   7114 208741 1067829 10557/10322/571   33471/7523    48  345   28.54)
ramon: poll                 wall=17.000s usage=16.918s mem=30284KiB load=1.00 rootload=1.00
(smt.stats   53   7327 220848 1155483 10615/10366/573   34707/7597    49  379   28.64)
ramon: poll                 wall=18.000s usage=17.916s mem=30776KiB load=1.00 rootload=1.00
(smt.stats   54   7561 227553 1210081 10888/10620/576   37290/7600    49  379   29.02)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   55   7662 232642 1239267 10981/10661/576   37508/7602    49  379   29.12)
(smt.stats   56   7773 237776 1262803 11052/10754/576   37767/7986    50  405   29.12)
ramon: poll                 wall=19.000s usage=18.915s mem=30976KiB load=1.00 rootload=0.99
(smt.stats   57   7895 243525 1281218 11156/10843/576   38187/7988    50  405   29.21)
(smt.stats   58   8029 247393 1308162 11230/10951/578   38870/7991    50  405   29.31)
(smt.stats   59   8176 251899 1369937 11368/11105/579   39177/8335    51  423   29.31)
ramon: poll                 wall=20.000s usage=19.915s mem=31008KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:12:46 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.985s
ramon: group.utime          19.969s
ramon: group.stime          0.016s
ramon: group.mempeak        31524KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
