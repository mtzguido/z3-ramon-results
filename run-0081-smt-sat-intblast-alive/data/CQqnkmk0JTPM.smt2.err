ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:53:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29730 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CQqnkmk0JTPM.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             309720
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   202/202     0/0  58       0    18.46   0.00)
(sat.stats    101    712    0   202/202   101/28  58       0    18.76   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 460 :time 0.00)
(sat.stats    101    712    0   202/202   101/28  58       0    18.76   0.01)
(sat.stats    101    712    0   202/202   101/28  58       0    18.76   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 322618.76 :time 0.00)
(sat.stats    101    712    0   204/204    37/27  58       0    18.76   0.01)
(sat.stats    104    725    1   204/204    40/30  58       0    18.76   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    751    2   204/204    43/33  58       0    18.76   0.01)
(sat.stats    110    798    3   204/204    46/36  58       0    18.76   0.01)
(sat.stats    113    854    4   204/204    49/39  58       0    18.76   0.01)
(sat.stats    167   2002    5   204/204   103/76  58       0    18.86   0.01)
(sat.stats    170   2066    6   204/204   106/78  58       0    18.86   0.01)
(sat.stats    173   2122    7   204/204   109/78  58       0    18.86   0.01)
(sat.stats    176   2178    8   204/204   112/78  58       0    18.86   0.01)
(sat.stats    179   2238    9   204/204   115/78  58       0    18.86   0.01)
(sat.stats    182   2293   10   204/204   118/78  58       0    18.86   0.01)
(sat.stats    185   2344   11   204/204   121/78  58       0    18.86   0.01)
(sat.stats    188   2402   12   204/204   124/78  58       0    18.86   0.01)
(sat.stats    209   2926   19   204/204   145/91  58       0    18.86   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2888 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    315   6191   32   204/204   251/144  61       0    18.96   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3660 :time 0.00)
(sat.stats    525   9790   50   204/204   461/241  64       0    19.44   0.17)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6077 :time 0.00)
lshr: (lshr[35] (bv2int %0) (mod (bv2int %0) 35)) 98 := 98 >>l 28
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 0 := 0&256
lshr: (lshr[64] (bv2int %0) (mod (+ #58 #638) 64)) 63 := 63 >>l 28
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 6652 :time 0.00)
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 80 := 127&256
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 79 := 127&256
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 46 := 127&256
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 96 := 127&256
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 64 := 127&256
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 4 := 127&256
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 8 := 127&256
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 0 := 126&256
band: (band[35] (if (= #509 63) 36893488147419103232 (if #511 18446744073709551616 #635)) (lshr[64] (bv2int %0) (mod #639 64))) 81 := 256&126
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 0 := 126&256
band: (band[35] (if (= #509 63) 36893488147419103232 (if #511 18446744073709551616 #635)) (lshr[64] (bv2int %0) (mod #639 64))) 52 := 256&126
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 0 := 98&256
band: (band[35] (if (= #509 63) 36893488147419103232 (if #511 18446744073709551616 #635)) (lshr[64] (bv2int %0) (mod #639 64))) 2 := 256&98
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 0 := 50&256
band: (band[35] (if (= #509 63) 36893488147419103232 (if #511 18446744073709551616 #635)) (lshr[64] (bv2int %0) (mod #639 64))) 24 := 256&50
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 0 := 50&256
band: (band[35] (if (= #509 63) 36893488147419103232 (if #511 18446744073709551616 #635)) (lshr[64] (bv2int %0) (mod #639 64))) 48 := 256&50
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 0 := 50&256
band: (band[35] (if (= #509 63) 36893488147419103232 (if #511 18446744073709551616 #635)) (lshr[64] (bv2int %0) (mod #639 64))) 32 := 256&50
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 0 := 99&256
band: (band[35] (if (= #509 63) 36893488147419103232 (if #511 18446744073709551616 #635)) (lshr[64] (bv2int %0) (mod #639 64))) 64 := 256&99
 (sat-cleaner :elim-literals 60 :elim-clauses 143 :cost 10041 :time 0.00)
(sat.stats    898  31464   84  1657/1655   646/295 171       0    20.69   0.44)
 (sat-cleaner :elim-literals 23 :elim-clauses 69 :cost 9387 :time 0.00)
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 7063 :time 0.00)
(sat.stats   1065  48383  103  2243/2241   747/351 177       0    20.98   0.55)
 (sat-cleaner :elim-literals 52 :elim-clauses 1 :cost 7648 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7981 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 9713 :time 0.00)
(sat.stats   1597  74481  136  3447/3445  1285/606 198       0    21.40   0.81)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 12805 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 13517 :time 0.00)
ramon: poll                 wall=1.000s usage=0.995s mem=22764KiB load=1.00 rootload=0.98
lshr: (lshr[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738367 := 13420708917 >>l 7
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 2939136 := 103767244&536870912
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 10703104 := 102871039&536870912
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 2910848 := 102760739&536870912
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 12373632 := 102760867&536870912
band: (band[35] (lshr[35] (bv2int %0) (mod #58 35)) (if (= #426 34) 34359738368 (if #428 17179869184 #494))) 512 := 102760703&536870912
ramon: poll                 wall=2.000s usage=1.995s mem=27956KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.995s mem=31744KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.995s mem=34884KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.994s mem=37348KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.994s mem=47944KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.003s usage=6.997s mem=50832KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.994s mem=52660KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.994s mem=54240KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.994s mem=55864KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.993s mem=57260KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.993s mem=59216KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.993s mem=60444KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.993s mem=62040KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.992s mem=62640KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.992s mem=63300KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.992s mem=80956KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.992s mem=82808KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.992s mem=83100KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.992s mem=83924KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:53:56 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.004s
ramon: group.utime          19.948s
ramon: group.stime          0.056s
ramon: group.mempeak        97604KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.012s
ramon: loadavg              1.00
