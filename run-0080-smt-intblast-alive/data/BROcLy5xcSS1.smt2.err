ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:49:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28503 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/BROcLy5xcSS1.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4110358
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   5001    678  1248/1110/111     109/10     4   18   19.18)
(smt.stats    1    202   7793   2541  1966/1730/112     208/21     5   21   19.38)
(smt.stats    2    313  10707   5709  2015/1810/112     322/21     5   21   19.57)
(smt.stats    3    414  11600   6226  2238/2035/114     430/41     6   22   19.57)
(smt.stats    4    525  12803   8390  2559/2324/122     463/47    10   75   19.66)
(smt.stats    5    647  15130  10392  2639/2399/130     575/50    12   98   19.76)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748  17408  12323  2669/2420/133     668/54    14  100   19.88)
(smt.stats    7    859  19587  15370  2679/2436/133     781/54    14  100   19.88)
(smt.stats    8    981  21730  18817  2709/2456/133     912/56    14  100   19.88)
(smt.stats    9   1115  23130  23578  2719/2471/133    1054/58    14  100   19.98)
ramon: poll                 wall=1.000s usage=0.942s mem=21084KiB load=0.94 rootload=0.94
(smt.stats   10   1216  24242  26727  2724/2480/133    1153/58    14  100   19.98)
(smt.stats   11   1327  25411  29512  2727/2483/133    1262/58    14  100   20.08)
(smt.stats   12   1449  27092  33163  2730/2486/133    1392/58    14  100   20.08)
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 4503599627370496&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #808 #812) 64)) 9007199254740993 := 0 << 52
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 4503599627370496&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #808 #812) 64)) 9007199254740993 := 0 << 52
(smt.stats   13   1590  28744  37755  2772/2520/141    1527/87    15  101   20.17)
(smt.stats   14   1737  31850  40638  2841/2544/141    1665/89    16  117   20.27)
(smt.stats   15   1838  34645  44273  2869/2611/143    1771/95    17  118   20.27)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   16   1949  37279  48001  2880/2627/143    1889/100    18  124   20.50)
(smt.stats   17   2071  38058  52157  2888/2629/143    2027/100    18  124   20.50)
(smt.stats   18   2205  40063  58382  2889/2636/143    2182/100    18  124   20.50)
(smt.stats   19   2352  41646  63057  2900/2647/145    2331/126    19  136   20.50)
ramon: poll                 wall=2.000s usage=1.942s mem=21696KiB load=1.00 rootload=1.00
(smt.stats   20   2513  43314  65564  2967/2653/145    2517/126    19  136   20.59)
(smt.stats   21   2614  44105  67982  3121/2751/145    2651/127    19  136   20.69)
(smt.stats   22   2725  45624  70390  3146/2880/145    2767/127    19  136   20.69)
ramon: poll                 wall=3.000s usage=2.941s mem=21936KiB load=1.00 rootload=1.00
(smt.stats   23   2847  47443  74942  3276/2911/145    2936/128    19  136   20.79)
(smt.stats   24   2981  49943  78214  3304/3030/145    3094/128    19  136   20.79)
(smt.stats   25   3128  52990  84428  3313/3054/145    3261/128    19  136   21.00)
(smt.stats   26   3289  55583  91211  3376/3060/145    3440/129    19  136   21.00)
(smt.stats   27   3466  57829  94063  3510/3142/145    3634/131    19  136   21.10)
(smt.stats   28   3567  59488  96711  3549/3282/145    3781/131    19  136   21.19)
(smt.stats   29   3678  60525  99372  3613/3298/145    3900/131    19  136   21.19)
ramon: poll                 wall=4.000s usage=3.941s mem=22460KiB load=1.00 rootload=1.00
(smt.stats   30   3800  61911 102690  3652/3379/145    4074/132    19  136   21.19)
(smt.stats   31   3934  63110 105819  3739/3401/145    4217/134    19  136   21.29)
(smt.stats   32   4081  64692 110136  3790/3508/145    4370/134    19  136   21.39)
(smt.stats   33   4242  66938 115076  3890/3557/146    4533/192    20  141   21.39)
(smt.stats   34   4419  69172 119461  4024/3653/146    4719/192    20  141   21.50)
(smt.stats   35   4613  70904 125495  4037/3781/146    4926/192    20  141   21.91)
ramon: poll                 wall=5.000s usage=4.941s mem=23200KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   36   4714  71818 127891  4051/3786/146    5030/192    20  141   22.00)
(smt.stats   37   4825  73176 131902  4064/3810/146    5142/192    20  141   22.00)
(smt.stats   38   4947  74709 136609  4103/3810/146    5270/192    20  141   22.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 9)
(smt.stats   39   5081  77499 140848  4138/3869/146    5424/193    20  141   22.10)
(smt.stats   40   5228  79430 143741  4189/3892/146    5586/193    20  141   22.20)
(smt.stats   41   5389  80976 148937  4273/3973/146    5765/193    20  141   22.29)
ramon: poll                 wall=6.004s usage=5.944s mem=23616KiB load=1.00 rootload=1.01
(smt.stats   42   5566  82531 158366  4332/4030/146    5969/193    20  141   22.29)
(smt.stats   43   5760  85368 165488  4409/4088/146    6181/194    20  141   22.39)
(smt.stats   44   5973  86892 169122  4675/4181/146    6444/203    20  141   22.48)
ramon: poll                 wall=7.000s usage=6.940s mem=23820KiB load=1.00 rootload=0.99
(smt.stats   45   6074  87658 173590  4749/4464/146    6559/205    20  141   22.48)
(smt.stats   46   6185  88427 178018  4771/4509/146    6695/205    20  141   22.48)
(smt.stats   47   6307  89060 184426  4889/4635/147    6833/247    21  142   22.58)
(smt.stats   48   6441  89895 190135  5006/4637/147    6983/250    21  142   22.73)
(smt.stats   49   6588  91449 195592  5028/4762/147    7134/250    21  142   22.73)
(smt.stats   50   6749  93008 204356  5053/4792/147    7308/250    21  142   22.82)
ramon: poll                 wall=8.000s usage=7.940s mem=24184KiB load=1.00 rootload=1.00
(smt.stats   51   6926  94304 207547  5250/4833/147    7504/252    21  142   23.59)
(smt.stats   52   7120  96095 213246  5310/5055/147    7694/252    21  142   23.69)
(smt.stats   53   7333  98294 222567  5329/5059/147    7917/253    21  142   23.78)
(smt.stats   54   7567 101183 231276  5377/5082/147    8222/254    21  142   23.97)
ramon: poll                 wall=9.000s usage=8.939s mem=25428KiB load=1.00 rootload=1.00
(smt.stats   55   7668 101957 232760  5531/5210/147    8334/254    21  142   23.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   56   7779 102936 234921  5618/5328/147    8466/255    21  142   23.97)
(smt.stats   57   7901 105895 244244  5649/5389/147    8620/255    21  142   24.07)
(smt.stats   58   8035 108502 253402  5665/5407/147    8834/255    21  142   24.07)
(smt.stats   59   8182 111557 263577  5693/5413/147    9054/255    21  142   24.07)
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1 := 1&4026
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 1&4026
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #117))) 2147483213 := 2013 << 1
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1 := 1&4026
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 1&4026
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #117))) 2147483213 := 2013 << 1
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 1&4026
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #117))) 2147483213 := 2013 << 1
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 1&4026
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #117))) 2147483213 := 2013 << 1
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1 := 1&4026
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1 := 1&4026
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 1&4026
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 1 := 1&4026
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 1&4026
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 1 := 1&4026
(smt.stats   60   8343 114221 269883  5778/5496/169    9313/404    22  145   24.27)
(smt.stats   61   8520 116277 273438  5846/5547/174    9514/407    22  145   24.27)
ramon: poll                 wall=10.000s usage=9.939s mem=25776KiB load=1.00 rootload=1.00
(smt.stats   62   8714 120417 281382  5873/5606/174    9708/407    22  145   24.36)
(smt.stats   63   8927 125203 292057  5878/5614/174   10097/415    23  149   24.46)
(smt.stats   64   9161 128255 295570  5892/5622/174   10336/415    23  149   24.55)
(smt.stats   65   9418 138021 310289  5902/5642/174   10593/415    23  149   24.55)
(smt.stats   66   9519 140308 315219  5903/5642/174   10694/415    23  149   24.55)
(smt.stats   67   9630 145879 326490  5906/5646/174   10806/415    23  149   24.66)
(smt.stats   68   9752 153733 340960  5906/5646/174   10929/415    23  149   24.66)
(smt.stats   69   9886 161872 356120  5906/5646/174   11063/415    23  149   24.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 338)
(smt.stats   70  10033 169111 371824  5906/5646/174   10872/415    23  149   24.66)
(smt.stats   71  10194 181931 387631  5906/5646/174   11033/415    23  149   24.66)
(smt.stats   72  10371 196673 405499  5906/5646/174   11213/415    23  149   24.66)
(smt.stats   73  10565 204361 414629  5926/5654/175   11405/587    24  151   24.76)
(smt.stats   74  10778 207463 420990  5950/5687/175   11626/587    24  151   24.76)
(smt.stats   75  11012 211103 429040  5962/5696/175   11884/588    24  151   24.76)
ramon: poll                 wall=11.000s usage=10.939s mem=26392KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   76  11269 213759 435101  5967/5706/175   12154/588    24  151   24.85)
(smt.stats   77  11551 216180 443632  5973/5713/175   12486/588    24  151   24.95)
(smt.stats   78  11652 217124 447666  5973/5713/175   12591/588    24  151   24.95)
(smt.stats   79  11763 218777 454532  5977/5713/175   12702/588    24  151   24.95)
(smt.stats   80  11885 220582 460139  5991/5721/175   12824/588    24  151   24.95)
(smt.stats   81  12019 221398 465188  6005/5745/175   12963/588    24  151   25.04)
(smt.stats   82  12166 222560 470460  6008/5748/177   13109/595    25  153   25.04)
(smt.stats   83  12327 223435 475955  6012/5752/177   13383/595    25  153   25.04)
(smt.stats   84  12504 224333 483039  6014/5754/179   13680/852    26  165   25.04)
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&2147483227
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #808 #812) 64)) 2147483227 := 2 << 51
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #808 #812) 64)) 3 := 2 << 51
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 4294967102 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 4294967100 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 4294967096 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 4294967088 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 4294967072 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 4294967040 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 64 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 128 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1024 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1536 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1536 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1296 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1280 := 2251799813685248&4294967103
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4294967103
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #808 #812) 64)) 4294967103 := 2 << 51
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #117))) 9007199254740991 := 1 << 52
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #117))) 4503599627370499 := 1 << 52
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 2112 := 2251799813685248&4503599627370496
(smt.stats   85  12698 225487 485972  6257/5756/180   13986/867    26  165   25.43)
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1664 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1536 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 1536 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #117))) 4503599627370498 := 1 << 52
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #117))) 9007199254740990 := 1 << 52
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #117))) 4503599627370497 := 1 << 52
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 32 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 2048 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 2048 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 5120 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 4096 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 4096 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 4096 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 2251799813685248 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 2251799813685246 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 2251799813685244 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 8 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 16 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 32 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 64 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 128 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 256 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 512 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 1024 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 2048 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 4096 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 8192 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 16384 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 32768 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 65536 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 131072 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 262144 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 524288 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 1048576 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 2097152 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 4194304 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 8388608 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 16777216 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 33554432 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 67108864 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 16777216 := 2251799813685248&4503599627370496
band: (band[53] (if (= #401 63) 1 (if #607 2 #801)) (shl[64] (* 2 #115) (mod #816 64))) 0 := 2251799813685248&4503599627370496
band: (band[53] (if (= #121 52) 1 (if #627 2 #729)) (shl[53] (bv2int %0) (+ 53 #732))) 33554432 := 2251799813685248&4503599627370496
(smt.stats   86  12911 226677 490101  6726/6105/260   14460/878    26  165   26.55)
ramon: poll                 wall=12.000s usage=11.938s mem=28212KiB load=1.00 rootload=0.99
(smt.stats   87  13145 236362 519396  6928/6666/446   15043/1290    27  259   26.55)
ramon: poll                 wall=13.000s usage=12.938s mem=28232KiB load=1.00 rootload=1.00
(smt.stats   88  13402 244662 542663  7103/6686/446   15541/1295    27  259   26.55)
ramon: poll                 wall=14.000s usage=13.938s mem=28276KiB load=1.00 rootload=1.00
(smt.stats   89  13684 250743 563852  7445/6984/448   16374/1466    28  263   26.74)
ramon: poll                 wall=15.000s usage=14.937s mem=28484KiB load=1.00 rootload=1.00
(smt.stats   90  13994 260165 614996  7633/7337/449   17022/1909    29  264   27.12)
(smt.stats   91  14095 263505 629789  7764/7428/450   17194/1909    29  264   27.22)
ramon: poll                 wall=16.000s usage=15.937s mem=29112KiB load=1.00 rootload=1.00
(smt.stats   92  14206 266533 652567  7833/7476/450   17339/1909    29  264   27.22)
(smt.stats   93  14328 270744 687913  7868/7535/450   17467/1966    30  264   27.32)
(smt.stats   94  14462 274274 709761  7970/7662/451   18062/1967    30  264   27.42)
(smt.stats   95  14609 280961 728968  7982/7674/451   18248/2390    31  267   27.56)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   96  14770 286213 753105  8009/7698/451   18600/2390    31  267   27.76)
ramon: poll                 wall=17.000s usage=16.936s mem=29496KiB load=1.00 rootload=1.00
(smt.stats   97  14947 289278 768047  8030/7722/452   18863/2526    32  273   28.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15141 294872 790693  8110/7784/461   19150/2526    32  273   28.14)
(smt.stats   99  15354 299643 809678  8142/7800/461   19386/2526    32  273   28.14)
ramon: poll                 wall=18.000s usage=17.936s mem=30088KiB load=1.00 rootload=1.00
(smt.stats  100  15588 305982 840381  8158/7837/463   19891/2588    33  297   28.33)
(smt.stats  101  15845 324526 896641  8174/7851/466   20750/2856    34  316   29.92)
(smt.stats  102  16127 341274 935812  8178/7853/466   21263/2856    34  316   30.03)
(smt.stats  103  16437 353734 972463  8241/7871/466   21796/2859    34  316   30.12)
ramon: poll                 wall=19.000s usage=18.936s mem=32036KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  104  16777 366183 1017637  8307/7931/466   22162/2859    34  316   30.22)
(smt.stats  105  16878 370391 1038606  8339/8003/466   22282/2860    34  316   30.32)
(smt.stats  106  16989 374103 1066710  8367/8016/467   22428/3177    35  318   30.32)
(smt.stats  107  17111 378557 1090295  8375/8048/467   22616/3177    35  318   30.32)
ramon: poll                 wall=20.000s usage=19.936s mem=32296KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:49:22 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.997s
ramon: group.utime          19.977s
ramon: group.stime          0.020s
ramon: group.mempeak        33416KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.00
