ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:20:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27166 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1372
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zAnSoIYuXLBt.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             969692
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   113.636     10000        49          0            1        2)
(smt.stats    0    101   5153   1168  1214/1094/96     100/8     4   14   51.95)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 2&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 2&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 5&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 5&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 6&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 8&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 2&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 4&59
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 58&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 57&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 58&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 56&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 48&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 47&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 58&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 58&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 57&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 5&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 4&59
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 5&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 56&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 48&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 1&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 1&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 1&59
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 1 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7612 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7612 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7612 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 4 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 8 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 16 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 32 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 48 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 32 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 32 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7551 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 1 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 4 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 56 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 48 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 16 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 32 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 11 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 10 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 8 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 16 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 16 := 7552&59
(sat.ddfw       1      1   52.9153     20001        98          1            1        3)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 16 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 12 := 7552&59
(smt.stats    1    203   8114   2637  1898/1715/222     202/22     8   43   52.54)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 1 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 32 := 7552&59
(smt.stats    2    314  10924   7626  2151/1928/235     319/44     9   47   52.89)
(smt.stats    3    415  12367   9698  2335/2099/236     421/49    11   51   53.20)
(smt.stats    4    526  14690  12759  2583/2242/243     527/66    12   54   53.29)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370496 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370496 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370496 := 54 << 2
(sat.ddfw       1      1        50     40001       196          2            1        5)
(smt.stats    5    648  20468  18166  2674/2396/244     661/77    13   71   53.40)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 1&1
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370497 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370497 := 54 << 2
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  23664  22948  2706/2436/250     808/92    15   75   53.50)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 216&1
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 216&1
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7737 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 216&1
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 191 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 216&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 1 := 216&1
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 216&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 1 := 216&1
(smt.stats    7    860  26003  27209  2750/2471/259    1000/105    17   82   53.59)
(smt.stats    8    982  27347  31631  2915/2602/266    1291/130    18   86   53.98)
(sat.ddfw       1      1   42.0168     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.914s mem=56936KiB load=0.91 rootload=0.90
(sat.ddfw       1      1   35.3357    110001       539          4            1       12)
(smt.stats    9   1116  31384  38725  3003/2684/275    1672/201    21  142   54.48)
(smt.stats   10   1217  34320  44041  3062/2691/279    1914/204    21  142   54.48)
(sat.ddfw       1      1    30.138    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.919s mem=57020KiB load=1.00 rootload=1.00
(smt.stats   11   1328  37246  50188  3200/2755/279    2199/220    22  142   54.67)
(sat.ddfw       1      1   26.2586    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  40640  58271  3284/2895/279    2666/222    22  142   54.67)
ramon: poll                 wall=3.000s usage=2.920s mem=57332KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.2713    290001      1421          7            1       30)
(smt.stats   13   1584  44594  69759  3331/2979/288    3061/285    23  166   54.91)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 57 := 84464859918669&129752682729412
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 56 := 84464859918698&129752682729412
(smt.stats   14   1731  50324  84503  3450/3019/290    3534/332    24  167   55.10)
(sat.ddfw       1      1   20.8062    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.920s mem=57456KiB load=1.00 rootload=1.00
(smt.stats   15   1832  52604  92672  3532/3143/290    3794/388    25  168   55.10)
(smt.stats   16   1943  54399  98164  3651/3263/291    4096/397    26  168   55.21)
(sat.ddfw       1      1   18.9474    460001      2254          9            1       47)
(smt.stats   17   2065  58360 108411  3716/3353/292    4566/474    27  168   55.30)
ramon: poll                 wall=5.000s usage=4.966s mem=57724KiB load=1.05 rootload=1.05
(smt.stats   18   2199  63646 120401  3893/3409/292    4897/476    27  168   55.45)
(sat.ddfw       1      1   17.4978    560001      2745         10            1       57)
(smt.stats   19   2346  68510 137363  4054/3591/292    5250/476    27  168   55.64)
ramon: poll                 wall=6.000s usage=5.967s mem=58016KiB load=1.00 rootload=1.00
(smt.stats   20   2507  72537 153828  4192/3785/292    5892/476    27  168   55.74)
(smt.stats   21   2608  77307 165593  4239/3884/292    6353/476    27  168   55.74)
(smt.stats   22   2719  82208 175840  4397/3931/292    6690/485    27  168   55.86)
(sat.ddfw       1      1   16.0514    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.967s mem=58284KiB load=1.00 rootload=1.00
(smt.stats   23   2841  87443 188812  4513/4108/292    7064/489    27  168   55.95)
(smt.stats   24   2975  90348 196260  4614/4294/293    7647/634    28  170   56.05)
(smt.stats   25   3122  93923 209340  4700/4357/294    8177/635    28  170   56.37)
ramon: poll                 wall=8.000s usage=7.966s mem=58748KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.8221    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.969s mem=58840KiB load=1.00 rootload=1.00
(smt.stats   26   3283  99049 222142  4960/4505/295    8534/717    29  171   56.56)
(sat.ddfw       1      1   13.7697    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.967s mem=59036KiB load=1.00 rootload=1.00
(smt.stats   27   3460 102366 232280  5199/4667/295    9101/726    29  171   56.66)
(smt.stats   28   3561 105776 244807  5245/4892/295    9783/750    30  173   56.75)
(smt.stats   29   3672 108719 254613  5373/5000/296   10480/750    30  173   56.85)
(sat.ddfw       1      1   12.8558   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.970s mem=59104KiB load=1.00 rootload=1.00
(smt.stats   30   3794 112209 272453  5526/5060/296   10997/884    31  175   56.94)
(smt.stats   31   3928 115458 287821  5704/5244/296   11781/887    31  175   57.04)
ramon: poll                 wall=12.000s usage=11.970s mem=59484KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   32   4075 118716 298554  5861/5395/296   12262/890    31  175   57.14)
(sat.ddfw       1      1   12.0647   1210001      5931         15            1      123)
(smt.stats   33   4236 123091 322970  6103/5574/297   13270/924    32  177   57.46)
ramon: poll                 wall=13.000s usage=13.007s mem=59916KiB load=1.04 rootload=1.04
(smt.stats   34   4413 128150 349224  6350/5788/297   13862/927    32  177   57.55)
ramon: poll                 wall=14.000s usage=14.011s mem=60036KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.3347   1370001      6715         16            1      139)
(smt.stats   35   4607 132448 372673  6593/6049/299   14864/942    33  181   57.65)
(smt.stats   36   4708 135664 403223  6768/6277/299   15461/946    33  181   57.74)
ramon: poll                 wall=15.000s usage=15.007s mem=60116KiB load=1.00 rootload=1.00
(smt.stats   37   4819 138885 436570  6932/6460/299   15865/1054    34  183   58.09)
(smt.stats   38   4941 141243 460891  7089/6623/299   16541/1056    34  183   58.18)
(smt.delete-inactive-clauses  :num-deleted-clauses 3617)
(sat.ddfw       1      1   10.6925   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=16.009s mem=60652KiB load=1.00 rootload=1.00
(smt.stats   39   5075 144115 477712  7161/6792/299   14851/1057    34  183   58.28)
(smt.stats   40   5222 149304 503719  7244/6864/299   15847/1064    34  183   58.47)
ramon: poll                 wall=17.000s usage=17.010s mem=60604KiB load=1.00 rootload=1.00
(smt.stats   41   5383 154498 519853  7490/6926/299   16316/1072    34  183   58.56)
(sat.ddfw       1      1   10.1237   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=18.010s mem=60800KiB load=1.00 rootload=1.00
(smt.stats   42   5560 160646 552340  7632/7255/301   18232/1379    35  185   58.75)
ramon: poll                 wall=19.000s usage=19.011s mem=60980KiB load=1.00 rootload=1.00
(smt.stats   43   5754 173400 612934  7945/7331/302   18921/1868    36  197   58.85)
(sat.ddfw       1      1   9.61198   1910001      9362         19            1      193)
ramon: poll                 wall=20.000s usage=20.006s mem=61176KiB load=0.99 rootload=1.00
ramon: end                  Fri Nov  1 23:20:39 2024
ramon: root.execname        z3
ramon: root.utime           20.080s
ramon: root.stime           0.010s
ramon: group.total          20.103s
ramon: group.utime          20.087s
ramon: group.stime          0.016s
ramon: group.mempeak        61440KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.096s
ramon: loadavg              1.00
