ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:53:43 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42150 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1258
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FhJadvzPAZWh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2877426
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5386    996  1230/1110/90      97/4     3   13   19.05)
(smt.stats    1    202   7839   2044  1872/1687/96     176/8     6   20   19.25)
(smt.stats    2    313  10315   4271  1999/1769/98     286/16     8   20   19.35)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8191&18014398509481915
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8191&18014398509481915
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8191 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8188 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33 := 8191&8221
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 9 := 8191&8275
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8191&8329
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8191&8329
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&8545
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&8545
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&9409
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&11137
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 8191&9409
(smt.stats    3    414  11333   5489  2112/1834/146     388/25    10   40   19.74)
(smt.stats    4    526  11671   8686  2471/2236/186     485/108    12   50   19.86)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 18014398509482112 := 61 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 18014398509482112 := 61 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&128
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 18014398509482112 := 61 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 127&64
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 64 := 127&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797018964032 := 61 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 64 := 127&7808
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 8 := 127&14720
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 4 := 127&49280
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2 := 127&49280
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 385 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 126 := 439 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 127 := 385 << 7
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 127 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 126 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 124 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 16 := 49280&127
(smt.stats    5    648  13638  11567  2608/2318/219     665/148    14   58   20.25)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 32 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 64 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 32 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 64 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&49280
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 32 := 49280&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 32 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 27 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 26 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 24 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 16 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 11 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 10 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 1 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 2 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 2 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 2 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&56192
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 8 := 56192&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&146048
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 4 := 146048&127
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 127&152960
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 4 := 152960&127
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  16181  17388  2650/2410/286     770/194    16   78   20.34)
(smt.stats    7    860  17975  19660  2750/2411/286     951/195    16   78   20.53)
(smt.stats    8    982  19789  23704  2805/2550/292    1112/253    18   87   20.63)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 1&140737488356737
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 140737488356737 := 140737488356737 << 1
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 1&281474976713473
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 281474976713473 := 281474976713473 << 1
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 1&140737488356737
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 140737488356737 := 140737488356737 << 1
(smt.stats    9   1116  25054  31266  2859/2576/307    1183/236    19  154   20.73)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1 := 1&140737488356737
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 140737488356737 := 140737488356737 << 1
(smt.stats   10   1217  26514  33971  3059/2679/309    1329/237    19  154   21.11)
(smt.stats   11   1328  29622  40165  3137/2844/309    1477/255    20  157   21.11)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 1&2
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 1 << 1
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 1&2
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 1 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  32087  47621  3164/2909/319    1677/279    22  173   21.21)
(smt.stats   13   1584  38907  56098  3219/2954/320    1874/279    22  173   21.31)
(smt.stats   14   1731  44116  65115  3250/2959/320    2116/320    23  176   21.31)
(smt.stats   15   1832  46690  70652  3441/3009/320    2297/322    23  176   21.31)
ramon: poll                 wall=1.000s usage=0.999s mem=22540KiB load=1.00 rootload=0.98
(smt.stats   16   1943  50224  80828  3509/3244/323    2657/398    24  187   21.42)
(smt.stats   17   2065  54840  92457  3512/3247/324    2854/504    25  199   21.42)
(smt.stats   18   2199  60744 105846  3591/3262/325    3099/551    26  201   21.52)
(smt.stats   19   2346  66730 120963  3616/3349/326    3252/573    27  202   21.52)
(smt.stats   20   2507  71839 135423  3634/3365/330    3472/601    28  211   21.52)
(smt.stats   21   2608  76227 147389  3697/3394/331    3617/600    29  235   21.61)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423940864
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423940864
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423942656
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423942656
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423942656
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423941120
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423941120
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423941120
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 8589934591&9008307423941632
(smt.stats   22   2719  78183 156873  3862/3537/362    4123/608    30  241   21.81)
(smt.stats   23   2841  81561 176956  4070/3607/382    4508/614    30  241   21.94)
(smt.stats   24   2975  85458 192318  4168/3897/383    4956/790    32  246   22.04)
(smt.stats   25   3122  88659 203270  4361/3921/383    5259/792    32  246   22.04)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16 := 9007199254740991&49344
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 256 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 320 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 576 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1088 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1088 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 320 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 576 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2112 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2112 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 3136 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 5184 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 9280 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17472 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16448 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17472 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33856 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33856 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 33856 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25824 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 25664 := 9007199254740991&50240
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50368
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 50240 := 9007199254740991&50240
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 36028797019014208 := 9007199254741031 << 53
(smt.stats   26   3283  92820 218878  4637/4102/383    5658/814    32  246   22.61)
ramon: poll                 wall=2.000s usage=1.999s mem=23956KiB load=1.00 rootload=1.00
(smt.stats   27   3460  96952 230240  4749/4480/464    6348/932    33  262   22.90)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3561 101017 241696  4778/4509/464    6585/1144    34  264   23.00)
(smt.stats   29   3672 104310 255567  4905/4513/464    6887/1145    34  264   23.09)
(smt.stats   30   3794 108542 270332  5036/4645/464    7448/1147    34  264   23.19)
(smt.stats   31   3928 113734 290160  5124/4776/464    8078/1155    34  264   23.28)
ramon: poll                 wall=3.000s usage=2.999s mem=24840KiB load=1.00 rootload=1.00
(smt.stats   32   4075 120075 312280  5237/4929/464    8707/1155    34  264   23.49)
(smt.stats   33   4237 126576 342625  5278/5009/465    9087/1777    35  265   23.58)
(smt.stats   34   4414 130921 360486  5392/5123/470    9636/1787    35  265   23.68)
(smt.stats   35   4608 138587 397713  5421/5145/472   10191/2039    37  281   23.68)
(smt.stats   36   4709 143288 421450  5451/5174/472   10512/2039    37  281   23.68)
(smt.stats   37   4820 146117 435461  5465/5187/472   10864/2039    37  281   23.77)
(smt.stats   38   4942 149838 450720  5470/5192/472   11287/2039    37  281   23.80)
(smt.delete-inactive-clauses  :num-deleted-clauses 151)
(smt.stats   39   5076 154464 462779  5516/5196/472   11535/2040    37  281   23.99)
ramon: poll                 wall=4.000s usage=3.970s mem=25300KiB load=0.97 rootload=0.96
(smt.stats   40   5223 158769 483230  5626/5318/473   11991/2259    38  287   23.99)
(smt.stats   41   5384 165190 523291  5661/5359/475   12636/2263    38  287   24.19)
(smt.stats   42   5561 169740 545907  5817/5506/477   12968/2328    39  299   24.28)
(smt.stats   43   5755 179530 582221  5960/5642/479   13573/2404    40  319   24.47)
(smt.stats   44   5968 186485 600740  5982/5664/480   14084/2404    40  319   24.47)
ramon: poll                 wall=5.000s usage=4.969s mem=25864KiB load=1.00 rootload=1.00
(smt.stats   45   6069 189164 610699  5989/5671/481   14398/2430    41  324   24.47)
(smt.stats   46   6180 192780 629517  6003/5685/482   14727/2430    41  324   24.59)
(smt.stats   47   6302 196498 648750  6022/5703/483   14917/2531    42  345   24.81)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 17179869183&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 180143985094819840 := 9007199254741012 << 34
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 17179869183&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 180143985094819840 := 9007199254741012 << 34
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 17179869183&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 198158383604301824 := 9007199254741012 << 34
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 17179869183&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #945) 64)) 198158383604301824 := 9007199254741012 << 34
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6436 201133 682039  6051/5731/492   15246/2549    43  365   24.81)
(smt.stats   49   6583 208934 701662  6055/5733/492   15549/2551    43  365   24.81)
(smt.stats   50   6744 215288 726695  6199/5739/492   16060/2556    43  365   24.90)
ramon: poll                 wall=6.000s usage=5.969s mem=26408KiB load=1.00 rootload=1.00
(smt.stats   51   6921 221168 754329  6394/5912/492   16699/2606    44  389   25.00)
(smt.stats   52   7115 224891 768701  6417/6097/492   17435/2606    44  389   25.09)
(smt.stats   53   7328 233202 805414  6455/6129/495   18202/2669    45  391   25.28)
(smt.stats   54   7562 241343 831450  6520/6141/495   19390/2674    45  391   25.57)
ramon: poll                 wall=7.000s usage=6.969s mem=27088KiB load=1.00 rootload=1.00
(smt.stats   55   7663 244276 843135  6660/6225/495   19675/2840    46  396   25.57)
(smt.stats   56   7774 246530 852851  6834/6375/495   19953/2844    46  396   25.67)
(smt.stats   57   7896 249247 869064  7233/6657/495   20330/2847    46  396   25.77)
(smt.stats   58   8030 252066 883975  7261/6928/496   21478/2962    47  398   25.87)
(smt.stats   59   8177 255069 890696  7309/6948/496   21804/2965    47  398   26.06)
ramon: poll                 wall=8.002s usage=7.970s mem=27468KiB load=1.00 rootload=1.00
(smt.stats   60   8338 258573 903543  7484/7091/497   22320/2970    47  398   26.15)
(smt.stats   61   8515 264862 962087  7573/7237/497   22764/2971    47  398   26.32)
(smt.stats   62   8709 268419 976984  7928/7248/497   23256/3370    48  401   26.51)
ramon: poll                 wall=9.000s usage=8.968s mem=28064KiB load=1.00 rootload=1.00
(smt.stats   63   8922 273031 996927  8362/7625/498   23965/3374    48  401   26.88)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9156 281971 1048008  8632/8114/500   24980/3636    49  422   26.97)
ramon: poll                 wall=10.000s usage=9.968s mem=28544KiB load=1.00 rootload=1.00
(smt.stats   65   9413 288575 1090482  9198/8309/500   25906/3638    49  422   27.16)
(smt.stats   66   9514 292036 1105871  9228/8901/500   26534/3638    49  422   27.26)
(smt.stats   67   9625 296258 1116075  9322/8907/500   26777/3641    49  422   27.26)
ramon: poll                 wall=11.000s usage=10.968s mem=29228KiB load=1.00 rootload=1.00
(smt.stats   68   9747 299790 1131149  9424/9053/500   27073/3643    49  422   27.45)
(smt.stats   69   9881 303014 1139173  9520/9147/500   27992/3646    49  422   27.64)
(smt.delete-inactive-clauses  :num-deleted-clauses 65)
(smt.stats   70  10028 306892 1167232  9577/9241/500   28664/3646    49  422   27.64)
(smt.stats   71  10189 310523 1184606  9755/9260/500   29654/3648    49  422   27.89)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 16 := 18014398509481955 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 24 := 18014398509481955 << 53
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 24 := 18014398509481955 << 53
(smt.stats   72  10366 314139 1213129  9941/9495/500   30379/3650    49  422   28.08)
ramon: poll                 wall=12.000s usage=11.968s mem=29792KiB load=1.00 rootload=1.00
(smt.stats   73  10560 317656 1236609 10008/9634/505   31249/4212    50  423   28.27)
(smt.stats   74  10773 322732 1263083 10180/9691/505   32025/4212    50  423   28.37)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32896 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32768 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 32768 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 20480 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 16384 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 512 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 128 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 128 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2048 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 33536 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 33792 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 34816 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 36864 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 40960 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 49152 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 36864 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 40960 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 49152 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 65536 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 65536 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 65536 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 65536 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 9007199254609920 := 9007199254740992&9007199254740991
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 0 := 9007199254740991&9007199254740992
band: (band[54] (shl[54] (bv2int %0) (mod #109 54)) (if (= #622 53) 1 (if #624 3 #774))) 9007199254609920 := 9007199254740992&9007199254740991
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   75  11007 324481 1275412 10559/10044/567   32419/4220    50  423   28.94)
(smt.stats   76  11264 326332 1285546 11604/10486/567   33052/4220    50  423   29.13)
ramon: poll                 wall=13.000s usage=12.967s mem=30740KiB load=1.00 rootload=1.00
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17592184209440 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17592184274944 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17592184340480 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17592184471552 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17592184995840 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17592186044416 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 35184372088832 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 70368744177664 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 70368744177664 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 140737488355328 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 281474976710656 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 562949953421312 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1125899906842624 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2251799813685248 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 4503599627370496 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1125899906842624 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 4503599627370496 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2181431069507584 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1125899906842624 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 1125899906842624 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 70368744177664 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 140737488355328 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 281474976710656 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 562949953421312 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 70368744177664 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 140737488355328 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 281474976710656 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 562949953421312 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 562949953421312 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 562949953421312 := 9007199254740991&9007199254740992
(smt.stats   77  11547 328459 1298793 12624/12253/618   34164/4436    51  448   29.85)
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 140737488355328 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 281474976710656 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 70368744177664 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 2251799813685248 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 35184372088832 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17592184406016 := 9007199254740991&9007199254740992
band: (band[54] (if (or #790 #791 #792 #793 #794 #795 #796 #797 #798 #799 #800) 0 (if #801 1 #905)) (shl[64] (bv2int %0) (mod #946 64))) 17592184340480 := 9007199254740991&9007199254740992
(smt.stats   78  11648 329945 1318167 12750/12388/682   34780/4441    51  448   30.05)
(smt.stats   79  11759 334869 1356907 12899/12494/682   35710/4445    51  448   29.95)
(smt.stats   80  11881 340740 1411837 12984/12611/682   36381/4447    51  448   30.36)
(smt.stats   81  12015 346552 1451674 13176/12774/693   38698/5465    52  469   30.76)
ramon: poll                 wall=14.000s usage=13.967s mem=32340KiB load=1.00 rootload=0.99
(smt.stats   82  12162 358302 1525036 13322/12783/693   40467/5473    52  469   31.04)
ramon: poll                 wall=15.000s usage=14.967s mem=32808KiB load=1.00 rootload=1.00
(smt.stats   83  12323 372301 1589298 13347/12924/693   41261/6759    53  564   31.24)
(smt.stats   84  12500 382091 1649118 13403/13001/704   43367/7046    54  567   31.72)
(smt.stats   85  12694 400022 1720794 13507/13005/704   44373/7053    54  567   31.82)
ramon: poll                 wall=16.000s usage=15.967s mem=33572KiB load=1.00 rootload=1.00
(smt.stats   86  12907 413315 1820272 13761/13264/705   46195/7518    55  586   32.20)
ramon: poll                 wall=17.000s usage=16.966s mem=34092KiB load=1.00 rootload=1.00
(smt.stats   87  13141 431502 1893222 13779/13377/705   47231/7518    55  586   32.29)
ramon: poll                 wall=18.000s usage=17.966s mem=34548KiB load=1.00 rootload=1.00
(smt.stats   88  13398 443139 1952147 13839/13383/707   50448/7889    56  586   32.77)
(smt.stats   89  13680 452482 1995746 14035/13510/707   52463/7892    56  586   32.96)
ramon: poll                 wall=19.000s usage=18.966s mem=34848KiB load=1.00 rootload=1.00
(smt.stats   90  13990 462705 2045500 14202/13800/712   54694/8566    57  591   33.25)
(smt.stats   91  14091 468203 2061137 14207/13805/712   55165/8566    57  591   33.34)
(smt.stats   92  14202 474524 2135134 14220/13815/712   56994/8567    57  591   33.74)
ramon: poll                 wall=20.001s usage=19.967s mem=35872KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:54:03 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.974s
ramon: group.utime          19.946s
ramon: group.stime          0.028s
ramon: group.mempeak        36128KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
