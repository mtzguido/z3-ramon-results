ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:45:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29606 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1401
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9MsFg7SSm88P.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             285065
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   236/236     0/0  61       0    18.53   0.00)
(sat.stats    103    605    0   236/236   103/31  61       0    18.83   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    605    0   236/236   103/31  61       0    18.83   0.00)
(sat.stats    103    605    0   236/236   103/31  61       0    18.83   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 370818.83 :time 0.00)
(sat.stats    103    605    0   238/238    39/30  61       0    18.83   0.01)
(sat.stats    168   1682    1   238/238   104/83  61       0    18.93   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    171   1758    2   238/238   107/83  61       0    18.93   0.01)
(sat.stats    174   1827    3   238/238   110/83  61       0    18.93   0.01)
(sat.stats    177   1907    4   238/238   113/83  61       0    18.93   0.01)
(sat.stats    180   2002    5   238/238   116/83  61       0    18.93   0.01)
(sat.stats    183   2109    6   238/238   119/84  61       0    18.93   0.01)
(sat.stats    186   2146    7   238/238   122/87  61       0    18.93   0.01)
(sat.stats    189   2210    8   238/238   125/90  61       0    18.93   0.01)
(sat.stats    192   2309    9   238/238   128/93  61       0    18.93   0.01)
(sat.stats    195   2455   10   238/238   131/96  61       0    18.93   0.01)
(sat.stats    198   2629   11   238/238   134/99  61       0    18.93   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    201   2783   12   238/238   137/102  61       0    18.93   0.01)
(sat.stats    261   4346   13   240/240   197/134  61       0    19.12   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1491 :time 0.00)
(sat.stats    314   5507   20   242/242   250/167  67       0    19.42   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4949 :time 0.00)
(sat.stats    499   9646   49   359/359   436/199  70       0    19.70   0.13)
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #51))) 0 := 58 << 46
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 14841 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 36342 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 26180 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 20712 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #757 #761) 64)) 116 := 116 << 45
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 11 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 14366 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 59848 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 4 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 228608 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 35184372088832 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 10177024 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 16 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 32293888 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 49731584 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 66433024 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 27115520 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 8192 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 32768 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 1704591360 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 65536 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 8009809920 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 2365587456 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 2097152 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 524288 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 1048576 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 8388608 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 4194304 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 209446764544 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 33554432 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 2974130634752 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 217432719360 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 268435456 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 27322434453504 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 1073741824 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 14744622727168 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 730144440320 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 33998961115136 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 412316860416 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 34359738368 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 68719476736 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 3023656976384 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 29686813949952 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 549755813888 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 26388279066624 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 2199023255552 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 17592186044416 := 35184372088832&4081387162304512
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 0 := 35184372088832&4081387162304512
band: (band[52] (if (= #348 63) 1 (if #556 2 #750)) (shl[64] (* 2 #57) (mod #765 64))) 4398046511104 := 35184372088832&4081387162304512
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 10384 :time 0.00)
(sat.stats    772  19531   87  1847/1844   706/292 366       0    22.54   0.54)
ramon: poll                 wall=1.000s usage=0.995s mem=24856KiB load=0.99 rootload=0.98
(sat.stats   1200  25106  105  5502/5499  1138/311 366       0    23.78   1.79)
ramon: poll                 wall=2.000s usage=1.993s mem=25428KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.993s mem=26744KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   1598  26827  230 13718/13715  1540/315 366       0    25.66   3.69)
ramon: poll                 wall=4.000s usage=3.992s mem=26976KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.992s mem=27684KiB load=1.00 rootload=1.00
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 26176 := 35184372088832&1548112371908608
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 16 := 35184372088832&1548112371908608
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 128 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 256 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 512 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 13312 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 4096 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 2048 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 8192 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 16384 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 32768 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 1168244736 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 65536 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 7399800832 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 262144 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 524288 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 43572527104 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 81642127360 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 113237819392 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 83416317952 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 16777216 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 33554432 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 4001835778048 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 402653184 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 536870912 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 268435456 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 13703093157888 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 2890512990208 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 8108898254848 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 17179869184 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 8589934592 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 103079215104 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 68719476736 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 12919261626368 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 30236569763840 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 6597069766656 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 1099511627776 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 30786325577728 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 35184372088832 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 8796093022208 := 35184372088832&1266637395197952
band: (band[52] (if (= #58 51) 1 (if #578 2 #678)) (shl[52] (bv2int %0) (+ 52 #681))) 17592186044416 := 35184372088832&1266637395197952
ramon: poll                 wall=6.000s usage=5.992s mem=32108KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.992s mem=32896KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.991s mem=33376KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.991s mem=34120KiB load=1.00 rootload=1.00
(sat.stats   2576  35449  328 41729/41726  2555/378 366       0    33.85   9.25)
ramon: poll                 wall=10.000s usage=9.991s mem=34788KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.991s mem=35184KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.990s mem=36728KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.990s mem=42104KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.990s mem=46520KiB load=1.00 rootload=0.98
(sat.stats   3597  69852  454 102794/102791  3769/642 366       0    45.50  14.05)
ramon: poll                 wall=15.000s usage=14.990s mem=51112KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.989s mem=54348KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.989s mem=59448KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.989s mem=63320KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.988s mem=67792KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.988s mem=69916KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:45:45 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          19.999s
ramon: group.utime          19.943s
ramon: group.stime          0.056s
ramon: group.mempeak        70172KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.012s
ramon: loadavg              1.00
