ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:53:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28468 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1270
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DKysvBonfz9L.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4124852
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1154    379  1147/993/109     101/18     7   17   19.08)
(smt.stats    1    202   2540   1476  1322/1191/116     196/16    10   26   19.17)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 274&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 274&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 274&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 1 := 274&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 274&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 2 := 274&2
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 140737488355602 := 274 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 1 := 276&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 276&2
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 70368744177940 := 274 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 274 := 274 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 4820258976169984 := 274 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 274 := 274 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 1 := 35184372088833&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088833&2
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 4820258976169985 := 274 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 274 := 274 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 273 := 274 << 44
(smt.stats    2    313   4447   2689  1391/1253/153     317/26    13   39   19.36)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 89 := 274 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 1 := 35184372088832&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 2 := 35184372088832&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 2 := 35184372088832&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&2
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 1 := 35184372088832&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 1 := 35184372088832&2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 2 := 35184372088832&2
(smt.stats    3    414   5284   4423  1572/1395/172     408/34    16   47   19.55)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 2 := 2&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 4&4
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 774056185954308 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 4&4
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 774056185954308 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 4&4
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 774056185954308 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 4&4
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 774056185954308 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 4&4
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 633318697598980 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 180&4
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 703687441776820 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 180&4
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 703687441776820 := 183 << 45
(smt.stats    4    525   6512   5620  1678/1493/185     533/59    19   59   19.75)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 52776558133247 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 35184372088831 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 35184372088831 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 35184372088831 := 183 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 4 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 4 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 4 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 2 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 2 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 1 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088832&4
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 1 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 35184372088832&4
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 4 := 35184372088832&4
(smt.stats    5    647   8307   8430  1743/1580/232     661/78    23   81   19.84)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088820&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6509108836433908 := 181 << 43
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   9081   8870  1789/1610/232     770/78    23   81   20.66)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088600&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6509108836433688 := 181 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 35184372088584&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 18446708889337462536 := 181 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 1048632&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6473924465393720 := 181 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 1048608&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6544293209571360 := 181 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 43980465111040&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 181 := 181 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 43980465111040&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 181 := 181 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 43980465111040&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 181 := 181 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 43980465111040&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 181 := 181 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 43980465111040&1
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 #614 ...) 0 (if #641 1 #647))) 1 := 43980465111040&1
(smt.stats    7    859  10995  12387  2256/2074/243    1051/124    24   84   20.47)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 70368744177273&2
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 703687441776249 := 182 << 44
(smt.stats    8    981  12440  15602  2285/2093/245    1286/124    24   84   20.57)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 229&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 633318697599205 := 180 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 221&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 633318697599197 := 180 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 213&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 633318697599189 := 180 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 205&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 633318697599181 := 180 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 197&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 633318697599173 := 180 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 177&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 633318697599153 := 180 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 177&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 633318697599153 := 180 << 42
(smt.stats    9   1115  13749  17408  2435/2127/245    1475/183    25   86   20.76)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 17592186044416&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 10 := 180 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 17592186044416&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 10 := 180 << 42
(smt.stats   10   1216  15372  21148  2484/2260/250    1743/192    26   87   20.85)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 52776558133098&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6597069766655850 := 179 << 41
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 52776558133090&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6597069766655842 := 179 << 41
(smt.stats   11   1327  17442  26515  2577/2316/255    2056/209    27   88   20.95)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 52776558133098&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6667438510833514 := 179 << 41
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 26388279066626&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6570681487589378 := 179 << 41
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 26388279066626&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6570681487589378 := 179 << 41
ramon: poll                 wall=1.004s usage=0.948s mem=22288KiB load=0.94 rootload=0.94
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  18907  32242  2656/2401/255    2570/217    28   88   21.04)
(smt.stats   13   1583  22000  38172  2703/2474/266    2818/297    29   89   21.23)
ramon: poll                 wall=2.000s usage=1.944s mem=22608KiB load=1.00 rootload=1.00
(smt.stats   14   1730  24687  44042  2894/2529/266    3045/336    30  110   21.42)
(smt.stats   15   1831  26208  49033  3066/2864/268    3189/362    31  114   21.42)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 52776558132959&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6597069766655711 := 47 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 52776558132959&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6597069766655711 := 47 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 52776558132959&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6667438510833375 := 47 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 52776558132959&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6667438510833375 := 47 << 1
(smt.stats   16   1942  28754  58305  3119/2915/280    3409/388    33  141   21.52)
(smt.stats   17   2064  32191  63874  3175/2927/280    3587/389    33  141   21.52)
ramon: poll                 wall=3.000s usage=2.944s mem=22980KiB load=1.00 rootload=1.00
(smt.stats   18   2198  34586  68179  3240/2978/280    3805/393    33  141   21.71)
(smt.stats   19   2345  37121  74737  3407/3201/283    4010/488    34  143   21.81)
(smt.stats   20   2506  40236  86956  3416/3210/284    4413/504    35  147   21.90)
ramon: poll                 wall=4.000s usage=3.944s mem=23164KiB load=1.00 rootload=0.99
(smt.stats   21   2607  43212  93091  3524/3231/284    4755/614    36  155   21.90)
(smt.stats   22   2718  45574  96694  3599/3326/284    4982/617    36  155   22.00)
ramon: poll                 wall=5.000s usage=4.943s mem=23312KiB load=1.00 rootload=1.00
(smt.stats   23   2840  50137 105456  3674/3430/284    5148/617    36  155   22.00)
(smt.stats   24   2974  52572 113706  3817/3492/284    5383/625    36  155   22.09)
ramon: poll                 wall=6.000s usage=5.943s mem=23492KiB load=1.00 rootload=1.00
(smt.stats   25   3121  55642 120099  3917/3640/292    5617/743    37  168   22.19)
(smt.stats   26   3282  61004 133042  3978/3730/293    5892/746    37  168   22.28)
(smt.stats   27   3459  66033 152046  4022/3814/294    6300/817    39  176   22.28)
(smt.stats   28   3560  68378 159745  4040/3821/294    6483/819    39  176   22.39)
ramon: poll                 wall=7.000s usage=6.943s mem=23732KiB load=1.00 rootload=1.00
(smt.stats   29   3671  71958 165676  4113/3844/294    6671/819    39  176   22.48)
(smt.stats   30   3793  75517 171146  4170/3904/294    6875/823    39  176   22.48)
(smt.stats   31   3927  77941 180002  4202/3968/294    7224/823    39  176   22.48)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  82159 196188  4256/4012/294    7433/826    39  176   22.48)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #828 #829 #830 #831 #832 #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 ...) 0 (if #871 1 #925))) 0 := 1048622&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 914793675358254 := 35184383623219 << 27
ramon: poll                 wall=8.000s usage=7.943s mem=23884KiB load=1.00 rootload=1.00
(smt.stats   33   4235  86112 209071  4367/4054/294    7708/831    39  176   22.58)
ramon: poll                 wall=9.000s usage=8.943s mem=24128KiB load=1.00 rootload=1.00
(smt.stats   34   4412  87126 210997  4440/4187/299    7895/904    40  177   22.77)
(smt.stats   35   4606  91197 222671  5049/4742/299    8271/915    40  177   22.87)
ramon: poll                 wall=10.000s usage=9.942s mem=24320KiB load=1.00 rootload=1.00
(smt.stats   36   4707  93508 228606  5169/4893/300    8465/915    40  177   22.96)
(smt.stats   37   4818  96065 239425  5240/4993/300    8658/936    41  179   22.96)
(smt.stats   38   4940  98911 249584  5261/5038/300    8985/938    41  179   23.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 156)
(smt.stats   39   5074 101015 259532  5294/5061/300    9109/941    41  179   23.06)
ramon: poll                 wall=11.000s usage=10.942s mem=24620KiB load=1.00 rootload=1.00
(smt.stats   40   5221 103837 268496  5387/5088/301    9347/996    42  181   23.23)
ramon: poll                 wall=12.000s usage=11.942s mem=24836KiB load=1.00 rootload=1.00
(smt.stats   41   5382 107308 277257  5594/5349/301    9566/998    42  181   23.23)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5559 110184 289456  5646/5393/301   10029/1002    42  181   23.33)
ramon: poll                 wall=13.000s usage=12.942s mem=24868KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.941s mem=24868KiB load=1.00 rootload=1.00
(smt.stats   43   5753 115442 304537  5734/5461/301   10397/1009    42  181   23.42)
ramon: poll                 wall=15.000s usage=14.941s mem=25052KiB load=1.00 rootload=1.00
(smt.stats   44   5966 119318 312765  5925/5545/301   10653/1011    42  181   23.52)
ramon: poll                 wall=16.000s usage=15.941s mem=25052KiB load=1.00 rootload=1.00
(smt.stats   45   6067 121373 318732  5983/5740/301   10907/1012    42  181   23.52)
ramon: poll                 wall=17.000s usage=16.941s mem=25060KiB load=1.00 rootload=1.00
(smt.stats   46   6178 123722 325925  6060/5806/301   11192/1012    42  181   23.52)
(smt.stats   47   6300 125982 336583  6087/5862/301   11436/1013    42  181   23.52)
(smt.stats   48   6434 128724 345450  6118/5893/301   11701/1015    42  181   23.61)
(smt.stats   49   6581 132242 352764  6170/5912/301   11960/1016    42  181   23.71)
ramon: poll                 wall=18.000s usage=17.941s mem=25156KiB load=1.00 rootload=1.00
(smt.stats   50   6742 136005 365355  6378/6020/301   12206/1021    42  181   23.80)
ramon: poll                 wall=19.000s usage=18.940s mem=25332KiB load=1.00 rootload=1.00
(smt.stats   51   6919 140776 382639  6517/6176/301   12670/1023    42  181   23.90)
ramon: poll                 wall=20.004s usage=19.942s mem=25408KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:53:42 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          19.999s
ramon: group.utime          19.995s
ramon: group.stime          0.004s
ramon: group.mempeak        27636KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
