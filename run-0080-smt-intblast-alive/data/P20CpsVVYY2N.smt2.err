ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:18:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25835 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/P20CpsVVYY2N.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             17075
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4629   1285  1073/961/96      96/7     4   14   18.97)
(smt.stats    1    202   6649   2778  1687/1520/97     198/10     5   17   19.17)
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 13 := 1037518795&13
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 19 := 1037518795&19
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 32 := 1037518795&32
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 64 := 1037518795&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 64 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 11 := 1037518795&64
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 10 := 1037518795&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 14 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 9 := 1037518795&13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 13 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 9 := 1037518795&13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 13 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&13
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&13
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 137438953484 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 137438953484 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #104))) 5 := 6 << 31
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 11 := 1037518795&15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #766 #770) 64)) 15 := 12 << 30
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 11 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 10 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #104))) 5 := 6 << 31
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #104))) 5 := 6 << 31
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 32 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 64 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 256 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 512 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 1024 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2048 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 4096 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8192 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 16384 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 32768 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 131072 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 131072 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 262144 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 1048576 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2097152 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 4194304 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8388608 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8388608 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 16777216 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 33554432 := 1037518795&12884901888
(smt.stats    2    313   8315   4907  2188/1798/128     309/15     6   24   20.34)
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 16384 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 64 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 256 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 256 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 64 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 32 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2048 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2048 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8192 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2097152 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 2097152 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 262144 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 262144 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 131072 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 11 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 10 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 8 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 10 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 9 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 1 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 2 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 4 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 8 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 16 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 32 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 64 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 128 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 256 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 512 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 1024 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 2048 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 4096 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 8192 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 16384 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 32768 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 65536 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 131072 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 262144 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 524288 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 1048576 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 2097152 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 4194304 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 8388608 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 16777216 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 33554432 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 67108864 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 134217728 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 134217728 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 268435456 := 1037518795&12884901888
band: (band[37] (if (= #303 63) 0 (if #541 1 #759)) (shl[64] (* 2 #102) (mod #774 64))) 0 := 1037518795&12884901888
band: (band[37] (if (= #108 36) 0 (if #562 1 #661)) (shl[37] (bv2int %0) (+ 37 #664))) 536870912 := 1037518795&12884901888
(smt.stats    3    414   9445   7478  2229/2025/390     470/78     8   81   20.95)
(smt.stats    4    525  10855  11300  2404/2184/398     559/109    12   96   21.15)
(smt.stats    5    647  13545  13577  2505/2222/400     695/121    13   96   21.52)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14213  14293  2602/2352/401     802/131    14   96   21.71)
ramon: poll                 wall=1.000s usage=0.943s mem=23260KiB load=0.94 rootload=0.94
(smt.stats    7    859  17069  17041  2761/2533/402     934/138    15   97   21.71)
(smt.stats    8    981  17613  18889  3016/2796/404    1082/143    16  101   21.80)
(smt.stats    9   1115  21280  22525  3096/2834/410    1342/201    18  110   21.90)
(smt.stats   10   1216  22371  23357  3263/2923/410    1472/203    18  110   21.99)
ramon: poll                 wall=2.000s usage=1.942s mem=23512KiB load=1.00 rootload=1.00
(smt.stats   11   1327  26054  29773  3402/3167/414    1649/269    20  119   21.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  29472  38632  3500/3253/429    1858/308    21  127   22.09)
(smt.stats   13   1583  34624  49383  3541/3294/432    2011/376    23  161   22.09)
(smt.stats   14   1730  39784  59786  3712/3404/437    2210/397    26  180   22.30)
ramon: poll                 wall=3.000s usage=2.942s mem=23708KiB load=1.00 rootload=1.00
(smt.stats   15   1831  40535  60984  3928/3496/437    2349/401    26  180   22.39)
(smt.stats   16   1942  42661  69955  4027/3781/439    2596/533    27  181   22.49)
(smt.stats   17   2064  47015  76370  4069/3799/440    2813/534    27  181   22.49)
(smt.stats   18   2198  53388  86227  4188/3857/442    3108/625    28  188   22.39)
(smt.stats   19   2345  57972  94270  4347/3976/444    3340/733    29  194   22.49)
ramon: poll                 wall=4.000s usage=3.942s mem=24208KiB load=1.00 rootload=1.00
(smt.stats   20   2506  61533 101593  4415/4167/445    3639/813    31  196   22.58)
(smt.stats   21   2607  63990 107565  4430/4174/447    3835/814    31  196   22.58)
(smt.stats   22   2718  67319 115086  4492/4204/447    3957/896    32  206   22.58)
(smt.stats   23   2840  71429 125256  4546/4247/447    4120/896    32  206   22.68)
(smt.stats   24   2974  75500 141717  4585/4331/451    4327/950    33  209   22.68)
(smt.stats   25   3121  78567 149734  4662/4340/451    4523/957    33  209   22.78)
ramon: poll                 wall=5.000s usage=4.941s mem=24208KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282  82384 165311  4766/4456/451    4785/1029    34  218   22.78)
(smt.stats   27   3459  86492 179565  4851/4523/451    5078/1029    34  218   22.93)
(smt.stats   28   3560  88987 186328  4861/4609/452    5240/1134    35  221   22.93)
(smt.stats   29   3671  94025 203309  4872/4620/453    5461/1189    36  225   22.93)
(smt.stats   30   3793  97559 212792  4960/4630/453    5598/1191    36  225   23.03)
ramon: poll                 wall=6.000s usage=5.941s mem=24432KiB load=1.00 rootload=1.00
(smt.stats   31   3927  99671 217778  5217/4961/454    5782/1206    37  226   23.22)
(smt.stats   32   4074 102443 226084  5330/4973/454    6044/1210    37  226   23.22)
ramon: poll                 wall=7.000s usage=6.940s mem=24672KiB load=1.00 rootload=1.00
(smt.stats   33   4235 107235 242197  5487/5099/454    6314/1216    37  226   23.22)
(smt.stats   34   4412 111165 251586  5658/5267/454    6644/1222    37  226   23.32)
(smt.stats   35   4606 115025 262132  5823/5455/454    7045/1228    37  226   23.41)
ramon: poll                 wall=8.000s usage=7.940s mem=24824KiB load=1.00 rootload=0.99
(smt.stats   36   4707 116924 264195  6100/5725/454    7189/1230    37  226   23.72)
(smt.stats   37   4818 120056 272769  6322/5949/454    7432/1230    37  226   23.72)
(smt.stats   38   4940 123562 285436  6412/6156/455    7737/1430    38  228   23.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=9.000s usage=8.939s mem=25220KiB load=1.00 rootload=1.00
(smt.stats   39   5074 126318 294535  6424/6160/455    8041/1431    38  228   23.82)
(smt.stats   40   5221 130198 305090  6643/6178/456    8407/1437    38  228   24.09)
(smt.stats   41   5382 133124 316514  6921/6434/456    8683/1582    39  230   24.18)
ramon: poll                 wall=10.000s usage=9.939s mem=25872KiB load=1.00 rootload=1.00
(smt.stats   42   5559 138499 334774  7147/6788/456    9629/1586    39  230   24.28)
(smt.stats   43   5753 143219 353112  7579/6922/456   10043/1592    39  230   24.47)
ramon: poll                 wall=11.000s usage=10.938s mem=25936KiB load=1.00 rootload=1.00
(smt.stats   44   5966 147946 367264  7967/7511/456   10464/1600    39  230   24.66)
(smt.stats   45   6067 150626 380003  8109/7852/460   10897/1884    40  241   24.66)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6178 152805 388071  8140/7868/460   11143/1885    40  241   24.75)
ramon: poll                 wall=12.000s usage=11.938s mem=26436KiB load=1.00 rootload=1.00
(smt.stats   47   6300 155616 400276  8199/7895/462   11385/2004    41  246   24.94)
(smt.stats   48   6434 159244 419734  8414/8100/463   11745/2141    42  265   24.94)
(smt.stats   49   6581 163568 441182  8477/8170/463   12154/2148    42  265   24.94)
(smt.stats   50   6742 168362 461141  8725/8247/466   12588/2320    43  283   25.14)
ramon: poll                 wall=13.000s usage=12.937s mem=26620KiB load=1.00 rootload=1.00
(smt.stats   51   6919 170694 470803  9182/8483/466   13067/2328    43  283   25.29)
(smt.stats   52   7113 177477 485389  9503/8990/466   13872/2336    43  283   25.58)
ramon: poll                 wall=14.000s usage=13.937s mem=27120KiB load=1.00 rootload=1.00
(smt.stats   53   7326 183011 500188  9645/9283/466   14376/2339    43  283   25.68)
(smt.stats   54   7560 188336 529399 10056/9519/466   15164/2348    43  283   25.77)
(smt.stats   55   7661 191697 547432 10135/9877/466   15511/2348    43  283   25.77)
(smt.stats   56   7772 198605 590245 10140/9880/466   17287/2348    43  283   25.87)
(smt.stats   57   7894 204601 622892 10148/9892/466   18963/2348    43  283   26.13)
ramon: poll                 wall=15.001s usage=14.937s mem=27692KiB load=1.00 rootload=1.00
(smt.stats   58   8028 207740 642018 10177/9901/470   19589/3889    44  308   26.32)
(smt.stats   59   8175 212793 661591 10367/9937/470   20104/3900    44  308   26.32)
ramon: poll                 wall=16.000s usage=15.936s mem=27848KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   60   8336 217312 677188 10846/10344/471   20539/4031    45  338   26.51)
(smt.stats   61   8513 221428 703041 11115/10859/473   21312/4033    45  338   26.60)
(smt.stats   62   8707 229185 739664 11131/10861/473   21929/4257    46  369   26.70)
ramon: poll                 wall=17.000s usage=16.936s mem=28284KiB load=1.00 rootload=1.00
(smt.stats   63   8920 240172 776157 11285/10883/473   22636/4261    46  369   26.87)
(smt.stats   64   9154 246104 803129 11408/11082/473   23788/4265    46  369   27.07)
ramon: poll                 wall=18.000s usage=17.935s mem=28852KiB load=1.00 rootload=1.00
(smt.stats   65   9411 254831 861410 11664/11173/473   24745/4272    46  369   27.16)
(smt.stats   66   9512 256812 872264 11731/11454/473   25348/4276    46  369   27.16)
(smt.stats   67   9623 261231 914160 11757/11485/473   27411/4276    46  369   27.49)
ramon: poll                 wall=19.000s usage=18.935s mem=28976KiB load=1.00 rootload=1.00
(smt.stats   68   9745 265316 933333 11831/11509/473   27726/4280    46  369   27.58)
(smt.stats   69   9879 271305 981336 11914/11620/473   28321/4284    46  369   27.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 139)
(smt.stats   70  10026 275323 999898 12003/11690/473   28414/4290    46  369   27.68)
ramon: poll                 wall=20.000s usage=19.935s mem=29252KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:18:43 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          19.997s
ramon: group.utime          19.997s
ramon: group.stime          0.000s
ramon: group.mempeak        29508KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
