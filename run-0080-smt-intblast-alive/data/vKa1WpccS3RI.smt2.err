ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:08:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24580 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/vKa1WpccS3RI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             180779
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3864   1702  1089/982/92      94/1     3   13   18.98)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 0 := 36 << 23
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 0 := 36 << 23
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 0 := 120 << 23
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 0 := 120 << 23
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 0 := 2199023255556 << 23
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 0 := 6597069766680 << 23
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 0 := 6597069766680 << 23
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&201326592
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511103 := 3298534883340 << 24
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&201326592
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511102 := 3298534883340 << 24
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&201326592
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511102 := 3298534883340 << 24
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&201326592
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 3298534883341 := 3298534883340 << 24
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&201326592
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 3298534883341 := 3298534883340 << 24
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 19 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 32 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 64 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 128 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 256 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 512 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1024 := 11016247&3298635546624
(smt.stats    1    202   5268   3753  1832/1586/123     186/7     7   15   19.47)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1024 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2048 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4096 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8192 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 16384 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 32768 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 65536 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 131072 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 262144 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 524288 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1048576 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2097152 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2097152 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4194304 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8388608 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8388608 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1024 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2048 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4096 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8192 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 16384 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 32768 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 65536 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 131072 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 262144 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 524288 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1048576 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2097152 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4194304 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8388608 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4194304 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8388608 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4194304 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8388608 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4194304 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4194304 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8388608 := 11016247&3298635546624
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4194304 := 11016247&3298635546624
(smt.stats    2    313   7144   6135  2100/1898/234     393/73    10   47   19.89)
(smt.stats    3    414  10397  10190  2120/1918/239     698/148    13   58   19.89)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 84&2
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 84&2
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 84&1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 84&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 4 := 2199023255590 << 6
(smt.stats    4    525  12215  14090  2163/1947/244     816/213    14   71   19.99)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 84&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 4 := 2199023255590 << 6
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 84&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 4 := 2199023255674 << 6
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 84&1073750912
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 84&128
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 84&1107297152
(smt.stats    5    647  15201  19900  2196/1992/270     961/245    17   90   20.28)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  18801  26184  2225/2015/270    1070/245    17   90   20.38)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&436207616
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 436207617 := 2199023779866 << 24
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&704643072
band: (band[42] (if (= #120 41) 1 (if #546 2 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1 := 11016247&704643072
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&704643072
band: (band[42] (if (= #120 41) 1 (if #546 2 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 2 := 11016247&704643072
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&704643072
band: (band[42] (if (= #120 41) 1 (if #546 2 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 4 := 11016247&704643072
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&704643072
band: (band[42] (if (= #120 41) 1 (if #546 2 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 11016240 := 11016247&704643072
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&704643072
band: (band[42] (if (= #120 41) 1 (if #546 2 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 11016244 := 11016247&704643072
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&369098752
band: (band[42] (if (= #120 41) 1 (if #546 2 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 11016244 := 11016247&369098752
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&1098907648000
band: (band[42] (if (= #120 41) 1 (if #546 2 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 11016244 := 11016247&1098907648000
(smt.stats    7    859  22067  33503  2264/2048/298    1169/249    19   96   20.48)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 11016247&3523215360
band: (band[42] (if (= #120 41) 1 (if #546 2 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 11016232 := 11016247&3523215360
(smt.stats    8    981  22604  34357  2279/2052/298    1292/250    19   96   20.67)
(smt.stats    9   1115  27178  44969  2812/2588/303    1564/250    19   96   20.67)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 88129980&1073750400
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 88129980&1073750400
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 88129980&1073750400
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 88129980&1073750400
(smt.stats   10   1216  30769  55201  2833/2613/304    1782/279    21  103   20.76)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&1140853639
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510180
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510206
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510206
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510199
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510206
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510199
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510191
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510199
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510199
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510183
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510180
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510180
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510167
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046510148
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046494535
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046494535
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046492743
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046493191
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&4398046493191
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&1107361796
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 1107361796 := 17301510 << 26
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&1107297348
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 1107297348 := 17301510 << 26
(smt.stats   11   1327  32986  62179  3023/2754/372    2015/302    22  111   21.05)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&1107296839
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 1107296839 := 17301510 << 26
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 88129980&1107296775
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 1107296775 := 17301510 << 26
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 88129980&2013265920
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511103 := 15 << 27
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 88129980&2013265920
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511103 := 15 << 27
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 88129980&2013265920
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511103 := 15 << 27
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 88129980&2013265920
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2013266817 := 15 << 27
(smt.stats   12   1449  35614  73249  3169/2948/384    2483/325    23  118   21.34)
(smt.stats   13   1583  40479  82235  3202/2978/390    2706/633    25  142   21.45)
(smt.stats   14   1730  45853  93510  3288/3053/394    3022/677    26  145   21.45)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   15   1831  49932 105323  3305/3075/394    3144/712    27  154   21.55)
(smt.stats   16   1942  53945 116867  3334/3089/396    3303/735    28  158   21.55)
(smt.stats   17   2064  58186 124991  3354/3126/399    3532/768    29  165   21.55)
ramon: poll                 wall=1.000s usage=0.997s mem=22876KiB load=1.00 rootload=0.98
(smt.stats   18   2198  66005 144658  3369/3131/403    3667/830    31  171   21.65)
(smt.stats   19   2345  71415 164370  3439/3183/403    3844/830    31  171   21.85)
(smt.stats   20   2506  76224 176409  3541/3280/408    4086/897    33  312   21.95)
(smt.stats   21   2607  79289 181828  3632/3291/408    4235/898    33  312   22.04)
(smt.stats   22   2718  81762 186132  3783/3399/408    4417/906    33  312   22.26)
(smt.stats   23   2840  84176 192412  3951/3546/408    4623/906    33  312   22.35)
(smt.stats   24   2974  87573 201455  4063/3795/409    4906/1025    34  319   22.35)
(smt.stats   25   3121  93688 215875  4102/3810/411    5218/1050    35  331   22.45)
ramon: poll                 wall=2.000s usage=1.995s mem=23872KiB load=1.00 rootload=0.99
(smt.stats   26   3282  97850 224451  4336/3967/413    5517/1055    35  331   22.71)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 21&3925214232576
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3459 101225 233537  4533/4265/416    6032/1099    36  341   22.80)
(smt.stats   28   3560 104407 240621  4545/4276/416    6397/1101    36  341   22.90)
(smt.stats   29   3671 108601 257436  4556/4288/416    6955/1260    37  345   22.90)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8 := 1443921592481&4398046445572
(smt.stats   30   3793 113089 268298  4747/4296/416    7554/1271    37  345   23.09)
(smt.stats   31   3927 117166 280885  4937/4491/417    8358/1364    38  347   23.28)
(smt.stats   32   4074 122505 299604  4973/4686/417    9160/1366    38  347   23.38)
ramon: poll                 wall=3.000s usage=2.992s mem=24792KiB load=1.00 rootload=1.00
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2851338125322
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2851338125321
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2851338125320
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2851338125320
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2851338125320
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2851338125320
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2851338125320
(smt.stats   33   4235 127708 314280  5105/4727/417    9625/1373    38  347   23.58)
(smt.stats   34   4412 130175 321743  5517/4845/427   10040/1552    39  349   23.76)
(smt.stats   35   4606 134021 334652  5696/5274/435   10958/1554    39  349   23.86)
(smt.stats   36   4707 135809 347084  5932/5480/436   11323/1780    40  378   23.95)
(smt.stats   37   4818 138026 361234  6174/5733/437   11549/1781    40  378   24.05)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2887843053889
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2887842791745
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2887842791745
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2887842791745
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2887842857281
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2887843184962&2887842857281
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 64 := 2887843184962&2851339239745
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 320 := 2887843184962&2851338977601
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 320 := 2887843184962&2851338977601
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 320 := 2887843184962&2851338977601
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 320 := 2887843184962&2851338977601
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 320 := 2887843184962&2851338977601
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 320 := 2887843184962&2851338977601
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 320 := 2887843184962&2851338977601
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 320 := 2887843184962&2851338715457
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 320 := 2887843184962&2851338715457
(smt.stats   38   4940 139598 371420  6416/6143/464   12130/1812    41  379   24.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 134)
(smt.stats   39   5074 142961 387237  6462/6158/464   12733/1812    41  379   24.36)
ramon: poll                 wall=4.000s usage=3.990s mem=25804KiB load=1.00 rootload=1.00
(smt.stats   40   5221 144347 395400  6742/6258/464   13017/2039    42  390   24.46)
(smt.stats   41   5382 146861 413769  7408/7034/465   13486/2039    42  390   24.55)
(smt.stats   42   5559 151247 431399  7536/7238/466   14139/2055    43  404   24.65)
(smt.stats   43   5753 154556 458892  7923/7281/466   14937/2057    43  404   24.84)
ramon: poll                 wall=5.000s usage=4.988s mem=26316KiB load=1.00 rootload=1.00
(smt.stats   44   5966 163633 557721  7944/7672/469   15920/2692    45  408   24.93)
(smt.stats   45   6067 166904 567777  7958/7674/469   16139/2694    45  408   25.13)
(smt.stats   46   6178 170789 594598  7973/7697/469   16590/2694    45  408   25.13)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6300 175042 616628  7994/7706/471   16959/2863    46  424   25.13)
(smt.stats   48   6434 181098 630795  8051/7777/472   17459/2959    47  442   25.13)
(smt.stats   49   6581 185463 651372  8083/7783/472   18238/2961    47  442   25.23)
(smt.stats   50   6742 191306 698551  8106/7814/472   18437/2961    47  442   25.34)
ramon: poll                 wall=6.000s usage=5.987s mem=26776KiB load=1.00 rootload=1.00
(smt.stats   51   6919 197404 749084  8123/7846/472   18762/2961    47  442   25.34)
(smt.stats   52   7113 204429 795192  8158/7861/472   19360/2966    47  442   25.44)
(smt.stats   53   7326 209918 827041  8512/7895/472   19852/2969    47  442   25.53)
(smt.stats   54   7560 218196 908793  8869/8316/472   20689/2969    47  442   25.93)
(smt.stats   55   7661 223619 949387  8926/8602/473   21183/3276    48  444   25.93)
ramon: poll                 wall=7.000s usage=6.986s mem=27460KiB load=1.00 rootload=1.00
(smt.stats   56   7772 230377 983799  8940/8666/473   21774/3276    48  444   25.93)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7894 236968 1007608  8947/8668/473   22387/3276    48  444   26.13)
(smt.stats   58   8028 242781 1037318  8968/8676/473   23309/3278    48  444   26.22)
ramon: poll                 wall=8.000s usage=7.985s mem=27868KiB load=1.00 rootload=0.99
(smt.stats   59   8175 249476 1054414  9090/8713/473   23719/3282    48  444   26.32)
(smt.stats   60   8336 256243 1096200  9152/8851/473   24780/3283    48  444   26.41)
(smt.stats   61   8513 260416 1124156  9257/8886/473   25709/3288    48  444   26.51)
ramon: poll                 wall=9.000s usage=8.985s mem=28100KiB load=1.00 rootload=1.00
(smt.stats   62   8707 270003 1202361  9332/9029/473   26564/3288    48  444   26.70)
(smt.stats   63   8920 277680 1231995  9538/9065/473   27269/3292    48  444   26.70)
ramon: poll                 wall=10.000s usage=9.980s mem=28688KiB load=0.99 rootload=1.00
(smt.stats   64   9154 286340 1275034  9637/9296/474   29371/4171    49  449   26.95)
(smt.stats   65   9411 296323 1353655 10134/9416/477   30369/4422    50  454   27.14)
(smt.stats   66   9512 299156 1369779 10168/9894/477   31502/4422    50  454   27.34)
(smt.stats   67   9623 302184 1383920 10283/9905/478   31727/4653    51  490   27.43)
ramon: poll                 wall=11.000s usage=10.979s mem=28944KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   68   9745 306605 1411630 10410/10136/480   32298/4653    51  490   27.43)
(smt.stats   69   9879 310093 1440219 10636/10143/480   32798/4658    51  490   27.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 1469)
(smt.stats   70  10026 313548 1472622 10738/10404/480   32044/4796    52  511   27.73)
(smt.stats   71  10187 318522 1505672 10892/10467/480   33349/4796    52  511   27.73)
ramon: poll                 wall=12.000s usage=11.978s mem=29324KiB load=1.00 rootload=1.00
(smt.stats   72  10364 325100 1546454 10974/10629/480   34043/4799    52  511   27.82)
(smt.stats   73  10558 328653 1564368 11122/10746/480   35506/4800    52  511   28.02)
(smt.stats   74  10771 336583 1628599 11253/10888/481   36417/5189    53  512   28.21)
(smt.stats   75  11005 343696 1680360 11328/11054/485   38887/5739    54  529   28.41)
ramon: poll                 wall=13.000s usage=12.978s mem=30000KiB load=1.00 rootload=1.00
(smt.stats   76  11262 354756 1745368 11384/11066/485   39786/5742    54  529   28.60)
(smt.stats   77  11544 363774 1786921 11852/11135/485   40679/6077    55  554   28.69)
ramon: poll                 wall=14.003s usage=13.980s mem=30424KiB load=1.00 rootload=1.00
(smt.stats   78  11645 366790 1811476 12151/11626/485   41273/6078    55  554   28.98)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 360980398120 := 360980398120&771698458638
(smt.stats   79  11756 370203 1841512 12401/11893/485   42030/6079    55  554   29.07)
(smt.stats   80  11878 375057 1879382 12702/12136/485   42457/6081    55  554   29.28)
(smt.stats   81  12012 378245 1905992 12798/12514/486   44223/6320    56  566   29.47)
(smt.stats   82  12159 386017 1962178 12863/12529/486   44786/6327    56  566   29.56)
ramon: poll                 wall=15.000s usage=14.977s mem=31032KiB load=1.00 rootload=1.00
(smt.stats   83  12320 391374 2018498 13121/12623/486   45674/6331    56  566   29.66)
(smt.stats   84  12497 398336 2093073 13340/12878/486   47432/6332    56  566   29.85)
(smt.stats   85  12691 406215 2221693 13363/13089/486   48911/6332    56  566   29.95)
(smt.stats   86  12904 411962 2258370 13581/13092/486   50290/6333    56  566   30.04)
ramon: poll                 wall=16.000s usage=15.975s mem=31720KiB load=1.00 rootload=0.99
(smt.stats   87  13138 423788 2304087 13595/13317/486   52458/6334    56  566   30.24)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   88  13395 434884 2459879 13628/13343/486   54713/6335    56  566   30.43)
(smt.stats   89  13677 442969 2485891 13816/13370/488   56288/8183    57  568   30.72)
ramon: poll                 wall=17.003s usage=16.977s mem=32364KiB load=1.00 rootload=1.01
(smt.stats   90  13987 453143 2578705 14272/13588/488   57901/8191    57  568   30.81)
(smt.stats   91  14088 456510 2621155 14283/14009/489   59279/8903    58  604   30.91)
ramon: poll                 wall=18.000s usage=17.973s mem=32724KiB load=1.00 rootload=0.99
(smt.stats   92  14199 460575 2645858 14341/14013/489   60752/8903    58  604   31.01)
(smt.stats   93  14321 463090 2679568 14466/14069/489   61211/8903    58  604   31.11)
(smt.stats   94  14455 465555 2714132 14539/14227/489   61803/8904    58  604   31.40)
(smt.stats   95  14602 470135 2754619 14584/14289/489   63721/9096    59  608   31.59)
(smt.stats   96  14763 477025 2832625 14611/14324/489   64268/9097    59  608   31.69)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 672 := 672&2851343465968
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 672 := 672&2851343465968
(smt.stats   97  14940 482735 2865891 14702/14338/489   65004/9099    59  608   31.78)
ramon: poll                 wall=19.000s usage=18.973s mem=33336KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 15)
(smt.stats   98  15134 488465 2967006 14955/14462/494   66054/9497    60  609   32.07)
(smt.stats   99  15347 495258 3106383 15288/14706/494   67157/9501    60  609   32.16)
(smt.stats  100  15581 500736 3186062 15370/15031/494   68795/9768    61  609   32.26)
ramon: poll                 wall=20.000s usage=19.972s mem=33944KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:09:11 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.981s
ramon: group.utime          19.957s
ramon: group.stime          0.024s
ramon: group.mempeak        34204KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
