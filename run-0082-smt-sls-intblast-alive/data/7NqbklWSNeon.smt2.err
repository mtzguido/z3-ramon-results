ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:44:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29210 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7NqbklWSNeon.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             647608
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 80 := 4 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5 := 4 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 2251799813685248 := 4 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 2251799813685250 := 4 << 48
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #91))) 1 := 2 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5 := 4 << 48
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #91))) 1 := 2 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 1125899906842625 := 4 << 48
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #91))) 1 := 2 << 49
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #91))) 1 := 2 << 49
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #91))) 1 := 2 << 49
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #91))) 1 := 2 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 3940649673949185 := 14 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 3940649673949185 := 14 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5066549580791809 := 18 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5629499534213121 := 20 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5629499534213121 := 20 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 21955048183431169 := 78 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 21392098230009857 := 76 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5066549580791809 := 18 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5629499534213121 := 20 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 7318349394477057 := 26 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 7881299347898369 := 28 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 8444249301319681 := 30 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 9570149208162305 := 34 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 9570149208162305 := 34 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 10133099161583617 := 36 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 10696049115004929 := 38 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 11821949021847553 := 42 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 12384898975268865 := 44 << 28
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   60.9756     10000        49          0            1        2)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 6192449487634433 := 22 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 6192449487634433 := 22 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 6192449487634433 := 22 << 39
(smt.stats    0    101    383    483   157/64/59      98/17     4   13   51.35)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 2814749767106561 := 10 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 2814749767106561 := 10 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 2814749767106561 := 10 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 4503599627370500 := 12 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 4503599627370498 := 12 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 4503599627370501 := 14 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 4503599627370501 := 14 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 3940649673949185 := 14 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 13510798882111490 := 46 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 13510798882111490 := 46 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 13510798882111490 := 46 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 44 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 44 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 15762598695796738 := 50 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18014398509481986 := 52 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 15762598695796738 := 54 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 15762598695796736 := 54 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 15762598695796736 := 54 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 15762598695796736 := 54 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18014398509481986 := 58 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18014398509481986 := 60 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 78 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 76 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 74 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 70 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 62 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 68 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 66 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 66 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 68 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 68 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 68 << 16
(smt.stats    1    202    718   1086   343/192/109     192/30     5   23   51.54)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 60 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 60 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 60 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 58 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 58 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866370 := 58 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 17451448556060673 := 62 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 17451448556060673 := 62 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 17451448556060673 := 62 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5629499534213121 := 20 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5629499534213121 := 20 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 7318349394477057 := 26 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 7881299347898369 := 28 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 7881299347898369 := 28 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 7318349394477057 := 26 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 7318349394477057 := 26 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 7318349394477057 := 26 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 11258999068426253 := 30 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 9007199254740994 := 30 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 10133099161583618 := 34 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 10696049115004930 := 36 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 10696049115004929 := 38 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 10696049115004929 := 38 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 9570149208162305 := 34 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 9570149208162305 := 34 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 10133099161583617 := 36 << 32
(sat.ddfw       1      1   29.0727     20001        98          1            1        3)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5066549580791809 := 18 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5066549580791809 := 18 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 5066549580791809 := 18 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 11821949021847553 := 42 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 11821949021847553 := 42 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18014398509482011 := 50 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18014398509482011 := 50 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18014398509482012 := 52 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18014398509482012 := 52 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18014398509482010 := 50 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18014398509482010 := 50 << 25
(smt.stats    2    313   1496   2502   469/345/174     298/38     6   36   51.84)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866409 := 78 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866409 := 78 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866409 := 78 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866408 := 76 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866407 := 74 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 76 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 76 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866405 := 70 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866405 := 70 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 22517998136852519 := 78 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 22517998136852519 := 78 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18577348462903297 := 66 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18577348462903297 := 66 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 20829148276588545 := 74 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18445055223849287678 := 74 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 94 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551613 := 92 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866411 := 82 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866419 := 98 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 94 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 92 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866417 := 94 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866417 := 94 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866415 := 90 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866413 := 86 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866411 := 82 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866667 := 84 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 84 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866413 := 86 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446181123756130345 := 82 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866411 := 82 << 9
(sat.ddfw       1      1   28.9855     40001       196          2            1        5)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866415 := 90 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866415 := 90 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18446744073709551615 := 80 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #122 #124) 64)) 18444492273895866414 := 88 << 6
(smt.stats    3    420   2449   3978   606/580/238     392/47     8   52   52.19)
ramon: poll                 wall=1.000s usage=0.804s mem=54428KiB load=0.80 rootload=0.80
(sat.ddfw       1      1   27.3473     70001       343          3            1        8)
(sat.ddfw       1      1   24.4948    110001       539          4            1       12)
ramon: poll                 wall=2.008s usage=1.812s mem=54592KiB load=1.00 rootload=0.99
(sat.ddfw       1      1    21.701    160000       784          5            1       17)
(smt.stats    4    531   3724   4733   794/763/239     489/67     9   57   52.67)
ramon: poll                 wall=3.004s usage=2.786s mem=54904KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   18.8032    220001      1078          6            1       23)
(smt.stats    5    653   5383   6488   970/863/244     602/91    10   58   52.77)
ramon: poll                 wall=4.000s usage=3.709s mem=54928KiB load=0.93 rootload=0.92
(sat.ddfw       1      1   16.5602    290001      1421          7            1       30)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    754   7307   8262  1106/1079/248     689/100    13   70   52.77)
ramon: poll                 wall=5.004s usage=4.603s mem=55156KiB load=0.89 rootload=0.89
(smt.stats    7    865   8551   9873  1341/1312/251     800/121    14   71   52.96)
(sat.ddfw       1      1   14.6199    370001      1813          8            1       38)
(smt.stats    8    987  11034  12641  1418/1375/253     928/152    15   79   53.05)
ramon: poll                 wall=6.000s usage=5.524s mem=55412KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   13.4168    460001      2254          9            1       47)
ramon: poll                 wall=7.000s usage=6.527s mem=55576KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.525s mem=55700KiB load=1.00 rootload=1.00
(smt.stats    9   1121  12829  14158  1525/1394/253    1059/166    15   79   53.34)
(sat.ddfw       1      1   12.4239    560001      2745         10            1       57)
ramon: poll                 wall=9.000s usage=8.521s mem=55768KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.5425    670001      3284         11            1       68)
ramon: poll                 wall=10.000s usage=9.518s mem=55768KiB load=1.00 rootload=1.00
(smt.stats   10   1222  13242  14903  1815/1706/253    1165/175    15   79   53.44)
ramon: poll                 wall=11.000s usage=10.518s mem=56024KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.7604    790001      3872         12            1       80)
ramon: poll                 wall=12.000s usage=11.517s mem=56024KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.0674    920001      4509         13            1       93)
ramon: poll                 wall=13.000s usage=12.517s mem=56024KiB load=1.00 rootload=1.00
(smt.stats   11   1333  13912  15883  2220/2041/253    1276/185    15   79   53.63)
ramon: poll                 wall=14.004s usage=13.518s mem=55968KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.46202   1060001      5196         14            1      108)
ramon: poll                 wall=15.004s usage=14.513s mem=55984KiB load=0.99 rootload=0.99
ramon: poll                 wall=16.000s usage=15.460s mem=56088KiB load=0.95 rootload=0.95
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1455  14639  16827  2477/2342/254    1395/191    16   82   53.82)
(sat.ddfw       1      1   8.89258   1210001      5931         15            1      123)
ramon: poll                 wall=17.000s usage=16.432s mem=56344KiB load=0.97 rootload=0.97
(smt.stats   13   1589  18991  20958  2949/2779/254    1548/198    16   82   53.91)
(smt.stats   14   1736  22099  25131  3172/2960/254    1732/202    16   82   54.01)
ramon: poll                 wall=18.000s usage=17.308s mem=56568KiB load=0.88 rootload=0.88
(smt.stats   15   1837  23795  27547  3376/3222/254    1849/209    16   82   54.10)
ramon: poll                 wall=19.000s usage=18.408s mem=56644KiB load=1.10 rootload=1.10
(smt.stats   16   1948  25811  31102  3531/3429/254    1959/212    16   82   54.10)
(sat.ddfw       1      1   8.30479   1370001      6715         16            1      139)
(smt.stats   17   2070  28636  36629  3643/3553/254    2092/213    16   82   54.20)
ramon: poll                 wall=20.000s usage=19.748s mem=56584KiB load=1.34 rootload=1.34
ramon: end                  Fri Nov  1 21:44:51 2024
ramon: root.execname        z3
ramon: root.utime           19.790s
ramon: root.stime           0.000s
ramon: group.total          19.798s
ramon: group.utime          19.794s
ramon: group.stime          0.004s
ramon: group.mempeak        56840KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.050s
ramon: loadavg              0.99
