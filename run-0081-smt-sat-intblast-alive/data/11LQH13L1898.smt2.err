ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:21:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30731 MiB
ramon: sys.mem.avail        62093 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/11LQH13L1898.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             212498
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   120/120     0/0  61       0    18.24   0.00)
(sat.stats    138   2016    0   121/121   138/60  61       0    18.93   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 548 :time 0.00)
(sat.stats    138   2016    0   120/120   138/60  64       0    18.93   0.01)
(sat.stats    138   2016    0   120/120   138/60  64       0    18.93   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 401818.93 :time 0.00)
(sat.stats    138   2016    0   124/124   134/58  64       0    18.93   0.01)
(sat.stats    141   2028    1   124/124   137/61  64       0    18.93   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    221   2796    2   124/124   217/108  64       0    18.93   0.02)
(sat.stats    225   2799    3   124/124   221/109  64       0    18.93   0.02)
(sat.stats    248   2889    4   124/124   244/124  64       0    18.93   0.02)
(sat.stats    251   2910    5   124/124   247/125  64       0    18.93   0.02)
(sat.stats    267   3238    6   124/124   263/135  64       0    18.93   0.02)
(sat.stats    270   3290    7   124/124   266/136  64       0    18.93   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1024 :time 0.00)
(sat.stats    273   3445    8   124/124   268/136  65       0    18.93   0.02)
(sat.stats    277   3619    9   124/124   272/138  65       0    18.93   0.02)
(sat.stats    280   3742   10   124/124   275/139  65       0    18.93   0.02)
(sat.stats    283   3890   11   126/126   278/140  65       0    18.93   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1096 :time 0.00)
(sat.stats    286   4012   12   124/124   281/141  68       0    19.03   0.03)
(sat.stats    295   4289   13   147/147   288/144  71       0    19.04   0.05)
(sat.stats    384   5521   16   458/458   378/168  71       0    19.23   0.18)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 1662 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2917 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    718   9590   20  2637/2637   735/210  76       0    19.71   0.51)
(sat.stats    721   9654   21  2637/2637   738/210  76       0    19.71   0.51)
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #57))) 0 := 67108774 << 8
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 13 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 24 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 32 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 64 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 128 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 16 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 0 := 128&67085824
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #437 #441) 32)) 67096339 := 134217548 << 7
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 0 := 128&67085824
band: (band[26] (if (= #220 31) 1 (if #320 2 #430)) (shl[32] (* 2 #56) (mod #445 32))) 128 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 0 := 128&67085824
band: (band[26] (if (= #220 31) 1 (if #320 2 #430)) (shl[32] (* 2 #56) (mod #445 32))) 127 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 2 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 4 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 0 := 128&67085824
band: (band[26] (if (= #220 31) 1 (if #320 2 #430)) (shl[32] (* 2 #56) (mod #445 32))) 126 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 0 := 128&67085824
band: (band[26] (if (= #220 31) 1 (if #320 2 #430)) (shl[32] (* 2 #56) (mod #445 32))) 124 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 0 := 128&67085824
band: (band[26] (if (= #220 31) 1 (if #320 2 #430)) (shl[32] (* 2 #56) (mod #445 32))) 120 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 0 := 128&67085824
band: (band[26] (if (= #220 31) 1 (if #320 2 #430)) (shl[32] (* 2 #56) (mod #445 32))) 16 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 0 := 128&67085824
band: (band[26] (if (= #220 31) 1 (if #320 2 #430)) (shl[32] (* 2 #56) (mod #445 32))) 32 := 128&67085824
band: (band[26] (if (= #67 25) 1 (if #342 2 #390)) (shl[26] (bv2int %0) (+ 26 #393))) 0 := 128&67085824
band: (band[26] (if (= #220 31) 1 (if #320 2 #430)) (shl[32] (* 2 #56) (mod #445 32))) 64 := 128&67085824
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 3632 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3945 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5630 :time 0.00)
 (sat-cleaner :elim-literals 40 :elim-clauses 3 :cost 5818 :time 0.00)
(sat.stats   1066  16618  113 14325/14322  1345/508 204       0    23.95   0.69)
ramon: poll                 wall=1.000s usage=0.997s mem=32996KiB load=1.00 rootload=0.98
(sat.stats   1598  18094  241 57385/57382  2881/1512 204       0    48.69   1.56)
ramon: poll                 wall=2.000s usage=1.998s mem=53556KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.997s mem=60720KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.997s mem=82512KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.997s mem=87168KiB load=1.00 rootload=1.00
(sat.stats   2397  20321  439 122580/122577  5193/3025 204       0    90.29   5.79)
ramon: poll                 wall=6.000s usage=5.997s mem=91788KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.996s mem=96936KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.996s mem=98084KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.996s mem=101MiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.996s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.995s mem=105MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.995s mem=109MiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.995s mem=143MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.995s mem=145MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.995s mem=147MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.994s mem=148MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.994s mem=151MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.994s mem=152MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.993s mem=156MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:21:36 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.090s
ramon: group.total          20.006s
ramon: group.utime          19.914s
ramon: group.stime          0.092s
ramon: group.mempeak        175MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
