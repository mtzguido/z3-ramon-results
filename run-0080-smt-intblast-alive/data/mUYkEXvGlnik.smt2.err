ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:57:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24760 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mUYkEXvGlnik.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             144799
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 3 := 2251799813685247&5
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&5
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&5
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 18014398509481984 := 4 << 51
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 18014398509481984 := 4 << 51
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 18014398509481984 := 4 << 51
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 18014398509481984 := 112 << 51
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 36028797018963968 := 171940 << 51
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&4503599627370509
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&86026
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&172050
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 86026 := 2251799813685247&172050
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 86032 := 2251799813685247&172050
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 7 := 2251799813685247&172064
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 6 := 2251799813685247&172064
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 4 := 2251799813685247&172064
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&172064
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&172096
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 18014398509481984 := 172048 << 51
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 18014398509481984 := 172048 << 51
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&172158
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&172160
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&172160
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&172288
(smt.stats    0    101   4827    798  1287/1115/108      91/6     5   17   19.30)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 18014398509481984 := 172156 << 51
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 139269 := 139268 << 52
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 139269 := 139268 << 52
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 139269 := 139268 << 52
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 2251799813685247&0
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 86349 := 86348 << 52
(smt.stats    1    202   5349   1211  2432/2136/151     185/6     8   27   19.69)
(smt.stats    2    313   5775   2295  2757/2334/151     297/6     8   27   19.79)
(smt.stats    3    414   7373   5913  2801/2568/155     387/10    11   32   19.90)
(smt.stats    4    525   9048   7205  2816/2583/163     522/60    17   43   19.90)
(smt.stats    5    647  13960  10171  2826/2592/163     648/60    17   43   20.00)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  15098  10605  2850/2592/163     760/61    17   43   20.38)
(smt.stats    7    859  17238  12998  3138/2811/163     870/62    17   43   20.29)
(smt.stats    8    981  20946  17249  3170/2934/166     996/68    19   48   20.39)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16 := 9007199254740991&20
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 18 := 9007199254740991&20
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16 := 9007199254740991&32764
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16 := 9007199254740991&32764
ramon: poll                 wall=1.003s usage=0.963s mem=21616KiB load=0.96 rootload=0.95
(smt.stats    9   1115  24246  19872  3200/2936/166    1139/68    19   48   20.49)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16 := 9007199254740991&312
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16 := 9007199254740991&312
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 256 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 256 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 32 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 55 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 48 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 80 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 87 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 86 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 80 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 80 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 80 := 9007199254740991&272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 80 := 9007199254740991&336
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 64 := 9007199254740991&320
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 64 := 9007199254740991&448
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 64 := 9007199254740991&448
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 64 := 9007199254740991&448
(smt.stats   10   1216  27038  23588  3566/3318/240    1446/134    21   66   20.78)
(smt.stats   11   1327  28585  25767  3619/3328/246    1698/142    22   69   20.88)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30422  31267  4005/3687/246    1832/143    22   69   20.88)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 97 := 562949953421311&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 1729382256910270561 := 164060 << 49
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 97 := 562949953421311&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 1729382256910270561 := 164060 << 49
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 97 := 562949953421311&97
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 1729382256910270561 := 164060 << 49
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 96 := 562949953421311&96
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 1729382256910270560 := 164060 << 49
(smt.stats   13   1583  35759  40159  4056/3790/252    2004/195    23   69   20.97)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 96 := 562949953421311&96
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 1729382256910270560 := 164060 << 49
(smt.stats   14   1730  39370  45102  4106/3845/259    2237/258    24   84   20.97)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 1 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 1 := 87970 << 50
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 1 := 87970 << 50
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 1 := 87970 << 50
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 86510 := 87970 << 50
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 562949953421311 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 562949953421311 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 562949953421310 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 562949953421308 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 8 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 16 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 32 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 64 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 128 := 562949953421311&2251799813685248
(smt.stats   15   1831  40938  49022  4227/3984/305    2362/318    26  101   21.54)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 282 := 562949953421311&2251799813685248
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 562949953421311&2251799813685248
band: (band[54] (if (= #120 53) 0 (if #570 1 #720)) (shl[54] (bv2int %0) (+ 54 #723))) 284 := 562949953421311&2251799813685248
(smt.stats   16   1942  42827  52711  4251/3994/305    2506/318    26  101   21.64)
(smt.stats   17   2064  45980  61839  4284/4029/320    2712/347    28  112   21.64)
(smt.stats   18   2198  50672  73255  4330/4067/320    3019/351    28  112   21.64)
(smt.stats   19   2345  54950  82943  4356/4112/321    3316/561    29  114   21.76)
(smt.stats   20   2506  58155  88813  4459/4214/322    3591/603    30  116   21.76)
(smt.stats   21   2607  63751  99682  4466/4221/323    3753/688    31  119   21.76)
ramon: poll                 wall=2.000s usage=1.959s mem=23140KiB load=1.00 rootload=1.00
(smt.stats   22   2718  68685 113029  4520/4224/323    3921/688    31  119   21.86)
(smt.stats   23   2840  69498 114882  4664/4298/323    4084/692    31  119   22.05)
(smt.stats   24   2974  71727 121447  4885/4640/324    4296/734    32  124   22.05)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1125899906842623&32
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1125899906842623&32
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1125899906842623&32
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1125899906842623&32
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 32 := 1125899906842623&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 32 := 196674 << 50
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1125899906842623&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 0 := 196674 << 50
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1125899906842623&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 144115188075855872 := 196674 << 50
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1125899906842623&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 54043195528445952 := 196674 << 50
(smt.stats   25   3121  74908 129509  4968/4691/339    4570/829    33  134   22.05)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 1 := 4503599627370495&7
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2 := 4503599627370495&7
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 3 := 4503599627370495&7
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2 := 4503599627370495&7
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 3 := 4503599627370495&7
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 7 := 4503599627370495&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 7 := 196670 << 52
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 7 := 4503599627370495&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 7 := 196670 << 52
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 7 := 4503599627370495&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 7 := 196670 << 52
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 3 := 4503599627370495&6
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2 := 4503599627370495&6
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 6 := 4503599627370495&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 6 := 196670 << 52
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2 := 4503599627370495&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 2 := 196670 << 52
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2 := 4503599627370495&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 2 := 196670 << 52
(smt.stats   26   3282  78888 139559  5175/4839/351    5017/920    34  143   22.27)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 4 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 4 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 4 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 32 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 128 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 128 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 256 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 512 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 1024 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2048 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 4096 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 8192 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16384 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 32768 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 65536 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 131072 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 131072 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 163840 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 131072 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 65536 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 32768 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 32768 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 32768 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 131072 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 131072 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 131072 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16384 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 1024 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 8192 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2048 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 4096 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 4096 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 4096 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2048 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2048 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 2048 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 262144 := 4503599627370495&9007199254740992
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 262144 := 4503599627370495&9007199254740992
(smt.stats   27   3459  82567 149443  5385/5049/439    5407/1025    35  148   22.67)
(smt.stats   28   3560  84450 157165  5390/5141/446    5794/1080    36  170   22.77)
ramon: poll                 wall=3.000s usage=2.957s mem=24052KiB load=1.00 rootload=0.99
(smt.stats   29   3671  92147 178696  5420/5149/446    5937/1235    37  175   22.87)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793 101517 216732  5420/5171/446    6136/1235    37  175   22.87)
(smt.stats   31   3927 110496 250931  5428/5179/446    6367/1235    37  175   22.87)
(smt.stats   32   4074 113778 263700  5628/5201/450    6667/1427    38  179   23.26)
(smt.stats   33   4235 114712 267125  6062/5406/450    6840/1441    38  179   23.36)
(smt.stats   34   4412 115568 270091  6643/5889/450    7018/1458    38  179   23.47)
ramon: poll                 wall=4.000s usage=3.956s mem=25152KiB load=1.00 rootload=1.00
(smt.stats   35   4606 118488 282220  6972/6566/450    7288/1517    39  191   23.78)
(smt.stats   36   4707 120747 291586  7378/6929/450    7409/1525    39  191   23.87)
(smt.stats   37   4818 123790 303067  7562/7133/451    7673/1612    40  192   24.07)
(smt.stats   38   4940 126669 312783  7632/7325/452    7920/1680    41  193   24.07)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 129769 325589  7821/7396/453    8258/1693    41  193   24.16)
ramon: poll                 wall=5.003s usage=4.956s mem=25588KiB load=1.00 rootload=1.00
(smt.stats   40   5221 132496 336392  8140/7707/454    8598/1881    42  194   24.26)
(smt.stats   41   5382 133520 343794  8557/7941/454    8761/1900    42  194   24.64)
(smt.stats   42   5559 137147 351789  9102/8466/454    9094/1909    42  194   24.64)
(smt.stats   43   5753 138463 357519  9758/8994/454    9294/2060    43  197   24.87)
ramon: poll                 wall=6.000s usage=5.951s mem=26320KiB load=1.00 rootload=0.99
(smt.stats   44   5966 142361 376967 10522/9723/454    9517/2078    43  197   25.01)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16384 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16512 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 16512 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 17024 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 17024 := 9007199254740991&198272
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas          :deletions     )
(smt.stats   45   6067 145152 389261 10825/10396/455    9608/2098    44  207   25.01)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 17024 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 18048 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 18048 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 18048 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 1664 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 1664 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 67200 := 9007199254740991&198272
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 198272 := 9007199254740991&205440
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 198272 := 9007199254740991&205952
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 198272 := 9007199254740991&205952
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 198272 := 9007199254740991&205952
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 198272 := 9007199254740991&206464
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 198272 := 9007199254740991&206464
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 198272 := 9007199254740991&214144
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 198272 := 9007199254740991&214656
(smt.stats   46   6178 148226 413458 11038/10570/465    9946/2113    44  207   25.22)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 214656 := 9007199254740991&222848
(smt.stats   47   6300 151628 422160 11137/10859/496   10175/2179    45  215   25.22)
(smt.stats   48   6434 156131 451663 11148/10877/497   10576/2340    46  219   25.33)
(smt.stats   49   6581 162541 481716 11161/10890/499   10967/2555    47  224   25.33)
(smt.stats   50   6742 168042 509757 11215/10893/499   11329/2556    47  224   25.44)
ramon: poll                 wall=7.003s usage=6.951s mem=27120KiB load=1.00 rootload=1.00
(smt.stats   51   6919 171596 526248 11528/10985/499   11784/2635    48  229   25.63)
(smt.stats   52   7113 176253 552757 11602/11293/501   12353/2636    48  229   25.82)
ramon: poll                 wall=8.000s usage=7.946s mem=27596KiB load=1.00 rootload=1.00
(smt.stats   53   7326 179106 564930 12273/11970/504   12851/2865    49  236   26.11)
(smt.stats   54   7560 189920 605534 12395/12090/510   13860/3060    50  246   26.40)
(smt.stats   55   7661 195442 610670 12399/12101/510   14008/3242    51  257   26.40)
(smt.stats   56   7772 204616 638249 12402/12104/510   14244/3242    51  257   26.40)
(smt.stats   57   7894 209371 652922 12504/12116/511   14544/3290    52  262   26.40)
(smt.stats   58   8028 212869 669864 12564/12266/514   15686/3290    52  262   26.50)
(smt.stats   59   8175 219741 699761 12614/12304/514   16145/3517    53  274   26.64)
ramon: poll                 wall=9.000s usage=8.945s mem=28300KiB load=1.00 rootload=1.00
(smt.stats   60   8336 230013 731069 12728/12398/516   16668/3708    54  275   26.84)
(smt.stats   61   8513 239401 771721 12733/12403/518   17259/3758    55  283   26.84)
(smt.stats   62   8707 247663 798444 12866/12420/518   17839/3767    55  283   27.07)
(smt.stats   63   8920 253428 823607 12953/12566/518   18286/3772    55  283   27.16)
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 14879893168832118784 := 24769797951022268 << 1
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 14879893168832118784 := 24769797951022268 << 1
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 14879893168832118784 := 24769797951022268 << 1
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 18266600088614731776 := 24769797951027992 << 1
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 18248585690105249792 := 24769797951027992 << 1
band: (band[54] (if (or #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745) 0 (if #746 1 #850)) (shl[64] (* 2 #114) (mod #896 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #893 #895) 64)) 17744182531839754240 := 24769797951027992 << 1
(smt.stats   64   9154 258112 839951 13034/12639/519   19133/4097    56  285   27.36)
ramon: poll                 wall=10.000s usage=9.943s mem=29148KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9411 264484 876098 13117/12763/527   20178/4282    57  290   27.68)
(smt.stats   66   9512 267288 895608 13133/12778/528   20439/4394    58  307   27.68)
(smt.stats   67   9623 272948 922417 13171/12778/528   20669/4394    58  307   27.87)
(smt.stats   68   9745 278487 938751 13337/12851/528   21171/4400    58  307   27.87)
ramon: poll                 wall=11.000s usage=10.941s mem=29532KiB load=1.00 rootload=0.99
(smt.stats   69   9879 284391 961894 13442/13005/528   21715/4401    58  307   27.97)
(smt.delete-inactive-clauses  :num-deleted-clauses 626)
(smt.stats   70  10026 289946 999631 13479/13095/530   21530/4592    59  319   28.06)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   71  10187 293771 1016445 13764/13406/532   22062/4593    59  319   28.17)
(smt.stats   72  10364 299866 1054660 14001/13406/532   22551/4722    60  355   28.26)
ramon: poll                 wall=12.000s usage=11.940s mem=30020KiB load=1.00 rootload=1.00
(smt.stats   73  10558 304643 1079199 14055/13654/533   23186/4766    61  357   28.36)
(smt.stats   74  10771 313202 1117768 14145/13720/533   23498/4767    61  357   28.65)
(smt.stats   75  11005 319701 1138003 14245/13816/533   24144/4771    61  357   28.84)
ramon: poll                 wall=13.000s usage=12.938s mem=30552KiB load=1.00 rootload=1.00
(smt.stats   76  11262 332854 1229709 14294/13927/536   24886/5052    62  375   28.93)
(smt.stats   77  11544 342003 1276344 14367/13944/536   25623/5059    62  375   29.03)
(smt.stats   78  11645 345000 1293975 14429/14032/536   25822/5060    62  375   29.13)
(smt.stats   79  11756 345915 1302730 14678/14084/536   25998/5063    62  375   29.13)
(smt.stats   80  11878 347119 1310557 14752/14343/536   26127/5064    62  375   29.13)
(smt.stats   81  12012 349187 1330079 14792/14412/536   26506/5065    62  375   29.13)
ramon: poll                 wall=14.000s usage=13.937s mem=30876KiB load=1.00 rootload=1.00
(smt.stats   82  12159 358263 1381867 14798/14428/536   26769/5065    62  375   29.23)
(smt.stats   83  12320 372491 1527849 14799/14429/536   26929/5065    62  375   29.23)
(smt.stats   84  12497 381340 1589570 14800/14430/536   27486/5065    62  375   29.42)
(smt.stats   85  12691 389203 1608180 14824/14436/536   27941/5067    62  375   29.52)
ramon: poll                 wall=15.000s usage=14.935s mem=31060KiB load=1.00 rootload=0.99
(smt.stats   86  12904 401366 1702841 14843/14465/536   28555/5067    62  375   29.52)
(smt.stats   87  13138 410685 1754384 14961/14479/536   30051/5073    62  375   29.71)
ramon: poll                 wall=16.000s usage=15.933s mem=31440KiB load=1.00 rootload=1.00
(smt.stats   88  13395 421440 1814784 15342/14634/536   30936/5080    62  375   29.90)
(smt.stats   89  13677 429913 1848967 15451/15030/538   31921/5963    63  398   30.00)
ramon: poll                 wall=17.000s usage=16.932s mem=31904KiB load=1.00 rootload=1.00
(smt.stats   90  13987 441527 1892861 15667/15127/538   33612/5964    63  398   30.40)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   91  14088 444788 1914861 15677/15307/538   34572/5964    63  398   30.40)
(smt.stats   92  14199 449507 1938470 15738/15312/538   35020/5964    63  398   30.50)
ramon: poll                 wall=18.000s usage=17.930s mem=32384KiB load=1.00 rootload=1.00
(smt.stats   93  14321 455804 1984497 15836/15374/538   35432/5971    63  398   30.59)
(smt.stats   94  14455 459282 2010697 15962/15477/538   36041/5973    63  398   30.69)
(smt.stats   95  14602 464634 2053716 15984/15613/539   36634/6711    64  399   30.69)
(smt.stats   96  14763 470057 2107052 16010/15640/543   37148/6711    64  399   30.79)
ramon: poll                 wall=19.003s usage=18.931s mem=32576KiB load=1.00 rootload=1.00
(smt.stats   97  14940 478206 2155850 16052/15644/543   37647/6853    65  492   30.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 1695)
(smt.stats   98  15134 488186 2236585 16058/15689/543   36700/6853    65  492   30.88)
(smt.stats   99  15347 497230 2284951 16104/15696/543   37394/6856    65  492   30.98)
ramon: poll                 wall=20.000s usage=19.927s mem=32760KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 18:57:35 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.971s
ramon: group.utime          19.951s
ramon: group.stime          0.020s
ramon: group.mempeak        33020KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.045s
ramon: loadavg              1.00
