ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:59:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27485 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/jqWzrubiQ2FT.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             904749
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   2938    931  1064/958/101      89/7     7   16   51.85)
(smt.stats    1    202   4695   2281  1467/1320/103     184/14     9   17   51.95)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   108.696     10000        49          0            1        2)
(smt.stats    2    313   6709   3642  1642/1399/103     323/22     9   17   52.05)
(sat.ddfw       1      1   54.0595     20001        98          1            1        3)
(smt.stats    3    414   8952   4784  1697/1512/103     437/24     9   17   52.14)
(smt.stats    4    525  11151   6055  1947/1773/106     551/34    10   18   52.27)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719476736 := 0 << 27
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719476736 := 0 << 27
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719476736 := 0 << 27
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 257 := 256 << 28
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&68182605825
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 18446744073172680705 := 137438953468 << 27
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 68719476735 := 256 << 28
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&68451041280
band: (band[36] (if (or #562 #563) 0 (if #564 1 #657)) (shl[36] (bv2int %0) (+ 36 #659))) 1 := 42052238&68451041280
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 42052238&68451041280
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 42052238&68451041280
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 42052238&68451041280
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 68451041025 := 256 << 28
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 268435456 := 256 << 28
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 8 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 16 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 32 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 64 := 42052238&268435456
(smt.stats    5    647  11866   6988  2143/1808/133     736/40    11   25   52.67)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1040 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1001 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1000 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1000 := 42052238&268435456
(sat.ddfw       1      1   54.7945     40001       196          2            1        5)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 232 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 232 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 232 := 42052238&268435456
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  12909   8778  2252/2070/179     997/114    13   41   52.96)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 232 := 42052238&2147483648
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 228 := 42052238&11542724608
(smt.stats    7    859  14370  15933  2467/2282/184    1212/150    14   51   52.96)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 544 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 772 := 5256529&7247757316
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757331
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757568
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757568
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757571
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757568
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1152 := 5256529&7247757552
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757552
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757536
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757312
(smt.stats    8    981  17066  22455  2576/2299/186    1488/188    16   57   53.15)
(sat.ddfw       1      1   47.0958     70001       343          3            1        8)
(smt.stats    9   1115  19993  31036  2860/2647/235    1736/298    18   68   53.26)
(smt.stats   10   1216  22191  35537  2883/2666/235    1845/336    19   74   53.26)
(smt.stats   11   1327  25777  41343  2920/2704/237    1955/355    21   79   53.36)
ramon: poll                 wall=1.004s usage=0.945s mem=55768KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   39.8406    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27183  43667  3009/2714/237    2091/358    21   79   53.45)
(smt.stats   13   1583  29397  50771  3161/2935/245    2326/399    22   85   53.55)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274289152
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274289152
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11542723072
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11542722560
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274289216
(smt.stats   14   1730  30817  54833  3225/2954/245    2497/471    23   94   53.74)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274302209
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301827
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301842
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301698
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301890
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301810
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2400 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 8544 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 4432 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2368 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2368 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2368 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 12608 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 12608 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 33088 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 37184 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 69952 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 69952 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 69952 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 16832 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 16704 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 20800 := 1345671621&11274302274
(smt.stats   15   1831  31842  60424  3695/3376/281    3077/494    24   95   53.96)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 266560 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 135488 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 143680 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 135488 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 135488 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 135488 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 266560 := 1345671621&11274302274
(sat.ddfw       1      1   34.3872    160000       784          5            1       17)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 266560 := 1345671621&11006783810
(smt.stats   16   1942  33418  68403  3889/3677/363    3406/803    26  120   54.20)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1410
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1425
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1459
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 1459 := 1620 << 12
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1459
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 1459 := 1620 << 12
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1459
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719478195 := 68719478196 << 12
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1459
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719478195 := 68719478196 << 12
(smt.stats   17   2064  36319  76461  3963/3748/375    3821/933    27  125   54.29)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&283
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 649 := 5133&131355
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 777 := 5133&131355
(smt.stats   18   2198  41163 102129  4075/3770/378    4120/942    27  125   54.53)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 777 := 5133&131339
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 777 := 5133&131339
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2057 := 5133&131339
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2057 := 5133&131339
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2057 := 5133&131339
ramon: poll                 wall=2.000s usage=1.863s mem=56928KiB load=0.92 rootload=0.92
(smt.stats   19   2345  45647 120219  4292/4066/395    4623/1056    29  156   54.63)
(sat.ddfw       1      1   30.0005    220001      1078          6            1       23)
(smt.stats   20   2506  49493 140869  4334/4120/409    5438/1523    31  166   54.72)
(smt.stats   21   2607  52522 159422  4425/4128/409    5630/1528    31  166   54.82)
(smt.stats   22   2718  54578 175816  4551/4252/409    5780/1613    32  215   54.82)
(smt.stats   23   2840  58260 201078  4636/4360/409    6020/1613    32  215   54.82)
(sat.ddfw       1      1   27.5699    290001      1421          7            1       30)
(smt.stats   24   2974  61255 216741  4713/4495/411    6311/1773    33  227   54.91)
(smt.stats   25   3121  64903 244725  4770/4527/411    6548/1778    33  227   55.05)
ramon: poll                 wall=3.000s usage=2.909s mem=57420KiB load=1.05 rootload=1.04
(smt.stats   26   3282  67591 267107  4796/4583/413    6863/1915    34  234   55.05)
(smt.stats   27   3459  71165 291324  4834/4621/414    7079/2138    36  243   55.21)
(smt.stats   28   3560  72732 306216  4857/4641/415    7220/2137    37  258   55.21)
(sat.ddfw       1      1   24.5324    370001      1813          8            1       38)
(smt.stats   29   3671  74662 316150  4940/4669/418    7379/2144    37  258   55.21)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 137438953470 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 137438953470 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 137438953470 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 536871426 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 50332160 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 31 := 0 << 4
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 4
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 4
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 4
(smt.stats   30   3793  76343 330437  5030/4747/418    7533/2175    38  269   55.69)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 0&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 1
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 0&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 1
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 0&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 1
(smt.stats   31   3927  77839 339069  5152/4879/435    7670/2196    39  275   55.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074  79393 352195  5216/4961/443    7906/2197    39  275   55.88)
(sat.ddfw       1      1   23.4742    460001      2254          9            1       47)
ramon: poll                 wall=4.000s usage=4.053s mem=58340KiB load=1.14 rootload=1.15
(smt.stats   33   4235  84303 388489  5266/4977/443    8662/2204    40  332   56.08)
(smt.stats   34   4412  87595 420261  5281/5033/445    9080/2436    41  333   56.18)
(smt.stats   35   4606  91521 432943  5375/5049/445    9412/2456    42  333   56.18)
(sat.ddfw       1      1   21.5285    560001      2745         10            1       57)
(smt.stats   36   4707  94268 445593  5576/5176/445    9581/2457    42  333   56.54)
ramon: poll                 wall=5.000s usage=5.074s mem=58572KiB load=1.02 rootload=1.02
(smt.stats   37   4818  97334 464960  5612/5338/445    9784/2457    42  333   56.54)
(smt.stats   38   4940  99064 483473  5621/5371/445   10081/2457    42  333   56.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 89)
(smt.stats   39   5074 100824 502625  5641/5382/445   10536/2457    42  333   56.64)
(smt.stats   40   5221 109076 559537  5660/5406/445   10988/2457    42  333   56.73)
(sat.ddfw       1      1   19.7913    670001      3284         11            1       68)
(smt.stats   41   5382 115083 599804  5760/5429/445   11666/2458    42  333   56.83)
ramon: poll                 wall=6.000s usage=6.118s mem=59104KiB load=1.04 rootload=1.04
(smt.stats   42   5559 119223 630886  5846/5576/461   13196/2879    43  349   57.12)
(smt.stats   43   5753 122906 659896  5846/5584/462   13413/3113    44  352   57.21)
(sat.ddfw       1      1    18.037    790001      3872         12            1       80)
(smt.stats   44   5966 127564 695209  5911/5590/462   13802/3118    44  352   57.31)
ramon: poll                 wall=7.000s usage=7.118s mem=59640KiB load=1.00 rootload=1.00
(smt.stats   45   6067 129581 713521  5927/5663/463   13971/3270    45  356   57.31)
(smt.stats   46   6178 130904 739223  5929/5665/463   14125/3270    45  356   57.41)
(smt.stats   47   6300 132660 760911  5930/5666/463   14256/3270    45  356   57.41)
(smt.stats   48   6434 134031 785023  5962/5688/463   14541/3270    45  356   57.50)
(smt.stats   49   6581 140772 812320  5995/5718/469   14700/3322    46  368   57.86)
(smt.stats   50   6742 149579 862740  6003/5726/469   15594/3322    46  368   58.05)
(sat.ddfw       1      1   16.5922    920001      4509         13            1       93)
ramon: poll                 wall=8.000s usage=8.120s mem=60224KiB load=1.00 rootload=1.00
(smt.stats   51   6919 165884 955616  6009/5732/469   16366/3322    46  368   58.15)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 170870 978659  6338/5738/470   16899/3578    47  370   58.34)
ramon: poll                 wall=9.000s usage=9.118s mem=60532KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.3711   1060001      5196         14            1      108)
(smt.stats   53   7326 175939 1019734  7011/6165/470   17700/3581    47  370   58.53)
ramon: poll                 wall=10.000s usage=10.119s mem=60948KiB load=1.00 rootload=1.00
(smt.stats   54   7560 180790 1064392  7273/6771/470   18883/3584    47  370   58.82)
(sat.ddfw       1      1    14.328   1210001      5931         15            1      123)
(smt.stats   55   7661 184738 1092033  7359/7001/470   19668/3584    47  370   58.82)
(smt.stats   56   7772 187037 1106325  7391/7094/470   19814/3584    47  370   58.92)
ramon: poll                 wall=11.000s usage=11.116s mem=61476KiB load=1.00 rootload=1.00
(smt.stats   57   7894 191344 1143359  7531/7116/470   20209/3586    47  370   58.92)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8028 194934 1165166  7620/7310/470   21509/3586    47  370   59.11)
(smt.stats   59   8175 202368 1245926  7643/7364/471   22250/4208    48  381   59.20)
(sat.ddfw       1      1   13.4409   1370001      6715         16            1      139)
ramon: poll                 wall=12.004s usage=12.122s mem=61624KiB load=1.00 rootload=1.00
(smt.stats   60   8336 206538 1273989  7855/7371/471   22895/4209    48  381   59.30)
(smt.stats   61   8513 211435 1317451  8160/7726/471   23330/4210    48  381   59.95)
(smt.stats   62   8707 222372 1443589  8180/7903/471   23852/4210    48  381   59.95)
ramon: poll                 wall=13.000s usage=13.117s mem=62468KiB load=1.00 rootload=1.00
(smt.stats   63   8920 226514 1478088  8641/7907/471   24570/4214    48  381   60.14)
(sat.ddfw       1      1   12.6526   1540001      7549         17            1      156)
(smt.stats   64   9154 232611 1538471  8761/8371/471   25676/4215    48  381   60.46)
ramon: poll                 wall=14.000s usage=14.117s mem=62580KiB load=1.00 rootload=1.00
(smt.stats   65   9411 240639 1637219  8893/8513/471   26418/4216    48  381   60.46)
(smt.stats   66   9512 242261 1652710  8908/8631/471   27989/4216    48  381   60.63)
ramon: poll                 wall=15.004s usage=15.060s mem=62884KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   11.9538   1720001      8431         18            1      174)
(smt.stats   67   9623 247437 1701932  8915/8638/471   29632/4216    48  381   60.82)
(smt.stats   68   9745 257615 1780768  8922/8645/471   31056/4216    48  381   60.91)
ramon: poll                 wall=16.004s usage=16.055s mem=63212KiB load=0.99 rootload=1.00
(smt.stats   69   9879 269568 1899616  8927/8650/471   31911/4216    48  381   61.01)
(smt.delete-inactive-clauses  :num-deleted-clauses 232)
(smt.stats   70  10026 275580 1974026  8973/8681/471   32471/4217    48  381   61.10)
(sat.ddfw       1      1   11.3446   1910001      9362         19            1      193)
(smt.stats   71  10187 279861 2038707  8979/8702/471   32810/4217    48  381   61.10)
ramon: poll                 wall=17.000s usage=17.049s mem=63736KiB load=1.00 rootload=0.99
(smt.stats   72  10364 283706 2093214  8995/8705/472   33780/6434    49  381   61.20)
(smt.stats   73  10558 289029 2147034  9006/8726/472   34669/6435    49  381   61.39)
(smt.stats   74  10771 295510 2211735  9143/8848/473   36115/6923    50  383   61.89)
ramon: poll                 wall=18.000s usage=18.049s mem=64596KiB load=1.00 rootload=1.00
(smt.stats   75  11005 299315 2270627  9153/8858/474   37443/6923    50  383   61.98)
(sat.ddfw       1      1   10.7875   2110001     10343         20            1      214)
ramon: poll                 wall=19.004s usage=19.056s mem=64796KiB load=1.00 rootload=1.01
(smt.stats   76  11262 313755 2457545  9155/8860/474   38338/6923    50  383   63.07)
(smt.stats   77  11544 322222 2570644  9171/8876/476   39302/7512    52  419   63.29)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11645 326172 2593767  9300/8982/477   39769/7514    52  419   63.29)
ramon: poll                 wall=20.000s usage=20.052s mem=65552KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 23:00:10 2024
ramon: root.execname        z3
ramon: root.utime           20.110s
ramon: root.stime           0.000s
ramon: group.total          20.114s
ramon: group.utime          20.110s
ramon: group.stime          0.004s
ramon: group.mempeak        65808KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.066s
ramon: loadavg              1.00
