ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:17:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41220 MiB
ramon: sys.mem.avail        61383 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/BeFmThvth4YV.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3731973
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   126/126     0/0  63       0    18.24   0.00)
(sat.stats    160   1913    0   128/128   160/68  63       0    18.55   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 626 :time 0.00)
(sat.stats    160   1913    0   126/126   160/68  69       0    18.55   0.01)
(sat.stats    160   1913    0   126/126   160/68  69       0    18.55   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 6 :time 0.00)
 (sat-probing :cost 405818.55 :time 0.00)
(sat.stats    160   1913    0   132/132   113/64  69       0    18.55   0.01)
(sat.stats    219   2646    1   132/132   172/102  69       0    18.55   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    225   2791    2   132/132   178/103  69       0    18.55   0.01)
(sat.stats    229   2855    3   132/132   182/104  69       0    18.64   0.01)
(sat.stats    232   2911    4   132/132   185/104  69       0    18.64   0.01)
(sat.stats    235   2979    5   132/132   188/104  69       0    18.64   0.01)
(sat.stats    238   3056    6   137/137   191/105  69       0    19.02   0.03)
(sat.stats    241   3096    7   143/143   194/106  69       0    19.02   0.03)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1061 :time 0.00)
(sat.stats    282   3588    8   146/146   232/126  73       0    19.01   0.03)
 (sat-cleaner :elim-literals 9 :elim-clauses 0 :cost 1252 :time 0.00)
(sat.stats    286   3622    9   151/150   230/122  75       0    19.01   0.04)
lshr: (lshr[29] (bv2int %0) (mod (bv2int %1) 29)) 0 := 1 >>l 20
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 0&536870400
lshr: (lshr[32] (* 8 (bv2int %0)) (mod (+ 3 #54 #204) 32)) 3758096385 := 8 >>l 23
(sat.stats    289   3764   10   159/157   233/123  75       0    19.12   0.04)
(sat.stats    292   3878   11   171/168   235/123  87       0    19.11   0.04)
(sat.stats    296   3959   12   174/171   239/126  88       0    19.11   0.04)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 1312 :time 0.00)
(sat.stats    299   3998   13   166/163   241/128  88       0    19.11   0.04)
(sat.stats    317   4376   14   166/163   258/141  89       0    19.11   0.05)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1495 :time 0.00)
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 1 := 1&536870400
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1991 :time 0.00)
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 378 := 466&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 468 := 468&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 472 := 472&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 464 := 471&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 448 := 470&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 416 := 469&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 384 := 469&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 288 := 383&536870400
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 2390 :time 0.00)
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 256 := 383&536870400
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2657 :time 0.00)
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 473&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 108 := 473&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 476&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 100 := 476&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 476&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 59 := 476&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 477&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 419 := 477&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 477&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 104 := 477&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 477&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 16 := 477&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 477&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 34 := 477&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 477&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 32 := 477&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 477&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 128 := 477&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 477&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 64 := 477&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 477&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 256 := 477&536870400
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 3332 :time 0.00)
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 503&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 2 := 503&536870400
band: (band[29] (lshr[29] (bv2int %0) (mod #54 29)) (if (= #301 28) 72057593769492480 (if #303 36028796884746240 #357))) 0 := 487&536870400
band: (band[29] (lshr[32] (* 8 #65) (mod #205 32)) (if (= #380 31) 1152921500311879680 (if #382 576460750155939840 #442))) 32 := 487&536870400
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin       :units         :memory       )
(sat.stats    511   6981   41  2704/2700   486/228 213       0    20.57   0.13)
(sat.stats   1200   8502   44 54343/54339  1178/231 213       0    36.01   0.56)
(sat.stats   1204   8504   45 54484/54480  1182/231 213       0    36.01   0.56)
ramon: poll                 wall=1.002s usage=0.906s mem=50628KiB load=0.90 rootload=0.87
ramon: poll                 wall=2.000s usage=1.901s mem=61288KiB load=1.00 rootload=0.98
ramon: poll                 wall=3.000s usage=2.901s mem=84832KiB load=1.00 rootload=0.98
ramon: poll                 wall=4.000s usage=3.901s mem=92136KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.901s mem=97512KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.900s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.900s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=8.002s usage=7.904s mem=105MiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.900s mem=143MiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.900s mem=145MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.900s mem=148MiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.899s mem=152MiB load=1.00 rootload=1.00
(sat.stats   4024  14178   53 267776/267772  3991/231 213       0   154.62  11.90)
(sat.stats   4027  14190   54 267942/267938  3992/231 213       0   154.65  11.92)
(sat.stats   4032  14191   55 268118/268114  3995/231 213       0   154.65  11.94)
ramon: poll                 wall=13.000s usage=12.899s mem=156MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.899s mem=158MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.898s mem=160MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.002s usage=15.902s mem=162MiB load=1.00 rootload=1.01
ramon: poll                 wall=17.000s usage=16.898s mem=164MiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.897s mem=166MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.897s mem=168MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.897s mem=170MiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts          :learned/bin         :gc         :time )
(sat.stats      :decisions   :clauses/bin           :units        :memory        )
(sat.stats   5395  16524  369 340339/340335  4716/231 213       0   171.38  19.96)
ramon: end                  Wed Dec 25 15:17:36 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.110s
ramon: group.total          20.008s
ramon: group.utime          19.892s
ramon: group.stime          0.116s
ramon: group.mempeak        175MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.109s
ramon: loadavg              0.99
