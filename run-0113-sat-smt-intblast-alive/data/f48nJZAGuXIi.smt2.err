ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:20:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40142 MiB
ramon: sys.mem.avail        61378 MiB
ramon: sys.nprocs           1324
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/f48nJZAGuXIi.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3921830
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   208/208     0/0  64       0    18.51   0.00)
(sat.stats    101    531    0   208/208   101/32  64       0    18.72   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 510 :time 0.00)
(sat.stats    101    531    0   208/208   101/32  64       0    18.72   0.00)
(sat.stats    101    531    0   208/208   101/32  64       0    18.72   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 359818.81 :time 0.00)
(sat.stats    101    531    0   210/210    57/31  64       0    18.81   0.00)
(sat.stats    105    548    1   210/210    61/35  64       0    18.81   0.00)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    108    576    2   210/210    64/38  64       0    18.81   0.00)
(sat.stats    111    619    3   210/210    67/41  64       0    18.81   0.00)
(sat.stats    114    678    4   210/210    70/44  64       0    18.81   0.01)
(sat.stats    117    751    5   210/210    73/47  64       0    18.81   0.01)
(sat.stats    120    821    6   210/210    76/48  64       0    18.81   0.01)
(sat.stats    123    871    7   210/210    79/48  64       0    18.81   0.01)
(sat.stats    126    921    8   210/210    82/48  64       0    18.81   0.01)
(sat.stats    129    975    9   210/210    85/48  64       0    18.81   0.01)
(sat.stats    132   1034   10   210/210    88/48  64       0    18.81   0.01)
(sat.stats    135   1122   11   210/210    91/49  64       0    18.81   0.01)
(sat.stats    143   1405   13   210/210    99/53  64       0    18.81   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    394   5640   24   210/210   350/240  64       0    19.04   0.03)
(sat.stats    397   5686   25   210/210   353/242  64       0    19.04   0.03)
(sat.stats    475   8023   26   210/210   431/276  64       0    19.04   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3149 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3589 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3654 :time 0.00)
lshr: (lshr[38] (bv2int %0) (+ 38 (* 274877906943 #49))) 0 := 176 >>l 14
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 0&69541560320
lshr: (lshr[64] (mod (div #51 2) 137438953472) (mod (+ 37 #662 #664) 64)) 274877906943 := 88 >>l 13
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 1 := 1&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 1&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 1 := 69541560320&1
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 3&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 2 := 69541560320&3
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 4&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 4 := 69541560320&4
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 4 := 8&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 8&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 8 := 69541560320&8
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 2 := 16&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 2 := 18&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 18&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 16 := 69541560320&18
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 32&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 32 := 69541560320&32
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 64&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 64 := 69541560320&64
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 128&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 128 := 69541560320&128
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 256&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 256 := 69541560320&256
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 512&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 512 := 69541560320&512
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 1024&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 1024 := 69541560320&1024
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 2048&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 2048 := 69541560320&2048
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 4096&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 4096 := 69541560320&4096
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 8193&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 8192 := 69541560320&8193
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16458&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 16384 := 69541560320&16458
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 5686 :time 0.00)
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16777215&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 32768 := 69541560320&16777215
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16777215&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 14942208 := 69541560320&16777215
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16777215&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 65536 := 69541560320&16777215
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16777215&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 131072 := 69541560320&16777215
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16777215&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 14155776 := 69541560320&16777215
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16777215&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 4194304 := 69541560320&16777215
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16777215&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 1048576 := 69541560320&16777215
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16777215&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 2097152 := 69541560320&16777215
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 0 := 16777215&69541560320
band: (band[38] (if (= #531 63) 1255502142897799085683126566912 (if #533 627751071448899542841563283456 #657)) (lshr[64] (mod #426 137438953472) (mod #665 64))) 8388608 := 69541560320&16777215
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 4 := 7&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 8 := 10&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 16 := 16&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 32 := 32&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 64 := 64&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 128 := 128&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 256 := 256&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 512 := 512&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 1024 := 1025&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 2048 := 2048&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 4096 := 4097&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 8192 := 8192&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 16384 := 16384&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 32768 := 32768&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 65536 := 65542&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 131072 := 131110&69541560320
band: (band[38] (lshr[38] (bv2int %0) (+ 38 #444)) (if (= #50 37) 18708439810541258539008 (if #448 9354219905270629269504 #520))) 262144 := 262191&69541560320
(sat.stats    947  23411   54  5455/5452  1010/518 206       0    22.82   0.49)
(sat.stats   1065  24242   93  8194/8191  1227/617 206       0    23.69   0.53)
ramon: poll                 wall=1.000s usage=0.913s mem=27788KiB load=0.91 rootload=0.88
(sat.stats   1599  40825  222 24159/24156  2269/1125 206       0    29.08   1.36)
ramon: poll                 wall=2.000s usage=1.913s mem=32760KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units         :memory       )
(sat.stats   2396  63045  362 45111/45108  3975/2034 206       0    36.35   2.89)
ramon: poll                 wall=3.002s usage=2.913s mem=36984KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.002s usage=3.913s mem=40068KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.910s mem=42364KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.910s mem=52548KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.909s mem=55800KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.002s usage=7.909s mem=57848KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.002s usage=8.908s mem=58940KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.905s mem=60260KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.905s mem=61628KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.905s mem=62760KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.006s usage=12.909s mem=63996KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.903s mem=66188KiB load=1.00 rootload=1.01
ramon: poll                 wall=15.000s usage=14.903s mem=66752KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.902s mem=67808KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.902s mem=68684KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.902s mem=70540KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.902s mem=70792KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.902s mem=71568KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:21:19 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.040s
ramon: group.total          19.993s
ramon: group.utime          19.949s
ramon: group.stime          0.044s
ramon: group.mempeak        71824KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.092s
ramon: loadavg              1.00
