ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:04:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24644 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rXRP5MO1Z24S.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             165773
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4142    429  1174/1062/97      92/24     5   17   19.37)
(smt.stats    1    202   4612    925  2507/2193/97     250/48     5   17   19.66)
(smt.stats    2    313   5066   1365  2660/2396/97     397/58     5   17   19.95)
(smt.stats    3    414   5642   2691  3085/2861/100     567/206     6   18   19.85)
(smt.stats    4    525   6921   4938  3151/2919/103     704/245     8   26   19.85)
(smt.stats    5    647  10997   8444  3207/2971/104     830/255     9   26   19.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14637  11866  3253/2999/104     940/262    10   27   20.11)
(smt.stats    7    859  17090  14218  3322/3086/105    1052/300    11   28   20.11)
(smt.stats    8    981  18787  17806  3354/3115/113    1174/312    12   33   20.23)
ramon: poll                 wall=1.000s usage=0.999s mem=21396KiB load=1.00 rootload=0.99
(smt.stats    9   1115  20875  23076  3407/3123/114    1294/318    13   51   20.23)
(smt.stats   10   1216  23857  27081  3455/3187/115    1391/324    14   56   20.32)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1056 := 248682535433058&272666918239166
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1056 := 248682535433058&272666918239166
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1053 := 248682535433058&272666918239169
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 16 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 32 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 20 := 248682535433058&272666918239166
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 20 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 16 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 32 := 248682535433058&272666918239166
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 32 := 248682535433058&272666918239169
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 128 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918239744
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239424
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239232
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239296
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918240320
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239744
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239296
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239296
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918239296
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918248512
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918248512
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918240320
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 64 := 248682535433058&272666918256704
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 33 := 248682535433058&272666918387712
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 32 := 248682535433058&272666918387712
(smt.stats   11   1327  25331  29621  3628/3229/115    1550/338    14   56   20.72)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918322176
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918256640
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918273024
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918256640
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918322176
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918339072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918339072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918260224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918257152
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666918388224
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938311168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938311168
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938638848
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938376704
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938573312
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938330624
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938835456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938835456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 248682535433058&272666938835456
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  27640  38680  3774/3533/326    1808/424    16  101   21.01)
(smt.stats   13   1583  30881  47632  3812/3544/327    2139/447    17  112   21.11)
(smt.stats   14   1730  34525  57971  3967/3592/327    2421/450    17  112   21.21)
(smt.stats   15   1831  37104  63925  4089/3751/327    2599/450    17  112   21.60)
(smt.stats   16   1942  39269  71070  4230/3990/330    2803/693    18  113   21.60)
(smt.stats   17   2064  41644  79105  4256/4003/332    3026/747    19  118   21.74)
(smt.stats   18   2198  42859  88620  4623/4101/333    3237/824    20  123   21.84)
(smt.stats   19   2345  43398  92495  4792/4514/333    3431/863    21  124   22.14)
ramon: poll                 wall=2.000s usage=1.999s mem=23652KiB load=1.00 rootload=0.99
(smt.stats   20   2506  44096  97386  5630/5280/334    3721/863    21  124   22.38)
(smt.stats   21   2607  44731 102995  5981/5677/334    3882/916    22  125   22.38)
(smt.stats   22   2718  45386 109009  6178/5883/334    4030/916    22  125   22.52)
(smt.stats   23   2840  46110 115520  6527/6160/334    4167/916    22  125   22.61)
(smt.stats   24   2974  46533 117295  6754/6464/334    4334/916    22  125   22.81)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3121  51061 141808  7140/6878/335    5174/1143    23  128   22.90)
(smt.stats   26   3282  55798 156970  7211/6886/335    5918/1144    23  128   23.09)
ramon: poll                 wall=3.000s usage=2.999s mem=24656KiB load=1.00 rootload=1.00
(smt.stats   27   3459  60660 168871  7259/6959/335    6197/1145    23  128   23.19)
(smt.stats   28   3560  63624 178861  7278/7004/335    6609/1147    23  128   23.19)
(smt.stats   29   3671  67477 193171  7306/7044/338    7060/1561    24  130   23.39)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 12 := 31085316929132&67108864
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 12 := 31085316929132&3145728
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 12 := 31085316929132&3145728
(smt.stats   30   3793  70834 219878  7406/7049/338    7303/1567    24  130   23.48)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 31085316929132&5267456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 31085316929132&5267456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 31085316929132&5267456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 8 := 31085316929132&5267456
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 128 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 256 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 16 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 16 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&5251072
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&3153920
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&3153920
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1024 := 31085316929132&3170304
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 2 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 262144 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 270336 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 532480 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1056768 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1056768 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 385024 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 270336 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 270336 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 24576 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 40960 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 73728 := 31085316929132&2105344
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 40960 := 31085316929132&2105344
(smt.stats   31   3927  73721 259952  7615/7273/361    7643/1737    26  160   23.72)
(smt.stats   32   4074  75828 268112  7773/7349/401    8041/1748    27  168   23.91)
ramon: poll                 wall=4.000s usage=3.999s mem=25568KiB load=1.00 rootload=0.99
(smt.stats   33   4235  76804 276421  8186/7578/401    8341/1750    27  168   24.15)
(smt.stats   34   4412  78328 292583  8534/7951/401    8752/1827    28  168   24.44)
(smt.stats   35   4606  80584 301879  9009/8426/403    9756/1976    29  169   24.44)
ramon: poll                 wall=5.000s usage=4.998s mem=26032KiB load=1.00 rootload=1.00
(smt.stats   36   4707  82986 337534  9253/8823/404   10068/1980    29  169   24.55)
(smt.stats   37   4818  84444 354003  9461/9051/404   10606/2212    30  173   24.64)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4358144 := 248682535433058&217597224255715
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4358144 := 248682535433058&217597224255587
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4358144 := 248682535433058&217597224255595
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 4358144 := 248682535433058&217597224255593
(smt.stats   38   4940  86846 389703  9817/9539/405   12053/2381    31  173   24.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   39   5074  90964 403011  9873/9573/416   12969/2382    31  173   25.03)
(smt.stats   40   5221  97004 433312 10098/9633/416   14063/2750    32  179   25.42)
ramon: poll                 wall=6.000s usage=5.998s mem=27252KiB load=1.00 rootload=1.00
(smt.stats   41   5382 100437 452235 10304/9860/416   14839/2753    32  179   25.61)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   42   5559 106636 473022 10466/10067/416   16832/2761    32  179   25.88)
ramon: poll                 wall=7.000s usage=6.998s mem=27728KiB load=1.00 rootload=1.00
(smt.stats   43   5753 108871 490914 11228/10287/416   17488/2765    32  179   26.20)
(smt.stats   44   5966 113835 550208 11704/11009/416   18716/2784    32  179   26.58)
(smt.stats   45   6067 117249 575073 11766/11490/416   19566/2785    32  179   26.58)
ramon: poll                 wall=8.000s usage=7.998s mem=28240KiB load=1.00 rootload=1.00
(smt.stats   46   6178 122554 603182 11840/11512/416   20644/2796    32  179   26.68)
(smt.stats   47   6300 126387 614311 11946/11631/416   20993/2806    32  179   26.78)
(smt.stats   48   6434 126810 615720 12069/11805/416   21145/2810    32  179   27.25)
(smt.stats   49   6581 131094 625994 12779/12446/416   21519/2813    32  179   27.06)
ramon: poll                 wall=9.000s usage=8.998s mem=29008KiB load=1.00 rootload=1.00
(smt.stats   50   6742 136094 647878 13017/12610/417   21919/4283    33  182   27.15)
(smt.stats   51   6919 140656 666186 13304/12785/417   22361/4297    33  182   27.25)
(smt.stats   52   7113 144805 680620 13564/13112/417   23191/4305    33  182   27.34)
(smt.stats   53   7326 145530 684014 14004/13488/417   23525/4323    33  182   27.53)
ramon: poll                 wall=10.000s usage=9.996s mem=29156KiB load=1.00 rootload=1.00
(smt.stats   54   7560 147042 687400 14368/14071/417   23762/4325    33  182   28.41)
(smt.stats   55   7661 148620 693787 15466/15079/417   23891/4327    33  182   28.12)
ramon: poll                 wall=11.000s usage=10.996s mem=30180KiB load=1.00 rootload=1.00
(smt.stats   56   7772 153314 721650 15630/15271/417   24058/4328    33  182   28.12)
(smt.stats   57   7894 155843 738663 15812/15449/417   24212/4333    33  182   28.32)
(smt.stats   58   8028 160046 772742 16298/15922/417   24607/4342    33  182   28.32)
(smt.stats   59   8175 163200 795972 16497/16125/417   24765/4353    33  182   28.32)
(smt.stats   60   8336 167129 845942 16581/16260/417   24935/4357    33  182   28.44)
(smt.stats   61   8513 169773 897926 16664/16355/417   25198/4359    33  182   28.44)
ramon: poll                 wall=12.000s usage=11.996s mem=30180KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8707 172401 922208 16780/16420/417   25485/4363    33  182   28.44)
(smt.stats   63   8920 178228 966601 17058/16537/417   25872/4368    33  182   28.53)
(smt.stats   64   9154 183689 996477 17138/16864/419   26502/5355    34  182   28.64)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 2 := 248682535433058&248682568744960
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 256 := 248682535433058&248682531520512
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 128 := 248682535433058&217597223370752
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 128 := 248682535433058&217597223370752
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 128 := 248682535433058&217597223370752
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 2048 := 248682535433058&217597223370752
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 2048 := 248682535433058&217597223370752
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&217597223370752
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&217597224157184
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&217597224157184
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&248682632970240
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&248682632970240
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&248682632970240
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&248682901405696
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&248682901405696
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&248695786307584
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&248695786307584
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&248695786307584
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&248764505784320
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&250688651132928
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&250688651132928
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&250688651132928
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&250688651132928
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 248682535433058&250688651132928
(smt.stats   65   9411 190578 1113537 17454/17097/499   28564/5534    35  189   29.16)
ramon: poll                 wall=13.000s usage=12.996s mem=31020KiB load=1.00 rootload=1.00
(smt.stats   66   9512 193886 1148991 17464/17198/502   29528/6024    36  203   29.27)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 640 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 640 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 640 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 640 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 640 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 640 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 640 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 528 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 528 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 528 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 528 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 528 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 512 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 1 := 124341267716529&217597222587904
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 0 := 124341267716529&217597222587904
(smt.stats   67   9623 200333 1220205 17616/17337/529   30039/6350    37  223   29.37)
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 124341267716096 := 124341267716529&217597222882816
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 124341267716096 := 124341267716529&217597222901248
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 124341267716096 := 124341267716529&217597222901248
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 124341267716096 := 124341267716529&217597222901248
band: (band[48] (if (= #358 63) 1 (if #574 3 #815)) (shl[64] (* 2 #102) (mod #830 64))) 124341267716096 := 124341267716529&217597222884864
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   68   9745 203886 1262893 18000/17365/529   30678/6354    37  223   29.46)
(smt.stats   69   9879 205145 1280216 18491/17759/529   31009/6557    38  224   29.76)
ramon: poll                 wall=14.000s usage=13.992s mem=31676KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 205777 1286888 18813/18260/529   31376/6558    38  224   30.11)
(smt.stats   71  10187 206711 1300967 19676/18884/529   31665/6559    38  224   30.21)
(smt.stats   72  10364 211778 1376138 20364/19513/529   32827/6563    38  224   30.40)
ramon: poll                 wall=15.000s usage=14.992s mem=32444KiB load=1.00 rootload=1.00
(smt.stats   73  10558 216471 1408563 20627/20116/529   34598/6566    38  224   31.16)
ramon: poll                 wall=16.000s usage=15.992s mem=33212KiB load=1.00 rootload=1.00
(smt.stats   74  10771 221587 1472676 20890/20454/529   35366/6569    38  224   31.18)
(smt.stats   75  11005 227156 1522189 21159/20690/532   36784/7708    39  236   31.37)
ramon: poll                 wall=17.000s usage=16.992s mem=33212KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.991s mem=33468KiB load=1.00 rootload=1.00
(smt.stats   76  11262 232048 1569035 21947/21085/532   37746/7721    39  236   31.65)
ramon: poll                 wall=19.004s usage=18.995s mem=33724KiB load=1.00 rootload=1.01
ramon: poll                 wall=20.000s usage=19.991s mem=33980KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:04:20 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.998s
ramon: group.utime          19.974s
ramon: group.stime          0.024s
ramon: group.mempeak        34236KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
