ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:57:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24824 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mhOiLIpdQljr.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             145729
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4364   3066  1225/1096/98      95/12     4   15   19.19)
(smt.stats    1    202   4864   4015  1939/1758/101     189/24     5   17   19.29)
(smt.stats    2    313   5740   5400  1974/1790/103     296/27     6   21   19.39)
(smt.stats    3    414   6093   5865  2000/1800/103     401/30     7   22   19.49)
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&1
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 1 := 0 >>l 12
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&1
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 1 := 0 >>l 12
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&1
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 1 := 0 >>l 12
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&1
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 1 := 0 >>l 12
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&1
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 1 := 0 >>l 12
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&1
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 4503599627370495 := 2 >>l 1
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&1
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 4503599627370495 := 2 >>l 1
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&1
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 2 := 3 >>l 1
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&2
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 1 := 4 >>l 1
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 0&2
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 1 := 4 >>l 1
(smt.stats    4    525   6677   7174  2209/2020/117     564/75     9   29   19.58)
(smt.stats    5    647   7610   8536  2318/2042/117     691/78     9   29   19.80)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   7947   8952  2472/2236/117     796/79     9   29   19.90)
(smt.stats    7    859   8995  12940  2716/2484/117     923/79     9   29   19.90)
(smt.stats    8    981  10243  14929  3303/2578/121    1055/174    10   29   19.99)
(smt.stats    9   1115  12817  17954  3344/3084/122    1237/174    11   32   19.99)
(smt.stats   10   1216  15035  20957  3400/3120/122    1395/215    12   35   19.99)
(smt.stats   11   1327  18317  22602  3450/3163/122    1528/215    12   35   19.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  20988  26842  3524/3227/122    1659/216    12   35   19.99)
(smt.stats   13   1583  23813  31786  3557/3296/122    1883/216    12   35   20.09)
(smt.stats   14   1730  25327  38874  3640/3321/123    2037/332    13   42   20.09)
(smt.stats   15   1831  26066  40466  3685/3414/123    2139/332    13   42   20.09)
(smt.stats   16   1942  26896  44583  3730/3470/123    2254/332    13   42   20.19)
ramon: poll                 wall=1.000s usage=0.930s mem=21300KiB load=0.93 rootload=0.92
(smt.stats   17   2064  27667  47648  3751/3493/123    2396/332    13   42   20.19)
(smt.stats   18   2198  28605  54450  3809/3518/123    2542/333    13   42   20.19)
(smt.stats   19   2345  29696  61107  3865/3579/123    2703/333    13   42   20.28)
(smt.stats   20   2506  30981  67467  3891/3649/124    2907/423    14   44   20.28)
(smt.stats   21   2607  32517  69229  3900/3658/124    2999/423    14   44   20.28)
(smt.stats   22   2718  33870  72352  3907/3661/124    3109/423    14   44   20.28)
(smt.stats   23   2840  35290  76335  3907/3665/124    3233/423    14   44   20.38)
(smt.stats   24   2974  35789  80847  3909/3666/124    3367/423    14   44   20.38)
(smt.stats   25   3121  37764  92163  3920/3678/125    3505/427    15   45   20.53)
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 2076042923670602&4503599627370495
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 2076042923670602&4503599627370495
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 2076042923670602&4503599627370495
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 2076042923670602&4503599627370493
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 2076042923670602&1
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 4503599627370497 := 4096 >>l 63
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 2076042923670602&1
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 4503599627370497 := 4096 >>l 63
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 6144 := 2076042923670602&6145
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 6145 := 6144 >>l 63
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 4096 := 2076042923670602&4097
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 4097 := 4096 >>l 63
(smt.stats   26   3282  39188  96117  4011/3732/132    3654/431    16   47   20.53)
(smt.stats   27   3459  40098 103252  4049/3780/147    3835/431    16   47   20.53)
(smt.stats   28   3560  40735 107358  4070/3805/147    3939/453    17   50   20.63)
(smt.stats   29   3671  41656 113058  4081/3822/148    4047/453    17   50   20.63)
(smt.stats   30   3793  42978 119304  4110/3831/148    4170/457    18   51   20.63)
(smt.stats   31   3927  44349 126239  4110/3858/148    4311/457    18   51   20.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  48929 132519  4113/3861/149    4467/479    19   51   20.63)
(smt.stats   33   4235  52613 137792  4121/3869/150    4630/483    20   51   20.73)
(smt.stats   34   4412  56683 146580  4131/3879/154    4813/483    21   54   20.73)
(smt.stats   35   4606  60677 152275  4131/3879/154    5010/483    21   54   20.73)
(smt.stats   36   4707  62651 155662  4132/3879/154    5112/483    21   54   20.73)
(smt.stats   37   4818  65091 158137  4135/3883/154    5223/483    21   54   20.73)
(smt.stats   38   4940  67668 162279  4135/3883/154    5345/483    21   54   20.73)
(smt.delete-inactive-clauses  :num-deleted-clauses 67)
(smt.stats   39   5074  68385 165964  4135/3883/154    5412/483    21   54   20.82)
(smt.stats   40   5221  71229 170457  4136/3884/154    5558/483    21   54   20.82)
(smt.stats   41   5382  74407 174856  4136/3884/154    5719/483    21   54   20.82)
(smt.stats   42   5559  77268 179772  4136/3884/154    5896/483    21   54   20.82)
(smt.stats   43   5753  78927 187176  4170/3885/154    6091/483    21   54   21.07)
(smt.stats   44   5966  81573 198796  4179/3923/154    6307/483    21   54   21.07)
(smt.stats   45   6067  82704 204605  4180/3928/154    6407/483    21   54   21.07)
ramon: poll                 wall=2.000s usage=1.927s mem=22216KiB load=1.00 rootload=0.99
(smt.stats   46   6178  84876 213927  4185/3929/154    6529/484    21   54   21.07)
(smt.stats   47   6300  89800 220542  4189/3937/154    6651/484    21   54   21.07)
(smt.stats   48   6434  92191 227419  4194/3937/154    6788/484    21   54   21.07)
(smt.stats   49   6581  93557 237686  4231/3956/155    6941/506    22   55   21.07)
(smt.stats   50   6742  96075 246787  4234/3982/155    7103/506    22   55   21.07)
(smt.stats   51   6919  97857 253914  4238/3986/156    7278/518    23   61   21.07)
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 69348689444864 := 69348689444864&69348689444892
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 69348689444892 := 0 >>l 33
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 69348689444837 := 69348689444864&69348689444865
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 69348689444838 := 69348689444864&69348689444865
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 69348689444837 := 69348689444864&69348689444865
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 69348689444838 := 69348689444864&69348689444865
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 69348689444840 := 69348689444864&69348689444865
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 69348689444848 := 69348689444864&69348689444865
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 69348689444864 := 69348689444864&69348689444865
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 69348689444865 := 0 >>l 33
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 69348689444864 := 69348689444864&69348689444865
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 69348689444865 := 0 >>l 33
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 69348689444864&0
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 2 := 0 >>l 22
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 69348689444864&0
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 2 := 0 >>l 22
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 69348689444864&0
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 1 := 0 >>l 22
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 69348689444864&0
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 1 := 0 >>l 22
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 69348689444864&0
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 1 := 0 >>l 22
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1 := 69348689444864&1
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 2 := 69348689444864&2
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 4 := 69348689444864&4
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 8 := 69348689444864&8
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 16 := 69348689444864&16
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 16 := 69348689444864&29
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 8 := 69348689444864&9
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 5 := 69348689444864&5
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 4 := 69348689444864&4
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 2 := 69348689444864&2
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 32 := 69348689444864&32
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 64 := 69348689444864&64
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 128 := 69348689444864&128
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 256 := 69348689444864&256
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 512 := 69348689444864&512
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1024 := 69348689444864&1024
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 2048 := 69348689444864&2048
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 512 := 69348689444864&512
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 4096 := 69348689444864&4096
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 8192 := 69348689444864&8192
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 16384 := 69348689444864&16384
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 32768 := 69348689444864&32768
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 65536 := 69348689444864&65536
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 131072 := 69348689444864&131072
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 262144 := 69348689444864&262144
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 524288 := 69348689444864&524288
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1048576 := 69348689444864&1048576
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 2097152 := 69348689444864&2097152
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 4194304 := 69348689444864&4194304
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 8388608 := 69348689444864&8388608
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 16777216 := 69348689444864&16777216
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 33554432 := 69348689444864&33554432
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 67108864 := 69348689444864&67108864
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 134217728 := 69348689444864&134217728
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 268435456 := 69348689444864&268435456
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 536870912 := 69348689444864&536870912
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1024 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1024 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1024 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1024 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 4096 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 8192 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 16384 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 16384 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 32768 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 65536 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 131072 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 131072 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 262144 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 524288 := 69348689444864&1073741823
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1048576 := 69348689444864&1073741823
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113  99164 259705  4438/4093/240    7520/530    23   61   22.01)
(smt.stats   53   7326  99709 260581  4603/4198/290    7890/532    23   61   22.40)
(smt.stats   54   7560 100880 267322  5335/4694/290    9081/532    23   61   22.59)
(smt.stats   55   7661 101578 272917  5578/5083/290    9256/667    24   90   22.68)
(smt.stats   56   7772 102275 279486  5866/5360/290    9471/667    24   90   22.78)
(smt.stats   57   7894 103180 286625  6088/5636/290   10053/668    24   90   22.91)
(smt.stats   58   8028 104748 306578  6271/6011/295   12704/748    25   97   23.22)
(smt.stats   59   8175 107925 352997  6288/6015/295   13607/750    25   97   23.32)
ramon: poll                 wall=3.000s usage=2.926s mem=24564KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8336 113173 418123  6358/6098/298   14849/3628    27  112   23.41)
(smt.stats   61   8513 116344 446173  6381/6114/299   15146/3628    27  112   23.41)
(smt.stats   62   8707 119479 481686  6421/6148/300   15815/3692    28  128   23.51)
(smt.stats   63   8921 124526 563756  6437/6169/301   16125/4191    29  128   23.51)
(smt.stats   64   9155 130817 631451  6467/6187/302   16485/4191    29  128   23.61)
(smt.stats   65   9412 141998 763405  6476/6203/303   17519/4296    30  134   23.81)
(smt.stats   66   9513 142964 778352  6513/6206/303   17653/4871    31  134   23.81)
(smt.stats   67   9624 144769 830916  6523/6247/303   17805/4871    31  134   23.81)
(smt.stats   68   9746 148034 887298  6533/6252/304   18007/4900    32  136   23.81)
(smt.stats   69   9880 151669 951033  6547/6262/304   18404/4901    32  136   24.14)
(smt.delete-inactive-clauses ramon: poll                 wall=4.000s usage=3.925s mem=25412KiB load=1.00 rootload=0.99
 :num-deleted-clauses 412)
(smt.stats   70  10027 154286 979810  6554/6281/306   18573/5208    33  145   24.14)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   71  10188 160614 1075617  6561/6288/306   18968/5208    33  145   24.14)
(smt.stats   72  10365 166451 1139862  6571/6298/307   19397/5846    34  157   24.14)
(smt.stats   73  10559 174532 1226835  6576/6303/309   20027/6019    35  157   24.33)
(smt.stats   74  10772 181657 1358358  6576/6303/309   20251/6339    36  166   24.33)
(smt.stats   75  11006 189728 1493326  6580/6305/309   20733/6339    36  166   24.33)
(smt.stats   76  11263 196339 1642769  6587/6314/309   21019/6339    36  166   24.33)
ramon: poll                 wall=5.000s usage=4.925s mem=25688KiB load=1.00 rootload=1.00
(smt.stats   77  11545 201308 1768203  6587/6314/309   21356/6339    36  166   24.33)
(smt.stats   78  11646 203161 1808508  6589/6316/309   21572/6339    36  166   24.43)
(smt.stats   79  11757 204845 1843870  6590/6316/309   21834/6339    36  166   24.43)
(smt.stats   80  11879 206958 1879437  6593/6320/309   21970/6339    36  166   24.43)
(smt.stats   81  12013 208098 1918431  6593/6320/309   22254/6339    36  166   24.43)
(smt.stats   82  12160 210060 1975918  6604/6320/309   22423/6339    36  166   24.43)
(smt.stats   83  12321 212135 2026288  6609/6336/309   22761/6339    36  166   24.53)
(smt.stats   84  12498 214484 2084923  6610/6337/309   22988/6339    36  166   24.53)
(smt.stats   85  12692 215673 2122028  6616/6343/309   23183/6339    36  166   24.53)
(smt.stats   86  12905 217560 2167123  6663/6390/309   23369/6339    36  166   24.53)
(smt.stats   87  13139 221252 2208251  6868/6392/310   24300/7089    37  167   24.72)
ramon: poll                 wall=6.000s usage=5.924s mem=26520KiB load=1.00 rootload=1.00
(smt.stats   88  13396 224131 2229530  7218/6609/311   24908/7099    37  167   25.10)
(smt.stats   89  13678 229820 2269066  7540/7030/311   25579/7455    38  169   25.20)
ramon: poll                 wall=7.000s usage=6.923s mem=26840KiB load=1.00 rootload=1.00
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1 := 4152085847341204&14
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&14
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&14
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&19
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&19
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&103169933311
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&103169933305
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&35
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 4503599627370531 := 12288 >>l 62
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1073741841
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1073741839
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1073741835
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1073741825
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1073741825
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1073741825
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1073741825
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&3
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 3 := 0 >>l 62
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&2
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #620 #624) 64)) 2 := 0 >>l 62
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 13 := 2251799813685256 >>l 51
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 13 := 2251799813685256 >>l 51
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 6 := 4503599623176200 >>l 51
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #109))) 6 := 4503599623176282 >>l 51
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1
band: (band[52] (if (= #113 51) 4674833068724039118556858679296 (if #506 2337416534362019559278429339648 #606)) (lshr[52] (bv2int %1) (+ 52 #609))) 1 := 4152085847341204&1
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1
band: (band[52] (if (= #113 51) 4674833068724039118556858679296 (if #506 2337416534362019559278429339648 #606)) (lshr[52] (bv2int %1) (+ 52 #609))) 1 := 4152085847341204&1
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 0 := 4152085847341204&1
band: (band[52] (if (= #113 51) 4674833068724039118556858679296 (if #506 2337416534362019559278429339648 #606)) (lshr[52] (bv2int %1) (+ 52 #609))) 1 := 4152085847341204&1
(smt.stats   90  13988 236800 2348637  7879/7601/375   26104/7635    39  185   25.48)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   91  14089 238434 2358114  7910/7619/375   26223/7637    39  185   25.48)
(smt.stats   92  14200 241353 2380518  7987/7654/375   26526/7640    39  185   25.48)
(smt.stats   93  14322 243752 2392102  8034/7708/375   26681/7642    39  185   25.58)
(smt.stats   94  14456 246388 2418080  8063/7772/375   27031/7778    40  197   25.58)
(smt.stats   95  14603 249319 2459956  8113/7790/375   27260/7778    40  197   25.67)
(smt.stats   96  14764 253475 2523501  8211/7865/375   27581/7778    40  197   25.78)
(smt.stats   97  14941 256886 2583264  8229/7941/375   27901/7778    40  197   25.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 205)
(smt.stats   98  15135 259219 2621354  8242/7948/375   27988/7778    40  197   25.88)
(smt.stats   99  15348 261247 2686279  8253/7967/375   28365/7778    40  197   26.08)
ramon: poll                 wall=8.000s usage=7.922s mem=27520KiB load=1.00 rootload=0.99
(smt.stats  100  15582 264358 2775003  8313/8015/377   28966/8166    41  199   26.55)
(smt.stats  101  15839 270930 2853565  8321/8022/378   29576/8559    42  204   26.65)
(smt.stats  102  16121 278143 2941299  8331/8030/381   30114/8637    43  212   26.75)
(smt.stats  103  16431 287291 3074807  8346/8043/381   30790/8637    43  212   26.84)
ramon: poll                 wall=9.000s usage=8.922s mem=28320KiB load=1.00 rootload=1.00
(smt.stats  104  16771 292168 3194521  8354/8051/381   31716/8637    43  212   26.94)
(smt.stats  105  16872 294674 3226216  8371/8060/381   32265/8637    43  212   26.94)
(smt.stats  106  16983 295360 3251129  8373/8067/384   32440/9262    44  229   27.03)
(smt.stats  107  17105 297944 3281561  8374/8068/384   32767/9262    44  229   27.03)
(smt.stats  108  17239 301946 3339146  8378/8072/385   33401/9262    44  229   27.03)
(smt.stats  109  17386 304412 3391890  8385/8079/385   33636/9390    45  260   27.13)
(smt.stats  110  17547 304911 3412246  8387/8081/385   33932/9390    45  260   27.13)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  111  17724 308346 3464255  8389/8083/385   34235/9390    45  260   27.13)
(smt.stats  112  17918 310731 3499934  8389/8083/385   34631/9390    45  260   27.13)
(smt.stats  113  18131 311187 3543388  8391/8085/385   34855/9390    45  260   27.13)
ramon: poll                 wall=10.000s usage=9.921s mem=28620KiB load=1.00 rootload=0.99
(smt.stats  114  18365 316600 3652516  8391/8085/385   35242/9390    45  260   27.13)
(smt.stats  115  18622 320251 3753236  8393/8087/385   35595/9390    45  260   27.22)
(smt.stats  116  18904 322653 3812148  8437/8091/385   35947/9393    45  260   27.22)
(smt.stats  117  19214 325931 3892424  8514/8156/386   36328/9862    46  262   27.32)
(smt.stats  118  19554 333376 4024256  8598/8241/387   37775/9953    47  265   27.42)
ramon: poll                 wall=11.000s usage=10.920s mem=29052KiB load=1.00 rootload=1.00
(smt.stats  119  19927 345613 4107121  8740/8315/387   39109/9959    47  265   27.61)
(smt.delete-inactive-clauses  :num-deleted-clauses 293)
(smt.stats  120  20028 348762 4152909  8782/8446/387   39045/9959    47  265   27.61)
(smt.stats  121  20139 350709 4182401  8787/8478/387   39179/9959    47  265   27.61)
(smt.stats  122  20261 353721 4226633  8792/8484/387   39485/9959    47  265   27.61)
(smt.stats  123  20395 356537 4253068  8810/8486/387   39664/9961    47  265   27.61)
(smt.stats  124  20542 358581 4299950  8826/8518/390   39941/10990    48  269   27.70)
ramon: poll                 wall=12.003s usage=11.923s mem=29240KiB load=1.00 rootload=1.01
(smt.stats  125  20703 364079 4393781  8837/8526/390   40182/10990    48  269   27.70)
(smt.stats  126  20880 365030 4429654  8846/8532/390   40415/11054    49  287   27.70)
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1 := 3800572067311912&103079239842
band: (band[52] (if (= #337 63) 19148116249493664229608893150396416 (if #483 9574058124746832114804446575198208 #480)) (lshr[64] (* 2048 #320) (mod #627 64))) 1 := 3800572067311912&103079239842
(smt.stats  127  21074 368407 4474938  8906/8541/390   40801/11058    49  287   27.80)
(smt.stats  128  21287 371111 4530616  8968/8627/390   41048/11058    49  287   27.99)
(smt.stats  129  21521 376418 4616747  8990/8666/390   41452/11059    49  287   27.99)
(smt.stats  130  21778 379324 4648999  9078/8691/390   41771/11063    49  287   28.09)
(smt.stats :restarts :decisions     :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas            :deletions     )
(smt.stats  131  22060 380946 4671770  9089/8781/390   42058/11063    49  287   28.09)
(smt.stats  132  22370 383932 4756583  9118/8794/390   42449/11063    49  287   28.18)
ramon: poll                 wall=13.000s usage=12.919s mem=29608KiB load=1.00 rootload=0.99
(smt.stats  133  22710 390723 4857578  9161/8852/390   43800/11063    49  287   28.39)
(smt.stats  134  23083 397887 5017269  9230/8912/390   44339/11064    49  287   28.49)
(smt.stats  135  23493 402929 5117508  9237/8927/390   45639/11064    49  287   28.59)
(smt.stats  136  23594 405291 5139876  9246/8927/390   45753/11064    49  287   28.59)
ramon: poll                 wall=14.000s usage=13.918s mem=30148KiB load=1.00 rootload=1.00
(smt.stats  137  23705 407322 5190446  9248/8938/390   45869/11064    49  287   28.68)
(smt.stats  138  23827 408967 5240350  9298/8938/390   46017/11066    49  287   28.68)
(smt.stats  139  23961 410930 5298663  9338/9028/391   46147/12235    50  295   28.68)
(smt.stats  140  24108 412954 5307173  9343/9033/391   46296/12235    50  295   28.68)
(smt.stats  141  24269 415486 5350963  9359/9039/391   46464/12235    50  295   28.68)
(smt.stats  142  24446 417260 5412149  9391/9059/391   46685/12237    50  295   28.78)
(smt.stats  143  24640 425047 5442965  9404/9094/391   46934/12237    50  295   28.78)
(smt.stats  144  24853 429078 5480986  9515/9096/391   47434/12248    50  295   28.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 419)
(smt.stats  145  25087 431391 5519172  9709/9355/391   47335/12249    50  295   28.88)
ramon: poll                 wall=15.000s usage=14.918s mem=30388KiB load=1.00 rootload=1.00
(smt.stats  146  25344 437452 5621858  9889/9419/391   48258/12253    50  295   29.07)
(smt.stats  147  25626 442134 5694397 10261/9754/395   48787/12718    51  295   29.28)
ramon: poll                 wall=16.000s usage=15.917s mem=30828KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas            :deletions     )
(smt.stats  148  25936 446519 5738500 11166/10856/396   49467/12820    52  318   29.50)
(smt.stats  149  26276 452680 5847580 11220/10863/396   50606/12823    52  318   29.60)
ramon: poll                 wall=17.000s usage=16.916s mem=31144KiB load=1.00 rootload=1.00
(smt.stats  150  26649 456344 5987884 11326/10972/396   51173/12826    52  318   29.60)
(smt.stats  151  27059 464093 6138384 11398/11024/396   51907/12832    52  318   29.70)
ramon: poll                 wall=18.000s usage=17.916s mem=31336KiB load=1.00 rootload=1.00
(smt.stats  152  27509 471892 6266964 11500/11103/396   52549/12836    52  318   29.79)
(smt.stats  153  27610 474961 6344262 11546/11194/396   53191/12837    52  318   29.89)
(smt.stats  154  27721 478548 6415543 11554/11244/396   53669/12837    52  318   29.89)
(smt.stats  155  27843 480569 6444451 11648/11334/397   53853/13868    53  319   29.99)
(smt.stats  156  27977 482995 6470609 11660/11340/397   54137/13869    53  319   29.99)
(smt.stats  157  28124 486276 6547960 11664/11354/397   54648/13869    53  319   30.08)
ramon: poll                 wall=19.000s usage=18.915s mem=31676KiB load=1.00 rootload=1.00
(smt.stats  158  28285 491856 6659220 11665/11355/397   54964/13869    53  319   30.08)
(smt.stats  159  28656 497699 6799657 11671/11361/397   55718/13869    53  319   30.18)
(smt.stats  160  28869 499826 6853267 11704/11364/397   55976/13871    53  319   30.18)
ramon: poll                 wall=20.000s usage=19.915s mem=31804KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:57:51 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.988s
ramon: group.utime          19.956s
ramon: group.stime          0.032s
ramon: group.mempeak        32320KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
