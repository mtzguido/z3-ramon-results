ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:23:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         18695 MiB
ramon: sys.mem.avail        62135 MiB
ramon: sys.nprocs           1189
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libsmbclient_vc1225736.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1345884
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
tabu (if (and (bvsle bv[4294967295:32] #18238) (not #21340)) (bvadd bv[1:32] (if #18236 bv[0:32] v435465012)) (if (and #9752 #11589) bv[0:32] v435465012))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      75     12   79.3651     10000         0          0          121      234)
(sat.ddfw      71      4      57.2     20010         0          1          187      329)
(sat.ddfw      69     36   88.1572     40198         0          2          217      848)
(sat.ddfw      63    106   96.1355     70000         0          3           13     1281)
(sat.ddfw      29     78   92.2512    110037         0          4          207     1893)
(sat.ddfw      29    385   84.1263    160008         0          5          131     2370)
(sat.ddfw      29    718   77.9248    220088         1          6          117     3632)
ramon: poll                 wall=1.000s usage=0.844s mem=23456KiB load=0.84 rootload=0.83
(sat.ddfw      29   1025   73.3124    290028         1          7          150     4578)
(sat.ddfw      23    173   67.3732    370000         2          8           95     5507)
(sat.ddfw      23    845   61.1413    460000         3          9           17     6225)
(sat.ddfw      23   1025   54.4366    560000         3         10           56     7254)
ramon: poll                 wall=2.000s usage=1.832s mem=23248KiB load=0.99 rootload=0.99
(sat.ddfw      19    179   48.7373    670000         4         11           23     8272)
(sat.ddfw      15    913   44.5091    790041         5         12          163    10037)
ramon: poll                 wall=3.000s usage=2.827s mem=23248KiB load=0.99 rootload=1.00
(sat.ddfw      15   1025   41.6573    920095         6         13          153    11391)
(sat.ddfw      13    498   38.2045   1060000         7         14           10    13175)
ramon: poll                 wall=4.000s usage=3.811s mem=23248KiB load=0.98 rootload=0.98
(sat.ddfw      13   1025    35.673   1210005         7         15          106    15538)
(sat.ddfw      12   1025   33.0877   1370017         7         16           41    17332)
ramon: poll                 wall=5.000s usage=4.808s mem=23248KiB load=1.00 rootload=1.00
(sat.ddfw      12   1025   31.2032   1540012         9         17          117    19334)
ramon: poll                 wall=6.000s usage=5.807s mem=23248KiB load=1.00 rootload=0.99
(sat.ddfw      12   1025   30.0381   1720000        10         18            4    21292)
(sat.ddfw      12   1025   28.8387   1910018        12         19           68    23769)
ramon: poll                 wall=7.004s usage=6.811s mem=23504KiB load=1.00 rootload=1.01
(sat.ddfw       2   1025   25.9341   2110074        13         20           99    25121)
ramon: poll                 wall=8.000s usage=7.805s mem=23252KiB load=1.00 rootload=0.99
(sat.ddfw       2   1025   24.4288   2320015        14         21           70    27346)
ramon: poll                 wall=9.000s usage=8.804s mem=23252KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.803s mem=23252KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   21.8787   2540027        14         22           46    29055)
ramon: poll                 wall=11.004s usage=10.801s mem=23252KiB load=0.99 rootload=1.00
ramon: poll                 wall=12.000s usage=11.794s mem=23252KiB load=1.00 rootload=0.99
(sat.ddfw       2   1025   18.2013   2770000        15         23           84    31378)
ramon: poll                 wall=13.004s usage=12.795s mem=23252KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   17.4927   3010000        15         24          101    33485)
ramon: poll                 wall=14.000s usage=13.791s mem=23252KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.790s mem=23252KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   16.5761   3260000        18         25           11    35344)
ramon: poll                 wall=16.000s usage=15.789s mem=23252KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.789s mem=23252KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   15.0981   3520019        19         26           39    36719)
ramon: poll                 wall=18.000s usage=17.789s mem=23252KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.789s mem=23252KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.785s mem=23252KiB load=1.00 rootload=0.99
ramon: end                  Mon Dec 30 12:24:07 2024
ramon: root.execname        z3
ramon: root.utime           19.780s
ramon: root.stime           0.000s
ramon: group.total          19.793s
ramon: group.utime          19.785s
ramon: group.stime          0.008s
ramon: group.mempeak        23508KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              0.99
