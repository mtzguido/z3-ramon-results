ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:58:24 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42029 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/HsvyJDP2vQT3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2893984
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4736    993  1221/1101/89      98/2     2   13   19.05)
(smt.stats    1    202   6077   2357  1845/1651/89     198/2     2   13   19.15)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&1
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&1
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&1
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&1
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&2
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&2
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&8
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&32
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&32
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&64
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&32
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&64
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&128
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 137438953471&16
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 16 := 137438953471&16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 16 := 142 << 36
(smt.stats    2    313   7413   4091  2101/1904/171     303/12     5   32   19.73)
(smt.stats    3    414   8647   5811  2429/2200/175     406/23     6   33   19.83)
(smt.stats    4    525  12424   8174  2473/2247/177     512/27     7   35   19.83)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 48 := 17179869183&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 18014398509482032 := 1879048192 << 33
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 48 := 17179869183&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 18014398509482032 := 1342177384 << 33
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 48 := 17179869183&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 18014398509482032 := 1342177492 << 33
(smt.stats    5    647  14525  10198  2508/2278/184     637/32     8   38   19.92)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16167  12661  2559/2317/185     754/42    10   44   19.92)
(smt.stats    7    859  19985  15620  2614/2381/188     826/63    11   76   19.92)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 4 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 52 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 95 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 94 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 348 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 340 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 532 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 532 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 532 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 596 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 532 := 2251799813685247&11274289364
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 596 := 2251799813685247&11274289364
(smt.stats    8    981  22482  18300  2725/2489/233    1019/69    13   86   20.23)
(smt.stats    9   1115  26287  23859  2738/2502/240    1167/111    14   99   20.32)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&4604204941312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 5260208968973680640 := 10737418420 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&18014398509481728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11529215046068469504 := 10737418312 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&4604204941312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11511205251763929088 := 10737418312 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&18014398509481728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11529215046068469504 := 10737418312 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&4604204941312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11511205251763929088 := 10737418420 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&4604204941312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11511205251763929088 := 10737418312 << 3
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&18014398509481728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11529215046068469504 := 10905190372 << 3
(smt.stats   10   1216  29899  27797  2761/2525/247    1262/161    16  104   20.32)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 6755400649015412 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 6755400649015412 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 6755400649015412 << 4
(smt.stats   11   1327  32348  30848  2817/2532/248    1385/164    16  104   20.42)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327359552
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 2251801021645219 := 2251801021645220 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327366464
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 2251801021645652 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&19327366464
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 2251801021645652 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1840393492800
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 2251914838278548 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1840393492800
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #115))) 1125900980584447 := 2251914838278548 << 4
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 15 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 14 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 12 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 8 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 12 := 15&1125902054326848
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 0 := 15&1125902054326848
band: (band[54] (if (= #119 53) 1 (if #568 3 #719)) (shl[54] (bv2int %0) (+ 54 #722))) 8 := 15&1125902054326848
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33677  33526  3005/2753/287    1585/185    17  107   20.61)
(smt.stats   13   1583  38444  41866  3033/2789/290    1741/197    18  130   20.61)
(smt.stats   14   1730  40315  44930  3184/2830/293    1978/250    19  130   20.80)
(smt.stats   15   1831  41216  47705  3487/3040/293    2143/250    19  130   20.90)
(smt.stats   16   1942  43335  57473  3861/3609/297    2707/282    21  133   21.00)
ramon: poll                 wall=1.000s usage=0.917s mem=22316KiB load=0.92 rootload=0.90
(smt.stats   17   2064  45642  63188  3984/3707/299    3217/523    22  134   21.10)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 226 := 2251799813685247&1125901114804626
(smt.stats   18   2198  49458  76175  4088/3773/300    3417/523    22  134   21.29)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 240 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 242 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 464 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 466 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 402 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 402 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 402 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 410 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 400 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 402 := 9007199254740991&2322169765823122
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1168 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1168 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1168 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1170 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1168 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1170 := 9007199254740991&2322169765823634
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765823890
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765823890
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765824402
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765825426
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765825426
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322169765826450
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322170436915090
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 3986 := 9007199254740991&2322170168479634
(smt.stats   19   2345  51068  80147  4400/3858/300    3755/555    23  138   21.62)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 658 := 9007199254740991&2322170436913810
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 2194 := 9007199254740991&2322170436913298
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2506  55987 101060  4544/4298/395    4736/1125    25  168   21.81)
(smt.stats   21   2607  61144 125713  4562/4313/395    4976/1126    25  168   21.81)
(smt.stats   22   2718  64976 141451  4636/4338/395    5348/1126    25  168   21.95)
(smt.stats   23   2840  70039 157214  4667/4412/395    5665/1126    25  168   21.95)
(smt.stats   24   2974  73012 166221  4694/4439/397    6154/1691    26  173   22.17)
(smt.stats   25   3121  81564 209726  4701/4446/400    6438/1691    26  173   22.17)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1122 := 4503599627370495&17179870816
(smt.stats   26   3282  86370 226887  4815/4451/400    6966/1866    27  185   22.36)
ramon: poll                 wall=2.000s usage=1.914s mem=23916KiB load=1.00 rootload=1.00
(smt.stats   27   3459  90197 242859  5149/4671/400    7421/1876    27  185   22.55)
(smt.stats   28   3560  92545 254887  5281/4900/400    7869/1884    27  185   22.55)
(smt.stats   29   3671  94281 267624  5571/5087/400    8270/1894    27  185   22.75)
(smt.stats   30   3793  96499 279972  5773/5326/400    8715/1896    27  185   22.75)
(smt.stats   31   3927  98624 295022  5966/5544/400    9149/1897    27  185   23.05)
(smt.stats   32   4074 101987 316222  6039/5770/402    9648/2571    28  189   23.14)
ramon: poll                 wall=3.000s usage=2.912s mem=24624KiB load=1.00 rootload=1.00
(smt.stats   33   4235 104580 328606  6383/5791/402   10026/2577    28  189   23.24)
(smt.stats   34   4412 107347 336030  6592/6132/402   10344/2701    29  194   23.34)
(smt.stats   35   4606 109657 343681  6634/6379/402   10593/2701    29  194   23.34)
(smt.stats   36   4707 114686 377981  6652/6392/402   11169/2701    29  194   23.43)
(smt.stats   37   4818 117287 390837  6879/6416/402   11512/2705    29  194   23.43)
(smt.stats   38   4940 119418 407896  7114/6653/402   11884/2710    29  194   23.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 7)
(smt.stats   39   5074 122153 428095  7190/6903/405   12250/3286    30  196   23.64)
ramon: poll                 wall=4.000s usage=3.910s mem=25288KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5221 124524 432537  7709/7015/405   12515/3289    30  196   23.83)
(smt.stats   41   5382 126661 439462  8140/7812/406   12793/3504    31  199   23.92)
(smt.stats   42   5559 130725 466100  8371/8088/409   13461/3509    31  199   24.02)
ramon: poll                 wall=5.000s usage=4.908s mem=25676KiB load=1.00 rootload=1.00
(smt.stats   43   5753 136926 509530  8649/8132/409   14076/3756    32  208   24.11)
(smt.stats   44   5966 140596 533944  8899/8435/409   14838/3756    32  208   24.21)
(smt.stats   45   6067 141894 538512  8917/8653/409   15094/3756    32  208   24.21)
(smt.stats   46   6178 144320 549256  9055/8692/409   15296/3759    32  208   24.21)
(smt.stats   47   6300 145984 560959  9198/8826/409   15730/3760    32  208   24.47)
(smt.stats   48   6434 147928 581343  9361/8967/409   16157/3761    32  208   24.57)
ramon: poll                 wall=6.000s usage=5.904s mem=26212KiB load=1.00 rootload=1.00
(smt.stats   49   6581 150365 598098  9505/9236/410   16914/4364    33  235   24.57)
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1171 := 9007199254740991&1287
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1175 := 9007199254740991&1287
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1287 := 9007199254740991&1287
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11385099857992615175 := 33776998547456054 << 52
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1287 := 9007199254740991&1287
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11385099857992615175 := 33776998547456162 << 52
band: (band[54] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743) 0 (if #744 1 #850)) (shl[64] (* 2 #113) (mod #892 64))) 1287 := 9007199254740991&1287
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #889 #891) 64)) 11385099857992615175 := 33776998547456054 << 52
(smt.stats   50   6742 153628 614097  9751/9262/410   17477/4373    33  235   24.78)
(smt.stats   51   6919 159228 671558  9803/9546/415   18303/4373    33  235   24.97)
(smt.stats   52   7113 163259 697087  9840/9562/416   19043/4803    34  236   24.97)
(smt.stats   53   7326 173077 764343  9892/9629/417   19669/4803    34  236   25.07)
(smt.stats   54   7560 178478 799657 10104/9833/419   20711/5382    35  256   25.16)
ramon: poll                 wall=7.003s usage=6.907s mem=26864KiB load=1.00 rootload=1.00
(smt.stats   55   7661 181701 830684 10133/9877/420   21076/5779    36  283   25.35)
(smt.stats   56   7772 187915 889594 10236/9959/420   21416/5779    36  283   25.35)
(smt.stats   57   7894 191208 908298 10402/9965/421   21773/6033    37  283   25.58)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8028 194321 938979 10466/10189/425   22448/6033    37  283   25.66)
(smt.stats   59   8175 199490 987859 10479/10198/425   23023/6273    38  303   25.76)
(smt.stats   60   8336 201275 1002601 10533/10208/425   23359/6276    38  303   25.76)
(smt.stats   61   8513 202357 1008504 10549/10263/425   24241/6276    38  303   25.85)
(smt.stats   62   8707 210244 1078912 10559/10282/425   24527/6276    38  303   25.95)
ramon: poll                 wall=8.000s usage=7.900s mem=27640KiB load=1.00 rootload=0.99
(smt.stats   63   8920 218032 1159498 10716/10288/425   25122/6279    38  303   26.15)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   64   9154 223693 1196308 10789/10512/428   25709/6758    39  304   26.26)
(smt.stats   65   9411 237290 1373892 10792/10515/428   26066/6758    39  304   26.26)
(smt.stats   66   9512 238575 1382151 10800/10519/428   26348/6791    40  311   26.35)
ramon: poll                 wall=9.000s usage=8.894s mem=28032KiB load=0.99 rootload=1.00
(smt.stats   67   9623 241894 1394245 10800/10523/428   26522/6791    40  311   26.35)
(smt.stats   68   9745 245385 1417149 10807/10530/428   26689/6791    40  311   26.35)
(smt.stats   69   9879 251548 1448820 10807/10530/428   26832/6791    40  311   26.35)
(smt.delete-inactive-clauses  :num-deleted-clauses 234)
(smt.stats   70  10026 255462 1480878 10840/10536/428   26930/6791    40  311   26.35)
(smt.stats   71  10187 258381 1500510 11009/10570/428   27377/6794    40  311   26.54)
(smt.stats   72  10364 259803 1508619 11361/10804/428   27768/6796    40  311   26.73)
ramon: poll                 wall=10.000s usage=9.892s mem=28180KiB load=1.00 rootload=1.00
(smt.stats   73  10558 261553 1512745 11615/11147/428   28215/6801    40  311   26.83)
ramon: poll                 wall=11.000s usage=10.888s mem=28424KiB load=1.00 rootload=0.99
(smt.stats   74  10771 262940 1520443 12252/11485/428   28561/6806    40  311   27.02)
(smt.stats   75  11005 265909 1546526 12778/12501/431   29853/7084    41  329   27.21)
ramon: poll                 wall=12.000s usage=11.885s mem=29008KiB load=1.00 rootload=1.00
(smt.stats   76  11262 274044 1610396 12958/12503/431   30758/7086    41  329   27.41)
(smt.stats   77  11544 284799 1700166 13041/12716/432   31831/7495    42  336   27.60)
(smt.stats   78  11645 287682 1761286 13152/12786/432   32137/7497    42  336   27.60)
ramon: poll                 wall=13.000s usage=12.882s mem=29332KiB load=1.00 rootload=1.00
(smt.stats   79  11756 290932 1816473 13387/13015/433   32532/7831    43  344   27.69)
(smt.stats   80  11878 293768 1841044 13550/13136/433   32999/7833    43  344   27.79)
(smt.stats   81  12012 296788 1855209 13580/13290/433   33267/7833    43  344   27.88)
(smt.stats   82  12159 302373 1929426 13595/13318/437   33620/7960    44  359   27.88)
(smt.stats   83  12320 305584 1937084 13596/13318/437   33785/7960    44  359   27.88)
ramon: poll                 wall=14.000s usage=13.879s mem=29612KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   84  12497 308980 1975430 13633/13328/437   34431/7964    44  359   28.09)
(smt.stats   85  12691 315187 2007191 13820/13375/437   35144/8117    45  366   28.09)
ramon: poll                 wall=15.000s usage=14.878s mem=29904KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.874s mem=30088KiB load=1.00 rootload=1.00
(smt.stats   86  12904 316464 2017540 14358/13625/437   35417/8118    45  366   28.49)
(smt.stats   87  13138 321763 2060598 14676/14392/437   36080/8118    45  366   28.39)
(smt.stats   88  13395 330689 2150412 14717/14440/437   36626/8118    45  366   28.49)
ramon: poll                 wall=17.005s usage=16.880s mem=30168KiB load=1.00 rootload=1.00
(smt.stats   89  13677 337165 2161604 14718/14441/437   36974/8118    45  366   28.58)
(smt.stats   90  13987 346329 2272696 14719/14442/437   37283/8118    45  366   28.58)
(smt.stats   91  14088 350192 2304548 14732/14455/437   37865/8118    45  366   28.58)
(smt.stats   92  14199 354956 2345483 14737/14460/439   38055/8699    46  371   28.86)
(smt.stats   93  14321 359001 2396646 14745/14468/439   38543/8699    46  371   28.86)
ramon: poll                 wall=18.000s usage=17.869s mem=30780KiB load=0.99 rootload=0.99
(smt.stats   94  14455 362140 2436197 14751/14474/439   39258/8767    47  374   29.07)
(smt.stats   95  14602 369125 2511925 14756/14479/439   39735/8767    47  374   29.07)
(smt.stats   96  14763 373502 2544883 14913/14479/440   40533/9004    48  382   29.16)
(smt.stats   97  14940 376388 2563058 15299/14809/440   40942/9007    48  382   29.26)
(smt.delete-inactive-clauses  :num-deleted-clauses 677)
ramon: poll                 wall=19.000s usage=18.867s mem=31076KiB load=1.00 rootload=1.00
(smt.stats   98  15134 380291 2591725 15454/15057/440   40761/9008    48  382   29.40)
ramon: poll                 wall=20.000s usage=19.863s mem=31152KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:58:44 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.942s
ramon: group.utime          19.930s
ramon: group.stime          0.012s
ramon: group.mempeak        31408KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              0.99
