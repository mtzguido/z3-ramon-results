ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:10:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41643 MiB
ramon: sys.mem.avail        61384 MiB
ramon: sys.nprocs           1322
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9F1lYwYcYHEy.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3712390
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   210/210     0/0  69       0    18.51   0.00)
(sat.stats    101    546    0   210/210   101/28  69       0    18.85   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 459 :time 0.00)
(sat.stats    101    546    0   210/210   101/28  69       0    18.85   0.00)
(sat.stats    101    546    0   210/210   101/28  69       0    18.85   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 349018.85 :time 0.00)
(sat.stats    101    546    0   212/212    49/27  69       0    18.85   0.00)
(sat.stats    105    557    1   212/212    53/31  69       0    18.85   0.00)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    108    584    2   212/212    56/34  69       0    18.85   0.00)
(sat.stats    111    615    3   212/212    59/37  69       0    18.85   0.01)
(sat.stats    114    658    4   212/212    62/40  69       0    18.85   0.01)
(sat.stats    117    715    5   212/212    65/43  69       0    18.85   0.01)
(sat.stats    120    788    6   212/212    68/46  69       0    18.85   0.01)
(sat.stats    123    879    7   212/212    71/48  69       0    18.85   0.01)
(sat.stats    126    919    8   212/212    74/48  69       0    18.85   0.01)
(sat.stats    129    975    9   212/212    77/48  69       0    18.85   0.01)
(sat.stats    132   1064   10   212/212    80/49  69       0    18.85   0.01)
(sat.stats    146   1591   11   212/212    94/57  69       0    18.85   0.01)
(sat.stats    163   1942   12   212/212   111/69  69       0    18.85   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    258   5108   15   215/215   206/116  69       0    19.43   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1838 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2667 :time 0.00)
(sat.stats    317   6581   34   390/390   264/121  80       0    19.54   0.18)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2967 :time 0.00)
ramon: poll                 wall=1.000s usage=0.927s mem=21588KiB load=0.93 rootload=0.92
ramon: poll                 wall=2.000s usage=1.926s mem=22380KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.926s mem=22852KiB load=1.00 rootload=1.00
(sat.stats    799   9150   60  5640/5640   751/129  80       0    21.56   3.09)
(sat.stats    802   9160   61  5782/5782   754/129  80       0    21.56   3.09)
(sat.stats   1128  11442   67 15008/15008  1097/133  80       0    22.38   3.63)
ramon: poll                 wall=4.000s usage=3.925s mem=25316KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 10529 :time 0.00)
(sat.stats   1744  19876   91 34858/34858  1727/198  81       0    24.91   4.15)
lshr: (lshr[39] (bv2int %1) (+ 39 (* 549755813887 #77))) 25580 := 25580 >>l 25
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 3596 := 3596&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 14091 := 14091&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 14090 := 14090&549755797504
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14633 :time 0.00)
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 1&549755797504
lshr: (lshr[64] (* 16777216 (bv2int %1)) (mod (+ 63 #555 #559) 64)) 4290294371581952 := 1125899890065408 >>l 49
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 9920 := 16382&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 8328 := 16382&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 128 := 16382&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 256 := 16382&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 8192 := 16382&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 512 := 16382&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 1024 := 16382&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 2048 := 16382&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 4096 := 16382&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 2630 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 4125 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 772 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 13704 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 6704 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 13600 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 2368 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 6144 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 1792 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 128 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 1024 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 512 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 4096 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 0 := 16383&549755797504
band: (band[39] (if (= #270 63) 2535301200447235430956551634944 (if #442 1267650600223617715478275817472 #439)) (lshr[64] (* 16777216 #74) (mod #562 64))) 8192 := 549755797504&16383
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 16 := 16383&549755797504
band: (band[39] (lshr[39] (bv2int %1) (+ 39 #466)) (if (= #97 38) 75557863725639445512192 (if #470 37778931862819722756096 #544))) 32 := 16383&549755797504
 (sat-cleaner :elim-literals 11 :elim-clauses 1 :cost 17347 :time 0.00)
ramon: poll                 wall=5.000s usage=4.924s mem=28200KiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   2397  52075  193 41872/41869  2838/616 265       0    27.26   4.94)
ramon: poll                 wall=6.000s usage=5.924s mem=30216KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 25128 :time 0.00)
ramon: poll                 wall=7.000s usage=6.923s mem=30832KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 29121 :time 0.00)
(sat.stats   3598 142358  300 58766/58763  4586/974 290       0    30.05   7.74)
ramon: poll                 wall=8.000s usage=7.922s mem=31312KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.922s mem=31944KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.921s mem=32592KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 34877 :time 0.00)
ramon: poll                 wall=11.000s usage=10.921s mem=33380KiB load=1.00 rootload=1.00
(sat.stats   5395 166331  484 86868/86865  6017/1272 291       0    32.21  11.41)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 40686 :time 0.00)
ramon: poll                 wall=12.004s usage=11.924s mem=33632KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.918s mem=34540KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.918s mem=34796KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.918s mem=35308KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.918s mem=35564KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 52624 :time 0.00)
(sat.stats   8091 280925  605 96230/96227  8063/1402 294       0    34.26  16.61)
ramon: poll                 wall=17.004s usage=16.922s mem=35564KiB load=1.00 rootload=1.01
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 59004 :time 0.00)
ramon: poll                 wall=18.000s usage=17.918s mem=36076KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.004s usage=18.922s mem=37352KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.918s mem=37608KiB load=1.00 rootload=0.99
ramon: end                  Wed Dec 25 15:11:02 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.997s
ramon: group.utime          19.965s
ramon: group.stime          0.032s
ramon: group.mempeak        38380KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              1.00
