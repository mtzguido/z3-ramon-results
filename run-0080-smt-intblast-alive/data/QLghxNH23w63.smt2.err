ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:20:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25719 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1400
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QLghxNH23w63.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             25612
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 128 := 128&466945
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 128 := 128&466945
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 128 := 128&466945
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 127 := 128&466945
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 126 := 128&466945
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 124 := 128&466945
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 120 := 128&466945
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 112 := 128&466945
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 96 := 128&466945
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 128&466945
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 466945 := 466944 >>l 56
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 128&466945
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 466945 := 466944 >>l 56
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 128&466945
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 466945 := 466944 >>l 56
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 128&466945
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 466945 := 466944 >>l 56
(smt.stats    0    101   5823    746  1256/1083/107      98/12     5   16   19.50)
(smt.stats    1    202   7508   1828  2410/2161/127     195/17     8   27   19.81)
(smt.stats    2    313  10485   2812  2568/2268/127     323/24     8   27   19.81)
(smt.stats    3    414  12302   3639  2696/2473/131     427/48     9   28   19.81)
(smt.stats    4    525  13540   5277  2805/2573/138     585/119    11   43   19.92)
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&1
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 3377699720527873 := 8192 >>l 62
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&1275519
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&1
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 2251799813685249 := 8192 >>l 62
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&8193
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 8193 := 8192 >>l 62
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&8193
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 8193 := 8192 >>l 62
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 1004 := 1 >>l 49
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 1004 := 1 >>l 49
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 1&462592
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 462592 := 0 >>l 63
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 4 := 4&16385
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 3 := 4&16385
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 4 := 4&16385
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 3 := 4&16385
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 2 := 4&16385
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 4&16385
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 16385 := 16384 >>l 61
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 1 := 4&1
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 2 := 4&2
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 2 := 4&2
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 2 := 4&2
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 4 := 4&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 4 := 16384 >>l 61
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 4 := 4&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 4 := 16384 >>l 61
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 4&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 1 := 2 >>l 48
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 4&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 1 := 2 >>l 48
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 4&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 1 := 2 >>l 48
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 4&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 1 := 2 >>l 48
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 8 := 8&8
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 8 := 24576 >>l 60
(smt.stats    5    648  14845   7371  2890/2617/172     691/121    13   66   20.11)
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 8&1
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 1 := 24576 >>l 60
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 8&1
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 1 := 24576 >>l 60
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 8&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 2 := 3 >>l 47
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401408 := 562949953421312&401409
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 409600 := 562949953421312&409600
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 425984 := 562949953421312&425984
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 458752 := 562949953421312&458752
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401408 := 562949953421312&401409
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401368 := 562949953421312&401409
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401424 := 562949953421312&401468
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401440 := 562949953421312&401441
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401472 := 562949953421312&401473
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401472 := 562949953421312&401473
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    749  16296   9853  3059/2801/260     781/131    15   88   20.40)
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401432 := 562949953421312&401440
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401432 := 562949953421312&401440
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401432 := 562949953421312&401432
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401424 := 562949953421312&401424
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 401408 := 562949953421312&401409
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 409600 := 562949953421312&409601
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 409600 := 562949953421312&409601
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 524288 := 562949953421312&524289
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 1048576 := 562949953421312&1048577
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 1048576 := 562949953421312&1048577
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 524288 := 562949953421312&524289
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 462592 := 562949953421312&462593
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 462592 := 562949953421312&462593
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 462848 := 562949953421312&462849
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 462592 := 562949953421312&462593
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 462336 := 562949953421312&462381
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 461824 := 562949953421312&461869
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 458752 := 562949953421312&458753
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 32 := 562949953421312&32
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 32 := 562949953421312&32
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 32 := 562949953421312&32
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 562949953421312&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 4 := 401408 >>l 14
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 562949953421312&24
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 25 := 49 >>l 1
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 562949953421312&20
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 20 := 401408 >>l 14
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 562949953421312&24
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 25 := 49 >>l 1
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 562949953421312&24
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 25 := 49 >>l 1
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 1 := 562949953421312&24
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 1 := 562949953421312&24
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 4 := 562949953421312&24
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 4 := 562949953421312&24
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 4 := 562949953421312&24
(smt.stats    7    860  20443  14719  3194/2843/291    1008/167    16  101   20.76)
ramon: poll                 wall=1.004s usage=0.945s mem=22088KiB load=0.94 rootload=0.93
(smt.stats    8    982  25373  20165  3239/2981/352    1183/247    19  116   20.95)
(smt.stats    9   1116  30394  26801  3273/3009/360    1330/291    23  133   21.24)
(smt.stats   10   1217  33327  33097  3340/3043/362    1454/297    24  133   21.34)
(smt.stats   11   1328  36161  35957  3471/3184/365    1596/318    25  133   21.44)
ramon: poll                 wall=2.000s usage=1.941s mem=22700KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  40246  42364  3538/3273/367    1803/390    27  138   21.44)
(smt.stats   13   1584  44350  46498  3622/3312/372    1991/394    27  138   21.57)
(smt.stats   14   1732  49212  59849  3768/3502/376    2197/520    30  159   21.67)
(smt.stats   15   1833  53896  68345  3889/3614/377    2321/531    31  159   21.67)
ramon: poll                 wall=3.000s usage=2.941s mem=22924KiB load=1.00 rootload=1.00
(smt.stats   16   1944  58343  78403  3907/3641/378    2449/534    32  166   21.79)
(smt.stats   17   2066  61899  83649  4064/3651/379    2646/550    33  170   21.88)
(smt.stats   18   2200  65319  90258  4216/3905/380    2877/642    34  171   21.97)
ramon: poll                 wall=4.000s usage=3.940s mem=23536KiB load=1.00 rootload=1.00
(smt.stats   19   2347  68930  95782  4356/3967/381    3039/646    34  171   22.07)
(smt.stats   20   2508  73950 108724  4517/4251/382    3247/689    36  181   22.09)
(smt.stats   21   2609  77780 117199  4532/4260/382    3354/689    36  181   22.20)
(smt.stats   22   2720  81341 127288  4539/4271/383    3467/698    37  182   22.20)
ramon: poll                 wall=5.000s usage=4.940s mem=23644KiB load=1.00 rootload=1.00
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&985162418487300
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 107945653568536580 := 4611686018432950272 >>l 22
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&985162418487300
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 107945653568536580 := 4611686018432950272 >>l 22
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&401668
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 106960491150450948 := 4611686018432950272 >>l 22
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&401668
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 106960491150450948 := 4611686018432950272 >>l 22
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 281474976710995 := 562949953421991 >>l 9
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 281474976710995 := 562949953421991 >>l 9
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 281474976710995 := 562949953421991 >>l 9
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 281474976710995 := 562949953421991 >>l 9
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 281474976710995 := 562949953421991 >>l 9
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 1 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 2 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 1099511627776 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 4 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 8 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 16 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 32 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 5 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 6 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 4 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 8 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 16 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 64 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 128 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 256 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 769 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 770 := 2199023255552&1099511627777
(smt.stats   23   2842  83134 133995  4666/4273/384    3621/706    38  193   22.58)
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 16 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 16 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 32 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 32 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 544 := 2199023255552&1099511627777
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2199023255552&1099511627777
band: (band[50] (if (= #116 49) 562949953421312 (if #496 281474976710656 #592)) (lshr[50] (bv2int %0) (+ 50 #595))) 512 := 2199023255552&1099511627777
(smt.stats   24   2976  85463 142350  4694/4424/483    3852/780    40  226   22.78)
(smt.stats   25   3123  92565 155005  4891/4509/484    4097/784    40  226   22.98)
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 1&8796093022978
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 8796093022978 := 72057594043596800 >>l 63
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 1&8796093022978
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 8796093022978 := 72057594043596800 >>l 63
(smt.stats   26   3284  99379 174864  4944/4635/489    4416/889    42  238   22.98)
(smt.stats   27   3461 105626 192686  5036/4730/491    4787/974    43  252   23.19)
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&257
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 257 := 2251799812923392 >>l 62
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 1005 := 274877906851 >>l 49
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 2&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 1005 := 274877906851 >>l 49
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3562 108270 202074  5170/4829/495    4988/1009    44  262   23.29)
ramon: poll                 wall=6.000s usage=5.940s mem=24780KiB load=1.00 rootload=1.00
(smt.stats   29   3673 110206 212399  5189/4849/495    5171/1009    44  262   23.46)
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 32&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 8287749214268555264 := 2251799812956160 >>l 58
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 32&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 8287749214268555264 := 2251799812956160 >>l 58
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 32&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 0 := 2251799812956160 >>l 58
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 32&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 37 := 274877906855 >>l 45
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 32&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 2251799813685248 := 2251799812956160 >>l 58
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 32&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 2251799813685248 := 2251799812956160 >>l 58
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 32&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 33 := 274877906855 >>l 45
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 32&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 33 := 274877906855 >>l 45
(smt.stats   30   3795 111993 220434  5238/4874/495    5375/1035    45  281   23.46)
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 8&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 2 := 274877906853 >>l 47
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 0 := 8&0
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #112))) 1 := 274877906853 >>l 47
band: (band[50] (if (= #327 63) 9223372036854775808 (if #476 4611686018427387904 #473)) (lshr[64] (* 8192 #110) (mod #613 64))) 4 := 4&260
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #606 #610) 64)) 260 := 2251799812931584 >>l 61
(smt.stats   31   3929 115187 230737  5311/4957/506    5684/1062    46  289   23.67)
(smt.stats   32   4076 121303 245779  5355/4980/509    5961/1064    46  289   23.78)
ramon: poll                 wall=7.000s usage=6.939s mem=25384KiB load=1.00 rootload=1.00
(smt.stats   33   4237 130576 265254  5451/5030/511    6279/1118    47  309   23.97)
(smt.stats   34   4414 140113 289701  5664/5306/513    6687/1172    49  315   23.97)
ramon: poll                 wall=8.000s usage=7.939s mem=25484KiB load=1.00 rootload=1.00
(smt.stats   35   4608 146339 305764  5732/5326/513    7063/1174    49  315   24.07)
(smt.stats   36   4709 149248 308151  5837/5428/513    7183/1174    49  315   24.07)
(smt.stats   37   4820 154111 317310  5957/5542/513    7398/1179    49  315   24.19)
ramon: poll                 wall=9.000s usage=8.939s mem=25724KiB load=1.00 rootload=1.00
(smt.stats   38   4942 158909 330424  6001/5643/514    7703/1302    50  318   24.29)
(smt.delete-inactive-clauses  :num-deleted-clauses 54)
(smt.stats   39   5076 164618 351759  6037/5661/515    7930/1302    50  318   24.29)
(smt.stats   40   5223 169383 368092  6102/5698/516    8147/1345    51  320   24.40)
(smt.stats   41   5384 174360 379698  6231/5777/516    8338/1354    52  320   24.66)
(smt.stats   42   5561 177879 394330  6264/5900/517    8599/1354    52  320   24.56)
ramon: poll                 wall=10.000s usage=9.939s mem=26132KiB load=1.00 rootload=1.00
(smt.stats   43   5755 184060 410020  6360/5905/517    8859/1395    53  322   24.70)
(smt.stats   44   5968 190181 431656  6482/6029/517    9342/1396    53  322   24.80)
ramon: poll                 wall=11.000s usage=10.938s mem=26476KiB load=1.00 rootload=1.00
(smt.stats   45   6069 193138 441600  6495/6131/519    9503/1518    54  331   24.80)
(smt.stats   46   6180 197988 457709  6512/6134/523    9800/1518    54  331   24.80)
(smt.stats   47   6302 205467 476147  6587/6157/524    9968/1625    55  381   24.81)
ramon: poll                 wall=12.000s usage=11.938s mem=26488KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6436 210981 492075  6689/6231/524   10206/1628    55  381   24.91)
(smt.stats   49   6583 217435 507707  6791/6345/524   10660/1631    55  381   25.01)
ramon: poll                 wall=13.000s usage=12.938s mem=26556KiB load=1.00 rootload=1.00
(smt.stats   50   6744 226977 530712  6957/6474/525   11244/1757    56  381   25.10)
(smt.stats   51   6921 237150 550333  7110/6593/525   11797/1760    56  381   25.20)
ramon: poll                 wall=14.000s usage=13.937s mem=26852KiB load=1.00 rootload=0.99
(smt.stats   52   7115 246699 578890  7273/6755/525   12445/1763    56  381   25.48)
ramon: poll                 wall=15.004s usage=14.940s mem=27060KiB load=1.00 rootload=1.00
(smt.stats   53   7328 256900 616558  7376/6955/525   12899/1767    56  381   25.48)
(smt.stats   54   7562 267641 657286  7404/7038/525   13383/1767    56  381   25.60)
(smt.stats   55   7663 272347 673748  7448/7068/526   13555/2202    57  381   25.60)
(smt.stats   56   7774 277452 690748  7470/7089/526   13720/2203    57  381   25.70)
ramon: poll                 wall=16.000s usage=15.936s mem=27172KiB load=1.00 rootload=1.00
(smt.stats   57   7896 283354 720099  7528/7119/526   14096/2203    57  381   25.70)
(smt.stats   58   8030 285632 734309  7557/7177/526   14324/2204    57  381   25.70)
(smt.stats   59   8177 293123 765565  7620/7222/527   14574/2282    58  382   25.79)
ramon: poll                 wall=17.000s usage=16.936s mem=27456KiB load=1.00 rootload=1.00
(smt.stats   60   8338 299897 789324  7724/7262/527   14890/2284    58  382   25.79)
(smt.stats   61   8515 304324 803343  7785/7419/528   15152/2322    59  383   25.90)
(smt.stats   62   8709 316234 839057  7788/7422/528   15466/2322    59  383   25.90)
(smt.stats   63   8922 327346 899846  7818/7435/528   15933/2322    59  383   25.90)
ramon: poll                 wall=18.000s usage=17.936s mem=27540KiB load=1.00 rootload=1.00
(smt.stats   64   9156 333006 920479  8085/7460/528   16292/2331    59  383   26.11)
ramon: poll                 wall=19.000s usage=18.935s mem=27604KiB load=1.00 rootload=1.00
(smt.stats   65   9413 338046 935102  8314/7747/528   16591/2334    59  383   26.18)
(smt.stats   66   9514 339500 945336  8323/7953/528   16821/2334    59  383   26.29)
ramon: poll                 wall=20.000s usage=19.935s mem=27956KiB load=1.00 rootload=1.00
(smt.stats   67   9625 343671 966429  8347/7965/528   16970/2335    59  383   26.38)
ramon: end                  Fri Nov  1 18:21:08 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.972s
ramon: group.stime          0.024s
ramon: group.mempeak        28472KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
