ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:46:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25070 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/fJWOJqC4podk.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             110138
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4510   2094  1220/1101/92      94/4     4   15   19.11)
(smt.stats    1    202   6439   3846  1870/1685/92     190/5     4   15   19.22)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32 := 32&61
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 61 := 60 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32 := 32&61
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 61 := 60 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 18014398509481985 := 60 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 18014398509481985 := 60 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&18014398509481983
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 18014398509481985 := 168 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32 := 32&896
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 31 := 32&896
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 30 := 32&896
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&896
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 281474976710670 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&18014398509479424
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 281474976710616 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 31 := 32&7296
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 31 := 32&7296
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 30 := 32&7296
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&7296
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 114 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&7296
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 114 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&7296
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 114 << 6
(smt.stats    2    313   7599   5132  1958/1725/122     295/15     7   22   19.61)
(smt.stats    3    414   9640   8154  2000/1800/136     396/13     9   30   19.70)
(smt.stats    4    525  10598  10027  2460/2072/139     512/27     9   30   19.70)
(smt.stats    5    647  13003  13323  2474/2223/146     637/37    10   34   19.83)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 1&2335199806784770
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&2335199806784770
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784770 := 844424930131993 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 1&2335199806784770
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&2335199806784770
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784770 := 844424930131993 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 1&1688849860263903
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1688849860263903 := 844424930131993 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 1&1688849860265282
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&1688849860265282
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 844424930132641 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&562949953421330
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 281474976710665 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&562949953421330
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 281474976710665 << 1
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14811  15361  2539/2284/160     746/39    12   43   19.93)
(smt.stats    7    859  16174  17745  2564/2305/160     870/39    12   43   20.03)
(smt.stats    8    981  19084  20403  2611/2345/176     992/48    14   58   20.03)
(smt.stats    9   1115  23513  26085  2637/2371/185    1099/48    14   58   20.14)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784733 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784732 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784732 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784728 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784720 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 256 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 512 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1024 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16384 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32768 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 131072 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 524288 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1048576 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8388608 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16777216 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784641
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&321
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&321
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 13 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 5 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784735
(smt.stats   10   1216  26065  28940  2744/2440/264    1180/100    16  130   20.64)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 5 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4503599627370496&2335199806784705
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784705 := 13510798882111493 << 53
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4503599627370496&2335199806784705
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784705 := 13510798882111493 << 53
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4503599627370496&2335199806784705
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784705 := 13510798882111493 << 53
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4503599627370496&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 321 := 13510798882111493 << 53
(smt.stats   11   1327  28122  31343  2862/2490/289    1316/113    16  130   21.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  30178  35719  2973/2710/319    1446/153    18  158   21.03)
(smt.stats   13   1583  33052  40027  2999/2736/321    1605/166    19  163   21.03)
(smt.stats   14   1730  38600  49084  3022/2749/321    1779/166    19  163   21.12)
(smt.stats   15   1831  41217  51405  3032/2767/322    1882/190    20  164   21.12)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 516308395293147136 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 498293996783665152 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 498293996783665152 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762461256843264
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 516308395293147136 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&14157036841336832
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 554588992125796352 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&14157036841336832
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 590617789144760320 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 137438953472&11905237027651584
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 570351590821593088 := 15762598695796736 << 38
(smt.stats   16   1942  42729  53960  3180/2770/322    1996/192    20  164   21.22)
(smt.stats   17   2064  45109  56156  3236/2967/337    2133/194    21  167   21.22)
(smt.stats   18   2198  48182  62204  3249/2981/337    2307/194    21  167   21.22)
ramon: poll                 wall=1.000s usage=0.948s mem=22484KiB load=0.95 rootload=0.94
(smt.stats   19   2345  55384  75677  3251/2985/337    2462/223    22  167   21.33)
(smt.stats   20   2506  59540  82767  3300/3034/339    2678/233    23  167   21.33)
(smt.stats   21   2607  63137  87703  3304/3038/340    2799/233    23  167   21.33)
(smt.stats   22   2718  64193  88772  3353/3039/340    2955/259    24  170   21.53)
(smt.stats   23   2840  66276  91916  3490/3172/340    3129/262    24  170   21.62)
(smt.stats   24   2974  68340  97130  3520/3243/340    3332/264    24  170   21.62)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 64&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 64&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 30357597488201153 := 18014398509481963 << 7
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 64&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 30357597488201153 := 18014398509481963 << 7
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 64&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 30357597488201153 := 18014398509481963 << 7
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 64&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 12343198978719169 := 18014398509481963 << 7
(smt.stats   25   3121  72561 103948  3568/3301/357    3519/338    26  182   21.62)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 128&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 30357597488201153 := 18014398509481964 << 8
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 128&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 128&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 128&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1039163914019192257 := 18014398509481964 << 8
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 128&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1057178312528674241 := 18014398509481964 << 8
(smt.stats   26   3282  78782 115295  3590/3319/369    3719/338    26  182   21.93)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1165264703585566145 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1165264703585566145 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 4606014818896625089 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 4606014818896625089 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 6144 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 14636698788954029 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 14073748835532786 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 14073748835532786 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8192 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8192 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8191 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8190 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 2 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 4 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 2 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 4 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 16 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 32 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 64 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 128 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 256 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 512 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 1024 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 2048 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 4096 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8192 := 18014398509252608&8192
(smt.stats   27   3459  83074 125195  3735/3462/496    3974/448    28  223   22.48)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 33554432&3252355394961409
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1048576 := 33554432&2335362697396225
(smt.stats   28   3560  87224 134042  3796/3485/499    4091/451    28  223   22.48)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 524288 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 131072 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32768 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32768 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16384 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16384 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16384 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8388608 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8388608 := 33554432&2335912453210113
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8388608 := 33554432&2335912453210113
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 256 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 512 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1024 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1024 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16777216 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 33554432&2335637575303169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 20350036084785153 := 18014398509481982 << 26
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 33554432&2335637575303169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335637575303169 := 18014398509481982 << 26
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 33554432&2335637575303169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335637575303169 := 18014398509481982 << 26
ramon: poll                 wall=2.000s usage=1.946s mem=23996KiB load=1.00 rootload=0.98
(smt.stats   29   3671  90911 148318  3917/3526/514    4201/510    29  252   22.70)
(smt.stats   30   3793  94583 155756  3920/3644/600    4376/524    30  269   22.79)
(smt.stats   31   3927  98266 166312  3926/3650/601    4529/547    31  276   23.01)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 102921 176978  3964/3677/610    4698/548    31  276   23.11)
(smt.stats   33   4235 106880 184525  4045/3696/610    4943/593    32  294   23.20)
(smt.stats   34   4412 114427 197097  4113/3833/613    5155/646    33  299   23.20)
(smt.stats   35   4606 122636 209688  4122/3842/617    5336/659    34  315   23.30)
(smt.stats   36   4707 129149 222745  4238/3930/619    5458/662    35  321   23.49)
(smt.stats   37   4818 135139 231576  4250/3938/619    5623/662    35  321   23.60)
ramon: poll                 wall=3.000s usage=2.940s mem=24992KiB load=0.99 rootload=1.00
(smt.stats   38   4940 142419 240117  4259/3951/619    5844/662    35  321   23.60)
(smt.delete-inactive-clauses  :num-deleted-clauses 68)
(smt.stats   39   5074 148627 250326  4267/3956/619    5979/662    35  321   23.72)
(smt.stats   40   5221 153444 259111  4516/3968/619    6313/672    35  321   23.91)
(smt.stats   41   5382 158428 274732  4809/4226/619    6744/681    35  321   24.19)
ramon: poll                 wall=4.000s usage=3.940s mem=25840KiB load=1.00 rootload=1.00
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
(smt.stats   42   5559 162482 285253  4994/4538/619    7250/685    35  321   24.29)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606846977 := 285873023221809 << 51
(smt.stats   43   5753 170133 307021  5195/4726/625    7799/855    36  322   24.38)
(smt.stats   44   5966 178720 336424  5237/4927/627    8613/961    38  325   24.48)
(smt.stats   45   6067 183794 350221  5244/4934/627    8826/961    38  325   24.58)
(smt.stats   46   6178 188538 364699  5260/4950/627    9005/1058    39  327   24.58)
ramon: poll                 wall=5.000s usage=4.940s mem=26168KiB load=1.00 rootload=0.99
(smt.stats   47   6300 193651 376931  5267/4957/627    9329/1058    39  327   24.68)
(smt.stats   48   6434 196587 383235  5272/4962/628    9519/1226    40  335   24.68)
(smt.stats   49   6581 199263 394538  5354/4970/629    9872/1232    40  335   24.78)
ramon: poll                 wall=6.004s usage=5.943s mem=26440KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 200952 398172  5825/5095/629   10036/1234    40  335   24.97)
(smt.stats   51   6919 202581 404611  6266/5597/629   10241/1237    40  335   25.06)
(smt.stats   52   7113 211600 420083  6320/6005/630   10455/1347    41  338   25.16)
(smt.stats   53   7326 222180 451425  6350/6040/631   10641/1347    41  338   25.16)
ramon: poll                 wall=7.000s usage=6.938s mem=26680KiB load=1.00 rootload=0.99
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 2&11905237027651585
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 2&11905237027651585
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 29919635537133569 := 14263414591328282 << 2
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 2&11905237027651585
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 29919635537133569 := 14263414591328282 << 2
(smt.stats   54   7560 227989 463908  6450/6062/631   10949/1366    42  341   25.25)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 2&11905237027651585
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 29919635537133569 := 14262590403440642 << 2
(smt.stats   55   7661 231017 477945  6569/6197/640   11085/1368    42  341   25.35)
(smt.stats   56   7772 235177 488642  6587/6269/640   11215/1412    43  352   25.35)
ramon: poll                 wall=8.000s usage=7.938s mem=26900KiB load=1.00 rootload=1.00
(smt.stats   57   7895 239935 499416  6603/6291/641   11416/1486    44  352   25.35)
(smt.stats   58   8029 244579 510934  6704/6332/644   11580/1491    44  352   25.44)
(smt.stats   59   8176 249455 522456  6844/6384/644   11823/1496    44  352   25.63)
ramon: poll                 wall=9.008s usage=8.941s mem=27280KiB load=1.00 rootload=1.00
(smt.stats   60   8337 253674 531880  6900/6556/645   11988/1558    45  363   25.63)
(smt.stats   61   8514 256289 550018  6917/6593/646   12271/1558    45  363   25.73)
ramon: poll                 wall=10.000s usage=9.933s mem=27560KiB load=1.00 rootload=1.00
(smt.stats   62   8708 267174 569754  7138/6799/647   12593/1600    46  364   25.83)
ramon: poll                 wall=11.000s usage=10.932s mem=27708KiB load=1.00 rootload=1.00
(smt.stats   63   8921 274593 591919  7430/6825/647   12981/1606    46  364   26.02)
ramon: poll                 wall=12.000s usage=11.932s mem=27820KiB load=1.00 rootload=1.00
(smt.stats   64   9155 284711 618091  7523/7126/647   13420/1662    47  366   26.23)
ramon: poll                 wall=13.000s usage=12.932s mem=28000KiB load=1.00 rootload=0.99
(smt.stats   65   9412 301630 667109  7563/7234/648   14221/1767    48  368   26.23)
(smt.stats   66   9513 305622 678428  7581/7257/648   14410/1767    48  368   26.23)
(smt.stats   67   9624 309995 699089  7587/7263/648   14572/1767    48  368   26.32)
(smt.stats   68   9746 320698 722690  7599/7272/648   14724/1767    48  368   26.32)
(smt.stats   69   9880 328620 746621  7608/7284/648   15004/1767    48  368   26.32)
(smt.delete-inactive-clauses  :num-deleted-clauses 325)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10027 333813 768818  7610/7286/648   14924/1767    48  368   26.42)
(smt.stats   71  10188 344788 813159  7619/7295/648   15236/1767    48  368   26.42)
ramon: poll                 wall=14.000s usage=13.932s mem=28116KiB load=1.00 rootload=1.00
(smt.stats   72  10365 355542 854626  7624/7300/648   15709/1767    48  368   26.42)
(smt.stats   73  10559 366648 896692  7631/7307/648   16101/1767    48  368   26.42)
(smt.stats   74  10772 376867 933360  7642/7318/648   16431/1767    48  368   26.52)
(smt.stats   75  11006 391220 984994  7647/7323/652   16722/2241    50  374   26.52)
ramon: poll                 wall=15.000s usage=14.931s mem=28228KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11263 404772 1028904  7835/7335/652   17085/2249    50  374   26.61)
ramon: poll                 wall=16.000s usage=15.931s mem=28388KiB load=1.00 rootload=1.00
(smt.stats   77  11545 411337 1054566  8222/7898/658   17537/2272    51  380   26.80)
(smt.stats   78  11646 417918 1080025  8223/7899/658   17646/2272    51  380   27.24)
(smt.stats   79  11757 424485 1107453  8229/7905/658   17784/2304    52  392   27.34)
(smt.stats   80  11879 430321 1132606  8240/7914/658   18015/2304    52  392   27.44)
(smt.stats   81  12013 433671 1145574  8314/7980/660   18315/2409    53  395   27.69)
(smt.stats   82  12160 439684 1159362  8380/7985/660   18502/2409    53  395   27.69)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4&6360125010870274
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 60403320539316226 := 18014398509481959 << 3
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4&6360125010870274
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 6360125010870274 := 18014398509481959 << 3
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4&6360125010870274
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 6360125010870274 := 18014398509481959 << 3
(smt.stats   83  12321 444899 1187149  8458/8088/661   18713/2410    53  395   27.79)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4&18014398509481784
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509072384 := 18014398509481959 << 3
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4&18014398509481784
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509072136 := 18014398509481959 << 3
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4&18014398509481784
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509072136 := 18014398509481959 << 3
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4&18014398509481784
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 4 := 18014398509481784&4
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4&18014398509481784
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 2 := 18014398509481784&4
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4&18014398509481784
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 1 := 18014398509481784&4
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 4&18014398509481784
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 4&18014398509481784
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4 := 4&18014398509481784
(smt.stats   84  12498 447958 1204221  8524/8180/697   18963/2427    54  397   27.98)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 1&18014398509481930
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&18014398509481930
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 1 := 18014398509481930&1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&18014398509481930
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 1 := 18014398509481930&1
ramon: poll                 wall=17.000s usage=16.931s mem=30724KiB load=1.00 rootload=0.99
(smt.stats   85  12692 457522 1233552  8540/8190/697   19168/2427    54  397   29.21)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 256 := 2097152&17570898277629927
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 256 := 2097152&17570898277629927
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 512 := 2097152&17570898277621989
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 512 := 2097152&17570898277621989
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1024 := 2097152&17570898277621989
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1024 := 2097152&17570898277621989
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 2097152&17570898277621985
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 2097152&17570898277621985
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32768 := 2097152&17570898277621985
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32768 := 2097152&17570898277621985
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32768 := 2097152&17570898277621985
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 2097152&17570898277621985
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 2097152&17570898277621985
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 524288 := 2097152&17570898277621985
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 524288 := 2097152&17570898408120575
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 131072 := 2097152&17570898307448831
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 131072 := 2097152&17570898307448831
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1048576 := 2097152&17570898307448831
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1048576 := 2097152&17570898307448831
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1048576 := 2097152&17570898307448831
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 2097152&17570898307448831
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 35585296816930815 := 18014398509481978 << 22
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 2097152&17570898341003263
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 35585296850485247 := 18014398509481978 << 22
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 2097152&17570898307457279
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 2097152&17570898309562367
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 35585296819044351 := 18014398509481978 << 22
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 2097152&17570898309545983
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 2097152&17570898309576191
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 35585296819058175 := 18014398509481978 << 22
(smt.stats   86  12905 467872 1262126  8731/8354/713   19558/2481    55  407   29.40)
(smt.stats   87  13139 475818 1286506  8780/8408/716   19907/2577    56  415   29.50)
(smt.stats   88  13396 491972 1336354  9005/8586/716   20503/2580    56  415   29.79)
ramon: poll                 wall=18.000s usage=17.931s mem=31664KiB load=1.00 rootload=1.00
(smt.stats   89  13678 500358 1358315  9105/8626/716   20989/2580    56  415   30.01)
ramon: poll                 wall=19.000s usage=18.931s mem=31888KiB load=1.00 rootload=1.00
(smt.stats   90  13988 507736 1371267  9540/8757/716   21438/2585    56  415   30.30)
(smt.stats   91  14089 513107 1382914  9654/9262/717   21651/2768    57  418   30.31)
(smt.stats   92  14200 518898 1400367  9672/9280/718   21900/2768    57  418   30.31)
(smt.stats   93  14322 527297 1420569  9683/9280/718   22120/2768    57  418   30.41)
(smt.stats   94  14456 534011 1446500  9757/9365/723   22446/2833    58  422   30.50)
ramon: poll                 wall=20.000s usage=19.930s mem=32280KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:46:46 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.985s
ramon: group.utime          19.953s
ramon: group.stime          0.032s
ramon: group.mempeak        32792KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.055s
ramon: loadavg              1.00
