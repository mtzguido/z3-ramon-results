ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:14:11 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28512 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KCz2hBOgbJkl.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             751420
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    75.188     10000        49          0            1        2)
(sat.ddfw       1      1   39.8446     20001        98          1            1        3)
(sat.ddfw       1      1   41.7537     40001       196          2            1        5)
(smt.stats    0    101    980    252  1120/961/107     104/16     5   16   51.95)
(sat.ddfw       1      1   37.2208     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.851s mem=53968KiB load=0.85 rootload=0.85
(smt.stats    1    202   2052    919  1351/1171/110     234/29     7   20   51.95)
(sat.ddfw       1      1   32.2841    110001       539          4            1       12)
(smt.stats    2    313   3188   2174  1438/1308/114     344/35     9   27   52.05)
(smt.stats    3    414   4125   4080  1549/1414/124     450/57    13   31   52.05)
(smt.stats    4    525   5184   7322  1609/1465/133     592/96    17   40   52.14)
(smt.stats    5    647   6559  12294  1626/1486/133     711/96    17   40   52.14)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   8759  17676  1653/1494/133     815/96    17   40   52.24)
(sat.ddfw       1      1   28.0736    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.848s mem=54280KiB load=1.00 rootload=0.99
(smt.stats    7    859  10028  20656  1701/1512/133     945/96    17   40   52.24)
(sat.ddfw       1      1   25.9296    220001      1078          6            1       23)
(smt.stats    8    981  11246  22576  1741/1588/135    1091/145    18   45   52.24)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 2 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 2 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 2 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 43&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 43 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177656&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177656&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177656&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177656&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 70368744177662 << 2
(smt.stats    9   1116  14066  26319  1850/1675/139    1215/149    20   48   52.43)
(smt.stats   10   1217  15021  28126  1867/1722/152    1328/164    22   54   52.43)
(smt.stats   11   1328  16865  30343  1873/1728/152    1447/164    22   54   52.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  18481  33587  1960/1779/152    1610/173    23   56   52.52)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5881&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 281474976716537 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 1 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5881&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 281474976716537 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 0 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 25860513485291520 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 0 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088833&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 316659348799489 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5865&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 25754960369030889 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411008&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411009&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1611884046319617 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411008&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411008&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 825 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411008&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 918 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5857&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1618481116092129 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 61572651155455&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1609685023064063 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 50577534877696&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 1 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5857&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 422212465071841 := 1464 << 38
(smt.stats   13   1584  19798  36361  2057/1828/152    1765/183    23   56   52.81)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 59373627899903&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1607485999808511 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 59373627899903&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1607485999808511 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 281474976710655 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 30099130810368&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 30099130810368&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 35184372088833 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 30099130810368&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 35184372088833 := 1462 << 36
ramon: poll                 wall=3.000s usage=2.920s mem=55156KiB load=1.07 rootload=1.07
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 50577534877696&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 919 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 50577534877696&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 1463 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 51677046505472&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 403520767393792 := 1468 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 211106232532991 := 1468 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 211106232532991 := 1468 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 211106232532991 := 1468 << 42
(smt.stats   14   1731  21550  39622  2160/1930/178    1962/272    24   62   52.91)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 52776558133248&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 65970697666560 := 1468 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 52776558133248&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 65970697666560 := 1468 << 42
(sat.ddfw       1      1   23.1558    290001      1421          7            1       30)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 57174604644352&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6460730324811776 := 1469 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 1 := 65970697666560&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666560&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6469526417833984 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666561&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666561&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666561&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666562&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6469526417833986 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177662&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 25825329113202686 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 52776558133248 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 52776558133248 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&1
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #642 1 #644))) 1 := 35184372088832&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 1 := 35184372088832&1
(smt.stats   15   1832  23251  42740  2277/2043/219    2077/290    25   66   53.11)
(sat.ddfw       1      1   20.5656    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.920s mem=55396KiB load=1.00 rootload=1.00
(smt.stats   16   1943  24523  43991  2348/2130/240    2197/292    26   75   53.30)
(smt.stats   17   2065  27632  48634  2409/2209/242    2334/307    27   80   53.30)
(sat.ddfw       1      1   19.2143    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.027s mem=55588KiB load=1.11 rootload=1.10
(smt.stats   18   2199  29205  50475  2578/2249/242    2491/308    27   80   53.68)
(sat.ddfw       1      1   17.4764    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.116s mem=56008KiB load=1.09 rootload=1.09
(sat.ddfw       1      1   15.8868    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=7.155s mem=56140KiB load=1.04 rootload=1.04
(smt.stats   19   2346  30042  52591  2936/2502/242    2638/321    27   80   53.97)
ramon: poll                 wall=8.000s usage=8.110s mem=56152KiB load=0.96 rootload=0.95
(smt.stats   20   2507  33204  60295  3087/2885/245    2810/348    28   83   54.07)
(sat.ddfw       1      1   14.5737    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=9.106s mem=56216KiB load=1.00 rootload=1.00
(smt.stats   21   2608  35250  63412  3240/2930/245    2923/364    29   86   54.16)
(sat.ddfw       1      1   13.4631    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=10.105s mem=56344KiB load=1.00 rootload=1.00
(smt.stats   22   2719  37794  68912  3467/3151/245    3046/367    29   86   54.16)
ramon: poll                 wall=11.000s usage=11.101s mem=56388KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   12.5235   1060001      5196         14            1      108)
(smt.stats   23   2841  40493  71593  3575/3279/245    3180/370    29   86   54.26)
ramon: poll                 wall=12.000s usage=12.099s mem=56468KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.7096   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=13.099s mem=56540KiB load=1.00 rootload=1.00
(smt.stats   24   2975  41081  72917  3710/3438/245    3328/373    29   86   54.45)
(smt.stats   25   3122  44215  77983  3973/3705/247    3508/398    30   93   54.54)
ramon: poll                 wall=14.000s usage=14.098s mem=56688KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.1157   1370001      6715         16            1      139)
(smt.stats   26   3283  48217  82643  4173/3858/247    3680/437    31   98   54.73)
ramon: poll                 wall=15.000s usage=15.226s mem=56892KiB load=1.13 rootload=1.13
(smt.stats   27   3460  52121  91328  4199/3988/247    3925/440    31   98   54.83)
(smt.stats   28   3561  54181  94616  4235/4015/249    4096/510    32  100   54.83)
ramon: poll                 wall=16.000s usage=16.226s mem=57024KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5335   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=17.227s mem=57096KiB load=1.00 rootload=1.00
(smt.stats   29   3672  56032  97125  4382/4065/249    4216/514    32  100   54.93)
ramon: poll                 wall=18.000s usage=18.226s mem=57144KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.94805   1720001      8431         18            1      174)
(smt.stats   30   3794  58376 100660  4656/4368/249    4342/577    33  102   54.93)
ramon: poll                 wall=19.000s usage=19.226s mem=57224KiB load=1.00 rootload=1.00
(smt.stats   31   3928  61568 106570  4826/4482/249    4510/581    33  102   55.16)
ramon: poll                 wall=20.000s usage=20.226s mem=57304KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:14:31 2024
ramon: root.execname        z3
ramon: root.utime           20.270s
ramon: root.stime           0.010s
ramon: group.total          20.283s
ramon: group.utime          20.271s
ramon: group.stime          0.012s
ramon: group.mempeak        57816KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              1.01
