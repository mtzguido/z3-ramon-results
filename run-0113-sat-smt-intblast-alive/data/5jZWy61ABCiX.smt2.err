ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:00:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41958 MiB
ramon: sys.mem.avail        61385 MiB
ramon: sys.nprocs           1312
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5jZWy61ABCiX.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3682263
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   231/230     0/0  58       0    18.55   0.00)
(sat.stats    162    760    0   231/230   162/84  58       0    18.85   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 314 :time 0.00)
(sat.stats    162    760    0   231/230   162/84  58       0    18.85   0.01)
(sat.stats    162    760    0   231/230   162/84  58       0    18.85   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 573018.85 :time 0.00)
(sat.stats    162    760    0   233/232   161/83  58       0    18.85   0.01)
(sat.stats    168    771    1   233/232   167/83  58       0    18.94   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    171    782    2   233/232   170/84  58       0    18.94   0.01)
(sat.stats    175    812    3   233/232   174/86  58       0    18.94   0.01)
(sat.stats    178    831    4   233/232   177/86  58       0    18.94   0.01)
(sat.stats    181    856    5   233/232   180/86  58       0    18.94   0.01)
(sat.stats    184    879    6   233/232   183/89  58       0    18.94   0.01)
(sat.stats    187    911    7   233/232   186/92  58       0    18.94   0.01)
(sat.stats    190    976    8   233/232   189/95  58       0    18.94   0.01)
(sat.stats    193   1030    9   233/232   192/98  58       0    18.94   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    196   1046   10   233/232   195/101  58       0    18.94   0.01)
(sat.stats    199   1065   11   233/232   198/102  58       0    18.94   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1222 :time 0.00)
(sat.stats    361   4367   12   234/233   359/199  59       0    19.13   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1374 :time 0.00)
(sat.stats    364   4455   13   233/232   362/201  62       0    19.13   0.02)
(sat.stats    367   4601   14   233/232   365/204  62       0    19.13   0.03)
(sat.stats    501   7654   26   233/232   499/278  62       0    19.42   0.15)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3680 :time 0.00)
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 311 := 311 << 41
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
shl: (shl[64] (bv2int %0) (mod (+ #46 #742) 64)) 95 := 95 << 41
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4017 :time 0.00)
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 170 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 53 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 148 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 160 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 136 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 80 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 64 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 128 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 3216896 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 256 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 15432704 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 38164480 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 80576512 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 4096 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 8192 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 16384 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 235012096 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 65536 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 7411859456 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 262144 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 9989783552 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 61853401088 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 2097152 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 218439352320 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 8388608 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 33554432 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 16777216 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 108716359680 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 134217728 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 297426485248 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 536870912 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 925565452288 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 588410519552 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 103079215104 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 8589934592 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 17179869184 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 206158430208 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 412316860416 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 549755813888 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 274877906944 := 1099511627775&208907209277440
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 1 := 208907209277440&1099511627775
 (sat-cleaner :elim-literals 44 :elim-clauses 0 :cost 4776 :time 0.00)
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 31546 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 119276 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 167360 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 16 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 8 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 32 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 1346816 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 128 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 8160768 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 14245888 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 1024 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 2048 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 4096 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 422363136 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 84148224 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 163840 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 131072 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 65536 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 12334923776 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 27412922368 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 24199036928 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 64164462592 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 4194304 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 263117078528 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 201460809728 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 33554432 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 67108864 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 201863462912 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 268435456 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 1610612736 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 1073741824 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 2147483648 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 352187318272 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 206158430208 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 17179869184 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 34359738368 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 549755813888 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 137438953472 := 208907209277440&1099511627775
band: (band[54] (if (= #582 53) 0 (if #584 1 #733)) (shl[54] (bv2int %0) (mod #46 54))) 0 := 1099511627775&208907209277440
band: (band[54] (shl[64] (bv2int %0) (mod #743 64)) (if (or #754 #755 #756 #757 #758 #759 #760 #761 #762 #763 #764 #765) 0 (if #766 1 #868))) 274877906944 := 208907209277440&1099511627775
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    785  12203   53  1442/1439   781/334 323       0    22.94   0.54)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5890 :time 0.00)
ramon: poll                 wall=1.003s usage=1.003s mem=32612KiB load=1.00 rootload=0.97
ramon: poll                 wall=2.000s usage=1.999s mem=40736KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.999s mem=47780KiB load=1.00 rootload=0.99
(sat.stats   1183  28728   94 163402/163399  2241/1466 558       0    48.98   3.27)
ramon: poll                 wall=4.000s usage=3.999s mem=53180KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.999s mem=59984KiB load=1.00 rootload=0.98
ramon: poll                 wall=6.000s usage=5.998s mem=64728KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.998s mem=69704KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.998s mem=86008KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.998s mem=89144KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.961s mem=92380KiB load=0.96 rootload=0.96
(sat.stats   1597  35096  207 458460/458457  4637/3461 558       0    93.39  10.73)
ramon: poll                 wall=11.000s usage=10.961s mem=95448KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.961s mem=99072KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.961s mem=100MiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.960s mem=103MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.960s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.960s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.960s mem=113MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.959s mem=114MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.003s usage=18.962s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.958s mem=117MiB load=1.00 rootload=0.99
ramon: end                  Wed Dec 25 15:00:57 2024
ramon: root.execname        z3
ramon: root.utime           19.840s
ramon: root.stime           0.120s
ramon: group.total          19.975s
ramon: group.utime          19.847s
ramon: group.stime          0.128s
ramon: group.mempeak        118MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              1.00
