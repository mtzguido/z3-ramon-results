ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:37:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41119 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/cR1hOtZd2bXV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3023305
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3025    420  1327/1158/100      99/12     6   15   19.15)
(smt.stats    1    202   4756   1141  1889/1722/102     196/20     7   18   19.25)
(smt.stats    2    313   8017   3082  1894/1727/103     303/21     9   21   19.35)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 576460752303423487&216172782113783808
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&216172782113783808
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 576460752303423488 := 576460752303423520 >>l 8
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&216172782113783808
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 576460752303423488 := 576460752303423520 >>l 8
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&216172782113783808
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 576460752303423488 := 576460752303423520 >>l 8
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&216172782113783808
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 576460752303423488 := 18446744073709551360 >>l 8
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&216172782113783808
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 1 := 15 >>l 3
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&216172782113783808
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 1 := 8 >>l 3
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&216172782113783808
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 1 := 8 >>l 3
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&216172782113783808
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1 := 1&216172782113783808
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 2&216172782113783808
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 2 := 2&216172782113783808
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 2&216172782113783808
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 1 := 22 >>l 3
(smt.stats    3    414  10210   4325  2242/2044/134     411/25    10   27   19.54)
(smt.stats    4    525  11304   5218  2533/2076/141     524/62    11   32   19.64)
(smt.stats    5    647  13150   7019  2657/2410/142     660/72    12   34   19.74)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  15594   9542  2729/2451/142     762/87    13   34   19.85)
(smt.stats    7    859  19207  12935  2898/2645/143     867/94    14   37   19.85)
(smt.stats    8    981  20294  15354  2921/2665/146     978/100    15   39   19.85)
(smt.stats    9   1115  23949  18989  2925/2669/146    1107/101    16   41   19.98)
(smt.stats   10   1216  25362  20798  2927/2671/146    1207/101    16   41   19.98)
(smt.stats   11   1327  27146  24347  2932/2676/148    1318/103    17   41   19.98)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  31243  28248  2933/2677/149    1437/105    18   42   20.13)
(smt.stats   13   1583  33988  31080  2936/2680/149    1575/105    18   42   20.13)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 2&0
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 2 := 448 >>l 5
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 99&0
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 99 := 736 >>l 5
(smt.stats   14   1730  37039  35220  2961/2689/150    1723/113    19   42   20.13)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 459 := 481&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 458 := 481&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 481&704512
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 481 := 480 >>l 50
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 480&704512
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 480 := 480 >>l 50
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 480&704512
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 480 := 480 >>l 50
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&704512
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 21 := 0 >>l 45
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&704512
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 21 := 0 >>l 45
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&704512
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 21 := 0 >>l 45
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&704512
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 14 := 0 >>l 45
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&704512
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 1 := 0 >>l 45
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 21&704512
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 20 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 16 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 20 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 18 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 8 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 16 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 16 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 8 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 4 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 8 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 16 := 21&704512
(smt.stats   15   1832  38475  37033  3042/2773/202    1829/123    20   43   20.42)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 4 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 4 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 4 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 4 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 2 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 1 := 21&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 8 := 16&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 8 := 8&704512
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&704512
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 1 := 23643898043695168 >>l 50
(smt.stats   16   1943  39609  40841  3089/2825/227    1947/138    21   62   20.51)
(smt.stats   17   2065  42652  50273  3104/2838/227    2074/138    21   62   20.61)
(smt.stats   18   2199  43458  54298  3149/2872/227    2198/145    22   74   20.61)
(smt.stats   19   2347  47029  61042  3166/2886/227    2374/145    22   74   20.71)
(smt.stats   20   2508  50979  68811  3183/2904/227    2539/145    22   74   20.93)
(smt.stats   21   2609  51587  72472  3183/2904/227    2648/145    22   74   20.93)
(smt.stats   22   2720  52052  76636  3183/2904/227    2764/145    22   74   20.93)
(smt.stats   23   2842  53417  80148  3187/2904/227    2901/147    22   74   20.93)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 128&0
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 128 := 128 >>l 5
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 128&396316767208603648
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 128 := 128 >>l 9
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 18&396316767208603648
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 18 := 128 >>l 9
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 16&396316767208603648
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 16 := 128 >>l 9
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&396316767208603648
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 5 := 4 >>l 4
ramon: poll                 wall=1.000s usage=0.941s mem=22040KiB load=0.94 rootload=0.92
(smt.stats   24   2976  55448  84930  3233/2927/239    3068/196    23   77   20.93)
(smt.stats   25   3123  56943  90559  3297/3007/240    3248/196    23   77   21.03)
(smt.stats   26   3284  57689  94599  3301/3011/240    3412/205    24   81   21.03)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 3&22016
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 3 := 0 >>l 55
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 2&22016
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 2 := 0 >>l 55
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 2&22016
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 2 := 0 >>l 55
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 2&22016
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 2 := 0 >>l 55
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 2&22016
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 2 := 0 >>l 55
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&22016
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 140737488355345 := 1125899906842628 >>l 50
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&22016
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 48378511622166 := 1125899906842628 >>l 50
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&22016
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 48378511622166 := 1125899906842628 >>l 50
(smt.stats   27   3461  59213  99616  3336/3042/256    2234/219    25 1452   21.12)
(smt.stats   28   3562  61205 103746  3388/3077/256    2352/219    25 1452   21.12)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&396316767208603648
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 1 := 6208 >>l 9
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&396316767208603648
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 2 := 18 >>l 4
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&396316767208603648
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 2 := 18 >>l 4
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&396316767208603648
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1 := 1&396316767208603648
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1&396316767208603648
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1 := 1&396316767208603648
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 1 := 1&396316767208603648
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 1 := 1&396316767208603648
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 1 := 1&396316767208603648
(smt.stats   29   3673  64389 108966  3401/3096/256    2517/238    26 1457   21.12)
(smt.stats   30   3795  68206 117480  3451/3106/257    2676/262    27 1457   21.22)
(smt.stats   31   3929  71631 128115  3470/3164/257    2843/262    27 1457   21.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas        :deletions      )
(smt.stats   32   4076  74317 134195  3506/3175/257    3023/267    27 1457   21.31)
(smt.stats   33   4237  76999 140133  3590/3271/258    3246/315    28 1461   21.42)
(smt.stats   34   4414  79716 151295  3608/3295/258    3477/315    28 1461   21.42)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 2251799813687203&387309567953862656
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 2251799813687203 := 2251799813687840 >>l 11
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1125899906842019&387309567953862656
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 1125899906842019 := 1125899906842656 >>l 11
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 1125899906842019&387309567953862656
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 1125899906842019 := 1125899906842656 >>l 11
(smt.stats   35   4608  82123 158492  3720/3330/258    3778/321    28 1461   21.51)
(smt.stats   36   4709  84548 164681  3735/3422/265    3882/357    29 1468   21.61)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&387309567953862656
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 1 := 18 >>l 6
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&387309567953862656
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 21 := 1 >>l 6
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&387309567953862656
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 21 := 1 >>l 6
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 0&387309567953862656
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #100 #352) 64)) 0 := 2048 >>l 11
ramon: poll                 wall=2.000s usage=1.940s mem=22824KiB load=1.00 rootload=1.00
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 70368744177648&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1 := 70368744177648&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 70368744177648&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 6 := 70368744177648&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 70368744177648&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 6 := 70368744177648&387309567953862656
(smt.stats   37   4820  86457 174012  3772/3436/271    4056/368    30 1472   21.71)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 53326313947132 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 53326313947128 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 53326313947120 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 8 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 8 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 16 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 32 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 64 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 128 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 256 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 256 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 512 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1024 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 2048 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 4096 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 8192 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 16384 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 32768 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 65536 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 131072 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 262144 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 524288 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 131072 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 262144 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 524288 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1048576 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 2097152 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 4194304 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 8388608 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 16777216 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 33554432 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 67108864 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 134217728 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 268435456 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 536870912 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1073741824 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 134217728 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 268435456 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1073741824 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 2147483648 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 4294967296 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 8589934592 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 17179869184 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 4294967296 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 8589934592 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 34359738368 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 68719476736 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 68719476736 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 137438953472 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 274877906944 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 549755813888 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1099511627776 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 2199023255552 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 4398046511104 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 8796093022208 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 17592186044416 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 35184372088832 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 35184372088832 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 8589934592 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947136&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 17179869184 := 53326313947136&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947152&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 17179869184 := 53326313947152&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947152&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 17179869184 := 53326313947152&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53343493816320&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 17179869184 := 53343493816320&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53343493816320&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 68719476736 := 53343493816320&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53343493816320&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 137438953472 := 53343493816320&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947152&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 68719476736 := 53326313947152&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947152&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 137438953472 := 53326313947152&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53326313947152&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 274877906944 := 53326313947152&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53876069761024&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 549755813888 := 53876069761024&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53876069761024&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1099511627776 := 53876069761024&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53876069761024&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 2199023255552 := 53876069761024&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53876069761024&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 549755813888 := 53876069761024&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53876069761024&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 549755813888 := 53876069761024&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53876069761024&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 1099511627776 := 53876069761024&387309567953862656
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 0 := 53344048005648&387309567953862656
band: (band[59] (lshr[59] (bv2int %1) (mod #100 59)) (if (= #515 58) 12393906174523604992 (if #517 6196953087261802496 #631))) 2199023255552 := 53344048005648&387309567953862656
(smt.stats   38   4943  88251 181442  3947/3636/477    4240/437    31 1526   22.98)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5077  91862 190411  3995/3664/477    4392/442    31 1526   23.08)
(smt.stats   40   5224  95811 204105  4044/3724/482    4598/471    33 1541   23.08)
(smt.stats   41   5385 101844 217325  4165/3816/483    4848/471    33 1541   23.17)
(smt.stats   42   5562 106716 233892  4182/3839/489    5217/519    35 1556   23.27)
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 106 := 6751&198158383604301824
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 106 := 6751&198158383604301824
band: (band[59] (lshr[64] (* 32 #99) (mod #353 64)) (if (= #654 63) 793209995169510719488 (if #656 396604997584755359744 #780))) 106 := 6751&198158383604301824
(smt.stats   43   5756 115638 252025  4269/3905/495    5585/538    36 1560   23.37)
(smt.stats   44   5969 125169 280107  4284/3935/496    5912/551    37 1562   23.47)
ramon: poll                 wall=3.000s usage=2.940s mem=24768KiB load=1.00 rootload=0.98
(smt.stats   45   6070 127935 287567  4300/3947/498    6048/575    38 1565   23.47)
(smt.stats   46   6181 130607 298438  4331/3982/500    6253/581    38 1565   24.11)
(smt.stats   47   6303 131990 304937  4379/3995/500    6408/593    39 1573   24.11)
(smt.stats   48   6437 136133 336474  4424/4061/501    6608/607    40 1576   24.21)
(smt.stats   49   6584 140206 345245  4457/4086/503    6836/608    40 1576   24.40)
(smt.stats   50   6745 145860 361284  4545/4177/505    7111/641    41 1583   24.69)
ramon: poll                 wall=4.000s usage=3.939s mem=26316KiB load=1.00 rootload=1.00
(smt.stats   51   6922 148931 373113  4606/4234/506    7389/642    41 1583   24.69)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas        :deletions      )
(smt.stats   52   7116 151616 384579  4634/4261/506    7748/642    41 1583   24.69)
(smt.stats   53   7329 157039 402365  4650/4269/506    8052/700    42 1587   24.79)
(smt.stats   54   7563 163706 417810  4769/4299/506    8385/703    42 1587   25.07)
(smt.stats   55   7664 166792 427911  4828/4403/506    8538/708    42 1587   25.07)
ramon: poll                 wall=5.000s usage=4.923s mem=26508KiB load=0.98 rootload=0.99
(smt.stats   56   7775 170116 435879  4835/4460/506    8706/708    42 1587   25.07)
(smt.stats   57   7897 175144 452674  4841/4466/508    8848/764    43 1595   25.17)
(smt.stats   58   8031 177296 460143  4845/4470/508    9071/764    43 1595   25.26)
(smt.stats   59   8178 182823 475445  4894/4475/508    9254/782    44 1597   25.17)
(smt.stats   60   8339 189668 491836  4976/4526/508    9459/786    44 1597   25.17)
ramon: poll                 wall=6.000s usage=5.922s mem=26768KiB load=1.00 rootload=1.00
(smt.stats   61   8516 194966 503674  5067/4685/509    9668/808    45 1601   25.26)
(smt.stats   62   8710 201130 522706  5204/4730/510   10061/810    45 1601   25.45)
(smt.stats   63   8923 209889 552092  5209/4834/510   10384/837    46 1601   25.45)
ramon: poll                 wall=7.000s usage=6.921s mem=27216KiB load=1.00 rootload=0.99
(smt.stats   64   9157 214558 567745  5239/4849/511   10829/854    47 1607   25.55)
(smt.stats   65   9414 226448 610831  5276/4880/511   11172/855    47 1607   25.64)
(smt.stats   66   9515 228031 617098  5280/4904/513   11323/900    48 1613   25.64)
(smt.stats   67   9626 233351 624648  5376/4905/513   11488/902    48 1613   25.74)
ramon: poll                 wall=8.000s usage=7.921s mem=27228KiB load=1.00 rootload=1.00
(smt.stats   68   9748 237138 638088  5461/5084/515   11669/904    48 1613   25.74)
(smt.stats   69   9882 241217 652055  5644/5094/515   11919/904    48 1613   25.93)
(smt.delete-inactive-clauses  :num-deleted-clauses 169)
(smt.stats   70  10029 243756 662920  5667/5277/515   11962/997    49 1627   25.83)
ramon: poll                 wall=9.000s usage=8.920s mem=27412KiB load=1.00 rootload=1.00
(smt.stats   71  10190 250020 687516  5715/5293/515   12197/997    49 1627   25.93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas         :deletions      )
(smt.stats   72  10367 257393 705706  5756/5349/515   12416/997    49 1627   26.02)
(smt.stats   73  10561 263278 722135  5879/5391/515   12681/1001    49 1627   26.02)
ramon: poll                 wall=10.000s usage=9.920s mem=27556KiB load=1.00 rootload=1.00
(smt.stats   74  10774 272019 743799  5950/5515/515   12924/1003    49 1627   26.02)
(smt.stats   75  11008 277597 767626  5985/5609/516   13204/1125    50 1629   26.12)
(smt.stats   76  11265 285111 792413  6063/5625/518   13478/1128    50 1629   26.21)
(smt.stats   77  11547 291886 813742  6109/5705/518   13856/1128    50 1629   26.21)
ramon: poll                 wall=11.000s usage=10.919s mem=27640KiB load=1.00 rootload=1.00
(smt.stats   78  11648 295387 822943  6151/5737/518   14028/1166    51 1632   26.21)
(smt.stats   79  11759 299815 838065  6201/5789/518   14151/1170    51 1632   26.21)
(smt.stats   80  11881 302267 860428  6240/5855/518   14286/1170    51 1632   26.21)
(smt.stats   81  12015 304609 873006  6272/5896/520   14618/1191    52 1646   26.31)
(smt.stats   82  12162 309919 888298  6325/5914/520   14801/1193    52 1646   26.41)
ramon: poll                 wall=12.000s usage=11.919s mem=27892KiB load=1.00 rootload=1.00
(smt.stats   83  12323 316650 906684  6357/5980/520   15013/1193    52 1646   26.41)
(smt.stats   84  12500 321452 926552  6389/5998/520   15185/1238    53 1659   26.41)
(smt.stats   85  12694 331011 946091  6402/6026/520   15539/1238    53 1659   26.41)
(smt.stats   86  12907 340217 973344  6407/6031/520   15802/1238    53 1659   26.41)
ramon: poll                 wall=13.000s usage=12.918s mem=28036KiB load=1.00 rootload=1.00
(smt.stats   87  13141 346138 995670  6500/6086/522   16211/1304    54 1673   26.50)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   88  13398 369942 1089324  6503/6127/522   16548/1304    54 1673   26.50)
(smt.stats   89  13680 378573 1124057  6515/6139/522   16940/1359    55 1675   26.60)
ramon: poll                 wall=14.000s usage=13.917s mem=28248KiB load=1.00 rootload=1.00
(smt.stats   90  13990 387789 1146671  6791/6141/522   17544/1363    55 1675   26.88)
(smt.stats   91  14091 390515 1154987  6874/6494/523   17670/1406    56 1678   26.88)
(smt.stats   92  14202 393228 1166624  6912/6525/523   17858/1406    56 1678   26.88)
(smt.stats   93  14324 395915 1175770  6972/6541/523   18084/1410    56 1678   26.88)
(smt.stats   94  14458 399973 1193037  6984/6604/523   18331/1410    56 1678   26.99)
(smt.stats   95  14605 403736 1204219  6998/6613/524   18584/1475    57 1681   26.99)
ramon: poll                 wall=15.000s usage=14.916s mem=28748KiB load=1.00 rootload=1.00
(smt.stats   96  14766 409243 1220278  7015/6634/524   18804/1476    57 1681   26.99)
(smt.stats   97  14943 419104 1248468  7023/6647/524   19154/1476    57 1681   27.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 13)
(smt.stats   98  15137 424776 1263874  7056/6655/524   19397/1476    57 1681   27.50)
(smt.stats   99  15350 430273 1296473  7086/6687/525   19756/1589    58 1683   27.50)
(smt.stats  100  15584 438909 1338089  7099/6721/525   20375/1589    58 1683   27.59)
ramon: poll                 wall=16.000s usage=15.916s mem=29152KiB load=1.00 rootload=1.00
(smt.stats  101  15841 448804 1377916  7236/6756/527   20943/1675    59 1689   27.69)
(smt.stats  102  16123 457231 1405123  7411/7032/528   21493/1713    60 1690   27.88)
ramon: poll                 wall=17.000s usage=16.916s mem=29452KiB load=1.00 rootload=1.00
(smt.stats  103  16433 468759 1446436  7564/7036/528   21913/1718    60 1690   27.97)
(smt.stats  104  16773 478448 1489370  7594/7216/528   22479/1718    60 1690   27.97)
ramon: poll                 wall=18.000s usage=17.915s mem=29648KiB load=1.00 rootload=1.00
(smt.stats  105  16874 482430 1506283  7679/7217/528   22763/1719    60 1690   28.07)
(smt.stats  106  16985 485888 1528012  7680/7302/528   22987/1719    60 1690   28.07)
(smt.stats  107  17107 488670 1538505  7684/7306/528   23168/1719    60 1690   28.16)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats  108  17241 491594 1552942  7687/7309/528   23368/1719    60 1690   28.16)
ramon: poll                 wall=19.000s usage=18.915s mem=29768KiB load=1.00 rootload=1.00
(smt.stats  109  17388 495261 1565635  7948/7310/528   23588/1732    60 1690   28.27)
(smt.stats  110  17549 498611 1580666  8192/7713/528   23932/1738    60 1690   28.36)
(smt.stats  111  17726 508252 1617909  8341/7822/528   24371/1743    60 1690   28.45)
ramon: poll                 wall=20.000s usage=19.914s mem=30176KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:37:26 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.030s
ramon: group.total          19.970s
ramon: group.utime          19.938s
ramon: group.stime          0.032s
ramon: group.mempeak        30688KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.00
