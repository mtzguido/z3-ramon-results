ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:38:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28033 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/WeOf3jsF770m.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             834895
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    109.89     10000        49          0            1        2)
(smt.stats    0    101   1240    308  1042/919/109      93/6     9   17   51.75)
(sat.ddfw       1      1   55.8715     20001        98          1            1        3)
(smt.stats    1    202   2269   1409  1441/1302/115     194/13    12   22   51.84)
(smt.stats    2    313   3417   2548  1514/1339/115     310/16    12   22   51.94)
(smt.stats    3    414   4337   4188  1630/1483/116     406/27    13   23   51.94)
(smt.stats    4    525   5160   5690  1645/1510/120     516/34    15   28   52.04)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 2199023255553 := 0 << 15
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 2199023255553 := 0 << 15
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 2199023255553 := 0 << 15
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 32768&0
shl: (shl[41] (bv2int %1) (mod (bv2int %0) 41)) 67108866 := 67108865 << 15
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 67141632&0
shl: (shl[41] (bv2int %1) (mod (bv2int %0) 41)) 67141631 := 67110913 << 15
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 2199023222785&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046478337 := 67108863 << 15
(sat.ddfw       1      1   56.4972     40001       196          2            1        5)
(smt.stats    5    647   6410   7560  1697/1554/132     652/70    16   31   52.13)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 6597069766657 := 268435457 << 40
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 2199023190015&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 8796092956671 := 2199023255550 << 40
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 6597069766657 := 2199023255550 << 40
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1099511627776&0
shl: (shl[41] (bv2int %1) (mod (bv2int %0) 41)) 2199023255551 := 301989895 << 40
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 6597069766656 := 2198956146695 << 40
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[41] (bv2int %1) (mod (bv2int %0) 41)) 2198956146695 := 2198956146694 << 40
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[41] (bv2int %1) (mod (bv2int %0) 41)) 2199006478336 := 2198939369478 << 40
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[41] (bv2int %1) (mod (bv2int %0) 41)) 335544329 := 335544328 << 40
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   7839   9084  1773/1603/140     757/73    18   33   52.36)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10995116277760 := 335544331 << 1
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10995116277760 := 352321547 << 1
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[41] (bv2int %1) (mod (bv2int %0) 41)) 1 := 1099511627776 << 1
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[41] (bv2int %1) (mod (bv2int %0) 41)) 1 := 1099511627776 << 1
(smt.stats    7    859   9394  11826  1857/1694/159     879/82    21   46   52.45)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1099478138882&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 3298501394434 := 2198956146691 << 2
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1099511627775&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 3298534883327 := 2198956146691 << 2
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1099511627775&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 3298534883327 := 2198956146691 << 3
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1099511627775&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 3298534883327 := 2198956146691 << 4
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 98305&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 2199023353857 := 2198956146691 << 5
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 98305&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 2199023353857 := 2198956146691 << 5
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 2199023190017&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046445569 := 2199023255550 << 13
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 2199023190017&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046445569 := 2199023255550 << 13
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1099511627775&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 3298534883327 := 2198972923907 << 14
(smt.stats    8    981  10682  14404  1929/1766/208     971/108    24   78   52.55)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 2199023222785&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 2199023222785 := 2199023255551 << 1
(smt.stats    9   1115  11471  15624  2048/1856/210    1083/115    25   92   52.64)
(sat.ddfw       1      1   48.7805     70001       343          3            1        8)
(smt.stats   10   1216  12518  17525  2117/1901/210    1179/119    26   95   52.93)
ramon: poll                 wall=1.000s usage=1.151s mem=55148KiB load=1.15 rootload=1.14
(sat.ddfw       1      1     41.58    110001       539          4            1       12)
(smt.stats   11   1327  13749  20137  2127/1959/214    1275/121    28  104   52.93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  15680  22851  2173/1995/228    1404/127    29  109   52.93)
(sat.ddfw       1      1   39.6189    160000       784          5            1       17)
(sat.ddfw       1      1     36.08    220001      1078          6            1       23)
(smt.stats   13   1583  16893  24204  2204/1999/228    1532/154    30  123   53.32)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631743638940&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029790150044 := 134225919 << 39
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631743638940&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029790150044 := 134225919 << 39
ramon: poll                 wall=2.000s usage=2.349s mem=55712KiB load=1.20 rootload=1.20
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477635133&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524146237 := 134217803 << 39
(sat.ddfw       1      1   33.4608    290001      1421          7            1       30)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1649267441664&0
shl: (shl[41] (bv2int %1) (mod (bv2int %0) 41)) 1099511988225 := 167772171 << 39
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1649267441664&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 6047313952768 := 167772171 << 38
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1649267441664&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 6047313952768 := 167772171 << 16
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1649267441664&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 6047313952768 := 167772171 << 16
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1099645906181&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5497692417285 := 167772171 << 16
(smt.stats   14   1730  18562  26263  2494/2314/250    1705/187    32  130   53.41)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 1099645906181&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5497692417285 := 167772171 << 16
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477633026&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524144130 := 19267080 << 25
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477633026&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524144130 := 19267080 << 25
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477633026&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524144130 := 16777214 << 25
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477633026&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524144130 := 149892 << 25
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477633026&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524144130 := 149892 << 26
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477633026&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524144130 := 74944 << 26
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477633026&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524144130 := 149891 << 27
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477633026&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524144130 := 4103 << 27
(smt.stats   15   1831  21040  29016  2598/2401/264    1810/202    33  135   53.60)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 631477633026&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 5029524144130 := 4103 << 28
(sat.ddfw       1      1   30.0075    370001      1813          8            1       38)
(smt.stats   16   1942  23898  31935  2661/2474/287    1939/230    34  145   53.70)
(smt.stats   17   2064  27146  35380  2674/2486/287    2060/230    34  145   53.70)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 553914147725&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 2250154704577421 := 16777220 << 40
ramon: poll                 wall=3.004s usage=3.422s mem=55964KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   25.7363    460001      2254          9            1       47)
(smt.stats   18   2198  30318  40234  2711/2488/287    2180/244    35  182   53.89)
ramon: poll                 wall=4.000s usage=4.330s mem=55992KiB load=0.91 rootload=0.91
(smt.stats   19   2345  33978  44956  2740/2537/287    2328/245    35  182   53.89)
(smt.stats   20   2506  38873  55841  2752/2567/287    2500/245    35  182   53.89)
(sat.ddfw       1      1   22.7583    560001      2745         10            1       57)
(smt.stats   21   2607  41521  63011  2810/2570/287    2602/250    35  182   54.09)
ramon: poll                 wall=5.000s usage=5.316s mem=56232KiB load=0.99 rootload=0.98
(smt.stats   22   2718  43330  67760  2907/2650/288    2727/281    36  185   54.09)
(sat.ddfw       1      1   20.5723    670001      3284         11            1       68)
ramon: poll                 wall=6.000s usage=6.319s mem=56324KiB load=1.00 rootload=1.01
(smt.stats   23   2840  45351  72110  3068/2759/288    2862/285    36  185   54.19)
(sat.ddfw       1      1   18.7559    790001      3872         12            1       80)
(smt.stats   24   2974  46873  76310  3135/2896/289    3005/322    37  188   54.19)
(smt.stats   25   3121  49180  83329  3157/2969/289    3156/322    37  188   54.26)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 38
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 38
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 34
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 33
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 32
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 37
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 35
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 36
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 31
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 29
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 30
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 28
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 28
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 2
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 3
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 6
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 5
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 4
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 4
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 8
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 7
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 9
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 11
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 10
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 13
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 14
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 18
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 17
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 17
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 17
(smt.stats   26   3282  52381  87660  3251/2978/289    3318/333    37  188   54.55)
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 17
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 17
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 17
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 4398046511104 := 50331652 << 17
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 6597069766656 := 50331654 << 17
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 6597069766656 := 50331654 << 17
ramon: poll                 wall=7.000s usage=7.313s mem=56900KiB load=0.99 rootload=0.99
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 18016597532737536 := 50348034 << 12
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 18018796555993088 := 50348036 << 12
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 18018796555993088 := 50348036 << 12
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 11
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 11
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 10
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 10
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 8
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 8
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 7
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 7
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 6
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 6
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 9
band: (band[41] (shl[64] (bv2int %1) (mod #320 64)) (if (or #797 #798 #799 #800 #801 #802 #803 #804 #805 #806 #807 #808 #809 #810 #811 #812 ...) 0 (if #838 1 #882))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #319) 64)) 10592198042738229248 := 59965196 << 9
(smt.stats   27   3459  56374  93584  3520/3246/369    3527/378    38  204   54.84)
(smt.stats   28   3560  57618  97094  3562/3344/379    3618/400    39  206   54.94)
(smt.stats   29   3671  59774 100795  3570/3348/379    3729/400    40  206   55.03)
(sat.ddfw       1      1   17.2117    920001      4509         13            1       93)
(smt.stats   30   3793  62594 105302  3588/3360/379    3847/403    40  206   55.13)
ramon: poll                 wall=8.000s usage=8.313s mem=57368KiB load=1.00 rootload=1.00
(smt.stats   31   3927  64690 110022  3665/3421/381    3986/435    41  224   55.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  67240 113786  3712/3461/387    4123/437    41  224   55.22)
(sat.ddfw       1      1   15.9163   1060001      5196         14            1      108)
ramon: poll                 wall=9.000s usage=9.313s mem=57496KiB load=1.00 rootload=1.00
(smt.stats   33   4235  70981 117846  3769/3508/387    4269/454    42  243   55.32)
ramon: poll                 wall=10.000s usage=10.313s mem=57560KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.8177   1210001      5931         15            1      123)
ramon: poll                 wall=11.000s usage=11.312s mem=57612KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.8672   1370001      6715         16            1      139)
ramon: poll                 wall=12.000s usage=12.297s mem=57656KiB load=0.98 rootload=0.98
(smt.stats   34   4412  74564 123426  3853/3581/387    4452/458    42  243   55.42)
ramon: poll                 wall=13.000s usage=13.297s mem=57856KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.0388   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=14.296s mem=57892KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    12.301   1720001      8431         18            1      174)
ramon: poll                 wall=15.000s usage=15.297s mem=58020KiB load=1.00 rootload=1.00
(smt.stats   35   4606  77757 128465  4109/3708/389    4673/483    43  245   55.61)
ramon: poll                 wall=16.000s usage=16.298s mem=58044KiB load=1.00 rootload=1.00
(smt.stats   36   4707  80057 131082  4219/3953/389    4771/483    43  245   55.70)
(sat.ddfw       1      1   11.6522   1910001      9362         19            1      193)
ramon: poll                 wall=17.000s usage=17.339s mem=58148KiB load=1.04 rootload=1.04
(smt.stats   37   4818  82010 135229  4310/4014/390    4891/520    44  249   55.80)
(sat.ddfw       1      1   11.2095   2110001     10343         20            1      214)
ramon: poll                 wall=18.000s usage=18.407s mem=58160KiB load=1.07 rootload=1.07
(smt.stats   38   4940  84518 138423  4417/4199/391    5016/519    45  253   55.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5074  86763 144041  4440/4212/391    5154/519    45  253   55.99)
ramon: poll                 wall=19.004s usage=19.411s mem=58632KiB load=1.00 rootload=1.00
(smt.stats   40   5221  90943 150275  4479/4243/391    5309/541    46  255   55.99)
(smt.stats   41   5382  96998 158505  4628/4270/391    5485/544    46  255   56.18)
(sat.ddfw       1      1   10.6653   2320001     11372         21            1      235)
(smt.stats   42   5559 101178 169508  4698/4453/392    5669/577    47  255   56.27)
ramon: poll                 wall=20.000s usage=20.467s mem=58700KiB load=1.06 rootload=1.06
ramon: end                  Fri Nov  1 22:39:04 2024
ramon: root.execname        z3
ramon: root.utime           20.490s
ramon: root.stime           0.010s
ramon: group.total          20.517s
ramon: group.utime          20.501s
ramon: group.stime          0.016s
ramon: group.mempeak        58964KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              1.02
