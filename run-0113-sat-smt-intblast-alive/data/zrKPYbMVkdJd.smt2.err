ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:50:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39680 MiB
ramon: sys.mem.avail        61376 MiB
ramon: sys.nprocs           1323
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zrKPYbMVkdJd.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             4009430
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   248/248     0/0  69       0    18.52   0.00)
(sat.stats    101    620    0   248/248   101/31  69       0    18.87   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 269 :time 0.00)
(sat.stats    101    620    0   248/248   101/31  69       0    18.87   0.01)
(sat.stats    101    620    0   248/248   101/31  69       0    18.87   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 384218.87 :time 0.00)
(sat.stats    101    620    0   250/250    37/30  69       0    18.87   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1829 :time 0.00)
(sat.stats    273   1934    1   327/327   208/123  76       0    19.77   0.10)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    277   1941    2   357/357   212/123  76       0    19.77   0.10)
(sat.stats    280   2069    3   366/366   215/123  76       0    19.77   0.10)
(sat.stats    283   2157    4   440/440   218/124  76       0    19.77   0.11)
(sat.stats    286   2180    5   476/476   221/125  76       0    19.67   0.11)
(sat.stats    289   2213    6   476/476   224/125  76       0    19.67   0.11)
(sat.stats    294   2279    7   476/476   229/125  76       0    19.67   0.11)
(sat.stats    297   2379    8   476/476   232/125  76       0    19.67   0.12)
(sat.stats    300   2465    9   476/476   235/125  76       0    19.67   0.12)
(sat.stats    303   2566   10   476/476   238/125  76       0    19.67   0.12)
(sat.stats    306   2748   11   476/476   241/125  76       0    19.67   0.12)
(sat.stats    309   2923   12   476/476   244/125  76       0    19.67   0.12)
(sat.stats    312   3158   13   476/476   247/125  76       0    19.67   0.12)
(sat.stats    315   3393   14   481/481   250/125  76       0    19.77   0.12)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2826 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3168 :time 0.00)
(sat.stats    500   5967   42   510/510   441/196  81       0    19.77   0.17)
(sat.stats    711   8367   74   510/510   652/250  81       0    19.87   0.19)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 9179 :time 0.00)
lshr: (lshr[58] (bv2int %1) (+ 58 (* 288230376151711743 #68))) 288230376151711743 := 288230376151711743 >>l 32
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 27512 := 67108863&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 66797696 := 67108863&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 63 #615 #619) 64)) 0 := 9223372036854775776 >>l 37
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 32 := 67108863&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 2024 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 16 := 67108863&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 2 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 5 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 4 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 405296 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 36832 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 676800 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 3635712 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 128 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 256 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 31323136 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 41746432 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 2048 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 16384 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 4096 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 8192 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 32768 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 63832064 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 66322432 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 1048576 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 524288 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 23068672 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 16777216 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 8388608 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 4194304 := 288230376084602880&67108863
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 0 := 67108863&288230376084602880
band: (band[58] (if (= #331 63) 2658455991569831736584242083705913344 (if #465 1329227995784915868292121041852956672 #462)) (lshr[64] (* 32 #78) (mod #622 64))) 33554432 := 288230376084602880&67108863
 (sat-cleaner :elim-literals 45 :elim-clauses 1 :cost 14653 :time 0.00)
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 1 := 67106144&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 1 := 35767&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 2 := 3&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 4 := 4&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 64 := 64&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 256 := 256&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 512 := 512&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 1024 := 1024&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 2048 := 2048&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 4096 := 4096&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 8192 := 8192&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 16384 := 16384&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 32768 := 32768&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 65536 := 65536&288230376084602880
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats   1200  19100   97  2724/2721  1168/330 295       0    22.69   0.64)
 (sat-cleaner :elim-literals 5 :elim-clauses 2 :cost 16782 :time 0.00)
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 131072 := 131072&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 262144 := 262144&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 524288 := 524288&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 1048576 := 1048576&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 2097152 := 2097152&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 4194304 := 4194304&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 8388608 := 8388608&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 16777216 := 16777216&288230376084602880
band: (band[58] (lshr[58] (bv2int %1) (+ 58 #488)) (if (= #66 57) 41538374868278620884128782557904896 (if #492 20769187434139310442064391278952448 #604))) 33554432 := 33554432&288230376084602880
(sat.stats   1598  25878  196  3716/3713  1573/508 362       0    23.32   0.79)
ramon: poll                 wall=1.000s usage=0.995s mem=25252KiB load=0.99 rootload=0.98
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 24926 :time 0.00)
ramon: poll                 wall=2.000s usage=1.993s mem=27868KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.991s mem=41112KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.987s mem=58020KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.985s mem=77276KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.983s mem=86980KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.977s mem=93932KiB load=0.99 rootload=0.99
ramon: poll                 wall=8.000s usage=7.974s mem=99668KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.973s mem=120MiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.973s mem=129MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.973s mem=136MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.973s mem=139MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.973s mem=144MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.973s mem=147MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.973s mem=151MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.973s mem=156MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.972s mem=159MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.972s mem=166MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.972s mem=170MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.972s mem=175MiB load=1.00 rootload=0.99
ramon: end                  Wed Dec 25 16:50:56 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.080s
ramon: group.total          19.985s
ramon: group.utime          19.901s
ramon: group.stime          0.084s
ramon: group.mempeak        175MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
