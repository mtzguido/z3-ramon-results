ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:46:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27829 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/bVyBnLN36lgq.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             862469
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   6170   1129  1298/1172/92      95/8     3   15   52.07)
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 262143 := 262143&262144
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 4611686018427650048 := 84 << 18
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 4611686018427650048 := 328 << 18
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 4611686018427650048 := 206 << 18
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 4611686018427650048 := 84 << 18
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&524288
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 524287 := 1380986604486657 << 19
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 4611686018427650048 := 2761973208973314 << 18
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 31457281 := 8796093022268 << 19
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 31457281 := 8796093022268 << 19
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&524288
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 524289 := 1380986604486657 << 19
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&524288
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 524289 := 1380986604486657 << 19
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   90.9091     10000        49          0            1        2)
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 1 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 2 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 4 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 8 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 16 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 32 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 64 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 128 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 256 := 262143&31457280
(smt.stats    1    203   8933   4817  2086/1876/126     190/12     5   18   52.55)
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 31457279 := 8796093022268 << 19
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 261632 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 261120 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 2048 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 4096 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 8192 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 16384 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 32768 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 65536 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 8192 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 32768 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 65536 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 131072 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 4096 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 131072 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 8192 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 32768 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 65536 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 32768 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 8192 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 8192 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 34816 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 32768 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 2048 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 1 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 512 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 2 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 2 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 4 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 32 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 16 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 16 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 1 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 8 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 16 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 32 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 192 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 262143&31457280
band: (band[61] (if (= #120 60) 0 (if #584 1 #755)) (shl[61] (bv2int %0) (+ 61 #758))) 512 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 4 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 4 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 4 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 4 := 262143&31457280
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 4 := 262143&31457280
(sat.ddfw       1      1   46.3009     20001        98          1            1        3)
(smt.stats    2    314  10670   7443  2305/2088/256     341/51     8   56   52.94)
(smt.stats    3    415  11920  10936  2352/2131/270     406/51    12   72   53.08)
(smt.stats    4    526  12419  11954  2828/2162/270     556/92    12   72   53.17)
(smt.stats    5    648  16587  19319  2855/2586/281     673/130    15   88   53.31)
(sat.ddfw       1      1   46.2963     40001       196          2            1        5)
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435464
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435480
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435504
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435504
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435504
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    749  20951  23634  2922/2610/282     724/141    17  155   53.70)
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435683
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435683
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435682
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435682
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435682
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435681
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435714
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435746
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435842
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 268435455&268435940
(smt.stats    7    860  23432  26848  3030/2758/318     899/154    18  163   53.79)
(smt.stats    8    982  27145  34956  3036/2765/320    1112/157    19  165   53.89)
(sat.ddfw       1      1   37.9267     70001       343          3            1        8)
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 15&268436068
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 15&268436068
(smt.stats    9   1116  29884  39565  3132/2787/333    1485/179    20  173   53.98)
ramon: poll                 wall=1.000s usage=0.896s mem=56344KiB load=0.90 rootload=0.87
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 9 := 15&268436080
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 15&268436080
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 15&268436088
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 9223372037123211896 := 246290604621830 << 4
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 15&268436088
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 9223372037123211896 := 422212465065984 << 4
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 15&268436088
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 9223372037123211896 := 422212465065984 << 4
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 15&268436088
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 9223372037123211896 := 281474976710734 << 4
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 8 := 15&268436088
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #907 #909) 64)) 9223372037123211896 := 576689450722000896 << 4
(smt.stats   10   1217  32138  44613  3191/2921/343    1721/260    22  212   54.12)
(smt.stats   11   1328  35520  52853  3201/2931/343    2058/260    22  212   54.21)
(smt.stats   12   1450  38402  60876  3256/2976/345    2422/289    24  225   54.31)
(sat.ddfw       1      1   28.1096    110001       539          4            1       12)
(smt.stats   13   1584  41311  68471  3302/2997/347    2636/289    24  225   54.53)
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 0&63439144
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 0 := 31719572 << 1
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 0&63439144
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 0 := 31719572 << 1
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 0 := 0&63439144
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 0 := 31719572 << 1
(smt.stats   14   1731  44638  75795  3380/3067/347    2821/345    25  232   54.63)
(smt.stats   15   1832  45669  82049  3415/3102/353    3078/352    26  236   54.63)
(smt.stats   16   1943  48050  90373  3426/3125/358    3280/373    27  243   54.74)
ramon: poll                 wall=2.000s usage=1.792s mem=56948KiB load=0.90 rootload=0.90
(smt.stats   17   2065  54330  99112  3444/3135/359    3447/431    28  255   54.74)
(sat.ddfw       1      1   25.2648    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   18   2199  62035 114538  3493/3147/359    3680/437    28  255   54.97)
(smt.stats   19   2346  67529 126715  3516/3207/360    4024/475    29  255   54.97)
(smt.stats   20   2507  72748 139324  3577/3246/361    4441/479    29  255   55.08)
(sat.ddfw       1      1    21.498    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.687s mem=57660KiB load=0.89 rootload=0.89
(smt.stats   21   2608  75429 145303  3769/3315/362    4673/516    30  258   55.27)
(smt.stats   22   2719  77721 152136  3907/3470/362    4944/525    30  258   55.43)
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079152812
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079152974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079152974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079152974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079152974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153006
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079152974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079152974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153006
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079152974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079152878
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153070
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153070
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153198
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153198
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153966
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153710
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153198
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079154734
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079154734
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079154734
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079154734
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079154734
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079156782
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079156782
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079156782
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079156782
(smt.stats   23   2841  81634 170857  4189/3806/399    5281/622    31  262   55.77)
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153966
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153966
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079153966
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079165998
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079164974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079164974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079164974
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079181358
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079181358
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079214126
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079214126
band: (band[61] (if (or #770 #771 #772 #773) 0 (if #774 1 #892)) (shl[64] (* 2 #114) (mod #910 64))) 46 := 17592186044415&1873506241079283758
(smt.stats   24   2975  84015 180472  4391/3899/460    5903/629    31  262   56.17)
(sat.ddfw       1      1   19.3477    290001      1421          7            1       30)
(smt.stats   25   3122  91997 194477  4430/4105/497    6674/819    32  285   56.26)
ramon: poll                 wall=4.004s usage=3.623s mem=58600KiB load=0.93 rootload=0.94
(smt.stats   26   3283  99854 212261  4632/4148/497    7834/1107    33  289   56.77)
(sat.ddfw       1      1   17.2973    370001      1813          8            1       38)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3460 105249 229311  4852/4340/497    9047/1118    33  289   57.05)
ramon: poll                 wall=5.000s usage=4.537s mem=59472KiB load=0.92 rootload=0.91
(smt.stats   28   3561 108502 239883  4942/4637/499   10061/1577    34  299   57.05)
(smt.stats   29   3672 114010 264574  4969/4657/499   10809/1578    34  299   57.19)
(smt.stats   30   3794 119165 281644  5076/4740/500   11161/1949    35  304   57.30)
(sat.ddfw       1      1   15.9886    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=5.503s mem=59804KiB load=0.97 rootload=0.96
(smt.stats   31   3928 121079 288045  5322/4782/501   11350/1949    35  304   57.60)
(smt.stats   32   4075 128296 310858  5490/5166/503   11969/2155    36  320   57.60)
(sat.ddfw       1      1   14.9031    560001      2745         10            1       57)
ramon: poll                 wall=7.004s usage=6.455s mem=60504KiB load=0.95 rootload=0.96
(smt.stats   33   4236 137817 348571  5630/5190/503   12843/2159    36  320   57.92)
(smt.stats   34   4413 145645 388451  5856/5441/504   14141/2516    37  325   58.46)
ramon: poll                 wall=8.004s usage=7.445s mem=60836KiB load=0.99 rootload=0.99
(sat.ddfw       1      1     13.84    670001      3284         11            1       68)
(smt.stats   35   4607 154587 413123  5939/5604/507   14698/2743    38  333   58.56)
(smt.stats   36   4708 159747 438103  5992/5637/507   14997/2744    38  333   58.66)
(smt.stats   37   4819 166116 459753  5995/5670/507   15330/2744    38  333   58.66)
(smt.stats   38   4941 173047 493821  6016/5681/508   15690/2826    39  349   58.76)
(smt.delete-inactive-clauses  :num-deleted-clauses 772)
ramon: poll                 wall=9.000s usage=8.426s mem=61352KiB load=0.98 rootload=0.98
(smt.stats   39   5075 178965 514121  6030/5706/509   15365/2826    39  349   58.76)
(smt.stats   40   5222 183746 552679  6047/5723/511   15832/2987    40  352   58.88)
(sat.ddfw       1      1   12.9394    790001      3872         12            1       80)
(smt.stats   41   5383 189795 580886  6202/5842/511   16434/3052    41  372   59.09)
ramon: poll                 wall=10.000s usage=9.435s mem=61784KiB load=1.01 rootload=1.01
(smt.stats   42   5560 196162 605317  6244/5855/514   17291/3134    42  373   59.28)
(sat.ddfw       1      1   12.2514    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.436s mem=62040KiB load=1.00 rootload=0.99
(smt.stats   43   5754 202605 631455  6412/5898/514   18243/3142    42  373   59.47)
(smt.stats   44   5967 208689 666327  6547/6072/514   19452/3401    43  383   59.94)
(smt.stats   45   6068 212851 676811  6581/6200/514   19801/3403    43  383   60.07)
ramon: poll                 wall=12.012s usage=11.608s mem=62164KiB load=1.16 rootload=1.17
(sat.ddfw       1      1   11.6318   1060001      5196         14            1      108)
(smt.stats   46   6179 220184 718862  6609/6240/514   20225/3403    43  383   60.07)
ramon: poll                 wall=13.004s usage=12.598s mem=62252KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6301 226371 753546  6746/6260/514   20674/3410    43  383   60.17)
(sat.ddfw       1      1   10.9665   1210001      5931         15            1      123)
(smt.stats   48   6435 231809 789881  6886/6396/514   21236/3412    43  383   60.36)
ramon: poll                 wall=14.004s usage=13.576s mem=62532KiB load=0.98 rootload=0.97
(smt.stats   49   6582 238916 817050  6911/6551/514   21974/3412    43  383   60.36)
(smt.stats   50   6743 248211 861559  6942/6575/514   22558/3412    43  383   60.46)
ramon: poll                 wall=15.000s usage=14.412s mem=62904KiB load=0.84 rootload=0.84
(smt.stats   51   6920 258983 905770  7082/6722/516   23348/3964    44  428   60.65)
(sat.ddfw       1      1   10.2531   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=15.404s mem=63160KiB load=0.99 rootload=0.99
(smt.stats   52   7114 267282 924820  7142/6725/516   24368/3973    44  428   60.75)
(smt.stats   53   7327 273305 953896  7333/6802/517   25121/3981    44  428   60.94)
(smt.stats   54   7561 277340 968625  7559/7009/517   26216/4112    45  430   61.04)
ramon: poll                 wall=17.000s usage=16.435s mem=63544KiB load=1.03 rootload=1.03
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   55   7662 284145 1006368  7569/7209/517   26986/4112    45  430   61.13)
(sat.ddfw       1      1   9.86251   1540001      7549         17            1      156)
(smt.stats   56   7773 289600 1044999  7651/7209/517   27468/4115    45  430   61.29)
ramon: poll                 wall=18.000s usage=17.666s mem=63912KiB load=1.23 rootload=1.23
(smt.stats   57   7895 293417 1076230  7808/7343/517   27647/4115    45  430   61.38)
(smt.stats   58   8029 295887 1094704  7821/7461/519   28196/4334    46  431   61.48)
(sat.ddfw       1      1   9.60922   1720001      8431         18            1      174)
(smt.stats   59   8176 300618 1127749  7847/7470/519   28547/4335    46  431   61.48)
ramon: poll                 wall=19.000s usage=18.706s mem=64008KiB load=1.04 rootload=1.04
(smt.stats   60   8337 304552 1154823  7918/7491/519   28971/4338    46  431   61.83)
(smt.stats   61   8514 308851 1186884  8104/7725/521   30011/4455    47  457   61.93)
ramon: poll                 wall=20.000s usage=19.708s mem=64476KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:47:15 2024
ramon: root.execname        z3
ramon: root.utime           19.750s
ramon: root.stime           0.030s
ramon: group.total          19.786s
ramon: group.utime          19.754s
ramon: group.stime          0.032s
ramon: group.mempeak        64988KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.082s
ramon: loadavg              0.99
