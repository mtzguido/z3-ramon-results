ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:30:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39895 MiB
ramon: sys.mem.avail        61377 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/knRelfbHVJ1W.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3949482
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   247/245     0/0  51       0    18.47   0.00)
(sat.stats    194   3513    0   249/247   194/82  51       0    18.87   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 756 :time 0.00)
(sat.stats    194   3513    0   247/245   194/82  57       0    18.87   0.02)
(sat.stats    194   3513    0   247/245   194/82  57       0    18.87   0.02)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 644018.87 :time 0.00)
(sat.stats    194   3513    0   249/247   193/81  57       0    18.87   0.02)
(sat.stats    367   6163    1   249/247   366/200  57       0    18.97   0.03)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    370   6253    2   249/247   369/200  57       0    18.97   0.03)
(sat.stats    373   6349    3   249/247   372/201  57       0    18.97   0.03)
(sat.stats    376   6514    4   249/247   375/202  57       0    18.97   0.03)
(sat.stats    379   6543    5   249/247   378/205  57       0    18.97   0.03)
(sat.stats    382   6590    6   249/247   381/207  57       0    18.97   0.03)
(sat.stats    385   6625    7   249/247   384/208  57       0    18.97   0.03)
(sat.stats    388   6687    8   249/247   387/210  57       0    18.97   0.03)
(sat.stats    391   6774    9   249/247   390/212  57       0    18.97   0.03)
(sat.stats    394   6844   10   249/247   393/212  57       0    18.97   0.03)
(sat.stats    397   6910   11   249/247   396/212  57       0    18.97   0.03)
(sat.stats    472   8808   12   261/259   471/232  57       0    19.45   0.20)
(sat.stats    475   9003   13   268/266   474/233  57       0    19.45   0.21)
(sat.stats    480   9100   14   268/266   479/233  57       0    19.45   0.21)
(sat.stats    483   9108   15   268/266   482/233  57       0    19.45   0.21)
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 986 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 985 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 664 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 672 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 576 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 912 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 896 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 4 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 1024 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 768 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 512 := 1216&845758464
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 490 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 9 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 4 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 8 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 16 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 896 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 32 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 64 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 768 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 1024 := 845758464&1216
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 0 := 1216&845758464
band: (band[30] (if (= #325 31) 757560017581768704 (if #387 378780008790884352 #385)) (if (or #671 #672 #673 #674) 0 (if #675 1 #729))) 512 := 845758464&1216
 (sat-cleaner :elim-literals 13 :elim-clauses 66 :cost 4446 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 52 :cost 4334 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    894  21839   30  8031/8027   759/334 196       0    21.70   0.56)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4449 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4637 :time 0.00)
(sat.stats   1066  42556   84 11790/11786   950/356 210       0    22.51   0.79)
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 6859 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7490 :time 0.00)
ramon: poll                 wall=1.000s usage=0.897s mem=24196KiB load=0.90 rootload=0.88
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7788 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9507 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 3 :cost 9566 :time 0.00)
(sat.stats   1889  65743  205 12914/12910  1794/839 224       0    23.30   1.35)
 (sat-cleaner :elim-literals 132 :elim-clauses 0 :cost 13922 :time 0.00)
band: (band[30] (if (or #510 #511 #512) 0 (if #513 1 #586)) (if (= #223 29) 189390004395442176 (if #595 94695002197721088 #651))) 1 := 1&275552848
ramon: poll                 wall=2.000s usage=1.897s mem=25476KiB load=1.00 rootload=1.00
(sat.stats   2434  79703  227 18194/18188  2422/1037 237       0    24.15   1.96)
 (sat-cleaner :elim-literals 0 :elim-clauses 5 :cost 17835 :time 0.00)
ramon: poll                 wall=3.000s usage=2.897s mem=26500KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20086 :time 0.00)
(sat.stats   3771 118893  316 25962/25955  3893/1379 247       0    25.23   3.74)
ramon: poll                 wall=4.000s usage=3.897s mem=26500KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.897s mem=27780KiB load=1.00 rootload=0.99
(sat.stats   5775 139552  427 31848/31841  5235/1664 247       0    26.86   5.57)
ramon: poll                 wall=6.000s usage=5.897s mem=28292KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.897s mem=28804KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.897s mem=29828KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.896s mem=31108KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   8090 146660  604 55428/55421  6672/1812 247       0    29.93   9.31)
ramon: poll                 wall=10.000s usage=9.896s mem=32192KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.896s mem=33216KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.896s mem=33728KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.896s mem=36544KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.896s mem=37312KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.896s mem=38080KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.896s mem=38592KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.895s mem=39360KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.895s mem=39872KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.895s mem=40640KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.895s mem=40896KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:30:38 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.020s
ramon: group.total          20.007s
ramon: group.utime          19.983s
ramon: group.stime          0.024s
ramon: group.mempeak        40896KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.109s
ramon: loadavg              0.99
