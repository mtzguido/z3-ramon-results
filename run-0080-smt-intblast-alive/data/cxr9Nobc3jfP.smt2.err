ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:42:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25177 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1399
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/cxr9Nobc3jfP.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             98485
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4048    393  1115/1000/99      92/13     5   20   19.06)
(smt.stats    1    202   7377   1199  1616/1381/100     199/20     6   20   19.16)
(smt.stats    2    313  11411   2486  1698/1506/108     314/27     7   21   19.36)
(smt.stats    3    414  13830   3455  2327/2122/113     406/31     9   28   19.46)
(smt.stats    4    525  16378   6535  2352/2139/116     506/38    13   36   19.55)
(smt.stats    5    647  17667  10060  2433/2195/116     641/40    13   36   19.66)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  22455  15602  2449/2227/118     750/47    14   38   19.75)
(smt.stats    7    859  25833  19482  2465/2239/120     861/54    16   42   19.75)
(smt.stats    8    981  27379  23032  2499/2278/124     982/57    17   43   19.85)
(smt.stats    9   1115  28752  25771  2597/2292/127    1110/77    18   50   19.95)
(smt.stats   10   1216  29402  28022  2699/2479/129    1212/86    19   52   19.95)
(smt.stats   11   1327  30588  31532  2779/2530/130    1325/87    20   52   20.04)
ramon: poll                 wall=1.000s usage=0.940s mem=21188KiB load=0.94 rootload=0.93
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  32202  35740  2791/2573/138    1450/102    21   68   20.04)
(smt.stats   13   1583  34926  41800  2796/2574/138    1593/102    21   68   20.04)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 3 := 615&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 576460752303424103 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 3 := 615&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 18446743798831645287 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 612&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 1125899906843236 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 3 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906943 := 274877906943 << 3
(smt.stats   14   1730  41438  51241  2824/2591/140    1739/128    23   71   20.14)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 1 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906937 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906942 := 274877906943 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 3 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 3 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 3 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&3
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 1 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 1 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 2 := 274877906936&3
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 1 := 274877906936&3
(smt.stats   15   1831  43719  54898  2920/2683/183    1817/135    24   73   20.24)
(smt.stats   16   1942  45192  56598  2959/2723/189    1910/134    25   83   20.24)
(smt.stats   17   2064  48960  59194  2966/2738/189    2043/134    25   83   20.24)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 5&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 4&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 1924145348608 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 1924145348608 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 4&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 2199023255552 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 3992&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 1924145352600 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 7 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 7 := 498 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 1 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 2 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 4 := 7968&7
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 7968&7
band: (band[38] (shl[38] (bv2int %0) (mod #101 38)) (if (= #567 37) 0 (if #569 1 #671))) 4 := 7968&7
(smt.stats   18   2198  51023  65139  3047/2810/230    2062/151    27  222   20.59)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 128 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 128 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 128 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 144 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 144 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 16 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 128 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 144 := 8080&1023
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 912 := 8080&1023
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8080 := 505 << 11
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7856 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7936 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7952 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7856 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7856 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7856 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7896 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7896 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7896 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7896 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7888 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7888 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7888 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 7952 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
(smt.stats   19   2345  54051  71395  3156/2876/297    2235/165    28  226   20.89)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8208 := 8464&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8464 := 8464&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8464 := 529 << 35
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8464 := 8480&34359738367
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8336 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8336 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8240 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8240 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8368 := 8496&68719476735
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 8240 := 8496&68719476735
(smt.stats   20   2506  57902  78423  3225/2981/342    2540/228    30  250   21.47)
(smt.stats   21   2607  59797  79941  3353/3007/342    2679/237    30  250   21.66)
(smt.stats   22   2718  61816  83342  3519/3265/343    2865/268    31  255   21.66)
ramon: poll                 wall=2.000s usage=1.937s mem=22952KiB load=1.00 rootload=0.99
(smt.stats   23   2840  65674  91791  3574/3334/346    3122/378    32  262   21.76)
(smt.stats   24   2974  68649  99449  3664/3413/350    3361/400    33  263   21.85)
(smt.stats   25   3121  73438 113604  3738/3444/350    3612/447    34  266   21.85)
(smt.stats   26   3282  77744 123922  3859/3588/351    3913/509    35  272   22.05)
ramon: poll                 wall=3.000s usage=2.937s mem=23340KiB load=1.00 rootload=1.00
(smt.stats   27   3459  82166 133064  3932/3613/351    4259/513    35  272   22.05)
(smt.stats   28   3561  85271 139353  3986/3727/354    4457/576    36  274   22.21)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 9070970929114 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 9070970929114 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8796093022170 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8796093022170 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906906&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 4672924418010 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&1
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906941 := 274877906942 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 274877906936&1
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906941 := 274877906942 << 2
(smt.stats   29   3672  87168 146683  4078/3758/355    4675/588    36  274   22.21)
(smt.stats   30   3794  88744 149866  4328/3837/366    5098/636    37  287   22.31)
(smt.stats   31   3928  92254 165638  4398/4127/368    5469/637    37  287   22.40)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  96011 178280  4433/4153/376    5984/765    38  292   22.59)
(smt.stats   33   4236 101247 188558  4482/4165/377    6283/986    39  331   22.69)
ramon: poll                 wall=4.000s usage=3.937s mem=24040KiB load=1.00 rootload=1.00
(smt.stats   34   4413 107763 205238  4706/4312/377    6799/1026    40  334   22.88)
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 33285998082&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8279623206402 := 274877906941 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #303 64)) (if (or #691 #692) 0 (if #693 1 #839))) 0 := 33285998594&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #302) 64)) 8279623206914 := 274877906941 << 1
(smt.stats   35   4607 109723 208813  4983/4436/378    7257/1101    41  339   22.97)
(smt.stats   36   4708 110914 218485  5334/4747/383    7558/1101    41  339   23.17)
(smt.stats   37   4819 111749 223895  5686/5106/383    7876/1102    41  339   23.26)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4941 113514 237038  5839/5433/383    8463/1157    42  340   23.36)
(smt.delete-inactive-clauses  :num-deleted-clauses 184)
(smt.stats   39   5075 117942 248074  5861/5582/383    8973/1158    42  340   23.45)
(smt.stats   40   5222 125284 262603  6012/5588/383    9540/1161    42  340   23.55)
ramon: poll                 wall=5.000s usage=4.937s mem=24940KiB load=1.00 rootload=1.00
(smt.stats   41   5383 131886 285893  6237/5746/384   10612/1346    43  348   23.64)
(smt.stats   42   5560 136988 305922  6325/6005/385   11296/1714    44  356   23.91)
(smt.stats   43   5754 144700 336354  6457/6057/385   12284/1724    44  356   24.00)
ramon: poll                 wall=6.000s usage=5.936s mem=25564KiB load=1.00 rootload=1.00
(smt.stats   44   5967 149401 360414  6481/6203/387   13068/2096    45  363   24.19)
(smt.stats   45   6068 151930 370688  6498/6220/388   13524/2099    45  363   24.19)
(smt.stats   46   6179 156609 403645  6549/6256/389   13852/2219    46  390   24.29)
(smt.stats   47   6301 161176 429190  6575/6280/389   14494/2219    46  390   24.39)
(smt.stats   48   6435 164765 444892  6585/6290/394   15117/2268    47  392   24.48)
(smt.stats   49   6582 167456 457382  6631/6310/396   16055/2269    47  392   24.58)
ramon: poll                 wall=7.000s usage=6.936s mem=26212KiB load=1.00 rootload=1.00
(smt.stats   50   6743 174504 492764  6711/6363/397   16805/2271    47  392   24.77)
(smt.stats   51   6920 178113 514796  6844/6549/399   17475/2626    48  472   24.86)
ramon: poll                 wall=8.000s usage=7.936s mem=26596KiB load=1.00 rootload=1.00
(smt.stats   52   7114 184052 546029  6995/6591/400   18673/2713    49  485   25.16)
(smt.stats   53   7327 191081 580926  7245/6716/400   19567/2720    49  485   25.25)
ramon: poll                 wall=9.000s usage=8.936s mem=26864KiB load=1.00 rootload=1.00
(smt.stats   54   7561 197825 617833  7347/6949/401   20714/2875    50  495   25.45)
(smt.stats   55   7662 200339 628480  7394/7049/402   20950/2876    50  495   25.54)
(smt.stats   56   7773 204761 645978  7492/7107/402   21156/3079    51  501   25.64)
ramon: poll                 wall=10.000s usage=9.936s mem=27056KiB load=1.00 rootload=1.00
(smt.stats   57   7895 209272 676055  7769/7270/402   21604/3086    51  501   25.64)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8029 211708 688915  7801/7490/403   22320/3166    52  502   25.73)
ramon: poll                 wall=11.000s usage=10.935s mem=27264KiB load=1.00 rootload=1.00
(smt.stats   59   8176 215466 728005  7826/7517/403   22747/3169    52  502   25.73)
(smt.stats   60   8337 218990 741676  7934/7538/404   23273/3347    53  509   25.92)
(smt.stats   61   8514 224309 766441  8074/7689/404   23977/3353    53  509   26.02)
ramon: poll                 wall=12.000s usage=11.935s mem=27524KiB load=1.00 rootload=1.00
(smt.stats   62   8708 229127 811904  8096/7790/406   25751/3563    54  514   26.11)
(smt.stats   63   8921 237254 872088  8106/7800/407   26876/3563    54  514   26.21)
ramon: poll                 wall=13.000s usage=12.935s mem=27968KiB load=1.00 rootload=1.00
(smt.stats   64   9155 243207 898868  8321/7814/407   27787/3871    55  538   26.56)
ramon: poll                 wall=14.000s usage=13.935s mem=28252KiB load=1.00 rootload=1.00
(smt.stats   65   9412 248403 923220  8975/8107/407   28556/3874    55  538   26.85)
(smt.stats   66   9513 250477 942110  9105/8787/409   30054/4201    56  541   26.94)
(smt.stats   67   9624 254347 963714  9146/8801/409   30471/4205    56  541   26.94)
(smt.stats   68   9746 259727 992526  9293/8846/409   31178/4212    56  541   27.13)
ramon: poll                 wall=15.000s usage=14.935s mem=28600KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   69   9880 264689 1025180  9482/9061/411   31934/4448    57  544   27.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 192)
(smt.stats   70  10027 267496 1039568  9502/9189/411   32291/4448    57  544   27.51)
(smt.stats   71  10188 273075 1075675  9513/9203/411   33057/4448    57  544   27.91)
(smt.stats   72  10365 284174 1123095  9677/9207/411   33902/4451    57  544   28.01)
(smt.stats   73  10559 289237 1144324  9766/9406/411   35324/4453    57  544   28.20)
(smt.stats   74  10772 295472 1187409  9906/9497/411   35964/4457    57  544   28.29)
ramon: poll                 wall=16.000s usage=15.934s mem=29780KiB load=1.00 rootload=1.00
(smt.stats   75  11006 300800 1232182 10052/9628/411   36931/4458    57  544   28.39)
(smt.stats   76  11263 308176 1291195 10172/9760/411   37759/4461    57  544   28.49)
ramon: poll                 wall=17.000s usage=16.934s mem=30184KiB load=1.00 rootload=1.00
(smt.stats   77  11545 316671 1355325 10231/9891/411   39645/4462    57  544   28.68)
ramon: poll                 wall=18.000s usage=17.934s mem=30244KiB load=1.00 rootload=1.00
(smt.stats   78  11646 321304 1402514 10375/9936/411   39973/4465    57  544   28.77)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   79  11757 324404 1425435 10598/10087/411   40431/4466    57  544   28.77)
ramon: poll                 wall=19.000s usage=18.934s mem=30636KiB load=1.00 rootload=1.00
(smt.stats   80  11879 329175 1456924 10666/10323/411   40696/4466    57  544   28.86)
(smt.stats   81  12013 332050 1499752 10675/10369/411   42136/4466    57  544   29.18)
(smt.stats   82  12160 339082 1565070 10700/10384/412   42891/5352    58  548   29.28)
ramon: poll                 wall=20.001s usage=19.932s mem=31220KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:43:06 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.994s
ramon: group.utime          19.986s
ramon: group.stime          0.008s
ramon: group.mempeak        33004KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
