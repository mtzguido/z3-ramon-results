ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:46:12 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42316 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1335
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0oG5YkfxLmty.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3638709
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   248/248     0/0  64       0    18.52   0.00)
(sat.stats    101    897    0   248/248   101/28  64       0    18.77   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 740 :time 0.00)
(sat.stats    101    897    0   248/248   101/28  64       0    18.77   0.01)
(sat.stats    101    897    0   248/248   101/28  64       0    18.77   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 464618.87 :time 0.00)
(sat.stats    101    897    0   248/248   101/28  64       0    18.87   0.01)
(sat.stats    293   3841    1   248/248   293/158  64       0    19.09   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    297   3854    2   248/248   297/158  64       0    19.09   0.02)
(sat.stats    300   3862    3   248/248   300/160  64       0    19.09   0.02)
(sat.stats    303   3870    4   248/248   303/163  64       0    19.09   0.02)
(sat.stats    306   3888    5   248/248   306/166  64       0    19.09   0.02)
(sat.stats    309   3908    6   248/248   309/169  64       0    19.09   0.02)
(sat.stats    312   3994    7   248/248   312/170  64       0    19.09   0.02)
(sat.stats    315   4079    8   248/248   315/171  64       0    19.09   0.02)
(sat.stats    318   4213    9   248/248   318/172  64       0    19.09   0.02)
(sat.stats    321   4297   10   248/248   321/173  64       0    19.09   0.02)
(sat.stats    324   4416   11   248/248   324/174  64       0    19.09   0.02)
(sat.stats    328   4568   12   248/248   328/176  64       0    19.18   0.02)
(sat.stats    331   4633   13   248/248   331/179  64       0    19.18   0.02)
(sat.stats    334   4689   14   248/248   334/182  64       0    19.18   0.02)
(sat.stats    488   6404   25   250/250   488/259  64       0    19.18   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4508 :time 0.00)
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #66))) 1 := 1 >>l 57
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 5489 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 0&288230376151711622
lshr: (lshr[64] (mod (div #72 2) 144115188075855872) (mod (+ 57 #742 #744) 64)) 576460752303414820 := 0 >>l 56
(sat.stats    713  20105   52   643/638   711/308  92       0    20.28   0.27)
 (sat-cleaner :elim-literals 9 :elim-clauses 4 :cost 7124 :time 0.00)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 0&288230376151711683
lshr: (lshr[64] (mod (div #72 2) 144115188075855872) (mod (+ 57 #742 #744) 64)) 288230376151687367 := 0 >>l 57
 (sat-cleaner :elim-literals 34 :elim-clauses 27 :cost 8107 :time 0.00)
 (sat-cleaner :elim-literals 52 :elim-clauses 12 :cost 8600 :time 0.00)
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #66))) 288230376151711743 := 144115188076550847 >>l 37
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 30231 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 30444 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 2097146 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 2097144 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 280976 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
lshr: (lshr[64] (mod (div #72 2) 144115188075855872) (mod (+ 57 #742 #744) 64)) 144115188075863832 := 144115188075855851 >>l 36
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 325344 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 1190016 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 64 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 1559040 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 256 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 749568 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 1024 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 2048 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 98304 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 8192 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 16384 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 1376256 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 393216 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 1572864 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 262144 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 1048576 := 2097151&288230376023785472
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 101 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 72 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 2 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 4 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 112 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 64 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 32 := 288230376023785472&2097151
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats   1150  54294   81  2039/2033  1090/454 103       0    21.88   0.54)
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 1452544 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 256 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 128 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 1079296 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 1024 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 1826816 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 4096 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 2048000 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 2064384 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 1703936 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 65536 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 1048576 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 786432 := 288230376023785472&2097151
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2097151&288230376023785472
band: (band[58] (if (= #611 63) 2658455991569831183181919872419364864 (if #613 1329227995784915591590959936209682432 #737)) (lshr[64] (mod #466 144115188075855872) (mod #745 64))) 524288 := 288230376023785472&2097151
(sat.stats   1739  75537  164  8240/8233  1759/838 103       0    25.55   0.97)
ramon: poll                 wall=1.000s usage=0.998s mem=26540KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 18822 :time 0.00)
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #66))) 1048576 := 144115188075856874 >>l 40
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 0&288230376135720960
lshr: (lshr[64] (mod (div #72 2) 144115188075855872) (mod (+ 57 #742 #744) 64)) 4 := 9 >>l 39
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 23269 :time 0.00)
 (sat-cleaner :elim-literals 75 :elim-clauses 140 :cost 25489 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 19139 :time 0.00)
ramon: poll                 wall=2.000s usage=1.998s mem=30184KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 153 :elim-clauses 10 :cost 20344 :time 0.00)
(sat.stats   2396 125465  227 31035/31027  2460/1201 418       0    29.68   2.46)
ramon: poll                 wall=3.000s usage=2.998s mem=34156KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.998s mem=34432KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 23330 :time 0.00)
lshr: (lshr[58] (bv2int %0) (+ 58 (* 288230376151711743 #66))) 0 := 144115325516390618 >>l 46
band: (band[58] (lshr[58] (bv2int %0) (+ 58 #484)) (if (= #55 57) 41538374868278612237217498006552576 (if #488 20769187434139306118608749003276288 #600))) 0 := 2048&288230376151461888
lshr: (lshr[64] (mod (div #72 2) 144115188075855872) (mod (+ 57 #742 #744) 64)) 131072 := 72057662758056544 >>l 45
 (sat-cleaner :elim-literals 10 :elim-clauses 1 :cost 26125 :time 0.00)
ramon: poll                 wall=5.000s usage=4.998s mem=35660KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.997s mem=37948KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.997s mem=37956KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 29647 :time 0.00)
ramon: poll                 wall=8.000s usage=7.997s mem=38132KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=38144KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.997s mem=38192KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.997s mem=38708KiB load=1.00 rootload=1.00
(sat.stats   3862 195249  276 108518/108508  4658/2179 435       0    37.96  11.56)
ramon: poll                 wall=12.000s usage=11.997s mem=39056KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.996s mem=39360KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.996s mem=39376KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.996s mem=39412KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.996s mem=44700KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.996s mem=54532KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.996s mem=70428KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.995s mem=75900KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.994s mem=82796KiB load=1.00 rootload=0.99
ramon: end                  Wed Dec 25 14:46:32 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.050s
ramon: group.total          20.008s
ramon: group.utime          19.956s
ramon: group.stime          0.052s
ramon: group.mempeak        83312KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
