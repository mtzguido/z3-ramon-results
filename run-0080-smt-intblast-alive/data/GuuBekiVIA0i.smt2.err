ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:01:28 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28242 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1268
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/GuuBekiVIA0i.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4153278
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2257    385  1219/1109/102     103/23     8   17   19.07)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 1 := 114265049246&1
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 2 := 114265049246&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 2 := 0 << 37
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049246 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049244 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049240 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049232 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&274877906944
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 274877906945 := 1 << 38
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&275012124668
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&8
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049231 := 114265049246&114332158096
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049231 := 114265049246&114332158096
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049230 := 114265049246&114265049231
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 114265049231 := 134217730 << 37
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049216 := 114265049246&34909494181888
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049199 := 114265049246&34909494181888
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049216 := 114265049246&274877906944
(smt.stats    1    202   5114    983  1810/1624/115     198/27    10   23   19.36)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049199 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049199 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049198 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049196 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049184 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049184 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049184 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049152 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049167 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049152 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049088 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265048960 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&274877906944
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 274877906945 := 385 << 38
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&274877906944
band: (band[45] (if (= #109 44) 0 (if #590 1 #713)) (shl[45] (bv2int %1) (+ 45 #716))) 1 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&274877906944
band: (band[45] (if (= #109 44) 0 (if #590 1 #713)) (shl[45] (bv2int %1) (+ 45 #716))) 2 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&274877906944
band: (band[45] (if (= #109 44) 0 (if #590 1 #713)) (shl[45] (bv2int %1) (+ 45 #716))) 4 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&274877906944
band: (band[45] (if (= #109 44) 0 (if #590 1 #713)) (shl[45] (bv2int %1) (+ 45 #716))) 8 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&274877906944
band: (band[45] (if (= #109 44) 0 (if #590 1 #713)) (shl[45] (bv2int %1) (+ 45 #716))) 16 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&274877906944
band: (band[45] (if (= #109 44) 0 (if #590 1 #713)) (shl[45] (bv2int %1) (+ 45 #716))) 32 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 114265049246&34909494181888
band: (band[45] (if (= #109 44) 0 (if #590 1 #713)) (shl[45] (bv2int %1) (+ 45 #716))) 114265049240 := 114265049246&34909494181888
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265049088 := 114265049246&34909494181888
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265048960 := 114265049246&34909494181888
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265048975 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265048975 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 6 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 6 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 12 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 518 := 114265049246&274877906944
(smt.stats    2    313   6622   2015  2026/1746/189     346/30    13   42   19.84)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 6 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 6 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 6 := 114265049246&274877906944
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 6 := 114265049246&274877906944
(smt.stats    3    414   8187   3264  2421/2222/215     512/60    15   48   19.94)
(smt.stats    4    525  11367   6420  2689/2461/225     631/129    17   70   20.04)
(smt.stats    5    647  14865   9379  2727/2496/227     757/167    19   81   20.13)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19424  14826  2734/2505/227     855/167    19   81   20.13)
(smt.stats    7    859  24030  19685  2735/2506/227     985/167    19   81   20.13)
(smt.stats    8    981  26187  22648  2756/2527/228    1127/192    20   82   20.23)
(smt.stats    9   1115  28601  26718  2759/2530/229    1261/195    21   84   20.35)
(smt.stats   10   1216  30337  29815  2812/2532/230    1422/207    22   86   20.35)
(smt.stats   11   1327  31924  33249  3127/2630/230    1735/214    22   86   20.54)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 114265055489 := 228530098492&274877911423
(smt.stats   12   1449  34298  38321  3162/2915/230    1951/218    22   86   20.54)
(smt.stats   13   1583  36527  46147  3219/2950/232    2366/410    23   89   20.54)
(smt.stats   14   1730  38996  57638  3304/3013/232    2710/413    23   89   20.64)
(smt.stats   15   1831  42264  65475  3334/3078/232    2999/416    23   89   20.74)
(smt.stats   16   1942  45172  72440  3384/3150/236    3163/660    24   94   20.83)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   17   2064  47836  76733  3469/3219/238    3349/693    25  111   20.93)
ramon: poll                 wall=1.002s usage=0.937s mem=22200KiB load=0.93 rootload=0.93
(smt.stats   18   2198  52437  81907  3528/3224/238    3539/696    25  111   21.05)
(smt.stats   19   2345  55341  88120  3624/3344/238    3772/721    26  111   21.05)
(smt.stats   20   2506  59589 104611  3634/3384/239    4164/764    27  113   21.15)
(smt.stats   21   2607  61278 111229  3666/3391/239    4421/767    27  113   21.15)
(smt.stats   22   2718  62997 115583  3681/3418/239    4562/767    27  113   21.25)
(smt.stats   23   2840  64750 123839  3708/3433/240    4754/788    28  116   21.25)
(smt.stats   24   2974  69243 141169  3712/3462/241    5145/824    29  117   21.25)
(smt.stats   25   3121  74031 160224  3720/3470/241    5544/824    29  117   21.35)
(smt.stats   26   3282  79739 179877  3728/3475/241    5780/824    29  117   21.35)
(smt.stats   27   3459  82409 192292  3749/3486/242    5968/857    30  127   21.61)
(smt.stats   28   3560  83976 197839  3764/3499/242    6149/858    30  127   21.61)
(smt.stats   29   3671  85908 205314  3784/3534/242    6274/858    30  127   21.61)
(smt.stats   30   3793  87814 214500  3793/3535/242    6408/859    30  127   21.61)
(smt.stats   31   3927  90863 224423  3820/3547/242    6579/861    30  127   21.61)
(smt.stats   32   4074  94185 235254  3831/3581/242    6726/861    30  127   21.61)
ramon: poll                 wall=2.000s usage=1.935s mem=22816KiB load=1.00 rootload=0.99
(smt.stats   33   4235  97411 248397  3840/3590/242    6910/861    30  127   21.61)
(smt.stats   34   4412 100390 262648  3871/3590/242    7125/864    30  127   21.61)
(smt.stats   35   4606 103289 280703  3881/3631/242    7360/864    30  127   21.61)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 0&14625926303840
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 14625926303848 := 7312963151920 << 1
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 0&14625926303824
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 14625926303832 := 7312963151912 << 1
(smt.stats   36   4708 105286 288877  3907/3637/242    7525/865    30  127   21.70)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 0&14625926303792
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 35184372088824 := 7312963151896 << 1
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 0&14625926303760
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 35184372088824 := 7312963151880 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   37   4819 105969 293797  3938/3682/247    7653/995    31  128   21.70)
(smt.stats   38   4941 106784 300074  3947/3693/249    7795/995    31  128   21.80)
(smt.delete-inactive-clauses  :num-deleted-clauses 23)
(smt.stats   39   5075 109175 309016  3955/3701/249    7998/995    31  128   21.80)
(smt.stats   40   5222 111810 321012  3963/3709/249    8163/1034    32  132   21.80)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 46 := 13621&22535
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 46 := 13621&22799
(smt.stats   41   5383 113783 325678  4174/3721/250    8469/1041    32  132   21.89)
(smt.stats   42   5560 116646 335096  4267/4002/255    8733/1050    33  133   21.89)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 38 := 7141565577&14625926303942
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 40 := 7141565577&15942918603528
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 24 := 7141565577&15942918603272
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8 := 7141565577&15942918603272
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 51127290692104 := 374 << 33
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 8 := 7141565577&15942918603016
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 15942918603016 := 510 << 33
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 7141565577&188978561024
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 10 := 11 << 34
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 7141565577&188978561024
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 10 := 11 << 34
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 7141565577&188978561024
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 10 := 11 << 34
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 7141565577&120259084288
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 10 := 1073741831 << 34
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 0 := 7141565577&120259084288
shl: (shl[45] (bv2int %1) (+ 45 (* 35184372088831 #105))) 10 := 1073741831 << 34
(smt.stats   43   5754 119438 343082  4412/4127/277    9452/1081    34  141   22.20)
(smt.stats   44   5967 121946 353203  4469/4201/284    9809/1081    34  141   22.29)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6068 124222 363076  4478/4219/284   10035/1081    34  141   22.29)
ramon: poll                 wall=3.000s usage=2.934s mem=23616KiB load=1.00 rootload=1.00
(smt.stats   46   6179 126755 376742  4489/4223/284   10316/1180    35  145   22.29)
(smt.stats   47   6301 129828 392444  4491/4233/285   10537/1180    35  145   22.29)
(smt.stats   48   6435 133290 407766  4526/4262/285   10805/1263    36  157   22.58)
(smt.stats   49   6582 134791 415545  4530/4262/285   11031/1263    36  157   22.68)
(smt.stats   50   6743 139464 440366  4537/4273/286   11288/1313    37  171   22.68)
(smt.stats   51   6920 144212 461244  4545/4281/286   11580/1313    37  171   22.77)
(smt.stats   52   7114 147027 474138  4553/4289/286   11915/1313    37  171   22.77)
(smt.stats   53   7327 152105 499189  4562/4295/286   12256/1313    37  171   22.77)
(smt.stats   54   7561 161106 531210  4569/4305/286   12548/1313    37  171   22.87)
(smt.stats   55   7662 166555 549944  4573/4309/287   12727/1418    38  184   22.87)
(smt.stats   56   7773 172151 572570  4579/4311/287   12837/1418    38  184   22.87)
(smt.stats   57   7895 176196 593835  4611/4339/287   13002/1418    38  184   22.96)
(smt.stats   58   8029 177443 608724  4630/4354/293   13227/1476    39  186   22.96)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 14625926303497 := 14625926303529&29251852607388
(smt.stats   59   8176 179472 619767  4644/4358/293   13513/1477    39  186   23.06)
ramon: poll                 wall=4.000s usage=3.934s mem=24332KiB load=1.00 rootload=1.00
(smt.stats   60   8337 182045 627366  4667/4387/293   13722/1477    39  186   23.06)
(smt.stats   61   8514 183018 636747  4684/4406/294   13958/1511    40  191   23.15)
(smt.stats   62   8708 185745 656563  4688/4409/294   14276/1511    40  191   23.15)
(smt.stats   63   8921 191705 691981  4697/4417/294   14660/1511    40  191   23.25)
(smt.stats   64   9155 198814 719820  4701/4421/294   15121/1511    40  191   23.25)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9412 203906 735424  4952/4424/294   15673/1513    40  191   23.34)
(smt.stats   66   9513 205706 741544  5036/4703/295   16186/1713    41  194   23.44)
(smt.stats   67   9624 207437 751180  5136/4767/295   16440/1716    41  194   23.44)
(smt.stats   68   9746 211022 769798  5192/4881/295   16686/1716    41  194   23.54)
ramon: poll                 wall=5.000s usage=4.934s mem=24856KiB load=1.00 rootload=1.00
(smt.stats   69   9880 215688 795700  5196/4916/295   17043/1716    41  194   23.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 1072)
(smt.stats   70  10027 217977 807579  5208/4917/295   16333/1716    41  194   23.54)
(smt.stats   71  10188 221027 823603  5209/4929/295   16513/1716    41  194   23.64)
(smt.stats   72  10365 225160 834038  5358/4931/296   16973/1873    42  199   23.73)
(smt.stats   73  10559 228292 846060  5487/5139/296   17308/1876    42  199   23.73)
(smt.stats   74  10772 231356 862252  5661/5379/299   17742/1966    43  202   23.83)
ramon: poll                 wall=6.002s usage=5.935s mem=25388KiB load=1.00 rootload=1.00
(smt.stats   75  11006 236116 892491  5754/5391/299   18502/1975    43  202   23.92)
(smt.stats   76  11263 242011 914621  6104/5525/299   19217/1984    43  202   24.11)
ramon: poll                 wall=7.000s usage=6.931s mem=25644KiB load=1.00 rootload=0.99
(smt.stats   77  11545 248269 952875  6257/5883/299   20251/1991    43  202   24.21)
(smt.stats   78  11646 252042 978947  6344/5999/299   20432/1993    43  202   24.21)
(smt.stats   79  11757 255705 993782  6439/6081/299   20845/1995    43  202   24.21)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   80  11879 261742 1024366  6458/6178/299   21120/1995    43  202   24.30)
(smt.stats   81  12013 265662 1041367  6479/6184/300   21711/2363    44  217   24.40)
ramon: poll                 wall=8.000s usage=7.931s mem=25900KiB load=1.00 rootload=1.00
(smt.stats   82  12160 270182 1068487  6550/6216/300   21966/2367    44  217   24.40)
(smt.stats   83  12321 275496 1105407  6596/6295/300   22209/2367    44  217   24.40)
(smt.stats   84  12498 276764 1119999  6609/6329/301   22437/2501    45  230   24.40)
(smt.stats   85  12692 281987 1137770  6615/6331/301   22671/2501    45  230   24.40)
(smt.stats   86  12905 289143 1194985  6737/6339/302   23231/2503    45  230   24.49)
(smt.stats   87  13139 296543 1244796  6898/6459/302   24279/2564    46  237   24.69)
ramon: poll                 wall=9.000s usage=8.931s mem=26156KiB load=1.00 rootload=1.00
(smt.stats   88  13396 305758 1328088  6971/6672/302   24743/2564    46  237   24.79)
(smt.stats   89  13678 313394 1369073  7136/6785/303   25316/2666    47  238   25.21)
(smt.stats   90  13988 325170 1451323  7153/6869/303   26346/2666    47  238   25.31)
(smt.stats   91  14089 327959 1468276  7215/6874/303   26614/2667    47  238   25.31)
(smt.stats   92  14200 330472 1483607  7337/6961/303   26991/2668    47  238   25.40)
(smt.stats   93  14322 332762 1492915  7350/7068/303   27136/2668    47  238   25.40)
ramon: poll                 wall=10.000s usage=9.930s mem=27048KiB load=1.00 rootload=1.00
(smt.stats   94  14456 335918 1514631  7387/7085/303   27395/2668    47  238   25.54)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 156 := 57132524623&274877903364
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 156 := 57132524623&274877903364
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 156 := 57132524623&274877903364
(smt.stats   95  14603 339541 1532026  7666/7115/303   27679/2689    47  238   25.63)
(smt.stats   96  14764 342930 1550988  7760/7414/303   28052/2690    47  238   25.73)
ramon: poll                 wall=11.000s usage=10.929s mem=27304KiB load=1.00 rootload=1.00
(smt.stats   97  14941 347735 1583054  7886/7496/303   28767/2697    47  238   25.83)
(smt.delete-inactive-clauses  :num-deleted-clauses 227)
(smt.stats   98  15135 350500 1601022  7964/7624/303   28960/2699    47  238   25.83)
(smt.stats   99  15348 356797 1639701  8267/7700/303   29395/2704    47  238   26.12)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  100  15582 366899 1693741  8346/8050/303   30089/2705    47  238   26.12)
ramon: poll                 wall=12.000s usage=11.929s mem=27816KiB load=1.00 rootload=1.00
(smt.stats  101  15839 372446 1720855  8678/8075/303   30828/2710    47  238   26.31)
(smt.stats  102  16121 379508 1780753  8853/8466/303   31919/2712    47  238   26.41)
(smt.stats  103  16431 386368 1846493  8986/8580/303   32665/2714    47  238   26.50)
ramon: poll                 wall=13.000s usage=12.929s mem=28072KiB load=1.00 rootload=1.00
(smt.stats  104  16771 394880 1917694  9010/8722/303   34422/2716    47  238   26.60)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 2522 := 14625926303529&29257317220398
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 2522 := 14625926303529&29257317220398
(smt.stats  105  16872 396821 1936555  9088/8732/303   34673/2721    47  238   26.69)
(smt.stats  106  16983 398124 1948520  9144/8823/303   34882/2721    47  238   26.69)
(smt.stats  107  17105 401132 1965008  9205/8885/303   35309/2721    47  238   26.79)
(smt.stats  108  17239 404225 1991405  9289/8931/303   35561/2721    47  238   26.79)
(smt.stats  109  17386 407519 2027194  9327/9010/303   35805/2721    47  238   26.79)
ramon: poll                 wall=14.000s usage=13.929s mem=28328KiB load=1.00 rootload=1.00
(smt.stats  110  17547 410408 2053974  9374/9053/303   36315/2722    47  238   26.88)
(smt.stats  111  17724 412628 2064287  9408/9113/303   36560/2722    47  238   26.98)
(smt.stats  112  17918 417664 2095460  9568/9137/304   37149/3878    48  241   26.98)
(smt.stats  113  18131 422381 2137713  9583/9301/304   37823/3878    48  241   27.07)
(smt.stats  114  18365 426415 2167018  9828/9357/305   38313/4036    49  241   27.44)
ramon: poll                 wall=15.000s usage=14.929s mem=29096KiB load=1.00 rootload=1.00
(smt.stats  115  18622 429480 2187277 10101/9568/305   38685/4040    49  241   27.53)
(smt.stats  116  18904 433039 2214946 10192/9886/305   39121/4040    49  241   27.63)
(smt.stats  117  19214 436136 2235397 10200/9918/306   39561/4040    49  241   27.63)
ramon: poll                 wall=16.000s usage=15.929s mem=29352KiB load=1.00 rootload=1.00
(smt.stats  118  19554 442484 2282018 10380/9922/306   40380/4047    49  241   27.82)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  119  19927 449116 2328966 10790/10175/306   40895/4319    50  246   27.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 284)
(smt.stats  120  20028 451119 2351984 10822/10538/306   40807/4319    50  246   28.02)
(smt.stats  121  20139 453125 2367870 10826/10542/307   41085/4319    50  246   28.02)
ramon: poll                 wall=17.000s usage=16.929s mem=29608KiB load=1.00 rootload=1.00
(smt.stats  122  20261 456567 2403173 10842/10550/307   41227/4319    50  246   28.02)
(smt.stats  123  20395 460754 2444423 10936/10562/307   41476/4374    51  266   28.11)
(smt.stats  124  20542 463730 2467790 10941/10657/307   41790/4374    51  266   28.11)
(smt.stats  125  20703 468223 2513480 10945/10661/307   42023/4374    51  266   28.21)
(smt.stats  126  20880 470963 2532729 11120/10664/307   42303/4384    51  266   28.30)
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 4 := 6&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 17682856171288920068 := 35184283158526 << 3
band: (band[45] (if (= #345 63) 0 (if #567 1 #803)) (shl[64] (* 2 #328) (mod #818 64))) 4 := 6&4
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 44 #810 #814) 64)) 17682891355661008900 := 35184283160710 << 3
ramon: poll                 wall=18.000s usage=17.929s mem=29864KiB load=1.00 rootload=1.00
(smt.stats  127  21074 472564 2550455 11180/10870/307   42532/4387    51  266   28.30)
(smt.stats  128  21287 476575 2599946 11222/10930/312   43427/4500    52  267   28.40)
(smt.stats  129  21521 481805 2639249 11274/10947/312   43948/4500    52  267   28.49)
(smt.stats  130  21778 487802 2691385 11454/10990/312   44413/4660    53  267   28.49)
ramon: poll                 wall=19.000s usage=18.929s mem=30120KiB load=1.00 rootload=1.00
(smt.stats  131  22060 495450 2774219 11576/11256/313   44931/4691    54  270   28.63)
(smt.stats  132  22370 504134 2868280 11593/11294/313   45376/4691    54  270   28.63)
(smt.stats  133  22710 510574 2955913 11735/11314/313   46222/4696    54  270   28.82)
ramon: poll                 wall=20.000s usage=19.929s mem=30376KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:01:48 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.992s
ramon: group.utime          19.976s
ramon: group.stime          0.016s
ramon: group.mempeak        30632KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.00
