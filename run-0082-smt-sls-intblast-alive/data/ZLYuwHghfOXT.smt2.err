ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:43:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27867 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1376
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ZLYuwHghfOXT.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             850388
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 150924710209&1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 150924710209&1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 1 := 150924710209&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 1 := 8796093022166 << 40
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 150924710209&1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 150924710209&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 2 := 86 << 40
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 150924710209&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 2 := 86 << 40
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 16777237 := 150924710209&16777237
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 1 := 150924710209&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 1 := 16777238 << 40
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   106.383     10000        49          0            1        2)
(smt.stats    0    101   3625    854  1111/1000/104      88/10     5   21   51.97)
(sat.ddfw       1      1   52.9153     20001        98          1            1        3)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 150924710209&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2274587836416 := 2274587836417 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 150924710209&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2274587836416 := 2274587836417 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 150924710209&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2274587836416 := 2274587836417 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 150924710209&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2274587836416 := 2274587836417 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 150924710209 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 150924710208 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 2 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 2 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 4 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 8 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 16 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 32 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 128 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 256 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 512 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 1024 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 2048 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 4096 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 4096 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 8192 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 16384 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 16384 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 32768 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 65536 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 131072 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 262144 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 524288 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 1048576 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 2097152 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 4194304 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 8388608 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 16777216 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 33554432 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 67108864 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 134217728 := 150924710209&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 67108864 := 150924710209&2199023255552
(smt.stats    1    202   4060   1460  2255/1794/105     191/17     6   22   53.00)
(sat.ddfw       1      1   51.9481     40001       196          2            1        5)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 64 := 150924710209&2199023255552
(sat.ddfw       1      1    45.045     70001       343          3            1        8)
(smt.stats    2    313   5779   3737  2324/1953/244     330/32     9   53   53.20)
ramon: poll                 wall=1.000s usage=0.948s mem=55416KiB load=0.95 rootload=0.93
(sat.ddfw       1      1   38.1679    110001       539          4            1       12)
(sat.ddfw       1      1   32.9374    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.943s mem=55864KiB load=0.99 rootload=1.00
(sat.ddfw       1      1   28.8189    220001      1078          6            1       23)
(smt.stats    3    414   6174   3971  2396/2165/249     431/47    10   54   53.68)
(smt.stats    4    525   7695   6047  2816/2622/263     642/78    14   70   53.58)
(smt.stats    5    647  12510  14205  2898/2687/263     852/78    14   70   53.68)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16244  16990  2916/2705/264     978/149    15   72   53.78)
(smt.stats    7    859  21020  22983  2926/2713/266    1096/149    17   80   53.78)
(sat.ddfw       1      1   25.4453    290001      1421          7            1       30)
(smt.stats    8    981  24270  25871  2955/2742/278    1260/157    18   81   53.88)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&76218892289
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&76218892289
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&76218892288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8872311914496 := 4549209227296 << 3
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&76218892288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8872311914496 := 4549209227296 << 3
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&76185337984
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8872278360192 := 4549209227296 << 3
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&76185337984
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8872278360192 := 4549209227296 << 3
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&1209301729536
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2 := 2274604613648 << 4
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&1209301729536
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2 := 2274604613648 << 4
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&1209301729536
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2 := 2274604613648 << 4
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&1209301729536
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 150958264505 := 2274604613648 << 4
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&1209301729536
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 1 := 1&1209301729536
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&1209301729536
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 1 := 1&1209301729536
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&1209301729536
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 1 := 1&1209301729536
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 1&1209301732224
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 1 := 1&1209301732224
(smt.stats    9   1115  27069  28408  3036/2809/300    1406/180    19  105   53.97)
ramon: poll                 wall=3.000s usage=2.944s mem=56236KiB load=1.00 rootload=0.99
(smt.stats   10   1216  30325  31781  3047/2829/305    1512/194    20  114   53.97)
(smt.stats   11   1327  34188  36341  3057/2839/305    1670/200    21  114   54.11)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  37525  39566  3089/2854/305    1812/201    21  114   54.11)
(smt.stats   13   1583  42729  45759  3111/2891/309    1961/236    22  117   54.22)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 1 := 1&2274050965504
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 1 := 1&2274050965504
(smt.stats   14   1730  46615  52792  3172/2895/309    2119/253    23  133   54.32)
(sat.ddfw       1      1   22.9292    370001      1813          8            1       38)
(smt.stats   15   1831  51580  60374  3204/2982/309    2236/253    23  133   54.32)
(smt.stats   16   1942  56499  68855  3230/2990/309    2411/254    23  133   54.32)
(smt.stats   17   2064  60033  74698  3243/3019/310    2532/317    24  141   54.42)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576303039106
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 6974349550210 := 3450066698232 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576303039106
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 6974349550210 := 3450066698232 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576303039106
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 6974349550210 := 3450066698232 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576319816194
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576303039106
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 6974349550210 := 3450066698232 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576319816194
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576319816194
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576303039234
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576303039234
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576303039234
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576303039234
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 301849420418 := 301849420418&2576303039362
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 6974349550466 := 3450049921080 << 41
ramon: poll                 wall=4.000s usage=4.041s mem=57244KiB load=1.10 rootload=1.10
(smt.stats   18   2198  63181  81262  3319/3094/321    2684/335    25  146   54.71)
(smt.stats   19   2345  67458  90542  3337/3111/324    2859/354    26  151   54.71)
(sat.ddfw       1      1   21.7077    460001      2254          9            1       47)
(smt.stats   20   2506  70707  97657  3402/3168/326    3039/370    27  162   54.80)
(smt.stats   21   2607  73462 101069  3435/3179/326    3151/388    28  167   54.80)
(smt.stats   22   2718  76288 106807  3482/3235/326    3347/390    28  167   54.90)
ramon: poll                 wall=5.000s usage=5.118s mem=57332KiB load=1.08 rootload=1.07
(sat.ddfw       1      1   20.1694    560001      2745         10            1       57)
(smt.stats   23   2840  80196 114136  3502/3258/326    3482/390    28  167   54.90)
(smt.stats   24   2974  84425 120196  3514/3279/326    3621/391    28  167   54.90)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 2 := 4&512
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 4 := 4&512
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 4 := 4&513
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 4 := 4&513
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 4 := 4&513
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&769
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 769 := 72 << 5
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&769
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 769 := 72 << 5
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&769
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 769 := 72 << 5
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2274009022467 := 36 << 6
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2274009022467 := 36 << 6
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2274009022467 := 36 << 6
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2274009022467 := 36 << 6
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 2 := 4&2304
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 4 := 4&2304
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 2 := 4&2304
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 2 := 4&2304
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 2 := 4&2304
(smt.stats   25   3121  86536 127712  3629/3389/366    3812/446    30  180   55.00)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 4 := 4&2304
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 4&2304
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 1 := 4&2304
(smt.stats   26   3282  90225 137814  3658/3413/372    3983/447    30  180   55.26)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 2 := 8&4
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8796093022210 := 70 << 6
(smt.stats   27   3459  94930 151058  3687/3442/381    4276/475    32  200   55.41)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 17&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8796093023234 := 68 << 7
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 17&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8796093023234 := 68 << 7
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 17&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8796093023234 := 68 << 7
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 17&1026
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8796093023234 := 68 << 7
(smt.stats   28   3560  99061 158036  3735/3478/381    4409/475    32  200   55.68)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 8796093022214 := 70 << 6
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 4 := 70 << 6
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 2 := 70 << 6
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #876 #878) 64)) 2 := 70 << 6
(smt.stats   29   3671 102012 166090  3768/3495/386    4578/584    33  214   55.58)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&4480
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2273950302336 := 35 << 7
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&4480
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2273950302336 := 35 << 7
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&4480
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 8 := 8&4480
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&4480
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 8 := 8&4480
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&4480
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 1 := 8&4480
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 0 := 8&4480
band: (band[42] (if (or #545 #546 #547) 0 (if #548 1 #656)) (shl[42] (bv2int %0) (+ 42 #664))) 1 := 8&4480
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 8 := 8&4480
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #701 1 #777)) (shl[64] (* 2 #114) (mod #879 64))) 8 := 8&4480
(smt.stats   30   3793 103507 173137  3839/3572/403    4720/602    34  221   55.95)
(smt.stats   31   3927 107373 186310  3858/3596/414    4883/606    35  230   55.95)
ramon: poll                 wall=6.002s usage=6.159s mem=58476KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   18.3303    670001      3284         11            1       68)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 110284 192484  3951/3613/416    5242/618    36  231   56.24)
(smt.stats   33   4235 112919 202904  4341/3758/416    5710/631    36  231   56.43)
ramon: poll                 wall=7.000s usage=7.159s mem=58892KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.7926    790001      3872         12            1       80)
(smt.stats   34   4412 115910 213790  4730/4110/416    6295/641    36  231   56.62)
(smt.stats   35   4606 122509 227166  4831/4557/422    7176/837    37  236   56.72)
ramon: poll                 wall=8.002s usage=8.146s mem=59256KiB load=0.99 rootload=0.99
(smt.stats   36   4707 125540 230866  4983/4574/422    7386/842    37  236   56.81)
(smt.stats   37   4818 129989 248745  5055/4778/422    7938/973    38  250   56.90)
(sat.ddfw       1      1   15.4983    920001      4509         13            1       93)
(smt.stats   38   4940 132777 260249  5276/5014/423    8808/1226    39  262   57.00)
ramon: poll                 wall=9.000s usage=9.155s mem=59600KiB load=1.01 rootload=1.01
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 136688 271623  5280/5018/424    9270/1226    39  262   57.09)
(smt.stats   40   5221 142738 292776  5296/5030/424    9770/1372    40  264   57.46)
(sat.ddfw       1      1    14.433   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=10.156s mem=59916KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   41   5382 146724 304541  5501/5053/424   10083/1380    40  264   57.65)
(smt.stats   42   5559 149744 315523  5586/5288/424   10508/1380    40  264   57.65)
ramon: poll                 wall=11.002s usage=11.156s mem=59824KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    13.505   1210001      5931         15            1      123)
(smt.stats   43   5753 153241 330193  5756/5366/425   10866/1576    41  266   57.76)
(smt.stats   44   5966 160740 357257  5798/5498/425   11391/1576    41  266   57.76)
(smt.stats   45   6067 163852 373461  5816/5545/426   11682/1660    42  271   57.86)
ramon: poll                 wall=12.000s usage=12.148s mem=60268KiB load=0.99 rootload=0.99
(smt.stats   46   6178 167529 388051  5919/5559/427   11849/1664    42  271   57.96)
(smt.stats   47   6300 173694 413952  5998/5717/428   12068/1789    43  276   57.96)
(smt.stats   48   6434 178171 424194  6066/5777/430   12305/1809    44  276   58.15)
(sat.ddfw       1      1   12.6763   1370001      6715         16            1      139)
(smt.stats   49   6581 182819 438241  6071/5782/431   12561/1809    44  276   58.15)
ramon: poll                 wall=13.000s usage=13.149s mem=60684KiB load=1.00 rootload=1.00
(smt.stats   50   6742 193298 465198  6078/5789/435   12770/1897    45  286   58.15)
(smt.stats   51   6919 200783 494438  6181/5789/436   13219/1909    46  291   58.25)
(smt.stats   52   7113 207387 521116  6217/5921/436   13593/1929    47  295   58.92)
ramon: poll                 wall=14.000s usage=14.147s mem=61128KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.9584   1540001      7549         17            1      156)
(smt.stats   53   7326 214330 542624  6445/5928/436   14058/1935    47  295   59.11)
ramon: poll                 wall=15.000s usage=15.140s mem=61308KiB load=0.99 rootload=0.99
(smt.stats   54   7560 222036 572467  6642/6261/436   14791/1949    47  295   59.11)
(smt.stats   55   7661 225757 590964  6662/6359/436   15114/1952    47  295   59.11)
(smt.stats   56   7772 228745 598683  6794/6379/436   15328/1954    47  295   59.24)
(sat.ddfw       1      1   11.3158   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.303s mem=61756KiB load=1.16 rootload=1.16
(smt.stats   57   7894 232164 618406  7003/6534/436   15645/1954    47  295   59.24)
(smt.stats   58   8028 235318 636020  7028/6736/438   16026/2183    48  296   59.36)
(smt.stats   59   8175 243383 678652  7037/6745/438   16518/2183    48  296   59.36)
(smt.stats   60   8336 250857 712116  7121/6754/438   16952/2331    49  297   59.47)
ramon: poll                 wall=17.000s usage=17.361s mem=61916KiB load=1.06 rootload=1.06
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8513 254839 721978  7263/6850/438   17500/2331    49  297   59.56)
(smt.stats   62   8707 262654 757515  7340/7003/440   18418/2432    50  317   59.79)
(smt.stats   63   8920 271705 813333  7461/7124/440   18972/2432    50  317   59.89)
(sat.ddfw       1      1   10.7357   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=18.512s mem=62144KiB load=1.15 rootload=1.15
(smt.stats   64   9154 279457 845738  7477/7185/440   19535/2541    51  333   59.89)
(smt.stats   65   9411 288290 880922  7506/7195/440   20234/2542    51  333   60.08)
(smt.stats   66   9512 289998 890542  7519/7227/440   20372/2542    51  333   60.08)
ramon: poll                 wall=19.000s usage=19.472s mem=62400KiB load=0.96 rootload=0.96
(smt.stats   67   9623 293355 905710  7532/7235/440   20521/2543    51  333   60.08)
(smt.stats   68   9745 296960 921761  7542/7242/440   20692/2543    51  333   60.08)
(sat.ddfw       1      1   10.2119   2110001     10343         20            1      214)
(smt.stats   69   9879 299604 933659  7580/7253/440   20927/2544    51  333   60.08)
ramon: poll                 wall=20.000s usage=20.474s mem=62780KiB load=1.00 rootload=1.01
ramon: end                  Fri Nov  1 22:43:39 2024
ramon: root.execname        z3
ramon: root.utime           20.510s
ramon: root.stime           0.020s
ramon: group.total          20.542s
ramon: group.utime          20.518s
ramon: group.stime          0.024s
ramon: group.mempeak        63052KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.02
