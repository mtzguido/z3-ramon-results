ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:55:49 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40605 MiB
ramon: sys.mem.avail        61380 MiB
ramon: sys.nprocs           1327
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Rbf7sjM9Y118.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3847433
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   244/244     0/0  67       0    18.53   0.00)
(sat.stats    114    818    0   244/244   114/39  67       0    18.86   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 352 :time 0.00)
(sat.stats    114    818    0   244/244   114/39  67       0    18.86   0.01)
(sat.stats    114    818    0   244/244   114/39  67       0    18.86   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 475418.86 :time 0.00)
(sat.stats    114    818    0   244/244   108/39  67       0    18.86   0.01)
(sat.stats    130   1047    1   244/244   124/53  67       0    18.86   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    133   1089    2   244/244   127/54  67       0    18.86   0.01)
(sat.stats    136   1143    3   244/244   130/56  67       0    18.86   0.01)
(sat.stats    139   1187    4   244/244   133/56  67       0    18.86   0.01)
(sat.stats    142   1242    5   244/244   136/58  67       0    18.86   0.01)
(sat.stats    145   1311    6   244/244   139/61  67       0    18.96   0.01)
(sat.stats    148   1389    7   244/244   142/64  67       0    18.96   0.01)
(sat.stats    180   2166    8   244/244   174/89  67       0    18.96   0.01)
(sat.stats    183   2210    9   244/244   177/89  67       0    18.96   0.01)
(sat.stats    186   2250   10   244/244   180/89  67       0    18.96   0.01)
(sat.stats    189   2303   11   244/244   183/89  67       0    18.96   0.01)
(sat.stats    192   2362   12   244/244   186/89  67       0    18.96   0.01)
(sat.stats    210   2759   18   244/244   204/96  67       0    18.96   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1977 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    317   5514   25   244/244   310/143  74       0    19.56   0.05)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2423 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 4950 :time 0.00)
(sat.stats    494   9747   38   326/325   484/205  81       0    19.84   0.14)
lshr: (lshr[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037927935 := 29 >>l 29
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 0 := 0&3758096384
lshr: (lshr[64] (* 256 (bv2int %0)) (mod (+ 8 #58 #314) 64)) 72057594037906854 := 7424 >>l 37
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 5367 :time 0.00)
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 14229 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 18832 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 134217678 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 566176 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 111808 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 3730048 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 3577856 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 768 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 512 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 1024 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 34029568 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 8192 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 4096 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 62029824 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 94240768 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 65536 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 14680064 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 1048576 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 524288 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 262144 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 96468992 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 117440512 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 8388608 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 67108864 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 33554432 := 134217727&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 4 := 4&3758096384
band: (band[56] (lshr[56] (bv2int %0) (mod #58 56)) (if (= #482 55) 1008806316530991104 (if #484 504403158265495552 #592))) 8 := 8&3758096384
 (sat-cleaner :elim-literals 16 :elim-clauses 5 :cost 6472 :time 0.00)
(sat.stats    709  19121   66  4688/4685   817/416 259       0    22.29   0.30)
(sat.stats   1070  29806  117 16900/16897  1290/671 259       0    24.30   0.43)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 18816 :time 0.00)
ramon: poll                 wall=1.000s usage=0.934s mem=27056KiB load=0.93 rootload=0.91
 (sat-cleaner :elim-literals 3 :elim-clauses 3 :cost 19558 :time 0.00)
ramon: poll                 wall=2.000s usage=1.932s mem=27656KiB load=1.00 rootload=1.00
(sat.stats   1841  48609  162 30573/30570  2157/1088 263       0    27.39   2.33)
 (sat-cleaner :elim-literals 19 :elim-clauses 1 :cost 23261 :time 0.00)
ramon: poll                 wall=3.000s usage=2.932s mem=29296KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.931s mem=30492KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.931s mem=31056KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.002s usage=5.932s mem=31120KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.002s usage=6.930s mem=31384KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.926s mem=31816KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.925s mem=31828KiB load=1.00 rootload=1.00
(sat.stats   3228  94456  189 61675/61672  3766/1323 273       0    30.89   9.65)
ramon: poll                 wall=10.000s usage=9.924s mem=32396KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.924s mem=33816KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc         :time )
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   3781 104402  192 62084/62081  4326/1406 273       0    32.75  11.14)
ramon: poll                 wall=12.000s usage=11.924s mem=35384KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.924s mem=35384KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.919s mem=35520KiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.918s mem=35536KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.915s mem=36316KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.914s mem=36124KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.914s mem=36384KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.002s usage=18.918s mem=36620KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.913s mem=37180KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:56:09 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.988s
ramon: group.utime          19.968s
ramon: group.stime          0.020s
ramon: group.mempeak        37440KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.00
