ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:25:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28276 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/PN8lmXOr3473.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             788723
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   75.7576     10000        49          0            1        2)
(sat.ddfw       1      1    42.021     20001        98          1            1        3)
(smt.stats    0    101   1758    518  1177/1032/100     105/15     7   17   51.96)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&2
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&2
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&4
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&2
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&4
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&8
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&2
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&8
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 8 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&8
(smt.stats    1    202   4040   1353  1896/1726/162     209/50    10   38   52.24)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 4 := 137438953471&12
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 137438953471&4
(sat.ddfw       1      1   46.0829     40001       196          2            1        5)
(smt.stats    2    313   6411   2727  2194/1968/168     338/69    11   39   52.43)
(sat.ddfw       1      1   44.7094     70001       343          3            1        8)
(smt.stats    3    414   9402   4601  2392/2156/172     467/107    13   46   52.64)
(smt.stats    4    525  11196   6610  2608/2209/173     613/146    14   47   52.64)
ramon: poll                 wall=1.000s usage=0.964s mem=54984KiB load=0.96 rootload=0.95
(sat.ddfw       1      1   36.1991    110001       539          4            1       12)
(smt.stats    5    647  14073   9517  2726/2412/173     743/178    15   50   52.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19025  13843  2729/2503/174     840/188    16   53   52.96)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2192
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2192
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2192
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2192
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2208
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2208
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2208
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2208
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 32767&2240
(smt.stats    7    859  20774  15972  2843/2547/222     993/213    17   62   53.16)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 3&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 105553116267040 := 176 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 3&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 105553116267040 := 176 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 3&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 35184372089376 := 176 << 1
(smt.stats    8    981  23305  20944  3001/2763/232    1209/246    19   81   53.36)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&178
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 88 := 89 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&178
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 88 := 89 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&178
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 88 := 89 << 1
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 1 := 1&178
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&178
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 1 := 1&178
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 8 := 63&168
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 40 := 63&168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 168 := 168 << 5
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 40 := 63&168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 168 := 168 << 5
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 32 := 63&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 544 := 168 << 5
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 32 := 63&544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 544 := 168 << 5
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 32 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 16 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 84 := 84 << 6
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 84 := 84 << 6
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 84 := 84 << 6
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 84 := 84 << 6
(smt.stats    9   1116  28868  25758  3097/2835/261    1386/307    20   96   53.67)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 63 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 62 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 60 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 56 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 48 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 32 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 14 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 32 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 4 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 8 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 4 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 8 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 4 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 8 := 63&5376
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 63&5376
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 40 := 63&5376
(smt.stats   10   1217  31231  30014  3237/2969/315    1545/374    22  112   53.95)
(sat.ddfw       1      1   29.4285    160000       784          5            1       17)
(smt.stats   11   1328  35126  36382  3318/3036/315    1765/378    22  112   54.34)
ramon: poll                 wall=2.000s usage=1.936s mem=56576KiB load=0.97 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  39076  43545  3359/3100/319    1950/433    24  118   54.47)
(smt.stats   13   1584  43229  51282  3370/3109/322    2205/433    24  118   54.59)
(smt.stats   14   1731  49522  62488  3389/3127/324    2460/568    26  136   54.68)
(sat.ddfw       1      1   25.6634    220001      1078          6            1       23)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 1&1708
band: (band[45] (if (= #108 44) 1 (if #586 3 #710)) (shl[45] (bv2int %0) (+ 45 #713))) 1 := 1&1708
(smt.stats   15   1832  52367  68612  3457/3177/324    2617/573    27  142   54.81)
(smt.stats   16   1943  55964  75515  3490/3207/324    2767/573    27  142   54.81)
(smt.stats   17   2065  60067  82929  3592/3258/331    3067/618    28  160   55.01)
ramon: poll                 wall=3.000s usage=2.934s mem=57200KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   22.6391    290001      1421          7            1       30)
(smt.stats   18   2199  65489  91329  3684/3310/331    3260/687    29  174   55.23)
ramon: poll                 wall=4.000s usage=3.926s mem=57408KiB load=0.99 rootload=1.00
(sat.ddfw       1      1   20.1664    370001      1813          8            1       38)
(smt.stats   19   2346  70827 102550  3835/3456/331    3524/695    29  174   55.32)
ramon: poll                 wall=5.000s usage=4.930s mem=57592KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.2223    460001      2254          9            1       47)
(smt.stats   20   2507  74465 111870  3927/3637/334    3934/774    30  185   55.42)
(smt.stats   21   2608  78383 119297  3955/3658/335    4211/806    31  191   55.42)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 30 := 17592186044412&30
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 28 := 17592186044412&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 175921860444190 := 35184372091472 << 43
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 28 := 17592186044412&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 175921860444190 := 35184372091472 << 43
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 28 := 17592186044412&30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #807 #811) 64)) 175921860444190 := 35184372091472 << 43
(smt.stats   22   2719  81478 126942  4055/3671/335    4522/808    31  191   55.51)
(smt.stats   23   2841  85559 138762  4082/3780/340    4946/830    32  192   55.61)
(smt.stats   24   2975  88697 148630  4135/3842/341    5276/887    33  192   55.61)
ramon: poll                 wall=6.000s usage=5.930s mem=57904KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.5948    560001      2745         10            1       57)
(smt.stats   25   3122  92526 157910  4222/3875/341    5624/940    34  192   55.94)
(smt.stats   26   3283  96614 172551  4367/4064/342    5946/987    35  194   56.03)
ramon: poll                 wall=7.000s usage=6.912s mem=58372KiB load=0.98 rootload=0.98
(smt.stats   27   3460  99899 183213  4542/4239/345    6419/987    35  194   56.24)
(sat.ddfw       1      1   15.3331    670001      3284         11            1       68)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3561 102609 190770  4610/4285/345    6618/1039    36  208   56.34)
(smt.stats   29   3672 108829 203229  4626/4310/345    6825/1039    36  208   56.34)
(smt.stats   30   3794 111412 211112  4657/4327/345    6983/1040    36  208   56.50)
(smt.stats   31   3928 115811 221717  4687/4355/345    7198/1042    36  208   56.60)
ramon: poll                 wall=8.000s usage=7.904s mem=58768KiB load=0.99 rootload=0.99
(smt.stats   32   4075 121490 242379  4699/4378/345    7650/1042    36  208   56.60)
(sat.ddfw       1      1   14.1443    790001      3872         12            1       80)
(smt.stats   33   4236 130087 264336  4900/4396/345    8033/1046    36  208   56.69)
ramon: poll                 wall=9.000s usage=8.907s mem=59040KiB load=1.00 rootload=1.01
(smt.stats   34   4413 136967 279792  5040/4609/347    8334/1270    37  231   56.79)
(sat.ddfw       1      1   13.1766    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.907s mem=59136KiB load=1.00 rootload=1.00
(smt.stats   35   4607 144129 304371  5068/4743/348    8825/1277    38  233   57.17)
(smt.stats   36   4708 148193 322780  5099/4758/348    9063/1279    38  233   57.17)
ramon: poll                 wall=11.000s usage=10.907s mem=59336KiB load=1.00 rootload=1.00
(smt.stats   37   4819 151842 341200  5143/4802/350    9408/1364    39  241   57.26)
(smt.stats   38   4941 155806 357518  5155/4837/350    9744/1364    39  241   57.36)
(sat.ddfw       1      1   12.3153   1060001      5196         14            1      108)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5075 158436 371363  5204/4847/351   10242/1454    40  249   57.46)
ramon: poll                 wall=12.000s usage=11.911s mem=59596KiB load=1.00 rootload=1.00
(smt.stats   40   5222 161275 384403  5333/4894/351   10473/1463    40  249   57.55)
band: (band[45] (if (= #343 63) 1 (if #565 3 #800)) (shl[64] (* 2 #102) (mod #815 64))) 0 := 2147483647&645
(smt.stats   41   5383 165227 400625  5464/5075/351   10913/1466    40  249   57.65)
ramon: poll                 wall=13.000s usage=12.891s mem=59772KiB load=0.98 rootload=0.98
(sat.ddfw       1      1    11.542   1210001      5931         15            1      123)
(smt.stats   42   5560 169805 418190  5581/5201/351   11399/1468    40  249   57.65)
(smt.stats   43   5754 176572 444232  5600/5271/351   11727/1468    40  249   57.74)
ramon: poll                 wall=14.000s usage=13.891s mem=60004KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.8755   1370001      6715         16            1      139)
(smt.stats   44   5967 181074 468321  5793/5319/351   12169/1471    40  249   57.93)
ramon: poll                 wall=15.000s usage=14.891s mem=60304KiB load=1.00 rootload=1.00
(smt.stats   45   6068 185131 480499  5798/5470/351   12389/1471    40  249   58.03)
(smt.stats   46   6179 190020 500005  5883/5470/351   12662/1476    40  249   58.12)
ramon: poll                 wall=16.000s usage=15.891s mem=60444KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.2756   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=16.891s mem=60496KiB load=1.00 rootload=1.00
(smt.stats   47   6301 193735 509852  6061/5609/351   12931/1479    40  249   58.23)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6435 196873 525808  6124/5750/351   13347/1481    40  249   58.32)
ramon: poll                 wall=18.000s usage=17.891s mem=60632KiB load=1.00 rootload=1.00
(smt.stats   49   6582 199314 534030  6171/5806/351   13882/1482    40  249   58.32)
(smt.stats   50   6743 203385 548117  6269/5858/351   14285/1485    40  249   58.32)
(sat.ddfw       1      1   9.74184   1720001      8431         18            1      174)
(smt.stats   51   6920 209158 587981  6303/5960/351   14657/1485    40  249   58.83)
ramon: poll                 wall=19.000s usage=18.890s mem=60804KiB load=1.00 rootload=1.00
(smt.stats   52   7114 214911 612396  6407/5989/352   15347/2099    41  258   58.92)
ramon: poll                 wall=20.000s usage=19.890s mem=61208KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:25:35 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.950s
ramon: group.utime          19.934s
ramon: group.stime          0.016s
ramon: group.mempeak        61464KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.059s
ramon: loadavg              0.99
