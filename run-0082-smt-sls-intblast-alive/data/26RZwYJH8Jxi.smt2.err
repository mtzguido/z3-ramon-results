ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:31:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29516 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/26RZwYJH8Jxi.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             600687
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1&35184372084736
lshr: (lshr[64] (bv2int %0) (mod (+ #108 #632) 64)) 1 := 33 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 257&35184372084736
lshr: (lshr[64] (bv2int %0) (mod (+ #108 #632) 64)) 257 := 258 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 257&35184372084736
lshr: (lshr[64] (bv2int %0) (mod (+ #108 #632) 64)) 257 := 258 >>l 33
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   105.263     10000        49          0            1        2)
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 55&35184372084736
lshr: (lshr[64] (bv2int %0) (mod (+ #108 #632) 64)) 55 := 168 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1&35184372084736
lshr: (lshr[64] (bv2int %0) (mod (+ #108 #632) 64)) 1 := 123 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 0&35184372084736
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 136 := 123 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 0&35184372084736
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 136 := 123 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 0&35184372084736
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 136 := 123 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 0&35184372084736
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 136 := 33 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 0&35184372084736
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 34 := 33 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 0&35184372084736
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 34 := 33 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 0&35184372084736
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 34 := 33 >>l 33
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 1 := 1&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 1 := 1&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 1 := 1&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 39&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 2 := 39&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 2 := 39&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 39&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 4 := 39&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 4 := 39&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 39&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 32 := 39&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 8&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 8 := 8&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 16&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 16 := 16&35184372084736
(sat.ddfw       1      1   49.5099     20001        98          1            1        3)
(smt.stats    0    101   5302    884  1242/1056/106      96/15     6   18   52.56)
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 27&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 16 := 27&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 27&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 16 := 27&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 39&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 32 := 39&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 84&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 64 := 84&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 84&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 64 := 84&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 84&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 64 := 84&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 4044&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 3968 := 4044&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 4044&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 3840 := 4044&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 4044&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 3584 := 4044&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 2064&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 2048 := 2064&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 534&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 512 := 534&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 534&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 512 := 534&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1074&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 1024 := 1074&35184372084736
(sat.ddfw       1      1   47.7327     40001       196          2            1        5)
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1074&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 1024 := 1074&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 264&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 256 := 264&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 264&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 256 := 264&35184372084736
(smt.stats    1    202   6650   1896  2365/2134/190     202/21    10   39   52.84)
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1074&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 4 := 1074&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1074&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 8 := 1074&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1299&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 8 := 1299&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1164&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 4 := 1164&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1074&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 8 := 1074&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1704&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 8 := 1704&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1209&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 128 := 1209&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1299&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 128 := 1299&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1299&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 128 := 1299&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1434&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 128 := 1434&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1344&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 512 := 1344&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 1344&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 512 := 1344&35184372084736
(sat.ddfw       1      1   39.7878     70001       343          3            1        8)
(smt.stats    2    313   8229   3307  2497/2151/195     341/31    11   41   53.13)
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 2424&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 512 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 2784&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 512 := 2784&35184372084736
ramon: poll                 wall=1.000s usage=0.929s mem=55368KiB load=0.93 rootload=0.92
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 2424&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 2048 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 2 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 4 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 8 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 16 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 2 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 2 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 2 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 8 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 8 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 16 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 32 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 32 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 32 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 24 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 16 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 16 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 16 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 8 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 8 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 2 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 1 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 4 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 2424&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 2 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 0 := 2424&35184372084736
band: (band[45] (lshr[45] (bv2int %0) (mod #108 45)) (if (= #536 44) 618970019642672545263517696 (if #538 309485009821336272631758848 #624))) 1 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 64 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 128 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 256 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 512 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 1024 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 2048 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 2048 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 64 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 128 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 256 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 512 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 512 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 512 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 64 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 64 := 2424&35184372084736
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 64 := 2424&35184372084736
(smt.stats    3    414  10205   7083  2652/2430/369     529/85    15   82   53.64)
(smt.stats    4    525  13991  10967  2843/2600/382     809/199    19  105   53.84)
(sat.ddfw       1      1   33.4169    110001       539          4            1       12)
(smt.stats    5    647  19360  17473  2912/2637/383     998/230    20  105   54.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  21334  22787  3108/2754/384    1160/253    21  105   54.34)
(sat.ddfw       1      1   28.5545    160000       784          5            1       17)
ramon: poll                 wall=2.002s usage=1.933s mem=57200KiB load=1.00 rootload=1.01
(smt.stats    7    859  23284  31313  3400/2982/386    1389/272    22  106   54.81)
(smt.stats    8    981  26814  38943  3423/3117/391    1774/345    25  114   55.10)
(sat.ddfw       1      1   24.8864    220001      1078          6            1       23)
(smt.stats    9   1115  35634  46757  3485/3154/392    2100/347    25  114   55.39)
(smt.stats   10   1216  42280  54111  3524/3205/393    2337/383    27  117   55.61)
ramon: poll                 wall=3.000s usage=2.931s mem=57876KiB load=1.00 rootload=1.00
(smt.stats   11   1327  48893  64600  3538/3209/393    2556/383    27  117   55.61)
(sat.ddfw       1      1   22.0195    290001      1421          7            1       30)
(smt.stats   12   1449  55319  72778  3590/3223/393    2887/385    27  117   55.85)
(smt.stats   13   1583  62844  80633  3636/3319/397    3238/459    28  123   56.02)
(sat.ddfw       1      1   20.8768    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=4.186s mem=58564KiB load=1.26 rootload=1.25
(smt.stats   14   1730  72637  96206  3679/3362/400    3659/498    29  127   56.02)
(smt.stats   15   1831  78558 105108  3717/3377/400    3979/500    29  127   56.16)
(smt.stats   16   1942  83613 115183  3754/3437/400    4468/500    29  127   56.26)
(sat.ddfw       1      1   19.8194    460001      2254          9            1       47)
(smt.stats   17   2064  90576 126437  3759/3440/400    4682/500    29  127   56.26)
ramon: poll                 wall=5.006s usage=5.304s mem=58608KiB load=1.11 rootload=1.10
(smt.stats   18   2198  96389 137061  3854/3514/402    5197/691    30  128   56.49)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   19   2345 104704 158847  3931/3553/402    5553/697    30  128   56.68)
(sat.ddfw       1      1   17.7399    560001      2745         10            1       57)
(smt.stats   20   2506 112137 182918  3992/3663/404    6190/824    32  134   56.68)
ramon: poll                 wall=6.000s usage=6.295s mem=59272KiB load=1.00 rootload=1.01
(smt.stats   21   2607 115020 193364  4050/3703/404    6530/825    32  134   57.11)
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 1 := 9&17592186044416
(smt.stats   22   2718 123311 211880  4243/3857/404    7025/844    33  139   57.31)
(smt.stats   23   2840 131975 239475  4250/3875/409    7592/899    34  140   57.45)
(smt.stats   24   2974 137382 256866  4300/3921/419    8286/955    35  142   57.67)
(sat.ddfw       1      1    16.049    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=7.294s mem=60036KiB load=1.00 rootload=1.00
(smt.stats   25   3122 145301 273810  4407/3924/421    8741/1085    36  180   58.09)
(smt.stats   26   3283 152134 289250  4619/4044/421    9281/1088    36  180   58.18)
ramon: poll                 wall=8.002s usage=8.297s mem=60396KiB load=1.00 rootload=1.00
(smt.stats   27   3460 159167 308663  4730/4255/421    9936/1138    37  190   58.32)
(sat.ddfw       1      1   14.6861    790001      3872         12            1       80)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   28   3561 161653 318601  4754/4375/422   10305/1138    37  190   58.41)
(smt.stats   29   3672 165926 334591  4761/4382/423   10674/1210    38  199   58.51)
(smt.stats   30   3794 174709 359289  4764/4385/423   11168/1210    38  199   58.60)
ramon: poll                 wall=9.000s usage=9.533s mem=61092KiB load=1.24 rootload=1.23
(smt.stats   31   3928 181604 388018  4775/4396/423   11783/1299    39  205   58.60)
(sat.ddfw       1      1   14.1504    920001      4509         13            1       93)
(smt.stats   32   4075 184195 400538  4791/4412/429   12432/1362    40  209   58.70)
(smt.stats   33   4236 191640 425876  4854/4422/429   12991/1366    40  209   58.80)
ramon: poll                 wall=10.006s usage=10.591s mem=61484KiB load=1.05 rootload=1.05
(smt.stats   34   4413 197421 457099  4938/4558/431   13663/1530    42  241   58.90)
(sat.ddfw       1      1   13.0695   1060001      5196         14            1      108)
(smt.stats   35   4607 203803 483155  4967/4580/432   14902/1530    42  241   59.12)
ramon: poll                 wall=11.000s usage=11.580s mem=61496KiB load=1.00 rootload=1.00
(smt.stats   36   4708 209021 502304  5015/4630/436   15398/1655    43  267   59.65)
(smt.stats   37   4819 214077 517440  5102/4635/436   16006/1662    43  267   59.65)
ramon: poll                 wall=12.000s usage=12.579s mem=62016KiB load=1.00 rootload=1.00
(smt.stats   38   4941 217761 537549  5171/4791/437   16935/1702    44  288   59.75)
(sat.ddfw       1      1   12.1526   1210001      5931         15            1      123)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 222219 553151  5181/4798/437   17468/1702    44  288   59.96)
ramon: poll                 wall=13.000s usage=13.689s mem=62272KiB load=1.11 rootload=1.11
(smt.stats   40   5222 228143 575865  5277/4803/437   18010/1815    45  290   60.06)
(smt.stats   41   5383 232959 597580  5345/4928/437   18687/1817    45  290   60.15)
ramon: poll                 wall=14.000s usage=14.689s mem=62556KiB load=1.00 rootload=1.00
(smt.stats   42   5560 239240 622037  5395/5015/439   19144/1866    46  305   60.25)
(sat.ddfw       1      1   11.3669   1370001      6715         16            1      139)
(smt.stats   43   5754 246541 651635  5437/5023/441   19750/1869    46  305   60.34)
ramon: poll                 wall=15.000s usage=15.689s mem=62944KiB load=1.00 rootload=1.00
(smt.stats   44   5967 254021 689593  5492/5107/442   20579/1906    47  320   60.44)
(smt.stats   45   6068 258166 713703  5499/5114/442   20979/1906    47  320   60.58)
(sat.ddfw       1      1   10.7418   1540001      7549         17            1      156)
ramon: poll                 wall=16.002s usage=16.749s mem=63092KiB load=1.06 rootload=1.06
(smt.stats   46   6179 268409 768569  5502/5116/442   21426/1948    48  337   60.58)
(smt.stats   47   6301 273004 779733  5573/5120/442   21941/1951    48  337   60.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6435 277673 802858  5648/5196/442   22694/1952    48  337   60.70)
ramon: poll                 wall=17.000s usage=17.816s mem=63692KiB load=1.07 rootload=1.06
(smt.stats   49   6582 283890 828115  5659/5274/442   23295/1952    48  337   60.80)
(sat.ddfw       1      1   10.3549   1720001      8431         18            1      174)
(smt.stats   50   6743 289435 847240  5774/5384/443   23910/2166    49  345   60.90)
ramon: poll                 wall=18.000s usage=18.921s mem=63820KiB load=1.11 rootload=1.11
(smt.stats   51   6920 297962 889233  5781/5396/444   24453/2166    49  345   60.99)
ramon: poll                 wall=19.000s usage=19.925s mem=63880KiB load=1.00 rootload=1.00
(smt.stats   52   7114 302612 921376  5787/5402/444   25416/2166    49  345   61.09)
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 6 := 1037&35184372088320
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 6 := 1037&35184372088320
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 6 := 1031&35184372088320
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 6 := 1031&35184372088320
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 4 := 28132035788807&35184372088320
band: (band[45] (lshr[64] (bv2int %0) (mod #633 64)) (if (= #643 63) 324518553658408280039082311024640 (if #645 162259276829204140019541155512320 #769))) 4 := 28132035788807&35184372088320
(smt.stats   53   7327 308759 955506  5857/5404/444   25932/2263    50  350   61.18)
(sat.ddfw       1      1   9.76814   1910001      9362         19            1      193)
ramon: poll                 wall=20.000s usage=20.925s mem=63964KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:31:34 2024
ramon: root.execname        z3
ramon: root.utime           20.990s
ramon: root.stime           0.000s
ramon: group.total          20.999s
ramon: group.utime          20.991s
ramon: group.stime          0.008s
ramon: group.mempeak        64224KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.05
