ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:56:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28382 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EfLCr2PQAW7Q.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4134810
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2211    548  1225/984/100     106/13     6   14   19.06)
(smt.stats    1    202   3793   1640  1960/1788/101     212/32     7   16   19.16)
(smt.stats    2    313  10369   5226  1983/1805/101     324/76     7   16   19.36)
(smt.stats    3    414  12859   6514  2043/1862/104     432/94    10   21   19.36)
(smt.stats    4    525  13662   7888  2377/1916/107     521/121    12   23   19.46)
(smt.stats    5    647  15572   9919  2458/2191/107     659/123    12   23   19.56)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 1&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 2 := 2&54
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 274877906946 := 0 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 1&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 2 := 2&54
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 274877906946 := 0 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 54 := 2155905280&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 52 := 2155905280&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 48 := 2155905280&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 32 := 2155905280&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 2155905280&54
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 274877906943 := 2155905153 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 54 := 2155905279&54
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 551911719167 := 2155905153 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 54 := 6467715584&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 270566096640&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1077952768&54
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 1077952578 := 1077952577 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1077952768&54
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 1077952578 := 1077952577 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 270566096640&54
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (or #573 #574) 0 (if #575 1 #674))) 1 := 270566096640&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 270566096640&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 4 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 8 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 16 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 32 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1077952768&54
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 1077952769 := 1077952577 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 4 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 4 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1077952768&54
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 274877906943 := 1077952577 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1077952768&54
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (or #573 #574) 0 (if #575 1 #674))) 1 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1077952768&54
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 1077952578 := 1077952577 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 4 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1077952768&54
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 1077952769 := 1077952577 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 1 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 16 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 32 := 1077952768&54
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 32 := 1077952768&54
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  18854  11887  2530/2315/163     761/130    14   35   19.84)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 8 := 1077952512&7182724
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 8 := 256&7182724
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 8 := 512&7182724
(smt.stats    7    859  21404  13479  2554/2335/172     887/148    16   39   20.23)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 8 := 11520&7182724
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 4 := 12544&7182724
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 4 := 12800&7182724
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 4 := 12800&7182724
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1073751488&3507
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1073751488&3507
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1073751552&3507
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1073751488&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1073751488 := 1073741825 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 1073751488&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1073751488 := 1073741825 << 3
(smt.stats    8    981  24051  16523  2756/2538/195    1018/167    18   53   20.13)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 2155914816&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 826789635648 := 2155905153 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 2155915040&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 551911728928 := 2155905191 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 2155915024&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 551911728912 := 2155905191 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620768&0
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 2155905191 := 2155905192 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620768&0
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 2155905191 := 2155905192 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620768&0
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 2155905191 := 2155905192 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620752&0
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 1 := 2155905188 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620752&0
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 2155905187 := 2155905188 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 91625981872&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 91625981872 := 11811160064 << 1
(smt.stats    9   1116  25507  18256  2824/2577/206    1201/173    19   55   20.32)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620624&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 8623620624 := 2155905153 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620614&6
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620614&6
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620614&6
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 8623620614&6
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 2 := 8623620614&6
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 6 := 8623620614&6
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 8623620614 := 2155905153 << 5
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 6 := 8623620613&6
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 6 := 8623620613&6
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 6 := 8623620613&6
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 6 := 8623620615&6
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 8623620615 := 2155905153 << 5
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 6 := 8623620615&6
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 8623620615 := 2155905153 << 5
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 6 := 68988966023&13
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 7 := 68988965863&13
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 7 := 68988965895&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 7 := 68988965895&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 19 := 68988965895&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 19 := 68988965911&29420440835
(smt.stats   10   1217  28464  22200  2980/2662/217    1337/188    19   55   20.52)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 67 := 68988965863&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 67 := 68988965863&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 68988965863&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420440871&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420440855&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420442183&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441335&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441095&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441095&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441095&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441095&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441255&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441095&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441111&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441111&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441607&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441607&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441607&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441607&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420441607&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 17247242247&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 17247242247&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 17247244295&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 29420433927&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 17247242247&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 17247242247&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 17247242247&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 17247244295&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 17247244295&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 17247244295&29420440835
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 3 := 103079215111&29420440835
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 103079215111 := 2155905190 << 37
(smt.stats   11   1328  31649  30333  3234/2963/332    1625/291    22   83   21.00)
(smt.stats   12   1450  34912  36418  3441/3192/358    1952/457    25   98   21.31)
(smt.stats   13   1584  38706  46965  3447/3198/358    2180/457    25   98   21.41)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 137438994944&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 962072715776 := 2155905191 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 137438994944&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 962072715776 := 2155905191 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 137438994944&1
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 137438994943 := 154618827840 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 137438994944&1
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 137438994943 := 154618827840 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 137438994944&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (or #573 #574) 0 (if #575 1 #674))) 1 := 137438994944&1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 137438986752&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (or #573 #574) 0 (if #575 1 #674))) 1 := 137438986752&1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 137438986752&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (or #573 #574) 0 (if #575 1 #674))) 1 := 137438986752&1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 137438986752&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (or #573 #574) 0 (if #575 1 #674))) 1 := 137438986752&1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 137438986752&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (or #573 #574) 0 (if #575 1 #674))) 1 := 137438986752&1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   14   1731  43299  53897  3635/3198/358    2425/513    26  107   21.60)
ramon: poll                 wall=1.000s usage=0.955s mem=22888KiB load=0.95 rootload=0.94
(smt.stats   15   1832  44852  58675  3661/3409/376    2574/530    27  110   21.60)
(smt.stats   16   1943  46794  64058  3679/3426/376    2718/559    28  114   21.60)
(smt.stats   17   2065  49890  70413  3689/3437/382    2958/589    29  142   21.69)
(smt.stats   18   2199  53016  75678  3721/3461/384    3123/654    30  149   21.69)
(smt.stats   19   2350  58142  94515  3764/3503/386    3503/748    32  163   22.04)
(smt.stats   20   2511  61822 103642  4028/3692/402    3922/766    33  171   22.45)
(smt.stats   21   2612  67641 118515  4102/3783/402    4069/766    33  171   22.55)
(smt.stats   22   2723  71199 129257  4100/3786/402    4292/813    34  185   22.64)
(smt.stats   23   2845  74026 141930  4103/3789/404    4612/850    35  188   22.74)
(smt.stats   24   2979  80041 157761  4117/3803/408    4859/946    37  195   22.74)
ramon: poll                 wall=2.000s usage=1.955s mem=24104KiB load=1.00 rootload=1.00
(smt.stats   25   3126  85933 168353  4165/3805/411    5167/954    37  195   22.83)
(smt.stats   26   3287  90864 186936  4226/3890/411    5450/988    38  221   22.83)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3464  98229 214240  4238/3921/415    5983/1099    39  232   22.95)
(smt.stats   28   3565 101681 222198  4271/3932/415    6140/1151    40  248   22.95)
(smt.stats   29   3676 106066 229871  4286/3966/416    6267/1151    40  248   22.95)
(smt.stats   30   3798 108272 239525  4303/3979/417    6411/1169    41  258   22.95)
(smt.stats   31   3932 109845 251518  4317/4003/417    6625/1169    41  258   23.04)
(smt.stats   32   4079 116227 275249  4321/4007/419    7155/1193    42  261   23.25)
(smt.stats   33   4240 118958 291882  4325/4011/420    7340/1292    43  283   23.25)
(smt.stats   34   4417 126976 320519  4338/4022/420    7627/1313    44  293   23.25)
ramon: poll                 wall=3.000s usage=2.954s mem=24584KiB load=1.00 rootload=1.00
(smt.stats   35   4611 132398 332955  4423/4030/420    7971/1324    44  293   23.34)
(smt.stats   36   4712 136376 340871  4540/4145/420    8167/1328    44  293   23.34)
(smt.stats   37   4823 141824 357762  4654/4278/420    8485/1331    44  293   23.54)
(smt.stats   38   4945 146004 368824  4734/4360/420    8755/1333    44  293   23.64)
(smt.delete-inactive-clauses  :num-deleted-clauses 166)
ramon: poll                 wall=4.000s usage=3.953s mem=25048KiB load=1.00 rootload=1.00
(smt.stats   39   5079 150892 379686  4749/4429/420    8785/1333    44  293   23.64)
(smt.stats   40   5226 157883 410030  4765/4439/420    9046/1333    44  293   23.73)
(smt.stats   41   5387 164642 437611  4778/4454/421    9224/1504    45  295   23.73)
(smt.stats   42   5564 168326 450780  4813/4471/430    9672/1512    46  297   23.73)
(smt.stats   43   5758 175682 490095  4880/4516/430    9923/1514    46  297   23.83)
(smt.stats   44   5971 182021 524126  4975/4576/430   10336/1763    47  325   23.83)
(smt.stats   45   6072 183702 529719  4992/4661/430   10532/1763    47  325   23.92)
ramon: poll                 wall=5.000s usage=4.953s mem=25192KiB load=1.00 rootload=1.00
(smt.stats   46   6183 188765 547511  5118/4679/430   10797/1768    47  325   23.92)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6305 195641 573585  5136/4815/430   10932/1768    47  325   24.16)
(smt.stats   48   6439 199458 591915  5161/4827/430   11136/1770    47  325   24.16)
(smt.stats   49   6586 203792 612327  5184/4864/431   11564/1900    48  327   24.25)
(smt.stats   50   6747 208291 634474  5216/4874/431   11989/1901    48  327   24.25)
(smt.stats   51   6924 212434 661123  5234/4908/431   12312/1902    48  327   24.44)
ramon: poll                 wall=6.000s usage=5.953s mem=25752KiB load=1.00 rootload=1.00
(smt.stats   52   7118 220507 687355  5241/4923/431   12667/1902    48  327   24.44)
(smt.stats   53   7331 227408 725867  5287/4954/432   13145/2111    49  347   24.44)
(smt.stats   54   7565 234632 752045  5308/4980/433   13571/2158    50  351   24.54)
(smt.stats   55   7666 238105 769964  5322/5002/434   13909/2158    50  351   24.64)
(smt.stats   56   7777 239790 783158  5335/5009/434   14147/2307    51  353   24.64)
(smt.stats   57   7899 243182 807692  5339/5019/434   14346/2307    51  353   24.64)
(smt.stats   58   8033 247230 831131  5377/5028/434   14934/2310    51  353   24.73)
ramon: poll                 wall=7.004s usage=6.955s mem=26052KiB load=1.00 rootload=1.00
(smt.stats   59   8180 249886 847035  5646/5084/435   15295/2475    52  357   24.92)
(smt.stats   60   8341 253681 870724  5974/5571/436   15917/2476    52  357   24.92)
(smt.stats   61   8518 256022 883930  6196/5714/436   16282/2500    53  358   25.02)
ramon: poll                 wall=8.000s usage=7.951s mem=26520KiB load=1.00 rootload=1.00
(smt.stats   62   8712 261441 921377  6222/5898/436   17616/2500    53  358   25.11)
(smt.stats   63   8925 269505 979252  6245/5925/438   18499/3074    54  382   25.33)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 171798692354&3507
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 171798692360&3507
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 171798692360 := 103079215296 << 14
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 171798692360&3507
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 446676599304 := 103079215105 << 14
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 171798692360&3507
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 446676599304 := 103079215105 << 14
(smt.stats   64   9159 275190 995758  6416/5931/438   18940/3080    54  382   25.42)
ramon: poll                 wall=9.000s usage=8.950s mem=27000KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9416 279975 1027749  6694/6251/444   19588/3086    54  382   25.52)
(smt.stats   66   9517 283251 1042404  6705/6383/445   19786/3314    55  406   25.61)
(smt.stats   67   9628 288614 1072530  6713/6391/445   20266/3314    55  406   25.61)
(smt.stats   68   9750 294570 1106385  6749/6397/445   20624/3429    56  410   25.71)
(smt.stats   69   9884 297264 1113975  6836/6447/445   20805/3430    56  410   25.80)
ramon: poll                 wall=10.000s usage=9.950s mem=27224KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 146)
(smt.stats   70  10031 299467 1138423  6848/6526/445   20950/3430    56  410   25.80)
(smt.stats   71  10192 304757 1150090  6883/6528/445   21127/3430    56  410   25.90)
(smt.stats   72  10369 311295 1208098  6905/6583/445   21661/3430    56  410   25.90)
(smt.stats   73  10563 316291 1239583  6963/6591/445   22683/3433    56  410   26.39)
(smt.stats   74  10776 323522 1288425  6977/6655/445   23244/3433    56  410   26.39)
ramon: poll                 wall=11.000s usage=10.950s mem=27856KiB load=1.00 rootload=0.99
(smt.stats   75  11010 329513 1331988  7043/6721/446   23962/3882    57  410   26.58)
(smt.stats   76  11267 334900 1362482  7147/6735/446   24531/3885    57  410   26.58)
(smt.stats   77  11549 339280 1403594  7364/6870/446   25127/3888    57  410   26.86)
ramon: poll                 wall=12.000s usage=11.950s mem=28384KiB load=1.00 rootload=1.00
(smt.stats   78  11650 343300 1433552  7428/7045/450   25409/4046    58  414   26.86)
(smt.stats   79  11761 344669 1451781  7452/7114/450   25610/4046    58  414   26.86)
(smt.stats   80  11883 349627 1484267  7541/7116/450   25828/4049    58  414   27.06)
(smt.stats   81  12017 353195 1498609  7549/7211/451   26111/4152    59  419   27.06)
(smt.stats   82  12164 357710 1535039  7553/7215/451   26674/4152    59  419   27.06)
(smt.stats   83  12325 361666 1573201  7561/7223/451   26959/4152    59  419   27.16)
ramon: poll                 wall=13.000s usage=12.949s mem=28744KiB load=1.00 rootload=1.00
(smt.stats   84  12502 366344 1617506  7567/7229/451   28012/4152    59  419   27.33)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   85  12696 374907 1646588  7592/7229/451   28419/4154    59  419   27.42)
(smt.stats   86  12909 381995 1690201  7747/7285/451   29000/4155    59  419   27.52)
(smt.stats   87  13143 386423 1721060  7763/7421/451   30035/4155    59  419   27.52)
ramon: poll                 wall=14.004s usage=13.951s mem=29068KiB load=1.00 rootload=1.00
(smt.stats   88  13400 393241 1779512  7781/7441/451   30713/4155    59  419   27.61)
(smt.stats   89  13682 397323 1821942  7791/7447/451   31516/4155    59  419   27.71)
(smt.stats   90  13992 404578 1900290  7805/7457/451   32784/4155    59  419   27.80)
(smt.stats   91  14093 406480 1922111  7816/7468/451   32942/4155    59  419   27.80)
(smt.stats   92  14204 409685 1961002  7821/7477/451   33314/4155    59  419   27.91)
ramon: poll                 wall=15.000s usage=14.947s mem=29360KiB load=1.00 rootload=1.00
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 171798691842&0
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 137438953482 := 85899345921 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (or #695 #696 #697) 0 (if #698 1 #842))) 0 := 171798691842&0
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 137438953482 := 85899345921 << 1
(smt.stats   93  14326 412549 1990022  7835/7482/451   33748/4156    59  419   27.91)
(smt.stats   94  14460 414080 1999135  7862/7512/456   33887/5014    60  420   28.01)
(smt.stats   95  14607 416186 2020915  7902/7536/456   34094/5017    60  420   28.01)
(smt.stats   96  14768 418341 2052494  7965/7605/456   34257/5019    60  420   28.01)
(smt.stats   97  14945 421020 2076375  8030/7632/456   34634/5020    60  420   28.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 118)
ramon: poll                 wall=16.000s usage=15.947s mem=29772KiB load=1.00 rootload=1.00
(smt.stats   98  15139 427928 2097717  8151/7702/456   35084/5026    60  420   28.20)
(smt.stats   99  15352 435241 2141598  8470/7886/456   35516/5136    61  420   28.20)
ramon: poll                 wall=17.000s usage=16.945s mem=29796KiB load=1.00 rootload=1.00
(smt.stats  100  15586 440656 2192600  8540/8190/457   36272/5136    61  420   28.29)
(smt.stats  101  15843 446256 2223873  8547/8205/457   37111/5308    62  420   28.29)
(smt.stats  102  16125 452823 2263321  8581/8217/458   38292/5308    62  420   28.49)
ramon: poll                 wall=18.000s usage=17.945s mem=30248KiB load=1.00 rootload=1.00
(smt.stats  103  16435 459820 2311242  8662/8243/458   38923/5309    62  420   28.59)
(smt.stats  104  16775 470787 2421674  8707/8334/458   40442/5582    63  424   28.78)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  105  16876 473364 2449076  8712/8370/458   40887/5582    63  424   28.88)
(smt.stats  106  16987 475495 2470461  8715/8373/458   41437/5582    63  424   29.04)
(smt.stats  107  17109 478506 2489362  8752/8374/458   41755/5584    63  424   29.24)
ramon: poll                 wall=19.000s usage=18.945s mem=30672KiB load=1.00 rootload=0.99
(smt.stats  108  17243 480254 2517752  8755/8413/458   42026/5584    63  424   29.24)
(smt.stats  109  17390 482803 2550880  8757/8415/458   42361/5584    63  424   29.24)
(smt.stats  110  17551 485439 2591910  8759/8417/460   42782/5951    64  426   29.33)
(smt.stats  111  17728 489915 2647523  8764/8422/460   43267/5951    64  426   29.33)
(smt.stats  112  17922 492080 2683020  8768/8426/460   43530/5951    64  426   29.44)
(smt.stats  113  18135 496883 2746971  8774/8432/460   43983/6041    65  428   29.44)
ramon: poll                 wall=20.004s usage=19.947s mem=30944KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:56:33 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.993s
ramon: group.utime          19.973s
ramon: group.stime          0.020s
ramon: group.mempeak        31456KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.050s
ramon: loadavg              1.00
