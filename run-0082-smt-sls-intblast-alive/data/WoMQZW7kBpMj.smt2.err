ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:39:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28051 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1377
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/WoMQZW7kBpMj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             835971
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 46 := 96 << 2
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 1 := 96 << 2
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 1 := 96 << 2
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 1 := 96 << 2
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 1 := 96 << 2
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&95
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 95 := 96 << 2
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&95
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 95 := 96 << 2
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&384
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 1 := 48 << 3
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&384
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 1 := 48 << 3
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&384
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 1 := 48 << 3
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&384
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 1 := 48 << 3
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&384
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 47 := 48 << 3
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   83.3333     10000        49          0            1        2)
(sat.ddfw       1      1   44.6473     20001        98          1            1        3)
(smt.stats    0    101   1143    367  1208/1070/116      85/15     8   32   51.94)
(sat.ddfw       1      1   46.2963     40001       196          2            1        5)
(smt.stats    1    202   2173   1751  1371/1233/117     191/20    10   34   52.04)
(smt.stats    2    313   3861   4671  1409/1238/117     309/27    10   34   52.13)
(sat.ddfw       1      1        40     70001       343          3            1        8)
(smt.stats    3    414   4802   6252  1610/1456/121     423/36    12   44   52.13)
(smt.stats    4    525   5737   7667  1630/1467/126     523/60    13   53   52.23)
ramon: poll                 wall=1.000s usage=0.976s mem=54260KiB load=0.98 rootload=0.96
(smt.stats    5    647   7648   9768  1655/1490/126     643/64    14   54   52.35)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   9776  12528  1661/1506/126     748/64    14   54   52.56)
(smt.stats    7    859  11684  15472  1661/1506/126     861/64    14   54   52.56)
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&2251799813685116
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 4503599627370364 := 4503599627370364 << 6
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&2251799813685116
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 4503599627370364 := 4503599627370364 << 6
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&2251799813685117
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 4503599627370365 := 4503599627370364 << 6
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&2251799813685247
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 4503599627370495 := 4503599627370364 << 6
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&2251799813676800
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 45 := 2251799813685182 << 7
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&2251799813676800
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 281474976710706 := 2251799813685182 << 7
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&2251799813676800
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 281474976710706 := 2251799813685182 << 7
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&2251799813676800
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 281474976710706 := 2251799813685182 << 7
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&2251799813676800
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 281474976710706 := 2251799813685182 << 7
(smt.stats    8    981  13476  17657  1704/1510/126     983/66    14   54   52.56)
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 1 := 3940649673949184 << 43
(sat.ddfw       1      1   34.2759    110001       539          4            1       12)
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&115
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 247697979505377395 := 3940649673949184 << 43
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 249949779319062529 := 3940649673949184 << 43
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&116
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 116 := 3940649673949186 << 42
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 17 := 3940649673949188 << 41
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&118
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 118 := 3940649673949190 << 40
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&118
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 118 := 3940649673949190 << 40
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&118
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 118 := 3940649673949190 << 40
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 33 := 3940649673949192 << 39
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 120 := 3940649673949194 << 38
(smt.stats    9   1116  14930  19282  1767/1558/137    1122/68    15   56   52.77)
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&121
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 121 := 3940649673949196 << 37
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&121
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 121 := 3940649673949196 << 37
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 57 := 3940649673949198 << 36
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 57 := 3940649673949198 << 36
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 57 := 3940649673949198 << 36
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&123
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 123 := 3940649673949200 << 35
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&73
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 73 := 3940649673949202 << 34
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&125
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 125 := 3940649673949204 << 33
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&125
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 125 := 3940649673949204 << 33
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&89
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 89 := 3940649673949206 << 32
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&127
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 127 := 3940649673949208 << 31
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&105
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 105 := 3940649673949210 << 30
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&130
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 130 := 3940649673949214 << 28
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&129
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 129 := 3940649673949216 << 27
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&129
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 129 := 3940649673949212 << 29
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&129
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 129 := 3940649673949212 << 29
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&129
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 129 := 3940649673949212 << 29
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&129
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 129 := 3940649673949212 << 29
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&401
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 401 := 3940649673949212 << 29
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 113 := 3940649673949212 << 29
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&1122
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 1122 := 3940649673949208 << 31
(smt.stats   10   1217  17085  21055  1921/1671/167    1240/70    16   62   52.96)
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&1122
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 1122 := 3940649673949208 << 31
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&51539607552
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 51539607551 := 1970324836974604 << 32
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&51539607552
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 51539607551 := 1970324836974604 << 32
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&51539607552
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 51539607551 := 1970324836974604 << 32
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&51539607552
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 51539607551 := 1970324836974604 << 32
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&51539607552
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 0 := 1970324836974604 << 32
(smt.stats   11   1328  18545  24439  2062/1881/228    1346/74    18   77   53.09)
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&15032385536
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 111 := 1970324836974606 << 30
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&15032385536
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 111 := 1970324836974606 << 30
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&15032385536
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 111 := 1970324836974606 << 30
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&15032385536
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #103))) 0 := 1970324836974606 << 30
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&129
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 129 := 3940649673949186 << 42
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 15 := 3940649673949188 << 41
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 1 := 3940649673949188 << 41
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1450  20364  28318  2118/1890/228    1473/76    18   77   53.44)
(smt.stats   13   1584  22554  31347  2141/1954/243    1592/87    20   95   53.55)
(sat.ddfw       1      1   29.5502    160000       784          5            1       17)
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 1 := 1&204
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 1&204
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 204 := 204 << 50
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 1&204
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 204 := 204 << 50
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 1 := 1&204
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 1&204
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 204 := 204 << 50
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 1&203
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 1&203
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 1 := 1&203
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 203 := 204 << 50
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 1 := 1&2
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 2 := 204 << 50
(smt.stats   14   1731  25771  36401  2194/2004/267    1757/92    21  104   53.64)
band: (band[51] (if (or #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 #457 #460 ...) 0 (if #412 1 #871)) (shl[64] (* 2 #101) (mod #1081 64))) 0 := 1&204
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #1073 #1077) 64)) 270215977642229964 := 102 << 50
ramon: poll                 wall=2.000s usage=2.009s mem=55964KiB load=1.03 rootload=1.03
(sat.ddfw       1      1   25.8848    220001      1078          6            1       23)
(smt.stats   15   1832  27333  38218  2275/2025/286    1809/147    22  158   53.83)
ramon: poll                 wall=3.000s usage=2.938s mem=56156KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   22.5661    290001      1421          7            1       30)
(sat.ddfw       1      1    20.377    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.935s mem=56532KiB load=1.00 rootload=1.00
(smt.stats   16   1943  30463  39814  2598/2309/286    1927/150    22  158   54.21)
(sat.ddfw       1      1   18.5147    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.934s mem=56932KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.9635    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.931s mem=56820KiB load=1.00 rootload=0.99
(smt.stats   17   2065  34082  43377  2751/2425/289    2062/172    23  159   54.50)
(smt.stats   18   2199  43280  53690  2820/2586/290    2206/192    25  166   54.60)
(smt.stats   19   2346  50857  62009  2860/2594/290    2409/192    25  166   54.70)
ramon: poll                 wall=7.000s usage=6.927s mem=57128KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    15.645    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.897s mem=57208KiB load=0.97 rootload=0.97
(smt.stats   20   2507  55136  66496  2995/2763/293    2596/219    26  173   54.79)
(sat.ddfw       1      1   14.4683    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.880s mem=57352KiB load=0.98 rootload=0.98
(smt.stats   21   2608  59731  69822  3045/2769/293    2720/224    26  173   54.89)
(smt.stats   22   2719  62770  72596  3063/2828/293    2828/248    27  174   55.31)
(sat.ddfw       1      1    13.241    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.775s mem=57784KiB load=0.89 rootload=0.89
ramon: poll                 wall=11.000s usage=10.759s mem=58004KiB load=0.98 rootload=0.99
(sat.ddfw       1      1   12.3229   1060001      5196         14            1      108)
(smt.stats   23   2841  67912  75145  3119/2833/293    2971/266    27  174   55.31)
ramon: poll                 wall=12.000s usage=11.722s mem=57764KiB load=0.96 rootload=0.96
(sat.ddfw       1      1    11.727   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.835s mem=57768KiB load=1.11 rootload=1.11
ramon: poll                 wall=14.000s usage=13.852s mem=57824KiB load=1.02 rootload=1.02
(smt.stats   24   2975  70325  76323  3337/2957/293    3116/274    27  174   55.50)
(sat.ddfw       1      1    11.156   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=14.852s mem=57840KiB load=1.00 rootload=1.00
(smt.stats   25   3122  75625  81448  3517/3197/293    3288/279    27  174   55.60)
ramon: poll                 wall=16.000s usage=15.851s mem=57872KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5439   1540001      7549         17            1      156)
(smt.stats   26   3283  84763  87262  3585/3331/294    3440/302    28  175   55.60)
ramon: poll                 wall=17.000s usage=17.099s mem=57956KiB load=1.25 rootload=1.25
(smt.stats   27   3460  92406  96121  3709/3369/295    3627/317    29  176   55.84)
(smt.stats   28   3561  96679 102272  3749/3506/296    3754/321    30  181   55.84)
(sat.ddfw       1      1   10.0256   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=18.100s mem=58108KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=19.103s mem=58236KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.52906   1910001      9362         19            1      193)
ramon: poll                 wall=20.000s usage=20.244s mem=58240KiB load=1.14 rootload=1.14
ramon: end                  Fri Nov  1 22:39:23 2024
ramon: root.execname        z3
ramon: root.utime           20.230s
ramon: root.stime           0.010s
ramon: group.total          20.253s
ramon: group.utime          20.237s
ramon: group.stime          0.016s
ramon: group.mempeak        58496KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.012s
ramon: loadavg              1.01
