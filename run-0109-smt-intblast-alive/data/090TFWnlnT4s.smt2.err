ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:16:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         43003 MiB
ramon: sys.mem.avail        61717 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/090TFWnlnT4s.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2748106
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    102   2971    358  1131/979/98     120/24     3   17   18.97)
(smt.stats    1    203   3227    615  1770/1560/98     227/27     3   17   19.16)
(smt.stats    2    314   5361   2517  1962/1803/99     345/38     4   18   19.16)
(smt.stats    3    415   7386   3651  2005/1843/104     468/50     5   19   19.25)
(smt.stats    4    526   8970   5954  2251/2016/106     573/75     6   21   19.35)
(smt.stats    5    648  11107   8879  2539/2340/110     702/109     8   25   19.46)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  12772  10989  2590/2375/112     799/110    10   28   19.46)
(smt.stats    7    860  14087  12172  2604/2400/113     906/111    11   30   19.55)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 16384 := 34359738367&16384
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 68719476735 := 34359738366 << 15
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 3 := 33285963776&16384
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 16384 := 33285963776&16384
(smt.stats    8    982  15740  13962  2643/2439/131    1032/114    13   37   19.68)
(smt.stats    9   1116  17186  16477  2686/2455/133    1174/115    13   37   19.68)
(smt.stats   10   1217  19185  18843  2700/2489/134    1258/126    14   60   19.68)
(smt.stats   11   1328  22774  23083  2722/2513/134    1367/132    15   63   19.77)
(smt.stats   12   1450  25848  26528  2733/2516/136    1478/133    17   76   19.87)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 34359738368 := 34359738366 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 0&1
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869185 := 17179869184 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 34359738368 := 17179869184 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 0&1
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869185 := 17179869184 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1 := 1048576&1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 1048576&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 34360786944 := 1048608 << 1
(smt.stats   13   1584  28114  29080  2758/2549/154    1600/152    19   99   19.87)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 0&1
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869184 := 17179869184 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1 := 34359738366&1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 34359738366&1
band: (band[35] (shl[35] (bv2int %0) (mod #104 35)) (if (= #561 34) 1 (if #563 2 #629))) 1 := 34359738366&1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 34359738366&1
band: (band[35] (shl[35] (bv2int %0) (mod #104 35)) (if (= #561 34) 1 (if #563 2 #629))) 1 := 34359738366&1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 2&1
band: (band[35] (shl[35] (bv2int %0) (mod #104 35)) (if (= #561 34) 1 (if #563 2 #629))) 1 := 2&1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 2&1
band: (band[35] (shl[35] (bv2int %0) (mod #104 35)) (if (= #561 34) 1 (if #563 2 #629))) 1 := 2&1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1 := 34359738366&1
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1 := 2&1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   14   1731  31105  31672  2812/2588/171    1766/155    20  103   20.06)
(smt.stats   15   1832  32335  33683  2897/2631/171    1886/159    20  103   20.16)
(smt.stats   16   1943  34875  38083  2911/2692/176    2008/182    22  130   20.16)
(smt.stats   17   2065  36394  40526  2979/2754/178    2142/183    22  130   20.26)
(smt.stats   18   2199  38915  44259  2998/2768/178    2296/191    23  134   20.26)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 8589934594&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 249108103170 := 8589934595 << 1
(smt.stats   19   2346  41947  49516  3009/2786/178    2454/191    23  134   20.26)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 536870914&2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 536870916&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 34896609284 := 17448304642 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 536870916&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 34896609284 := 17448304642 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 536870916&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 34896609284 := 17448304643 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 536870916&2
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 34896609284 := 34359738367 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2 := 8589934592&2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 8589934592&2
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869184 := 19327352832 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2 := 8589934592&2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 8589934592&2
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869184 := 19327352832 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 8589934592&2
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869186 := 19327352832 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 8589934592&2
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869186 := 19327352832 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2 := 4&2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 4&2
band: (band[35] (shl[35] (bv2int %0) (mod #104 35)) (if (= #561 34) 1 (if #563 2 #629))) 2 := 4&2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 4&2
band: (band[35] (shl[35] (bv2int %0) (mod #104 35)) (if (= #561 34) 1 (if #563 2 #629))) 2 := 4&2
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 4&2
band: (band[35] (shl[35] (bv2int %0) (mod #104 35)) (if (= #561 34) 1 (if #563 2 #629))) 2 := 4&2
(smt.stats   20   2507  44301  55238  3085/2862/218    2660/232    25  149   20.46)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 17179869188&1048576
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 85899345924 := 25769803776 << 21
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 17179869188&1048576
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 85899345924 := 25769803776 << 21
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 25769803776&1048576
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 25769803774 := 25769816064 << 21
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 25769803776&1048576
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 25769803774 := 25769816064 << 21
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 25767706624&1048576
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 25767706622 := 25769816063 << 21
ramon: poll                 wall=1.000s usage=0.941s mem=21712KiB load=0.94 rootload=0.93
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 25769803776&1048576
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 25767706626 := 25769832448 << 21
(smt.stats   21   2608  45205  56774  3205/2940/230    2772/236    25  149   20.74)
(smt.stats   22   2719  46783  63692  3367/3109/231    2908/252    26  153   20.84)
(smt.stats   23   2841  49731  70880  3407/3141/231    3043/253    26  153   20.84)
(smt.stats   24   2975  51974  75521  3412/3179/235    3217/281    27  157   20.93)
(smt.stats   25   3122  53311  79349  3465/3215/235    3376/281    27  157   20.93)
(smt.stats   26   3283  55786  87093  3471/3224/235    3549/297    28  172   20.93)
(smt.stats   27   3460  58938  93834  3491/3242/235    3761/297    28  172   21.03)
(smt.stats   28   3561  60164 100479  3548/3285/239    3891/332    29  177   21.13)
(smt.stats   29   3672  62136 106403  3552/3296/239    4004/332    29  177   21.13)
(smt.stats   30   3794  65780 114279  3560/3298/239    4163/332    29  177   21.32)
(smt.stats   31   3928  69796 125033  3566/3310/239    4329/332    29  177   21.32)
(smt.stats   32   4075  71324 130959  3611/3336/239    4516/333    29  177   21.32)
(smt.stats   33   4236  74869 141634  3627/3355/240    4693/360    30  179   21.32)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 36 := 8589934599&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 8589934595&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 8589934595&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4 := 8589934595&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4 := 8589934595&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 8589934599&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 8589934599&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 16 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 16 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 16 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 16 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 16 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 16 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 32 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 32 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 32 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 64 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 64 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 64 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 128 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 256 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 128 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 256 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 512 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1024 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2048 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4096 := 8589934603&524288
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8192 := 8589934603&524288
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   34   4413  77911 150401  3884/3607/333    5054/390    31  184   21.70)
ramon: poll                 wall=2.000s usage=1.937s mem=23000KiB load=1.00 rootload=0.99
(smt.stats   35   4607  82073 158871  3918/3618/336    5429/393    31  184   21.80)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 43008 := 8587845765&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 43008 := 8587845765&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 43008 := 8587847681&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 73728 := 8587846145&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 65536 := 8587846145&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 131072 := 8587846145&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 294912 := 8587853825&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 524288 := 8587853825&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1048576 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1048576 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2097152 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 294912 := 8587849729&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 327680 := 8587849729&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 327680 := 8587849729&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 393216 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 294912 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 327680 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 327680 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1048576 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2097152 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1048576 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2097152 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2097152 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1048576 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4194304 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4194304 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4194304 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4194304 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8388608 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 16777216 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 33554432 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 67108864 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 134217728 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 268435456 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 536870912 := 8587853893&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 1073741824 := 8587853893&8589934592
(smt.stats   36   4708  83507 162867  4198/3838/413    5683/463    32  213   22.47)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 536870912 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 268435456 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8388608 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8388608 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 134217728 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 67108864 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 33554432 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2147483648 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2147483648 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4294967296 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4294967296 := 8587853889&8589934592
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8589934592 := 8589934593&8589934592
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 42949672961 := 17179869186 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8589934592 := 8589934593&8589934592
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 42949672961 := 13958643753 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8589934592 := 8589934593&8589934592
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 42949672961 := 13958643753 << 34
(smt.stats   37   4819  86724 176590  4325/3942/517    6098/639    33  255   22.96)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 8589934592 := 8589934593&8589934592
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 42949672961 := 13958643757 << 34
(smt.stats   38   4941  89220 185577  4477/4187/522    6327/641    33  255   23.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 126)
(smt.stats   39   5075  93230 195472  4616/4272/523    6668/686    34  263   23.34)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 150994946 := 8589934592&4294967296
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 150994946 := 8589934592&4294967296
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 150994945 := 8589934592&4294967296
(smt.stats   40   5222  96841 205742  4778/4320/523    6954/689    34  263   23.63)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 8589934592&4294967296
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 42949672960 := 21474836481 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 8589934592&4294967296
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 42949672960 := 21474836481 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 0 := 8589934592&4294967296
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 42949672960 := 21474836481 << 33
(smt.stats   41   5383 102045 223793  5062/4739/525    7456/851    36  276   23.82)
ramon: poll                 wall=3.000s usage=2.936s mem=25284KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   42   5560 107644 246919  5128/4789/533    8823/1029    37  280   24.01)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4 := 2097152&4
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 4 := 2097152&4
(smt.stats   43   5754 115246 267191  5245/4821/533    9509/1039    37  280   24.10)
(smt.stats   44   5967 120859 287808  5539/5225/535   10482/1307    39  287   24.49)
(smt.stats   45   6068 122109 297138  5551/5235/537   11084/1307    39  287   24.58)
(smt.stats   46   6179 127242 311773  5584/5267/537   11825/1307    39  287   24.68)
ramon: poll                 wall=4.000s usage=3.935s mem=26324KiB load=1.00 rootload=1.00
(smt.stats   47   6301 132357 333997  5648/5317/542   12390/1761    40  293   24.87)
(smt.stats   48   6435 137448 348828  5859/5542/544   12803/1843    41  310   24.87)
(smt.stats   49   6582 144114 368868  5869/5548/544   13689/1843    41  310   25.06)
(smt.stats   50   6743 152528 400026  5873/5552/544   13881/2060    42  312   25.06)
(smt.stats   51   6920 156496 418723  5909/5558/544   14239/2061    42  312   25.06)
ramon: poll                 wall=5.000s usage=4.933s mem=26516KiB load=1.00 rootload=1.00
(smt.stats   52   7114 159048 426815  6129/5724/548   14611/2107    43  322   25.39)
ramon: poll                 wall=6.000s usage=5.932s mem=26820KiB load=1.00 rootload=1.00
(smt.stats   53   7327 163539 444715  6447/6114/549   15036/2113    43  322   25.49)
(smt.stats   54   7561 170302 466554  6557/6218/551   15449/2167    44  355   25.68)
ramon: poll                 wall=7.000s usage=6.931s mem=27136KiB load=1.00 rootload=1.00
(smt.stats   55   7662 172314 472186  6709/6318/552   15627/2168    44  355   25.78)
(smt.stats   56   7773 175250 481243  6884/6425/552   15779/2285    45  357   25.87)
ramon: poll                 wall=8.000s usage=7.930s mem=27332KiB load=1.00 rootload=0.99
(smt.stats   57   7895 177902 488146  7143/6671/552   15932/2290    45  357   25.87)
(smt.stats   58   8029 180140 500149  7271/6925/555   16382/2292    45  357   26.07)
ramon: poll                 wall=9.000s usage=8.928s mem=27600KiB load=1.00 rootload=1.00
(smt.stats   59   8176 182720 509840  7515/6995/555   16587/2293    45  357   26.16)
ramon: poll                 wall=10.000s usage=9.927s mem=27656KiB load=1.00 rootload=1.00
(smt.stats   60   8337 187154 531683  7724/7396/556   16889/2450    46  383   26.16)
(smt.stats   61   8514 192042 548586  7825/7508/559   17416/2523    47  383   26.36)
ramon: poll                 wall=11.000s usage=10.926s mem=27892KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8708 199728 580619  7894/7533/560   18673/2524    47  383   26.55)
ramon: poll                 wall=12.000s usage=11.925s mem=28388KiB load=1.00 rootload=1.00
(smt.stats   63   8921 209885 624594  8202/7589/560   19483/2942    48  398   26.91)
(smt.stats   64   9155 220325 656269  8310/7912/562   20627/3063    49  402   27.10)
ramon: poll                 wall=13.000s usage=12.924s mem=28656KiB load=1.00 rootload=1.00
(smt.stats   65   9412 234041 703762  8480/8012/562   22089/3358    50  402   27.29)
(smt.stats   66   9513 236152 717729  8531/8214/563   22946/3685    51  410   27.39)
(smt.stats   67   9624 243448 741746  8566/8220/564   23569/3686    51  410   27.48)
ramon: poll                 wall=14.000s usage=13.922s mem=29092KiB load=1.00 rootload=1.00
(smt.stats   68   9746 249644 761778  8645/8266/564   23772/3688    51  410   27.48)
(smt.stats   69   9880 255000 781645  8834/8354/564   23925/3947    52  415   27.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 329)
(smt.stats   70  10027 258248 796808  8966/8634/564   24231/3947    52  415   27.58)
(smt.stats   71  10188 263583 817568  9078/8653/564   24510/3947    52  415   27.77)
(smt.stats   72  10365 268462 859965  9289/8842/564   24809/3947    52  415   28.35)
ramon: poll                 wall=15.000s usage=14.917s mem=29816KiB load=0.99 rootload=0.99
(smt.stats   73  10559 273932 890239  9373/9026/570   25352/4119    53  418   28.45)
(smt.stats   74  10772 280303 916862  9569/9054/570   25651/4124    53  418   28.45)
(smt.stats   75  11006 285549 938880  9809/9376/573   26029/4256    54  420   28.54)
(smt.stats   76  11263 292623 954719  9924/9481/573   26304/4256    54  420   28.64)
ramon: poll                 wall=16.000s usage=15.917s mem=30148KiB load=1.00 rootload=1.00
(smt.stats   77  11545 301640 986266 10058/9622/573   26727/4299    55  430   28.64)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11646 302384 1005433 10067/9723/573   26914/4299    55  430   28.64)
(smt.stats   79  11757 306376 1020813 10100/9726/573   27064/4300    55  430   28.73)
(smt.stats   80  11879 312889 1044940 10112/9761/573   27263/4300    55  430   28.73)
(smt.stats   81  12013 316322 1067716 10145/9776/573   27529/4300    55  430   28.88)
(smt.stats   82  12160 321289 1104743 10161/9817/573   27969/4300    55  430   28.88)
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2097152 := 2523654&2097152
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 68722000390 := 25769809922 << 22
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2097152 := 2392614&2097152
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 34362130982 := 25769809922 << 22
band: (band[35] (shl[64] (bv2int %0) (mod #290 64)) (if (= #648 63) 0 (if #650 1 #774))) 2097152 := 2392614&2097152
shl: (shl[64] (bv2int %0) (mod (+ #104 #289) 64)) 34362130982 := 25769809922 << 22
ramon: poll                 wall=17.000s usage=16.917s mem=30472KiB load=1.00 rootload=1.00
(smt.stats   83  12321 327258 1133086 10229/9829/574   28618/4430    56  451   29.07)
(smt.stats   84  12498 333648 1163117 10274/9908/579   29187/4432    56  451   29.07)
(smt.stats   85  12692 341730 1206160 10437/9960/580   29962/4559    57  452   29.16)
ramon: poll                 wall=18.000s usage=17.917s mem=31240KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   86  12905 348971 1226960 10780/10097/580   30399/4560    57  452   29.46)
(smt.stats   87  13139 357931 1263486 10919/10499/581   31132/4690    58  452   29.55)
(smt.stats   88  13396 364021 1308958 10956/10581/581   31727/4691    58  452   29.65)
ramon: poll                 wall=19.000s usage=18.917s mem=31496KiB load=1.00 rootload=1.00
(smt.stats   89  13678 377275 1372638 11097/10620/581   32574/4914    59  454   29.84)
ramon: poll                 wall=20.000s usage=19.916s mem=31384KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:16:35 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.979s
ramon: group.utime          19.959s
ramon: group.stime          0.020s
ramon: group.mempeak        31896KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.059s
ramon: loadavg              1.00
