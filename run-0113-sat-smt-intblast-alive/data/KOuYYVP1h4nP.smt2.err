ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:39:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40769 MiB
ramon: sys.mem.avail        61381 MiB
ramon: sys.nprocs           1321
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KOuYYVP1h4nP.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3797711
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   226/224     0/0  61       0    18.64   0.00)
(sat.stats    101    478    0   226/224   101/30  61       0    18.73   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 439 :time 0.00)
(sat.stats    101    478    0   226/224   101/30  61       0    18.73   0.00)
(sat.stats    101    478    0   226/224   101/30  61       0    18.73   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 374418.83 :time 0.00)
(sat.stats    101    478    0   228/226    56/30  61       0    18.83   0.00)
(sat.stats    104    496    1   228/226    59/33  61       0    18.83   0.00)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    529    2   228/226    62/36  61       0    18.83   0.00)
(sat.stats    110    573    3   228/226    65/39  61       0    18.83   0.01)
(sat.stats    113    634    4   228/226    68/42  61       0    18.83   0.01)
(sat.stats    116    716    5   228/226    71/45  61       0    18.83   0.01)
(sat.stats    119    750    6   228/226    74/45  61       0    18.83   0.01)
(sat.stats    122    788    7   228/226    77/45  61       0    18.83   0.01)
(sat.stats    125    827    8   228/226    80/45  61       0    18.83   0.01)
(sat.stats    128    887    9   228/226    83/46  61       0    18.83   0.01)
(sat.stats    131    995   10   228/226    86/49  61       0    18.83   0.01)
(sat.stats    140   1354   11   228/226    95/51  61       0    18.83   0.01)
(sat.stats    143   1460   12   228/226    98/51  61       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4384 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    400   6587   25   255/253   353/171  69       0    19.59   0.07)
(sat.stats    542  10841   26   618/616   495/207  69       0    20.27   0.31)
(sat.stats    545  10848   27   646/644   498/208  69       0    20.27   0.32)
(sat.stats    775  12192   75  3145/3143   740/223  69       0    20.84   0.91)
ramon: poll                 wall=1.002s usage=0.931s mem=22300KiB load=0.93 rootload=0.93
(sat.stats   1221  14055   94 12329/12327  1223/240  69       0    21.99   1.38)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 11012 :time 0.00)
 (sat-cleaner :elim-literals 96 :elim-clauses 0 :cost 11570 :time 0.00)
(sat.stats   1597  22593  153 18456/18454  1716/447  74       0    22.87   1.51)
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 0 := 281474976710648 << 40
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #805 #809) 64)) 166914661189419007 := 562949953421296 << 39
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 1 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 51198455732 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 1525 := 51198455733&272678883688448
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 16099 :time 0.00)
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 2 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 11258 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 261080 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 481568 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 16 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 334976 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 64 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 1061376 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 256 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 17929216 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 45813760 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 2048 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 262356992 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 8192 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 185892864 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 267386880 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 65536 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 1321730048 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 18826133504 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 10880024576 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 4194304 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 51198455733&272678883688448
band: (band[48] (if (or #535 #540 #545 #550) 0 (if #530 1 #787)) (shl[64] (* 2 #57) (mod #813 64))) 393216 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 90648 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 4 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 410400 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 16 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 1830656 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 192 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 128 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 13069312 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 512 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 47824896 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 2048 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 4096 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 8192 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 986415104 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 1529675776 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 716832768 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 6694895616 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 13888913408 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 22142779392 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 17720934400 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 2097152 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 42169532416 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 9495904256 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 16777216 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 44828721152 := 51198455733&272678883688448
ramon: poll                 wall=2.000s usage=1.928s mem=26600KiB load=1.00 rootload=0.99
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 11475615744 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 536870912 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 8589934592 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 1073741824 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 4294967296 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 2147483648 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 17179869184 := 51198455733&272678883688448
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 34359738368 := 51198455733&272678883688448
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   2396  47688  254 22972/22966  2628/773 101       0    25.88   1.98)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 19191 :time 0.00)
 (sat-cleaner :elim-literals 17 :elim-clauses 1 :cost 19504 :time 0.00)
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 0 := 332 << 4
ramon: poll                 wall=3.000s usage=2.928s mem=30880KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.006s usage=3.932s mem=40892KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.925s mem=46032KiB load=1.00 rootload=1.00
(sat.stats   3595  77806  549 161582/161574  4272/1287 471       0    46.56   5.12)
ramon: poll                 wall=6.000s usage=5.925s mem=51468KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.925s mem=51800KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.924s mem=65416KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.924s mem=84008KiB load=1.00 rootload=0.98
ramon: poll                 wall=10.000s usage=9.924s mem=96504KiB load=1.00 rootload=0.99
band: (band[48] (if (or #567 #568 #569 #570) 0 (if #571 1 #694)) (shl[48] (bv2int %0) (+ 48 #706))) 0 := 0&5312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #805 #809) 64)) 365037860421632 := 664 << 3
ramon: poll                 wall=11.000s usage=10.923s mem=97MiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.923s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.922s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.922s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.921s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.919s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.918s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.917s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.002s usage=18.919s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.917s mem=99MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:39:33 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          19.999s
ramon: group.utime          19.947s
ramon: group.stime          0.052s
ramon: group.mempeak        100MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.082s
ramon: loadavg              1.00
