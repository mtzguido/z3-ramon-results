ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:49:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27764 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/cva8XRipaMAi.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             870304
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   55.5556     10000        49          0            1        2)
(sat.ddfw       1      1   32.3657     20001        98          1            1        3)
(smt.stats    0    101   5819    546  1257/1099/97      97/14     5   16   52.07)
(smt.stats    1    202   7316   1721  2122/1924/100     195/25     6   19   52.16)
(sat.ddfw       1      1   36.9686     40001       196          2            1        5)
(smt.stats    2    313   8376   2586  2251/1961/100     314/33     7   20   52.31)
(sat.ddfw       1      1   33.6323     70001       343          3            1        8)
(smt.stats    3    414  10184   4730  2343/2111/102     413/37     8   22   52.44)
ramon: poll                 wall=1.000s usage=0.872s mem=54628KiB load=0.87 rootload=0.87
(smt.stats    4    525  11104   6203  2711/2436/107     569/50     9   23   52.53)
(smt.stats    5    647  12865   8465  2755/2497/109     682/55    10   30   52.63)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14413  10649  2770/2534/109     775/59    11   36   52.63)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 2130202623746244609 := 520 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 2130202623746244609 := 520 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 2130202623746244609 := 520 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 2130202623746244609 := 520 << 51
(smt.stats    7    859  15577  12138  2796/2544/110     879/61    12   36   52.73)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814678
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814678
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814681
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814678
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 2076042923670602&168929719814680
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 21 := 2076042923670602&168929719814705
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 116 := 2076042923670602&168929719814801
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 112 := 2076042923670602&168929719814800
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 112 := 2076042923670602&168929719814800
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 112 := 2076042923670602&168929719814800
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814806
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814808
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814816
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 256 := 2076042923670602&168929719814944
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 512 := 2076042923670602&168929719815200
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 2076042923670602&168929719815712
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 104 := 2076042923670602&168929719814785
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814816
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814816
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 2076042923670602&168929719814816
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 256 := 2076042923670602&168929719814944
(sat.ddfw       1      1   28.6328    110001       539          4            1       12)
(smt.stats    8    981  16943  14689  2914/2673/192    1024/85    14   53   52.92)
(smt.stats    9   1115  18369  17291  3134/2699/193    1170/104    15   55   53.13)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 2076042923670602&1025
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 4683743612465316865 := 2080 << 51
(smt.stats   10   1216  20561  19424  3204/2954/194    1273/105    16   58   53.13)
ramon: poll                 wall=2.000s usage=1.821s mem=55384KiB load=0.95 rootload=0.94
(sat.ddfw       1      1   25.5358    160000       784          5            1       17)
(smt.stats   11   1327  24608  22105  3220/2972/194    1393/105    16   58   53.24)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26120  24517  3381/3056/195    1535/128    17   58   53.24)
(sat.ddfw       1      1   22.7449    220001      1078          6            1       23)
(smt.stats   13   1583  29250  28317  3480/3191/195    1689/128    17   58   53.36)
ramon: poll                 wall=3.000s usage=2.796s mem=55648KiB load=0.97 rootload=0.98
(smt.stats   14   1730  31844  31783  3599/3252/195    1849/131    17   58   53.46)
(smt.stats   15   1831  33664  34905  3714/3392/196    1954/148    18   62   53.46)
(sat.ddfw       1      1   20.0803    290001      1421          7            1       30)
(smt.stats   16   1942  35070  37357  3813/3503/196    2072/148    18   62   53.56)
(smt.stats   17   2064  38162  42015  3870/3627/209    2184/196    20   79   53.75)
ramon: poll                 wall=4.000s usage=3.723s mem=56100KiB load=0.93 rootload=0.92
(smt.stats   18   2198  40270  45814  3916/3664/211    2333/196    20   79   53.75)
(smt.stats   19   2345  44254  52576  3949/3706/212    2493/228    22   86   53.89)
(sat.ddfw       1      1   18.2274    370001      1813          8            1       38)
(smt.stats   20   2506  46541  57737  4019/3715/212    2690/229    22   86   53.89)
ramon: poll                 wall=5.000s usage=4.722s mem=56232KiB load=1.00 rootload=1.00
(smt.stats   21   2607  48476  60351  4065/3779/212    2796/234    22   86   53.98)
(sat.ddfw       1      1   16.6236    460001      2254          9            1       47)
(smt.stats   22   2718  51109  64724  4249/3870/212    2914/237    22   86   53.98)
(smt.stats   23   2840  53004  69617  4351/4025/213    3042/281    23   88   53.98)
(smt.stats   24   2974  54865  76309  4396/4153/215    3178/287    24   96   54.10)
ramon: poll                 wall=6.000s usage=5.724s mem=56320KiB load=1.00 rootload=1.00
(smt.stats   25   3121  56162  82317  4488/4154/215    3324/299    25   96   54.10)
(sat.ddfw       1      1   15.2742    560001      2745         10            1       57)
(smt.stats   26   3282  60884  90946  4550/4277/216    3488/304    26   96   54.10)
(smt.stats   27   3459  64575  99170  4604/4316/216    3683/305    26   96   54.25)
ramon: poll                 wall=7.000s usage=6.720s mem=56544KiB load=1.00 rootload=1.00
(smt.stats   28   3560  65664 102792  4630/4363/216    3809/306    26   96   54.35)
(smt.stats   29   3671  66401 104407  4798/4479/216    3925/306    26   96   54.35)
(sat.ddfw       1      1   14.1279    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.719s mem=56656KiB load=1.00 rootload=1.00
(smt.stats   30   3793  67694 109554  4886/4595/218    4079/386    27   98   54.44)
(smt.stats   31   3927  68475 112186  5016/4694/218    4226/387    27   98   54.54)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  71909 116080  5067/4781/218    4397/397    27   98   54.54)
ramon: poll                 wall=9.003s usage=8.727s mem=56832KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   13.1449    790001      3872         12            1       80)
(smt.stats   33   4235  75003 124172  5230/4849/218    4605/402    27   98   54.54)
(smt.stats   34   4412  77580 134541  5303/4993/218    4800/404    27   98   54.66)
ramon: poll                 wall=10.000s usage=9.828s mem=56944KiB load=1.10 rootload=1.10
(sat.ddfw       1      1   12.6718    920001      4509         13            1       93)
(smt.stats   35   4606  79995 145213  5416/5074/218    5019/404    27   98   54.66)
(smt.stats   36   4707  81842 152001  5424/5177/218    5160/404    27   98   54.66)
(smt.stats   37   4818  83886 156295  5428/5185/218    5337/404    27   98   54.77)
(smt.stats   38   4940  86050 163074  5440/5197/218    5477/404    27   98   54.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 35)
(smt.stats   39   5074  87840 167281  5486/5199/218    5590/404    27   98   54.89)
ramon: poll                 wall=11.000s usage=10.884s mem=57188KiB load=1.06 rootload=1.06
(smt.stats   40   5221  89386 171556  5538/5285/218    5745/404    27   98   54.99)
(smt.stats   41   5382  92172 183539  5558/5311/218    5904/404    27   98   55.15)
(smt.stats   42   5559  94266 192303  5629/5319/219    6100/620    28  103   55.15)
(sat.ddfw       1      1   11.8084   1060001      5196         14            1      108)
ramon: poll                 wall=12.003s usage=11.888s mem=57416KiB load=1.00 rootload=1.00
(smt.stats   43   5753  97141 202444  5891/5439/219    6323/623    28  103   55.25)
(smt.stats   44   5966 100321 210721  6032/5656/219    6554/624    28  103   55.35)
(smt.stats   45   6067 103603 218663  6066/5823/219    6652/624    28  103   55.35)
(smt.stats   46   6178 106725 229440  6076/5833/219    6778/624    28  103   55.35)
ramon: poll                 wall=13.003s usage=12.887s mem=57564KiB load=1.00 rootload=1.00
(smt.stats   47   6300 111796 242420  6085/5833/219    6909/624    28  103   55.35)
(smt.stats   48   6434 116114 251873  6095/5848/219    7046/624    28  103   55.35)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 3072 := 3776&32756
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32756
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&57333
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32741
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32772
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32772
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32773
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&34820
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13898108450065385476 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&34820
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13898108450065385476 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&32772
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&36869
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&38916
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13898108450065389572 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&36869
(smt.stats   49   6581 119862 259227  6163/5904/238    7190/707    29  112   55.55)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&34820
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13938640846711719940 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2048 := 3776&34820
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 13938640846711719940 := 8657118243627126 << 12
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1280 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1280 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1280 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1120 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 64 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 64 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 64 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 512 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691865805 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691865805 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691865805 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691854386 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4286326691854386 := 4328559121813563 << 13
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 3776 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 1 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 3776 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 512 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2048 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 15 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 14 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 12 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 4 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 4 := 3776&2716459608793088
(smt.stats   50   6742 122962 267403  6363/6056/341    7433/739    30  121   56.16)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 16 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 2 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 64 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 256 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 128 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2048 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2048 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2048 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1024 := 3776&2716459608793088
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 3776&2716459608793088
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 512 := 3776&2716459608793088
(sat.ddfw       1      1   11.0595   1210001      5931         15            1      123)
(smt.stats   51   6919 130088 276442  6380/6130/421    7629/783    31  156   56.35)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 135806 290950  6425/6167/424    7890/786    31  156   56.45)
ramon: poll                 wall=14.003s usage=13.890s mem=58788KiB load=1.00 rootload=1.00
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 4683743612465315840 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 4683743612465315840 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 7120191010872754176 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&8192
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&8192
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&4096
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&17281
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&17280
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&25473
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&25472
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&24576
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&24576
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&16384
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&897
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&896
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 7120191010872754560 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #845) 64)) 7124694610500124672 := 8657118243627050 << 50
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4096 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 4096 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1280 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1280 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1280 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #104))) 1280 := 4328559121813525 << 51
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 512 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 512 := 1038021461835301&2251799813685248
(smt.stats   53   7326 141894 308198  6648/6369/499    8287/931    33  186   57.12)
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4096 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8192 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16384 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 32768 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 65536 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 131072 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 65536 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 262144 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 524288 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1048576 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1048576 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2097152 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4194304 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8388608 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16777216 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16384 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8192 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4160 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4160 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4096 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4096 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1048576 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2097152 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4194304 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 16777216 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 33554432 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 67108864 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 134217728 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 268435456 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 536870912 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1073741824 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1073741824 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2147483648 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4294967296 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8589934592 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 17179869184 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 34359738368 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 68719476736 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 137438953472 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 274877906944 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 549755813888 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 549755813888 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 1099511627776 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 2199023255552 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 4398046511104 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 8796093022208 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 17592186044416 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 35184372088832 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 70368744177664 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 140737488355328 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 281474976710656 := 1038021461835301&2251799813685248
band: (band[52] (if (= #378 63) 0 (if #586 1 #834)) (shl[64] (* 2 #102) (mod #849 64))) 0 := 1038021461835301&2251799813685248
band: (band[52] (if (= #108 51) 0 (if #607 1 #751)) (shl[52] (bv2int %0) (+ 52 #754))) 562949953421312 := 1038021461835301&2251799813685248
(smt.stats   54   7560 148279 322343  6938/6606/696    8802/947    33  186   58.54)
(smt.stats   55   7661 153066 334402  7004/6689/700    8884/1195    34  237   58.84)
ramon: poll                 wall=15.000s usage=14.864s mem=61236KiB load=0.98 rootload=0.97
(sat.ddfw       1      1   10.3694   1370001      6715         16            1      139)
(smt.stats   56   7772 156981 339298  7417/7123/701    8995/1202    35  241   58.93)
ramon: poll                 wall=16.000s usage=15.863s mem=61388KiB load=1.00 rootload=1.00
(smt.stats   57   7894 160723 345272  7741/7204/702    9121/1209    35  241   59.03)
(smt.stats   58   8028 165327 359274  7773/7497/709    9436/1237    36  249   59.12)
ramon: poll                 wall=17.000s usage=16.863s mem=61456KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.78812   1540001      7549         17            1      156)
(smt.stats   59   8175 174594 371974  7824/7503/710    9634/1242    36  249   59.31)
ramon: poll                 wall=18.000s usage=17.860s mem=61820KiB load=1.00 rootload=0.99
(smt.stats   60   8336 183169 385621  7998/7599/711    9810/1396    37  257   59.31)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8513 190687 403050  8198/7917/713   10111/1477    38  265   59.50)
ramon: poll                 wall=19.000s usage=18.864s mem=62132KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   9.26402   1720001      8431         18            1      174)
(smt.stats   62   8707 199984 430181  8420/8115/716   10463/1607    39  268   59.60)
ramon: poll                 wall=20.000s usage=19.966s mem=62284KiB load=1.10 rootload=1.10
ramon: end                  Fri Nov  1 22:49:36 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.010s
ramon: group.total          20.008s
ramon: group.utime          19.996s
ramon: group.stime          0.012s
ramon: group.mempeak        62540KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.045s
ramon: loadavg              1.00
