ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:04:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41994 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KV7LLqmiGPv4.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2913405
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5391    841  1274/1148/88     101/3     1   13   19.11)
(smt.stats    1    202   6560   1361  2031/1832/89     198/5     2   13   19.30)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 131072&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1 := 18 << 18
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 131072&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1 := 18 << 18
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 131072&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1 := 18 << 18
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 131072&1
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 131072&2
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 4 := 131072&4
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 8 := 131072&8
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 4 := 131072&4
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 8 := 131072&8
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1728 := 131072&1728
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 32 := 131072&32
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 131072&64
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&128
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 13056 := 131072&13056
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 512 := 131072&512
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1024 := 131072&1024
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 118784 := 131072&118784
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2048 := 131072&2048
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 8192 := 131072&8192
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16384 := 131072&16384
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 131072&1020
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&194
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 512 := 131072&548
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
(smt.stats    2    313   8957   3217  2204/1954/114     312/14     3   13   19.69)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&128
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&128
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&128
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1024 := 131072&1024
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2050 := 131072&2050
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2050 := 131072&2050
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2052 := 131072&2052
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2056 := 131072&2056
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2120 := 131072&2120
(smt.stats    3    414  10189   5236  2301/2087/174     420/28     6   39   19.69)
(smt.stats    4    525  12060   7077  2641/2089/176     532/67     7   48   19.80)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&253
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423741 := 252 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&194
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423682 := 193 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&194
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423682 := 193 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&76
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423564 := 75 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&76
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423564 := 75 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 8796229238783 := 8796227242014 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32768 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 8796227242015 := 8796227242014 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32768 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32767 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 8796227242015 := 8796227242014 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32768 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32767 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32766 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32767 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32766 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 4 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 64 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 128 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 256 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 512 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 512 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1024 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 2048 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 4096 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8192 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16384 := 17592457363456&32768
(smt.stats    5    648  15075  11076  2759/2493/266     708/122     9   56   20.30)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&576460752300933120
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 26388279066587 := 26388279066586 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&576460752300933120
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 256 := 576460752300933120&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&576460752300933120
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 256 := 576460752300933120&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 256 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&576460752300933120
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 576 := 576460752300933120&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 576 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 576 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 576 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 512 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1024 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1024 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 2048 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16384 := 17592457363456&32768
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  16835  13457  2860/2606/305     825/148    11   84   20.69)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 32768&17592461230080
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 32 := 32768&17592461230080
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 32768&17592461230080
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 32768&17592461230080
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592461230080
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8192 := 17592461230080&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592461230080
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8192 := 17592461230080&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592461230080
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8192 := 17592461230080&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32768 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16384 := 17592457363456&32768
(smt.stats    7    860  20367  20032  2911/2618/305     958/151    11   84   20.78)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 4096 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 2 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 2 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 4 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 128 := 17592457363456&32768
(smt.stats    8    982  21678  25368  3004/2749/385    1130/209    14  129   20.99)
(smt.stats    9   1116  25694  30056  3021/2764/385    1290/209    14  129   21.09)
(smt.stats   10   1217  32146  36935  3027/2770/386    1393/247    15  131   21.09)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&299071749685248
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&299071749685249
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 299071749685249 := 299071726227815 << 1
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&299071749685249
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 299071749685249 := 299071726227815 << 1
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&299071753551873
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 299071753551873 := 299071726227874 << 1
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&598143453036544
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&598143453036544
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 1&598143452455984
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 598143452512256 := 299071726227992 << 1
(smt.stats   11   1328  35465  40922  3128/2861/397    1505/265    16  134   21.46)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 1&17592722931754
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 288239172513234944 := 288239172513177621 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  38485  46760  3233/2960/408    1687/306    17  136   21.56)
(smt.stats   13   1584  42032  51621  3262/2985/408    1843/317    18  146   21.68)
(smt.stats   14   1731  49659  57425  3285/3000/408    2025/319    18  146   21.68)
(smt.stats   15   1832  55413  65844  3294/3017/412    2127/361    19  147   21.78)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 16&59390
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 16&59390
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 9 := 16&59391
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 9 := 16&59391
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 13 := 16&59391
(smt.stats   16   1943  57402  70335  3326/3049/425    2292/421    21  177   21.78)
(smt.stats   17   2065  60234  75547  3335/3058/425    2429/421    21  177   21.78)
(smt.stats   18   2199  63905  82755  3343/3064/425    2575/423    22  187   21.90)
(smt.stats   19   2346  67498  89525  3438/3075/427    2793/436    23  190   22.14)
ramon: poll                 wall=1.003s usage=0.996s mem=23452KiB load=0.99 rootload=0.97
(smt.stats   20   2507  72168 100867  3497/3209/428    3048/481    24  191   22.14)
(smt.stats   21   2608  74186 107655  3511/3232/433    2802/553    26  548   22.36)
(smt.stats   22   2719  74675 108672  3664/3262/433    2930/555    26  548   22.45)
(smt.stats   23   2841  75857 110946  3933/3445/433    3174/556    26  548   22.57)
(smt.stats   24   2975  77175 113468  4200/3686/433    3422/556    26  548   22.66)
(smt.stats   25   3122  84248 129508  4351/4037/434    3870/558    26  548   22.76)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748164
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748166
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1729989187329018630 := 288520647221444723 << 2
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748164
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748166
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1729989187329018630 := 288520647221444723 << 2
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748164
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748164
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748166
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1729989187329018630 := 288520656482467810 << 2
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&70369817936228
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&70369817936228
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2&70369817936228
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 606930418748163 := 17592454484057 << 2
(smt.stats   26   3283  89233 147475  4481/4100/434    4191/637    27  553   22.76)
ramon: poll                 wall=2.000s usage=1.990s mem=24344KiB load=1.00 rootload=0.99
(smt.stats   27   3460  92323 154533  4843/4236/451    4749/724    28  561   23.07)
(smt.stats   28   3561  95593 161148  4904/4624/453    4924/724    28  561   23.07)
(smt.stats   29   3672 102399 181585  4915/4635/453    5269/906    29  566   23.07)
(smt.stats   30   3794 109574 204248  4919/4639/453    5479/906    29  566   23.19)
(smt.stats   31   3928 117273 230104  4943/4641/453    5639/908    29  566   23.19)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 124381 247833  4945/4665/453    5829/908    29  566   23.19)
(smt.stats   33   4236 131140 275655  4996/4716/454    6421/1280    30  566   23.31)
(smt.stats   34   4413 135449 288428  5220/4717/455    6883/1281    30  566   23.41)
(smt.stats   35   4607 146710 311735  5343/5056/455    7150/1282    30  566   23.55)
(smt.stats   36   4708 151979 318421  5348/5065/455    7247/1322    31  570   23.55)
ramon: poll                 wall=3.000s usage=2.988s mem=25040KiB load=1.00 rootload=1.00
(smt.stats   37   4819 158270 344477  5380/5076/455    7683/1323    31  570   23.55)
(smt.stats   38   4941 163683 355774  5402/5111/455    8444/1326    31  570   23.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 37)
(smt.stats   39   5075 168073 367202  5415/5135/456    8791/1627    32  575   23.74)
(smt.stats   40   5222 172135 379916  5435/5153/456    9407/1627    32  575   23.74)
(smt.stats   41   5383 174900 390658  5617/5157/456    9628/1628    32  575   24.04)
ramon: poll                 wall=4.000s usage=3.987s mem=26400KiB load=1.00 rootload=1.00
(smt.stats   42   5560 175720 393163  6132/5420/456    9980/1631    32  575   24.92)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 1&288239172513615872
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1 := 288239172513615872&1
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 1&288239172513615872
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1 := 288239172513615872&1
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5754 179546 417743  6497/5927/457   10652/2015    33  578   25.05)
(smt.stats   44   5967 187747 467058  6548/6266/458   11255/2399    34  580   25.14)
(smt.stats   45   6068 191730 474733  6556/6274/458   11430/2399    34  580   25.14)
ramon: poll                 wall=5.000s usage=4.987s mem=27552KiB load=1.00 rootload=0.99
(smt.stats   46   6179 195302 494440  6736/6341/459   11895/2403    34  580   25.24)
(smt.stats   47   6301 197538 509656  6932/6458/459   12287/2724    35  580   25.43)
(smt.stats   48   6435 200881 522115  7243/6742/459   12697/2726    35  580   25.60)
(smt.stats   49   6582 204715 534984  7277/6971/459   13753/2727    35  580   25.69)
(smt.stats   50   6743 210041 552117  7430/7103/460   14261/3101    36  580   25.79)
ramon: poll                 wall=6.000s usage=5.987s mem=28132KiB load=1.00 rootload=1.00
(smt.stats   51   6920 213712 571138  7805/7157/460   14780/3105    36  580   25.89)
(smt.stats   52   7114 219971 587733  7929/7532/461   15057/3261    37  584   26.01)
(smt.stats   53   7327 225079 597449  8278/7730/461   15394/3262    37  584   26.20)
(smt.stats   54   7561 233274 628231  8567/8227/461   16066/3271    37  584   26.20)
(smt.stats   55   7662 240294 652930  8574/8292/461   16181/3271    37  584   26.20)
ramon: poll                 wall=7.000s usage=6.987s mem=28164KiB load=1.00 rootload=1.00
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 144115188075855872&287693763739256290
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 144115188075855872&287693763739256290
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 144115188075855872&287693763739256290
(smt.stats   56   7773 243966 665159  8676/8293/461   16327/3275    37  584   26.30)
(smt.stats   57   7895 245868 678813  9007/8425/471   16583/3437    38  586   26.59)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 17179870212 := 144115188075855872&287693763739256288
(smt.stats   58   8029 249531 695334  9140/8801/471   17500/3439    38  586   26.59)
(smt.stats   59   8176 254510 708556  9387/8866/478   17874/3645    39  595   26.79)
(smt.stats   60   8337 260069 752068  9801/9245/478   18527/3648    39  595   26.88)
(smt.stats   61   8514 264627 783818 10037/9552/478   19661/3973    40  595   26.98)
ramon: poll                 wall=8.000s usage=7.987s mem=28988KiB load=1.00 rootload=1.00
(smt.stats   62   8708 273442 887229 10061/9779/478   20417/3973    40  595   27.10)
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8921 282124 955149 10267/9789/479   21384/4477    41  601   27.28)
(smt.stats   64   9155 289014 991830 10332/10040/481   22183/4690    42  605   27.38)
ramon: poll                 wall=9.000s usage=8.986s mem=29008KiB load=1.00 rootload=1.00
(smt.stats   65   9412 306426 1077819 10343/10057/481   22522/4690    42  605   27.38)
(smt.stats   66   9513 309520 1107371 10366/10074/481   22868/4690    42  605   27.50)
(smt.stats   67   9624 314358 1148364 10473/10084/481   23230/4692    42  605   27.50)
(smt.stats   68   9746 319582 1219819 10632/10235/482   23495/5232    43  607   27.59)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   69   9880 322653 1258359 10799/10388/482   23939/5239    43  607   27.69)
(smt.delete-inactive-clauses  :num-deleted-clauses 258)
(smt.stats   70  10027 326270 1299660 10838/10524/482   24749/5240    43  607   27.69)
ramon: poll                 wall=10.000s usage=9.986s mem=29400KiB load=1.00 rootload=1.00
(smt.stats   71  10188 332863 1375050 10897/10562/483   25051/5806    44  612   27.78)
(smt.stats   72  10365 339293 1452124 11023/10631/484   25454/5903    45  612   28.04)
(smt.stats   73  10559 344308 1503661 11154/10799/484   26386/5903    45  612   28.13)
(smt.stats   74  10772 352796 1597228 11435/10923/484   27081/5907    45  612   28.23)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 7256 := 9007199254740992&576188073419735358
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 7284 := 9007199254740992&576188073419735358
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 7284 := 9007199254740992&576188073419735358
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 7264 := 9007199254740992&576188073419735358
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 7264 := 9007199254740992&576188073419735358
ramon: poll                 wall=11.003s usage=10.990s mem=30020KiB load=1.00 rootload=1.01
(smt.stats   75  11006 361146 1689868 11727/11198/484   28394/5911    45  612   28.43)
(smt.stats   76  11263 380517 1757552 11754/11452/489   28723/6579    46  613   28.56)
(smt.stats   77  11545 397383 1880793 11893/11475/489   29286/6583    46  613   28.56)
(smt.stats   78  11646 402062 1928169 12016/11630/489   29502/6687    47  613   28.69)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 24 := 36028797018963968&288274357963915264
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 24 := 36028797018963968&288274357963915264
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 36028797018963968&288274357963915264
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 36028797018963968&288274357963915264
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 36028797018963968&288274357963915264
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1441195862570762240 := 288520647221444659 << 56
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 36028797018963968&288520647221444656
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 2017902904131715120 := 288520647221444659 << 56
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 36028797018963968&288520647221444656
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 2017902904131715120 := 288520647221444659 << 56
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 36028797018963968&216172782113783808
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 3342337 := 288520647221444659 << 56
(smt.stats   79  11757 405697 1954458 12095/11762/490   29774/6690    47  613   28.78)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 36028797018963968&216172782113783808
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 768 := 288520647221444659 << 56
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 36028797018963968&216172782113783808
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 768 := 288520647221444659 << 56
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&144700137255116924
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&144700137255116924
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&144700137255116924
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&287671815721845756
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&144700137255116924
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&144700137255116924
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&288274357963915264
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 3747038871784456192 := 288520647221444661 << 58
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&288274357963915264
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 3747038871784456192 := 288520647221444661 << 58
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&288274357963915264
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 3747038871784456192 := 288520647221444661 << 58
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&288274357963915264
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 3747038871784456192 := 288520647221444661 << 58
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&288230376151711744
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 3746994889972252672 := 288520647221444661 << 58
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&288274357959099392
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 3747038871779640320 := 288520647221444661 << 58
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&288230376151711744
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 768 := 288520647221444661 << 58
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&288230376151711744
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 288520647221444661 << 58
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 144115188075855872&288230376151711744
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 288520647221444661 << 58
ramon: poll                 wall=12.000s usage=11.985s mem=30644KiB load=1.00 rootload=0.99
(smt.stats   80  11879 409360 2005455 12247/11909/528   30327/6777    48  621   28.98)
(smt.stats   81  12013 412960 2058101 12421/12108/530   31266/7004    49  636   29.07)
(smt.stats   82  12160 418095 2090560 12577/12121/530   31674/7005    49  636   29.19)
(smt.stats   83  12321 422934 2106751 12687/12266/532   32244/7005    49  636   29.29)
(smt.stats   84  12498 427620 2152523 12860/12538/535   34170/7200    50  655   29.58)
ramon: poll                 wall=13.000s usage=12.985s mem=31400KiB load=1.00 rootload=1.00
(smt.stats   85  12692 434207 2194220 13100/12768/537   35948/7208    50  655   30.06)
(smt.stats   86  12905 441130 2251002 13304/12802/537   37262/7209    50  655   30.16)
ramon: poll                 wall=14.003s usage=13.989s mem=31984KiB load=1.00 rootload=1.00
(smt.stats   87  13139 451486 2317119 13475/13031/537   38568/7546    51  665   30.35)
ramon: poll                 wall=15.000s usage=14.985s mem=32276KiB load=1.00 rootload=1.00
(smt.stats   88  13396 461161 2403764 13985/13213/537   40552/7551    51  665   30.54)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   89  13678 473944 2541314 14069/13751/540   43651/7769    52  668   30.98)
ramon: poll                 wall=16.000s usage=15.985s mem=32760KiB load=1.00 rootload=0.99
(smt.stats   90  13988 482633 2665888 14388/14071/542   45193/8291    53  674   31.18)
(smt.stats   91  14089 487457 2675886 14428/14101/542   45340/8420    54  678   31.27)
(smt.stats   92  14200 493263 2748722 14438/14108/542   45662/8420    54  678   31.27)
ramon: poll                 wall=17.003s usage=16.988s mem=33144KiB load=1.00 rootload=1.01
(smt.stats   93  14322 497585 2773530 14736/14122/543   46102/8421    54  678   31.49)
(smt.stats   94  14456 500436 2806960 14867/14431/543   46699/8476    55  678   31.59)
(smt.stats   95  14603 505306 2836931 14931/14596/543   46918/8476    55  678   31.70)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2&576425551288355840
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 576188073419739661 := 288221575897944832 << 2
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2&576425551288355840
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 576188073419739661 := 288221575897944832 << 2
(smt.stats   96  14764 513802 2935093 14991/14604/543   47243/8478    55  678   31.79)
ramon: poll                 wall=18.000s usage=17.984s mem=33764KiB load=1.00 rootload=0.99
(smt.stats   97  14941 517852 2984933 15190/14852/544   47963/8561    56  687   31.89)
(smt.delete-inactive-clauses  :num-deleted-clauses 33)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 14080 := 16384&288230376151717878
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 14080 := 16384&288230376151717878
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 13056 := 16384&288230376151717878
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 13824 := 16384&288230376151717878
(smt.stats   98  15135 522707 3037145 15317/14881/546   49199/8563    56  687   31.99)
(smt.stats   99  15348 532882 3163743 15391/14984/551   50186/8566    56  687   32.20)
ramon: poll                 wall=19.000s usage=18.983s mem=34088KiB load=1.00 rootload=1.00
(smt.stats  100  15582 546226 3245241 15535/15093/551   51139/8745    57  692   32.30)
(smt.stats  101  15840 558957 3351144 15858/15403/554   52753/8908    58  735   32.60)
ramon: poll                 wall=20.000s usage=19.983s mem=34600KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:04:23 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.994s
ramon: group.utime          19.958s
ramon: group.stime          0.036s
ramon: group.mempeak        34600KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
