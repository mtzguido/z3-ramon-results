ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:45:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27976 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1376
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aK0KlyFYkSy9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             856286
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3645   3234  1290/1158/104      94/3     6   17   52.04)
(smt.stats    1    202   5043   4893  1785/1613/106     193/3     7   17   52.14)
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 12 := 12&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 16 := 16&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 32 := 32&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 64 := 64&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 128 := 128&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 256 := 256&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 512 := 512&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 1024 := 1024&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 2048 := 2048&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 4096 := 4096&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 8192 := 8192&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 16384 := 16384&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 32768 := 32768&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 32768 := 32768&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 65536 := 65536&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 131072 := 131072&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 2048 := 2048&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 2048 := 2048&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 2048 := 2048&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 2048 := 2048&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 2048 := 2048&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 4096 := 4096&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 8192 := 8192&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 4224 := 4224&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 4352 := 4352&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 4352 := 4352&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 4232 := 4232&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 4224 := 4224&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 4160 := 4160&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 12296 := 12296&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 12288 := 12288&255852544
(smt.stats    2    313   6400   6960  2157/1915/180     378/21    10   34   52.82)
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 65536 := 65536&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 65544 := 65544&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 65536 := 65536&255852544
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 65536 := 65536&255852544
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   56.1798     10000        49          0            1        2)
(smt.stats    3    414   6951   7798  2391/2087/205     595/22    10   34   52.91)
(smt.stats    4    525   8788  15317  2729/2275/220     792/84    11   42   52.91)
(smt.stats    5    649  13226  25066  2816/2575/222     897/158    13   43   53.01)
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 1&61
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 1&61
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2&61
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 2 := 29 >>l 58
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2&61
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 2 := 29 >>l 58
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 1&61
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2&61
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 2 := 29 >>l 58
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 1&61
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2&61
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 2 := 29 >>l 58
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    750  16433  29034  3018/2765/242    1008/164    16   52   53.20)
(sat.ddfw       1      1   30.3982     20001        98          1            1        3)
(smt.stats    7    861  20217  34643  3126/2849/255    1153/172    18  117   53.32)
(smt.stats    8    984  21571  39472  3173/2897/263    1498/439    20  132   53.51)
(smt.stats    9   1118  27704  55461  3179/2903/263    1636/439    20  132   53.51)
(smt.stats   10   1219  30638  62851  3204/2920/266    1761/442    21  134   53.61)
(sat.ddfw       1      1   32.0513     40001       196          2            1        5)
(smt.stats   11   1330  32401  65431  3319/2927/266    1975/474    22  136   53.80)
(smt.stats   12   1452  33740  70549  3540/3261/269    2226/538    23  139   53.90)
ramon: poll                 wall=1.000s usage=0.805s mem=56064KiB load=0.81 rootload=0.80
(smt.stats   13   1586  35567  76739  3631/3265/270    2680/547    23  139   53.99)
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 799232 := 799232&144115188075855872
(sat.ddfw       1      1   27.8293     70001       343          3            1        8)
(smt.stats   14   1733  37443  91206  3922/3372/270    3053/653    24  176   54.09)
(smt.stats   15   1834  38879  99890  4063/3694/275    3530/738    25  177   54.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   16   1945  41538 108062  4160/3817/275    3788/819    26  177   54.32)
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 512 := 512&7995392
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 512 := 512&7995392
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 15&7995392
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 576460752303423503 := 8 >>l 41
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 0&7995392
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 576460752303423488 := 67 >>l 41
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 0&7995392
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 576460752303423488 := 67 >>l 41
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 0&7995392
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 576460752303423488 := 97 >>l 41
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 0&7995392
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 576460752303423488 := 185 >>l 41
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 0&7995392
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 576460752303423488 := 185 >>l 41
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 0&7995392
lshr: (lshr[64] (mod (div #117 2) 288230376151711744) (mod (+ 58 #654 #656) 64)) 576460752303423488 := 202024 >>l 41
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 1&7995392
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #119))) 16 := 4398046511171 >>l 42
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2&7995392
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #119))) 1 := 8796093022325 >>l 42
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2&7995392
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #119))) 1 := 8796093022325 >>l 42
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 1 := 7995392&2
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 2 := 7995392&2
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 5&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 4 := 7995392&5
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 8&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 8 := 7995392&8
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 16&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 16 := 7995392&16
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 8&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 8 := 7995392&8
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 8&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 8 := 7995392&8
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 8&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 8 := 7995392&8
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 1&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 1 := 7995392&1
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 3&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 2 := 7995392&3
(smt.stats   17   2067  43935 118248  4265/3975/333    3987/862    28  187   54.52)
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 736&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 736 := 7995392&736
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 87&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 64 := 7995392&87
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2176&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 2176 := 7995392&2176
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 9216&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 9216 := 7995392&9216
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 260&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 256 := 7995392&260
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 2051&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 2048 := 7995392&2051
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 4116&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 4096 := 7995392&4116
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 8246&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 8192 := 7995392&8246
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 0 := 16388&7995392
band: (band[59] (if (= #123 58) 17582052945254416384 (if #527 8791026472627208192 #641)) (lshr[59] (bv2int %0) (+ 59 #644))) 16384 := 7995392&16388
(sat.ddfw       1      1   24.9066    110001       539          4            1       12)
ramon: poll                 wall=2.000s usage=1.747s mem=57464KiB load=0.94 rootload=0.93
(sat.ddfw       1      1   21.9776    160000       784          5            1       17)
(smt.stats   18   2201  44352 119325  4440/3990/333    4172/862    28  187   55.54)
ramon: poll                 wall=3.000s usage=2.692s mem=57968KiB load=0.95 rootload=0.95
(sat.ddfw       1      1     19.06    220001      1078          6            1       23)
(smt.stats   19   2348  46628 122177  4631/4197/404    4517/868    28  187   55.44)
(smt.stats   20   2509  50121 129012  4730/4393/404    4926/1004    29  217   55.54)
(smt.stats   21   2610  55080 144431  4767/4439/405    5159/1136    30  220   55.63)
ramon: poll                 wall=4.000s usage=3.669s mem=58032KiB load=0.98 rootload=0.97
(smt.stats   22   2721  59657 151247  4857/4489/407    5479/1201    31  231   55.73)
(sat.ddfw       1      1   17.6012    290001      1421          7            1       30)
(smt.stats   23   2843  62491 155029  5001/4579/407    5694/1202    31  231   55.99)
(smt.stats   24   2977  65513 163004  5120/4762/407    6385/1205    31  231   56.08)
ramon: poll                 wall=5.000s usage=4.665s mem=58316KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.2536    370001      1813          8            1       38)
(smt.stats   25   3124  71786 187528  5133/4840/409    7070/1662    32  233   56.18)
(smt.stats   26   3285  78008 205051  5202/4852/409    7459/1891    33  237   56.18)
(smt.stats   27   3462  83517 229547  5396/4951/409    8289/1899    33  237   56.37)
(smt.stats   28   3563  87223 235076  5435/5112/409    8579/1899    33  237   56.37)
ramon: poll                 wall=6.000s usage=5.667s mem=58616KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.0653    460001      2254          9            1       47)
(smt.stats   29   3674  95200 263898  5463/5170/410    8820/2311    34  244   56.60)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3796 102933 287499  5469/5174/410    9008/2311    34  244   56.60)
(smt.stats   31   3930 108478 299095  5482/5187/410    9150/2311    34  244   56.75)
(smt.stats   32   4077 113224 312230  5518/5196/414    9608/2335    35  255   56.75)
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 17 := 17&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 17 := 17&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 18 := 18&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 17 := 17&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 18 := 18&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 17 := 17&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 18 := 18&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 18 := 18&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 17 := 17&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 18 := 18&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 20 := 20&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 20 := 20&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 24 := 24&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 24 := 24&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 24 := 24&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 24 := 24&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 24 := 24&360287970189639680
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 88 := 88&360287970189639680
(smt.stats   33   4238 117786 332014  5742/5241/416   10213/2365    36  293   56.96)
ramon: poll                 wall=7.000s usage=6.665s mem=59112KiB load=1.00 rootload=1.00
(smt.stats   34   4415 123048 364911  5910/5613/442   10686/2546    38  308   56.96)
(sat.ddfw       1      1   13.9645    560001      2745         10            1       57)
(smt.stats   35   4609 131074 393663  5979/5623/442   11070/2548    38  308   57.06)
(smt.stats   36   4710 135620 410249  5994/5687/442   11349/2548    38  308   57.15)
(smt.stats   37   4821 142171 440248  6001/5702/442   11643/2548    38  308   57.42)
(smt.stats   38   4943 146969 451724  6008/5709/442   11824/2548    38  308   57.42)
ramon: poll                 wall=8.000s usage=7.616s mem=59700KiB load=0.95 rootload=0.95
(smt.delete-inactive-clauses  :num-deleted-clauses 327)
(smt.stats   39   5077 150966 466986  6014/5715/442   11662/2548    38  308   57.42)
(smt.stats   40   5224 161095 516843  6016/5717/442   11900/2548    38  308   57.42)
(sat.ddfw       1      1   12.9931    670001      3284         11            1       68)
(smt.stats   41   5385 169194 554703  6095/5728/442   12270/2556    38  308   57.51)
ramon: poll                 wall=9.000s usage=8.588s mem=59772KiB load=0.97 rootload=0.97
(smt.stats   42   5562 176645 578564  6155/5823/443   12916/2837    39  310   57.61)
(smt.stats   43   5756 183990 591695  6450/5857/443   13204/2837    39  310   57.70)
ramon: poll                 wall=10.000s usage=9.514s mem=59948KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   11.9856    790001      3872         12            1       80)
(smt.stats   44   5969 188597 609175  6775/6476/445   13628/2994    40  324   57.89)
ramon: poll                 wall=11.000s usage=10.451s mem=60396KiB load=0.94 rootload=0.93
(smt.stats   45   6070 193369 628603  6783/6484/445   14123/2994    40  324   57.99)
(smt.stats   46   6181 196613 636191  6810/6487/445   14358/2994    40  324   57.99)
(sat.ddfw       1      1   11.2108    920001      4509         13            1       93)
(smt.stats   47   6303 199726 642437  7015/6691/446   14614/3250    41  324   57.99)
ramon: poll                 wall=12.000s usage=11.360s mem=60308KiB load=0.91 rootload=0.91
(smt.stats   48   6437 200630 647560  7024/6723/446   14847/3250    41  324   57.99)
(smt.stats   49   6584 207980 672517  7033/6734/446   15149/3250    41  324   58.41)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6745 218192 723079  7040/6741/446   15405/3250    41  324   58.51)
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 128 := 130&1047972020224
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 128 := 130&1047972020224
(smt.stats   51   6922 226033 748423  7153/6846/448   15637/3409    42  331   58.51)
ramon: poll                 wall=13.000s usage=12.340s mem=60544KiB load=0.98 rootload=0.98
(smt.stats   52   7116 233589 775131  7167/6860/449   16039/3409    42  331   58.51)
(sat.ddfw       1      1   10.5852   1060001      5196         14            1      108)
(smt.stats   53   7329 240207 796378  7258/6861/451   16444/3498    43  351   58.60)
(smt.stats   54   7563 246017 816652  7281/6970/451   17000/3498    43  351   58.70)
(smt.stats   55   7664 250896 837011  7292/6985/452   17285/3784    44  353   58.70)
ramon: poll                 wall=14.000s usage=13.342s mem=61112KiB load=1.00 rootload=1.01
(smt.stats   56   7775 256490 855682  7332/6990/452   17448/3784    44  353   58.79)
(smt.stats   57   7897 261585 873918  7440/7083/452   17723/3790    44  353   58.79)
(smt.stats   58   8031 265534 893121  7459/7140/455   17949/3852    45  379   58.93)
(smt.stats   59   8178 272794 927880  7485/7154/455   18132/3853    45  379   59.03)
ramon: poll                 wall=15.000s usage=14.359s mem=61284KiB load=1.02 rootload=1.01
(sat.ddfw       1      1   10.0449   1210001      5931         15            1      123)
(smt.stats   60   8339 276277 947451  7522/7174/455   18425/3855    45  379   59.12)
(smt.stats   61   8516 282317 983607  7548/7212/455   18894/3856    45  379   59.22)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8710 290038 1015377  7668/7236/455   19174/3858    45  379   59.31)
ramon: poll                 wall=16.000s usage=15.551s mem=61688KiB load=1.19 rootload=1.19
(smt.stats   63   8923 295090 1042038  8035/7368/455   19662/3869    45  379   59.41)
(sat.ddfw       1      1   9.63159   1370001      6715         16            1      139)
(smt.stats   64   9157 304123 1091987  8046/7727/455   20540/3869    45  379   59.41)
ramon: poll                 wall=17.000s usage=16.550s mem=62040KiB load=1.00 rootload=1.00
band: (band[59] (lshr[64] (mod #365 288230376151711744) (mod #657 64)) (if (= #663 63) 562625694248141324288 (if #665 281312847124070662144 #789))) 131072 := 164346&144115188075855872
(smt.stats   65   9414 315691 1152696  8113/7794/461   21181/4302    46  392   60.14)
(smt.stats   66   9515 318078 1168982  8119/7800/461   21404/4302    46  392   60.23)
(smt.stats   67   9626 323114 1191831  8128/7809/462   21563/4302    46  392   60.23)
(smt.stats   68   9748 330151 1225073  8129/7810/462   21791/4394    47  396   60.23)
ramon: poll                 wall=18.006s usage=17.566s mem=62276KiB load=1.01 rootload=1.01
(smt.stats   69   9882 337532 1258614  8214/7811/462   22206/4397    47  396   60.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10029 340799 1279801  8318/7944/462   22486/4398    47  396   60.33)
(sat.ddfw       1      1   9.14175   1540001      7549         17            1      156)
(smt.stats   71  10190 347127 1298243  8364/8001/462   22770/4403    47  396   60.33)
ramon: poll                 wall=19.000s usage=18.558s mem=62500KiB load=1.00 rootload=1.00
(smt.stats   72  10367 352410 1313306  8517/8052/462   23519/4409    47  396   60.42)
(smt.stats   73  10561 356119 1336111  8604/8247/462   24258/4410    47  396   60.52)
(smt.stats   74  10774 367815 1384569  8688/8369/463   25010/4671    48  420   60.71)
ramon: poll                 wall=20.000s usage=19.555s mem=63012KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:45:23 2024
ramon: root.execname        z3
ramon: root.utime           19.610s
ramon: root.stime           0.010s
ramon: group.total          19.629s
ramon: group.utime          19.617s
ramon: group.stime          0.012s
ramon: group.mempeak        63272KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              0.98
