ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:30:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41232 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Y8FQoiL6QyYG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3000291
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4071    856  1137/1016/91      91/12     3   17   19.04)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&182
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1 := 2&182
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1 := 2&182
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2 := 2&182
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 182 := 182 << 2
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2 := 2&182
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 182 := 182 << 2
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&139
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&139
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&138
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2 := 2&138
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 138 := 182 << 2
(smt.stats    1    202   5991   2504  1668/1492/109     175/13     7   29   19.33)
(smt.stats    2    313   8603   4469  1716/1517/114     294/13     8   30   19.43)
(smt.stats    3    414  11069   6663  1740/1566/118     395/35    10   34   19.43)
(smt.stats    4    525  14877   8504  1938/1744/119     507/40    11   39   19.55)
(smt.stats    5    647  18076  10809  1942/1747/119     627/41    12   41   19.55)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&4
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 4 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 2 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&2
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 2 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&2
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 1 := 2&1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 2 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&2
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 0 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 2 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&2
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 1 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 2 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&2
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 1 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1 := 1&136
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&136
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 136 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 1&136
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 136 := 1 << 1
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1 := 1&2
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    751  19530  12914  2005/1809/153     723/46    14   52   19.64)
(smt.stats    7    863  22299  17152  2252/2029/158     836/76    16   53   19.85)
(smt.stats    8    985  24687  19990  2269/2044/161     951/76    17   57   19.85)
(smt.stats    9   1119  28373  23196  2278/2051/162    1082/82    18   62   19.85)
(smt.stats   10   1220  31933  27356  2297/2060/163    1190/84    19   65   19.85)
(smt.stats   11   1331  34988  30437  2333/2068/169    1304/109    21   73   19.96)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1453  36712  34050  2415/2187/170    1448/118    22   74   20.06)
(smt.stats   13   1587  39663  38645  2442/2191/170    1599/118    22   74   20.06)
(smt.stats   14   1734  42734  44685  2469/2224/170    1747/120    22   74   20.20)
(smt.stats   15   1835  43910  46810  2482/2251/170    1863/120    22   74   20.20)
(smt.stats   16   1946  45959  50552  2489/2255/170    1973/121    22   74   20.20)
(smt.stats   17   2068  48386  54279  2493/2266/178    2071/145    23   98   20.20)
(smt.stats   18   2202  51432  60208  2497/2270/178    2204/145    23   98   20.20)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8796093022208 := 8796093022208&21990232556072
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 8796093022208&21990232556072
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 92358976733736 := 21990232556234 << 44
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8796093022208 := 8796093022208&21990232556072
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8796093022207 := 8796093022208&21990232556072
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8796093022208 := 8796093022208&21990232556072
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8796093022207 := 8796093022208&21990232556072
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8796093022206 := 8796093022208&21990232556072
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8796093022204 := 8796093022208&21990232556072
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 8796093022208&21990232556072
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 92358976733736 := 21990232556234 << 44
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 8796093022208&21990232556072
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 92358976733736 := 21990232556234 << 44
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 8796093022208&21990232556076
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 92358976733740 := 21990232556234 << 44
(smt.stats   19   2349  53429  63814  2591/2273/178    2362/152    23   98   20.40)
(smt.stats   20   2510  55625  67670  2656/2418/189    2542/156    24  100   20.40)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 8796093022208&0
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 23 := 44 << 44
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 8796093022208&0
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 21 := 44 << 44
(smt.stats   21   2611  57314  71852  2685/2428/189    2654/157    25  102   20.40)
ramon: poll                 wall=1.000s usage=0.976s mem=21588KiB load=0.98 rootload=0.96
(smt.stats   22   2722  59564  78315  2700/2466/195    2767/161    26  107   20.40)
(smt.stats   23   2844  63638  84874  2713/2472/195    2894/164    27  107   20.65)
(smt.stats   24   2978  67010  90265  2720/2485/195    3035/164    27  107   20.65)
(smt.stats   25   3125  72575  97312  2722/2486/195    3192/164    27  107   20.65)
(smt.stats   26   3286  79877 105382  2733/2494/195    3360/164    27  107   20.65)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&64
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 0 := 17592186044432 << 2
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&64
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 0 := 17592186044432 << 2
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1 := 2&64
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2 := 2&64
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2 := 2&64
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1 := 2&64
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2 := 2&64
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1 := 2&64
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&64
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 2 := 64&2
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&64
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 2 := 64&2
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&64
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 2 := 64&2
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&64
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 1 := 64&2
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2&64
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 1 := 64&2
(smt.stats   27   3463  84130 113368  2792/2555/216    3550/189    28  112   20.65)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8 := 8&8
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 105553116266504 := 4 << 4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8 := 8&9
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 105553116266505 := 4 << 4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8 := 8&9
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 105553116266505 := 4 << 4
(smt.stats   28   3564  85245 116210  2821/2563/217    3654/193    29  123   20.75)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 3 := 4&3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 3 := 4&3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 3 := 4&3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&3
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 105553116266499 := 3 << 3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&3
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 140737488355331 := 3 << 3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&3
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 140737488355331 := 3 << 3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&24
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 3 := 3 << 3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&24
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 3 := 3 << 3
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 8&64
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 5 := 4 << 4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 8&64
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 5 := 4 << 4
(smt.stats   29   3677  87003 120601  2896/2645/239    3784/196    29  123   20.95)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1 := 4&24
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&24
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 4 := 24&4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&24
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 4 := 24&4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&24
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 4 := 24&4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&24
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 4 := 24&4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&24
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 4 := 24&4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&24
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 2 := 24&4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4&24
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 2 := 24&4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 4 := 4&24
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 4 := 4&24
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 4 := 4&24
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 4 := 4&24
(smt.stats   30   3799  88053 126292  2921/2671/266    3916/205    30  135   21.24)
(smt.stats   31   3933  88580 129421  2961/2701/266    4065/205    30  135   21.24)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4080  92688 137497  3003/2736/281    4255/210    31  137   21.43)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 387028092977153 := 5 << 5
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 4 := 16&4
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&4
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 738871813865476 := 5 << 5
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&4
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 738871813865476 := 5 << 5
(smt.stats   33   4241  97219 144836  3033/2737/281    4479/242    32  170   21.53)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 16 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 16 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 16 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 16 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 16 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 16 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8 := 16&160
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&160
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 183 := 5 << 5
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&160
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 183 := 5 << 5
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&160
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 8 := 160&16
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&160
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 8 := 160&16
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&160
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 8 := 160&16
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&160
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 8 := 160&16
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&160
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 16 := 160&16
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&160
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 16 := 160&16
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 16&160
band: (band[45] (shl[45] (bv2int %0) (mod #110 45)) (if (= #595 44) 1 (if #597 2 #683))) 16 := 160&16
(smt.stats   34   4418 100359 151438  3137/2863/341    4736/272    33  185   21.63)
(smt.stats   35   4612 106976 163615  3163/2886/343    4951/275    33  185   21.73)
(smt.stats   36   4713 116406 175675  3164/2889/343    5036/289    34  202   21.73)
(smt.stats   37   4824 120868 182086  3195/2889/343    5182/294    34  202   22.02)
ramon: poll                 wall=2.000s usage=1.974s mem=23292KiB load=1.00 rootload=1.00
(smt.stats   38   4946 122988 188095  3218/2943/346    5352/305    35  206   22.02)
(smt.delete-inactive-clauses  :num-deleted-clauses 42)
(smt.stats   39   5080 127553 197143  3220/2945/346    5500/305    35  206   22.02)
(smt.stats   40   5227 133453 208036  3289/3004/347    5701/334    36  207   22.02)
(smt.stats   41   5388 138413 218068  3404/3022/347    5925/336    36  207   22.13)
(smt.stats   42   5565 143238 227529  3417/3141/347    6172/338    36  207   22.23)
(smt.stats   43   5759 149848 238285  3451/3163/349    6362/369    37  213   22.32)
(smt.stats   44   5972 157373 255989  3479/3200/351    6671/372    37  213   22.32)
ramon: poll                 wall=3.000s usage=2.972s mem=23632KiB load=1.00 rootload=1.00
(smt.stats   45   6073 161707 266881  3526/3225/351    6870/397    38  217   22.42)
(smt.stats   46   6184 164427 271024  3610/3264/351    7073/407    38  217   22.42)
(smt.stats   47   6306 170973 286072  3670/3352/351    7302/412    38  217   22.42)
(smt.stats   48   6441 176648 298664  3682/3399/352    7534/511    39  220   22.51)
(smt.stats   49   6588 180189 305030  3714/3425/352    7775/512    39  220   22.51)
(smt.stats   50   6749 184607 318929  3720/3433/353    8029/512    39  220   22.51)
(smt.stats   51   6926 189456 333520  3731/3444/358    8285/553    40  221   22.78)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7120 193856 344531  3908/3448/358    8673/564    40  221   23.17)
ramon: poll                 wall=4.000s usage=3.972s mem=24712KiB load=1.00 rootload=1.00
(smt.stats   53   7333 197533 358961  4114/3827/360    8974/636    41  272   23.39)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2048&4
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 105553116266500 := 12 << 12
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2048&9
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 105553116266505 := 12 << 12
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2048&9
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 281474976710665 := 12 << 12
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 2048&9
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 246290604621833 := 12 << 12
(smt.stats   54   7567 201246 374014  4288/3983/366    9592/688    42  324   23.48)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4096&9
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 281474976710665 := 13 << 13
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4096&9
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 246290604621833 := 13 << 13
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4096&9
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 140737488355337 := 13 << 13
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4398046511104&9
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 175921860444169 := 43 << 43
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4398046511104&20
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 175921860444180 := 43 << 43
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 0 := 4398046511104&20
shl: (shl[64] (bv2int %0) (mod (+ #110 #881) 64)) 175921860444180 := 43 << 43
(smt.stats   55   7668 203890 382822  4340/4011/366    9873/690    42  324   23.58)
(smt.stats   56   7779 207018 393372  4403/4078/376   10062/692    42  324   23.58)
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 160 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 160 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 160 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 160 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 160 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 192 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 192 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2048 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 4096 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8192 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 16384 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 32768 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 65536 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 131072 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 262144 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 524288 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1048576 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2097152 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 4194304 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8388608 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 16777216 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 33554432 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 67108864 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 134217728 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 268435456 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 536870912 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1073741824 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2147483648 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 4294967296 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8589934592 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 17179869184 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 34359738368 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 68719476736 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 137438953472 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 274877906944 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 549755813888 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 1099511627776 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 2199023255552 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8320 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8320 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8448 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8704 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 8704 := 4398046511104&26388279066624
band: (band[45] (if (or #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 ...) 0 (if #719 1 #805)) (shl[64] (bv2int %0) (mod #882 64))) 9216 := 4398046511104&26388279066624
(smt.stats   57   7901 208720 398998  4678/4316/543   10251/769    43  326   24.69)
(smt.stats   58   8035 211603 409293  4685/4355/582   10654/769    43  326   24.89)
ramon: poll                 wall=5.000s usage=4.972s mem=26456KiB load=1.00 rootload=1.00
(smt.stats   59   8182 218856 420934  4807/4363/582   10995/772    43  326   24.98)
(smt.stats   60   8343 226035 431423  5083/4553/582   11285/949    44  402   25.08)
ramon: poll                 wall=6.000s usage=5.972s mem=26688KiB load=1.00 rootload=0.99
(smt.stats   61   8520 230250 444861  5245/4831/582   11777/955    44  402   25.17)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8714 238568 467145  5424/5118/583   12252/1126    45  409   25.27)
(smt.stats   63   8927 247596 485492  5450/5144/583   12745/1126    45  409   25.36)
(smt.stats   64   9161 253943 504684  5477/5167/585   13329/1267    46  411   25.46)
(smt.stats   65   9418 260354 532681  5530/5214/586   14280/1329    47  417   25.65)
(smt.stats   66   9519 262013 540330  5532/5216/586   14431/1329    47  417   25.75)
(smt.stats   67   9630 265603 553794  5534/5218/586   14694/1329    47  417   25.75)
(smt.stats   68   9752 268796 566862  5543/5226/586   15036/1329    47  417   25.75)
ramon: poll                 wall=7.003s usage=6.973s mem=27188KiB load=1.00 rootload=1.01
(smt.stats   69   9886 274004 585362  5553/5234/588   15228/1411    48  426   25.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10033 275807 598568  5590/5268/589   15668/1411    48  426   25.84)
(smt.stats   71  10194 282701 618199  5592/5270/589   15875/1411    48  426   26.33)
(smt.stats   72  10371 290488 658074  5599/5277/590   16182/1527    49  438   26.33)
(smt.stats   73  10565 294406 675874  5609/5284/590   16527/1538    50  450   26.42)
(smt.stats   74  10778 297889 691241  5655/5323/590   16858/1538    50  450   26.52)
(smt.stats   75  11012 302473 713626  5675/5339/591   17586/1538    50  450   26.61)
ramon: poll                 wall=8.000s usage=7.970s mem=28332KiB load=1.00 rootload=0.99
(smt.stats   76  11269 310921 741807  5772/5343/591   18346/1596    51  459   27.19)
(smt.stats   77  11551 320849 777494  5959/5621/595   19302/1638    52  461   27.19)
(smt.stats   78  11652 327368 801383  5960/5624/595   19446/1638    52  461   27.19)
(smt.stats   79  11763 332687 814386  5975/5639/597   19720/1739    53  479   27.29)
(smt.stats   80  11885 337762 827976  5983/5647/597   20061/1739    53  479   27.39)
ramon: poll                 wall=9.003s usage=8.971s mem=28900KiB load=1.00 rootload=1.00
(smt.stats   81  12019 339724 836954  5994/5655/597   20262/1739    53  479   27.39)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   82  12166 341350 857815  5997/5661/597   20552/1739    53  479   27.48)
(smt.stats   83  12327 347727 876037  6009/5662/597   20906/1740    53  479   27.48)
(smt.stats   84  12504 354248 902732  6010/5674/597   21344/1740    53  479   27.48)
ramon: poll                 wall=10.000s usage=9.969s mem=29108KiB load=1.00 rootload=1.00
(smt.stats   85  12698 361073 928284  6088/5745/598   21941/2133    54  479   27.58)
(smt.stats   86  12911 363594 941305  6404/5752/598   22463/2137    54  479   27.67)
(smt.stats   87  13145 370946 968323  6467/6131/598   22964/2137    54  479   27.77)
ramon: poll                 wall=11.000s usage=10.968s mem=29352KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   88  13402 383168 1026024  6489/6153/598   23595/2137    54  479   27.86)
(smt.stats   89  13684 395264 1055620  6571/6175/598   24643/2143    54  479   28.06)
ramon: poll                 wall=12.000s usage=11.968s mem=29864KiB load=1.00 rootload=1.00
(smt.stats   90  13994 406203 1087982  6739/6269/598   25429/2150    54  479   28.25)
(smt.stats   91  14095 409743 1102397  6756/6414/598   25757/2150    54  479   28.25)
(smt.stats   92  14207 414250 1123547  6772/6430/598   26006/2150    54  479   28.25)
(smt.stats   93  14329 422130 1156180  6784/6442/598   26238/2150    54  479   28.25)
(smt.stats   94  14463 425498 1178494  6786/6444/599   26527/2650    55  500   28.36)
(smt.stats   95  14610 432591 1200424  6790/6448/599   26768/2650    55  500   28.36)
ramon: poll                 wall=13.000s usage=12.968s mem=30020KiB load=1.00 rootload=1.00
(smt.stats   96  14771 441876 1249599  6799/6449/599   27284/2651    55  500   28.46)
(smt.stats   97  14948 447602 1289511  6822/6462/599   27852/2652    55  500   28.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 23)
(smt.stats   98  15142 453005 1304702  6880/6498/600   28340/2948    56  500   28.75)
(smt.stats   99  15355 458420 1339726  6884/6542/600   28701/2948    56  500   28.85)
ramon: poll                 wall=14.003s usage=13.969s mem=30348KiB load=1.00 rootload=1.00
(smt.stats  100  15589 463921 1366205  6939/6582/602   29060/2949    56  500   28.85)
(smt.stats  101  15846 470986 1420641  6982/6612/602   29620/2949    56  500   28.94)
ramon: poll                 wall=15.000s usage=14.966s mem=30688KiB load=1.00 rootload=1.00
(smt.stats  102  16128 483218 1475092  7079/6647/603   30304/3017    57  522   29.03)
ramon: poll                 wall=16.000s usage=15.966s mem=31032KiB load=1.00 rootload=1.00
(smt.stats  103  16438 498288 1517778  7409/6785/603   31671/3028    57  522   29.32)
ramon: poll                 wall=17.003s usage=16.967s mem=31092KiB load=1.00 rootload=1.00
(smt.stats  104  16778 510828 1588063  7488/7092/606   32463/3225    58  530   29.41)
(smt.stats  105  16879 516182 1618562  7492/7149/606   32660/3225    58  530   29.41)
(smt.stats  106  16990 521193 1646412  7507/7151/606   32865/3317    59  533   29.41)
(smt.stats  107  17112 526459 1680561  7526/7170/606   33033/3317    59  533   29.51)
ramon: poll                 wall=18.000s usage=17.964s mem=31272KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  108  17246 530832 1698926  7644/7188/606   33303/3318    59  533   29.61)
(smt.stats  109  17393 534815 1728014  7684/7317/606   33519/3318    59  533   29.61)
ramon: poll                 wall=19.000s usage=18.951s mem=31356KiB load=0.99 rootload=0.98
(smt.stats  110  17554 539024 1763565  7725/7382/607   34298/3453    60  533   29.70)
(smt.stats  111  17731 547603 1816505  7753/7394/607   34804/3458    60  533   29.80)
(smt.stats  112  17925 552674 1841289  7847/7423/607   35318/3458    60  533   29.80)
ramon: poll                 wall=20.000s usage=19.951s mem=31504KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:30:21 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.960s
ramon: group.utime          19.948s
ramon: group.stime          0.012s
ramon: group.mempeak        31760KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
