ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:58:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24797 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/nKZ2S5K5WCXI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             148344
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4212    498  1149/1033/111      95/15     7   18   19.16)
(smt.stats    1    202   5501   1298  1785/1627/112     207/27     8   23   19.26)
(smt.stats    2    313   8981   2926  1818/1655/115     334/43    10   25   19.36)
(smt.stats    3    414  11007   8421  1986/1790/115     443/45    10   25   19.45)
(smt.stats    4    525  12276   9817  2271/1858/118     557/81    12   28   19.65)
(smt.stats    5    647  14051  11338  2446/2232/118     679/81    12   28   19.65)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1099511627776 := 1099511627776&4398046511099
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 8796093022203 := 8796093022204 << 40
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1099511627776 := 1099511627776&4398046511099
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 8796093022203 := 8796093022204 << 40
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1099511627776 := 1099511627776&4398046511099
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 8796093022203 := 8796093022204 << 40
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1099511627776 := 1099511627776&4398046511099
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 8796093022203 := 8796093022204 << 40
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1099511627776 := 1099511627776&2199023255552
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1099511627775 := 1099511627776&2199023255552
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1099511627774 := 1099511627776&2199023255552
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 4 := 1099511627776&50331645
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 4 := 1099511627776&50331645
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 8 := 1099511627776&8
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 16 := 1099511627776&16
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 32 := 1099511627776&32
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 16 := 1099511627776&16
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 32 := 1099511627776&32
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 64 := 1099511627776&64
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 128 := 1099511627776&128
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 256 := 1099511627776&256
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 512 := 1099511627776&512
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1024 := 1099511627776&1024
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 2048 := 1099511627776&2048
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 4096 := 1099511627776&4096
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 8192 := 1099511627776&8192
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 8192 := 1099511627776&8192
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 2048 := 1099511627776&2048
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 16384 := 1099511627776&16384
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 32768 := 1099511627776&32768
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 65536 := 1099511627776&65536
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 131072 := 1099511627776&131072
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 131072 := 1099511627776&131072
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 262144 := 1099511627776&262144
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 524288 := 1099511627776&524288
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1048576 := 1099511627776&1048576
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 2097152 := 1099511627776&2097152
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 4194304 := 1099511627776&4194304
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 8388608 := 1099511627776&8388608
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 16777216 := 1099511627776&16777216
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 4194304 := 1099511627776&4194304
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 8388608 := 1099511627776&8388608
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 16777216 := 1099511627776&16777216
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 33554432 := 1099511627776&33554432
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14546  12148  2676/2287/140     880/106    13   28   20.25)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 35 := 1099511627776&35
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 34 := 1099511627776&34
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 32 := 1099511627776&32
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 32 := 1099511627776&32
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 64 := 1099511627776&64
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 512 := 1099511627776&512
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 2048 := 1099511627776&2048
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 65536 := 1099511627776&65536
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 32768 := 1099511627776&32768
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 1024 := 1099511627776&1024
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 4096 := 1099511627776&4096
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 8192 := 1099511627776&8192
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 256 := 1099511627776&256
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 128 := 1099511627776&128
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 128 := 1099511627776&128
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 128 := 1099511627776&128
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 128 := 1099511627776&128
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 16384 := 1099511627776&16384
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 16384 := 1099511627776&16384
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 16384 := 1099511627776&16384
(smt.stats    7    859  16408  17182  2754/2496/318    1128/216    14   68   20.34)
(smt.stats    8    981  18243  20835  3048/2752/319    1343/258    16   79   20.73)
(smt.stats    9   1115  19587  24802  3327/2897/319    1563/263    16   79   20.83)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 9707520 := 2199023255552&9707521
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 9707520 := 2199023255552&9707521
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 9707520 := 2199023255552&9707521
(smt.stats   10   1216  21266  31542  3556/3332/321    1758/323    17   80   20.92)
(smt.stats   11   1327  22553  33238  3933/3409/321    1988/342    18   80   20.92)
(smt.stats   12   1449  24372  38468  4123/3804/321    2308/343    18   80   21.02)
(smt.stats   13   1583  29013  58062  4217/3998/324    3566/679    20   83   21.32)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 3 := 32768&3
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 3 := 32768&3
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 32768&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 8796093022208 := 48 << 15
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 32768&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 8796093022208 := 48 << 15
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 32768&1103806660608
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 25 := 2199040098305 << 16
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 32768&1103806660608
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 25 := 2199040098305 << 16
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 32768&1103806660608
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 25 := 2199040098305 << 16
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 32768&1103806660608
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 0 := 2199040098305 << 16
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 32768&1134005583872
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 0 := 2199040559104 << 16
ramon: poll                 wall=1.000s usage=0.930s mem=23280KiB load=0.93 rootload=0.92
(smt.stats   14   1730  30256  66321  4280/4039/344    3909/905    22   94   21.82)
(smt.stats   15   1831  32516  78895  4720/4485/344    4080/905    22   94   21.82)
(smt.stats   16   1942  34541  86903  4758/4533/355    4336/905    23   97   21.92)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   17   2064  37182 103680  4816/4572/362    5363/1395    25  138   22.02)
(smt.stats   18   2198  37690 104321  4859/4630/362    5496/1395    25  138   22.31)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 169476608 := 2199023255552&4301062145
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 169476608 := 2199023255552&4301062145
(smt.stats   19   2345  39286 112624  5422/5160/362    5772/1416    25  138   22.31)
(smt.stats   20   2506  41059 126754  5487/5234/367    6476/1458    26  143   22.41)
(smt.stats   21   2607  42615 130481  5624/5271/367    6626/1479    27  163   22.41)
(smt.stats   22   2718  44545 135858  5748/5403/367    6751/1479    27  163   22.41)
(smt.stats   23   2840  44850 136527  5865/5635/367    6884/1479    27  163   22.62)
(smt.stats   24   2974  45345 138477  6423/6126/367    7038/1479    27  163   22.73)
ramon: poll                 wall=2.000s usage=1.927s mem=24292KiB load=1.00 rootload=1.00
(smt.stats   25   3121  47279 147796  6863/6514/367    7307/1480    27  163   22.83)
(smt.stats   26   3282  50270 172899  6951/6669/367    7840/1481    27  163   22.83)
(smt.stats   27   3459  54453 211758  6980/6755/369   10134/2043    29  169   23.13)
(smt.stats   28   3560  55872 224311  6983/6758/369   10631/2043    29  169   23.23)
(smt.stats   29   3671  62492 258180  6987/6762/371   11322/2347    30  176   23.36)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 7 := 2199023255552&1099511627775
(smt.stats   30   3793  67379 300938  6998/6764/371   11479/2404    31  184   23.36)
(smt.stats   31   3927  69944 308934  7012/6787/376   11661/2426    32  185   23.36)
(smt.stats   32   4074  71939 318203  7081/6791/376   11912/2428    32  185   23.36)
(smt.stats   33   4235  74200 333030  7155/6876/378   12396/2473    33  185   23.55)
ramon: poll                 wall=3.000s usage=2.924s mem=24968KiB load=1.00 rootload=1.00
(smt.stats   34   4412  76870 356777  7475/6982/378   12988/2484    33  185   23.64)
(smt.stats   35   4606  80029 371348  7540/7279/378   13312/2926    34  197   23.74)
(smt.stats   36   4707  81621 382520  7595/7335/378   13635/2926    34  197   23.74)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   37   4818  83631 413595  7597/7372/378   13746/2926    34  197   23.74)
(smt.stats   38   4940  86183 448683  7609/7384/380   14049/3026    35  211   23.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 288)
(smt.stats   39   5074  89162 453689  7614/7389/380   13936/3026    35  211   23.74)
(smt.stats   40   5221  95551 506223  7641/7397/380   14115/3026    35  211   23.96)
(smt.stats   41   5382  99357 547909  7654/7421/380   14279/3026    35  211   23.96)
ramon: poll                 wall=4.000s usage=3.921s mem=25592KiB load=1.00 rootload=0.99
(smt.stats   42   5559 101964 565926  7689/7436/380   14573/3027    35  211   23.96)
(smt.stats   43   5753 107102 605804  7705/7472/380   14829/3027    35  211   23.96)
(smt.stats   44   5966 115165 689153  7711/7486/380   15048/3027    35  211   23.96)
(smt.stats   45   6067 117053 713970  7716/7491/380   15171/3027    35  211   23.96)
(smt.stats   46   6178 119472 729042  7722/7493/380   15285/3027    35  211   23.96)
(smt.stats   47   6300 121925 757683  7724/7499/380   15476/3027    35  211   23.96)
(smt.stats   48   6434 125453 788589  7729/7504/380   15771/3027    35  211   24.05)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 145738067238453249 := 4444888629302 << 7
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 145733669191942145 := 4444888629432 << 7
(smt.stats   49   6581 128926 800398  7760/7509/380   15953/3029    35  211   24.05)
(smt.stats   50   6742 132206 815611  7838/7550/385   16181/3339    36  212   24.15)
(smt.stats   51   6919 134364 823668  7902/7623/385   16563/3339    36  212   24.15)
(smt.stats   52   7113 136914 831787  7918/7687/387   16839/3368    37  212   24.15)
ramon: poll                 wall=5.000s usage=4.917s mem=25600KiB load=1.00 rootload=0.99
(smt.stats   53   7326 140497 860523  7986/7703/387   17072/3370    37  212   24.24)
(smt.stats   54   7560 145611 888710  8122/7893/388   17830/3390    38  216   24.34)
(smt.stats   55   7661 147370 910550  8125/7898/390   17993/3520    39  218   24.34)
(smt.stats   56   7772 149665 944572  8126/7899/390   18106/3520    39  218   24.34)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   57   7894 152471 976972  8128/7901/390   18216/3569    40  231   24.48)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 32&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 288234774198222848 := 134348986 << 5
(smt.stats   58   8028 153840 987086  8194/7967/396   18366/3580    41  233   24.48)
(smt.stats   59   8175 156212 1011781  8220/7992/396   18521/3580    41  233   24.72)
(smt.stats   60   8336 158159 1024564  8222/7994/396   18691/3580    41  233   24.72)
(smt.stats   61   8513 160899 1059077  8332/7995/398   18946/3638    42  250   24.72)
(smt.stats   62   8707 162613 1074510  8493/8125/398   19154/3638    42  250   24.72)
ramon: poll                 wall=6.000s usage=5.914s mem=26352KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 165998 1136566  8560/8313/398   19397/3638    42  250   24.82)
(smt.stats   64   9154 168461 1157426  8599/8346/398   19640/3638    42  250   24.82)
(smt.stats   65   9411 173937 1198281  8613/8379/398   19897/3638    42  250   24.82)
(smt.stats   66   9512 175092 1220764  8615/8387/398   20017/3638    42  250   24.82)
(smt.stats   67   9623 178058 1260893  8621/8393/398   20124/3638    42  250   24.82)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 2097152&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 2450164905475571713 := 0 << 21
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 2097152&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 2450164905475571713 := 0 << 21
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 2097152&4194304
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 0 := 69927436289 << 22
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 2097152&4194304
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 0 := 69927436289 << 22
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 2097152&4194304
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 0 := 70061654017 << 22
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 0 := 2097152&4194304
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #110))) 0 := 70061654017 << 22
(smt.stats   68   9745 179686 1274656  8727/8426/404   20265/3721    43  253   24.92)
(smt.stats   69   9879 181485 1286802  8851/8610/412   20400/3721    43  253   25.01)
(smt.delete-inactive-clauses  :num-deleted-clauses 21)
(smt.stats   70  10026 184312 1312088  8860/8617/413   20545/3721    43  253   25.01)
(smt.stats   71  10187 184750 1313813  8869/8626/413   20693/3732    44  267   25.33)
(smt.stats   72  10364 186400 1321170  9893/9399/413   20922/3733    44  267   25.33)
ramon: poll                 wall=7.000s usage=6.910s mem=26892KiB load=1.00 rootload=1.00
(smt.stats   73  10558 188587 1340529 10422/9770/413   21131/3733    44  267   25.42)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   74  10771 191055 1368952 10601/10276/413   21347/3733    44  267   25.66)
(smt.stats   75  11005 192732 1388494 11252/10859/413   21597/3733    44  267   25.85)
(smt.stats   76  11262 194176 1405140 11980/11607/413   21875/3733    44  267   26.15)
(smt.stats   77  11544 194963 1407964 12785/12412/413   22171/3733    44  267   26.44)
(smt.stats   78  11645 196684 1432467 13682/13323/413   22295/3733    44  267   26.44)
(smt.stats   79  11756 197371 1439614 13799/13502/413   22411/3733    44  267   26.53)
(smt.stats   80  11878 198251 1450744 14149/13862/413   22546/3733    44  267   26.63)
ramon: poll                 wall=8.000s usage=7.908s mem=28168KiB load=1.00 rootload=0.99
(smt.stats   81  12012 199828 1466728 14546/14261/413   22693/3733    44  267   26.63)
(smt.stats   82  12159 202674 1517870 14576/14336/413   22866/3733    44  267   26.73)
(smt.stats   83  12320 206987 1577592 14579/14336/413   23051/3733    44  267   26.73)
(smt.stats   84  12691 217936 1704441 14676/14350/413   24505/3734    44  267   26.83)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 275272171520 := 1099511627776&275272171520
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 275267977216 := 1099511627776&275267977216
(smt.stats   85  12904 221453 1731206 14848/14479/413   25019/3736    44  267   27.02)
ramon: poll                 wall=9.000s usage=8.905s mem=28672KiB load=1.00 rootload=1.00
(smt.stats   86  13138 225619 1788554 14855/14613/425   25712/4431    45  269   27.12)
(smt.stats   87  13395 229238 1829209 15122/14665/426   26259/4522    46  278   27.31)
(smt.stats   88  13677 233569 1877323 15216/14912/426   26607/4523    46  278   27.40)
ramon: poll                 wall=10.000s usage=9.901s mem=29184KiB load=1.00 rootload=0.99
(smt.stats   89  13987 237943 1933626 15482/15240/427   27034/4738    48  278   27.40)
(smt.stats   90  14088 239925 1950901 15483/15241/427   27153/4738    48  278   27.40)
(smt.stats   91  14199 241303 1979702 15483/15241/427   27284/4738    48  278   27.40)
(smt.stats   92  14321 244477 2034614 15484/15242/428   27915/4761    49  281   27.55)
(smt.stats   93  14455 245046 2051542 15485/15243/428   28056/4761    49  281   27.55)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   94  14602 247818 2124261 15488/15246/428   28985/4761    49  281   27.65)
(smt.stats   95  14763 249368 2140712 15489/15247/428   29212/4761    49  281   27.74)
(smt.stats   96  14940 252533 2200704 15494/15252/428   29453/4761    49  281   27.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 110)
(smt.stats   97  15134 256346 2216124 15498/15257/430   29548/5016    50  282   27.74)
ramon: poll                 wall=11.000s usage=10.897s mem=29484KiB load=1.00 rootload=1.00
(smt.stats   98  15347 264668 2394744 15501/15260/431   29801/5039    51  291   27.74)
(smt.stats   99  15581 269072 2435756 15512/15262/432   30261/5213    52  302   27.84)
(smt.stats  100  15838 273156 2500085 15516/15275/432   30597/5213    52  302   27.84)
(smt.stats  101  16120 276177 2560508 15524/15283/434   30927/5254    54  311   28.06)
ramon: poll                 wall=12.000s usage=11.893s mem=29780KiB load=1.00 rootload=1.00
(smt.stats  102  16430 281978 2670466 15635/15370/436   31389/5261    55  312   28.15)
(smt.stats  103  16770 283729 2737004 15640/15375/436   31737/5261    55  312   28.55)
(smt.stats  104  16871 284621 2759782 15641/15376/437   32296/5333    56  320   28.65)
(smt.stats  105  16982 285612 2780159 15646/15381/441   32555/5333    56  320   28.65)
(smt.stats  106  17104 288270 2821918 15646/15381/441   32826/5333    56  320   28.65)
(smt.stats  107  17238 289645 2850872 15654/15388/441   33060/5451    57  329   28.65)
(smt.stats  108  17385 292019 2890290 15676/15406/442   33338/5540    58  338   28.74)
(smt.stats  109  17546 293469 2922184 15697/15427/443   33707/5540    58  338   28.74)
ramon: poll                 wall=13.000s usage=12.890s mem=30484KiB load=1.00 rootload=0.99
(smt.stats  110  17723 295358 2974494 15698/15428/444   34135/5613    59  346   28.84)
(smt.stats  111  17917 297980 3018576 15702/15430/446   34743/5627    60  353   28.84)
(smt.stats  112  18130 301783 3058520 15730/15445/447   35124/5632    60  353   28.94)
(smt.stats  113  18364 304930 3145959 15771/15467/447   35357/5686    61  357   28.94)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  114  18621 308919 3239495 15798/15528/449   36071/5716    62  369   29.03)
ramon: poll                 wall=14.000s usage=13.887s mem=30828KiB load=1.00 rootload=1.00
(smt.stats  115  18903 318139 3403904 15802/15532/450   37821/6349    63  396   29.13)
(smt.stats  116  19213 320570 3422601 16690/15532/450   38446/6349    63  396   29.51)
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 2199023255552 := 2199023255552&3298534883327
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 544258255749119 := 4379658682370 << 41
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 2199023255552 := 2199023255552&3298534883327
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 544258255749119 := 4379658682370 << 41
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 2199023255552 := 2199023255552&3298534883327
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 544258255749119 := 4379658682864 << 41
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 2199023255552 := 2199023255552&3298534883327
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 544258255749119 := 4379658682864 << 41
band: (band[42] (if (= #336 63) 1 (if #564 2 #738)) (shl[64] (* 2 #317) (mod #753 64))) 2199023255552 := 2199023255552&3298534883327
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #745 #749) 64)) 544258255749119 := 4379658682864 << 41
(smt.stats  117  19553 323079 3440769 17180/16712/450   38879/6351    63  396   29.51)
ramon: poll                 wall=15.000s usage=14.884s mem=31308KiB load=1.00 rootload=1.00
(smt.stats  118  19926 332755 3623544 17284/16938/455   39831/6353    63  396   29.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 19)
(smt.stats  119  20027 335348 3644826 17345/17069/455   40160/6674    64  397   29.74)
(smt.stats  120  20138 338191 3683722 17373/17095/456   40326/6674    64  397   29.74)
(smt.stats  121  20260 341062 3721934 17434/17107/456   40540/6675    64  397   29.84)
ramon: poll                 wall=16.000s usage=15.881s mem=31680KiB load=1.00 rootload=0.99
(smt.stats  122  20394 342619 3749184 17458/17176/456   40767/6817    65  404   29.84)
(smt.stats  123  20541 345111 3800429 17492/17198/456   41156/6818    65  404   30.02)
(smt.stats  124  20702 346238 3832284 17557/17240/456   41463/6818    65  404   30.02)
(smt.stats  125  20879 347382 3854701 17744/17301/456   41790/6819    65  404   30.12)
(smt.stats  126  21073 349893 3888301 17815/17520/456   42007/6819    65  404   30.12)
(smt.stats  127  21286 352372 3918387 18017/17558/456   42407/6820    65  404   30.12)
ramon: poll                 wall=17.000s usage=16.878s mem=31904KiB load=1.00 rootload=1.00
(smt.stats  128  21520 356695 3958221 18373/17773/456   42755/6821    65  404   30.21)
(smt.stats  129  21777 366381 4084784 18616/18156/456   43562/6835    65  404   30.50)
ramon: poll                 wall=18.000s usage=17.875s mem=32268KiB load=1.00 rootload=1.00
(smt.stats  130  22059 367619 4092902 18972/18385/456   43989/6845    65  404   30.98)
ramon: poll                 wall=19.000s usage=18.863s mem=32708KiB load=0.99 rootload=0.98
(smt.stats  131  22369 369330 4097423 19934/19436/456   44367/6854    65  404   31.08)
ramon: poll                 wall=20.000s usage=19.860s mem=32976KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:58:39 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.010s
ramon: group.total          19.930s
ramon: group.utime          19.914s
ramon: group.stime          0.016s
ramon: group.mempeak        33232KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              0.99
