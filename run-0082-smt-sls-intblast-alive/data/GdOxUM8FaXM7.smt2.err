ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:06:41 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28747 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/GdOxUM8FaXM7.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             724992
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3330    273  1258/1116/96      98/13     3   19   51.97)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   80.6452     10000        49          0            1        2)
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1 := 1023&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 1 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1 := 1023&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 1 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1 := 1023&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 1 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 0 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 0 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1023 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1022 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1020 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 8 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 16 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 32 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 64 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 128 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 256 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 512 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 2 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
(smt.stats    1    202   6491   1091  1971/1788/149     198/31     6   33   52.27)
(smt.stats    2    313  11421   2512  2289/2062/151     304/38     8   35   52.46)
(smt.stats    3    414  16486   5289  2491/2257/156     400/45     9   35   52.59)
(sat.ddfw       1      1   41.3264     20001        98          1            1        3)
(smt.stats    4    525  17357   6563  2616/2363/158     494/58    10   45   52.69)
(sat.ddfw       1      1    41.841     40001       196          2            1        5)
(sat.ddfw       1      1   36.0144     70001       343          3            1        8)
(smt.stats    5    647  19863   8264  2732/2481/161     621/67    11   49   52.88)
ramon: poll                 wall=1.000s usage=0.936s mem=55236KiB load=0.94 rootload=0.93
(sat.ddfw       1      1   30.6044    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  21966  10324  2852/2505/161     729/76    11   49   52.98)
(smt.stats    7    859  25861  13189  2899/2633/161     856/88    12   51   52.98)
(smt.stats    8    981  29016  16324  2918/2664/162     967/94    13   53   53.18)
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&484512
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80897
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80897
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80901
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80900
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80897
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 2 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 2 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 2 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&81920
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&98304
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&98304
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&131072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 131072 := 105553116266654 << 16
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&98304
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&131072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 131072 := 105553116266654 << 16
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&131072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 131072 := 105553116266654 << 16
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&112640
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&98304
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&131072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 131072 := 105553116266654 << 16
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 52776558133326 := 52776558133327 << 17
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 52776558133326 := 52776558133327 << 17
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 52776558133326 := 52776558133327 << 17
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 17523332087185 := 52776558133327 << 17
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 131071 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 131070 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 131068 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 131064 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 16 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 32 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 64 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 128 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 256 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 512 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 128 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 256 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 512 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 1024 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 2048 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 4096 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 8192 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 16384 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 32768 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 65536 := 131071&10354688
(smt.stats    9   1115  32476  19684  3161/2893/360    1134/113    15   93   53.97)
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 36 := 131071&10354688
(sat.ddfw       1      1   26.3569    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.936s mem=56876KiB load=1.00 rootload=0.98
(smt.stats   10   1216  36030  23827  3283/3011/361    1346/172    16   94   54.55)
(smt.stats   11   1327  39998  29095  3336/3028/361    1550/182    16   94   54.65)
(sat.ddfw       1      1   22.9713    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.934s mem=57060KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  43549  33287  3551/3271/364    1844/272    18  105   54.84)
(sat.ddfw       1      1   20.3311    290001      1421          7            1       30)
(smt.stats   13   1583  50293  43854  3598/3283/376    2058/287    19  113   54.93)
(smt.stats   14   1730  58667  59257  3666/3324/376    2223/390    20  147   54.93)
ramon: poll                 wall=4.004s usage=4.005s mem=57388KiB load=1.07 rootload=1.07
(smt.stats   15   1831  61451  65607  3769/3472/378    2359/426    21  147   55.10)
(smt.stats   16   1942  65229  72164  3810/3531/381    2555/443    22  151   55.10)
(sat.ddfw       1      1   18.2191    370001      1813          8            1       38)
(smt.stats   17   2064  68951  79985  3836/3535/384    2709/445    22  151   55.20)
ramon: poll                 wall=5.000s usage=4.997s mem=57616KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   16.4805    460001      2254          9            1       47)
(smt.stats   18   2198  73683  93271  3927/3618/385    2944/544    24  171   55.48)
ramon: poll                 wall=6.004s usage=6.003s mem=57888KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   15.0331    560001      2745         10            1       57)
(smt.stats   19   2345  78270 103814  4071/3760/387    3251/565    25  179   55.48)
ramon: poll                 wall=7.000s usage=6.996s mem=57932KiB load=1.00 rootload=0.99
(smt.stats   20   2506  81456 117031  4125/3837/392    3587/649    28  195   55.48)
(smt.stats   21   2607  83241 123432  4311/3860/392    3733/653    28  195   55.58)
(sat.ddfw       1      1   13.9949    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=8.091s mem=58112KiB load=1.10 rootload=1.10
(smt.stats   22   2718  83704 124942  4431/4075/392    3883/656    28  195   55.77)
ramon: poll                 wall=9.000s usage=9.095s mem=58372KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.9171    790001      3872         12            1       80)
(smt.stats   23   2840  84034 125834  4769/4337/392    4031/656    28  195   55.86)
ramon: poll                 wall=10.000s usage=10.092s mem=58448KiB load=1.00 rootload=1.00
(smt.stats   24   2974  85078 128281  5189/4762/392    4185/658    28  195   56.05)
(smt.stats   25   3121  87183 133256  5574/5194/395    4350/781    29  196   56.05)
(sat.ddfw       1      1    11.997    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=11.089s mem=58612KiB load=1.00 rootload=0.99
(smt.stats   26   3282  88764 137966  5764/5321/396    4573/783    29  196   56.15)
ramon: poll                 wall=12.000s usage=12.014s mem=58656KiB load=0.92 rootload=0.93
(smt.stats   27   3459  89339 140144  6051/5508/396    4814/806    30  199   56.24)
(smt.stats   28   3560  92806 154451  6241/5961/397    4955/807    30  199   56.49)
(sat.ddfw       1      1   10.9418   1060001      5196         14            1      108)
(smt.stats   29   3671  97487 180317  6309/5970/397    5105/866    31  204   56.49)
ramon: poll                 wall=13.000s usage=12.880s mem=58636KiB load=0.87 rootload=0.87
(smt.stats   30   3793  98894 184499  6618/6037/397    5311/869    31  204   56.69)
ramon: poll                 wall=14.000s usage=13.883s mem=58980KiB load=1.00 rootload=1.00
(smt.stats   31   3927 100965 192950  6812/6341/397    5484/872    31  204   56.68)
(sat.ddfw       1      1   10.2676   1210001      5931         15            1      123)
ramon: poll                 wall=15.000s usage=14.883s mem=59448KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 103772 201740  6908/6580/399    5789/912    32  208   56.78)
(smt.stats   33   4235 107750 221020  7158/6878/400    6130/1053    34  225   56.78)
ramon: poll                 wall=16.000s usage=15.882s mem=59480KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.75907   1370001      6715         16            1      139)
(smt.stats   34   4412 113810 239585  7275/6899/400    6656/1059    34  225   56.87)
ramon: poll                 wall=17.000s usage=16.935s mem=59492KiB load=1.05 rootload=1.06
(smt.stats   35   4606 119452 257731  7337/7040/401    7109/1262    35  231   56.97)
(smt.stats   36   4707 121304 271086  7462/7182/404    7296/1269    36  260   57.06)
(smt.stats   37   4818 123048 277440  7605/7223/404    7498/1270    36  260   57.16)
ramon: poll                 wall=18.000s usage=17.937s mem=59672KiB load=1.00 rootload=1.00
(smt.stats   38   4940 126603 292303  7734/7442/409    7873/1313    37  268   57.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(sat.ddfw       1      1   9.23211   1540001      7549         17            1      156)
ramon: poll                 wall=19.000s usage=18.935s mem=60092KiB load=1.00 rootload=0.99
(smt.stats   39   5074 130555 304191  7839/7477/410    8152/1409    38  309   57.75)
ramon: poll                 wall=20.000s usage=19.933s mem=60240KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:07:01 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.995s
ramon: group.utime          19.967s
ramon: group.stime          0.028s
ramon: group.mempeak        60496KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.066s
ramon: loadavg              1.00
