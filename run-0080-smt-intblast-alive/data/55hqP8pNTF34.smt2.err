ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:33:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30881 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/55hqP8pNTF34.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4057753
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   6611   1202  1289/1148/92      97/4     5   13   19.08)
(smt.stats    1    202   9355   3568  2079/1864/96     187/4     7   18   19.28)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 144115188075855871&57
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 144115188075855871&57
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 144115188075855871&57
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 144115188075855871&57
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 1 := 144115188075855871&57
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 1 := 144115188075855871&57
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 57 := 144115188075855871&57
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 57 := 57 << 57
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 57 := 144115188075855871&57
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 57 := 57 << 57
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 57 := 144115188075855871&57
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 57 := 57 << 57
(smt.stats    2    313  10080   5255  2544/1984/97     295/37     8   20   19.72)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 64 := 144115188075855871&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 64 := 411 << 57
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 64 := 144115188075855871&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 64 := 411 << 57
(smt.stats    3    414  10572   5601  2651/2340/124     403/41     9   25   20.01)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 16717361816799281152 := 3185 << 58
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 16717361816799281152 := 3185 << 58
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 48 := 288230376151711743&48
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 17870283321406128176 := 3126 << 58
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 1 := 3126 << 58
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&48
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&32
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&48
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 47 := 288230376151711743&48
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 46 := 288230376151711743&48
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&48
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&32
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&32
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 32 := 288230376151711743&32
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 8070450532247928864 := 3126 << 58
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 32 := 288230376151711743&32
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 16717361816799281184 := 58 << 58
(smt.stats    4    525  11923   7067  2795/2522/161     545/78    11   28   20.10)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 5249 := 5250 << 58
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&0
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 288230376151711742 := 288230376151720710 << 58
(smt.stats    5    647  12556   7879  2955/2553/161     670/95    12   38   20.20)
ramon: poll                 wall=1.000s usage=0.999s mem=21444KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  13160   8563  3005/2697/161     779/95    12   38   20.29)
ramon: poll                 wall=2.000s usage=1.999s mem=21932KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.999s mem=22088KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.998s mem=22212KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.998s mem=22212KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.998s mem=22256KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.998s mem=22256KiB load=1.00 rootload=0.99
(smt.stats    7    859  13562   8847  3137/2858/161     895/95    12   38   20.96)
ramon: poll                 wall=8.000s usage=7.997s mem=22260KiB load=1.00 rootload=1.00
(smt.stats    8    981  16236  11263  3490/3230/164    1086/191    14   46   20.77)
(smt.stats    9   1115  20984  15478  3519/3245/165    1283/194    14   46   20.86)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 1 := 288230376151711744&288230376151711743
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 1 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 288230376151711743&288230376151711744
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 2 := 288230376151711744&288230376151711743
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 288230376151711742 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 8 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 16 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 32 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 64 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 128 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 256 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 512 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 1024 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 2048 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 4096 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 8192 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 16384 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 32768 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 131072 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 131072 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 131072 := 288230376151711743&288230376151711744
(smt.stats   10   1216  21759  16405  3688/3399/246    1504/263    15   47   21.25)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 114703 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 114702 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 114702 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 114702 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 114702 := 288230376151711743&288230376151711744
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 114702 := 288230376151711743&288230376151711744
(smt.stats   11   1327  22814  17597  3884/3411/256    1757/273    15   47   21.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  23604  19054  4199/3937/267    2067/413    16   78   21.69)
(smt.stats   13   1583  26238  26943  4217/3957/279    2396/589    18  127   21.69)
(smt.stats   14   1730  30385  37122  4270/4002/281    3180/997    21  138   21.79)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2976
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 1729382256910273440 := 121 << 3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2976
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 1729382256910273440 := 121 << 3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2976
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 1729382256910273440 := 121 << 3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2976
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 1729382256910273440 := 121 << 3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2978
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2978
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2980
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2980
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2980
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2980
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2980
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2980
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2980
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&2980
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 4 := 7&2980
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 1729382256910273444 := 121 << 3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 4 := 7&2980
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 4035225266123967396 := 121 << 3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 4 := 7&2980
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 4035225266123967396 := 121 << 3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 4 := 7&968
(smt.stats   15   1831  33278  43274  4332/4043/304    3321/1001    21  138   21.89)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&968
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 576460752303423487 := 121 << 3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&968
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 967 := 121 << 3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&968
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 4 := 968&7
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&968
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 4 := 968&7
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&968
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 3 := 968&7
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&968
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 2 := 968&7
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&968
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 2 := 968&7
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&968
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 1 := 968&7
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 7&496
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 2 := 496&7
(smt.stats   16   1942  35206  48380  4395/4090/333    3464/1010    22  148   21.98)
(smt.stats   17   2064  37919  53121  4427/4151/345    3590/1039    23  160   22.08)
(smt.stats   18   2198  42795  60792  4430/4154/345    3716/1051    24  168   22.08)
(smt.stats   19   2345  46268  65743  4597/4166/345    3926/1054    24  168   22.28)
(smt.stats   20   2506  49629  73449  4626/4346/348    4299/1110    25  173   22.28)
(smt.stats   21   2607  52880  83197  4629/4349/349    4420/1110    25  173   22.28)
ramon: poll                 wall=9.000s usage=8.997s mem=23752KiB load=1.00 rootload=1.00
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 1&288230376151711744
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 4323455642275676160 := 414 << 1
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 1&288230376151711744
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 4323455642275676160 := 414 << 1
(smt.stats   22   2718  56008  90665  4672/4351/350    4570/1290    26  203   22.38)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 1&144115188075855872
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 12826251738751172608 := 473 << 1
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 1&144115188075855872
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 12826251738751172608 := 473 << 1
(smt.stats   23   2840  58791 101979  4731/4428/355    4712/1290    26  203   22.48)
(smt.stats   24   2974  61395 119040  4738/4456/356    4874/1335    28  210   22.48)
(smt.stats   25   3121  68041 134791  4767/4467/357    5111/1376    29  214   22.73)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 274877906928 := 274877906943&274877907139
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 274877906928 := 274877906943&274877907138
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 274877906928 := 274877906943&274877907138
(smt.stats   26   3282  70669 149496  4993/4493/357    5397/1382    29  214   22.82)
(smt.stats   27   3459  73118 167638  5395/5113/372    5757/1438    30  219   22.93)
(smt.stats   28   3560  77325 175418  5398/5116/372    5932/1438    30  219   23.04)
(smt.stats   29   3671  81694 187756  5398/5120/372    6310/1558    31  236   23.04)
(smt.stats   30   3793  85581 196558  5434/5128/373    6796/1697    32  238   23.04)
(smt.stats   31   3927  90674 220349  5682/5187/373    7469/1703    32  238   23.16)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074  95201 231962  5692/5414/373    7809/1703    32  238   23.26)
ramon: poll                 wall=10.000s usage=9.997s mem=24624KiB load=1.00 rootload=1.00
(smt.stats   33   4235  99825 246539  5700/5420/373    8023/1703    32  238   23.26)
(smt.stats   34   4412 106095 266485  5702/5422/376    8297/2063    33  239   23.39)
(smt.stats   35   4606 112070 290073  5705/5424/377    8862/2145    34  247   23.39)
(smt.stats   36   4707 113540 296273  5763/5474/378    9070/2296    35  256   23.52)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 8 := 1 << 1
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 3&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 16 := 2 << 2
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 3&12
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 12 := 2 << 2
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 3&12
shl: (shl[64] (bv2int %0) (mod (+ #109 #960) 64)) 12 := 2 << 2
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 3&8
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 1 := 2 << 2
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 3&8
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 1 := 2 << 2
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 3&8
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 1 := 8&3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 3&8
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 1 := 8&3
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 0 := 3&8
band: (band[59] (shl[59] (bv2int %0) (mod #109 59)) (if (= #637 58) 1 (if #639 3 #804))) 2 := 8&3
(smt.stats   37   4818 115409 300923  5901/5555/378    9362/2301    35  256   24.03)
(smt.stats   38   4940 117868 310037  6004/5657/389    9573/2301    35  256   24.13)
(smt.delete-inactive-clauses  :num-deleted-clauses 9)
(smt.stats   39   5074 120214 320047  6014/5675/390    9819/2349    36  267   24.23)
(smt.stats   40   5221 124589 338445  6026/5687/390   10018/2349    36  267   24.43)
(smt.stats   41   5382 128478 349621  6026/5687/390   10219/2411    37  274   24.43)
(smt.stats   42   5559 133696 375548  6028/5689/390   10540/2411    37  274   24.53)
(smt.stats   43   5753 141444 406858  6032/5693/391   10883/2484    38  285   24.53)
(smt.stats   44   5966 146402 432918  6035/5696/392   11910/2543    39  290   24.64)
ramon: poll                 wall=11.000s usage=10.997s mem=26144KiB load=1.00 rootload=1.00
(smt.stats   45   6067 151704 449781  6045/5704/393   12149/2543    39  290   24.79)
(smt.stats   46   6178 156273 472776  6052/5706/393   12481/2544    39  290   25.26)
(smt.stats   47   6300 163700 506912  6071/5730/394   12691/2594    40  304   25.36)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 8589934587 := 8589934591&274879086995
(smt.stats   48   6434 168694 529026  6186/5739/394   13056/2635    41  310   25.45)
(smt.stats   49   6581 171923 543117  6220/5876/395   13478/2719    42  312   25.45)
(smt.stats   50   6742 179502 575689  6351/5878/395   13857/2723    42  312   25.55)
ramon: poll                 wall=12.000s usage=11.997s mem=27152KiB load=1.00 rootload=1.00
(smt.stats   51   6919 184586 591190  6508/6149/398   14417/2819    43  316   25.64)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 187144 604833  6517/6173/400   15172/2819    43  316   25.64)
(smt.stats   53   7326 188807 621001  6535/6178/401   15645/2821    43  316   25.76)
(smt.stats   54   7560 194540 642065  6588/6244/402   16150/3055    44  329   25.85)
(smt.stats   55   7661 200032 674218  6594/6249/402   16350/3055    44  329   25.85)
(smt.stats   56   7772 205659 698308  6599/6255/402   16525/3162    45  331   25.85)
ramon: poll                 wall=13.000s usage=12.996s mem=27364KiB load=1.00 rootload=1.00
(smt.stats   57   7894 211703 728309  6605/6261/402   16753/3162    45  331   25.85)
(smt.stats   58   8028 213210 736799  6613/6268/403   16934/3222    46  335   25.95)
(smt.stats   59   8175 214754 743174  6617/6273/403   17118/3222    46  335   25.95)
(smt.stats   60   8336 221148 773925  6620/6276/403   17330/3222    46  335   25.95)
(smt.stats   61   8513 226547 800326  6624/6280/405   17610/3274    47  344   26.04)
(smt.stats   62   8707 234909 855747  6649/6305/406   17931/3274    47  344   26.04)
band: (band[59] (if (or #820 #821 #822 #823 #824 #825) 0 (if #826 1 #940)) (shl[64] (bv2int %0) (mod #961 64))) 4 := 15&576460752303419902
(smt.stats   63   8920 239855 888940  6863/6323/407   18389/3365    48  348   26.24)
ramon: poll                 wall=14.000s usage=13.996s mem=27840KiB load=1.00 rootload=1.00
(smt.stats   64   9154 247107 928156  6905/6559/411   19081/3396    49  365   26.33)
(smt.stats   65   9411 255607 976343  6920/6562/411   19524/3397    49  365   26.33)
(smt.stats   66   9512 257111 985209  6921/6575/411   19738/3502    50  371   26.43)
(smt.stats   67   9623 257699 994963  6921/6575/411   19921/3502    50  371   26.43)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   68   9745 258603 1003706  6922/6576/411   20081/3502    50  371   26.43)
(smt.stats   69   9879 263469 1025835  6992/6584/411   20497/3504    50  371   26.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 45)
(smt.stats   70  10026 264986 1038021  7015/6651/411   20683/3504    50  371   26.43)
ramon: poll                 wall=15.002s usage=14.998s mem=27964KiB load=1.00 rootload=1.00
(smt.stats   71  10187 265486 1046243  7017/6671/411   20989/3504    50  371   26.55)
(smt.stats   72  10364 265935 1050430  7017/6671/411   21193/3504    50  371   26.55)
(smt.stats   73  10558 269410 1081325  7028/6682/412   21542/3656    51  375   26.65)
(smt.stats   74  10771 274404 1112849  7032/6686/412   21813/3656    51  375   26.65)
(smt.stats   75  11005 279830 1157813  7038/6692/412   22234/3656    51  375   26.74)
(smt.stats   76  11262 287936 1201211  7049/6696/412   22588/3656    51  375   26.74)
(smt.stats   77  11544 293838 1231921  7069/6718/412   23003/3656    51  375   26.84)
(smt.stats   78  11645 297182 1258908  7079/6730/412   23158/3656    51  375   26.84)
ramon: poll                 wall=16.000s usage=15.996s mem=28372KiB load=1.00 rootload=0.99
(smt.stats   79  11756 300320 1277901  7130/6777/414   23346/3750    52  383   26.84)
(smt.stats   80  11878 303004 1290779  7164/6793/414   23573/3750    52  383   26.84)
(smt.stats   81  12012 306044 1306393  7234/6839/414   23831/3751    52  383   26.97)
(smt.stats   82  12159 310493 1341014  7244/6898/414   24084/3751    52  383   27.06)
(smt.stats   83  12320 312383 1352219  7267/6899/414   24313/3753    52  383   27.06)
(smt.stats   84  12497 315698 1361684  7271/6925/414   24525/3753    52  383   27.06)
ramon: poll                 wall=17.000s usage=16.996s mem=28596KiB load=1.00 rootload=1.00
(smt.stats   85  12691 327559 1422381  7277/6927/414   24843/3753    52  383   27.06)
(smt.stats   86  12904 329656 1438016  7282/6936/414   25495/3753    52  383   27.16)
(smt.stats   87  13138 332459 1449905  7315/6939/414   25880/3757    52  383   27.16)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   88  13395 350019 1484289  7328/6982/414   26145/3757    52  383   27.16)
ramon: poll                 wall=18.000s usage=17.996s mem=28896KiB load=1.00 rootload=1.00
(smt.stats   89  13677 359496 1534661  7416/6985/414   26567/3758    52  383   27.36)
(smt.stats   90  13987 370183 1586777  7722/7244/415   27346/4096    53  383   27.57)
ramon: poll                 wall=19.000s usage=18.995s mem=29276KiB load=1.00 rootload=1.00
(smt.stats   91  14088 373619 1596136  7737/7391/415   27512/4096    53  383   27.57)
(smt.stats   92  14199 377390 1615660  7818/7392/415   27730/4097    53  383   27.57)
(smt.stats   93  14321 382114 1645562  7950/7524/415   28063/4103    53  383   27.68)
(smt.stats   94  14455 385868 1672195  8043/7651/415   28401/4105    53  383   27.77)
(smt.stats   95  14602 387073 1680770  8050/7704/415   28687/4105    53  383   27.77)
(smt.stats   96  14763 387453 1688788  8050/7704/415   28940/4105    53  383   27.77)
(smt.stats   97  14940 390044 1713016  8050/7704/416   29343/4451    54  397   27.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 805)
ramon: poll                 wall=20.000s usage=19.995s mem=29424KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:34:07 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.003s
ramon: group.utime          19.983s
ramon: group.stime          0.020s
ramon: group.mempeak        29680KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
