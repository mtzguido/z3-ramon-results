ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:35:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42707 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1244
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/81WUGwINO2Mg.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2816128
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2034    221  1003/901/105      96/19     6   16   19.16)
(smt.stats    1    202   3259   1332  1645/1267/105     215/26     6   16   19.25)
(smt.stats    2    313   4133   2288  1938/1576/106     351/47     7   18   19.25)
(smt.stats    3    414   5037   4029  2114/1860/106     475/47     7   18   19.25)
(smt.stats    4    525   7079   6270  2203/2060/110     741/128    10   23   19.35)
(smt.stats    5    647   9072   7771  2454/2125/110     880/133    10   23   19.54)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations         :lemmas          :deletions    )
(smt.stats    6    748  10888   9892  2673/2372/110    1047/136    10   23   19.54)
(smt.stats    7    859  14067  13053  2750/2541/110    1201/137    10   23   19.54)
(smt.stats    8    981  15515  16789  2836/2674/117    1399/174    12   37   19.66)
(smt.stats    9   1115  16344  20122  2938/2745/120    1588/194    13   39   19.66)
(smt.stats   10   1216  16871  22407  3054/2817/121    1718/224    14   41   19.76)
(smt.stats   11   1327  18030  24742  3119/2914/121    1870/230    14   41   19.76)
(smt.stats   12   1449  18695  29294  3200/3043/125    2001/269    15   43   19.76)
(smt.stats   13   1583  19428  36280  3287/3063/126    2123/286    16   53   19.85)
ramon: poll                 wall=1.000s usage=0.993s mem=20964KiB load=0.99 rootload=0.99
(smt.stats   14   1730  20298  44277  3435/3166/126    2273/296    16   53   19.85)
(smt.stats   15   1831  21106  48444  3465/3282/126    2385/300    16   53   19.85)
(smt.stats   16   1942  21764  55250  3533/3324/126    2492/307    16   53   19.95)
(smt.stats   17   2065  22436  61526  3578/3390/126    2617/307    16   53   19.95)
(smt.stats   18   2199  24746  71177  3593/3432/126    2771/307    16   53   20.08)
(smt.stats   19   2346  27436  73749  3595/3438/127    2916/330    17   54   20.08)
(smt.stats   20   2507  28654  78739  3598/3442/131    3078/336    18   61   20.08)
(smt.stats   21   2608  30029  84114  3635/3447/132    3203/336    18   61   20.08)
(smt.stats   22   2719  32503  86912  3655/3486/132    3377/358    19   64   20.18)
(smt.stats   23   2841  34356  90074  3661/3505/132    3498/358    19   64   20.42)
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 16&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 0 := 0 << 31
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 16&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 2 := 0 << 32
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 16&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 2 := 0 << 32
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 16&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 2 := 0 << 32
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 3 := 16&4
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 2 := 16&4
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 16&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4 := 4 << 31
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 16&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4 := 4 << 31
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 16&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4 := 4 << 31
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 16&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4 := 4 << 31
(smt.stats   24   2975  36468  95944  3721/3543/150    3640/418    20   69   20.42)
(smt.stats   25   3122  38889  99748  3813/3578/150    3796/425    21   71   20.42)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   26   3283  40734 108596  3872/3673/150    3974/425    21   71   20.52)
(smt.stats   27   3460  43121 118415  3934/3720/150    4176/428    21   71   20.52)
(smt.stats   28   3561  44042 125105  3945/3782/150    4279/428    21   71   20.52)
(smt.stats   29   3672  46125 128410  3949/3786/150    4401/428    21   71   20.52)
(smt.stats   30   3794  47446 135058  3989/3786/150    4533/428    21   71   20.52)
(smt.stats   31   3928  48998 140437  4142/3831/150    4675/430    21   71   20.62)
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 26 := 17179869182 << 5
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 26 := 17179869182 << 5
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 26 := 17179869182 << 5
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 26 := 8589934592 << 5
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 26 := 8589934592 << 5
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 4294967295 := 4294967296 << 6
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 4294967295 := 4294967296 << 6
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 4294967295 := 4294967296 << 6
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 26 := 4294967296 << 6
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 27 := 4294967296 << 6
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 27 := 4294967296 << 6
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1342177277
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 78651588605 := 2684354562 << 1
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1227133511
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 78536544839 := 2454267030 << 1
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967291
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 81604378619 := 8589934590 << 2
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967294
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 81604378622 := 8589934590 << 2
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1342177277
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 78651588605 := 2684354562 << 3
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1342177275
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 78651588603 := 2684354558 << 3
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1342177275
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 78651588603 := 2684354558 << 3
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1227133511
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 78536544839 := 2454267030 << 4
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1227133511
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 78536544839 := 2454267030 << 4
(smt.stats   32   4076  50131 144095  4249/4039/168    4834/490    22   72   20.81)
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 77309411357 := 66 << 4
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 77309411353 := 58 << 9
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&134217725
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 86033563645 := 268435458 << 9
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 85899345943 := 54 << 10
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669149719 := 54 << 10
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&67108861
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 85966454781 := 134217730 << 26
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&41963527
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 85941309447 := 83927062 << 26
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&41963527
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 85941309447 := 83927062 << 26
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 25
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 25
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1661
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 103079216765 := 3330 << 25
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1661
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669151357 := 3330 << 24
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1663
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669151359 := 3334 << 23
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1661
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669151357 := 3330 << 23
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1661
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669151357 := 3330 << 23
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1661
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669151357 := 3330 << 21
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 21
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 20
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 19
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 18
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 17
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 16
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 15
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 14
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 13
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 12
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 11
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 8
(smt.stats   33   4237  52214 149175  4445/4214/226    4985/506    23   92   21.21)
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 7
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&829
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 111669150525 := 1666 << 6
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&1659
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 1659 := 3326 << 24
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&703
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 703 := 1414 << 22
ramon: poll                 wall=2.000s usage=1.992s mem=22732KiB load=1.00 rootload=0.99
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&702
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 702 := 1412 << 22
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&702
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 702 := 1412 << 22
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 8 := 8&703
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 703 := 1414 << 30
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 8 := 8&703
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 703 := 1414 << 30
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 32&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 3 := 14 << 32
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 32&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 3 := 14 << 32
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 32&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 1 := 10 << 32
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 32&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 1 := 10 << 32
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 8 := 8&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 9 := 26 << 30
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 8 := 8&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 9 := 26 << 30
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 4 := 4&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 5 := 18 << 29
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 2&3
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 2&3
(smt.stats   34   4415  55249 157753  4767/4557/327    5165/529    24  118   21.66)
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 4 := 4&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 29
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 1 := 1&4294967292
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 1&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 27
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 2 := 2&4294967292
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 2&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 28
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 6
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 6
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 7
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 7
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 8
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 8
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 18
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 18
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 19
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 19
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 20
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 20
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 17
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 17
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 16
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 16
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 12
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 12
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 15
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 15
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 14
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 14
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 13
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 13
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 11
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4294967292
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4294967292 := 8589934592 << 11
(smt.stats   35   4609  58772 176430  4895/4614/333    5324/577    25  134   21.85)
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 4294967296 << 13
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 4294967296 << 13
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 4294967296 << 13
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 21 := 4294967296 << 13
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 21 := 4294967296 << 13
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&696
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 17592186045112 := 8589934592 << 10
(smt.stats   36   4710  61364 179228  4960/4704/343    5424/580    26  144   21.95)
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&700
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 700 := 8589934592 << 26
(smt.stats   37   4821  64012 186945  4999/4770/351    5603/596    27  149   22.14)
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 1
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 1
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&0
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 1 := 0 << 1
(smt.stats   38   4943  65804 190072  5021/4789/359    5762/598    27  149   22.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 147)
(smt.stats   39   5077  70168 196431  5273/4982/374    5780/639    28  157   22.72)
(smt.stats   40   5224  73813 210610  5305/5005/380    5906/669    29  177   22.82)
(smt.stats   41   5385  77324 224540  5382/5041/385    6098/687    31  187   23.14)
(smt.stats   42   5562  79050 242033  5565/5201/385    6356/687    31  187   23.34)
(smt.stats   43   5756  80724 266595  5688/5272/398    6701/755    32  196   23.53)
ramon: poll                 wall=3.000s usage=2.992s mem=25104KiB load=1.00 rootload=0.99
(smt.stats   44   5969  90574 296109  5983/5555/485    6970/965    35  281   23.96)
(smt.stats   45   6070  91955 300779  6024/5590/493    7089/965    35  281   23.96)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   46   6181  96623 316210  6031/5601/493    7169/996    36  310   23.96)
(smt.stats   47   6303 107728 328115  6047/5606/493    7297/996    36  310   24.06)
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4563402753
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4563402753 := 142606336 << 3
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4563402753
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4563402753 := 142606336 << 1
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&4563402753
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #933 #295 #718) 64)) 4563402753 := 142606336 << 2
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&570425344
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 29 := 71303168 << 3
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&570425344
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 29 := 71303168 << 3
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&570425344
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 29 := 71303168 << 3
band: (band[33] (if (or #726 #727 #728 #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 ...) 0 (if #753 1 #825)) (shl[64] (* 2 #282) (mod #948 64))) 0 := 0&570425344
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #120))) 31 := 71303168 << 3
(smt.stats   48   6437 116194 338459  6082/5632/493    7453/997    36  310   24.10)
(smt.stats   49   6584 120107 348152  6113/5676/508    7604/1014    37  311   24.37)
(smt.stats   50   6745 124651 365066  6119/5686/508    7776/1023    38  325   24.39)
(smt.stats   51   6922 129110 386462  6189/5703/508    7988/1023    38  325   24.50)
ramon: poll                 wall=4.000s usage=3.992s mem=26328KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7116 136898 414348  6324/5843/530    8230/1084    39  347   24.69)
(smt.stats   53   7329 143459 448658  6354/5870/530    8464/1085    39  347   24.79)
(smt.stats   54   7563 145619 472196  6362/5896/531    8706/1101    40  350   24.79)
(smt.stats   55   7664 150360 516601  6415/5933/533    8815/1109    41  353   25.11)
ramon: poll                 wall=5.000s usage=4.991s mem=27040KiB load=1.00 rootload=0.99
(smt.stats   56   7775 151832 520285  6500/5945/533    8979/1130    41  353   25.40)
(smt.stats   57   7897 153044 535164  6559/6067/533    9121/1132    41  353   25.40)
(smt.stats   58   8031 156886 554080  6579/6101/548    9326/1191    42  362   25.50)
(smt.stats   59   8178 168306 590820  6567/6114/604    9447/1216    44  436   25.69)
(smt.stats   60   8339 173814 603739  6580/6132/604    9639/1210    45  449   25.69)
(smt.stats   61   8516 179580 623158  6589/6141/642    9810/1225    46  454   25.79)
ramon: poll                 wall=6.000s usage=5.991s mem=28168KiB load=1.00 rootload=0.99
(smt.stats   62   8710 181922 655414  6635/6144/642   10008/1225    46  454   26.48)
(smt.stats   63   8923 194758 726151  6713/6258/669   10205/1224    48  535   26.67)
(smt.stats   64   9157 203107 750419  6787/6276/683   10454/1228    48  535   26.69)
ramon: poll                 wall=7.000s usage=6.991s mem=28464KiB load=1.00 rootload=1.00
(smt.stats   65   9414 213414 780121  6797/6359/696   10740/1267    50  590   26.79)
(smt.stats   66   9515 215766 792629  6817/6379/696   10847/1268    50  590   26.79)
(smt.stats   67   9626 219175 805990  6840/6379/696   10969/1269    50  590   26.89)
(smt.stats   68   9748 224918 822027  6870/6411/696   11131/1269    50  590   26.99)
(smt.stats   69   9882 231802 843289  6897/6438/696   11287/1269    50  590   26.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 151)
(smt.stats   70  10029 234772 863257  6915/6463/696   11303/1269    50  590   26.99)
ramon: poll                 wall=8.000s usage=7.991s mem=28796KiB load=1.00 rootload=1.00
(smt.stats   71  10190 242265 890962  6936/6510/724   11470/1293    52  631   27.08)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10367 255711 905472  6939/6513/724   11644/1293    52  631   27.27)
(smt.stats   73  10561 264780 919366  6942/6516/724   11850/1293    52  631   27.18)
(smt.stats   74  10774 272341 940517  6963/6520/763   12057/1287    53  648   27.18)
ramon: poll                 wall=9.000s usage=8.990s mem=29152KiB load=1.00 rootload=1.00
(smt.stats   75  11008 278526 957150  6990/6553/763   12305/1280    54  678   27.27)
(smt.stats   76  11265 283208 984488  6994/6586/763   12564/1280    54  678   27.27)
(smt.stats   77  11547 287455 1027857  7023/6593/763   12879/1280    54  678   27.27)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11648 288666 1038629  7050/6633/763   13004/1281    54  678   27.37)
(smt.stats   79  11759 291317 1043877  7050/6637/763   13118/1281    54  678   27.73)
(smt.stats   80  11881 295705 1054441  7050/6637/763   13245/1281    54  678   27.73)
(smt.stats   81  12015 299861 1065991  7060/6647/763   13390/1281    54  678   27.83)
(smt.stats   82  12162 308342 1088160  7076/6648/763   13545/1282    54  678   27.83)
(smt.stats   83  12323 313198 1103637  7087/6674/764   13723/1308    55  687   27.83)
ramon: poll                 wall=10.000s usage=9.990s mem=29560KiB load=1.00 rootload=1.00
(smt.stats   84  12500 315952 1116261  7095/6682/764   13936/1308    55  687   27.84)
(smt.stats   85  12694 323835 1137365  7106/6693/765   14144/1332    56  687   27.93)
(smt.stats   86  12907 336731 1167831  7111/6698/765   14375/1332    56  687   27.93)
(smt.stats   87  13141 343986 1207690  7154/6703/765   14657/1333    56  687   28.03)
(smt.stats   88  13398 354410 1227300  7201/6769/765   14927/1333    56  687   28.03)
ramon: poll                 wall=11.000s usage=10.990s mem=29648KiB load=1.00 rootload=1.00
(smt.stats   89  13680 363908 1246575  7224/6807/774   15231/1370    57  687   28.03)
ramon: poll                 wall=12.000s usage=11.990s mem=30056KiB load=1.00 rootload=1.00
(smt.stats   90  13990 375204 1260941  7300/6822/775   15595/1385    57  687   28.21)
(smt.stats   91  14091 378466 1277286  7367/6931/775   15706/1396    58  703   28.21)
(smt.stats   92  14202 381067 1288757  7396/6976/775   15831/1397    58  703   28.33)
(smt.stats   93  14324 386519 1311078  7403/6993/775   15965/1397    58  703   28.33)
(smt.stats   94  14458 389003 1319404  7409/6999/775   16103/1397    58  703   28.33)
(smt.stats   95  14605 396835 1338011  7412/7001/775   16267/1397    58  703   28.33)
(smt.stats   96  14766 401881 1349762  7475/7009/775   16445/1397    58  703   28.33)
ramon: poll                 wall=13.000s usage=12.987s mem=30156KiB load=1.00 rootload=1.00
(smt.stats   97  14943 409090 1382858  7588/7091/775   16640/1398    58  703   28.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 18)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   98  15137 413592 1406201  7652/7200/775   16830/1398    58  703   28.52)
ramon: poll                 wall=14.000s usage=13.987s mem=30344KiB load=1.00 rootload=1.00
(smt.stats   99  15350 423186 1428895  7819/7252/775   17066/1405    58  703   28.62)
ramon: poll                 wall=15.000s usage=14.987s mem=30492KiB load=1.00 rootload=1.00
(smt.stats  100  15584 432726 1458949  7933/7449/775   17354/1408    58  703   28.72)
(smt.stats  101  15841 444322 1496328  7955/7527/775   17666/1408    58  703   28.81)
ramon: poll                 wall=16.000s usage=15.987s mem=30536KiB load=1.00 rootload=1.00
(smt.stats  102  16123 449999 1534850  8038/7617/776   18020/1489    59  703   28.81)
ramon: poll                 wall=17.000s usage=16.987s mem=30656KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.986s mem=30864KiB load=1.00 rootload=1.00
(smt.stats  103  16433 464989 1579176  8267/7637/776   18481/1508    59  703   29.01)
(smt.stats  104  16773 470865 1640637  8303/7865/776   18854/1508    59  703   29.01)
(smt.stats  105  16874 472576 1655060  8307/7897/776   18961/1508    59  703   29.01)
ramon: poll                 wall=19.003s usage=18.989s mem=30876KiB load=1.00 rootload=1.00
(smt.stats  106  16985 477413 1665670  8311/7901/776   19090/1508    59  703   29.11)
(smt.stats  107  17107 482981 1674737  8350/7901/776   19240/1510    59  703   29.48)
(smt.stats  108  17241 485549 1692158  8437/7972/776   19397/1510    59  703   29.58)
(smt.stats  109  17388 487857 1717810  8480/8031/776   19560/1510    59  703   29.58)
(smt.stats  110  17549 490432 1750502  8541/8081/776   19747/1512    59  703   29.78)
ramon: poll                 wall=20.000s usage=19.986s mem=31556KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 14:36:08 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.999s
ramon: group.utime          19.963s
ramon: group.stime          0.036s
ramon: group.mempeak        31820KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              1.00
