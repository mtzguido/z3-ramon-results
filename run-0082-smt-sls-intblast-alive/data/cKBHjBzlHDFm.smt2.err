ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:48:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27823 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/cKBHjBzlHDFm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             867025
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&1
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&1
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&29
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&1
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&1
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&4
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&4
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&4
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&8
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2 := 34359738367&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 2 := 30 << 35
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2 := 34359738367&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 2 := 30 << 35
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2 := 34359738367&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 2 := 30 << 35
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 2251799813685247 := 983040 << 36
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   86.2069     10000        49          0            1        2)
(smt.stats    0    101   3743    802  1262/1143/145      82/12    13   32   52.25)
(sat.ddfw       1      1   38.4654     20001        98          1            1        3)
(smt.stats    1    202   7177   3729  2103/1902/147     190/15    14   32   52.45)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 1 := 983040 << 36
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 34359738367&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 268369919 := 268369920 << 36
(smt.stats    2    313   8740   5788  2330/2004/147     307/26    15   32   52.54)
(smt.stats    3    414  11590   8351  2411/2174/152     400/35    16   37   52.67)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 1 := 8191&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 1 := 8191&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2 := 8191&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 2251799813685250 := 2251799813685314 << 13
(sat.ddfw       1      1   40.8163     40001       196          2            1        5)
(smt.stats    4    525  14862  10319  2448/2179/155     507/36    16   37   52.87)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 1 := 8191&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&2
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2 := 8191&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 2251799813685250 := 2251799813685314 << 13
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 3 := 8191&81920
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2 := 8191&81920
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 1 := 8191&81920
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&81920
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 343597383681 := 137438953477 << 14
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&81920
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 343597383681 := 137438953477 << 14
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&81920
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 343597383681 := 137438953477 << 14
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&81920
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 343597383681 := 137438953477 << 14
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&81920
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 2251799813685247 := 137438953477 << 14
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 8191 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 8190 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 8188 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 8184 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 32 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 64 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 32 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 32 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 128 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 256 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 512 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 1024 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 2048 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 4096 := 8191&4398048002048
(smt.stats    5    647  17170  12122  2577/2337/228     640/57    18   58   53.26)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398051344384
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 1 := 8191&4398051344384
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398050508800
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 1 := 8191&4398050508800
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398050508800
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 3 := 8191&4398050508800
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398050508800
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 2 := 8191&4398050508800
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398050508800
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 8 := 8191&4398050508800
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398050508800
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 8 := 8191&4398050508800
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398050508800
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398050508800
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398050508800
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398050508800
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398049673216
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398049673216
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398049673216
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 16 := 8191&4398049673216
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 64 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 64 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 64 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 128 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 256 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 512 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 256 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 512 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 1024 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 1024 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 256 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048837632
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 256 := 8191&4398048837632
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 256 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 256 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 256 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 256 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 1024 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 512 := 8191&4398048002048
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&4398048002048
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 128 := 8191&4398048002048
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  19726  15358  2681/2435/286     763/71    19   66   53.35)
(sat.ddfw       1      1   37.4532     70001       343          3            1        8)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 6144 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 4096 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 6144 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 4096 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 2048 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 2048 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 512 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 512 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 33 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 32 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 5 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 8191&8796095922176
band: (band[51] (if (= #120 50) 0 (if #564 1 #705)) (shl[51] (bv2int %0) (+ 51 #708))) 4 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 1 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 4 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 8 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 16 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 32 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 64 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 128 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 256 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 512 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 1024 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2048 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 4096 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 8181 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 8180 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 8176 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 8160 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 8128 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 128 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 256 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 512 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 1024 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2048 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 4096 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 4096 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 1024 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2048 := 8191&8796095922176
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 2048 := 8191&8796095922176
(smt.stats    7    859  22395  20759  2799/2503/308     911/113    21   75   53.76)
ramon: poll                 wall=1.000s usage=0.852s mem=55904KiB load=0.85 rootload=0.82
(smt.stats    8    981  26027  25244  2805/2548/366    1085/138    23   97   53.86)
(smt.stats    9   1115  33561  31183  2827/2576/367    1230/163    24  100   53.97)
(smt.stats   10   1216  37403  36343  2835/2584/367    1329/163    24  100   54.08)
(sat.ddfw       1      1   32.9489    110001       539          4            1       12)
(smt.stats   11   1332  42810  42819  2845/2592/369    1477/183    25  103   54.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1454  48001  48993  2855/2602/369    1635/195    26  109   54.22)
(sat.ddfw       1      1   28.8678    160000       784          5            1       17)
ramon: poll                 wall=2.002s usage=1.853s mem=56432KiB load=1.00 rootload=1.00
(smt.stats   13   1588  51257  52426  2924/2604/369    1800/199    26  109   54.31)
(sat.ddfw       1      1   25.5215    220001      1078          6            1       23)
(smt.stats   14   1736  55007  58226  3079/2821/370    2032/223    27  112   54.50)
ramon: poll                 wall=3.000s usage=2.851s mem=56660KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    22.742    290001      1421          7            1       30)
(smt.stats   15   1837  56642  60805  3133/2842/371    2189/251    28  112   54.72)
(sat.ddfw       1      1   20.4342    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.851s mem=56944KiB load=1.00 rootload=1.00
(smt.stats   16   1948  57902  64132  3335/2979/371    2432/256    28  112   54.63)
(smt.stats   17   2070  60928  69760  3344/3091/371    2637/256    28  112   54.73)
(smt.stats   18   2204  65391  77732  3395/3128/371    2877/256    28  112   55.00)
(smt.stats   19   2351  73034  94083  3436/3141/371    3241/257    28  112   55.00)
(sat.ddfw       1      1   18.5567    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.850s mem=57756KiB load=1.00 rootload=1.00
(smt.stats   20   2512  75257  99334  3570/3309/374    3569/386    29  136   55.29)
(smt.stats   21   2613  79521 107530  3572/3309/374    3726/386    29  136   55.29)
(smt.stats   22   2724  85812 122341  3572/3311/374    3879/386    29  136   55.29)
(smt.stats   23   2846  92881 138701  3578/3317/374    4020/386    29  136   55.57)
(smt.stats   24   2980  99575 154025  3609/3344/375    4219/451    30  136   55.81)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217730 := 562949953421311&1125900712296507
(sat.ddfw       1      1    17.001    560001      2745         10            1       57)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217731 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217731 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217739 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217739 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217739 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217739 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234507 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234139 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234299 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234267 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234267 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234395 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234395 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234395 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234395 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234395 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234395 := 562949953421311&1125900712296507
ramon: poll                 wall=6.000s usage=5.850s mem=57976KiB load=1.00 rootload=1.00
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234299 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234299 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234299 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234299 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234299 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234171 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134234171 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134226235 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134225979 := 562949953421311&1125900712296507
(smt.stats   25   3127 102592 163079  3817/3498/412    4510/489    31  144   56.01)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134225979 := 562949953421311&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134221883 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134218043 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134218043 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134218043 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134218043 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134218043 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217787 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217787 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 134217787 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 49211 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 65595 := 1125899906842623&1125900712296507
(smt.stats   26   3288 104742 171049  4078/3586/447    4981/509    31  144   56.21)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 131131 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 114747 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 114747 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 114747 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 81979 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 81979 := 1125899906842623&1125900712296507
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 81979 := 1125899906842623&9070970994691
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 81979 := 1125899906842623&9070970994691
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 81979 := 1125899906842623&9070970994691
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 81979 := 1125899906842623&9070970994699
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 81979 := 1125899906842623&9070970994707
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 81979 := 1125899906842623&9070970994715
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 81979 := 1125899906842623&9070970994747
(smt.stats   27   3465 107793 181803  4641/4279/489    5724/657    32  159   56.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3566 112342 196009  4689/4406/492    6184/1077    33  174   56.69)
(smt.stats   29   3677 117757 219572  4696/4413/492    6619/1077    33  174   56.69)
(smt.stats   30   3799 124995 245180  4699/4416/493    6811/1322    34  176   56.80)
ramon: poll                 wall=7.000s usage=6.850s mem=59016KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.6517    670001      3284         11            1       68)
(smt.stats   31   3933 128611 256154  4913/4460/496    7136/1364    35  176   56.90)
(smt.stats   32   4080 133243 270984  4928/4640/497    7498/1364    35  176   56.99)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 17 := 31&2251799277076540
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 16 := 31&2251799277142076
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 20 := 31&2251799277076540
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 20 := 31&2251799277076540
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 20 := 31&2251799277076540
(smt.stats   33   4241 139261 284378  5048/4644/498    8185/1489    36  178   57.37)
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 28 := 31&2251799276945468
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 4503599090630716 := 2251799813685330 << 5
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 28 := 31&2251799277011004
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 4503599090696252 := 2251799813685330 << 5
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 28 := 31&2251799277011004
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 4503599090696252 := 2251799813685330 << 5
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 28 := 31&2251799277011004
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 4503599090696252 := 2251799813685330 << 5
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 28 := 31&2251799277011004
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #887 #889) 64)) 4503599090696252 := 2251799813685330 << 5
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 31&2624
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 61 := 1125899906842665 << 6
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 31&2624
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 61 := 1125899906842665 << 6
band: (band[51] (if (or #720 #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #832)) (shl[64] (* 2 #114) (mod #890 64))) 0 := 31&2624
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 61 := 1125899906842665 << 6
(smt.stats   34   4418 144411 300483  5186/4894/512    8693/1601    37  187   57.47)
ramon: poll                 wall=8.000s usage=7.849s mem=59600KiB load=1.00 rootload=1.00
(smt.stats   35   4612 150150 323711  5207/4905/512    9066/1603    37  187   57.67)
(sat.ddfw       1      1   14.5015    790001      3872         12            1       80)
(smt.stats   36   4713 155964 345292  5341/5015/514    9572/1748    39  207   57.77)
(smt.stats   37   4824 165128 370848  5356/5027/517    9902/1748    39  207   57.88)
(smt.stats   38   4946 169416 394465  5387/5058/547   10334/1789    40  210   57.97)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=9.000s usage=8.849s mem=60248KiB load=1.00 rootload=1.00
(smt.stats   39   5080 174594 409381  5459/5133/549   10532/2068    41  438   58.07)
(smt.stats   40   5227 180187 432976  5638/5142/549   10865/2072    41  438   58.16)
(sat.ddfw       1      1   13.5107    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.849s mem=60580KiB load=1.00 rootload=1.00
(smt.stats   41   5388 183670 445664  6054/5393/549   11308/2190    42  438   58.36)
(smt.stats   42   5565 184800 454008  6080/5736/550   11844/2190    42  438   58.36)
(smt.stats   43   5759 190157 474424  6166/5756/551   12527/2194    42  438   58.51)
ramon: poll                 wall=11.000s usage=10.848s mem=61112KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.6514   1060001      5196         14            1      108)
(smt.stats   44   5972 196374 505496  6417/6089/553   13806/2385    43  450   58.91)
(smt.stats   45   6073 199478 518977  6431/6096/554   14341/2563    44  452   59.10)
ramon: poll                 wall=12.000s usage=11.848s mem=61740KiB load=1.00 rootload=1.00
(smt.stats   46   6184 205103 539288  6609/6125/554   14706/2564    44  452   59.10)
(smt.stats   47   6306 209346 555208  6755/6292/554   15049/2749    45  454   59.56)
(sat.ddfw       1      1   11.8727   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.848s mem=61816KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6440 213262 569127  6880/6552/557   16135/2755    45  454   59.68)
(smt.stats   49   6587 221625 587533  6910/6567/557   16375/2755    45  454   59.81)
ramon: poll                 wall=14.000s usage=13.848s mem=62056KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.1959   1370001      6715         16            1      139)
(smt.stats   50   6748 229367 629625  6947/6616/559   17401/3080    46  470   60.02)
(smt.stats   51   6925 238491 665362  6978/6647/561   17954/3269    47  483   60.12)
ramon: poll                 wall=15.000s usage=14.847s mem=62360KiB load=1.00 rootload=0.99
(smt.stats   52   7119 246985 700151  7056/6671/562   18594/3454    48  501   60.21)
ramon: poll                 wall=16.000s usage=15.847s mem=62528KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5919   1540001      7549         17            1      156)
(smt.stats   53   7332 257820 761600  7124/6753/562   19434/3456    48  501   60.31)
ramon: poll                 wall=17.002s usage=16.848s mem=62688KiB load=1.00 rootload=1.01
(smt.stats   54   7566 268547 817542  7207/6827/562   20472/3460    48  501   60.50)
(smt.stats   55   7667 272619 832496  7231/6882/562   20781/3460    48  501   60.69)
(sat.ddfw       1      1   10.0407   1720001      8431         18            1      174)
(smt.stats   56   7778 277265 849725  7261/6903/562   21260/3462    48  501   60.69)
ramon: poll                 wall=18.014s usage=17.819s mem=63384KiB load=0.96 rootload=0.95
(smt.stats   57   7900 281130 875209  7282/6950/562   21794/3462    48  501   60.81)
(smt.stats   58   8034 284530 891697  7315/6968/563   22232/3944    49  505   60.91)
(smt.stats   59   8181 292995 950384  7334/7003/563   22673/3944    49  505   60.91)
ramon: poll                 wall=19.000s usage=18.803s mem=63552KiB load=1.00 rootload=1.00
(smt.stats   60   8342 297988 970308  7357/7012/565   22967/4032    50  510   60.91)
(smt.stats   61   8519 303108 994363  7427/7089/566   23511/4033    50  510   61.00)
(sat.ddfw       1      1   9.55302   1910001      9362         19            1      193)
ramon: poll                 wall=20.000s usage=19.804s mem=63984KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:48:36 2024
ramon: root.execname        z3
ramon: root.utime           19.820s
ramon: root.stime           0.030s
ramon: group.total          19.862s
ramon: group.utime          19.830s
ramon: group.stime          0.032s
ramon: group.mempeak        64240KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              0.99
