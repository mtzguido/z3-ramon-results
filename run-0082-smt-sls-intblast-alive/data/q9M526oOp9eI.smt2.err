ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:08:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27371 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1377
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/q9M526oOp9eI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             933763
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   87.7193     10000        49          0            1        2)
(smt.stats    0    101   4430    671  1157/953/97     113/19     3   14   51.85)
(sat.ddfw       1      1   43.1078     20001        98          1            1        3)
(smt.stats    1    202   6113   2013  1404/1260/98     219/29     4   16   51.96)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2&1
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 1 := 9223372036720558080 >>l 63
(smt.stats    2    314   7901   4733  2162/1880/99     339/60     5   17   52.15)
(smt.stats    3    415   9400   6811  2324/2114/111     451/71     9   23   52.34)
(sat.ddfw       1      1   47.1698     40001       196          2            1        5)
(smt.stats    4    526  11159   9081  2377/2142/120     557/85    10   31   52.43)
(smt.stats    5    648  15445  13744  2383/2170/120     672/118    11   35   52.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  18096  15738  2391/2177/122     775/124    12   37   52.53)
(smt.stats    7    860  21271  18240  2418/2198/123     888/127    13   40   52.63)
(sat.ddfw       1      1   52.5394     70001       343          3            1        8)
(smt.stats    8    982  23381  20865  2444/2217/123    1009/128    13   40   52.63)
(smt.stats    9   1116  26140  25694  2454/2237/126    1138/136    14   43   52.63)
(smt.stats   10   1217  28497  31507  2480/2246/126    1230/137    14   43   52.73)
(smt.stats   11   1328  29705  33958  2492/2275/126    1344/137    14   43   52.73)
(sat.ddfw       1      1    45.819    110001       539          4            1       12)
(smt.stats   12   1450  31527  36413  2543/2277/126    1468/137    14   43   52.82)
(smt.stats   13   1584  32816  39114  2624/2371/126    1608/140    14   43   52.82)
ramon: poll                 wall=1.000s usage=0.974s mem=55108KiB load=0.97 rootload=0.96
(smt.stats   14   1731  35053  43139  2651/2415/126    1777/143    14   43   52.99)
(smt.stats   15   1832  35946  44895  2703/2444/126    1879/143    14   43   52.99)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 256&257
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 256&512
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 9223372105574253056 := 9223372036720558080 >>l 56
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 256&512
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 9223372105574253056 := 9223372036720558080 >>l 56
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 256&257
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 256&257
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 256&512
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 9223372174293729792 := 9223372036720558080 >>l 56
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 256&512
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 9223372174293729792 := 9223372036720558080 >>l 56
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 256&512
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 9223372174293729792 := 9151314442816847872 >>l 56
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 127 := 256&127
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 126 := 256&127
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 120 := 256&127
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 112 := 256&127
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 32 := 256&127
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 64 := 256&127
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 45 := 256&45
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 44 := 256&44
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 40 := 256&40
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 36 := 256&36
(smt.stats   16   1943  36916  47516  2774/2552/183    2004/170    15   51   53.08)
(smt.stats   17   2065  38007  51612  2789/2557/183    2139/171    15   51   53.08)
(smt.stats   18   2199  39267  56202  2814/2585/184    2277/191    16   57   53.18)
(sat.ddfw       1      1   36.9542    160000       784          5            1       17)
(smt.stats   19   2346  41201  60217  2867/2610/184    2415/200    17   60   53.31)
(smt.stats   20   2507  42575  64751  2975/2729/184    2580/200    17   60   53.31)
(smt.stats   21   2608  43559  67695  2987/2758/184    2685/200    17   60   53.31)
(smt.stats   22   2719  44292  70087  3002/2778/184    2797/201    17   60   53.31)
(smt.stats   23   2841  45370  74129  3013/2782/185    2943/211    18   62   53.31)
(smt.stats   24   2977  46600  79870  3029/2799/188    3092/211    18   62   53.31)
(smt.stats   25   3124  47933  85411  3068/2825/189    3236/230    19   74   53.40)
(sat.ddfw       1      1   32.3107    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   26   3285  49647  90574  3119/2869/190    3420/232    19   74   53.40)
ramon: poll                 wall=2.000s usage=1.949s mem=55724KiB load=0.98 rootload=0.98
(smt.stats   27   3462  52216  98563  3148/2923/190    3606/242    20   76   53.40)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&517
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&517
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&520
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 68719477256 := 68719476736 >>l 62
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&520
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 68719477256 := 68719476736 >>l 62
(smt.stats   28   3563  53885 104322  3167/2941/197    3718/253    21   77   53.40)
(smt.stats   29   3674  55697 108000  3184/2958/202    3843/253    21   77   53.50)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&520
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 9223372174293729800 := 68853694464 >>l 62
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&520
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 9223372174293729800 := 68853694464 >>l 62
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 68719476735 := 0 >>l 35
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 5 := 0 >>l 35
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 5 := 0 >>l 35
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 5 := 0 >>l 35
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 1 := 4&1
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&1
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 1 := 4&1
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 4&1
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 1 := 4&1
(smt.stats   30   3796  57214 111362  3226/2960/202    3981/269    22   80   53.76)
(smt.stats   31   3930  58586 116427  3240/3003/222    4120/269    22   80   53.67)
(smt.stats   32   4077  59302 121508  3280/3020/222    4277/276    23   84   53.67)
(sat.ddfw       1      1   28.5948    290001      1421          7            1       30)
(smt.stats   33   4238  61378 128587  3357/3125/225    4465/287    24   87   53.76)
(smt.stats   34   4415  64601 138830  3388/3130/225    4648/287    24   87   53.96)
(smt.stats   35   4609  67340 146407  3401/3165/225    4856/288    25   89   53.96)
(smt.stats   36   4710  68925 152585  3406/3173/225    4967/288    25   89   53.96)
(smt.stats   37   4821  69992 156973  3440/3182/225    5073/289    25   89   53.96)
(smt.stats   38   4943  71254 161743  3492/3252/225    5189/289    25   89   53.96)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5077  72065 163939  3591/3285/225    5353/292    25   89   54.05)
ramon: poll                 wall=3.000s usage=2.925s mem=56320KiB load=0.98 rootload=0.97
(smt.stats   40   5224  72705 168891  3641/3412/229    5457/336    26  119   54.05)
(sat.ddfw       1      1   25.6164    370001      1813          8            1       38)
(smt.stats   41   5385  73984 173492  3740/3423/229    5617/348    26  119   54.15)
(smt.stats   42   5562  75566 178837  3836/3576/229    5786/350    26  119   54.15)
(smt.stats   43   5756  78331 187138  3939/3617/229    5991/351    26  119   54.25)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 0 := 4611686018427387904 >>l 59
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 0 := 4611686018427387904 >>l 59
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 0 := 4611686018427387904 >>l 59
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 0 := 4539628424389459968 >>l 59
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 0 := 4539628424389459968 >>l 59
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 33 := 3758096384 >>l 32
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 31 := 3758096384 >>l 32
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 3 := 4294967295 >>l 32
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 3 := 3758096384 >>l 32
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 3 := 32&9
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 3 := 32&9
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 8 := 32&9
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 8 := 32&9
(smt.stats   44   5969  79783 195662  3991/3754/242    6249/362    27  119   54.35)
(smt.stats   45   6070  80695 197750  4008/3772/247    6360/362    27  119   54.35)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   46   6181  81753 205062  4015/3775/247    6483/362    27  119   54.35)
(sat.ddfw       1      1   24.6575    460001      2254          9            1       47)
(smt.stats   47   6303  82757 210876  4082/3800/247    6585/427    28  122   54.35)
(smt.stats   48   6437  84474 217000  4190/3957/248    6726/431    28  122   54.44)
(smt.stats   49   6584  85893 223269  4217/3959/248    6881/432    28  122   54.44)
ramon: poll                 wall=4.000s usage=4.042s mem=56916KiB load=1.12 rootload=1.12
(smt.stats   50   6745  88297 230440  4251/4006/248    7066/440    29  123   54.44)
(smt.stats   51   6922  90167 238669  4272/4021/248    7254/440    29  123   54.54)
(smt.stats   52   7116  92853 247693  4279/4042/248    7463/440    29  123   54.74)
(smt.stats   53   7329  95960 258605  4381/4047/248    7691/443    29  123   54.74)
(sat.ddfw       1      1   22.2025    560001      2745         10            1       57)
(smt.stats   54   7563  99398 271847  4417/4161/248    7940/443    29  123   54.74)
(smt.stats   55   7664 100821 277906  4481/4189/248    8045/443    29  123   54.83)
(smt.stats   56   7775 101562 283794  4483/4250/248    8156/443    29  123   54.83)
(smt.stats   57   7897 102340 291931  4500/4251/248    8283/443    29  123   54.83)
(smt.stats   58   8031 103187 301673  4508/4273/249    8422/498    30  127   54.83)
ramon: poll                 wall=5.000s usage=5.042s mem=57172KiB load=1.00 rootload=1.00
(smt.stats   59   8178 105386 312993  4539/4279/249    8604/499    30  127   54.93)
(smt.stats   60   8339 108231 322597  4553/4308/249    8786/499    30  127   54.93)
(smt.stats   61   8516 111336 331597  4565/4329/249    8992/499    30  127   54.93)
(smt.stats   62   8710 115570 343103  4576/4339/250    9227/536    31  131   55.02)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&1968648
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&1970184
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230376153681928 := 0 >>l 53
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&1968648
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&1968648
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&1970184
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230376153681928 := 68719476736 >>l 53
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&1970184
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230376153681928 := 68719476736 >>l 53
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&760
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 51002736641 := 51002736640 >>l 26
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 34896609281 := 34896609280 >>l 26
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 34896609281 := 34896609280 >>l 26
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 34896609281 := 34896609280 >>l 26
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 34896609281 := 34896609280 >>l 26
(sat.ddfw       1      1   20.2392    670001      3284         11            1       68)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 520 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 512 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 520 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 512 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 520 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 518 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 6 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 4 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 16 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 32 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 64 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 4 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 4 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 16 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 4 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 16 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 8 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 8 := 2048&520
(smt.stats   63   8923 118097 353022  4669/4410/307    9467/546    31  131   55.37)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&1970432
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 9223372105576222976 := 4611686018427387904 >>l 53
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 2 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 2 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 128 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 256 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 512 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 512 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 384 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 128 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 256 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 512 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 384 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 16 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 16 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 16 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 16 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 16 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 8 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 8 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 4 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 2 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 2 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 32 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 64 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 128 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 256 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 512 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 384 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 256 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 256 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 128 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 128 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 512 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 64 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 64 := 2048&520
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 2048&520
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 64 := 2048&520
(smt.stats   64   9157 122422 368000  4790/4447/317    9754/579    32  146   55.58)
(smt.stats   65   9414 126006 388652  4791/4550/399   10025/598    33  167   55.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   66   9515 127755 395858  4838/4583/399   10138/598    33  167   55.67)
ramon: poll                 wall=6.003s usage=6.044s mem=58236KiB load=1.00 rootload=1.00
(smt.stats   67   9626 129653 405043  4853/4591/399   10259/598    33  167   55.77)
(smt.stats   68   9748 131198 418192  4880/4616/399   10403/599    33  167   55.77)
(smt.stats   69   9882 132500 431611  4892/4627/399   10541/600    33  167   55.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   70  10029 134156 442895  4928/4673/400   10708/635    34  169   55.77)
(smt.stats   71  10190 137441 455845  4954/4680/400   10882/637    34  169   55.86)
(sat.ddfw       1      1   18.5845    790001      3872         12            1       80)
(smt.stats   72  10367 140892 470262  4963/4708/401   11090/645    35  172   56.14)
(smt.stats   73  10561 144313 488585  4996/4711/401   11334/652    35  172   56.34)
(smt.stats   74  10774 148658 511549  5084/4798/402   11628/652    35  172   56.44)
ramon: poll                 wall=7.000s usage=7.043s mem=58748KiB load=1.00 rootload=1.00
(smt.stats   75  11008 155014 529018  5099/4821/406   12071/665    36  173   56.54)
(smt.stats   76  11265 157726 542905  5164/4870/406   12344/665    36  173   56.67)
(smt.stats   77  11547 163808 561203  5187/4876/406   12685/730    37  183   56.77)
(sat.ddfw       1      1   17.2071    920001      4509         13            1       93)
(smt.stats   78  11648 166235 574000  5220/4903/406   12833/731    37  183   56.77)
(smt.stats   79  11759 168124 583701  5240/4931/406   13029/734    37  183   56.86)
ramon: poll                 wall=8.000s usage=8.023s mem=59272KiB load=0.98 rootload=0.98
(smt.stats   80  11881 171287 600886  5330/5040/407   13269/764    38  183   56.86)
(smt.stats   81  12015 172709 614930  5344/5045/408   13418/764    38  183   56.86)
(smt.stats   82  12162 175475 629063  5355/5061/408   13776/764    38  183   56.96)
(smt.stats   83  12323 176454 640136  5357/5067/408   14026/764    38  183   56.96)
(smt.stats   84  12500 177848 648732  5361/5071/410   14329/803    39  185   57.06)
(smt.stats   85  12694 180878 663162  5381/5075/411   14688/804    39  185   57.06)
(sat.ddfw       1      1   15.8802   1060001      5196         14            1      108)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   86  12907 186958 684673  5399/5109/412   15062/857    40  213   57.16)
ramon: poll                 wall=9.000s usage=8.996s mem=59528KiB load=0.97 rootload=0.97
(smt.stats   87  13141 192162 706799  5408/5118/418   15386/857    40  213   57.16)
(smt.stats   88  13398 196163 727433  5418/5120/418   15782/878    41  233   57.16)
(smt.stats   89  13680 200176 748436  5427/5137/419   16281/878    41  233   57.25)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&15
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 2 := 32&15
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&15
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 2 := 32&15
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&15
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 1 := 32&15
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 32&15
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 1 := 32&15
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 16 := 16&64961380879
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 16 := 16&64961380876
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 16 := 16&64961385988
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 16 := 16&64961398296
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 64961398296 := 8718968878589280256 >>l 60
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 16&8
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 8 := 4755801206503243776 >>l 60
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 16&8
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 8 := 4818851601286430720 >>l 60
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 16&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 15 := 939524096 >>l 33
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 16&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 15 := 939524096 >>l 33
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 16&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 2 := 67108864 >>l 33
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 16&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 2 := 134217727 >>l 33
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 8 := 8&64961380361
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 133680857097 := 8718968878589280256 >>l 61
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 8 := 8&64961380865
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 8 := 8&64961380354
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 8 := 8&64961393155
(smt.stats   90  13990 204376 765008  5659/5362/445   16852/955    42  242   57.64)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 0&64961401505
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230441113113249 := 8718968878589280256 >>l 28
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (ramon: poll                 wall=10.000s usage=9.942s mem=60132KiB load=0.95 rootload=0.94
lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 0&64961401512
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230441113113256 := 8718968878589280256 >>l 28
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 0&64961401504
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230441113113248 := 8718968878589280256 >>l 28
(smt.stats   91  14091 207040 774515  5712/5396/445   17091/955    42  242   57.64)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 0&64961401504
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230441113113248 := 8718968878589280256 >>l 28
(smt.stats   92  14202 209478 787113  5750/5437/450   17415/957    42  242   58.10)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 0&32480690176
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 68719476735 := 64961380352 >>l 1
(sat.ddfw       1      1   14.7594   1210001      5931         15            1      123)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 0&32480690176
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 64961380353 := 64961380352 >>l 1
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 0&32480690176
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 64961380353 := 64961380352 >>l 1
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 0&32480690176
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 64961380353 := 64961380352 >>l 1
(smt.stats   93  14324 212995 800164  5772/5451/450   17675/960    42  242   58.10)
(smt.stats   94  14458 217113 813956  5828/5521/456   17926/1150    43  249   58.20)
(smt.stats   95  14605 222959 838322  5845/5538/457   18248/1150    43  249   58.29)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 34359738368&34359738408
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 34359738368&34359738408
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 34359738368&8200
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288232575174975496 := 8718968878589280256 >>l 29
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 34359738368&8200
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 68719484936 := 8718968878589280256 >>l 29
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 34359738368&8200
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 68719484936 := 8718968878589280256 >>l 29
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 34359738368&16240345088
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 32480690177 := 64961380352 >>l 2
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 34359738368&16240345088
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 34359738367 := 64961380352 >>l 2
(smt.stats   96  14766 224828 845745  6085/5573/474   18583/1153    43  249   58.61)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 34359738368&16240345088
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 32480690177 := 64961380352 >>l 2
ramon: poll                 wall=11.000s usage=10.971s mem=60968KiB load=1.03 rootload=1.03
(smt.stats   97  14943 229077 869867  6276/5914/485   18951/1193    44  261   58.70)
(smt.delete-inactive-clauses  :num-deleted-clauses 3130)
(smt.stats   98  15137 236270 902571  6296/5978/488   16454/1324    45  275   58.70)
(sat.ddfw       1      1   13.9155   1370001      6715         16            1      139)
(smt.stats   99  15350 245804 945077  6438/6087/490   17327/1419    46  280   58.90)
ramon: poll                 wall=12.000s usage=11.970s mem=61496KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats  100  15584 250660 980199  6537/6163/495   17807/1419    46  280   59.09)
(smt.stats  101  15841 256271 1028209  6554/6179/496   18224/1513    47  299   59.09)
(smt.stats  102  16123 263344 1070063  6624/6236/514   18936/1524    48  300   59.28)
(sat.ddfw       1      1    13.165   1540001      7549         17            1      156)
ramon: poll                 wall=13.000s usage=12.973s mem=61748KiB load=1.00 rootload=1.00
(smt.stats  103  16433 273965 1131777  6645/6260/518   19660/1560    49  370   59.77)
(smt.stats  104  16773 276706 1175815  6690/6301/518   20210/1616    50  374   59.86)
(smt.stats  105  16874 278187 1190261  6692/6303/518   20438/1616    50  374   59.96)
ramon: poll                 wall=14.000s usage=13.956s mem=62644KiB load=0.98 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  106  16985 279641 1203223  6699/6310/519   20557/1670    51  393   59.96)
(smt.stats  107  17107 280738 1218856  6708/6317/519   20706/1670    51  393   59.96)
(smt.stats  108  17241 281690 1234170  6722/6329/519   20851/1670    51  393   59.96)
(sat.ddfw       1      1   12.4853   1720001      8431         18            1      174)
(smt.stats  109  17388 283504 1260517  6734/6335/519   21150/1670    51  393   60.05)
(smt.stats  110  17549 286586 1292562  6787/6397/521   21387/1685    52  407   60.05)
(smt.stats  111  17726 290825 1334123  6794/6400/521   21626/1685    52  407   60.05)
ramon: poll                 wall=15.000s usage=14.956s mem=62836KiB load=1.00 rootload=0.99
(smt.stats  112  17920 292800 1364957  6821/6430/522   21921/1685    53  426   60.05)
(smt.stats  113  18133 297041 1395521  6902/6438/525   22374/1686    53  426   60.25)
(smt.stats  114  18367 302307 1439621  6914/6518/525   22741/1713    54  438   60.25)
ramon: poll                 wall=16.000s usage=15.956s mem=63180KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.8705   1910001      9362         19            1      193)
(smt.stats  115  18624 306777 1469154  6934/6524/525   23061/1714    54  438   60.25)
(smt.stats  116  18906 313687 1511217  7004/6583/526   23597/1747    55  439   60.98)
(smt.stats  117  19216 316484 1550233  7042/6630/526   24004/1747    55  439   60.98)
ramon: poll                 wall=17.000s usage=16.956s mem=63348KiB load=1.00 rootload=1.00
(smt.stats  118  19556 320968 1589780  7063/6671/528   25196/1747    55  439   61.57)
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&16240345089
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230323672580097 := 8718968878455062528 >>l 51
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&16240345089
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230323672580097 := 8718968878723497984 >>l 51
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&16240345089
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #547 #551) 64)) 288230323672580097 := 9223372036720558080 >>l 51
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3585
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 0 := 60146319361 >>l 24
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3587
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 0 := 60179873792 >>l 24
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3587
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #109))) 0 := 60179873792 >>l 24
(sat.ddfw       1      1   11.3148   2110001     10343         20            1      214)
ramon: poll                 wall=18.003s usage=17.957s mem=63896KiB load=1.00 rootload=1.00
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3025
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 1808 := 8192&3025
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3025
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 1808 := 8192&3025
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3505
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 416 := 8192&3505
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3505
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 416 := 8192&3505
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3505
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 384 := 8192&3505
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3537
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 384 := 8192&3537
band: (band[36] (if (= #266 63) 18446744073709551616 (if #444 9223372036854775808 #441)) (lshr[64] (* 134217728 #250) (mod #554 64))) 0 := 8192&3537
band: (band[36] (if (= #113 35) 68719476736 (if #465 34359738368 #533)) (lshr[36] (bv2int %0) (+ 36 #536))) 256 := 8192&3537
ramon: poll                 wall=19.000s usage=18.893s mem=64196KiB load=0.94 rootload=0.94
(smt.stats  119  19929 329240 1614504  7382/6681/528   26146/1882    56  461   61.96)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats  120  20030 331847 1628593  7446/7047/543   26632/1882    56  461   61.96)
(sat.ddfw       1      1   10.8052   2320001     11372         21            1      235)
ramon: poll                 wall=20.000s usage=19.876s mem=64452KiB load=0.98 rootload=0.98
ramon: end                  Fri Nov  1 23:09:05 2024
ramon: root.execname        z3
ramon: root.utime           19.870s
ramon: root.stime           0.010s
ramon: group.total          19.894s
ramon: group.utime          19.874s
ramon: group.stime          0.020s
ramon: group.mempeak        64708KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.021s
ramon: loadavg              0.99
