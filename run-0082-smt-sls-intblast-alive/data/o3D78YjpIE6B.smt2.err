ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:06:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27403 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/o3D78YjpIE6B.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             925008
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3060    821  1496/1048/111      88/42     9   20   52.15)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   82.6446     10000        49          0            1        2)
(sat.ddfw       1      1   42.7393     20001        98          1            1        3)
(smt.stats    1    202   4956   1788  2268/2006/116     184/55    12   25   52.34)
(sat.ddfw       1      1   43.1965     40001       196          2            1        5)
(smt.stats    2    313   6630   2983  2347/2097/117     293/60    14   26   52.34)
(smt.stats    3    414  10106   5143  2384/2151/118     388/65    15   28   52.43)
(sat.ddfw       1      1   37.2208     70001       343          3            1        8)
(smt.stats    4    525  12506   6749  2476/2189/130     491/77    17   32   52.53)
ramon: poll                 wall=1.003s usage=0.984s mem=55044KiB load=0.98 rootload=0.97
(smt.stats    5    647  17076   9066  2530/2305/132     602/85    19   39   52.53)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  20302  14945  2541/2310/132     702/85    19   39   52.64)
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1 := 17395495349&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 1 := 1034 << 34
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1 := 17395495349&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 1 := 1034 << 34
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 0 := 1034 << 34
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 0 := 1034 << 34
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 516 := 517 << 35
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 516 := 517 << 35
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 516 := 517 << 35
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 689 := 517 << 35
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 690 := 517 << 35
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 1 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 2 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 17395495348 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 17395495344 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 17395495328 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 17395495296 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 2 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 8 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 16 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 32 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 64 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 256 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 512 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 1024 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 2048 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 17395495349&17763984736256
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 2048 := 17395495349&17763984736256
(sat.ddfw       1      1   33.7838    110001       539          4            1       12)
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 66 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 69 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495348 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495344 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495328 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495296 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495256 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495248 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495324 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495296 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495232 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395495168 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395494912 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 17395490816 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 512 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1024 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2048 := 17395495349&17763984736256
(smt.stats    7    859  21924  17296  2725/2399/204     830/94    20   54   53.23)
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 16384 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 32768 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 65536 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 131072 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 262144 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 524288 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 131072 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 262144 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1048576 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2097152 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 4194304 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 8388608 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 16777216 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 33554432 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 67108864 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 134217728 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 268435456 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 536870912 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1073741824 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2147483648 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 67108864 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2097152 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 4194304 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 8388608 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 16777216 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 33554432 := 17395495349&17763984736256
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 33554432 := 17395495349&17763984736256
(smt.stats    8    981  23305  21017  2783/2548/376     979/144    22  101   53.82)
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 1&1102
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 1 := 551 << 1
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 1&1102
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 1 := 551 << 1
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 1&1102
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 550 := 551 << 1
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 1&1102
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 1 := 1&1102
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1 := 1&1102
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 4&1098
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 4&1098
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 4&1098
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&1098
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 1098 := 1098 << 2
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&1099
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 1099 := 1098 << 2
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 549 := 549 << 3
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4607
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&1099
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 1099 := 1098 << 2
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 549 := 549 << 3
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 549 := 549 << 3
(smt.stats    9   1115  26947  25250  2843/2558/382    1160/155    23  118   54.50)
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 548 := 549 << 3
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 548 := 549 << 3
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 548 := 549 << 3
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 4 := 4&4392
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 4 := 4&4392
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 4 := 4&4392
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1 := 4&4392
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 4 := 4&4392
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 1 := 4&4392
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 2 := 4&4392
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 4&4392
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 2 := 4&4392
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 2&511
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 511 := 1100 << 1
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 2&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 3 := 1100 << 1
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 2&551
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 551 := 1100 << 1
(smt.stats   10   1216  30622  27460  2938/2641/417    1279/195    24  137   54.70)
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 2&2200
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 2&2200
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 2&2200
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 2203 := 550 << 2
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 2&2200
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #109))) 2203 := 550 << 2
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1 := 2&2200
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1 := 2&2200
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 2&2200
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 2 := 2&2200
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 2&2200
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 1 := 2&2200
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 0 := 2&2200
band: (band[46] (if (= #113 45) 1 (if #596 2 #722)) (shl[46] (bv2int %0) (+ 46 #725))) 1 := 2&2200
(smt.stats   11   1327  35279  30546  3010/2745/464    1398/221    25  143   54.99)
(sat.ddfw       1      1   28.5545    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=2.071s mem=57212KiB load=1.09 rootload=1.08
(sat.ddfw       1      1   24.6918    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  38086  33045  3208/2944/467    1569/240    26  152   55.36)
(smt.stats   13   1583  42811  40860  3240/2968/473    1726/304    28  166   55.46)
ramon: poll                 wall=3.000s usage=3.044s mem=58132KiB load=0.97 rootload=0.98
(sat.ddfw       1      1   21.5451    290001      1421          7            1       30)
(smt.stats   14   1730  50077  46161  3267/2989/474    1888/314    29  166   55.58)
ramon: poll                 wall=4.000s usage=4.022s mem=58196KiB load=0.98 rootload=0.97
(sat.ddfw       1      1   19.1847    370001      1813          8            1       38)
(smt.stats   15   1831  54403  49157  3389/3061/475    2005/329    30  171   55.68)
ramon: poll                 wall=5.000s usage=5.011s mem=57964KiB load=0.99 rootload=0.99
(smt.stats   16   1942  58526  54855  3498/3174/475    2156/344    31  176   55.68)
(smt.stats   17   2064  62717  62793  3525/3245/477    2342/397    33  180   55.82)
(sat.ddfw       1      1   17.1953    460001      2254          9            1       47)
(smt.stats   18   2198  69868  72869  3543/3268/477    2512/397    33  180   55.82)
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653439
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653439
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653439
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653437
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653257
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653261
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653439
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653439
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653439
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653439
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653437
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653439
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653437
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653183
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653183
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&402653181
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 4742501514256318461 := 1230 << 28
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&271804617
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&271804621
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 4742571882869647565 := 1230 << 28
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&271804673
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&271804929
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&271804621
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 271804621 := 1230 << 28
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 271804612 := 271804614&271804621
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 271804621 := 1230 << 28
(smt.stats   19   2345  76569  85594  3636/3363/488    2721/490    34  183   55.92)
(smt.stats   20   2506  81138  94342  3675/3401/490    2991/515    35  188   56.12)
(smt.stats   21   2607  84311 100448  3684/3410/491    3093/515    35  188   56.12)
ramon: poll                 wall=6.000s usage=5.999s mem=58328KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   15.6079    560001      2745         10            1       57)
(smt.stats   22   2718  88887 107558  3807/3424/491    3272/537    36  192   56.21)
ramon: poll                 wall=7.000s usage=6.980s mem=58488KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   14.2727    670001      3284         11            1       68)
(smt.stats   23   2840  91333 110878  4051/3575/491    3418/545    36  192   56.30)
ramon: poll                 wall=8.000s usage=7.948s mem=59000KiB load=0.97 rootload=0.97
(smt.stats   24   2974  94268 117870  4233/3955/494    3652/597    37  196   56.59)
ramon: poll                 wall=9.000s usage=8.944s mem=59016KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.2538    790001      3872         12            1       80)
(smt.stats   25   3121  99115 128221  4313/4028/496    3958/681    38  203   56.68)
ramon: poll                 wall=10.003s usage=9.948s mem=59060KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.3821    920001      4509         13            1       93)
(smt.stats   26   3282 106397 143439  4483/4083/498    4285/686    38  203   56.78)
ramon: poll                 wall=11.000s usage=10.927s mem=59076KiB load=0.98 rootload=0.98
(smt.stats   27   3459 112339 158536  4551/4247/499    4719/721    39  210   56.87)
(smt.stats   28   3560 115561 170823  4596/4281/499    4924/777    40  211   56.87)
ramon: poll                 wall=12.000s usage=11.897s mem=59168KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   11.4924   1060001      5196         14            1      108)
ramon: poll                 wall=13.000s usage=12.869s mem=59464KiB load=0.97 rootload=0.97
(smt.stats   29   3671 120847 180705  4707/4326/499    5185/787    40  211   56.97)
(sat.ddfw       1      1   10.8093   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.868s mem=59472KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.875s mem=59592KiB load=1.01 rootload=1.01
(smt.stats   30   3793 123961 185916  4952/4473/499    5351/798    40  211   57.16)
(sat.ddfw       1      1    10.193   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=15.856s mem=59672KiB load=0.98 rootload=0.98
ramon: poll                 wall=17.000s usage=16.856s mem=59584KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.66568   1540001      7549         17            1      156)
(smt.stats   31   3927 126675 194230  5243/4767/499    5552/803    40  211   57.26)
ramon: poll                 wall=18.000s usage=17.856s mem=59840KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 131345 209240  5325/5039/501    5758/963    41  217   57.35)
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 17812987237559&3
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 2 := 17812987237559&3
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 3 := 17812987237559&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 3 := 2 << 44
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 3 := 17812987237559&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 3 := 2 << 44
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 3 := 17812987237559&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #818 #822) 64)) 3 := 2 << 44
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 3 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 3 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 3 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 3 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1027 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1027 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1283 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1283 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1283 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1027 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 1027 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 5123 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 5123 := 17812987237559&17812987238147
band: (band[46] (if (= #355 63) 1 (if #575 2 #811)) (shl[64] (* 2 #107) (mod #826 64))) 5123 := 17812987237559&17812987238147
(smt.stats   33   4235 137263 226133  5502/5219/544    6147/999    42  220   57.62)
ramon: poll                 wall=19.000s usage=18.879s mem=60220KiB load=1.02 rootload=1.02
(sat.ddfw       1      1    9.1818   1720001      8431         18            1      174)
ramon: poll                 wall=20.000s usage=19.878s mem=60316KiB load=1.00 rootload=1.00
(smt.stats   34   4412 145750 250818  5821/5229/544    6659/1008    42  220   58.02)
ramon: end                  Fri Nov  1 23:06:22 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.010s
ramon: group.total          19.951s
ramon: group.utime          19.939s
ramon: group.stime          0.012s
ramon: group.mempeak        60572KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              0.99
