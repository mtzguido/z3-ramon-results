ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:11:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25922 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1403
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LZ59iXTV3XSV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4186795
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.80)
(smt.stats    0    101   2038    379   582/520/101      93/28     8   16   18.67)
(smt.stats    1    202   3420    892  1102/910/101     224/40     9   17   18.96)
(smt.stats    2    313   4472   2184  1229/1128/103     372/59    11   20   18.96)
(smt.stats    3    414   5462   4220  1267/1164/116     505/70    13   30   19.05)
(smt.stats    4    525   6737   6605  1325/1216/122     656/109    14   43   19.05)
(smt.stats    5    647   8245   9799  1351/1238/127     873/114    15   46   19.15)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748   9249  12586  1382/1265/127    1043/144    16   66   19.24)
(smt.stats    7    859  10220  16144  1390/1276/128    1201/158    17   67   19.36)
(smt.stats    8    981  11245  19244  1407/1292/129     930/162    18  493   19.36)
(smt.stats    9   1115  13317  23455  1416/1302/131    1148/170    19  501   19.36)
(smt.stats   10   1216  13973  24964  1469/1302/131    1263/172    19  501   19.36)
(smt.stats   11   1327  14481  27140  1568/1390/131    1402/172    19  501   19.36)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  15333  30537  1600/1488/137    1566/210    20  515   19.46)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&7
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262144 := 262120 << 4
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&7
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262144 := 262120 << 4
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&7
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262144 := 262120 << 4
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261925&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261925&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261925&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261924&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261924&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261923&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261922&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261920&15
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 524064 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261925&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261924&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 2&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&15
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262144 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&15
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 0 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 15 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 14 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 262143 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 262122 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 13 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 12 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 14 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 4 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1 := 261408&15
(smt.stats   13   1583  16406  33423  1708/1594/250    1794/229    21  541   19.74)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1 := 52&31
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1 := 52&31
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1 := 68&31
(smt.stats   14   1730  17678  35550  1904/1747/251    2195/257    22  544   19.94)
(smt.stats   15   1831  19575  46417  2107/1830/251    2453/267    22  544   20.04)
(smt.stats   16   1942  20626  50433  2248/2123/257    2790/338    23  559   20.13)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 240 := 240&65535
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262384 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 240 := 240&65535
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 536871152 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65504 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65520 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65504 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65488 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65488 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 512 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2048 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8192 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8192 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 32768 := 131072&65535
(smt.stats   17   2066  22786  58325  2342/2209/320    3351/423    24  571   20.53)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 960 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 512 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2048 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 16 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 80 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 1297 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 1265 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 1265 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 512 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2048 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8192 := 131072&65535
(smt.stats   18   2200  24613  64833  2519/2307/382    3619/542    25  587   20.83)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8192 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8192 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2048 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 992 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 512 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16 := 131072&65535
ramon: poll                 wall=1.000s usage=0.931s mem=22388KiB load=0.93 rootload=0.91
(smt.stats   19   2347  27644  77819  2588/2433/507    4312/572    26  618   21.62)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
(smt.stats   20   2508  31657  92039  2654/2507/513    4923/821    28  643   21.90)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 16 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 18 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 18 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 50 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 50 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 114 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 114 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 242 := 242&32767
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262386 := 262132 << 16
(smt.stats   21   2609  34052  99983  2731/2568/536    5177/861    29  658   21.99)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   22   2720  36441 108109  2878/2747/548    5565/1063    30  662   21.99)
(smt.stats   23   2842  40745 124533  2908/2756/548    6129/1064    30  662   22.19)
(smt.stats   24   2976  43723 135551  2951/2823/555    6654/1349    32  679   22.28)
ramon: poll                 wall=2.000s usage=1.931s mem=23720KiB load=1.00 rootload=1.00
(smt.stats   25   3123  46727 152229  3084/2856/555    6926/1354    32  679   22.46)
(smt.stats   26   3284  49563 163676  3324/3187/556    7544/1456    33  688   22.55)
(smt.stats   27   3461  54153 184573  3390/3228/557    8402/1458    33  688   22.74)
(smt.stats   28   3562  55660 190234  3478/3271/557    8772/1707    34  701   22.74)
(smt.stats   29   3673  58109 197014  3658/3439/557    9184/1711    34  701   22.84)
ramon: poll                 wall=3.000s usage=2.931s mem=24216KiB load=1.00 rootload=1.00
(smt.stats   30   3795  60366 203383  3775/3561/557    9528/1712    34  701   22.94)
(smt.stats   31   3929  64202 208322  3853/3657/557   10033/1716    34  701   23.13)
(smt.stats   32   4076  67117 225525  4046/3825/557   10866/1723    34  701   23.22)
ramon: poll                 wall=4.000s usage=3.931s mem=24692KiB load=1.00 rootload=1.00
(smt.stats   33   4237  70364 247454  4193/4057/558   11437/2463    35  704   23.32)
(smt.stats   34   4414  75341 270521  4304/4062/558   12321/2476    35  704   23.51)
(smt.stats   35   4608  79980 292661  4551/4191/559   13212/2484    35  704   23.70)
ramon: poll                 wall=5.000s usage=4.930s mem=25272KiB load=1.00 rootload=1.00
(smt.stats   36   4709  82568 305928  4687/4432/559   13609/2834    36  707   23.70)
(smt.stats   37   4820  85904 328760  4725/4587/563   14080/2941    37  718   23.79)
(smt.stats   38   4942  88270 340542  4793/4596/564   14721/2947    37  718   23.89)
(smt.delete-inactive-clauses  :num-deleted-clauses 80)
(smt.stats   39   5076  91774 362953  4935/4798/566   15586/3283    38  724   24.08)
(smt.stats   40   5223  95265 380244  5042/4820/566   15960/3288    38  724   24.08)
ramon: poll                 wall=6.000s usage=5.930s mem=25452KiB load=1.00 rootload=1.00
(smt.stats   41   5384  98882 402446  5250/4922/566   16729/3296    38  724   24.27)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5561 101874 417709  5359/5140/567   17306/3584    39  735   24.37)
ramon: poll                 wall=7.000s usage=6.930s mem=25824KiB load=1.00 rootload=1.00
(smt.stats   43   5755 105020 433860  5679/5423/569   17953/3589    39  735   24.46)
(smt.stats   44   5968 108767 460791  5895/5756/571   19316/3897    40  743   24.65)
(smt.stats   45   6069 110799 476134  5902/5766/571   19634/3897    40  743   24.75)
(smt.stats   46   6180 114417 507868  5906/5768/571   20387/3898    40  743   24.85)
(smt.stats   47   6302 118097 538395  5922/5779/576   21150/4501    41  762   24.94)
ramon: poll                 wall=8.000s usage=7.929s mem=26348KiB load=1.00 rootload=1.00
(smt.stats   48   6436 122657 566099  5942/5792/582   21796/4668    42  861   25.04)
(smt.stats   49   6583 126870 587574  6051/5815/582   23170/4670    42  861   25.13)
(smt.stats   50   6744 131103 615583  6149/5933/582   24093/4675    42  861   25.45)
ramon: poll                 wall=9.000s usage=8.929s mem=26904KiB load=1.00 rootload=1.00
(smt.stats   51   6921 134520 641110  6321/6043/582   24737/4861    43  874   25.55)
(smt.stats   52   7115 140747 684409  6370/6229/583   25435/4863    43  874   25.74)
(smt.stats   53   7328 145865 732736  6440/6244/583   27080/4932    44  880   25.93)
ramon: poll                 wall=10.000s usage=9.929s mem=27588KiB load=1.00 rootload=1.00
(smt.stats   54   7562 151290 780864  6675/6415/583   28438/4933    44  880   26.31)
(smt.stats   55   7663 153168 792106  6803/6522/583   28740/4941    44  880   26.31)
(smt.stats   56   7774 154667 804491  7005/6664/583   28919/4950    44  880   26.50)
ramon: poll                 wall=11.000s usage=10.929s mem=27880KiB load=1.00 rootload=1.00
(smt.stats   57   7896 156814 814096  7138/6845/583   29276/4956    44  880   26.50)
(smt.stats   58   8030 158249 829708  7221/6981/583   29811/4960    44  880   26.60)
(smt.stats   59   8177 160688 850422  7320/7067/583   30234/4966    44  880   26.60)
(smt.stats   60   8338 164802 876155  7423/7202/584   30632/5619    45  883   26.69)
ramon: poll                 wall=12.000s usage=11.929s mem=28104KiB load=1.00 rootload=0.99
(smt.stats   61   8515 168447 922249  7482/7272/584   31357/5620    45  883   26.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8709 172870 968057  7552/7365/586   32110/5819    46  905   26.89)
(smt.stats   63   8922 178489 1030752  7569/7387/586   32684/5821    46  905   26.98)
ramon: poll                 wall=13.000s usage=12.929s mem=28472KiB load=1.00 rootload=1.00
(smt.stats   64   9156 183263 1052401  7629/7433/589   33155/5996    47  911   26.98)
(smt.stats   65   9413 186883 1074395  8155/7576/592   33821/6001    47  911   27.27)
(smt.stats   66   9514 188749 1088936  8190/8024/594   34141/6135    48  958   27.27)
(smt.stats   67   9625 190743 1098805  8222/8029/594   34392/6135    48  958   27.27)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   68   9747 192206 1112608  8281/8070/595   34693/6135    48  958   27.37)
(smt.stats   69   9881 194498 1129291  8305/8133/595   34889/6135    48  958   27.37)
ramon: poll                 wall=14.000s usage=13.928s mem=28860KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10028 197153 1151447  8411/8148/595   35498/6141    48  958   27.46)
(smt.stats   71  10189 200302 1183251  8505/8268/595   36095/6145    48  958   27.46)
(smt.stats   72  10366 204812 1223295  8681/8505/600   36603/6393    49  960   27.56)
ramon: poll                 wall=15.000s usage=14.928s mem=29140KiB load=1.00 rootload=1.00
(smt.stats   73  10560 209447 1264190  8755/8536/600   37661/6395    49  960   27.66)
(smt.stats   74  10773 214936 1295240  8845/8626/602   38185/6621    50  968   27.75)
(smt.stats   75  11007 219527 1348853  8912/8746/603   39851/6624    50  968   27.95)
ramon: poll                 wall=16.004s usage=15.932s mem=29788KiB load=1.00 rootload=1.01
(smt.stats   76  11264 228873 1414569  9104/8889/608   40942/6814    51  969   28.23)
(smt.stats   77  11546 236600 1485899  9257/8967/612   42908/6823    51  969   28.62)
(smt.stats   78  11647 239596 1503427  9279/9080/612   43440/7080    52  990   28.72)
(smt.stats   79  11758 242004 1524715  9356/9111/612   43856/7084    52  990   28.72)
(smt.stats   80  11880 245222 1557740  9424/9205/613   44689/7086    52  990   28.81)
(smt.stats   81  12014 249093 1583376  9568/9318/613   45651/7087    52  990   29.00)
ramon: poll                 wall=17.000s usage=16.928s mem=30416KiB load=1.00 rootload=0.99
(smt.stats   82  12161 252967 1627266  9672/9375/614   46149/7242    53  998   29.00)
(smt.stats   83  12322 256827 1666201  9751/9477/614   47114/7243    53  998   29.30)
(smt.stats   84  12499 261165 1714425  9818/9549/614   48445/7246    53  998   29.58)
ramon: poll                 wall=18.000s usage=17.928s mem=31364KiB load=1.00 rootload=1.00
(smt.stats   85  12693 265437 1755335  9879/9631/614   49919/7362    54  999   29.78)
(smt.stats   86  12906 271875 1784802 10221/9789/614   51365/7374    54  999   30.13)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   87  13140 276438 1817563 10360/10007/615   52308/7381    54  999   30.35)
ramon: poll                 wall=19.000s usage=18.928s mem=31932KiB load=1.00 rootload=1.00
(smt.stats   88  13397 282977 1872702 10616/10184/615   53174/7386    54  999   30.54)
(smt.stats   89  13679 288412 1924952 10646/10388/615   55361/7787    55 1004   30.82)
ramon: poll                 wall=20.000s usage=19.927s mem=32688KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:11:20 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.001s
ramon: group.utime          19.977s
ramon: group.stime          0.024s
ramon: group.mempeak        32980KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
