ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:06:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24575 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tYaQoYSx1oE5.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             173822
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 3 := 4&3
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 5 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&85
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 2199023255551 := 1 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 2199023255551 := 1 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 2199023255551 := 1 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 1 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627769
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 1099511627769 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1099511627777 := 1 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627775
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627775
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 1099511627768 := 2 << 39
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 3 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 2 := 4&1099511627776
(smt.stats    0    101    853    950  1147/1001/145      97/18     7   27   19.19)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 4 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 1 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 4&1099511627776
band: (band[41] (if (or #542 #543 #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 ...) 0 (if #579 1 #585)) (shl[41] (bv2int %0) (+ 41 #729))) 2 := 4&1099511627776
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&1099511627770
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 1099511627770 := 6 << 37
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720833 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720833
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720834
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 824633720834 := 6 << 37
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720833 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720833 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720833 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 1&824633720832
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720834 := 3 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 1&824633720832
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 824633720834 := 3 << 38
(smt.stats    1    202   1960   2370  1269/1102/173     206/23    10   34   19.39)
(smt.stats    2    313   4766   6135  1424/1250/191     386/51    14   44   19.59)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 2&1099511627769
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 2&274877906953
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 2&1099511627769
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 2 := 2&549856477513
(smt.stats    3    414   5583   7207  1537/1286/193     512/52    15   49   20.15)
(smt.stats    4    525   7604   9931  1593/1414/209     644/59    16   51   20.15)
(smt.stats    5    647  10188  14619  1649/1417/209     800/104    17   69   20.25)
ramon: poll                 wall=1.000s usage=0.937s mem=21532KiB load=0.94 rootload=0.92
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  11703  16724  1711/1480/209     930/107    17   69   20.35)
(smt.stats    7    859  15133  24868  1758/1579/214    1077/125    18   70   20.34)
(smt.stats    8    981  17032  29767  1770/1592/230    1249/149    21   95   20.44)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 2&1099595513555
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 2&1099595513555
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 2&1099595513353
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3298618768905 := 268436106 << 38
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 2&1099595513545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3298618769097 := 268436106 << 38
(smt.stats    9   1115  17767  31568  1908/1593/230    1425/153    21   95   20.53)
(smt.stats   10   1216  19003  34594  1980/1785/236    1556/175    22  107   20.63)
(smt.stats   11   1327  20572  39306  2012/1822/237    1702/186    23  109   20.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  22947  46752  2036/1857/239    1889/210    26  120   20.63)
(smt.stats   13   1583  26181  54196  2066/1880/242    2063/210    26  120   20.63)
ramon: poll                 wall=2.000s usage=1.936s mem=21900KiB load=1.00 rootload=1.00
(smt.stats   14   1730  28252  59951  2167/1886/242    2256/233    27  135   20.72)
(smt.stats   15   1831  29411  63651  2173/1991/242    2360/233    27  135   20.72)
(smt.stats   16   1942  30633  69004  2186/2002/242    2496/233    27  135   20.82)
(smt.stats   17   2064  31611  72070  2220/2007/243    2653/242    28  135   20.91)
(smt.stats   18   2198  33184  75807  2272/2075/243    2821/242    28  135   20.91)
(smt.stats   19   2345  35686  83467  2305/2093/243    2998/242    28  135   20.91)
(smt.stats   20   2506  38937  90176  2335/2143/243    3223/242    28  135   21.06)
(smt.stats   21   2607  40042  94328  2380/2152/243    3362/242    28  135   21.06)
ramon: poll                 wall=3.000s usage=2.935s mem=22264KiB load=1.00 rootload=1.00
(smt.stats   22   2718  41401  97302  2407/2200/243    3519/242    28  135   21.15)
(smt.stats   23   2840  42858 100506  2457/2238/243    3719/242    28  135   21.15)
(smt.stats   24   2974  44481 105613  2502/2316/244    3866/348    29  138   21.25)
(smt.stats   25   3121  47246 116190  2530/2320/244    4098/348    29  138   21.25)
ramon: poll                 wall=4.000s usage=3.935s mem=22472KiB load=1.00 rootload=1.00
(smt.stats   26   3282  48993 120288  2642/2352/244    4323/357    29  138   21.25)
ramon: poll                 wall=5.000s usage=4.934s mem=22568KiB load=1.00 rootload=1.00
(smt.stats   27   3459  52650 130180  2748/2502/244    4595/359    29  138   21.34)
(smt.stats   28   3560  54383 136026  2751/2565/245    4744/434    30  138   21.34)
(smt.stats   29   3671  56666 144088  2788/2594/245    4893/434    30  138   21.56)
(smt.stats   30   3793  59509 148262  2788/2594/247    5036/434    30  138   21.56)
(smt.stats   31   3927  62237 156462  2823/2609/247    5282/447    31  141   21.66)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  64080 164056  2847/2644/247    5499/447    31  141   21.75)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255552 := 134217732 << 15
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255552 := 134217732 << 15
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255552 := 134217732 << 15
(smt.stats   33   4235  67329 172286  2876/2649/247    5724/447    31  141   21.75)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1099511627776
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3298534883328 := 134217734 << 14
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1099511627776
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 3298534883328 := 134217734 << 14
(smt.stats   34   4412  70642 180999  2895/2677/252    5967/504    32  142   21.75)
(smt.stats   35   4606  73212 192796  2957/2729/260    6273/529    33  144   21.85)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663540
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663540
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663543
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663543
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663543
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663543
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663535
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199123919087 := 100665250 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663535
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199123919087 := 100665250 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 9 := 9&100663535
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199123919087 := 100665250 << 40
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 9&100663535
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 9&100663535
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 9&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255559 := 100665250 << 40
(smt.stats   36   4707  74619 196797  3076/2763/260    6429/538    33  144   21.84)
ramon: poll                 wall=6.000s usage=5.933s mem=23368KiB load=1.00 rootload=1.00
(smt.stats   37   4818  75214 198233  3257/2932/280    6532/588    34  153   21.94)
(smt.stats   38   4940  76697 203595  3369/3140/281    6700/593    34  153   22.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 45)
(smt.stats   39   5074  78930 209913  3389/3167/281    6863/593    34  153   22.13)
(smt.stats   40   5221  82202 220664  3482/3187/281    7048/614    35  154   22.13)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 1 := 1&2199006478361
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 4398029733913 := 268435616 << 37
(smt.stats   41   5382  84731 230457  3739/3330/281    7260/619    35  154   22.23)
(smt.stats   42   5559  88062 241942  3755/3538/282    7449/640    36  158   22.23)
ramon: poll                 wall=7.000s usage=6.933s mem=23600KiB load=1.00 rootload=1.00
(smt.stats   43   5753  91600 255184  3892/3558/282    7717/642    36  158   22.42)
(smt.stats   44   5966  96303 261914  4160/3949/284    8036/687    37  162   22.51)
(smt.stats   45   6067 100666 279897  4174/3961/286    8178/687    37  162   22.61)
(smt.stats   46   6178 102136 289537  4188/3975/288    8300/750    38  164   22.61)
(smt.stats   47   6300 106046 292240  4198/3982/288    8426/750    38  164   22.61)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255553 := 2199090366000 << 35
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255553 := 2199090366000 << 35
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255553 := 2199090364688 << 35
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 2199023255553 := 2199090365344 << 35
(smt.stats   48   6434 107459 296321  4332/3988/288    8611/774    39  166   22.83)
(smt.stats   49   6581 109204 304475  4401/4173/295    8829/777    39  166   22.93)
ramon: poll                 wall=8.000s usage=7.933s mem=24256KiB load=1.00 rootload=1.00
(smt.stats   50   6742 111180 316922  4680/4252/295    9005/786    39  166   23.02)
(smt.stats   51   6919 113177 327316  4963/4584/295    9250/836    40  177   23.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 117867 349816  4991/4772/298    9484/836    40  177   23.12)
(smt.stats   53   7326 121117 363217  5126/4831/298    9794/875    41  185   23.31)
(smt.stats   54   7560 124689 377580  5194/4920/298   10106/876    41  185   23.31)
ramon: poll                 wall=9.000s usage=8.932s mem=24708KiB load=1.00 rootload=1.00
(smt.stats   55   7661 126732 388837  5219/4965/298   10229/876    41  185   23.40)
(smt.stats   56   7772 128600 395719  5227/4988/298   10373/876    41  185   23.40)
(smt.stats   57   7894 131435 408790  5236/4997/298   10524/876    41  185   23.40)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 67108864 << 8
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 67108864 << 8
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 67108864 << 8
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 67108864 << 8
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 67108864 << 8
(smt.stats   58   8028 134204 417632  5257/5001/298   10670/877    41  185   23.40)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 33554432 << 24
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 33554432 << 24
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 33554432 << 24
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 33554432 << 24
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 0 := 33554432 << 24
(smt.stats   59   8175 137364 431197  5286/5026/303   10845/963    42  186   23.40)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&17045651456
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 34091302906 := 508 << 25
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&17045651456
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 34091302906 := 508 << 25
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&17045651456
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 34091302906 := 508 << 25
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&17045651456
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 34091302906 := 508 << 25
(smt.stats   60   8336 141037 445019  5362/5056/308   11130/969    42  186   23.69)
ramon: poll                 wall=10.000s usage=9.931s mem=25108KiB load=1.00 rootload=0.99
(smt.stats   61   8513 145042 464417  5414/5169/314   11473/997    43  188   23.69)
(smt.stats   62   8707 151085 473179  5442/5173/314   11683/997    43  188   23.69)
ramon: poll                 wall=11.000s usage=10.931s mem=25340KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8920 154541 478892  5540/5217/314   11965/1039    44  189   23.98)
(smt.stats   64   9154 160110 498362  5810/5500/316   12382/1040    44  189   24.07)
ramon: poll                 wall=12.000s usage=11.931s mem=25580KiB load=1.00 rootload=1.00
(smt.stats   65   9411 165612 518454  6001/5723/317   12864/1122    45  192   24.17)
ramon: poll                 wall=13.000s usage=12.930s mem=25596KiB load=1.00 rootload=1.00
(smt.stats   66   9512 167161 526788  6020/5771/317   13037/1123    45  192   24.17)
(smt.stats   67   9623 168688 536748  6039/5780/317   13199/1199    46  193   24.17)
(smt.stats   68   9745 170371 545124  6067/5798/317   13357/1199    46  193   24.26)
(smt.stats   69   9879 174613 555682  6163/5829/317   13546/1201    46  193   24.26)
(smt.delete-inactive-clauses  :num-deleted-clauses 68)
(smt.stats   70  10026 180236 572982  6202/5949/317   13663/1203    46  193   24.26)
ramon: poll                 wall=14.000s usage=13.929s mem=25884KiB load=1.00 rootload=1.00
(smt.stats   71  10187 183814 585741  6229/5968/317   13869/1203    46  193   24.36)
(smt.stats   72  10364 187780 597567  6313/6028/317   14129/1204    46  193   24.36)
(smt.stats   73  10558 192551 606779  6368/6077/317   14326/1204    46  193   24.46)
ramon: poll                 wall=15.000s usage=14.929s mem=25940KiB load=1.00 rootload=1.00
(smt.stats   74  10771 201094 658774  6403/6158/318   14582/1304    47  195   24.46)
ramon: poll                 wall=16.000s usage=15.929s mem=25988KiB load=1.00 rootload=1.00
(smt.stats   75  11005 207617 680440  6649/6161/318   14890/1308    47  195   24.55)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 197912092999688 := 4398012958512 << 36
(smt.stats   76  11262 212678 695311  6941/6690/324   15284/1401    48  199   24.74)
ramon: poll                 wall=17.003s usage=16.932s mem=26236KiB load=1.00 rootload=1.00
(smt.stats   77  11544 218043 725511  7051/6718/324   15728/1402    48  199   25.03)
(smt.stats   78  11645 220624 733340  7065/6811/324   15860/1402    48  199   25.03)
ramon: poll                 wall=18.000s usage=17.928s mem=26524KiB load=1.00 rootload=1.00
(smt.stats   79  11756 223040 742955  7159/6823/324   16001/1404    48  199   25.03)
(smt.stats   80  11878 227988 770185  7178/6932/324   16139/1404    48  199   25.03)
(smt.stats   81  12012 230782 783534  7185/6939/324   16326/1404    48  199   25.13)
ramon: poll                 wall=19.000s usage=18.928s mem=26688KiB load=1.00 rootload=1.00
(smt.stats   82  12159 233684 794539  7238/6949/324   16584/1404    48  199   25.22)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 13 := 28 << 26
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 8 := 28 << 26
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #1046 #1048) 64)) 8 := 28 << 26
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   83  12320 237806 814496  7337/7066/324   16825/1406    48  199   25.32)
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1879048192
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1879048191 := 14 << 27
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1879048192
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1879048191 := 14 << 27
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1879048192
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1879048191 := 14 << 27
band: (band[41] (if (or #741 #742 #743 #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 ...) 0 (if #801 1 #807)) (shl[64] (* 2 #114) (mod #1049 64))) 0 := 0&1879048192
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1879048191 := 14 << 27
(smt.stats   84  12497 240702 828721  7388/7099/329   17112/1541    49  200   25.51)
ramon: poll                 wall=20.000s usage=19.927s mem=27076KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:06:55 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.976s
ramon: group.stime          0.020s
ramon: group.mempeak        27332KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.00
