ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:03:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41943 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KCz2hBOgbJkl.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2910952
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101    980    252  1120/961/107     104/16     5   16   19.15)
(smt.stats    1    202   2052    919  1351/1171/110     234/29     7   20   19.15)
(smt.stats    2    313   3188   2174  1438/1308/114     344/35     9   27   19.15)
(smt.stats    3    414   4125   4080  1549/1414/124     450/57    13   31   19.25)
(smt.stats    4    525   5184   7322  1609/1465/133     592/96    17   40   19.25)
(smt.stats    5    647   6559  12294  1626/1486/133     711/96    17   40   19.34)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748   8759  17676  1653/1494/133     815/96    17   40   19.34)
(smt.stats    7    859  10028  20656  1701/1512/133     945/96    17   40   19.44)
ramon: poll                 wall=1.000s usage=0.999s mem=20468KiB load=1.00 rootload=0.99
(smt.stats    8    981  11246  22576  1741/1588/135    1091/145    18   45   19.44)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 2 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 2 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 2 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 43&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 43 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177656&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177656&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177656&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 70368744177662 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177656&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 70368744177662 << 2
(smt.stats    9   1116  14066  26319  1850/1675/139    1215/149    20   48   19.54)
(smt.stats   10   1217  15021  28126  1867/1722/152    1328/164    22   54   19.54)
(smt.stats   11   1328  16865  30343  1873/1728/152    1447/164    22   54   19.54)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  18481  33587  1960/1779/152    1610/173    23   56   19.63)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5881&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 281474976716537 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 1 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5881&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 281474976716537 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 0 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 25860513485291520 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 0 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088833&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 316659348799489 := 1470 << 44
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5865&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 25754960369030889 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411008&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411009&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1611884046319617 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411008&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411008&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 825 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 63771674411008&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 918 := 1466 << 40
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5857&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1618481116092129 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 61572651155455&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1609685023064063 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 50577534877696&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 1 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 5857&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 422212465071841 := 1464 << 38
(smt.stats   13   1584  19798  36361  2057/1828/152    1765/183    23   56   19.82)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 59373627899903&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1607485999808511 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 59373627899903&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 1607485999808511 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 281474976710655 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 30099130810368&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 824 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 30099130810368&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 35184372088833 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 30099130810368&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 35184372088833 := 1462 << 36
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 50577534877696&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 919 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 50577534877696&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 1463 := 1464 << 38
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 51677046505472&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 403520767393792 := 1468 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 211106232532991 := 1468 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 211106232532991 := 1468 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177663&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 211106232532991 := 1468 << 42
(smt.stats   14   1731  21550  39622  2160/1930/178    1962/272    24   62   20.04)
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 52776558133248&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 65970697666560 := 1468 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 52776558133248&0
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 65970697666560 := 1468 << 42
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 57174604644352&0
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6460730324811776 := 1469 << 43
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 1 := 65970697666560&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666560&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6469526417833984 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666561&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666561&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666561&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 65970697666562&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 6469526417833986 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 70368744177662&1
shl: (shl[64] (bv2int %0) (mod (+ #107 #349) 64)) 25825329113202686 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 52776558133248 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&1
shl: (shl[46] (bv2int %0) (mod (bv2int %0) 46)) 52776558133248 := 1471 << 45
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 0 := 35184372088832&1
band: (band[46] (shl[46] (bv2int %0) (mod #107 46)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #642 1 #644))) 1 := 35184372088832&1
band: (band[46] (shl[64] (bv2int %0) (mod #350 64)) (if (or #833 #834 #835 #836 #837 #838 #839 #840 #841 #842 #843 #844 #845 #846 #847 #848 ...) 0 (if #878 1 #914))) 1 := 35184372088832&1
(smt.stats   15   1832  23251  42740  2277/2043/219    2077/290    25   66   20.14)
ramon: poll                 wall=2.000s usage=1.997s mem=21520KiB load=1.00 rootload=0.99
(smt.stats   16   1943  24523  43991  2348/2130/240    2197/292    26   75   20.33)
(smt.stats   17   2065  27632  48634  2409/2209/242    2334/307    27   80   20.43)
ramon: poll                 wall=3.000s usage=2.997s mem=21904KiB load=1.00 rootload=1.00
(smt.stats   18   2199  29205  50475  2578/2249/242    2491/308    27   80   20.72)
(smt.stats   19   2346  30042  52591  2936/2502/242    2638/321    27   80   20.91)
ramon: poll                 wall=4.000s usage=3.997s mem=22244KiB load=1.00 rootload=1.00
(smt.stats   20   2507  33204  60295  3087/2885/245    2810/348    28   83   21.01)
(smt.stats   21   2608  35250  63412  3240/2930/245    2923/364    29   86   21.20)
ramon: poll                 wall=5.000s usage=4.996s mem=22404KiB load=1.00 rootload=1.00
(smt.stats   22   2719  37794  68912  3467/3151/245    3046/367    29   86   21.20)
(smt.stats   23   2841  40493  71593  3575/3279/245    3180/370    29   86   21.29)
ramon: poll                 wall=6.000s usage=5.996s mem=22504KiB load=1.00 rootload=0.99
(smt.stats   24   2975  41081  72917  3710/3438/245    3328/373    29   86   21.39)
ramon: poll                 wall=7.004s usage=6.999s mem=22692KiB load=1.00 rootload=1.01
(smt.stats   25   3122  44215  77983  3973/3705/247    3508/398    30   93   21.49)
(smt.stats   26   3283  48217  82643  4173/3858/247    3680/437    31   98   21.68)
ramon: poll                 wall=8.000s usage=7.995s mem=23012KiB load=1.00 rootload=0.99
(smt.stats   27   3460  52121  91328  4199/3988/247    3925/440    31   98   21.78)
(smt.stats   28   3561  54181  94616  4235/4015/249    4096/510    32  100   21.78)
ramon: poll                 wall=9.000s usage=8.995s mem=23136KiB load=1.00 rootload=1.00
(smt.stats   29   3672  56032  97125  4382/4065/249    4216/514    32  100   21.87)
(smt.stats   30   3794  58376 100660  4656/4368/249    4342/577    33  102   21.87)
ramon: poll                 wall=10.000s usage=9.995s mem=23228KiB load=1.00 rootload=1.00
(smt.stats   31   3928  61568 106570  4826/4482/249    4510/581    33  102   21.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  66160 117018  4926/4706/249    4662/587    33  102   22.06)
ramon: poll                 wall=11.000s usage=10.994s mem=23392KiB load=1.00 rootload=1.00
(smt.stats   33   4236  69981 124689  5187/4803/249    4837/589    33  102   22.16)
ramon: poll                 wall=12.000s usage=11.994s mem=23468KiB load=1.00 rootload=1.00
(smt.stats   34   4413  74122 133685  5334/5015/249    5042/589    33  102   22.16)
ramon: poll                 wall=13.000s usage=12.994s mem=23604KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.994s mem=23804KiB load=1.00 rootload=1.00
(smt.stats   35   4607  78379 138169  5501/5196/249    5251/598    33  102   22.36)
ramon: poll                 wall=15.000s usage=14.993s mem=23812KiB load=1.00 rootload=1.00
(smt.stats   36   4708  79468 139954  5748/5418/249    5361/602    33  102   22.36)
(smt.stats   37   4819  83498 145113  5806/5613/249    5474/602    33  102   22.46)
(smt.stats   38   4941  85899 150372  5845/5639/249    5592/604    33  102   22.46)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
ramon: poll                 wall=16.000s usage=15.993s mem=23868KiB load=1.00 rootload=1.00
(smt.stats   39   5075  89329 156753  5872/5668/249    5741/604    33  102   22.46)
ramon: poll                 wall=17.000s usage=16.993s mem=23912KiB load=1.00 rootload=1.00
(smt.stats   40   5222  91652 162886  6120/5693/249    5887/604    33  102   22.65)
(smt.stats   41   5383  96097 167892  6266/5969/249    6055/606    33  102   22.74)
ramon: poll                 wall=18.000s usage=17.992s mem=24040KiB load=1.00 rootload=1.00
(smt.stats   42   5560  98152 173131  6606/6181/249    6231/615    33  102   22.74)
ramon: poll                 wall=19.000s usage=18.992s mem=24112KiB load=1.00 rootload=1.00
(smt.stats   43   5754 101042 184947  6750/6438/249    6422/621    33  102   22.84)
(smt.stats   44   5967 103977 197890  6851/6660/257    6606/743    35  135   22.84)
ramon: poll                 wall=20.004s usage=19.995s mem=24228KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:03:38 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.997s
ramon: group.utime          19.981s
ramon: group.stime          0.016s
ramon: group.mempeak        24484KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
