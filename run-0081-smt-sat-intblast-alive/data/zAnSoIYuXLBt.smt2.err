ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:24:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28001 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1353
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zAnSoIYuXLBt.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             579096
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   237/236     0/0  61       0    18.63   0.00)
(sat.stats    203   1235    0   237/236   203/101  61       0    18.92   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 482 :time 0.00)
(sat.stats    203   1235    0   237/236   203/101  61       0    18.92   0.01)
(sat.stats    203   1235    0   237/236   203/101  61       0    18.92   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 616018.92 :time 0.00)
(sat.stats    203   1235    0   237/236   208/106  61       0    18.92   0.01)
(sat.stats    207   1310    1   237/236   212/106  61       0    18.92   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    211   1325    2   237/236   216/106  61       0    18.92   0.01)
(sat.stats    214   1327    3   237/236   219/106  61       0    18.92   0.01)
(sat.stats    217   1330    4   237/236   222/106  61       0    18.92   0.01)
(sat.stats    220   1347    5   237/236   225/108  61       0    18.92   0.01)
(sat.stats    223   1355    6   237/236   228/110  61       0    18.92   0.01)
(sat.stats    226   1359    7   237/236   231/112  61       0    18.92   0.01)
(sat.stats    230   1369    8   237/236   235/113  61       0    18.92   0.01)
(sat.stats    234   1378    9   237/236   239/113  61       0    18.92   0.01)
(sat.stats    254   1414   10   237/236   259/118  61       0    18.92   0.01)
(sat.stats    257   1456   11   237/236   262/121  61       0    18.92   0.01)
(sat.stats    260   1522   12   237/236   265/124  61       0    18.92   0.01)
(sat.stats    263   1574   13   237/236   268/126  61       0    18.92   0.01)
(sat.stats    400   4132   18   237/236   405/208  61       0    19.20   0.02)
(sat.stats    488   5294   19   242/241   493/223  61       0    19.69   0.05)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3417 :time 0.00)
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 1569 := 16 << 16
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 7509 := 30210&1048576
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 7510 := 30210&1048576
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
shl: (shl[64] (bv2int %0) (mod (+ #53 #338) 64)) 30210 := 16 << 16
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 512 := 30210&1048576
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 3876 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 7883 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 9170 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 30208 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 100 := 30210&1048576
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 16 := 30210&1048576
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 8 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 8 := 30210&1048576
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 304 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 384 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 32 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 64 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 256 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 4096 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 1024 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 2048 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 24576 := 1048576&30210
band: (band[52] (if (= #576 51) 0 (if #578 1 #722)) (shl[52] (bv2int %0) (mod #53 52))) 0 := 30210&1048576
band: (band[52] (shl[64] (bv2int %0) (mod #339 64)) (if (or #743 #744) 0 (if #745 1 #877))) 16384 := 1048576&30210
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    713  17007   43  1331/1327   720/327  75       0    21.20   0.16)
ramon: poll                 wall=1.000s usage=0.939s mem=26600KiB load=0.94 rootload=0.93
ramon: poll                 wall=2.000s usage=1.938s mem=31696KiB load=1.00 rootload=1.00
(sat.stats   2346  33524   61 76071/76067  3352/1336  75       0    34.84   2.76)
(sat.stats   2349  33549   62 76246/76242  3355/1336  75       0    34.84   2.78)
(sat.stats   2396  33889   77 77695/77691  3429/1362  75       0    35.04   2.90)
ramon: poll                 wall=3.000s usage=2.935s mem=36164KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.933s mem=40084KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.933s mem=43068KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.933s mem=44036KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.932s mem=44688KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.932s mem=45240KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 81 :elim-clauses 2 :cost 16845 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 16756 :time 0.00)
ramon: poll                 wall=9.000s usage=8.932s mem=46928KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.932s mem=57300KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.003s usage=10.929s mem=59924KiB load=0.99 rootload=1.00
ramon: poll                 wall=12.000s usage=11.926s mem=61608KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.926s mem=63284KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.926s mem=64304KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.925s mem=65344KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.925s mem=66352KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.924s mem=67296KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.924s mem=68140KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.924s mem=69200KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.924s mem=70232KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:24:37 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.992s
ramon: group.utime          19.952s
ramon: group.stime          0.040s
ramon: group.mempeak        70744KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.00
