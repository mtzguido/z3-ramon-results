ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:50:11 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27748 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/dVsrEDkJq8hX.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             873134
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   181.818     10000        49          0            1        2)
(sat.ddfw       1      1   90.9182     20001        98          1            1        3)
(sat.ddfw       1      1   85.8369     40001       196          2            1        5)
(smt.stats    0    101   2378    447   676/608/114     100/17     9   25   51.65)
(sat.ddfw       1      1   71.7703     70001       343          3            1        8)
(smt.stats    1    202   2914   1088  1135/997/114     242/19     9   25   51.84)
(sat.ddfw       1      1   59.6125    110001       539          4            1       12)
(smt.stats    2    313   3894   2306  1322/1154/116     402/42    10   26   51.84)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&75454
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&75454
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&75454
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 32 := 224&75454
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&75454
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 32 := 224&75454
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&75454
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 32 := 224&75454
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 160 := 224&75454
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 268510910 := 268510910 << 8
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 127 := 224&2572
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&2560
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 536873472 := 268510910 << 8
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&2560
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 536873472 := 268510910 << 8
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&2560
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 536873472 := 268510910 << 8
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 86 := 224&2560
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&2560
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 536873472 := 268510966 << 8
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&2560
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 536873472 := 268510966 << 8
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&2560
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 536873472 := 268510966 << 8
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&3584
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 135266312 := 135266311 << 9
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&3584
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 135266312 := 135266311 << 9
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 224&3584
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 135266312 := 135266311 << 9
ramon: poll                 wall=1.000s usage=0.935s mem=54268KiB load=0.94 rootload=0.93
(sat.ddfw       1      1   51.0715    160000       784          5            1       17)
(smt.stats    3    414   5623   3612  1403/1230/116     555/52    11   26   52.23)
(smt.stats    4    525   6909   5568  1632/1501/167     882/108    13   63   52.23)
(sat.ddfw       1      1   44.4781    220001      1078          6            1       23)
(smt.stats    5    647   9243   8668  1712/1568/169    1184/156    15   69   52.32)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 286 := 117481976&287
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 256 := 117481976&257
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 2147483905 := 0 << 27
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 256 := 117481976&257
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 2147483905 := 0 << 27
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 256 := 117481976&257
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 2147483905 := 0 << 27
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 256 := 117481976&257
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 2147483905 := 0 << 27
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  10440  12109  1806/1672/178    1405/179    16   73   52.42)
(sat.ddfw       1      1   39.2377    290001      1421          7            1       30)
ramon: poll                 wall=2.000s usage=1.934s mem=54676KiB load=1.00 rootload=1.00
(smt.stats    7    859  12206  15570  2003/1735/178    1661/184    16   73   52.70)
(sat.ddfw       1      1   35.1031    370001      1813          8            1       38)
(smt.stats    8    981  14001  19428  2116/1908/179    1978/238    17   79   52.70)
(sat.ddfw       1      1   31.7013    460001      2254          9            1       47)
ramon: poll                 wall=3.000s usage=2.934s mem=55228KiB load=1.00 rootload=1.00
(smt.stats    9   1115  17640  23520  2211/2042/180    2371/304    18   80   52.89)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&30976
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&30976
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&32768
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 268468224 := 536870904 << 15
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&32768
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 268468224 := 536870904 << 15
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&32768
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 268468224 := 536870904 << 15
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&30976
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&30976
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&32768
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 805339136 := 536870904 << 15
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&30985
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 6 := 28682&75273
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 28682&30976
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&30976
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&32768
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 805339136 := 536870904 << 15
(smt.stats   10   1217  20508  28929  2281/2115/192    2849/360    20   91   53.01)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 6 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 6 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 0 := 268435452 << 16
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 0 := 268435452 << 16
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 0 := 268435452 << 16
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 0 := 268435452 << 16
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 1219 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 1220 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 28682 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 28682 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 28680 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 28677 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 28676 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 28672 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 24592 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 24608 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 24640 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 24704 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 24832 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 25088 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 25600 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 26624 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 26624 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 26624 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 25600 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 25120 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 25104 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 25248 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 25248 := 28682&268173312
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 28682&268173312
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 25216 := 28682&268173312
(smt.stats   11   1328  22483  33691  2417/2267/314    3089/412    21  117   53.39)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010816
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010816
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010816
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235011077
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235011077
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010816
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010820
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010845
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010844
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235011072
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235011076
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235011072
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235011076
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235012100
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 3993108484 := 536870886 << 24
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010820
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010820
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 4 := 14685247&235010820
(smt.stats   12   1450  25907  39370  2531/2292/314    3584/418    21  117   53.68)
(sat.ddfw       1      1   28.6533    560001      2745         10            1       57)
(smt.stats   13   1584  28409  48005  2555/2394/363    4105/494    22  126   53.89)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 1 := 536870884 << 25
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&2049
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&2049
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&2049
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&4352
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 536875264 := 536870884 << 25
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&4352
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 536875264 := 536870884 << 25
(smt.stats   14   1731  31318  52925  2753/2513/369    4582/600    23  137   54.17)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&134217728
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 134243398 := 268435442 << 26
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&134217728
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 134243398 := 268435442 << 26
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&134217728
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 134244422 := 268435442 << 26
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&134217728
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 134244422 := 268435442 << 26
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&134217728
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 272 := 29370494&134217728
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&134217728
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 272 := 29370494&134217728
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&134217728
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 272 := 29370494&134217728
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 29370494&134217728
band: (band[28] (if (= #115 27) 0 (if #384 1 #457)) (shl[28] (bv2int %0) (+ 28 #460))) 272 := 29370494&134217728
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 14685247&201326592
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #507 #511) 32)) 3422552064 := 536870886 << 24
(smt.stats   15   1832  33555  60640  2853/2668/397    4942/731    24  150   54.17)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 14685247&100663296
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 0 := 268435443 << 25
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 0 := 14685247&100663296
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #111))) 14685248 := 268435443 << 25
(smt.stats   16   1943  35171  65952  2988/2688/398    5237/735    24  150   54.36)
ramon: poll                 wall=4.003s usage=3.893s mem=57068KiB load=0.96 rootload=0.95
(smt.stats   17   2065  37403  70805  3187/2859/407    5617/892    25  155   54.85)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2073 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2104 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2104 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2080 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2056 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2056 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2064 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2096 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2096 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2112 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2144 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2112 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 3104 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2336 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 2336 := 14685247&100663296
(smt.stats   18   2199  39478  76300  3384/3128/429    5874/899    25  155   55.16)
(sat.ddfw       1      1   26.2906    670001      3284         11            1       68)
(smt.stats   19   2346  41785  83242  3636/3234/449    6248/992    26  182   55.36)
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 118784 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 114688 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 114688 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 114688 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 131072 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 262144 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 524288 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 131072 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 262144 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 262144 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 98304 := 14685247&100663296
band: (band[28] (if (= #267 31) 0 (if #363 1 #500)) (shl[32] (* 2 #109) (mod #515 32))) 98304 := 14685247&100663296
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   20   2507  44694  93222  3788/3595/489    7495/1433    27  205   55.65)
(smt.stats   21   2608  47769 103835  3850/3643/492    8007/1659    28  220   55.86)
(sat.ddfw       1      1   24.3556    790001      3872         12            1       80)
ramon: poll                 wall=5.003s usage=4.894s mem=58168KiB load=1.00 rootload=1.00
(smt.stats   22   2719  51439 112712  3953/3715/492    8549/1664    28  220   55.95)
(smt.stats   23   2841  54886 126242  4047/3814/493    8919/1958    29  228   56.14)
(sat.ddfw       1      1   23.2517    920001      4509         13            1       93)
(smt.stats   24   2975  59223 136846  4106/3867/496    9883/1959    29  228   56.35)
(smt.stats   25   3122  59775 143732  4108/3873/497   10802/1959    29  228   56.54)
ramon: poll                 wall=6.000s usage=5.961s mem=58868KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   21.7122   1060001      5196         14            1      108)
(smt.stats   26   3283  68694 170662  4259/3936/498   11511/2291    30  263   56.91)
ramon: poll                 wall=7.000s usage=7.053s mem=59268KiB load=1.09 rootload=1.09
(sat.ddfw       1      1   20.8507   1210001      5931         15            1      123)
(smt.stats   27   3460  74561 195333  4358/4105/503   12371/2404    31  275   57.29)
(smt.stats   28   3561  78190 207411  4395/4109/503   13088/2406    31  275   57.38)
ramon: poll                 wall=8.000s usage=8.268s mem=59660KiB load=1.22 rootload=1.22
(sat.ddfw       1      1    20.174   1370001      6715         16            1      139)
(smt.stats   29   3672  83344 224767  4427/4158/503   14055/2736    32  300   57.58)
(smt.stats   30   3794  88411 242591  4490/4214/504   14843/2736    32  300   57.77)
ramon: poll                 wall=9.003s usage=9.388s mem=60172KiB load=1.12 rootload=1.12
(sat.ddfw       1      1   19.0008   1540001      7549         17            1      156)
(smt.stats   31   3928  93692 258630  4569/4316/508   15762/2920    33  310   57.96)
(smt.stats   32   4075  98983 270523  4625/4318/508   16154/2926    33  310   58.16)
ramon: poll                 wall=10.003s usage=10.385s mem=60368KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   17.8998   1720001      8431         18            1      174)
(smt.stats   33   4236 105151 285384  4778/4425/510   16557/3140    34  333   58.25)
ramon: poll                 wall=11.000s usage=11.384s mem=60488KiB load=1.00 rootload=1.00
(smt.stats   34   4413 110624 301855  4959/4565/510   17051/3152    34  333   58.35)
(sat.ddfw       1      1   16.9054   1910001      9362         19            1      193)
(smt.stats   35   4607 116578 331640  5012/4759/513   18819/3377    35  347   58.54)
ramon: poll                 wall=12.000s usage=12.384s mem=60856KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.0128   2110001     10343         20            1      214)
(smt.stats   36   4708 119778 346710  5132/4768/514   19166/3378    35  347   58.73)
ramon: poll                 wall=13.000s usage=13.383s mem=61300KiB load=1.00 rootload=1.00
(smt.stats   37   4819 122612 358669  5380/4929/514   19486/3379    35  347   58.82)
(sat.ddfw       1      1   15.2505   2320001     11372         21            1      235)
ramon: poll                 wall=14.000s usage=14.529s mem=61316KiB load=1.15 rootload=1.15
(smt.stats   38   4941 125857 387215  5517/5262/521   20275/3500    36  364   58.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 138)
ramon: poll                 wall=15.000s usage=15.546s mem=61360KiB load=1.02 rootload=1.01
(sat.ddfw       1      1   14.7246   2540001     12451         22            1      257)
(smt.stats   39   5075 132146 408612  5572/5274/521   20866/3502    36  364   59.01)
ramon: poll                 wall=16.003s usage=16.552s mem=61744KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5222 141032 442928  5738/5350/522   21865/3740    37  411   59.41)
(sat.ddfw       1      1   14.0535   2770001     13578         23            1      280)
ramon: poll                 wall=17.000s usage=17.543s mem=61936KiB load=0.99 rootload=0.99
(smt.stats   41   5383 148302 482960  5976/5566/526   22849/3920    38  429   59.60)
(sat.ddfw       1      1   13.4378   3010001     14754         24            1      305)
ramon: poll                 wall=18.000s usage=18.542s mem=62060KiB load=1.00 rootload=1.00
(smt.stats   42   5560 154125 516162  6021/5764/527   24347/3921    38  429   59.82)
ramon: poll                 wall=19.000s usage=19.542s mem=62116KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.8786   3260001     15980         25            1      330)
(smt.stats   43   5754 162713 553413  6144/5777/527   25082/3928    38  429   60.01)
ramon: poll                 wall=20.000s usage=20.541s mem=62304KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:50:31 2024
ramon: root.execname        z3
ramon: root.utime           20.600s
ramon: root.stime           0.010s
ramon: group.total          20.615s
ramon: group.utime          20.603s
ramon: group.stime          0.012s
ramon: group.mempeak        62560KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.03
