ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:02:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28886 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EsJ7l0Dks7MF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             710489
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1        80     10000        49          0            1        2)
(sat.ddfw       1      1   40.4899     20001        98          1            1        3)
(smt.stats    0    101   4757    390  1132/985/115     103/10     6   17   51.96)
(sat.ddfw       1      1   40.4858     40001       196          2            1        5)
(smt.stats    1    202   5717    736  1594/1394/117     218/12     7   22   52.06)
(sat.ddfw       1      1   34.5224     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.878s mem=54096KiB load=0.88 rootload=0.87
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&4
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&4
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&8
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 549755813888 := 0 << 31
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 549755813888 := 0 << 31
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&0
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 549755813887 := 128 << 32
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 549755813888 := 0 << 31
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 549755813888 := 0 << 31
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&0
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 549755813887 := 128 << 32
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&8
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&8
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 14 := 4294967295&16
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&16
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&16
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&32
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&32
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&64
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&16
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&32
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&64
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&128
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&128
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&256
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&256
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&512
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&512
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1024
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&512
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1024
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2048
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&1024
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2048
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&4096
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2048
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2048 := 4294967295&2048
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 2048 := 0 << 31
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2048
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2048 := 4294967295&2048
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 2048 := 0 << 31
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 4294967295&2048
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2048 := 4294967295&2048
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 18446743523953739776 := 1099511627772 << 31
(smt.stats    2    313   8374   2801  2016/1837/245     335/46    10   50   52.64)
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2048 := 4294967295&2048
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 2048 := 0 << 31
(smt.stats    3    414  10163   4015  2408/2202/256     452/60    12   66   52.64)
(smt.stats    4    525  14117   6019  2496/2280/261     573/62    15   78   52.84)
(sat.ddfw       1      1   29.1758    110001       539          4            1       12)
(smt.stats    5    647  18828   9451  2545/2288/261     709/64    15   78   53.05)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  22255  11837  2578/2354/261     837/64    15   78   53.05)
(smt.stats    7    859  26724  14900  2608/2370/261     960/64    15   78   53.15)
(smt.stats    8    981  28737  16683  2635/2420/264    1102/70    16   79   53.26)
(smt.stats    9   1115  32541  20722  2652/2425/265    1239/95    18   82   53.36)
(smt.stats   10   1216  35483  24184  2672/2445/265    1360/95    18   82   53.49)
ramon: poll                 wall=2.000s usage=1.846s mem=55768KiB load=0.97 rootload=0.96
(smt.stats   11   1327  38624  29207  2687/2458/265    1483/95    18   82   53.49)
(smt.stats   12   1449  42978  34895  2692/2475/265    1628/95    18   82   53.59)
(sat.ddfw       1      1   24.5334    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   13   1583  45103  38128  2704/2487/267    1811/118    19   82   53.59)
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 549755813887&3200
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3199 := 549755813887&3200
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 549755813887&3200
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 128 := 549755813887&3200
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3200 := 549755813887&3201
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3200 := 549755813887&3216
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3200 := 549755813887&3202
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3200 := 549755813887&3202
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3200 := 549755813887&3202
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3262 := 549755813887&3264
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3200 := 549755813887&3264
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2048 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2048 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2048 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2050 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2176 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2176 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2178 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2176 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2178 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2178 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2432 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 2434 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3202 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3456 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3200 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3202 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3202 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3326 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3202 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3202 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3322 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3202 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3314 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3298 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3314 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3266 := 549755813887&3458
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3202 := 549755813887&3458
(smt.stats   14   1730  47266  43471  2871/2644/333    2060/166    21  105   54.08)
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3200 := 549755813887&3313
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3201 := 549755813887&3313
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3217 := 549755813887&3313
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3217 := 549755813887&3313
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3249 := 549755813887&3313
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3281 := 549755813887&3313
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3281 := 549755813887&3313
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3281 := 549755813887&3313
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 3313 := 549755813887&3321
(smt.stats   15   1831  48886  47781  2925/2664/333    2226/168    21  105   54.17)
(smt.stats   16   1942  49716  49864  3051/2759/334    2370/205    22  106   54.27)
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 7&3072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 5497558141952 := 0 << 2
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 7&3072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #798 #802) 64)) 5497558141952 := 0 << 2
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 7&0
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 549755813887 := 0 << 3
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 7&0
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 37 := 0 << 3
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 7&0
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 37 := 0 << 3
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 7&0
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 37 := 0 << 3
band: (band[39] (if (= #333 63) 1 (if #567 3 #791)) (shl[64] (* 2 #310) (mod #806 64))) 0 := 7&0
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #117))) 37 := 0 << 3
(smt.stats   17   2064  52506  55751  3341/3085/344    2698/246    23  131   54.36)
(sat.ddfw       1      1   21.3072    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.816s mem=56704KiB load=0.97 rootload=0.97
(smt.stats   18   2198  54952  57719  3409/3120/355    2844/377    24  143   54.46)
(sat.ddfw       1      1   18.9908    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.783s mem=56784KiB load=0.97 rootload=0.97
(smt.stats   19   2345  57779  60547  3498/3226/355    3023/379    24  143   54.56)
(smt.stats   20   2506  60966  68144  3521/3293/358    3298/461    26  153   54.56)
(smt.stats   21   2607  65419  78968  3526/3298/358    3405/461    26  153   54.72)
(smt.stats   22   2718  69518  91074  3532/3300/358    3535/461    26  153   54.94)
(smt.stats   23   2840  75372 109323  3565/3329/358    3669/461    26  153   54.94)
(smt.stats   24   2974  78086 116286  3576/3340/363    3834/514    27  157   54.94)
(sat.ddfw       1      1   17.0977    370001      1813          8            1       38)
(smt.stats   25   3121  83988 131940  3579/3343/372    3964/514    28  202   55.04)
(smt.stats   26   3282  85847 136942  3738/3350/374    4263/531    29  206   55.21)
ramon: poll                 wall=5.010s usage=4.794s mem=57380KiB load=1.00 rootload=1.00
(smt.stats   27   3459  89644 151969  3969/3732/375    4910/630    30  207   55.31)
(smt.stats   28   3560  92867 162614  3992/3757/381    5339/1043    31  224   55.54)
(smt.stats   29   3671  97282 178338  4018/3774/381    5560/1047    31  224   55.54)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793 101260 197971  4040/3795/382    5701/1070    32  225   55.82)
(sat.ddfw       1      1   15.5548    460001      2254          9            1       47)
(smt.stats   31   3927 104995 217799  4048/3810/383    5932/1073    33  235   55.92)
ramon: poll                 wall=6.000s usage=5.783s mem=58356KiB load=1.00 rootload=1.00
(smt.stats   32   4074 108148 229880  4153/3891/384    6298/1124    34  241   56.02)
(smt.stats   33   4235 114708 248728  4158/3896/384    6545/1124    34  241   56.11)
(smt.stats   34   4412 125986 264074  4161/3899/384    6878/1124    34  241   56.21)
(smt.stats   35   4606 130366 278657  4176/3911/385    7127/1259    35  243   56.31)
(smt.stats   36   4707 132235 284317  4189/3927/389    7259/1259    35  243   56.31)
(sat.ddfw       1      1   14.9589    560001      2745         10            1       57)
(smt.stats   37   4818 135796 301847  4196/3933/389    7380/1259    35  243   56.31)
ramon: poll                 wall=7.000s usage=6.944s mem=58648KiB load=1.16 rootload=1.16
(smt.stats   38   4940 138955 316036  4210/3947/390    7715/1264    36  274   56.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 39)
(smt.stats   39   5074 142554 330051  4212/3949/390    7979/1264    36  274   56.72)
(smt.stats   40   5221 145578 350458  4213/3950/390    8135/1402    37  279   56.72)
(smt.stats   41   5382 148637 374038  4215/3952/390    8296/1402    37  279   56.72)
(smt.stats   42   5559 153821 395986  4233/3956/390    8785/1402    37  279   56.81)
(sat.ddfw       1      1   14.1479    670001      3284         11            1       68)
(smt.stats   43   5753 162011 445480  4234/3971/390    8981/1402    37  279   56.81)
ramon: poll                 wall=8.002s usage=8.225s mem=59016KiB load=1.28 rootload=1.28
(smt.stats   44   5966 170314 487077  4237/3974/390    9376/1402    37  279   56.92)
(smt.stats   45   6067 175295 499733  4246/3983/391    9642/1502    38  281   56.92)
(smt.stats   46   6178 182493 521277  4247/3984/391    9881/1502    38  281   57.01)
(smt.stats   47   6300 189879 543005  4254/3985/391   10201/1502    38  281   57.39)
(sat.ddfw       1      1   13.6333    790001      3872         12            1       80)
ramon: poll                 wall=9.002s usage=9.393s mem=59696KiB load=1.17 rootload=1.17
(smt.stats   48   6434 194787 560342  4369/4107/395   10558/1659    39  288   57.58)
(smt.stats   49   6581 199092 573934  4374/4111/395   10814/1660    39  288   57.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 205852 597876  4380/4118/395   11122/1660    39  288   57.58)
ramon: poll                 wall=10.000s usage=10.475s mem=60016KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   12.6941    920001      4509         13            1       93)
(smt.stats   51   6919 210834 618199  4432/4125/396   11436/1703    40  298   58.13)
(smt.stats   52   7113 215458 628789  4496/4179/396   11808/1710    40  298   58.13)
ramon: poll                 wall=11.002s usage=11.477s mem=60368KiB load=1.00 rootload=1.00
(smt.stats   53   7326 223701 670271  4642/4266/396   12162/1718    40  298   58.32)
ramon: poll                 wall=12.000s usage=12.476s mem=60468KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.6979   1060001      5196         14            1      108)
ramon: poll                 wall=13.000s usage=13.475s mem=60640KiB load=1.00 rootload=1.00
(smt.stats   54   7560 229950 694144  4926/4429/396   13301/1727    40  298   58.71)
(sat.ddfw       1      1   10.9569   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=14.507s mem=60804KiB load=1.03 rootload=1.03
(smt.stats   55   7661 233198 706454  5043/4674/396   13560/1731    40  298   58.80)
ramon: poll                 wall=15.000s usage=15.471s mem=60928KiB load=0.96 rootload=0.96
(smt.stats   56   7772 236071 713491  5207/4793/396   13709/1734    40  298   58.90)
(sat.ddfw       1      1   10.1729   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=16.470s mem=60984KiB load=1.00 rootload=1.00
(smt.stats   57   7894 237648 717827  5451/4984/396   13843/1735    40  298   58.99)
ramon: poll                 wall=17.002s usage=17.472s mem=61144KiB load=1.00 rootload=1.01
(smt.stats   58   8028 240760 732013  5514/5248/396   14147/1735    40  298   58.99)
(smt.stats   59   8175 245689 756039  5526/5256/396   14383/1735    40  298   59.09)
(smt.stats   60   8336 246971 772323  5530/5268/398   14668/2043    41  308   59.09)
(sat.ddfw       1      1   9.52008   1540001      7549         17            1      156)
ramon: poll                 wall=18.000s usage=18.458s mem=61320KiB load=0.99 rootload=0.98
(smt.stats   61   8513 251228 789997  5549/5279/398   15001/2044    41  308   59.18)
(smt.stats   62   8707 257854 829839  5554/5292/398   15537/2174    42  313   59.18)
(smt.stats   63   8920 264968 865038  5559/5297/398   16043/2174    42  313   59.28)
ramon: poll                 wall=19.000s usage=19.457s mem=61596KiB load=1.00 rootload=1.00
(smt.stats   64   9154 273905 913218  5575/5302/398   16746/2174    42  313   59.28)
(smt.stats   65   9411 287554 991721  5603/5337/398   17076/2174    42  313   59.37)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   66   9512 289317 1001765  5611/5348/398   17319/2174    42  313   59.37)
ramon: poll                 wall=20.000s usage=20.517s mem=61800KiB load=1.06 rootload=1.06
(smt.stats   67   9623 291226 1017622  5615/5352/398   17452/2174    42  313   59.37)
ramon: end                  Fri Nov  1 22:02:56 2024
ramon: root.execname        z3
ramon: root.utime           20.580s
ramon: root.stime           0.010s
ramon: group.total          20.600s
ramon: group.utime          20.587s
ramon: group.stime          0.012s
ramon: group.mempeak        62056KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.03
