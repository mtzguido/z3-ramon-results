ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:04:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27442 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/n2lnqYBx80cu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             921021
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   107.527     10000        49          0            1        2)
(sat.ddfw       1      1   53.7688     20001        98          1            1        3)
(sat.ddfw       1      1   55.2486     40001       196          2            1        5)
(smt.stats    0    101   1574    104  1061/953/99      98/20     4   17   52.16)
(smt.stats    1    202   1866    765  1862/1637/99     218/25     4   17   52.06)
(sat.ddfw       1      1   47.4684     70001       343          3            1        8)
(smt.stats    2    313   4395   3007  2004/1849/101     366/83     6   19   52.16)
(smt.stats    3    414   5390   4215  2375/2184/109     459/101     8   36   52.25)
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 1 := 34359738367 << 1
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 0 := 34359738367 << 1
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 0 := 2 << 1
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 1 := 1&1073741823
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 1 := 2 << 30
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 1 := 1&1073741823
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 1 := 2 << 30
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 1 := 1&1073741823
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 1 := 2 << 30
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 1073741823 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 1073741822 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
shl: (shl[35] (bv2int %1) (mod (bv2int %0) 35)) 17179869184 := 17179869185 << 30
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
shl: (shl[35] (bv2int %1) (mod (bv2int %0) 35)) 17179869184 := 17179869185 << 30
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 8 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 16 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 128 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 256 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 512 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 1024 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 1024 := 1073741824&1073741823
(smt.stats    4    525   6755   5966  2547/2228/119     561/120    10   43   52.75)
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
shl: (shl[35] (bv2int %1) (mod (bv2int %0) 35)) 29 := 17179869185 << 30
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 8 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 16 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 128 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 128 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 1024 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 2048 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 4096 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 8192 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 16384 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 32768 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 65536 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 131072 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 262144 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 524288 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 1048576 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 2097152 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 4194304 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 8388608 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 16777216 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 33554432 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 67108864 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 134217728 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 268435456 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 536870912 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 536870912 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 67108864 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 134217728 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 268435456 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 134217728 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 67108864 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 37748736 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 37748736 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 50331648 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 41943040 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 41943040 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 41943040 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 33554432 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 512 := 1073741824&1073741823
(smt.stats    5    647   9773   9937  2751/2529/354     830/223    14  100   53.55)
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 512 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 512 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 256 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %1) (mod #104 35)) (if (= #563 34) 1 (if #565 3 #659))) 32 := 1073741824&1073741823
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  12504  14609  2776/2546/365     927/220    15  112   53.66)
ramon: poll                 wall=1.000s usage=0.946s mem=55988KiB load=0.95 rootload=0.93
(sat.ddfw       1      1   42.3729    110001       539          4            1       12)
(smt.stats    7    859  14551  17193  2856/2571/375    1084/223    16  114   53.66)
(smt.stats    8    981  16903  21972  2937/2713/393    1226/264    19  123   53.76)
(smt.stats    9   1115  20288  28477  2963/2723/393    1366/265    19  123   53.86)
(smt.stats   10   1216  24416  32680  2995/2756/393    1458/276    20  131   53.86)
(sat.ddfw       1      1   37.9932    160000       784          5            1       17)
(smt.stats   11   1327  26657  37000  3124/2848/394    1582/279    21  132   54.14)
(smt.stats   12   1449  29469  43973  3171/2916/394    1739/280    21  132   54.27)
(smt.stats   13   1583  32783  48863  3219/2955/394    1936/283    21  132   54.37)
(smt.stats   14   1730  35823  53991  3285/3011/394    2091/283    21  132   54.47)
(sat.ddfw       1      1    32.363    220001      1078          6            1       23)
(smt.stats   15   1831  39046  59045  3343/3069/395    2192/381    22  134   54.47)
ramon: poll                 wall=2.000s usage=2.166s mem=56924KiB load=1.22 rootload=1.22
(smt.stats   16   1942  41708  65947  3434/3196/398    2373/392    23  138   54.67)
(smt.stats   17   2064  43741  70071  3462/3209/398    2538/392    23  138   54.76)
(smt.stats   18   2198  48803  78215  3494/3249/398    2720/392    23  138   54.86)
(sat.ddfw       1      1   29.8126    290001      1421          7            1       30)
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 23&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 23&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 24&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 24&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 24&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 32&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 24&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 32&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 64&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 128&4194303
(smt.stats   19   2345  53485  88606  3596/3318/440    2936/525    25  143   54.95)
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 64&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 256&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 64&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 256&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 512&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 512&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1024&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 512&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 512&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 320&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1024&4194303
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 2048&4194303
(smt.stats   20   2506  56930  98257  3704/3465/528    3255/567    26  166   55.34)
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 2048&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 2048&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 4096&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 4096&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 2048&17179869168
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   21   2607  60280 106936  3752/3477/529    3408/643    27  178   55.52)
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 4096&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 8192&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 16384&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 8192&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 16384&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 32768&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 65536&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 131072&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 65536&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 131072&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 65536&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 131072&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 524288&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 524288&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1048576&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 524288&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1048576&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 2097152&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 524288&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 524288&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 524288&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 1048576&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 2097152&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 4194304&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 0 := 262144&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 262146&17179869168
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 144116356307222530 := 33 << 34
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 262146&17179869168
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 144116390666960898 := 33 << 34
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 262146&17179869168
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 144116321947484162 := 33 << 34
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 270336&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 270336&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 270336&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 270336&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 327680&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 270336&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 263168&17179869168
band: (band[35] (shl[64] (bv2int %1) (mod #291 64)) (if (= #678 63) 0 (if #680 1 #831))) 262144 := 262146&17179869168
shl: (shl[64] (bv2int %1) (mod (+ #104 #290) 64)) 144116356307222530 := 33 << 34
(smt.stats   22   2718  62919 116402  3875/3579/647    3597/689    29  205   55.98)
(sat.ddfw       1      1   27.4914    370001      1813          8            1       38)
ramon: poll                 wall=3.004s usage=3.338s mem=58148KiB load=1.17 rootload=1.17
(smt.stats   23   2840  66403 127602  3915/3643/657    3759/690    29  205   55.98)
(smt.stats   24   2974  69473 137932  3949/3709/664    4031/847    31  225   56.07)
(smt.stats   25   3121  72998 149912  3967/3713/666    4231/848    31  225   56.17)
(sat.ddfw       1      1   26.2161    460001      2254          9            1       47)
(smt.stats   26   3282  78691 164953  4023/3758/666    4550/889    32  228   56.26)
(smt.stats   27   3459  82898 175272  4076/3834/669    4892/930    33  228   56.36)
(smt.stats   28   3560  87031 181044  4164/3891/669    5159/930    33  228   56.70)
(smt.stats   29   3671  90233 187934  4327/4015/669    5374/1054    34  233   56.79)
ramon: poll                 wall=4.000s usage=4.674s mem=59304KiB load=1.34 rootload=1.34
(sat.ddfw       1      1    24.266    560001      2745         10            1       57)
(smt.stats   30   3793  94465 195433  4449/4125/670    5542/1083    35  233   57.19)
(smt.stats   31   3927  98571 208623  4463/4153/672    5742/1119    36  234   57.19)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074 101142 215899  4480/4170/674    6087/1119    36  234   57.38)
(smt.stats   33   4235 108394 237197  4496/4186/677    6503/1171    38  264   57.48)
ramon: poll                 wall=5.004s usage=5.708s mem=60028KiB load=1.03 rootload=1.03
(sat.ddfw       1      1   21.5517    670001      3284         11            1       68)
(smt.stats   34   4412 117927 267754  4603/4288/681    7016/1197    40  294   57.87)
(smt.stats   35   4606 122458 276140  4644/4317/687    7522/1197    40  294   57.97)
ramon: poll                 wall=6.000s usage=6.700s mem=60540KiB load=1.00 rootload=1.00
(smt.stats   36   4707 126768 285686  4670/4342/687    7608/1370    41  327   58.06)
(sat.ddfw       1      1   19.4395    790001      3872         12            1       80)
(smt.stats   37   4818 131600 302722  4736/4391/687    7764/1374    41  327   58.25)
(smt.stats   38   4940 137746 321004  4757/4447/687    8050/1374    41  327   58.25)
(smt.delete-inactive-clauses  :num-deleted-clauses 129)
ramon: poll                 wall=7.004s usage=7.695s mem=60812KiB load=0.99 rootload=0.99
(smt.stats   39   5074 142432 338680  4774/4464/693    8196/1443    42  327   58.52)
(sat.ddfw       1      1   17.7547    920001      4509         13            1       93)
(smt.stats   40   5221 147971 353251  4904/4556/695    8389/1481    43  374   58.62)
(smt.stats   41   5382 152146 373507  4957/4600/697    8749/1502    44  374   58.90)
ramon: poll                 wall=8.000s usage=8.688s mem=61388KiB load=1.00 rootload=0.99
(smt.stats   42   5559 153633 384063  5113/4747/698    9223/1502    44  374   59.00)
(smt.stats   43   5753 160125 401193  5153/4756/699    9613/1575    45  376   59.09)
(sat.ddfw       1      1   16.3475   1060001      5196         14            1      108)
ramon: poll                 wall=9.000s usage=9.692s mem=61572KiB load=1.00 rootload=1.01
(smt.stats   44   5966 167991 422849  5305/4939/701   10462/1613    46  378   59.38)
(smt.stats   45   6067 170140 428110  5309/4943/702   10752/1681    47  385   59.38)
(sat.ddfw       1      1   15.1546   1210001      5931         15            1      123)
ramon: poll                 wall=10.004s usage=10.694s mem=62060KiB load=1.00 rootload=1.00
(smt.stats   46   6178 174460 442178  5315/4949/704   11210/1681    47  385   59.57)
(smt.stats   47   6300 178204 462047  5333/4962/705   11653/1756    48  394   59.76)
(smt.stats   48   6434 182545 478453  5485/5048/706   12145/1828    49  400   59.95)
ramon: poll                 wall=11.000s usage=11.688s mem=62536KiB load=1.00 rootload=0.99
(smt.stats   49   6581 193110 504777  5494/5112/706   12672/1828    49  400   60.05)
(sat.ddfw       1      1   14.1255   1370001      6715         16            1      139)
(smt.stats   50   6742 202384 524710  5569/5117/706   13542/1833    49  400   60.14)
ramon: poll                 wall=12.004s usage=12.694s mem=62808KiB load=1.00 rootload=1.01
(smt.stats   51   6919 212529 556482  5725/5257/707   14166/1974    50  400   60.76)
(sat.ddfw       1      1   13.2461   1540001      7549         17            1      156)
ramon: poll                 wall=13.004s usage=13.692s mem=63144KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=14.690s mem=63328KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.4688   1720001      8431         18            1      174)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 219344 575933  5972/5489/710   15124/2070    51  422   61.04)
ramon: poll                 wall=15.004s usage=15.735s mem=63584KiB load=1.04 rootload=1.04
ramon: poll                 wall=16.000s usage=16.761s mem=63792KiB load=1.03 rootload=1.03
(sat.ddfw       1      1   11.8884   1910001      9362         19            1      193)
ramon: poll                 wall=17.000s usage=17.759s mem=63980KiB load=1.00 rootload=0.99
(smt.stats   53   7326 231491 622341  6261/5622/710   16330/2080    51  422   61.33)
(sat.ddfw       1      1   11.2727   2110001     10343         20            1      214)
ramon: poll                 wall=18.000s usage=18.709s mem=64016KiB load=0.95 rootload=0.95
(smt.stats   54   7560 241033 663521  6420/5936/710   17236/2199    52  432   61.52)
(smt.stats   55   7661 246383 691022  6463/6081/711   18602/2497    53  452   61.76)
ramon: poll                 wall=19.004s usage=19.659s mem=64268KiB load=0.95 rootload=0.95
(smt.stats   56   7772 250310 710758  6473/6091/713   19470/2497    53  452   61.86)
(smt.stats   57   7894 253814 732097  6474/6092/713   19683/2497    53  452   61.86)
(sat.ddfw       1      1   10.6859   2320001     11372         21            1      235)
(smt.stats   58   8028 256850 747988  6506/6122/715   20834/2542    54  495   61.95)
ramon: poll                 wall=20.004s usage=20.658s mem=64480KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:05:08 2024
ramon: root.execname        z3
ramon: root.utime           20.690s
ramon: root.stime           0.020s
ramon: group.total          20.712s
ramon: group.utime          20.692s
ramon: group.stime          0.020s
ramon: group.mempeak        64512KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.03
