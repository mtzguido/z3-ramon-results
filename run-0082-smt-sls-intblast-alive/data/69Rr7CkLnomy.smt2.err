ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:41:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29356 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/69Rr7CkLnomy.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             637177
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 9223372036854775932 := 126 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 127 := 126 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 9223372036854775803 := 9223372036854775802 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388027 := 4611686018427388026 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388027 := 4611686018427388026 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388275 := 4611686018427388274 << 60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388771 := 4611686018427388770 << 60
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   68.9655     10000        49          0            1        2)
(smt.stats    0    101    338    401   156/80/55     110/8     6    9   50.96)
(sat.ddfw       1      1   35.3392     20001        98          1            1        3)
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 242 := 3458764513820541515 << 61
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 242 := 3458764513820541515 << 61
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 0 := 3458764513820541515 << 61
(smt.stats    1    202    716   1102   305/238/56     215/12     7   10   51.06)
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213693951 := 3458764513820541019 << 61
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213694139 := 3458764513820541019 << 61
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213694139 := 3458764513820541019 << 61
(smt.stats    2    313   1040   2017   403/311/56     334/15     7   10   51.16)
(sat.ddfw       1      1    35.524     40001       196          2            1        5)
(smt.stats    3    414   1489   3531   524/448/61     468/17     8   11   51.16)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388391 := 4611686018427388388 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388391 := 4611686018427388388 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388391 := 4611686018427388388 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388387 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427386913 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427386912 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 2305843009213694285 := 4611686018427388386 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388388 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388024 := 4611686018427388388 << 3
(smt.stats    4    525   2150   4638   579/534/61     623/34     9   11   51.25)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387502 := 4611686018427388384 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387502 := 4611686018427388384 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387406 := 4611686018427388288 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387406 := 4611686018427388288 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388320 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388320 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387438 := 4611686018427388320 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387438 := 4611686018427388320 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387470 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387470 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387454 := 4611686018427388336 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387454 := 4611686018427388336 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387454 := 4611686018427388336 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387454 := 4611686018427388336 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387486 := 4611686018427388368 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387486 := 4611686018427388368 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387486 := 4611686018427388368 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387470 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388352 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387402 := 4611686018427388284 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387402 := 4611686018427388284 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387402 := 4611686018427388284 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388276 << 59
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388276 << 59
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388276 << 59
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387398 := 4611686018427388280 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388280 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388280 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387398 := 4611686018427388280 << 57
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387418 := 4611686018427388300 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387414 := 4611686018427388296 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387414 := 4611686018427388296 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387414 := 4611686018427388296 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387418 := 4611686018427388300 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387418 := 4611686018427388300 << 47
(smt.stats    5    647   2945   6691   811/589/72     771/62    10   15   51.64)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387494 := 4611686018427388376 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387494 := 4611686018427388376 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387494 := 4611686018427388376 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387494 := 4611686018427388376 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388380 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388380 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388380 << 7
ramon: poll                 wall=1.002s usage=0.931s mem=53668KiB load=0.93 rootload=0.93
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388392 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388392 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387414 := 4611686018427388296 << 49
(sat.ddfw       1      1   30.4569     70001       343          3            1        8)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387462 := 4611686018427388344 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387462 := 4611686018427388344 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387466 := 4611686018427388348 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387466 := 4611686018427388348 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387462 := 4611686018427388344 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387462 := 4611686018427388344 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387482 := 4611686018427388364 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387482 := 4611686018427388364 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387478 := 4611686018427388360 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387446 := 4611686018427388328 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387446 := 4611686018427388328 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387450 := 4611686018427388332 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387450 := 4611686018427388332 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388328 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388328 << 33
(smt.stats :restarts  :decisions    :clauses/bin/units       :simplify    :memory)
(smt.stats      :conflicts   :propagations         :lemmas        :deletions    )
(smt.stats    6    748   3714   8302   974/799/127     880/99    11   26   51.95)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387410 := 4611686018427388292 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387410 := 4611686018427388292 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387410 := 4611686018427388292 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387410 := 4611686018427388292 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387426 := 4611686018427388308 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387426 := 4611686018427388308 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387426 := 4611686018427388308 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387490 := 4611686018427388372 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387490 := 4611686018427388372 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387490 := 4611686018427388372 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387442 := 4611686018427388324 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387442 := 4611686018427388324 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387442 := 4611686018427388324 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387474 := 4611686018427388356 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387458 := 4611686018427388340 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387422 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387422 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387422 := 4611686018427388304 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387424 := 4611686018427388306 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387440 := 4611686018427388322 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387440 := 4611686018427388322 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387440 := 4611686018427388322 << 36
(smt.stats    7    859   4715  10410  1091/964/177     988/122    12   36   52.17)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387456 := 4611686018427388338 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387472 := 4611686018427388354 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388370 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387488 := 4611686018427388370 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387488 := 4611686018427388370 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387500 := 4611686018427388382 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388378 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387492 := 4611686018427388374 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387508 := 4611686018427388390 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388342 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388342 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387468 := 4611686018427388350 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388346 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388346 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387476 := 4611686018427388358 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387480 := 4611686018427388362 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387484 := 4611686018427388366 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387902 := 4611686018427388362 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387452 := 4611686018427388334 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387448 := 4611686018427388330 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387498 := 4611686018427388380 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387498 := 4611686018427388380 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387502 := 4611686018427388384 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387502 := 4611686018427388384 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387492 := 4611686018427388374 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427387510 := 4611686018427388392 << 1
(smt.stats    8    981   5963  12646  1235/1072/217    1129/125    13   44   52.67)
(sat.ddfw       1      1   25.8732    110001       539          4            1       12)
ramon: poll                 wall=2.000s usage=1.927s mem=55424KiB load=1.00 rootload=0.98
(smt.stats    9   1115   9022  14736  1325/1285/303    1257/166    15   59   53.35)
(sat.ddfw       1      1   22.2415    160000       784          5            1       17)
(smt.stats   10   1216  12203  16440  1395/1337/303    1351/171    16   60   53.54)
ramon: poll                 wall=3.000s usage=2.906s mem=55676KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   19.4115    220001      1078          6            1       23)
(smt.stats   11   1327  16188  18621  1471/1444/307    1443/176    17   62   53.54)
ramon: poll                 wall=4.000s usage=3.906s mem=55860KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.2202    290001      1421          7            1       30)
ramon: poll                 wall=5.000s usage=4.906s mem=55988KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  17592  19634  1726/1458/307    1556/183    18   75   53.73)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 4611686018427388389 := 4611686018427388530 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 16429131440647569408 := 4611686018427388530 << 56
(smt.stats   13   1583  20893  23190  1797/1747/308    1714/183    18   75   53.83)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #121 #123) 64)) 16429131440647569408 := 4611686018427388530 << 56
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 3602879701896396801 := 2305843009213694265 << 57
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 3602879701896396801 := 2305843009213694265 << 57
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 3602879701896396801 := 2305843009213694265 << 57
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213694139 := 2305843009213694265 << 57
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #90))) 2305843009213694139 := 2305843009213694265 << 57
(sat.ddfw       1      1   15.4679    370001      1813          8            1       38)
ramon: poll                 wall=6.000s usage=5.902s mem=56224KiB load=1.00 rootload=1.00
(smt.stats   14   1730  24508  26265  1893/1831/319    1867/213    20   84   54.02)
(sat.ddfw       1      1    14.034    460001      2254          9            1       47)
ramon: poll                 wall=7.000s usage=6.903s mem=56344KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.8485    560001      2745         10            1       57)
(smt.stats   15   1831  25832  27628  2130/1952/319    1975/218    20   84   54.21)
ramon: poll                 wall=8.000s usage=7.900s mem=56432KiB load=1.00 rootload=0.99
(smt.stats   16   1942  28242  30709  2156/2128/319    2082/218    20   84   54.30)
(smt.stats   17   2064  32184  35245  2197/2130/319    2203/218    20   84   54.30)
ramon: poll                 wall=9.000s usage=8.896s mem=56848KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.8305    670001      3284         11            1       68)
(smt.stats   18   2198  36884  38654  2307/2198/319    2336/225    20   84   54.40)
ramon: poll                 wall=10.000s usage=9.873s mem=56864KiB load=0.98 rootload=0.98
ramon: poll                 wall=11.000s usage=10.788s mem=56864KiB load=0.92 rootload=0.91
(sat.ddfw       1      1   10.7933    790001      3872         12            1       80)
ramon: poll                 wall=12.000s usage=11.726s mem=57140KiB load=0.94 rootload=0.94
ramon: poll                 wall=13.000s usage=12.722s mem=57464KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.0534    920001      4509         13            1       93)
(smt.stats   19   2345  39049  40819  2577/2369/320    2484/240    21   87   54.78)
ramon: poll                 wall=14.002s usage=13.653s mem=57044KiB load=0.93 rootload=0.93
ramon: poll                 wall=15.000s usage=14.624s mem=57052KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   9.31842   1060001      5196         14            1      108)
ramon: poll                 wall=16.000s usage=15.624s mem=57356KiB load=1.00 rootload=1.00
(smt.stats   20   2506  41710  43328  2826/2703/320    2647/249    21   87   54.87)
ramon: poll                 wall=17.000s usage=16.647s mem=57392KiB load=1.02 rootload=1.02
(sat.ddfw       1      1    8.7745   1210001      5931         15            1      123)
(smt.stats   21   2607  44723  47428  2942/2846/320    2745/253    21   87   54.97)
ramon: poll                 wall=18.000s usage=17.606s mem=57240KiB load=0.96 rootload=0.96
ramon: poll                 wall=19.000s usage=18.605s mem=57404KiB load=1.00 rootload=1.00
(smt.stats   22   2718  47177  49737  3189/2992/320    2886/266    21   87   55.16)
(sat.ddfw       1      1   8.28329   1370001      6715         16            1      139)
ramon: poll                 wall=20.000s usage=19.654s mem=57684KiB load=1.05 rootload=1.05
ramon: end                  Fri Nov  1 21:41:56 2024
ramon: root.execname        z3
ramon: root.utime           19.700s
ramon: root.stime           0.010s
ramon: group.total          19.714s
ramon: group.utime          19.702s
ramon: group.stime          0.012s
ramon: group.mempeak        58196KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              0.98
