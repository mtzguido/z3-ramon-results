ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:11:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41705 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ODA825GkYPfm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2939095
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427387901&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387901 := 4611686018427387902 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427387901&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387901 := 4611686018427387902 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427387901&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387901 := 4611686018427387902 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387903 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 1 := 1024 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509483009 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509483009 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
(smt.stats    0    101   1051    522  1269/1106/124      76/6    11   31   19.15)
(smt.stats    1    202   1663   1010  1353/1209/129     176/7    12   32   19.15)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509481985 << 55
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509481985 << 55
(smt.stats    2    313   2463   2039  1488/1328/136     284/11    14   33   19.34)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509499393 << 56
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509499393 << 56
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509500417 << 56
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509504513 << 57
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509504513 << 57
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509503489 << 57
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509503489 << 57
(smt.stats    3    414   3519   3427  1633/1481/147     383/12    16   37   19.44)
(smt.stats    4    525   4368   4998  1718/1536/158     466/22    18   55   19.44)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 0 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 0 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 0 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 0 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 0 << 58
(smt.stats    5    647   5552   7549  1844/1633/172     629/64    20   62   19.63)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 13569 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 13569 << 58
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   7333   9289  1998/1815/177     733/82    22   72   19.73)
(smt.stats    7    859   9292  12311  2061/1824/177     853/84    22   72   19.92)
(smt.stats    8    981  10849  14594  2189/1924/177     975/87    22   72   19.92)
(smt.stats    9   1115  12384  17890  2208/2022/181    1128/116    23   82   19.92)
ramon: poll                 wall=1.000s usage=0.955s mem=21096KiB load=0.95 rootload=0.93
(smt.stats   10   1216  14101  19798  2247/2024/181    1247/119    23   82   20.02)
(smt.stats   11   1327  16858  25996  2266/2073/181    1367/132    24   85   20.02)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  19006  31155  2289/2085/182    1508/165    25   88   20.13)
(smt.stats   13   1583  20369  36445  2318/2119/182    1643/166    25   88   20.13)
(smt.stats   14   1730  22475  40173  2331/2143/184    1789/180    26   94   20.13)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 576&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 576 := 576 << 55
(smt.stats   15   1831  23702  42279  2380/2146/184    1912/188    26   94   20.23)
(smt.stats   16   1942  24634  46059  2435/2247/191    2027/218    27  102   20.23)
(smt.stats   17   2064  26019  50601  2523/2255/192    2158/222    27  102   20.23)
(smt.stats   18   2198  27942  55731  2580/2388/193    2294/240    29  109   20.23)
(smt.stats   19   2345  30188  64378  2591/2398/193    2445/240    29  109   20.32)
ramon: poll                 wall=2.000s usage=1.954s mem=21448KiB load=1.00 rootload=1.00
(smt.stats   20   2506  31714  70205  2677/2468/193    2637/240    29  109   20.47)
(smt.stats   21   2607  36264  78485  2687/2482/198    2734/278    30  114   20.47)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2305843009213693952 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2305843009213693953 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2305843009213693953 := 896 << 60
(smt.stats   22   2718  38633  83185  2736/2486/198    2878/280    31  115   20.57)
(smt.stats   23   2840  40983  88300  2761/2549/203    3004/304    32  116   20.57)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 14 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 16 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 16 := 512 << 61
(smt.stats   24   2974  43523  94022  2803/2599/226    3136/322    34  142   20.66)
(smt.stats   25   3121  47130  98921  2847/2616/226    3284/323    34  142   20.66)
(smt.stats   26   3282  52674 106141  2870/2650/226    3441/335    35  146   20.66)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317951&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1206964700135281919&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1206964700135281920&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 10430336736990057728 := 18014398509506883 << 59
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1206964700135281919&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1206964700135281920&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 10430336736990057728 := 18014398509506883 << 59
ramon: poll                 wall=3.000s usage=2.954s mem=21988KiB load=1.00 rootload=1.00
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317951&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317952&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 10394307939971093760 := 18014398509506881 << 59
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317951&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317952&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 10394307939971093760 := 18014398509506881 << 59
(smt.stats   27   3459  55254 108962  3031/2678/226    3647/343    35  146   20.76)
(smt.stats   28   3560  56455 113721  3049/2839/241    3767/375    36  148   20.85)
(smt.stats   29   3671  60329 120795  3083/2861/241    3873/381    37  163   20.85)
(smt.stats   30   3793  64108 128853  3104/2873/241    4007/381    37  163   20.95)
(smt.stats   31   3927  69283 138492  3137/2894/241    4142/383    37  163   20.95)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  72497 141085  3151/2937/241    4294/383    37  163   21.03)
ramon: poll                 wall=4.000s usage=3.954s mem=22360KiB load=1.00 rootload=1.00
(smt.stats   33   4235  75674 146919  3296/3059/244    4465/410    38  163   21.12)
(smt.stats   34   4412  77890 153596  3385/3099/244    4648/422    39  164   21.22)
(smt.stats   35   4606  83130 163526  3399/3184/244    4854/422    39  164   21.31)
(smt.stats   36   4707  85483 168453  3421/3190/244    4963/424    39  164   21.31)
(smt.stats   37   4818  87711 176385  3441/3222/245    5082/441    40  164   21.41)
(smt.stats   38   4940  91093 185219  3448/3234/245    5224/441    40  164   21.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 25)
ramon: poll                 wall=5.000s usage=4.953s mem=22652KiB load=1.00 rootload=1.00
(smt.stats   39   5074  94277 191139  3472/3246/249    5333/449    41  165   21.41)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 2&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 14&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 12&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 14&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 13&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 8&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 2&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 2&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&15
(smt.stats   40   5221  96976 197794  3585/3334/287    5498/457    42  165   21.61)
(smt.stats   41   5382 102335 217613  3612/3373/287    5663/457    42  165   21.61)
(smt.stats   42   5559 108592 228984  3621/3408/290    5843/480    44  176   21.61)
(smt.stats   43   5753 117100 247992  3671/3408/290    6072/484    45  177   21.61)
(smt.stats   44   5966 119459 256690  3773/3498/290    6326/493    45  177   21.80)
ramon: poll                 wall=6.000s usage=5.953s mem=22980KiB load=1.00 rootload=1.00
(smt.stats   45   6067 121547 261131  3817/3600/291    6427/539    46  178   21.80)
(smt.stats   46   6178 126325 275070  3838/3620/292    6556/554    47  178   21.80)
(smt.stats   47   6300 130984 292137  3872/3626/292    6679/557    47  178   21.80)
(smt.stats   48   6434 134010 308123  3906/3685/292    6818/557    47  178   21.89)
(smt.stats   49   6581 138718 316960  3927/3696/292    6969/557    47  178   21.89)
(smt.stats   50   6742 146231 326406  3940/3714/292    7139/557    47  178   22.13)
(smt.stats   51   6919 149852 345981  3943/3726/292    7317/557    47  178   22.13)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 155327 362835  3946/3727/292    7517/557    47  178   22.23)
(smt.stats   53   7326 158136 382696  3954/3737/292    7742/557    47  178   22.23)
ramon: poll                 wall=7.000s usage=6.953s mem=23440KiB load=1.00 rootload=1.00
(smt.stats   54   7560 161887 402440  3968/3751/293    7980/606    48  180   22.23)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775815 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775815 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775815 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775813 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775813 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427379712&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427379712&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 1 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427379712&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 1 := 4611686018427386880 << 3
(smt.stats   55   7661 164391 411769  4016/3758/293    8077/608    48  180   22.23)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427380732&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446744073709544444 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427380732&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446744073709544444 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427380732&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446744073709544444 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427376900&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446744073709540612 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611193437218144256&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 0 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611193437218144256&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 173 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611193437218144256&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 173 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611193437218144260&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446251492500307972 := 4611686018427387008 << 41
(smt.stats   56   7772 167002 417518  4082/3808/303    8199/619    49  182   22.42)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 2305843009213693868&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 16140901064495857580 := 4611686018427387008 << 41
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4609994969543868416&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 173 := 4611686018427387135 << 41
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4609981775404335104&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 4611686018427387129 << 41
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4609981775404335104&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 173 := 4611686018427387129 << 41
(smt.stats   57   7894 169304 422186  4156/3878/318    8323/624    49  182   22.61)
(smt.stats   58   8028 172999 430286  4171/3942/325    8473/632    50  186   22.70)
(smt.stats   59   8175 175187 438617  4176/3947/325    8622/632    50  186   22.70)
(smt.stats   60   8336 177810 451649  4179/3950/325    8782/638    51  193   22.61)
ramon: poll                 wall=8.000s usage=7.952s mem=24004KiB load=1.00 rootload=1.00
(smt.stats   61   8513 180642 457870  4225/3953/325    8975/648    51  193   22.80)
ramon: poll                 wall=9.000s usage=8.952s mem=24124KiB load=1.00 rootload=1.00
(smt.stats   62   8707 185194 466000  4402/4087/325    9185/650    51  193   22.80)
ramon: poll                 wall=10.000s usage=9.952s mem=24240KiB load=1.00 rootload=1.00
(smt.stats   63   8920 192627 483405  4637/4268/329    9453/696    52  199   22.89)
(smt.stats   64   9154 195011 494592  4649/4420/329    9707/723    53  204   22.89)
(smt.stats   65   9412 198714 506115  4666/4437/331    9959/752    54  207   22.99)
(smt.stats   66   9513 200537 510356  4676/4447/332   10069/752    54  207   22.99)
ramon: poll                 wall=11.000s usage=10.951s mem=24352KiB load=1.00 rootload=1.00
(smt.stats   67   9624 203948 515368  4719/4454/334   10192/759    54  207   22.99)
(smt.stats   68   9746 205543 524314  4731/4502/334   10314/779    55  215   22.99)
(smt.stats   69   9880 206395 530804  4744/4505/335   10452/779    55  215   23.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 113)
(smt.stats   70  10027 208680 542206  4781/4542/335   10512/779    55  215   23.08)
(smt.stats   71  10188 214931 559597  4856/4579/335   10712/794    56  218   23.18)
ramon: poll                 wall=12.000s usage=11.951s mem=24540KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10365 218470 572049  4963/4629/338   10905/812    57  221   23.27)
ramon: poll                 wall=13.000s usage=12.951s mem=24624KiB load=1.00 rootload=1.00
(smt.stats   73  10559 221888 582412  4991/4724/338   11123/812    57  221   23.37)
(smt.stats   74  10772 226888 600256  5049/4753/338   11375/815    57  221   23.37)
ramon: poll                 wall=14.000s usage=13.951s mem=24780KiB load=1.00 rootload=1.00
(smt.stats   75  11006 232333 618601  5084/4811/338   11635/815    57  221   23.47)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 257&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854776065 := 256 << 1
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 259&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854776067 := 256 << 1
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 259&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854776067 := 256 << 1
(smt.stats   76  11263 238852 634649  5124/4841/338   11923/823    57  221   23.47)
(smt.stats   77  11545 242012 653984  5172/4903/345   12234/899    58  222   23.56)
(smt.stats   78  11646 244344 666511  5242/4975/345   12348/899    58  222   23.56)
(smt.stats   79  11757 246363 677847  5258/4988/345   12467/909    59  226   23.66)
(smt.stats   80  11879 247338 684833  5268/5001/345   12579/909    59  226   23.66)
(smt.stats   81  12013 248850 692845  5285/5018/345   12735/909    59  226   23.66)
(smt.stats   82  12160 253832 708753  5289/5022/345   12903/909    59  226   23.66)
ramon: poll                 wall=15.000s usage=14.950s mem=25076KiB load=1.00 rootload=1.00
(smt.stats   83  12321 256902 723529  5292/5025/346   13077/922    60  231   23.66)
(smt.stats   84  12498 263694 737126  5298/5031/346   13277/922    60  231   23.75)
(smt.stats   85  12692 268978 761013  5298/5031/346   13479/922    60  231   23.75)
(smt.stats   86  12905 276257 780886  5311/5037/350   13562/963    61  370   23.75)
ramon: poll                 wall=16.000s usage=15.950s mem=25292KiB load=1.00 rootload=1.00
(smt.stats   87  13139 281888 793966  5436/5122/350   13846/967    61  370   23.85)
ramon: poll                 wall=17.000s usage=16.950s mem=25328KiB load=1.00 rootload=1.00
(smt.stats   88  13396 288393 818245  5640/5227/350   14136/976    61  370   24.04)
ramon: poll                 wall=18.004s usage=17.954s mem=25524KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.950s mem=25632KiB load=1.00 rootload=1.00
(smt.stats   89  13678 296081 840513  5819/5385/355   14479/1022    62  390   24.24)
ramon: poll                 wall=20.000s usage=19.949s mem=25688KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:12:11 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.988s
ramon: group.stime          0.012s
ramon: group.mempeak        25948KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.050s
ramon: loadavg              1.00
