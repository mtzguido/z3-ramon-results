ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:45:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42409 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/BoWMmfvUL87U.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2848410
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4111    577  1214/963/103     100/34     8   21   19.08)
(smt.stats    1    202   5924   1424  1859/1662/104     217/39     9   23   19.19)
(smt.stats    2    313   8834   2348  1907/1717/105     329/49    10   23   19.28)
(smt.stats    3    414   9760   3138  2192/1752/105     445/73    10   23   19.38)
(smt.stats    4    525  11060   4449  2300/2092/109     559/106    12   29   19.49)
(smt.stats    5    647  13203   6117  2333/2119/109     696/106    12   29   19.49)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  15435   8581  2387/2134/109     804/106    12   29   19.58)
(smt.stats    7    859  17486  10570  2397/2190/112     927/118    13   43   19.58)
(smt.stats    8    981  18296  12143  2405/2202/112    1064/118    13   43   19.58)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 1&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 1&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 2&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 1&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 2&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 8&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 1&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 2&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 8&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 16&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 8&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 16&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 32&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 32&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 32&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 64&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 32&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32 := 32&4095
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 32 := 32 << 12
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32 := 32&4095
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 32 := 32 << 12
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 32&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32 := 32&4095
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 32 := 32 << 12
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32 := 64&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 31 := 64&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 64&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 256&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 64&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 128&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 256&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 512&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 512&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 64&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 64 := 64&4095
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 64 := 64 << 12
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 48&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 16 := 48&4095
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 48 := 48&4095
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 48 := 48 << 12
(smt.stats    9   1115  20955  16235  2523/2295/227    1205/153    15   51   20.00)
(smt.stats   10   1216  22577  19052  2545/2318/232    1335/162    16   70   20.10)
(smt.stats   11   1327  25953  23385  2554/2345/236    1472/197    18   77   20.19)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 16&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 16 := 16 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 16&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 16 := 16 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 16&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 16 := 16 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 10&3
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2 := 10&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 10 := 10 << 2
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  28694  27598  2577/2366/245    1599/211    19   83   20.19)
(smt.stats   13   1583  31996  31179  2592/2374/247    1749/209    20   92   20.32)
(smt.stats   14   1730  36905  37097  2599/2386/247    1897/222    21   95   20.32)
(smt.stats   15   1831  40750  41541  2600/2387/247    2002/222    21   95   20.32)
(smt.stats   16   1942  43871  47100  2601/2388/248    2127/224    22   97   20.32)
(smt.stats   17   2064  47485  52775  2603/2390/248    2251/224    22   97   20.32)
(smt.stats   18   2198  52023  59520  2612/2397/248    2385/224    22   97   20.41)
(smt.stats   19   2345  58372  65747  2612/2397/248    2541/224    22   97   20.41)
(smt.stats   20   2506  63838  72355  2614/2399/248    2717/224    22   97   20.55)
(smt.stats   21   2607  67019  77757  2613/2400/261    2821/275    23  109   20.55)
(smt.stats   22   2718  67996  82424  2617/2400/261    2942/276    23  109   20.55)
ramon: poll                 wall=1.000s usage=0.950s mem=21800KiB load=0.95 rootload=0.94
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 5 := 5&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 3 := 5&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 5 := 5&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 5 := 5&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 3 := 5&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4 := 5&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4 := 4&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 3 := 4&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2 := 4&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&2147483643
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 4 := 3 << 31
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&2147483643
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 4 := 2 << 31
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 5&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&2147483643
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 4 := 3 << 31
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&2147483643
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 4 := 3 << 31
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 4&2147483643
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 4 := 2 << 31
(smt.stats   23   2840  68979  85662  2657/2427/277    3073/304    24  113   20.55)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 128 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 256 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 512 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1024 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2048 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4096 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 8192 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 16384 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 32768 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 65536 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 131072 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 262144 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 524288 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1048576 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 2097152 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 4194304 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 8388608 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 16777216 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 33554432 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 67108864 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 134217728 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 268435456 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 536870912 := 2147483648&2147483643
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1073741824 := 2147483648&2147483643
(smt.stats   24   2974  70502  89718  2768/2532/371    3322/305    24  113   21.15)
(smt.stats   25   3121  73221  95085  2774/2556/377    3513/466    25  150   21.24)
(smt.stats   26   3282  77719 103574  2778/2561/377    3720/466    26  155   21.34)
(smt.stats   27   3459  80019 112534  2885/2646/380    3929/510    27  160   21.43)
(smt.stats   28   3560  82273 118966  2896/2655/382    4040/510    27  160   21.43)
(smt.stats   29   3671  85279 124794  2911/2670/382    4182/516    28  171   21.43)
(smt.stats   30   3793  90729 135410  2912/2671/385    4383/521    29  183   21.72)
(smt.stats   31   3928  96920 145399  2926/2684/388    4578/548    31  214   21.72)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 192 := 268435456&268435455
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 192 := 268435520&268435455
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 8 := 268435456&268435455
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 16 := 268435456&268435455
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 100511 152195  2949/2705/399    4771/552    31  214   21.72)
(smt.stats   33   4236 105895 164221  2998/2707/399    5022/555    31  214   21.72)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 128 := 9858&536870910
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 130 := 9858&536870910
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 18 := 9858&536870910
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 18 := 9858&536870910
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 34 := 9858&536870910
(smt.stats   34   4413 108823 174580  3306/2760/399    5367/618    32  219   21.94)
(smt.stats   35   4607 113507 188310  3389/3140/405    5949/623    33  220   21.94)
(smt.stats   36   4708 115233 193757  3419/3153/405    6075/731    34  222   21.94)
ramon: poll                 wall=2.000s usage=1.946s mem=23336KiB load=1.00 rootload=0.99
(smt.stats   37   4819 118930 213142  3438/3196/406    6487/731    34  222   22.05)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 144115205255725056 := 0 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&3
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 17179869183 := 0 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&3
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 17179869183 := 0 << 2
(smt.stats   38   4941 120798 217663  3536/3202/406    6888/814    35  230   22.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 244)
(smt.stats   39   5075 123866 224014  3681/3375/414    7295/819    35  230   22.34)
(smt.stats   40   5222 127119 241089  3738/3487/415    7632/1043    36  260   22.34)
(smt.stats   41   5383 132364 258834  3770/3517/417    8778/1340    37  269   22.45)
(smt.stats   42   5560 137547 280574  3809/3522/417    9250/1342    37  269   22.56)
(smt.stats   43   5754 141290 300527  4158/3591/417    9793/1344    37  269   22.66)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1 := 268465664&63
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 268465664&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 144115205524190720 := 0 << 6
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 268465664&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 144115205524190720 := 0 << 6
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&63
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 5 := 0 << 6
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&63
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 5 := 0 << 6
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5967 144120 318595  4437/3971/417   10428/1349    37  269   22.95)
(smt.stats   45   6068 145146 328978  4447/4185/427   11541/1559    38  271   23.04)
(smt.stats   46   6179 146824 339396  4449/4187/432   11857/1919    39  281   23.14)
(smt.stats   47   6301 148897 356003  4464/4194/432   12087/1921    39  281   23.14)
(smt.stats   48   6435 150681 366943  4493/4219/432   12294/1924    39  281   23.23)
ramon: poll                 wall=3.000s usage=2.946s mem=24616KiB load=1.00 rootload=1.00
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&16383
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 5726623062 << 14
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&16383
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 5726623062 << 14
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&16383
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 5726623062 << 14
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&1
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 2 := 0 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&1
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 2 := 0 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&15
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 4
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&15
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 17179869183 := 0 << 4
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&15
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 4
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&15
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 17179869183 := 0 << 4
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 3
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&7
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 17179869183 := 0 << 3
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 3
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&7
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 8 := 0 << 3
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&31
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 5
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&31
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 32 := 0 << 5
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&31
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 5
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&31
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 32 := 0 << 5
(smt.stats   49   6582 152563 374909  4598/4235/432   12529/1935    39  281   23.43)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&127
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&127
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 128 := 0 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&127
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&127
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 128 := 0 << 7
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&255
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 8
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&255
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 17179869183 := 0 << 8
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&255
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 0 := 0 << 8
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 0&255
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 256 := 0 << 8
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 1&1048575
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 1&1048575
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 1&1048575
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 0 := 1&1048575
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1 := 9&1048575
(smt.stats   50   6743 155097 388353  4740/4434/475   12707/2071    40  286   23.62)
(smt.stats   51   6920 157780 396699  5059/4666/475   12948/2071    40  286   23.72)
(smt.stats   52   7114 161202 434568  5074/4758/479   14197/2117    41  292   24.06)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 256 := 448&1048575
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 320 := 448&1048575
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 448 := 448&1048575
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 144115909630362048 := 0 << 20
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 448 := 448&1048575
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 144115909630362048 := 0 << 20
(smt.stats   53   7327 166863 451315  5294/4840/488   14976/2276    42  292   24.45)
ramon: poll                 wall=4.000s usage=3.946s mem=25956KiB load=1.00 rootload=1.00
(smt.stats   54   7561 173164 471368  5403/5076/490   15606/2281    42  292   24.65)
(smt.stats   55   7662 176802 490336  5472/5135/494   15943/2485    43  305   24.75)
(smt.stats   56   7773 181209 504102  5535/5204/494   16233/2485    43  305   24.75)
(smt.stats   57   7895 185032 522676  5550/5226/494   16511/2599    44  307   24.75)
(smt.stats   58   8029 189055 543587  5569/5249/494   16679/2599    44  307   24.85)
(smt.stats   59   8176 194374 570521  5637/5258/494   17080/2603    44  307   24.85)
ramon: poll                 wall=5.000s usage=4.946s mem=26468KiB load=1.00 rootload=1.00
(smt.stats   60   8337 197787 592951  5859/5331/494   17755/2604    44  307   25.24)
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1 := 268430727&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 268430727 := 16361780175 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #286 64)) (if (= #672 63) 0 (if #674 1 #826))) 1 := 268430727&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #285) 64)) 268430727 := 16634476511 << 1
(smt.stats   61   8514 199294 607502  6069/5752/500   18259/2804    45  312   25.55)
(smt.stats   62   8708 205684 644428  6086/5769/500   18932/2804    45  312   25.55)
(smt.stats   63   8921 213671 670431  6272/5777/501   19897/3076    46  319   25.74)
ramon: poll                 wall=6.000s usage=5.946s mem=27320KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   64   9155 220915 703673  6454/6073/505   20613/3231    47  325   25.93)
(smt.stats   65   9412 227288 759158  6503/6155/509   21821/3660    48  336   26.03)
(smt.stats   66   9513 228698 769120  6610/6247/509   22031/3660    48  336   26.14)
(smt.stats   67   9624 233965 794162  6613/6250/512   22269/3660    48  336   26.14)
(smt.stats   68   9746 239034 825019  6616/6253/514   22519/3660    48  336   26.24)
(smt.stats   69   9880 244585 839977  6616/6253/514   22683/3751    49  341   26.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   70  10027 247545 858363  6640/6262/514   22854/3751    49  341   26.24)
ramon: poll                 wall=7.000s usage=6.945s mem=27832KiB load=1.00 rootload=1.00
(smt.stats   71  10188 252134 882132  6641/6278/514   23054/3751    49  341   26.24)
(smt.stats   72  10365 255468 909145  6643/6280/514   23256/3751    49  341   26.24)
(smt.stats   73  10559 261306 948569  6706/6321/514   23998/3754    49  341   26.45)
ramon: poll                 wall=8.000s usage=7.945s mem=28344KiB load=1.00 rootload=1.00
(smt.stats   74  10772 267157 970347  7104/6336/515   24746/3893    50  344   26.74)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   75  11006 272375 1000167  7328/6763/515   25686/3894    50  344   26.93)
(smt.stats   76  11263 280083 1082088  7373/6979/515   28063/3898    50  344   27.42)
ramon: poll                 wall=9.000s usage=8.945s mem=29112KiB load=1.00 rootload=0.99
(smt.stats   77  11545 286098 1119517  7421/7014/515   28710/3900    50  344   27.51)
(smt.stats   78  11646 290193 1150377  7637/7119/515   29359/3901    50  344   27.61)
(smt.stats   79  11757 293008 1168262  7705/7279/515   30279/3901    50  344   27.80)
(smt.stats   80  11879 296638 1198369  7779/7389/515   30555/3902    50  344   27.80)
(smt.stats   81  12013 300901 1218280  7813/7426/517   31530/4332    51  346   28.01)
ramon: poll                 wall=10.000s usage=9.935s mem=29552KiB load=0.99 rootload=0.99
(smt.stats   82  12160 311382 1248165  7825/7447/517   32191/4332    51  346   28.01)
(smt.stats   83  12321 316884 1284421  7862/7467/517   33167/4332    51  346   28.21)
(smt.stats   84  12498 321378 1315769  7872/7494/520   34037/4619    52  352   28.31)
(smt.stats   85  12692 324926 1395640  7892/7499/520   34443/4619    52  352   28.47)
ramon: poll                 wall=11.000s usage=10.934s mem=30320KiB load=1.00 rootload=1.00
(smt.stats   86  12905 326720 1466954  7948/7546/520   34725/4723    53  374   28.56)
(smt.stats   87  13139 329691 1548958  8003/7605/530   35024/4723    53  374   28.56)
(smt.stats   88  13396 336955 1662337  8026/7630/530   36077/4777    54  387   28.75)
ramon: poll                 wall=12.000s usage=11.934s mem=30576KiB load=1.00 rootload=1.00
(smt.stats   89  13678 348027 1707847  8337/7638/530   37854/4790    54  387   28.95)
ramon: poll                 wall=13.000s usage=12.934s mem=30832KiB load=1.00 rootload=1.00
(smt.stats   90  13988 361938 1776907  8515/7954/530   38702/4798    54  387   29.04)
(smt.stats   91  14089 365241 1797784  8559/8161/530   38954/4799    54  387   29.15)
(smt.stats   92  14200 369161 1825510  8606/8168/530   39369/4800    54  387   29.25)
(smt.stats   93  14322 372562 1861627  8644/8230/530   39977/4800    54  387   29.34)
(smt.stats   94  14456 375855 1897905  8701/8287/530   40485/4800    54  387   29.44)
ramon: poll                 wall=14.000s usage=13.934s mem=31344KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   95  14603 379319 1922186  8716/8299/539   40751/5422    55  388   29.54)
(smt.stats   96  14764 381376 1965310  8722/8305/539   41639/5422    55  388   29.71)
(smt.stats   97  14941 386605 2016064  8756/8311/539   42295/5428    55  388   30.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 1548)
(smt.stats   98  15135 392418 2056005  8768/8354/539   41612/5558    56  401   30.03)
ramon: poll                 wall=15.002s usage=14.938s mem=31600KiB load=1.00 rootload=1.00
(smt.stats   99  15348 400005 2121982  8773/8359/539   42554/5558    56  401   30.49)
(smt.stats  100  15582 408714 2172025  8787/8370/539   43032/5559    56  401   30.59)
ramon: poll                 wall=16.000s usage=15.934s mem=32236KiB load=1.00 rootload=1.00
(smt.stats  101  15839 423457 2284592  8805/8382/539   43761/5560    56  401   30.68)
(smt.stats  102  16121 433865 2358543  8914/8401/540   45107/5874    57  404   30.78)
ramon: poll                 wall=17.000s usage=16.933s mem=32492KiB load=1.00 rootload=1.00
(smt.stats  103  16431 445712 2439774  9031/8548/540   45647/5874    57  404   30.87)
ramon: poll                 wall=18.000s usage=17.933s mem=32492KiB load=1.00 rootload=1.00
(smt.stats  104  16771 456259 2526244  9120/8635/542   46723/5974    58  406   31.07)
(smt.stats  105  16872 458929 2541424  9163/8723/542   46998/5975    58  406   31.07)
(smt.stats  106  16983 461288 2554849  9209/8795/543   47323/6061    59  438   31.07)
(smt.stats  107  17105 466915 2601198  9212/8798/543   48028/6061    59  438   31.16)
ramon: poll                 wall=19.000s usage=18.933s mem=32748KiB load=1.00 rootload=1.00
(smt.stats  108  17239 471857 2631061  9258/8839/544   48408/6066    59  438   31.16)
(smt.stats  109  17386 481421 2659341  9338/8847/544   49000/6075    59  438   31.27)
(smt.stats  110  17547 483824 2679862  9398/8963/544   49324/6309    60  439   31.37)
(smt.stats  111  17724 490632 2727672  9414/8996/544   50137/6309    60  439   31.37)
ramon: poll                 wall=20.000s usage=19.933s mem=33004KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 14:45:36 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.987s
ramon: group.utime          19.963s
ramon: group.stime          0.024s
ramon: group.mempeak        33004KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              1.00
