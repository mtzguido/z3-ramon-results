ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:53:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29756 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CJZgMse7yQKZ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             308789
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   252/252     0/0  63       0    18.52   0.00)
(sat.stats    106    631    0   252/252   106/35  63       0    18.86   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 279 :time 0.00)
(sat.stats    106    631    0   252/252   106/35  63       0    18.86   0.01)
(sat.stats    106    631    0   252/252   106/35  63       0    18.86   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 397018.86 :time 0.00)
(sat.stats    106    631    0   254/254    42/34  63       0    18.86   0.01)
(sat.stats    170   1771    1   254/254   106/83  63       0    18.96   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    173   1833    2   254/254   109/83  63       0    18.96   0.01)
(sat.stats    176   1902    3   254/254   112/83  63       0    18.96   0.01)
(sat.stats    179   1969    4   254/254   115/83  63       0    18.96   0.01)
(sat.stats    182   2041    5   254/254   118/83  63       0    18.96   0.01)
(sat.stats    185   2099    6   254/254   121/83  63       0    18.96   0.01)
(sat.stats    188   2173    7   254/254   124/83  63       0    18.96   0.01)
(sat.stats    191   2237    8   254/254   127/83  63       0    18.96   0.01)
(sat.stats    194   2299    9   254/254   130/84  63       0    18.96   0.01)
(sat.stats    197   2311   10   254/254   133/87  63       0    18.96   0.01)
(sat.stats    200   2333   11   254/254   136/90  63       0    18.96   0.01)
(sat.stats    203   2360   12   254/254   139/93  63       0    18.96   0.01)
(sat.stats    209   2407   14   254/254   145/99  63       0    18.96   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    400   4227   18   436/436   336/194  63       0    19.93   0.12)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2285 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2764 :time 0.00)
(sat.stats    506   7878   19  1199/1198   458/212  76       0    20.12   0.22)
lshr: (lshr[60] (bv2int %0) (+ 60 (* 1152921504606846975 #64))) 27729 := 0 >>l 46
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 3273 :time 0.00)
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 1&56734660914774016
lshr: (lshr[64] (* 8 (bv2int %0)) (mod (+ 63 #620 #624) 64)) 0 := 562949953421312 >>l 49
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 3500 :time 0.00)
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 16383 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 16302 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 14460 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 16376 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 14832 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 96 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 64 := 16383&56734660914774016
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4592 :time 0.00)
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 8694 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 4117 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 11636 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 4656 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 8 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 1952 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 896 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 64 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 256 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 512 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 13312 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 4096 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 2048 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 0 := 16383&56734660914774016
band: (band[60] (if (= #336 63) 9194291601025265369183148521484713984 (if #466 4597145800512632684591574260742356992 #463)) (lshr[64] (* 8 #74) (mod #627 64))) 8192 := 56734660914774016&16383
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 128 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 3584 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 256 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 11264 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 8192 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 2048 := 16383&56734660914774016
band: (band[60] (lshr[60] (bv2int %0) (+ 60 #489)) (if (= #84 59) 574643225064079085573946782592794624 (if #493 287321612532039542786973391296397312 #609))) 4096 := 16383&56734660914774016
(sat.stats    711  15791   55  2905/2902   697/281 138       0    21.72   0.34)
ramon: poll                 wall=1.000s usage=0.920s mem=35968KiB load=0.92 rootload=0.90
ramon: poll                 wall=2.000s usage=1.918s mem=54320KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.918s mem=60248KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.917s mem=65336KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.917s mem=85732KiB load=1.00 rootload=1.00
(sat.stats   1066  29674  168 92165/92162  4891/4125 138       0    86.57   5.85)
ramon: poll                 wall=6.000s usage=5.916s mem=88972KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.916s mem=92356KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.916s mem=96068KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.916s mem=98300KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.915s mem=99MiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.915s mem=100MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.915s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.004s usage=12.919s mem=105MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.915s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.914s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.914s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.913s mem=112MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.911s mem=114MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.911s mem=117MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.910s mem=151MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:53:36 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.998s
ramon: group.utime          19.962s
ramon: group.stime          0.036s
ramon: group.mempeak        182MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.088s
ramon: loadavg              1.00
