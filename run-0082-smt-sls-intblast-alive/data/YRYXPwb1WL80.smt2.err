ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:41:49 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27983 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1377
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YRYXPwb1WL80.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             845625
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   64.9351     10000        49          0            1        2)
(sat.ddfw       1      1   35.9748     20001        98          1            1        3)
(sat.ddfw       1      1   41.2371     40001       196          2            1        5)
(smt.stats    0    101   1408    281  1188/1032/97     117/18     3   14   52.14)
(smt.stats    1    202   2689    683  1831/1632/97     271/20     3   14   52.05)
(smt.stats    2    313   4885   1949  2023/1829/98     396/75     4   14   52.24)
(smt.stats    3    417   6062   3280  2502/2286/103     497/103     5   15   52.35)
(smt.stats    4    528   9769   5273  2535/2306/105     599/112     6   24   52.47)
(sat.ddfw       1      1   38.1679     70001       343          3            1        8)
(smt.stats    5    650  11575   6947  2619/2360/107     717/117     8   29   52.56)
ramon: poll                 wall=1.000s usage=0.863s mem=54640KiB load=0.86 rootload=0.86
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    751  13281   9147  2660/2422/108     815/122     9   29   52.66)
(smt.stats    7    862  16379  11642  2684/2447/108     924/126     9   29   52.66)
(smt.stats    8    984  17941  13912  2733/2503/108    1048/126     9   29   52.66)
(smt.stats    9   1118  20405  15848  2741/2513/108    1183/128     9   29   52.77)
(sat.ddfw       1      1   33.5852    110001       539          4            1       12)
(smt.stats   10   1219  23269  18898  2750/2528/108    1285/128     9   29   52.86)
(smt.stats   11   1330  26172  22520  2761/2537/108    1399/128     9   29   52.86)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1452  28386  25508  2767/2543/108    1522/128     9   29   52.86)
(smt.stats   13   1586  31486  27503  2767/2543/108    1657/128     9   29   52.96)
(smt.stats   14   1733  35084  31979  2771/2547/108    1800/128     9   29   52.96)
(smt.stats   15   1834  37331  35148  2771/2547/108    1901/128     9   29   53.08)
(smt.stats   16   1945  39347  38542  2772/2548/108    2011/128     9   29   53.08)
(smt.stats   17   2067  41480  43628  2773/2549/108    2135/128     9   29   53.08)
(smt.stats   18   2201  45004  51625  2775/2549/108    2270/128     9   29   53.08)
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8796093022201 := 8796093022201&8796093022202
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8796093022200 := 8796093022201&8796093022200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 144088799796789240 := 0 << 42
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8796093022200 := 8796093022201&8796093022200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 144088799796789240 := 0 << 42
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8796093022201 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8796093022201 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8796093022200 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8796093022198 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8796093022196 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8796093022192 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 8796093022201&8796093022208
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #105))) 8796093022209 := 2097145 << 43
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 8796093022201&8796093022208
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446682501058396160 := 4194302 << 42
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 15 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 14 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 12 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 8796093022201&8796093022208
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #105))) 8796093022209 := 2097145 << 43
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 8796093022201&8796093022208
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #105))) 8796093022209 := 2097145 << 43
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 2 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 4 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 32 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 64 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 128 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 256 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 512 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 128 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 96 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 64 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 96 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 8796093022201&8796093022208
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 8796093022201&8796093022208
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #105))) 8796093022201 := 2113529 << 43
(sat.ddfw       1      1    29.188    160000       784          5            1       17)
(smt.stats   19   2348  46604  57846  2965/2669/181    2423/158    10   32   53.37)
ramon: poll                 wall=2.000s usage=1.860s mem=55508KiB load=1.00 rootload=0.99
(smt.stats   20   2509  48098  62634  3044/2814/185    2580/165    11   49   53.47)
(smt.stats   21   2610  51195  70500  3072/2830/186    2686/176    13   55   53.47)
(smt.stats   22   2721  53108  72844  3152/2856/186    2800/176    13   55   53.47)
(smt.stats   23   2843  55680  78983  3177/2939/189    2936/176    13   55   53.47)
(smt.stats   24   2977  57773  82924  3253/2959/189    3062/201    14   62   53.57)
(sat.ddfw       1      1   25.7736    220001      1078          6            1       23)
(smt.stats   25   3124  58982  86560  3290/3037/192    3201/216    15   64   53.78)
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&26388279066623
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&26388279066621
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&26388279066616
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&26388279066560
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583168
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583168
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583424
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583936
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583936
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12584960
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12584960
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12587008
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12584960
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12587008
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12591104
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12599296
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12599296
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12615680
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12648448
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12648448
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12713984
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12648448
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12713984
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12648448
(smt.stats   26   3285  61904  91791  3437/3101/195    3379/246    16   68   54.14)
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583936
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583936
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583936
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 35184372088806&12583936
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583936
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12584960
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12584960
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12584960
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 35184372088806&12583168
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583168
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583424
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583424
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 35184372088806&12583424
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583424
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12582976
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583040
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12582976
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12583040
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&4194304
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12582912
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&12320768
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&8388608
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&4194304
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&8388608
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&8388608
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&8388608
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 35184372088806&4194304
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 35184372088806&4194304
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 35184372088806&4194304
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 2 := 35184372088806&4194304
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 2 := 35184372088806&4194306
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 2 := 35184372088806&3981312
(smt.stats   27   3462  64654  97593  3617/3375/391    3696/325    17  108   54.43)
(smt.stats   28   3563  65842 101468  3628/3392/392    3819/325    17  108   54.43)
(smt.stats   29   3674  68363 108720  3629/3393/393    3941/325    17  108   54.53)
ramon: poll                 wall=3.000s usage=2.857s mem=56644KiB load=1.00 rootload=1.00
(smt.stats   30   3796  78062 125505  3629/3393/393    4061/372    18  114   54.53)
(sat.ddfw       1      1   22.9583    290001      1421          7            1       30)
(smt.stats   31   3930  82988 139733  3639/3403/395    4210/402    19  116   54.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077  87999 154676  3646/3410/395    4354/402    19  116   54.63)
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 4095&16777216
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 144361478697254912 := 8 << 11
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 4095&8388608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 144361478688866304 := 8184 << 11
(smt.stats   33   4238  95712 167757  3680/3416/395    4580/408    20  119   54.84)
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 2577 := 4095&4096
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 2576 := 4095&4096
(smt.stats   34   4415  99308 178308  3739/3499/412    4861/460    21  120   54.93)
(smt.stats   35   4609 106598 189653  3767/3511/412    5107/461    21  120   55.51)
(smt.stats   36   4710 111017 199017  3773/3535/412    5206/581    22  125   55.51)
(sat.ddfw       1      1   20.6612    370001      1813          8            1       38)
(smt.stats   37   4821 117355 211698  3773/3535/412    5320/581    22  125   55.51)
ramon: poll                 wall=4.000s usage=3.854s mem=57752KiB load=1.00 rootload=1.00
(smt.stats   38   4943 122449 220557  3777/3538/413    5458/593    23  127   55.51)
(smt.delete-inactive-clauses  :num-deleted-clauses 253)
(smt.stats   39   5077 128025 229468  3800/3550/417    5344/594    23  127   55.60)
(smt.stats   40   5224 135483 245880  3808/3571/417    5499/597    24  144   55.79)
(smt.stats   41   5385 141520 260006  3816/3575/417    5666/597    24  144   56.06)
(smt.stats   42   5562 146134 271529  3831/3591/417    5841/597    24  144   56.06)
(smt.stats   43   5756 154485 292860  3850/3613/418    6043/631    25  150   56.06)
(sat.ddfw       1      1    18.711    460001      2254          9            1       47)
(smt.stats   44   5969 163778 314922  3857/3620/419    6338/647    26  152   56.06)
ramon: poll                 wall=5.000s usage=4.908s mem=58152KiB load=1.05 rootload=1.05
(smt.stats   45   6070 167827 325421  3875/3625/421    6446/648    26  152   56.06)
(smt.stats   46   6181 172290 337888  3920/3647/421    6585/660    27  174   56.16)
(smt.stats   47   6303 177450 352960  3944/3694/421    6747/660    27  174   56.16)
(smt.stats   48   6437 183172 371595  3955/3718/422    6879/677    28  176   56.16)
(smt.stats   49   6584 188303 386827  3960/3721/423    7048/675    29  184   56.16)
(smt.stats   50   6745 195543 403030  3976/3726/423    7279/676    29  184   56.16)
(sat.ddfw       1      1   17.1292    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.925s mem=58396KiB load=1.02 rootload=1.02
(smt.stats   51   6922 201632 418600  3984/3743/423    7465/677    29  184   56.16)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7116 209324 433941  4013/3762/423    7677/681    29  184   56.65)
ramon: poll                 wall=7.000s usage=6.922s mem=58768KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   15.7661    670001      3284         11            1       68)
(smt.stats   53   7329 215305 444733  4227/3857/425    8037/776    30  189   56.95)
(smt.stats   54   7563 222183 458032  4285/4000/425    8349/783    30  189   57.04)
(smt.stats   55   7664 224314 465212  4301/4049/425    8476/787    30  189   57.04)
ramon: poll                 wall=8.000s usage=7.920s mem=58956KiB load=1.00 rootload=1.00
(smt.stats   56   7775 227820 474559  4424/4106/426    8606/948    31  189   57.04)
(smt.stats   57   7897 231218 484034  4485/4235/426    8781/948    31  189   57.04)
(sat.ddfw       1      1   14.5914    790001      3872         12            1       80)
(smt.stats   58   8031 235131 496095  4497/4256/426    9042/952    31  189   57.04)
(smt.stats   59   8178 242151 513236  4511/4265/426    9288/954    31  189   57.04)
(smt.stats   60   8339 246193 528687  4568/4296/426    9446/957    31  189   57.14)
(smt.stats   61   8516 248878 540560  4608/4370/427    9697/1206    32  191   57.14)
(smt.stats   62   8710 254325 561011  4679/4389/428    9901/1217    32  191   57.14)
ramon: poll                 wall=9.000s usage=8.920s mem=59492KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8923 257252 577768  4757/4474/428   10166/1226    33  191   57.24)
(smt.stats   64   9157 260285 594991  4826/4583/428   10378/1227    33  191   57.24)
(smt.stats   65   9414 265741 617826  4958/4596/429   10825/1334    34  194   57.33)
(sat.ddfw       1      1   13.5855    920001      4509         13            1       93)
(smt.stats   66   9515 268610 629820  4976/4739/430   11175/1418    35  199   57.43)
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 8 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 16 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 16 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 32 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 64 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 128 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 256 := 511&17956864
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 4 := 511&17694720
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 511&17694720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446603336238891008 := 37748744 << 8
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 511&17694720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446603336238891008 := 37748744 << 8
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 511&17694720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446603336238891008 := 37748744 << 8
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 511&17694720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446603336238891008 := 37748744 << 8
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 511&17694720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 144361478698172416 := 37748744 << 8
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 511&17694720
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #105))) 17695230 := 34560 << 9
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 511&17694720
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #105))) 17695230 := 34560 << 9
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 511&17694720
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #105))) 17695230 := 34560 << 9
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 511&17694720
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #105))) 17695230 := 34560 << 9
(smt.stats   67   9626 272442 639621  5076/4757/430   11360/1439    35  199   57.52)
(smt.stats   68   9748 274204 648214  5113/4853/450   11530/1439    35  199   57.52)
ramon: poll                 wall=10.000s usage=9.916s mem=60004KiB load=1.00 rootload=0.99
(smt.stats   69   9882 277899 663157  5153/4868/451   11756/1440    35  199   57.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10029 282694 674440  5194/4944/453   11909/1619    36  209   57.62)
(smt.stats   71  10190 287517 691684  5267/4952/453   12118/1627    36  209   57.71)
(smt.stats   72  10367 289912 707177  5318/5037/453   12313/1651    37  215   57.81)
ramon: poll                 wall=11.000s usage=10.914s mem=60336KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7146   1060001      5196         14            1      108)
(smt.stats   73  10561 295000 733712  5369/5083/453   12689/1653    37  215   57.81)
(smt.stats   74  10774 300296 762761  5437/5155/454   12927/1809    38  215   57.81)
(smt.stats   75  11008 304137 783437  5558/5201/454   13177/1812    38  215   57.90)
ramon: poll                 wall=12.000s usage=11.911s mem=60408KiB load=1.00 rootload=0.99
(smt.stats   76  11265 311145 813807  5699/5382/454   13610/1816    38  215   58.55)
(smt.stats   77  11547 318425 838450  5883/5640/455   13933/1969    39  231   59.02)
(sat.ddfw       1      1    11.936   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.910s mem=60836KiB load=1.00 rootload=1.00
(smt.stats   78  11648 320373 843100  6038/5641/455   14063/1970    39  231   59.02)
(smt.stats   79  11759 322327 850289  6131/5822/455   14211/1970    39  231   59.11)
(smt.stats   80  11881 324244 855600  6200/5900/455   14339/1970    39  231   59.11)
(smt.stats   81  12015 326364 867465  6314/5976/455   14500/1973    39  231   59.11)
ramon: poll                 wall=14.000s usage=13.899s mem=60984KiB load=0.99 rootload=0.99
(smt.stats   82  12162 327877 879842  6373/6081/455   14668/1973    39  231   59.24)
(sat.ddfw       1      1   11.3371   1370001      6715         16            1      139)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   83  12323 330257 897886  6458/6172/455   14835/1974    39  231   59.24)
(smt.stats   84  12500 332744 913428  6479/6233/455   15006/1974    39  231   59.24)
ramon: poll                 wall=15.000s usage=14.830s mem=61128KiB load=0.93 rootload=0.93
(smt.stats   85  12694 337301 941757  6684/6247/455   15200/1978    39  231   59.33)
(smt.stats   86  12907 341766 964497  6872/6453/455   15451/1980    39  231   59.33)
ramon: poll                 wall=16.000s usage=15.770s mem=61264KiB load=0.94 rootload=0.94
(smt.stats   87  13141 345588 980071  6973/6641/455   15865/1987    39  231   59.43)
(sat.ddfw       1      1   10.6583   1540001      7549         17            1      156)
(smt.stats   88  13398 348718 1011165  7154/6834/455   16172/1988    39  231   59.52)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   89  13680 351796 1042416  7203/6920/456   16508/2186    40  257   59.52)
(smt.stats   90  13990 357755 1083579  7300/6981/456   17052/2192    40  257   59.52)
ramon: poll                 wall=17.000s usage=16.799s mem=61848KiB load=1.03 rootload=1.03
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33613824
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33613824
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33613824
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33613824
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33613824
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33613824
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33613824
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33613824
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33605632
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 516 := 35184372088806&33605632
(smt.stats   91  14091 359447 1092535  7442/7152/458   17255/2460    41  259   59.62)
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 512 := 35184372088806&33638400
(smt.stats   92  14202 360490 1099194  7479/7207/458   17373/2461    41  259   59.62)
(smt.stats   93  14324 363336 1120871  7501/7246/458   17650/2463    41  259   59.62)
(smt.stats   94  14458 368528 1152266  7529/7258/458   17852/2468    41  259   59.71)
(smt.stats   95  14605 372546 1171967  7554/7311/460   18037/2563    42  262   59.81)
(smt.stats   96  14766 378248 1190241  7628/7323/460   18290/2567    42  262   59.81)
(sat.ddfw       1      1   10.0835   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=17.784s mem=62164KiB load=0.98 rootload=0.98
(smt.stats   97  14943 380717 1203334  8155/7483/460   18971/2660    43  265   60.00)
(smt.delete-inactive-clauses  :num-deleted-clauses 301)
(smt.stats   98  15137 390430 1258606  8164/7917/461   19290/2660    43  265   60.10)
(smt.stats   99  15350 395401 1273405  8635/7923/461   20136/2931    44  266   60.29)
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 15&137460761344
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446533104937779968 := 35321811024902 << 3
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 15&137460761344
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446533104937779968 := 35253233647646 << 3
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 0 := 15&137460761344
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446533104937779968 := 35287652630446 << 3
ramon: poll                 wall=19.000s usage=18.783s mem=62720KiB load=1.00 rootload=1.00
(smt.stats  100  15584 401835 1297804  8814/8441/467   20594/2943    44  266   60.39)
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 127&17627622572033
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446585779471679489 := 35253229977602 << 6
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 127&17627622572033
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446620963843768321 := 35253229977602 << 6
band: (band[45] (if (= #345 63) 1 (if #567 3 #804)) (shl[64] (* 2 #328) (mod #819 64))) 1 := 127&17627622572033
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #811 #815) 64)) 18446620963843768321 := 35253229977604 << 6
(smt.stats  101  15841 405847 1316125  9466/8661/467   21024/3371    45  271   60.75)
(sat.ddfw       1      1   9.61149   1910001      9362         19            1      193)
(smt.stats  102  16123 412127 1360036  9663/9227/473   22770/3375    45  271   61.03)
ramon: poll                 wall=20.000s usage=19.782s mem=63224KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:42:09 2024
ramon: root.execname        z3
ramon: root.utime           19.840s
ramon: root.stime           0.010s
ramon: group.total          19.860s
ramon: group.utime          19.845s
ramon: group.stime          0.016s
ramon: group.mempeak        63500KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              0.99
