ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:46:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27870 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/bB2fkX3vLCwa.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             860360
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   86.2069     10000        49          0            1        2)
(sat.ddfw       1      1   43.4826     20001        98          1            1        3)
(smt.stats    0    101   5363    463  1281/1164/100      96/21     5   19   52.16)
(smt.stats    1    202   7634   1723  2287/1794/102     194/49     7   23   52.36)
(sat.ddfw       1      1   42.9185     40001       196          2            1        5)
(smt.stats    2    313   8556   2328  2556/2306/104     306/55     8   25   52.65)
(sat.ddfw       1      1     36.63     70001       343          3            1        8)
(smt.stats    3    414   9224   2946  2764/2493/104     424/59     8   25   52.65)
ramon: poll                 wall=1.000s usage=0.990s mem=54760KiB load=0.99 rootload=0.98
(smt.stats    4    525  11019   4329  2895/2650/116     546/108    12   38   52.74)
(smt.stats    5    647  16118   7216  2975/2711/117     698/139    13   41   52.74)
(sat.ddfw       1      1   31.1526    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19839  11169  3001/2756/118     793/147    14   47   52.84)
(smt.stats    7    859  22886  15142  3006/2768/118     899/147    14   47   52.97)
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 10316800&4503599627370494
(smt.stats    8    981  26071  20814  3017/2772/120    1019/151    15   47   52.97)
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 10316800&2251799813685248
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 10316800 := 8097792 >>l 13
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 10316800&2251799813685248
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 10316800 := 8097792 >>l 13
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 8097793&2251799813685248
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 8097793 := 8097792 >>l 13
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 8097793&2251799813685248
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 8097793 := 8097792 >>l 13
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 8097793&2251799813685248
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 8097793 := 8097792 >>l 13
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 8097793&2251799813685248
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 8097793 := 8097792 >>l 13
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 10315411 := 10316800&4503530907893760
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 10316800&4503530907893760
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 10316800 := 8159232 >>l 28
(smt.stats    9   1115  27403  22288  3033/2779/125    1175/151    16   49   53.11)
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 10316800&4503565267632128
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 10316800 := 8163328 >>l 29
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503530907893760
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 0 := 8159232 >>l 28
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503530907893760
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 1125899906842113 := 1992 >>l 16
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503530907893760
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 0 := 8159232 >>l 28
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503530907893760
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 1589 := 1992 >>l 16
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503530907893760
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 0 := 8159232 >>l 28
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503530907893760
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 1589 := 1992 >>l 16
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503565267632128
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 0 := 8163328 >>l 29
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503565267632128
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 2116 := 1993 >>l 17
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503565267632128
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 0 := 8163328 >>l 29
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503565267632128
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 1590 := 1993 >>l 17
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503565267632128
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 0 := 8163328 >>l 29
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 0&4503565267632128
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 1590 := 1993 >>l 17
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 8105463 := 8105985&3940649673949184
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 8105462 := 8105985&3940649673949184
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 8105460 := 8105985&3940649673949184
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 8105985&3940649673949184
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 8105985 := 8105984 >>l 15
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 8105983&3940649673949184
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 8105983 := 8105984 >>l 15
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 468 := 990&3940649673949184
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 472 := 994&3940649673949184
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 464 := 994&3940649673949184
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 448 := 994&3940649673949184
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 992&3940649673949184
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 992 := 8105984 >>l 15
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 247&3940649673949184
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 2116 := 1979 >>l 3
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 248&3377699720527872
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 248 := 8101888 >>l 14
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 2116 := 1978 >>l 2
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 494 := 8101888 >>l 14
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 1596 := 1978 >>l 2
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 494 := 8101888 >>l 14
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
lshr: (lshr[52] (bv2int %0) (mod (bv2int %0) 52)) 1596 := 1978 >>l 2
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 494 := 8101888 >>l 14
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 494 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 492 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 488 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 480 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 448 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 1 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 495&3377699720527872
lshr: (lshr[64] (* 4096 (bv2int %0)) (mod (+ 12 #97 #322) 64)) 495 := 8101888 >>l 14
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 1 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 2 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 4 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 494 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 492 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 488 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 480 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 448 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 384 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 494 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 1 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 4 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 8 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 16 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 64 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 128 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 127 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 126 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 124 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 120 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 128 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 128 := 494&3377699720527872
(smt.stats   10   1217  28515  23608  3178/2818/135    1279/169    17   51   53.50)
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 64 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 256 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 256 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 16 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 8 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 8 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 4 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 2 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 494 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 493 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 488 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 4 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 16 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 64 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 128 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 64 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 64 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 128 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 256 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 128 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 256 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 167 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 167 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 166 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 128 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 128 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 32 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 7 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 6 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 4 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 4 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 3 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 2 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 3 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 1 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 1 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 1 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 0 := 494&3377699720527872
band: (band[52] (lshr[52] (bv2int %0) (mod #97 52)) (if (= #497 51) 10141204801825832960173811957760 (if #499 5070602400912916480086905978880 #599))) 1 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 8 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 16 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 64 := 494&3377699720527872
band: (band[52] (lshr[64] (* 4096 #97) (mod #323 64)) (if (= #622 63) 83076749736557223609743867557969920 (if #624 41538374868278611804871933778984960 #748))) 64 := 494&3377699720527872
(smt.stats   11   1328  30798  27871  3331/3071/356    1431/207    20  103   54.18)
(sat.ddfw       1      1   26.7661    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.990s mem=56424KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  35130  33657  3418/3124/356    1598/217    20  103   54.27)
(sat.ddfw       1      1   23.3285    220001      1078          6            1       23)
(smt.stats   13   1584  39707  40447  3518/3209/367    1803/299    22  112   54.37)
ramon: poll                 wall=3.000s usage=2.989s mem=56656KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.6307    290001      1421          7            1       30)
(smt.stats   14   1731  43638  48091  3688/3313/373    2049/324    23  115   54.57)
ramon: poll                 wall=4.000s usage=3.987s mem=56816KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.5014    370001      1813          8            1       38)
(smt.stats   15   1832  45110  51955  3984/3465/374    2162/361    24  125   54.77)
ramon: poll                 wall=5.000s usage=4.987s mem=57332KiB load=1.00 rootload=1.00
(smt.stats   16   1943  48126  60969  4140/3874/376    2376/411    26  130   54.92)
(smt.stats   17   2065  53629  68512  4192/3885/376    2634/416    26  130   54.92)
(sat.ddfw       1      1   16.7473    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=5.987s mem=57380KiB load=1.00 rootload=1.00
(smt.stats   18   2199  60816  76466  4317/3947/376    2912/416    26  130   55.21)
(sat.ddfw       1      1   15.3022    560001      2745         10            1       57)
(smt.stats   19   2346  67027  92204  4424/4139/377    3219/581    27  137   55.23)
ramon: poll                 wall=7.001s usage=6.985s mem=57524KiB load=1.00 rootload=1.00
(smt.stats   20   2507  73266 108963  4507/4241/380    3685/692    28  140   55.43)
(smt.stats   21   2608  78346 126131  4575/4288/381    3846/693    28  140   55.43)
(smt.stats   22   2719  81189 135465  4658/4368/383    4160/835    30  161   55.52)
(sat.ddfw       1      1   14.0809    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.984s mem=57824KiB load=1.00 rootload=1.00
(smt.stats   23   2841  84484 149998  4884/4549/384    4506/836    30  161   55.72)
(smt.stats   24   2975  88201 162257  5000/4709/388    4810/917    32  172   55.81)
(smt.stats   25   3122  92658 176135  5051/4746/389    5045/917    32  172   56.08)
ramon: poll                 wall=9.005s usage=8.963s mem=58132KiB load=0.97 rootload=0.97
(smt.stats   26   3283  99952 208505  5054/4757/389    5217/945    33  178   56.08)
(sat.ddfw       1      1   12.9618    790001      3872         12            1       80)
ramon: poll                 wall=10.000s usage=9.856s mem=58436KiB load=0.90 rootload=0.89
(smt.stats   27   3460 103474 215935  5185/4762/389    5529/950    33  178   56.37)
(smt.stats   28   3561 106454 228974  5321/5024/396    5853/990    34  189   56.37)
(sat.ddfw       1      1   12.0004    920001      4509         13            1       93)
ramon: poll                 wall=11.013s usage=11.012s mem=58664KiB load=1.14 rootload=1.14
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   29   3672 110935 241301  5405/5085/397    6161/1070    35  235   56.47)
(smt.stats   30   3794 115959 251035  5559/5149/398    6461/1106    36  237   56.66)
ramon: poll                 wall=12.000s usage=12.006s mem=58840KiB load=1.01 rootload=1.00
(sat.ddfw       1      1   11.3517   1060001      5196         14            1      108)
(smt.stats   31   3928 120160 261010  5687/5281/398    6793/1110    36  237   56.66)
(smt.stats   32   4075 126841 274755  5735/5403/399    7258/1220    37  239   56.66)
ramon: poll                 wall=13.000s usage=12.970s mem=58936KiB load=0.96 rootload=0.96
(smt.stats   33   4236 136024 294138  5927/5480/401    7683/1292    38  246   56.84)
ramon: poll                 wall=14.000s usage=13.930s mem=59308KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   10.5708   1210001      5931         15            1      123)
(smt.stats   34   4413 143166 316215  6117/5820/402    8414/1425    39  248   57.17)
ramon: poll                 wall=15.000s usage=14.883s mem=59608KiB load=0.95 rootload=0.96
(smt.stats   35   4607 149674 338772  6226/5854/405    9052/1428    39  248   57.27)
(smt.stats   36   4708 152201 349774  6356/5970/406    9242/1559    40  259   57.38)
(smt.stats   37   4819 154975 359481  6494/6139/406    9517/1564    40  259   57.38)
(sat.ddfw       1      1   10.0269   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=15.919s mem=59544KiB load=1.04 rootload=1.03
(smt.stats   38   4941 158637 373332  6724/6218/406    9825/1614    41  261   57.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 248)
(smt.stats   39   5075 162386 385403  6759/6461/406   10115/1614    41  261   57.50)
ramon: poll                 wall=17.000s usage=17.095s mem=59960KiB load=1.18 rootload=1.18
(smt.stats   40   5222 168712 408043  6777/6467/406   10498/1614    41  261   57.59)
(sat.ddfw       1      1   9.66568   1540001      7549         17            1      156)
(smt.stats   41   5383 177385 442176  6852/6494/406   10908/1615    41  261   57.59)
ramon: poll                 wall=18.000s usage=18.095s mem=59920KiB load=1.00 rootload=1.00
(smt.stats   42   5560 182831 463454  6913/6587/407   11358/1981    42  266   57.79)
ramon: poll                 wall=19.000s usage=19.093s mem=60124KiB load=1.00 rootload=1.00
(smt.stats   43   5754 191398 506576  7102/6629/407   11777/1985    42  266   57.79)
(sat.ddfw       1      1   9.12918   1720001      8431         18            1      174)
ramon: poll                 wall=20.005s usage=20.096s mem=60456KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:46:35 2024
ramon: root.execname        z3
ramon: root.utime           20.090s
ramon: root.stime           0.010s
ramon: group.total          20.106s
ramon: group.utime          20.094s
ramon: group.stime          0.012s
ramon: group.mempeak        60716KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
