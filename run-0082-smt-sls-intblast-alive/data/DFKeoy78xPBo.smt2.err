ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:58:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28946 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DFKeoy78xPBo.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             697543
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   73.5294     10000        49          0            1        2)
(smt.stats    0    101   2917   3254  1152/1039/101      92/14     7   15   51.95)
(sat.ddfw       1      1   35.7179     20001        98          1            1        3)
(smt.stats    1    202   3369   4103  2083/1866/103     196/24     8   18   52.24)
(sat.ddfw       1      1   38.6847     40001       196          2            1        5)
(smt.stats    2    313   4405   5250  2188/1908/103     328/32     9   19   52.33)
(smt.stats    3    414   5588   6618  2321/2107/114     419/68    12   24   52.45)
(sat.ddfw       1      1    34.642     70001       343          3            1        8)
(smt.stats    4    525   7894   7998  2450/2186/114     537/71    12   24   52.45)
(smt.stats    5    647  10769   9846  2463/2241/116     657/83    13   26   52.55)
ramon: poll                 wall=1.000s usage=0.782s mem=54708KiB load=0.78 rootload=0.77
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  11992  11728  2469/2247/120     750/91    15   31   52.55)
(smt.stats    7    859  13390  13758  2566/2266/121     849/98    15   31   52.68)
(smt.stats    8    981  15494  15708  2571/2347/122     975/97    17   32   52.68)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 0 := 631&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 35184372089463 := 1 << 1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 0 := 631&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 35184372089463 := 1 << 1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 70368744177665 := 1 << 1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 35184372088833 := 1 << 1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 0 := 2&0
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 0 := 1 << 1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 0 := 2&0
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 1 := 1 << 1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 0 := 2&0
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 1 := 1 << 1
(smt.stats    9   1115  16246  18323  2612/2359/122    1107/99    17   32   52.78)
(sat.ddfw       1      1   31.1042    110001       539          4            1       12)
(smt.stats   10   1216  17208  20382  2619/2389/134    1197/109    19   44   52.88)
(smt.stats   11   1327  19326  23212  2631/2399/134    1306/109    19   44   52.88)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  21614  25431  2638/2405/134    1427/109    19   44   52.88)
(smt.stats   13   1584  23949  28642  2740/2498/141    1560/134    21   52   52.98)
(smt.stats   14   1731  27260  32208  2749/2517/141    1706/134    21   52   53.11)
(sat.ddfw       1      1   27.6696    160000       784          5            1       17)
(smt.stats   15   1832  29088  34731  2760/2521/141    1806/134    21   52   53.11)
ramon: poll                 wall=2.000s usage=1.782s mem=55272KiB load=1.00 rootload=1.00
(smt.stats   16   1943  29977  35992  2844/2566/142    1916/136    22   54   53.21)
(smt.stats   17   2065  31235  37874  2947/2643/142    2041/139    22   54   53.21)
(sat.ddfw       1      1   24.6107    220001      1078          6            1       23)
(smt.stats   18   2199  32404  40189  3122/2730/142    2183/139    22   54   53.30)
ramon: poll                 wall=3.000s usage=2.783s mem=55636KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   22.0542    290001      1421          7            1       30)
(smt.stats   19   2346  33827  42512  3233/2917/142    2366/139    22   54   53.40)
(smt.stats   20   2507  35079  45361  3268/3025/144    2509/158    23   60   53.40)
(smt.stats   21   2608  36175  46954  3333/3046/144    2613/163    23   60   53.40)
(smt.stats   22   2719  37425  50404  3432/3122/144    2735/164    23   60   53.40)
ramon: poll                 wall=4.000s usage=3.783s mem=55564KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.9402    370001      1813          8            1       38)
(smt.stats   23   2841  38634  55757  3474/3204/144    2861/166    23   60   53.50)
(smt.stats   24   2975  40260  58928  3549/3243/144    3018/170    23   60   53.50)
(smt.stats   25   3122  42141  61089  3647/3325/147    3154/208    24   78   53.63)
ramon: poll                 wall=5.000s usage=4.782s mem=55952KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.1598    460001      2254          9            1       47)
(smt.stats   26   3283  44979  64898  3745/3462/147    3329/212    24   78   53.94)
(smt.stats   27   3460  46662  69069  3807/3521/147    3525/213    24   78   53.84)
(smt.stats   28   3561  47907  71757  3824/3577/147    3646/213    24   78   53.94)
ramon: poll                 wall=6.000s usage=5.782s mem=56044KiB load=1.00 rootload=1.00
(smt.stats   29   3672  48672  73907  3890/3613/147    3763/213    24   78   53.94)
(sat.ddfw       1      1   16.6778    560001      2745         10            1       57)
(smt.stats   30   3794  49413  75946  3968/3675/147    3881/213    24   78   53.94)
(smt.stats   31   3928  50059  79892  4023/3747/147    4018/213    24   78   54.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4075  51285  83112  4097/3792/147    4178/216    24   78   54.03)
ramon: poll                 wall=7.000s usage=6.781s mem=56204KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.3889    670001      3284         11            1       68)
(smt.stats   33   4236  52996  89607  4259/3928/147    4352/217    24   78   54.13)
ramon: poll                 wall=8.000s usage=7.782s mem=56580KiB load=1.00 rootload=1.00
(smt.stats   34   4413  54369  93127  4497/4042/147    4542/224    24   78   54.23)
(sat.ddfw       1      1   14.2789    790001      3872         12            1       80)
(smt.stats   35   4607  55816  97684  4676/4309/147    4760/225    24   78   54.23)
ramon: poll                 wall=9.000s usage=8.779s mem=56696KiB load=1.00 rootload=1.00
(smt.stats   36   4708  56640 100716  4809/4473/147    4874/227    24   78   54.32)
(smt.stats   37   4819  57470 105274  5023/4654/147    5001/229    24   78   54.32)
(sat.ddfw       1      1   13.3238    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.779s mem=56824KiB load=1.00 rootload=1.00
(smt.stats   38   4941  58733 109691  5147/4810/147    5151/230    24   78   54.52)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075  60685 111897  5267/4959/148    5289/318    25   80   54.52)
(smt.stats   40   5222  62564 117747  5453/5099/148    5468/325    25   80   54.69)
ramon: poll                 wall=11.000s usage=10.778s mem=57112KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.4844   1060001      5196         14            1      108)
(smt.stats   41   5383  64371 124404  5503/5226/148    5646/325    25   80   54.96)
(smt.stats   42   5560  66547 127720  5531/5283/148    5834/326    25   80   54.96)
(smt.stats   43   5754  70245 137409  5571/5315/148    6045/326    25   80   55.05)
ramon: poll                 wall=12.000s usage=11.780s mem=57228KiB load=1.00 rootload=1.00
(smt.stats   44   5967  73137 145104  5594/5362/156    6288/386    26   93   55.05)
(smt.stats   45   6068  75005 147778  5623/5370/156    6386/389    26   93   55.05)
(smt.stats   46   6179  77738 153292  5635/5400/156    6502/389    26   93   55.05)
(smt.stats   47   6301  79736 159217  5673/5414/156    6624/392    26   93   55.15)
(smt.stats   48   6435  81633 163130  5708/5460/156    6760/392    26   93   55.15)
(sat.ddfw       1      1   11.7444   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.777s mem=57636KiB load=1.00 rootload=0.99
(smt.stats   49   6582  82958 167958  5731/5490/156    6908/392    26   93   55.15)
(smt.stats   50   6743  84735 176203  5789/5508/156    7090/393    26   93   55.15)
(smt.stats   51   6920  86696 183505  5807/5571/156    7264/393    26   93   55.25)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7114  88278 191893  5870/5580/156    7475/395    26   93   55.25)
ramon: poll                 wall=14.000s usage=13.777s mem=57812KiB load=1.00 rootload=1.00
(smt.stats   53   7327  89595 200658  6016/5642/156    7694/399    26   93   55.35)
(sat.ddfw       1      1    11.156   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=14.870s mem=57992KiB load=1.09 rootload=1.10
(smt.stats   54   7561  91819 209476  6221/5885/157    7951/457    27   95   55.54)
(smt.stats   55   7662  93029 213885  6362/6054/157    8054/458    27   95   55.71)
(sat.ddfw       1      1   10.8356   1540001      7549         17            1      156)
(smt.stats   56   7773  94057 216373  6422/6171/157    8173/460    27   95   55.80)
ramon: poll                 wall=16.000s usage=16.024s mem=58024KiB load=1.15 rootload=1.15
(smt.stats   57   7895  95866 221752  6509/6219/157    8318/464    27   95   55.80)
(smt.stats   58   8029  97020 226129  6558/6326/157    8546/464    27   95   55.80)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 914741982855 := 26167883790780&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 914741982854 := 26167883790780&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 914741982852 := 31162084617348&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 914741982848 := 31162084617344&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 1024 := 30247342635008&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2048 := 30247342635008&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4096 := 30247342635008&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2048 := 25253141810687&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2048 := 25253141810687&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2048 := 30247342636542&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2048 := 30247342636542&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2048 := 30247342636512&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4096 := 30247342638591&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2048 := 25253141810176&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2048 := 25253141810176&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2048 := 25253141811200&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4096 := 30247342632960&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4096 := 30247342624768&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4096 := 25253141812224&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4096 := 30247342638080&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4096 := 25253141813248&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4096 := 30247342309376&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 8192 := 25253142069248&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 16384 := 25253142069248&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 32768 := 25253142069248&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 65536 := 25253142069248&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 131072 := 25253142069248&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 524288 := 25253142593536&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 524288 := 25253142593536&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 524288 := 25253142593536&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 524288 := 25253143117824&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4194304 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2097152 := 30247342833664&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 524288 := 25253143117824&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 1048576 := 25253143117824&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 1048576 := 30247342833664&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 4194304 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 33554432 := 30247374290944&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 67108864 := 30247374290944&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 134217728 := 30247374290944&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 268435456 := 30247374290944&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 536870912 := 30247374290944&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 1073741824 := 30247374290944&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 2147483648 := 30247374290944&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 134217728 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 134217728 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 134217728 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 134217728 := 30247349125120&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 134217728 := 30247349125120&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 134217728 := 30247357513728&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 167772160 := 30247357513728&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 167772160 := 30247367999488&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 167772160 := 30247365902336&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 167772160 := 30247365902336&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 167772160 := 30247357513728&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 167772160 := 30247357513728&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 167772160 := 30247359610880&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 33554432 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 33554432 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 37748736 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 130023424 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 33554432 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 37748736 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 37748736 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 121634816 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 33554432 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 37748736 := 30247344930816&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 100663296 := 30247344930816&914741982865
(smt.stats   59   8176 100230 236642  6790/6459/327    8794/525    28  102   56.50)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 570425344 := 30247357513728&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 570425344 := 30247349125120&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 578813952 := 30247349125120&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 578813952 := 30247349125120&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 645922816 := 30247351222272&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 578813952 := 30247349125120&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 578813952 := 25257133998080&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 645922816 := 30245738512384&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 645922816 := 30245738512384&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 645922816 := 30245805621248&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 645922816 := 30245755289600&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 578813952 := 30245738512384&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 578813952 := 30245738512384&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 578813952 := 30245738512384&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 578813952 := 30245738512384&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 578813952 := 30245738512384&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 109051904 := 25293171458048&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 109051904 := 25288876490752&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 1115684864 := 25288876490752&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 1115684864 := 25288876490752&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 42201088 := 25288876490752&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 41943040 := 25288876490752&914741982865
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 59944274543771648 := 17592186044744 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 41943040 := 25288876490752&914741982865
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 59944274543771648 := 17592186044744 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 42196992 := 25288876490752&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 42188800 := 25288876490752&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 42172416 := 25288876490752&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 41943040 := 25288876490752&914741982865
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 59944274543771648 := 17592186044744 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 42196992 := 25288876490752&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 42188800 := 25288876490752&914741982865
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 41943040 := 25288876490752&914741982865
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 59944274543771648 := 17592186044744 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 41943040 := 25288876490752&914741982865
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 15084200130510848 := 17592186044744 << 44
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #736 #737 #738 #739 #740) 0 (if #741 1 #874))) 41943040 := 25288876490752&914741982865
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 15084200130510848 := 17592186044744 << 44
(smt.stats   60   8337 103080 246552  7010/6638/408    9077/636    29  150   56.97)
ramon: poll                 wall=17.000s usage=17.023s mem=59304KiB load=1.00 rootload=0.99
(smt.stats   61   8514 106581 257600  7158/6910/424    9796/694    30  159   57.17)
(sat.ddfw       1      1   10.2488   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=18.023s mem=59816KiB load=1.00 rootload=1.00
(smt.stats   62   8708 112456 270133  7296/6928/424   10098/702    30  159   57.26)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8921 119063 285536  7401/7164/425   10527/1002    31  163   57.84)
ramon: poll                 wall=19.000s usage=19.023s mem=60196KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.72563   1910001      9362         19            1      193)
(smt.stats   64   9155 126550 302542  7458/7193/426   10862/1110    32  169   57.84)
ramon: poll                 wall=20.000s usage=20.023s mem=60452KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:59:17 2024
ramon: root.execname        z3
ramon: root.utime           20.070s
ramon: root.stime           0.010s
ramon: group.total          20.087s
ramon: group.utime          20.071s
ramon: group.stime          0.016s
ramon: group.mempeak        60708KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
