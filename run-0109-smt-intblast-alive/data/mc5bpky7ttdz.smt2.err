ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:52:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40736 MiB
ramon: sys.mem.avail        61708 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mc5bpky7ttdz.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3073078
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1 := 2 << 50
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1 := 2 << 50
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1 := 2 << 50
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1125899906842624&1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842624&1
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899906842626 := 1125899906842625 << 50
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1 := 16384 << 50
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1125899906842624&1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842624&1
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899906842626 := 1125899906842625 << 50
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1125899906842624&1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842624&1
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899906842626 := 1125899906842625 << 50
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842624&1
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899906842626 := 1125899906842625 << 50
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842624&1
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899906842626 := 1125899906842625 << 50
(smt.stats    0    101   1201    545  1294/1128/115      81/22    12   26   19.05)
(smt.stats    1    202   1563    773  1371/1225/130     180/23    13   29   19.43)
(smt.stats    2    313   2695   2513  1810/1510/130     295/23    14   29   19.53)
(smt.stats    3    414   3128   3156  2014/1700/131     395/24    15   33   19.72)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1125899906842624&1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842624&1
band: (band[51] (shl[51] (bv2int %1) (mod #104 51)) (if (or #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 #624 #625 ...) 0 (if #659 1 #661))) 1 := 1125899906842624&1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1125899906842624&1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 1 := 1125899906842624&1
(smt.stats    4    525   4274   4745  2195/2015/141     525/29    18   39   19.72)
(smt.stats    5    647   7106   6791  2256/2099/152     659/52    20   47   19.82)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   7789   7223  2291/2106/152     786/56    20   47   20.02)
ramon: poll                 wall=1.002s usage=0.944s mem=21160KiB load=0.94 rootload=0.93
(smt.stats    7    859   9423   9088  2495/2282/152     907/58    20   47   20.02)
(smt.stats    8    981  11291  12269  2524/2352/153    1056/75    21   48   20.02)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2162694&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251799815847942 := 1 << 17
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2162694&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251799815847942 := 1 << 17
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2162694&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251799815847942 := 1 << 17
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2162694&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251799815847942 := 1 << 45
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842626&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 3377699720527874 := 3 << 45
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 105553116266496&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 2162692 := 3 << 45
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 105553116266496&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 2162692 := 3 << 45
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 105553116266496&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 2162692 := 3 << 45
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 105553116266496&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 2162694 := 3 << 45
(smt.stats    9   1116  13728  14759  2606/2439/175    1216/112    24   60   20.12)
(smt.stats   10   1217  14858  15848  2659/2488/175    1297/112    24   60   20.22)
(smt.stats   11   1328  15983  18489  2709/2500/175    1405/117    24   60   20.31)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  17420  20804  2799/2600/175    1543/117    24   60   20.31)
(smt.stats   13   1584  20960  25494  2809/2640/175    1714/118    24   60   20.31)
(smt.stats   14   1731  22228  27481  2969/2693/176    1888/175    25   60   20.50)
ramon: poll                 wall=2.000s usage=1.941s mem=21660KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.002s usage=2.942s mem=21664KiB load=1.00 rootload=1.01
(smt.stats   15   1832  22636  28351  3309/2877/176    1996/175    25   60   20.50)
(smt.stats   16   1943  23208  30479  3458/3293/183    2281/184    26   75   20.60)
(smt.stats   17   2065  25352  35324  3488/3299/188    2413/184    26   75   20.70)
(smt.stats   18   2199  28470  51702  3542/3328/188    2562/382    27   88   20.70)
(smt.stats   19   2346  32973  76328  3550/3382/192    2712/404    28   88   20.70)
ramon: poll                 wall=4.000s usage=3.940s mem=21888KiB load=1.00 rootload=0.99
(smt.stats   20   2507  36648  89200  3575/3411/192    2890/404    28   88   20.70)
(smt.stats   21   2608  39161  92515  3587/3421/194    2990/418    29   91   20.70)
(smt.stats   22   2719  41035  97182  3594/3429/196    3105/420    31   93   20.70)
(smt.stats   23   2841  45942 106936  3610/3444/197    3229/423    32   95   20.87)
(smt.stats   24   2975  47755 110421  3654/3467/199    3382/430    33   96   20.87)
(smt.stats   25   3122  50380 112911  3720/3508/199    3546/431    33   96   20.87)
(smt.stats   26   3283  52548 119013  3989/3632/199    3734/436    33   96   20.96)
(smt.stats   27   3460  55817 125538  4068/3903/200    3975/482    34   96   20.96)
(smt.stats   28   3561  57086 130888  4089/3905/200    4109/482    34   96   20.96)
(smt.stats   29   3672  58341 134181  4106/3941/201    4234/513    35   98   20.96)
(smt.stats   30   3794  59127 136907  4110/3945/201    4357/513    35   98   21.06)
ramon: poll                 wall=5.000s usage=4.940s mem=22228KiB load=1.00 rootload=1.00
(smt.stats   31   3928  62401 144114  4122/3955/203    4506/526    36  103   21.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  64120 147785  4134/3965/203    4661/526    36  103   21.06)
(smt.stats   33   4236  67141 151130  4197/3980/203    4844/527    36  103   21.15)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842624&1
band: (band[51] (shl[51] (bv2int %1) (mod #104 51)) (if (or #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 #624 #625 ...) 0 (if #659 1 #661))) 1 := 1125899906842624&1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842624&1
band: (band[51] (shl[51] (bv2int %1) (mod #104 51)) (if (or #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 #624 #625 ...) 0 (if #659 1 #661))) 1 := 1125899906842624&1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1125899906842624&1
band: (band[51] (shl[51] (bv2int %1) (mod #104 51)) (if (or #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 #624 #625 ...) 0 (if #659 1 #661))) 1 := 1125899906842624&1
(smt.stats   34   4413  69498 153884  4229/4054/209    5023/549    37  104   21.35)
(smt.stats   35   4607  74058 164801  4239/4066/209    5236/549    37  104   21.25)
(smt.stats   36   4708  77854 179270  4241/4074/209    5337/549    37  104   21.25)
(smt.stats   37   4819  81450 194813  4241/4074/209    5448/549    37  104   21.25)
(smt.stats   38   4941  85870 211174  4241/4074/209    5576/549    37  104   21.25)
(smt.delete-inactive-clauses  :num-deleted-clauses 974)
(smt.stats   39   5075  87982 220335  4243/4074/209    4741/550    37  104   21.25)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1161084277243902&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1161084277243902 := 2621441 << 45
(smt.stats   40   5222  90052 225353  4314/4092/209    4929/555    37  104   21.42)
(smt.stats   41   5383  92275 235925  4387/4165/209    5095/555    37  104   21.42)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2251662374191140&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251662374191140 := 2251799813177375 << 49
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2251662374191140&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251662374191140 := 2251799813177375 << 49
(smt.stats   42   5560  94467 243949  4438/4249/210    5278/636    38  111   21.52)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2251662373191688&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251662373191688 := 2251799812177925 << 49
ramon: poll                 wall=6.000s usage=5.938s mem=22720KiB load=1.00 rootload=1.00
(smt.stats   43   5754  96126 248019  4628/4348/215    5507/650    39  112   21.52)
ramon: poll                 wall=7.000s usage=6.938s mem=22880KiB load=1.00 rootload=1.00
(smt.stats   44   5967  98523 260246  4900/4505/215    5795/654    39  112   21.61)
(smt.stats   45   6068 100191 271714  4942/4748/217    5903/689    40  112   21.61)
(smt.stats   46   6179 102357 294818  4947/4776/217    6009/690    41  120   21.61)
(smt.stats   47   6301 104003 301756  4955/4781/217    6146/690    41  120   21.71)
(smt.stats   48   6435 107127 307937  4983/4786/217    6302/691    41  120   21.71)
(smt.stats   49   6582 109603 313914  5000/4820/217    6479/693    41  120   21.71)
(smt.stats   50   6743 113586 320102  5055/4834/217    6687/693    41  120   21.81)
(smt.stats   51   6920 118150 323107  5105/4918/217    6866/694    41  120   22.00)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7114 119423 339334  5139/4964/217    7090/694    41  120   22.09)
(smt.stats   53   7327 122509 356317  5186/5005/217    7313/694    41  120   22.09)
ramon: poll                 wall=8.000s usage=7.938s mem=23336KiB load=1.00 rootload=1.00
(smt.stats   54   7561 125973 378256  5290/5024/217    7605/697    41  120   22.09)
(smt.stats   55   7662 128694 392822  5335/5128/217    7745/697    41  120   22.19)
(smt.stats   56   7773 130261 407423  5361/5190/217    7930/697    41  120   22.19)
(smt.stats   57   7895 132626 428544  5361/5190/217    8052/697    41  120   22.19)
(smt.stats   58   8029 134007 440298  5368/5195/217    8191/698    41  120   22.19)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2 := 35 << 46
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2 := 35 << 46
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2 := 7 << 46
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2 := 7 << 46
(smt.stats   59   8176 135704 447900  5509/5202/217    8367/699    41  120   22.28)
(smt.stats   60   8337 137299 457395  5615/5399/222    8573/938    42  121   22.28)
(smt.stats   61   8514 139804 473775  5693/5454/222    8785/951    43  121   22.28)
ramon: poll                 wall=9.000s usage=8.937s mem=23564KiB load=1.00 rootload=1.00
(smt.stats   62   8708 145202 492567  5750/5539/222    8997/953    43  121   22.28)
(smt.stats   63   8921 147834 513157  5863/5604/222    9230/953    43  121   22.38)
(smt.stats   64   9155 151011 530926  5868/5695/222    9475/953    43  121   22.38)
(smt.stats   65   9412 152951 558135  5892/5704/222    9754/953    43  121   22.38)
(smt.stats   66   9513 153736 566861  5976/5783/222    9886/953    43  121   22.47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   67   9624 155935 581429  5987/5784/224   10005/1031    44  123   22.47)
(smt.stats   68   9746 157202 591393  5992/5799/224   10147/1031    44  123   22.47)
(smt.stats   69   9880 159559 602209  6017/5812/224   10310/1032    44  123   22.57)
(smt.delete-inactive-clauses  :num-deleted-clauses 32)
(smt.stats   70  10027 160547 615186  6038/5834/224   10441/1034    44  123   22.57)
(smt.stats   71  10188 167185 631350  6060/5853/224   10606/1034    44  123   22.57)
(smt.stats   72  10365 170541 657726  6093/5875/224   10794/1036    44  123   22.57)
ramon: poll                 wall=10.000s usage=9.937s mem=23960KiB load=1.00 rootload=1.00
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2251662373142530&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251662373142530 := 3670017 << 43
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2251662373142530&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251662373142530 := 3670017 << 43
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2251662373142530&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251662373142530 := 3670017 << 43
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1829601305830486&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1829601305830486 := 3670017 << 44
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1829601305830486&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1829601305830486 := 3670017 << 44
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1829601305830485&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1829601305830485 := 3670017 << 44
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1829601305830485&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1829601305830485 := 3670016 << 43
(smt.stats   73  10559 172798 668090  6154/5909/225   11019/1104    45  125   22.76)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1126037347532817&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1126037347532817 := 3670017 << 9
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1126037347532816&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1126037347532816 := 3670017 << 9
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1126037347532816&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1126037347532816 := 3670017 << 9
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1879048704&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 3670012 := 3670017 << 9
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1879048704&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 3670010 := 3670017 << 9
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1879048704&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 3670010 := 3670017 << 9
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081817903078&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081817903078 := 3670016 << 10
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1829601305830486&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1829601305830486 := 3670016 << 10
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2251662373142530&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251662373142530 := 3670016 << 10
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081817903078&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081817903078 := 3670016 << 13
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081818165242&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081818165242 := 3670016 << 12
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081818165242&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081818165242 := 3670016 << 11
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081817903078&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081817903078 := 3670016 << 11
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081818296314&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081818296314 := 3670016 << 11
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081818296314&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081818296314 := 3670016 << 14
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081817903078&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081817903078 := 3670016 << 14
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081817903078&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081817903078 := 3670016 << 14
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081817903078&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081817903078 := 3670016 << 15
(smt.stats   74  10772 175296 675337  6284/5978/235   11248/1112    45  125   22.95)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1162081817903078&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1162081817903078 := 3670016 << 21
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548124181340150&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548124181340150 := 3670016 << 21
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548124181340150&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548124181340150 := 3670016 << 21
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30064771072&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 30064771072 := 3670016 << 48
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 60129542146&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 60129542146 := 3670016 << 48
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 281474976710664&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 281474976710664 := 3670016 << 48
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 281474976710664&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 281474976710664 := 3670016 << 48
(smt.stats   75  11006 178149 698285  6382/6166/286   11481/1133    46  135   23.14)
(smt.stats   76  11263 186398 714565  6394/6180/288   11777/1144    47  141   23.14)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2111065546588160&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2111065546588160 := 2111065546588162 << 1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1126037349466108&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1126037349466108 := 2111065546588162 << 1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1126037349466108&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1126037349466108 := 2111065546588162 << 1
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2111065546588160&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2111065546588160 := 2111065546588162 << 47
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2111065546588160&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2111065546588160 := 2111065546588162 << 47
ramon: poll                 wall=11.002s usage=10.938s mem=24804KiB load=1.00 rootload=0.99
(smt.stats   77  11545 192302 731527  6535/6316/300   12256/1185    49  160   23.45)
(smt.stats   78  11646 196439 754061  6548/6328/300   12357/1185    49  160   23.45)
(smt.stats   79  11757 200523 775907  6560/6334/300   12482/1185    49  160   23.54)
(smt.stats   80  11879 205893 783386  6566/6344/300   12604/1186    49  160   23.54)
(smt.stats   81  12013 210691 800115  6578/6358/301   12763/1222    50  162   23.54)
(smt.stats   82  12160 215701 812567  6585/6365/302   12914/1222    50  162   23.54)
(smt.stats   83  12321 224697 854056  6590/6370/302   13075/1222    51  165   23.54)
(smt.stats   84  12498 232040 884943  6593/6373/302   13264/1222    51  165   23.99)
ramon: poll                 wall=12.000s usage=11.936s mem=25440KiB load=1.00 rootload=1.00
(smt.stats   85  12692 242824 906333  6594/6374/302   13464/1222    51  165   23.99)
(smt.stats   86  12905 252372 931328  6598/6378/303   13709/1235    52  168   24.09)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   87  13139 259110 952407  6618/6398/304   13968/1235    52  168   24.09)
(smt.stats   88  13396 270234 983134  6637/6400/305   14244/1254    54  179   24.19)
ramon: poll                 wall=13.002s usage=12.936s mem=25604KiB load=1.00 rootload=1.00
(smt.stats   89  13678 275025 998951  6784/6431/305   14538/1260    54  179   24.19)
(smt.stats   90  13988 284832 1022669  6884/6616/305   14868/1261    54  179   24.28)
(smt.stats   91  14089 290500 1042658  6901/6679/305   14974/1261    54  179   24.38)
ramon: poll                 wall=14.000s usage=13.934s mem=25820KiB load=1.00 rootload=1.00
(smt.stats   92  14200 292444 1047333  7036/6700/305   15127/1267    54  179   24.47)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   93  14322 295124 1053894  7136/6889/305   15249/1267    54  179   24.47)
ramon: poll                 wall=15.000s usage=14.933s mem=25960KiB load=1.00 rootload=0.99
(smt.stats   94  14456 297439 1061617  7193/6973/308   15330/1343    55  245   24.47)
(smt.stats   95  14603 301607 1095325  7198/6976/309   15484/1343    55  245   24.57)
(smt.stats   96  14764 304968 1102486  7246/6995/309   15654/1349    56  252   24.57)
ramon: poll                 wall=16.000s usage=15.933s mem=26036KiB load=1.00 rootload=1.00
(smt.stats   97  14941 311342 1117414  7344/7051/309   15871/1352    56  252   24.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15135 315881 1127221  7474/7167/309   16074/1356    56  252   24.66)
ramon: poll                 wall=17.000s usage=16.933s mem=26188KiB load=1.00 rootload=1.00
(smt.stats   99  15348 318782 1142995  7782/7330/309   16308/1363    56  252   24.76)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2119858418417664&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2119858418417664 := 5832704 << 38
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2251662373142530&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251662373142530 := 5898240 << 38
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 2251662373142530&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 2251662373142530 := 5898240 << 38
(smt.stats  100  15582 322888 1163663  7919/7605/309   16672/1371    56  252   24.85)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 37
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 16
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 15
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 12679884750862155783 := 5963776 << 15
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 12679884750862155783 := 5963776 << 13
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 4
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 3
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 5
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 6
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 7
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 8
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 12
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 17
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 17
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 20
ramon: poll                 wall=18.000s usage=17.932s mem=26284KiB load=1.00 rootload=1.00
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 19
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 18
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 35
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 36
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 34
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 33
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 32
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 31
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 30
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 41
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 9223372036855300103 := 5963776 << 42
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 524295&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 12679884750862155783 := 5963776 << 47
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 40
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 39
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 29
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 22
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 27
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 24
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 26
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 25
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 23
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1548112370499563&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1548112370499563 := 5963776 << 28
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 1407376226254869&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 1407376226254869 := 5963776 << 2
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 844428151390209&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 844428151390209 := 5963776 << 2
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 844428151390209&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 844428151390209 := 5963776 << 2
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 703824880730113&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 703824880730113 := 5963776 << 2
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066311167&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762107903 := 5963776 << 28
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066311167&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762107903 := 5963776 << 28
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066311167&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762107903 := 5963776 << 25
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066311167&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762107903 := 5963776 << 25
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066524157&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762320893 := 5963776 << 24
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066524157&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762320893 := 5963776 << 24
(smt.stats  101  15839 326415 1177504  8137/7716/316   16924/1486    57  262   25.26)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066425863&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762222599 := 5963776 << 23
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066425863&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762222599 := 5963776 << 23
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066524157&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762320893 := 5931008 << 22
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066524157&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762320893 := 5931008 << 22
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066524157&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762320893 := 5931008 << 18
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066524157&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762320893 := 5931008 << 18
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066524157&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762320893 := 5931008 << 19
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066524157&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762320893 := 5931008 << 19
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 30066524157&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762628762320893 := 5931008 << 20
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 3036676097&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762601732472833 := 5931008 << 20
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 3070230529&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 15762601766027265 := 5996544 << 20
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 0&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899909463556 := 5996544 << 49
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 0&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899909463556 := 5996544 << 49
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 0&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899905155110 := 5996544 << 49
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 0&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899905155110 := 5996544 << 49
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 0 := 5996544 << 41
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 0&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #369) 64)) 0 := 5996544 << 41
(smt.stats  102  16121 331806 1193143  8559/8215/471   17223/1493    57  262   25.45)
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 0&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899905155113 := 5996544 << 41
band: (band[51] (shl[64] (bv2int %1) (mod #370 64)) (if (or #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 ...) 0 (if #920 1 #946))) 0 := 0&0
shl: (shl[51] (bv2int %1) (mod (bv2int %0) 51)) 1125899905155113 := 5996544 << 41
ramon: poll                 wall=19.000s usage=18.932s mem=27804KiB load=1.00 rootload=1.00
(smt.stats  103  16431 340649 1220913  8644/8284/476   17704/1532    58  294   26.12)
(smt.stats  104  16771 346757 1243733  8684/8397/481   18098/1568    59  295   26.21)
(smt.stats  105  16872 348095 1257457  8700/8429/481   18195/1632    60  295   26.31)
(smt.stats  106  16983 350982 1270906  8727/8446/482   18356/1635    60  295   26.40)
ramon: poll                 wall=20.000s usage=19.931s mem=28140KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:52:59 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.991s
ramon: group.utime          19.959s
ramon: group.stime          0.032s
ramon: group.mempeak        28396KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              1.00
