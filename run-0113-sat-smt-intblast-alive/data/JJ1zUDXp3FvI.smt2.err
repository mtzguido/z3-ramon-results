ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:36:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40903 MiB
ramon: sys.mem.avail        61382 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JJ1zUDXp3FvI.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3789826
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   236/236     0/0  63       0    18.51   0.00)
(sat.stats    103    605    0   236/236   103/31  63       0    18.82   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    605    0   236/236   103/31  63       0    18.82   0.01)
(sat.stats    103    605    0   236/236   103/31  63       0    18.82   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 370818.82 :time 0.00)
(sat.stats    103    605    0   238/238    39/30  63       0    18.82   0.01)
(sat.stats    168   1731    1   238/238   104/84  63       0    18.92   0.02)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    171   1789    2   238/238   107/84  63       0    18.92   0.02)
(sat.stats    174   1856    3   238/238   110/84  63       0    18.92   0.02)
(sat.stats    177   1926    4   238/238   113/84  63       0    18.92   0.03)
(sat.stats    180   1986    5   238/238   116/84  63       0    18.92   0.03)
(sat.stats    183   2047    6   238/238   119/84  63       0    18.92   0.03)
(sat.stats    186   2137    7   238/238   122/84  63       0    18.92   0.03)
(sat.stats    189   2221    8   238/238   125/84  63       0    18.92   0.03)
(sat.stats    192   2266    9   238/238   128/87  63       0    18.92   0.03)
(sat.stats    195   2302   10   238/238   131/90  63       0    18.92   0.03)
(sat.stats    198   2360   11   238/238   134/93  63       0    18.92   0.03)
(sat.stats    201   2448   12   238/238   137/96  63       0    18.92   0.03)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    210   2669   15   238/238   146/104  63       0    18.92   0.03)
(sat.stats    315   5247   24   238/238   251/171  63       0    19.01   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2480 :time 0.00)
(sat.stats    653  11333   53  1334/1334   594/251  69       0    20.01   0.29)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5397 :time 0.00)
lshr: (lshr[52] (bv2int %1) (+ 52 (* 4503599627370495 #58))) 4503599627370330 := 0 >>l 43
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 327 := 511&512
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 328 := 511&512
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 4 := 511&512
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
lshr: (lshr[64] (* 2048 (bv2int %1)) (mod (+ 63 #580 #584) 64)) 0 := 9205357638363734016 >>l 54
(sat.stats    711  13007   70  1643/1641   652/260 102       0    20.20   0.32)
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 6567 :time 0.00)
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 496 := 511&512
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 480 := 511&512
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 450 := 511&512
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 448 := 511&512
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 256 := 511&512
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 128 := 511&512
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
band: (band[52] (if (= #297 63) 9223372036854775808 (if #442 4611686018427387904 #439)) (lshr[64] (* 2048 #62) (mod #587 64))) 23 := 512&511
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
band: (band[52] (if (= #297 63) 9223372036854775808 (if #442 4611686018427387904 #439)) (lshr[64] (* 2048 #62) (mod #587 64))) 356 := 512&511
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
band: (band[52] (if (= #297 63) 9223372036854775808 (if #442 4611686018427387904 #439)) (lshr[64] (* 2048 #62) (mod #587 64))) 434 := 512&511
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
band: (band[52] (if (= #297 63) 9223372036854775808 (if #442 4611686018427387904 #439)) (lshr[64] (* 2048 #62) (mod #587 64))) 112 := 512&511
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
band: (band[52] (if (= #297 63) 9223372036854775808 (if #442 4611686018427387904 #439)) (lshr[64] (* 2048 #62) (mod #587 64))) 8 := 512&511
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
band: (band[52] (if (= #297 63) 9223372036854775808 (if #442 4611686018427387904 #439)) (lshr[64] (* 2048 #62) (mod #587 64))) 192 := 512&511
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
band: (band[52] (if (= #297 63) 9223372036854775808 (if #442 4611686018427387904 #439)) (lshr[64] (* 2048 #62) (mod #587 64))) 32 := 512&511
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
band: (band[52] (if (= #297 63) 9223372036854775808 (if #442 4611686018427387904 #439)) (lshr[64] (* 2048 #62) (mod #587 64))) 256 := 512&511
band: (band[52] (lshr[52] (bv2int %1) (+ 52 #465)) (if (= #84 51) 2251799813685248 (if #469 1125899906842624 #569))) 0 := 511&512
band: (band[52] (if (= #297 63) 9223372036854775808 (if #442 4611686018427387904 #439)) (lshr[64] (* 2048 #62) (mod #587 64))) 128 := 512&511
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 8186 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11285 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 11855 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 12444 :time 0.00)
(sat.stats   1200  43752  100  4432/4430  1240/392 218       0    21.70   0.69)
 (sat-cleaner :elim-literals 4 :elim-clauses 2 :cost 13387 :time 0.00)
(sat.stats   1600  67462  193  4727/4725  1643/593 220       0    21.93   0.90)
ramon: poll                 wall=1.000s usage=0.922s mem=23072KiB load=0.92 rootload=0.92
ramon: poll                 wall=2.000s usage=1.914s mem=25236KiB load=0.99 rootload=0.99
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 30138 :time 0.00)
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats     :decisions    :clauses/bin         :units         :memory       )
(sat.stats   3287 124862  257 13236/13234  3592/874 228       0    24.81   2.20)
 (sat-cleaner :elim-literals 0 :elim-clauses 3 :cost 30573 :time 0.00)
(sat.stats   3601 134886  293 13501/13499  3913/962 228       0    24.92   2.43)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 33951 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 35703 :time 0.00)
ramon: poll                 wall=3.000s usage=2.902s mem=26240KiB load=0.99 rootload=0.98
ramon: poll                 wall=4.000s usage=3.899s mem=27132KiB load=1.00 rootload=1.00
(sat.stats   7804 212233  391 24190/24188  6435/1517 231       0    26.09   4.29)
ramon: poll                 wall=5.000s usage=4.896s mem=28232KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.892s mem=29736KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.888s mem=32092KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.884s mem=33892KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.883s mem=35768KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.875s mem=37700KiB load=0.99 rootload=0.99
ramon: poll                 wall=11.000s usage=10.873s mem=39612KiB load=1.00 rootload=1.00
(sat.stats  16565 360628  434 61128/61126 11388/1582 231       0    44.24  11.60)
(sat.stats  16568 360846  435 61128/61126 11389/1582 231       0    44.24  11.61)
ramon: poll                 wall=12.000s usage=11.870s mem=42560KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.865s mem=42956KiB load=1.00 rootload=0.99
(sat.stats  18448 396871  486 73953/73951 12517/1599 231       0    45.01  13.88)
ramon: poll                 wall=14.000s usage=13.861s mem=43360KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.859s mem=43576KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.856s mem=44008KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.854s mem=44052KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.851s mem=44128KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.848s mem=44192KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.844s mem=44388KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:36:53 2024
ramon: root.execname        z3
ramon: root.utime           19.880s
ramon: root.stime           0.010s
ramon: group.total          19.900s
ramon: group.utime          19.880s
ramon: group.stime          0.020s
ramon: group.mempeak        46436KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.057s
ramon: loadavg              0.99
