ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:32:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40136 MiB
ramon: sys.mem.avail        61377 MiB
ramon: sys.nprocs           1323
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/m4JMDWWuTkff.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3955794
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   126/126     0/0  61       0    18.24   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 603 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 694 :time 0.00)
(sat.stats    281   2861    0   161/161   277/141  73       0    19.04   0.07)
(sat.stats    281   2861    0   166/166   277/141  73       0    19.04   0.07)
(sat.stats    281   2861    0   166/166   277/141  73       0    19.04   0.07)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :elim-bin 5 :time 0.00)
 (sat-probing :cost 610019.04 :time 0.00)
(sat.stats    281   2861    0   137/137   245/142  73       0    19.04   0.07)
(sat.stats    284   2883    1   137/137   248/142  73       0    19.04   0.07)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    297   2913    2   137/137   261/147  73       0    19.04   0.07)
(sat.stats    300   2947    3   137/137   264/150  73       0    19.04   0.07)
(sat.stats    303   2983    4   137/137   267/153  73       0    19.04   0.07)
(sat.stats    310   3060    5   137/137   274/155  73       0    19.04   0.07)
(sat.stats    313   3102    6   137/137   277/155  73       0    19.04   0.07)
(sat.stats    317   3150    7   137/137   282/157  73       0    19.04   0.07)
 (sat-cleaner :elim-literals 48 :elim-clauses 1 :cost 2620 :time 0.00)
(sat.stats :conflicts    :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    656   6446    8  1653/1653   625/213  78       0    19.62   0.52)
(sat.stats    659   6514    9  1653/1653   628/213  78       0    19.62   0.52)
(sat.stats    662   6585   10  1659/1659   631/213  78       0    19.62   0.52)
(sat.stats    666   6655   11  1677/1677   635/213  78       0    19.62   0.52)
(sat.stats    671   6821   12  1683/1683   640/213  78       0    19.62   0.53)
(sat.stats    674   6979   13  1683/1683   644/213  78       0    19.62   0.53)
(sat.stats    677   7087   14  1689/1689   648/214  78       0    19.62   0.53)
(sat.stats    812  12471   15  2395/2395   794/224  78       0    19.72   0.69)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 3885 :time 0.00)
(sat.stats    816  12575   16  2577/2577   797/226  79       0    19.72   0.69)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4697 :time 0.00)
lshr: (lshr[29] (bv2int %0) (+ 29 (* 536870911 #56))) 536870879 := 15 >>l 14
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 0&536379392
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 31 #363 #367) 32)) 60 := 60 >>l 16
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 1&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 1 := 536379392&1
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 2&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 2 := 536379392&2
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 2 := 4&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 2 := 6&536379392
 (sat-cleaner :elim-literals 31 :elim-clauses 2 :cost 5154 :time 0.00)
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 1 := 6&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 7&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 4 := 536379392&7
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 4 := 14&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 14&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 8 := 536379392&14
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 8 := 14&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 16&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 16 := 536379392&16
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5647 :time 0.00)
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 16 := 16&536379392
ramon: poll                 wall=1.000s usage=0.998s mem=21728KiB load=1.00 rootload=0.99
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats   1233  19426   60  4830/4827  1281/310 153       0    20.60   1.08)
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 1 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 32 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 192 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 128 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 256 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 31744 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 512 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 30720 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 12288 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 8192 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 16384 := 32767&536379392
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 31840 := 536379392&32767
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 64 := 536379392&32767
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 16000 := 536379392&32767
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 30976 := 536379392&32767
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 13312 := 536379392&32767
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 512 := 536379392&32767
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 12288 := 536379392&32767
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 2048 := 536379392&32767
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 16384 := 536379392&32767
band: (band[29] (lshr[29] (bv2int %0) (+ 29 #294)) (if (= #64 28) 144115184049324032 (if #298 72057592024662016 #352))) 0 := 32767&536379392
band: (band[29] (if (= #209 31) 1152921472394592256 (if #273 576460736197296128 #270)) (lshr[32] (* 4 #55) (mod #370 32))) 8192 := 536379392&32767
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 8859 :time 0.00)
(sat.stats   1599  33016  127 29180/29177  1715/437 307       0    24.80   1.52)
ramon: poll                 wall=2.000s usage=1.998s mem=29152KiB load=1.00 rootload=0.99
(sat.stats   2398  36722  274 56855/56852  2875/809 307       0    29.53   2.49)
ramon: poll                 wall=3.001s usage=2.998s mem=34016KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.003s usage=4.002s mem=42224KiB load=1.00 rootload=1.01
(sat.stats   3596  58910  461 114085/114082  5184/1925 307       0    41.69   4.02)
ramon: poll                 wall=5.000s usage=4.986s mem=55932KiB load=0.99 rootload=0.98
ramon: poll                 wall=6.000s usage=5.985s mem=63636KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.985s mem=69840KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.985s mem=74960KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.985s mem=96196KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.985s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.985s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.985s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.985s mem=110MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.984s mem=113MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.984s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.984s mem=119MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.984s mem=121MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.984s mem=124MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.984s mem=128MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.983s mem=130MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:32:46 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.002s
ramon: group.utime          19.942s
ramon: group.stime          0.060s
ramon: group.mempeak        130MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.018s
ramon: loadavg              1.00
