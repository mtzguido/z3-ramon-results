ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:13:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28561 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/K3TBaJPnBJ6f.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             750275
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   67.1141     10000        49          0            1        2)
(sat.ddfw       1      1    32.683     20001        98          1            1        3)
(sat.ddfw       1      1   33.0033     40001       196          2            1        5)
(smt.stats    0    101   4354    307  1326/1185/110      96/15     5   18   52.38)
ramon: poll                 wall=1.000s usage=0.793s mem=54532KiB load=0.79 rootload=0.79
(sat.ddfw       1      1   30.8008     70001       343          3            1        8)
(smt.stats    1    202   5312   1509  2729/2402/112     207/23     7   20   52.48)
(smt.stats    2    313   8937   4043  2789/2541/116     316/28    11   24   52.58)
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&2305843009213693947
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&2305843008676823039
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213693953 := 9223372036854775804 >>l 35
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 1 := 68719476736 >>l 35
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 1 := 68719476736 >>l 35
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 0 := 17179869183 >>l 33
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 1 := 4 >>l 35
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 0 := 8589934592 >>l 33
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 1 := 34359738368 >>l 35
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 0 := 8589934592 >>l 33
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 1 := 34359738368 >>l 35
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 0 := 8589934592 >>l 33
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&0
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213693952 := 0 >>l 35
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 1 := 0 >>l 35
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 8589934593 := 8589934592 >>l 33
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&29
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 28 := 331444361935978496&29
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&33
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 32 := 331444361935978496&33
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&32
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 32 := 331444361935978496&32
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&64
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 64 := 331444361935978496&64
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&128
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 128 := 331444361935978496&128
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&256
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 256 := 331444361935978496&256
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&512
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 512 := 331444361935978496&512
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&1024
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 1024 := 331444361935978496&1024
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&2048
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 2048 := 331444361935978496&2048
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&2048
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 2048 := 331444361935978496&2048
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&4096
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 4096 := 331444361935978496&4096
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 331444361935978496&8192
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 8192 := 331444361935978496&8192
(smt.stats    3    414  12636   6844  2969/2598/136     430/31    13   28   53.18)
(smt.stats    4    525  14725   9853  3079/2809/189     570/80    15   45   53.18)
(smt.stats    5    647  19649  13592  3117/2852/189     679/80    15   45   53.32)
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213693953 := 34359738368 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213693953 := 34359738368 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213693953 := 34359738368 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213693953 := 34359738368 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213693953 := 2040682150286684 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 249908312266360896 := 249908312266360896&2305843009213693949
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 9223372036854775805 := 9223372036854775804 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 0 := 72057594037927936 >>l 56
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 0 := 72057594037927936 >>l 56
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 0 := 72057594037927936 >>l 56
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 0 := 72057594037927936 >>l 56
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 249908312266360896&1
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 0 := 72057594037927936 >>l 56
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 4 := 249908312266360896&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 4 := 249908312266360896&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 3 := 249908312266360896&3
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 2 := 249908312266360896&2
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 2 := 249908312266360896&2
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 1 := 249908312266360896&1
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 4 := 249908312266360896&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 8 := 249908312266360896&8
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 16 := 249908312266360896&16
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 8 := 249908312266360896&31
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 16 := 249908312266360896&31
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 8 := 249908312266360896&31
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  21224  16905  3201/2906/218     780/97    16   51   53.51)
(sat.ddfw       1      1    27.248    110001       539          4            1       12)
(smt.stats    7    859  22826  20528  3293/3005/249     919/99    17   61   53.51)
ramon: poll                 wall=2.000s usage=1.792s mem=55688KiB load=1.00 rootload=0.99
(smt.stats    8    981  26340  25813  3333/3052/254    1044/112    20   71   53.65)
(sat.ddfw       1      1   23.9803    160000       784          5            1       17)
(smt.stats    9   1115  30963  30446  3386/3070/255    1234/130    21   72   53.74)
(smt.stats   10   1216  32876  33534  3437/3124/255    1341/133    21   72   53.74)
(sat.ddfw       1      1   21.2168    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.791s mem=56016KiB load=1.00 rootload=1.00
(smt.stats   11   1327  34988  36005  3536/3200/256    1490/146    22   75   53.87)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  37144  39601  3697/3333/256    1695/150    22   75   53.97)
(smt.stats   13   1583  42478  47467  3713/3439/257    1927/231    23   76   54.08)
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 32 := 1791859334976860688&32
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 64 := 1791859334976860688&64
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 128 := 1791859334976860688&128
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 256 := 1791859334976860688&256
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 512 := 1791859334976860688&512
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213694464 := 8358680908399640572 >>l 60
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 32 := 1791859334976860688&32
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 64 := 1791859334976860688&64
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 128 := 1791859334976860688&128
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 128 := 1791859334976860688&128
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 512 := 1791859334976860688&512
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213694464 := 8070450532247928832 >>l 60
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 512 := 1791859334976860688&512
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213694464 := 8070450532247928832 >>l 60
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 512 := 1791859334976860688&512
lshr: (lshr[64] (* 4 (bv2int %1)) (mod (+ 63 #807 #811) 64)) 2305843009213694464 := 8358680908399640572 >>l 60
(sat.ddfw       1      1   18.9908    290001      1421          7            1       30)
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&6
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 27 := 1945555039024054272 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&2
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 11 := 792633534417207296 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&2
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 11 := 792633534417207296 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&2
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 11 := 792633534417207296 >>l 58
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&7
lshr: (lshr[61] (bv2int %1) (+ 61 (* 2305843009213693951 #122))) 28 := 2017612633061982208 >>l 58
(smt.stats   14   1730  45111  53727  3811/3496/284    2081/287    24   83   54.28)
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 4 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 4 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 4 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 4 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 4 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 2 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 2 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 2 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 2 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 1 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 1 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 1 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&4
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 1 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&4
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 2 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&4
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 2 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&4
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 1 := 1791859334976860688&4
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&6
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 2 := 1791859334976860688&6
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&7
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 2 := 1791859334976860688&7
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&6
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 4 := 1791859334976860688&6
band: (band[61] (if (= #675 63) 4724329152095178194263127811046768640 (if #677 2362164576047589097131563905523384320 #801)) (lshr[64] (* 4 #369) (mod #814 64))) 0 := 1791859334976860688&6
band: (band[61] (if (= #126 60) 590541144011897274282890976380846080 (if #541 295270572005948637141445488190423040 #659)) (lshr[61] (bv2int %1) (+ 61 #662))) 4 := 1791859334976860688&6
(smt.stats   15   1831  47166  58739  3842/3554/326    2195/305    25   93   54.37)
ramon: poll                 wall=4.000s usage=3.834s mem=56496KiB load=1.04 rootload=1.03
(smt.stats   16   1942  48526  61214  3985/3575/331    2309/313    26  104   54.37)
(smt.stats   17   2064  53943  68525  4040/3724/332    2465/336    28  104   54.60)
(smt.stats   18   2198  57817  75603  4117/3787/333    2609/336    28  104   54.70)
(sat.ddfw       1      1   16.6597    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=4.793s mem=56948KiB load=0.96 rootload=0.96
(smt.stats   19   2345  62620  88470  4195/3879/334    2772/336    29  104   54.88)
(smt.stats   20   2506  66546  96831  4288/3970/336    2929/349    31  109   54.88)
(smt.stats   21   2607  69273 103137  4322/4022/336    3039/349    31  109   54.99)
(smt.stats   22   2718  73390 110306  4335/4045/336    3157/349    31  109   54.99)
(smt.stats   23   2840  78163 120539  4346/4064/337    3297/362    32  112   55.09)
(smt.stats   24   2974  81637 131522  4350/4068/337    3451/362    32  112   55.28)
ramon: poll                 wall=6.000s usage=5.790s mem=57748KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.1745    460001      2254          9            1       47)
(smt.stats   25   3121  82203 135010  4357/4071/337    3596/363    32  112   55.28)
(smt.stats   26   3282  86542 147088  4405/4075/337    3776/364    32  112   55.41)
(smt.stats   27   3459  91213 161903  4422/4128/337    4057/364    32  112   55.51)
(smt.stats   28   3560  94495 170682  4429/4139/337    4191/366    32  112   55.70)
(smt.stats   29   3671  99688 180302  4442/4153/337    4304/366    32  112   55.70)
(smt.stats   30   3793 104267 190406  4450/4164/337    4432/366    32  112   55.80)
(smt.stats   31   3927 107480 197332  4469/4186/338    4574/483    33  115   55.80)
ramon: poll                 wall=7.000s usage=6.939s mem=57968KiB load=1.15 rootload=1.15
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 113037 212522  4488/4190/338    4742/486    33  115   55.80)
(sat.ddfw       1      1   13.8985    560001      2745         10            1       57)
(smt.stats   33   4235 118840 234616  4562/4205/338    4952/487    33  115   55.89)
(smt.stats   34   4412 123288 253823  4645/4283/338    5144/487    33  115   55.89)
ramon: poll                 wall=8.000s usage=7.939s mem=58632KiB load=1.00 rootload=1.00
(smt.stats   35   4606 127949 268752  4663/4365/338    5381/489    33  115   56.37)
(smt.stats   36   4707 130645 277609  4691/4380/338    5483/490    33  115   56.46)
(smt.stats   37   4818 134757 296656  4736/4415/338    5599/491    33  115   56.46)
(sat.ddfw       1      1   12.8041    670001      3284         11            1       68)
(smt.stats   38   4940 137683 310116  4785/4453/338    5789/491    33  115   56.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=9.000s usage=8.936s mem=59164KiB load=1.00 rootload=0.99
(smt.stats   39   5074 141112 321471  4819/4532/338    5923/492    33  115   56.82)
(smt.stats   40   5221 146026 338424  4877/4536/338    6087/493    33  115   56.92)
(smt.stats   41   5382 151571 357066  4912/4598/338    6303/493    33  115   57.02)
ramon: poll                 wall=10.000s usage=9.829s mem=59380KiB load=0.89 rootload=0.89
(smt.stats   42   5559 155092 372524  4984/4693/338    6564/493    33  115   57.02)
(sat.ddfw       1      1   11.6414    790001      3872         12            1       80)
(smt.stats   43   5753 159180 379777  5110/4702/338    6772/495    33  115   57.13)
(smt.stats   44   5966 163869 393827  5136/4845/338    6990/495    33  115   57.24)
ramon: poll                 wall=11.000s usage=10.741s mem=59620KiB load=0.91 rootload=0.92
(smt.stats   45   6067 166155 402963  5193/4853/338    7096/495    33  115   57.24)
(smt.stats   46   6178 169742 415522  5201/4918/339    7229/653    34  116   57.24)
(smt.stats   47   6300 172713 427681  5225/4923/339    7366/653    34  116   57.35)
(smt.stats   48   6434 176658 442960  5283/4946/339    7514/654    34  116   57.35)
ramon: poll                 wall=12.000s usage=11.741s mem=59900KiB load=1.00 rootload=1.00
(smt.stats   49   6581 184384 460059  5290/5007/339    7661/654    34  116   57.45)
(sat.ddfw       1      1   10.8814    920001      4509         13            1       93)
(smt.stats   50   6742 192494 488942  5295/5012/339    7823/654    34  116   57.45)
(smt.stats   51   6919 199181 513848  5299/5014/339    8026/654    34  116   57.57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 206389 538631  5355/5020/339    8256/655    34  116   58.38)
ramon: poll                 wall=13.000s usage=12.742s mem=61140KiB load=1.00 rootload=1.00
(smt.stats   53   7326 213462 563353  5390/5079/339    8560/655    34  116   58.94)
(smt.stats   54   7560 220113 587209  5484/5201/340    8825/713    35  127   58.94)
(sat.ddfw       1      1   10.2414   1060001      5196         14            1      108)
(smt.stats   55   7661 222678 594913  5548/5202/340    8940/715    35  127   59.07)
(smt.stats   56   7772 226209 611921  5558/5268/340    9056/715    35  127   59.07)
ramon: poll                 wall=14.000s usage=13.762s mem=61472KiB load=1.02 rootload=1.02
(smt.stats   57   7894 232844 637589  5565/5282/340    9171/715    35  127   59.16)
(smt.stats   58   8028 236853 653709  5588/5286/340    9313/717    35  127   59.16)
ramon: poll                 wall=15.000s usage=14.760s mem=61640KiB load=1.00 rootload=0.99
(smt.stats   59   8175 240296 676384  5761/5328/341    9464/729    36  148   59.37)
(smt.stats   60   8336 246223 705140  5812/5496/341    9655/729    36  148   59.47)
(sat.ddfw       1      1   9.66433   1210001      5931         15            1      123)
(smt.stats   61   8513 252443 729702  5889/5586/342   10067/750    37  151   59.66)
(smt.stats   62   8707 258239 753344  5924/5601/342   10278/750    37  151   59.66)
ramon: poll                 wall=16.000s usage=15.755s mem=62296KiB load=1.00 rootload=1.00
(smt.stats   63   8920 265140 784939  5989/5636/344   10558/789    38  153   59.80)
(smt.stats   64   9154 270312 808932  6049/5724/345   10804/819    39  154   59.91)
(smt.stats   65   9411 278550 858831  6069/5763/345   11052/819    39  154   59.91)
(smt.stats   66   9512 280522 872404  6071/5773/347   11156/826    40  170   60.03)
ramon: poll                 wall=17.005s usage=16.765s mem=62680KiB load=1.00 rootload=1.00
(smt.stats   67   9623 286223 895496  6075/5773/347   11275/826    40  170   60.03)
(smt.stats   68   9745 295022 927487  6076/5778/347   11394/844    41  178   60.03)
(sat.ddfw       1      1   9.14338   1370001      6715         16            1      139)
(smt.stats   69   9879 304863 982160  6076/5778/347   11534/844    41  178   60.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions     )
(smt.stats   70  10026 309342 1004095  6083/5780/347   11730/845    41  178   60.26)
ramon: poll                 wall=18.000s usage=17.774s mem=63192KiB load=1.01 rootload=1.02
(smt.stats   71  10187 314747 1029223  6124/5816/348   11891/860    42  178   60.88)
(smt.stats   72  10364 325914 1081877  6162/5826/348   12080/861    42  178   62.57)
ramon: poll                 wall=19.000s usage=18.772s mem=64980KiB load=1.00 rootload=1.00
(smt.stats   73  10558 336312 1120692  6181/5883/349   12319/883    43  185   62.67)
(smt.stats   74  10771 348606 1170886  6182/5884/349   12596/883    43  185   62.77)
(sat.ddfw       1      1     8.705   1540001      7549         17            1      156)
(smt.stats   75  11005 360165 1212815  6205/5888/349   12868/883    43  185   62.86)
ramon: poll                 wall=20.000s usage=19.805s mem=65492KiB load=1.03 rootload=1.03
ramon: end                  Fri Nov  1 22:14:11 2024
ramon: root.execname        z3
ramon: root.utime           19.850s
ramon: root.stime           0.010s
ramon: group.total          19.880s
ramon: group.utime          19.860s
ramon: group.stime          0.020s
ramon: group.mempeak        66520KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              0.99
