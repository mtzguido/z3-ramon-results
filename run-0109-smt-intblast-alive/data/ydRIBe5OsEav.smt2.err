ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:08:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40399 MiB
ramon: sys.mem.avail        61704 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ydRIBe5OsEav.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3119976
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 1 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 1 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 1 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 1 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 1 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 1 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 1 := 1&8388608
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 2 := 2&8388608
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 4 := 4&8388608
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 1 := 1&8388608
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 2 := 2&8388608
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 4 := 4&8388608
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 8 := 8&8388608
(smt.stats    0    101   5608    841  1286/1161/106      93/9     9   16   19.38)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 1 := 1&8388608
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 2 := 2&8388608
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 4 := 4&8388608
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 4 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 1 := 34 >>l 34
(smt.stats    1    202   7634   2279  2547/2120/108     186/31    11   18   19.48)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 56&2
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 144115188075855928 := 56 >>l 56
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 3&2
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 3&2
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 5&2
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 144115188075855877 := 56 >>l 56
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 5&2
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 144115188075855877 := 56 >>l 56
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 3&2
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4&2
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 144115188075855876 := 56 >>l 56
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4&2
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 144115188075855876 := 56 >>l 56
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 3&2
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 3&2
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4&2
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 144115188075855876 := 56 >>l 56
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 0&2
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 144115188075855871 := 56 >>l 56
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 0&2
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 144115188075855871 := 56 >>l 56
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 0&2
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 55 := 56 >>l 56
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 0&2
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 56 >>l 56
(smt.stats    2    313  10544   4220  2608/2357/126     296/36    14   24   19.67)
(smt.stats    3    414  13249   6486  2664/2406/126     400/37    14   24   19.78)
(smt.stats    4    525  14871   8738  2681/2421/132     492/45    16   33   19.95)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4194305&137438953472
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 4194305 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4194305&137438953472
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 4194305 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476738&137438953472
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 68719476738 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4194305&137438953472
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 4194305 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4194305&137438953472
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 4194305 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4194305&137438953472
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 4194305 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 4194305&137438953472
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 4194305 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 2 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 2 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 68719476735 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 68719476735 := 72057594037927952 >>l 20
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 2 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 4 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 8 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 16 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 32 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 68719476736 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 68719476672 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 2 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 4 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 8 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 32 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 128 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 256 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 512 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1024 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 2048 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 2 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 2 := 68719476736&137438953472
(smt.stats    5    647  17637  11089  2785/2511/203     617/50    18   48   20.25)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 4 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 4 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 4 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 4 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 4 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 32 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 32 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 32 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 64 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 64 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 64 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 64 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 128 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 128 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 128 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 256 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 512 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 512 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 256 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 4096 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 8192 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 16384 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 32768 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 65536 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 16384 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 32768 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 65536 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 131072 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 262144 := 68719476736&137438953472
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  18510  12358  2893/2559/245     749/71    19   58   20.67)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1638400 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1703936 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1703936 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1703936 := 68719476736&137438953472
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 68719476736&137438953472
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1617920 := 68719476736&137438953472
(smt.stats    7    859  19890  16953  3121/2719/286    1145/73    19   58   20.77)
(smt.stats    8    981  21040  20427  3401/3133/305    1759/309    22   76   20.88)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 12189697&9007199254740992
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 144115188088045569 := 72057594097696768 >>l 4
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 12189697&9007199254740992
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 144115188088045569 := 72057594097696768 >>l 4
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 12189697&9007199254740992
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #629) 64)) 144115188088045569 := 72057594097696768 >>l 4
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189698 := 12451841&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189698 := 12451841&9007199254740992
(smt.stats    9   1115  24350  29949  3440/3134/307    1903/313    22   76   21.23)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189698 := 12189699&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189701 := 12189702&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189700 := 12189700&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189701 := 12451846&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189701 := 12451846&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189701 := 12451846&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189701 := 12451846&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189700 := 12451844&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189712 := 12582696&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189728 := 12460320&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189728 := 12460320&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189760 := 12460352&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189824 := 12460416&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189952 := 12460544&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189824 := 12460292&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12189824 := 12460416&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12190720 := 12460292&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12191744 := 12460292&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12193792 := 12460292&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12197888 := 12460292&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12206080 := 12460292&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12222464 := 12460292&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12255232 := 12460292&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12197888 := 12460542&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12197888 := 12460292&9007199254740992
(smt.stats   10   1216  25996  32820  3648/3287/328    2118/485    23   81   21.60)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12190305 := 12452096&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12190305 := 12452096&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12190049 := 12452096&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12190049 := 12452096&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12190049 := 12452096&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12190049 := 12452096&9007199254740992
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12190049 := 12452096&9007199254740992
(smt.stats   11   1327  28133  37164  3812/3406/398    2369/561    24   99   21.70)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 12192353 := 12453889&9007199254740992
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  33009  49331  3913/3644/411    2984/668    26  103   21.89)
(smt.stats   13   1583  37343  57602  3939/3668/413    3449/777    28  124   21.99)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 1 := 1&2
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 1 := 1&2
(smt.stats   14   1730  40290  61910  4103/3672/413    3970/780    28  124   22.49)
band: (band[57] (lshr[64] (bv2int %0) (mod #630 64)) (if (= #640 63) 18446744073709551616 (if #642 9223372036854775808 #766))) 0 := 1&2
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #509 56) 72057594037927936 (if #511 36028797018963968 #621))) 1 := 1&2
(smt.stats   15   1831  44105  70056  4348/3976/413    4154/780    28  124   22.59)
ramon: poll                 wall=1.000s usage=0.920s mem=24196KiB load=0.92 rootload=0.89
(smt.stats   16   1943  46766  86410  4575/4222/443    4531/1449    30  154   22.81)
(smt.stats   17   2065  50377  97519  4681/4250/452    5359/1480    31  206   23.32)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2199  55460 112111  4871/4479/457    5956/1779    33  267   23.82)
ramon: poll                 wall=2.000s usage=1.918s mem=25436KiB load=1.00 rootload=1.00
(smt.stats   19   2346  61352 123605  5047/4526/457    6593/1831    34  272   23.91)
(smt.stats   20   2507  66248 140603  5157/4797/459    7294/2167    35  281   24.01)
(smt.stats   21   2608  72483 175173  5180/4818/459    7439/2255    36  282   24.12)
(smt.stats   22   2723  79014 212523  5200/4838/460    7797/2282    37  282   24.12)
(smt.stats   23   2845  84839 241748  5209/4847/461    8638/2393    38  285   24.21)
(smt.stats   24   2979  90116 260765  5224/4862/463    9849/2506    39  296   24.33)
ramon: poll                 wall=3.000s usage=2.918s mem=26044KiB load=1.00 rootload=1.00
(smt.stats   25   3126  99317 289861  5228/4866/467   10376/2672    40  307   24.45)
(smt.stats   26   3287 104624 305014  5326/4867/467   10678/2674    40  307   24.54)
(smt.stats   27   3464 109427 319139  5445/4981/467   11207/2716    41  318   24.64)
(smt.stats   28   3565 113896 334289  5454/5092/467   12024/2716    41  318   24.74)
(smt.stats   29   3676 119873 356912  5461/5098/471   12654/3200    42  335   24.83)
ramon: poll                 wall=4.000s usage=3.918s mem=26492KiB load=1.00 rootload=1.00
(smt.stats   30   3798 122620 370200  5541/5113/472   12820/3200    42  335   24.93)
(smt.stats   31   3932 125331 382458  5552/5184/472   13046/3229    43  340   25.04)
(smt.stats   32   4079 132023 413109  5565/5195/474   13842/3311    44  373   25.15)
(smt.stats   33   4240 142062 465968  5581/5211/474   14089/3311    44  373   25.24)
(smt.stats   34   4417 150251 525554  5656/5284/475   14695/3392    45  389   25.24)
ramon: poll                 wall=5.000s usage=4.918s mem=27004KiB load=1.00 rootload=1.00
(smt.stats   35   4611 153102 534964  5937/5292/475   15001/3396    45  389   25.34)
(smt.stats   36   4712 156504 552650  6009/5597/475   15311/3398    45  389   25.45)
(smt.stats   37   4823 157912 560899  6217/5649/475   15490/3398    45  389   25.56)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4945 160656 581832  6268/5893/476   16117/3499    46  392   25.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 78)
(smt.stats   39   5079 168030 609365  6270/5895/476   16467/3499    46  392   25.68)
ramon: poll                 wall=6.000s usage=5.917s mem=27276KiB load=1.00 rootload=0.99
(smt.stats   40   5226 175664 645022  6314/5920/478   16869/3624    47  397   25.68)
(smt.stats   41   5387 181379 666017  6446/6070/479   17583/3751    48  413   25.77)
(smt.stats   42   5564 187868 697652  6458/6083/479   18102/3751    48  413   25.89)
(smt.stats   43   5758 203238 795016  6466/6091/479   18556/3751    48  413   25.99)
(smt.stats   44   5971 211320 861246  6470/6095/481   18935/4001    49  448   26.01)
(smt.stats   45   6072 213222 875263  6474/6098/481   19179/4001    49  448   26.11)
ramon: poll                 wall=7.000s usage=6.917s mem=27596KiB load=1.00 rootload=1.00
(smt.stats   46   6183 215820 910982  6480/6104/481   19376/4001    49  448   26.11)
(smt.stats   47   6305 218673 960950  6484/6108/481   19521/4001    49  448   26.11)
(smt.stats   48   6443 221587 994985  6500/6125/493   19039/4131    50 1090   26.29)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions      )
(smt.stats   49   6590 225811 1011980  6545/6135/498   19735/4131    50 1090   26.42)
ramon: poll                 wall=8.000s usage=7.917s mem=28108KiB load=1.00 rootload=1.00
(smt.stats   50   6751 230725 1041133  6839/6208/498   20220/4133    50 1090   26.61)
(smt.stats   51   6928 243149 1106937  6848/6474/498   20551/4406    51 1185   26.61)
(smt.stats   52   7122 254305 1152349  6934/6479/498   21306/4408    51 1185   26.72)
(smt.stats   53   7335 268689 1249309  6953/6579/498   21734/4408    51 1185   26.72)
ramon: poll                 wall=9.000s usage=8.917s mem=28364KiB load=1.00 rootload=1.00
(smt.stats   54   7569 277070 1308828  6959/6585/498   22506/4408    51 1185   26.76)
(smt.stats   55   7670 282573 1331140  6996/6585/498   22699/4410    51 1185   26.88)
(smt.stats   56   7781 286094 1350064  7148/6652/498   23024/4411    51 1185   26.88)
ramon: poll                 wall=10.000s usage=9.917s mem=28620KiB load=1.00 rootload=1.00
(smt.stats   57   7903 289460 1378013  7371/6813/499   23624/4807    52 1187   26.98)
(smt.stats   58   8037 293516 1386644  7385/7011/499   24046/4807    52 1187   27.09)
(smt.stats   59   8184 302180 1434359  7411/7016/499   24596/4809    52 1187   27.09)
(smt.stats   60   8345 315221 1520024  7416/7042/499   25119/4809    52 1187   27.19)
ramon: poll                 wall=11.000s usage=10.916s mem=28876KiB load=1.00 rootload=1.00
(smt.stats   61   8522 321409 1548920  7462/7047/499   26000/4809    52 1187   27.38)
(smt.stats   62   8716 333826 1642444  7472/7091/499   27015/4809    52 1187   27.38)
(smt.stats   63   8929 341210 1690208  7672/7102/499   28030/4817    52 1187   27.69)
ramon: poll                 wall=12.000s usage=11.916s mem=29388KiB load=1.00 rootload=1.00
(smt.stats   64   9163 351750 1729826  7682/7308/499   28411/4817    52 1187   27.84)
(smt.stats   65   9420 366743 1820461  7688/7314/499   29623/4817    52 1187   27.93)
(smt.stats   66   9521 370066 1832525  7690/7316/500   30088/5631    53 1210   27.93)
(smt.stats   67   9632 373071 1844197  7749/7319/500   30327/5631    53 1210   28.08)
ramon: poll                 wall=13.004s usage=12.924s mem=29940KiB load=1.00 rootload=1.01
(smt.stats   68   9754 378165 1897597  7754/7380/500   30450/5631    53 1210   28.08)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions      )
(smt.stats   69   9888 384678 1962867  7755/7381/500   30587/5631    53 1210   28.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 22)
(smt.stats   70  10035 388073 1982367  7757/7383/500   31040/5631    53 1210   28.08)
(smt.stats   71  10196 394078 2023503  7783/7384/500   31389/5631    53 1210   28.08)
(smt.stats   72  10373 399137 2054290  7785/7411/500   31660/5631    53 1210   28.37)
(smt.stats   73  10567 405257 2091831  7794/7419/500   32507/5631    53 1210   28.47)
ramon: poll                 wall=14.000s usage=13.913s mem=30152KiB load=0.99 rootload=0.99
(smt.stats   74  10780 416906 2177632  7796/7421/500   32871/5631    53 1210   28.47)
(smt.stats   75  11014 421241 2188382  7973/7423/500   33241/5632    53 1210   28.60)
(smt.stats   76  11271 427868 2241636  8183/7662/500   33855/5632    53 1210   28.60)
ramon: poll                 wall=15.000s usage=14.913s mem=30312KiB load=1.00 rootload=1.00
(smt.stats   77  11553 439414 2333360  8193/7818/501   34613/6221    54 1213   28.77)
(smt.stats   78  11654 443643 2375535  8213/7819/501   34891/6224    54 1213   28.87)
(smt.stats   79  11765 447194 2402203  8399/7857/501   35220/6225    54 1213   28.87)
ramon: poll                 wall=16.000s usage=15.912s mem=30480KiB load=1.00 rootload=1.00
(smt.stats   80  11887 451036 2431191  8712/8076/501   35599/6229    54 1213   28.87)
(smt.stats   81  12021 455359 2456966  8724/8349/501   36587/6229    54 1213   29.01)
(smt.stats   82  12168 467173 2554052  8730/8355/502   36763/6524    55 1234   29.15)
(smt.stats   83  12329 477220 2626384  8754/8360/502   37213/6524    55 1234   29.15)
ramon: poll                 wall=17.000s usage=16.912s mem=30708KiB load=1.00 rootload=1.00
(smt.stats   84  12506 483072 2667970  8927/8412/502   37753/6525    55 1234   29.24)
(smt.stats   85  12700 489196 2706427  9234/8561/502   38140/6530    55 1234   29.34)
(smt.stats   86  12913 494720 2735229  9489/8892/502   39041/6536    55 1234   29.49)
ramon: poll                 wall=18.000s usage=17.911s mem=31120KiB load=1.00 rootload=1.00
(smt.stats   87  13147 503107 2794105  9624/9153/502   40423/6540    55 1234   29.65)
(smt.stats   88  13404 519146 2920393  9642/9266/503   41737/6920    56 1239   29.87)
ramon: poll                 wall=19.000s usage=18.911s mem=31428KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   89  13686 531711 3012150  9649/9273/503   42807/6920    56 1239   30.01)
(smt.stats   90  13996 541565 3100969  9667/9291/503   43894/6920    56 1239   30.14)
(smt.stats   91  14097 547687 3129196  9673/9297/503   44346/6920    56 1239   30.27)
(smt.stats   92  14208 553918 3172286  9681/9305/503   44696/6920    56 1239   30.27)
ramon: poll                 wall=20.000s usage=19.911s mem=31808KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:08:20 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.985s
ramon: group.utime          19.957s
ramon: group.stime          0.028s
ramon: group.mempeak        32064KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.00
