ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:00:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28288 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/GcUuuJrJuVWB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4150785
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.80)
(smt.stats    0    101   1294    985   583/520/106      91/10     6   23   18.67)
(smt.stats    1    202   2569   1655  1170/1042/107     223/25     8   25   18.86)
(smt.stats    2    313   3972   2740  1243/1094/108     385/31     9   26   19.05)
(smt.stats    3    414   5550   5124  1375/1269/114     609/100    11   36   19.05)
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 1 := 236&1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 236&1
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 236 := 222895 << 1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 235&1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 235&1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 234&1
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 234 := 222895 << 1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 235&1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 234&1
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 234 := 222895 << 1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 183646&1
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 131726 := 222895 << 1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 183646&1
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 131726 := 222895 << 1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 183646&1
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 131528 := 222895 << 1
(smt.stats    4    525   6718   7605  1432/1320/146     954/159    13   48   19.15)
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&7
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 3 << 3
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&32767
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 15 << 15
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&16383
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 14 << 14
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&8191
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 13 << 13
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&4095
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 12 << 12
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&2047
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 11 << 11
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&31
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 5 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&1023
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 10 << 10
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&511
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 9 << 9
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&63
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 6 << 6
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&255
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 8 << 8
(smt.stats    5    648   8019   9776  1539/1371/146    1206/160    13   48   19.53)
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&127
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 7 << 7
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&127
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 7 << 7
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&127
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 7 << 7
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&127
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 7 << 7
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&127
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 7 << 7
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&65535
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 16 << 16
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 0&131071
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 0 := 17 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 2 := 16&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 4 := 16&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 8 := 16&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 16 := 16&131071
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 16 := 17 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 4 := 16&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 8 := 16&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 16 := 16&131071
shl: (shl[32] (bv2int %0) (mod (+ #100 #201) 32)) 16 := 17 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 4 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 8 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 16 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 32 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 64 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 128 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 256 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 512 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 1024 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 2048 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 4096 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 8192 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 16384 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 32768 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 65536 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 32768 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 65536 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 65536 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 16384 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 8192 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 4096 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 32768 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 2 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 262143 := 17 << 17
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    749   9294  12496  1786/1627/299    1387/269    15   90   20.03)
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 131725 := 17 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 1 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 2 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 4 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 8 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 16 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 32 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 64 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 64 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 128 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 256 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 512 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 1024 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 2048 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 4096 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 8192 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 16384 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 32768 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 65536 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 256 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 512 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 1024 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 2048 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 4096 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 16384 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 16384 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 65536 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 65536 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 65536 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 65536 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 8192 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 8192 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 32768 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 128 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 64 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 32 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 16 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 8 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 1 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 4 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 2 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 131072&131071
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 2 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 1 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 8 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 8 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 20 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 16 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 16 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 64 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 128 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 256 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 512 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 1024 := 131072&131071
(smt.stats    7    860  10686  15698  2030/1786/463    1562/323    16  127   20.81)
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 256 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 256 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 256 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 256 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 64 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 64 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 128 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 128 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 1024 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 2048 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 2048 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 2048 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 1024 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 1024 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 2048 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 2048 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 512 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 512 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 32 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 32 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 4 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 4 := 131072&131071
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 4 := 131072&131071
(smt.stats    8    982  12311  20310  2049/1896/579    2042/385    18  202   21.29)
(smt.stats    9   1116  17412  26737  2139/1941/580    2246/470    19  209   21.48)
ramon: poll                 wall=1.000s usage=0.942s mem=23872KiB load=0.94 rootload=0.92
(smt.stats   10   1217  20901  32008  2266/2039/586    2476/492    20  211   22.15)
(smt.stats   11   1328  23153  38571  2416/2119/587    2660/537    21  222   22.34)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  26030  46061  2514/2350/589    3235/614    23  229   22.53)
(smt.stats   13   1584  30634  58805  2526/2362/593    3620/717    24  239   22.72)
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 1 := 74&1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 1 := 74&1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 74&1
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 1 := 74&1
band: (band[18] (shl[32] (bv2int %0) (mod #202 32)) (if (= #411 31) 0 (if #413 1 #485))) 0 := 74&1
band: (band[18] (shl[18] (bv2int %0) (mod #100 18)) (if (= #346 17) 1 (if #348 3 #392))) 1 := 74&1
(smt.stats   14   1731  35226  71254  2597/2404/595    4116/791    26  248   22.96)
ramon: poll                 wall=2.000s usage=1.940s mem=24792KiB load=1.00 rootload=1.00
(smt.stats   15   1832  37282  81706  2804/2567/595    4644/792    26  248   23.54)
(smt.stats   16   1943  39040  93604  2841/2611/602    5267/874    28  274   23.64)
(smt.stats   17   2065  43529 104207  2865/2633/607    5832/1076    29  339   23.74)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2199  47261 111367  3000/2639/607    6279/1084    29  339   24.03)
(smt.stats   19   2346  50708 119072  3209/2782/607    6755/1094    29  339   24.02)
(smt.stats   20   2507  53953 132794  3336/3106/613    7886/1253    30  342   24.21)
ramon: poll                 wall=3.000s usage=2.940s mem=25852KiB load=1.00 rootload=1.00
(smt.stats   21   2608  58283 149389  3354/3112/613    8347/1253    30  342   24.40)
(smt.stats   22   2719  63978 167636  3370/3130/613    8792/1456    31  358   24.50)
(smt.stats   23   2841  68247 180371  3431/3143/613    9254/1462    31  358   24.69)
ramon: poll                 wall=4.000s usage=3.940s mem=26400KiB load=1.00 rootload=1.00
(smt.stats   24   2975  72735 190752  3506/3276/614   10232/1703    32  362   24.88)
(smt.stats   25   3122  82330 205648  3516/3279/614   10546/1703    32  362   24.88)
(smt.stats   26   3283  87340 233096  3533/3301/615   11315/1906    33  365   24.97)
ramon: poll                 wall=5.000s usage=4.940s mem=26636KiB load=1.00 rootload=0.99
(smt.stats   27   3460  91239 248410  3624/3316/615   12111/1912    33  365   25.16)
(smt.stats   28   3561  93903 259780  3683/3425/620   12934/1983    34  369   25.26)
(smt.stats   29   3672  99781 282969  3707/3477/620   13826/1983    34  369   25.36)
(smt.stats   30   3794 103608 292074  3769/3477/620   14212/2119    35  413   25.36)
(smt.stats   31   3928 106629 302852  3893/3601/620   14543/2122    35  413   25.55)
ramon: poll                 wall=6.000s usage=5.939s mem=26944KiB load=1.00 rootload=1.00
(smt.stats   32   4075 110765 316815  3911/3669/622   15156/2125    35  413   25.67)
(smt.stats   33   4236 115998 341345  4002/3688/622   16012/2241    36  427   25.77)
ramon: poll                 wall=7.000s usage=6.939s mem=27420KiB load=1.00 rootload=1.00
(smt.stats   34   4413 121141 367367  4025/3793/623   16735/2386    37  440   25.96)
(smt.stats   35   4607 124990 402187  4036/3803/626   17561/2539    38  482   26.05)
(smt.stats   36   4708 126948 418554  4095/3847/626   18042/2539    38  482   26.05)
(smt.stats   37   4819 130237 433932  4130/3851/626   18431/2539    38  482   26.34)
ramon: poll                 wall=8.000s usage=7.939s mem=27816KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 133139 457667  4151/3900/627   18990/2655    39  483   26.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 2876)
(smt.stats   39   5075 136575 478567  4175/3925/629   16538/2658    39  483   26.43)
(smt.stats   40   5222 141776 495798  4214/3951/630   16790/2709    40  483   26.43)
ramon: poll                 wall=9.005s usage=8.943s mem=27888KiB load=1.00 rootload=1.01
(smt.stats   41   5383 149616 517152  4270/3984/631   17204/2709    40  483   26.53)
ramon: poll                 wall=10.000s usage=9.938s mem=28080KiB load=1.00 rootload=0.99
(smt.stats   42   5560 155607 535470  4368/4071/632   18329/2763    41  484   26.62)
(smt.stats   43   5754 163301 553633  4502/4245/633   18976/2909    42  485   26.62)
ramon: poll                 wall=11.000s usage=10.937s mem=28212KiB load=1.00 rootload=1.00
(smt.stats   44   5967 172257 584490  4613/4310/634   19742/2913    42  485   26.62)
(smt.stats   45   6068 175289 591458  4635/4380/634   20034/3008    43  488   26.72)
(smt.stats   46   6179 178674 611866  4707/4462/635   20507/3009    43  488   26.72)
(smt.stats   47   6301 182584 626266  4760/4467/635   20911/3014    43  488   26.81)
(smt.stats   48   6435 186384 643594  4903/4599/636   21671/3184    44  489   26.81)
ramon: poll                 wall=12.000s usage=11.937s mem=28404KiB load=1.00 rootload=1.00
(smt.stats   49   6582 190299 655806  4938/4668/636   22400/3186    44  489   27.07)
(smt.stats   50   6743 195971 692643  5057/4767/637   23222/3408    45  493   27.27)
ramon: poll                 wall=13.000s usage=12.936s mem=29036KiB load=1.00 rootload=1.00
(smt.stats   51   6920 200078 708182  5249/5004/639   24141/3552    46  495   27.46)
(smt.stats   52   7114 205926 731850  5348/5012/640   25115/3553    46  495   27.46)
ramon: poll                 wall=14.000s usage=13.935s mem=29108KiB load=1.00 rootload=1.00
(smt.stats   53   7327 212568 759620  5522/5126/640   26144/3553    46  495   27.65)
ramon: poll                 wall=15.005s usage=14.939s mem=29396KiB load=1.00 rootload=1.00
(smt.stats   54   7561 218547 785848  5565/5294/640   26542/3701    47  498   27.74)
(smt.stats   55   7662 221538 802988  5617/5329/640   26876/3702    47  498   27.84)
(smt.stats   56   7773 225036 817625  5678/5429/641   27316/3789    48  498   27.94)
ramon: poll                 wall=16.000s usage=15.934s mem=29556KiB load=1.00 rootload=1.00
(smt.stats   57   7895 228207 845364  5696/5438/641   28251/3790    48  498   28.03)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8029 231283 857367  5707/5455/642   29144/3790    48  498   28.13)
(smt.stats   59   8176 235627 867946  5772/5472/642   29628/3795    48  498   28.32)
ramon: poll                 wall=17.000s usage=16.934s mem=29940KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.934s mem=30132KiB load=1.00 rootload=1.00
(smt.stats   60   8337 240659 884044  5921/5554/642   30417/4125    49  507   28.41)
(smt.stats   61   8514 245566 897593  6011/5692/642   31300/4127    49  507   28.60)
ramon: poll                 wall=19.000s usage=18.934s mem=30380KiB load=1.00 rootload=1.00
(smt.stats   62   8708 251734 912759  6170/5824/642   32124/4131    49  507   28.79)
ramon: poll                 wall=20.000s usage=19.933s mem=30504KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:01:04 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.976s
ramon: group.stime          0.020s
ramon: group.mempeak        30760KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
