ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:32:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29539 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2U0FdirkwHzr.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             604390
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   58.4795     10000        49          0            1        2)
(smt.stats    0    101   3455    319  1091/967/101      94/19     5   18   51.97)
(sat.ddfw       1      1   31.8503     20001        98          1            1        3)
(smt.stats    1    202   5406   1361  1929/1739/107     183/26     8   26   52.07)
(smt.stats    2    313   7304   3202  2223/1970/110     289/32    10   29   52.17)
(sat.ddfw       1      1    36.036     40001       196          2            1        5)
(smt.stats    3    414  10977   5398  2240/2038/117     382/52    12   37   52.36)
(smt.stats    4    525  12532   6910  2291/2068/128     462/56    14   62   52.36)
(smt.stats    5    647  16207   8671  2344/2134/129     577/56    16   67   52.47)
(sat.ddfw       1      1    33.557     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.823s mem=54568KiB load=0.82 rootload=0.81
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  19229  10612  2419/2140/129     685/58    16   67   52.56)
(smt.stats    7    859  20714  12552  2439/2219/129     799/58    16   67   52.66)
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 1&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 1&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 34359738368 := 16911433607 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 34359738368 := 16911433607 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 1&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 2&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 2&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 4&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 8&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 17179869192 := 16911433607 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 15032384568&7
shl: (shl[34] (bv2int %0) (mod (bv2int %0) 34)) 16911433607 := 16911433607 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 15032384568&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 135291468856 := 16911433607 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 15032384568&7
shl: (shl[34] (bv2int %0) (mod (bv2int %0) 34)) 17179869183 := 16911433607 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 16911433606&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 16911433604&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 16911433601&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 16911433600&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 34091302784 := 16911433607 << 3
(smt.stats    8    981  22741  15221  2483/2274/170     901/82    19   93   52.77)
(sat.ddfw       1      1    30.888    110001       539          4            1       12)
(smt.stats    9   1115  26013  19181  2560/2297/170    1029/83    19   93   52.87)
(smt.stats   10   1216  28142  21872  2601/2357/170    1137/83    19   93   52.96)
(sat.ddfw       1      1   27.7618    160000       784          5            1       17)
(smt.stats   11   1327  29861  25447  2644/2392/170    1262/86    19   93   53.06)
ramon: poll                 wall=2.000s usage=1.817s mem=55344KiB load=0.99 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  32113  28496  2701/2491/171    1385/110    20   95   53.06)
(smt.stats   13   1583  32980  31176  2742/2493/171    1528/113    20   95   53.06)
(smt.stats   14   1730  37016  35231  2786/2572/174    1674/123    21  102   53.16)
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8589934591 := 17179869138&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8589934590 := 17179869138&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8589934584 := 17179869138&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8589934584 := 17179869144&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8 := 17179869144&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 16 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 64 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 96 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 32 := 17179869152&8589934591
(sat.ddfw       1      1     24.99    220001      1078          6            1       23)
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 32 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 32 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 224 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 608 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 32 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 32 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 96 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 224 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 160 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 96 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 224 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 480 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 32 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 96 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 224 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 480 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 992 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 992 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 992 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 992 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 6112 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 6112 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 6112 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 6112 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8160 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8176 := 17179869152&8589934591
(smt.stats   15   1831  39900  39342  2920/2694/314    1794/150    23  131   53.57)
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8176 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8160 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8160 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8160 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 18400 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 20448 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 18416 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 18400 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 12256 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 12272 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 12256 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 12256 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 12256 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 12256 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 12256 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 16352 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 16352 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 16352 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 139232 := 17179869152&8589934591
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 180192 := 17179869152&8589934591
(smt.stats   16   1942  42304  44252  3142/2930/365    2104/189    24  142   53.91)
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 4 := 17179869152&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 5 := 17179869156&7
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 4 := 17179869156&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 2305842992033824740 := 3 << 3
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 32 := 44&63
(smt.stats   17   2064  45168  49855  3171/2947/373    2708/201    25  150   54.20)
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 36 := 44&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 36 := 36&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 36 := 6 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 20 := 20&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 20 := 6 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 20 := 20&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 20 := 6 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
shl: (shl[34] (bv2int %0) (mod (bv2int %0) 34)) 386 := 6 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 1 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
shl: (shl[34] (bv2int %0) (mod (bv2int %0) 34)) 386 := 6 << 6
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 2 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 1 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 1 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 1 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 8 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 16 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 16 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 16 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 32 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 63 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 62 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 60 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 56 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 48 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 32 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 16 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 32 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 33 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 34 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 40 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 384&63
band: (band[34] (shl[34] (bv2int %0) (mod #100 34)) (if (= #553 33) 1 (if #555 3 #646))) 4 := 384&63
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 256&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 256 := 4 << 4
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 320&31
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 320 := 5 << 5
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 64&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 64 := 1 << 1
(smt.stats   18   2198  49469  53887  3357/3067/466    2960/240    26  163   54.81)
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 0 := 128&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 128 := 2 << 2
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 64 := 448&127
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 448 := 7 << 7
(smt.stats   19   2345  57731  61698  3598/3315/480    3366/360    28  197   55.22)
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 320 := 576&511
band: (band[34] (shl[64] (bv2int %0) (mod #281 64)) (if (= #665 63) 0 (if #667 1 #819))) 64 := 576&511
shl: (shl[64] (bv2int %0) (mod (+ #100 #280) 64)) 576 := 9 << 9
ramon: poll                 wall=3.000s usage=2.820s mem=57620KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   22.4719    290001      1421          7            1       30)
(smt.stats   20   2506  64541  72335  3703/3417/501    4134/566    30  231   55.80)
(sat.ddfw       1      1   20.0753    370001      1813          8            1       38)
ramon: poll                 wall=4.003s usage=3.788s mem=58176KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   18.3374    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.716s mem=58340KiB load=0.93 rootload=0.93
(smt.stats   21   2607  69230  79720  3855/3450/502    4307/573    30  231   55.99)
(sat.ddfw       1      1   16.9033    560001      2745         10            1       57)
ramon: poll                 wall=6.003s usage=5.715s mem=59032KiB load=1.00 rootload=1.00
(smt.stats   22   2718  72382  81595  4047/3588/502    4464/607    31  236   56.38)
ramon: poll                 wall=7.000s usage=6.678s mem=58824KiB load=0.97 rootload=0.96
(sat.ddfw       1      1   15.6339    670001      3284         11            1       68)
(smt.stats   23   2840  74740  85719  4251/3846/502    4687/609    31  236   56.47)
ramon: poll                 wall=8.000s usage=7.645s mem=58844KiB load=0.97 rootload=0.97
(sat.ddfw       1      1    14.556    790001      3872         12            1       80)
(smt.stats   24   2974  79837  95040  4371/4082/504    5176/663    32  236   56.57)
ramon: poll                 wall=9.000s usage=8.644s mem=58976KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.6069    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.644s mem=59136KiB load=1.00 rootload=1.00
(smt.stats   25   3121  85984 107248  4585/4095/507    5480/674    32  236   56.76)
(sat.ddfw       1      1   12.7667   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.646s mem=59404KiB load=1.00 rootload=1.00
(smt.stats   26   3282  89651 117104  4832/4336/507    5730/1351    33  250   56.85)
ramon: poll                 wall=12.000s usage=11.642s mem=59220KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   12.0212   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.642s mem=59308KiB load=1.00 rootload=1.00
(smt.stats   27   3459  94673 135590  5344/4659/507    6154/1351    33  250   57.13)
(smt.stats   28   3560  99107 146397  5415/5118/509    6688/1390    34  252   57.23)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   29   3671 105730 166425  5453/5151/509    7454/1416    35  252   57.33)
ramon: poll                 wall=14.000s usage=13.644s mem=59600KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   11.3515   1370001      6715         16            1      139)
(smt.stats   30   3793 110156 186763  5493/5192/510    7875/1580    36  255   57.43)
(smt.stats   31   3927 116315 208999  5602/5247/512    8719/1689    37  259   57.52)
ramon: poll                 wall=15.000s usage=14.594s mem=59836KiB load=0.95 rootload=0.94
(smt.stats   32   4074 122284 226183  5706/5330/513    8955/1765    38  261   57.62)
(sat.ddfw       1      1    10.806   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=15.657s mem=60016KiB load=1.06 rootload=1.07
(smt.stats   33   4235 127277 239896  5973/5440/513    9351/1774    38  261   57.71)
ramon: poll                 wall=17.000s usage=16.825s mem=60084KiB load=1.17 rootload=1.17
(sat.ddfw       1      1   10.2517   1720001      8431         18            1      174)
(smt.stats   34   4412 132662 254426  6240/5741/513    9769/1793    38  261   57.81)
ramon: poll                 wall=18.000s usage=17.820s mem=60260KiB load=0.99 rootload=0.99
(smt.stats   35   4606 140403 279534  6357/6059/513   10720/1793    38  261   58.17)
(smt.stats   36   4707 146694 297658  6443/6079/514   11492/2007    39  271   58.17)
ramon: poll                 wall=19.000s usage=18.818s mem=60476KiB load=1.00 rootload=1.00
(smt.stats   37   4818 152546 315649  6497/6165/515   11831/2011    39  271   58.37)
(sat.ddfw       1      1   9.74709   1910001      9362         19            1      193)
ramon: poll                 wall=20.003s usage=19.819s mem=60760KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:32:38 2024
ramon: root.execname        z3
ramon: root.utime           19.800s
ramon: root.stime           0.020s
ramon: group.total          19.825s
ramon: group.utime          19.801s
ramon: group.stime          0.024s
ramon: group.mempeak        61020KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              0.99
