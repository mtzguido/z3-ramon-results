ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:56:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28571 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/fVNnNYKwTQmU.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             495817
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   216/216     0/0  69       0    18.52   0.00)
(sat.stats    101    603    0   216/216   101/29  69       0    18.83   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 363 :time 0.00)
(sat.stats    101    603    0   216/216   101/29  69       0    18.83   0.00)
(sat.stats    101    603    0   216/216   101/29  69       0    18.83   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 352618.83 :time 0.00)
(sat.stats    101    603    0   218/218    46/28  69       0    18.83   0.01)
(sat.stats    104    615    1   218/218    49/31  69       0    18.83   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    645    2   218/218    52/34  69       0    18.83   0.01)
(sat.stats    110    692    3   218/218    55/37  69       0    18.83   0.01)
(sat.stats    113    752    4   218/218    58/40  69       0    18.83   0.01)
(sat.stats    116    811    5   218/218    61/41  69       0    18.83   0.01)
(sat.stats    119    874    6   218/218    64/41  69       0    18.83   0.01)
(sat.stats    122    940    7   218/218    67/41  69       0    18.83   0.01)
(sat.stats    125   1044    8   218/218    70/43  69       0    18.83   0.01)
(sat.stats    139   1583    9   218/218    84/56  69       0    18.93   0.01)
(sat.stats    143   1770   10   218/218    88/56  69       0    18.93   0.01)
(sat.stats    146   1882   11   218/218    91/57  69       0    18.93   0.01)
(sat.stats    149   2023   12   218/218    94/57  69       0    18.93   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    358   6337   31   222/222   303/179  69       0    19.51   0.04)
(sat.stats    361   6466   32   222/222   306/179  69       0    19.51   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2766 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5019 :time 0.00)
(sat.stats    536   9381   38   235/234   478/257  83       0    19.72   0.09)
lshr: (lshr[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 4374797484033 >>l 37
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 0&4037180136800
lshr: (lshr[64] (* 4194304 (bv2int %0)) (mod (+ 22 #55 #262) 64)) 4398042316800 := 4398042316800 >>l 59
 (sat-cleaner :elim-literals 13 :elim-clauses 41 :cost 6003 :time 0.00)
(sat.stats    709  17909   65  1053/1050   571/270  95       0    20.29   0.39)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6541 :time 0.00)
ramon: poll                 wall=1.000s usage=0.952s mem=21972KiB load=0.95 rootload=0.94
(sat.stats   1514  42108  124  5697/5694  1455/517  98       0    21.42   1.31)
(sat.stats   1599  44452  152  5697/5694  1548/548  98       0    21.52   1.35)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 12108 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 2 :cost 13837 :time 0.00)
ramon: poll                 wall=2.000s usage=1.952s mem=23300KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats   3201  88736  205  8816/8813  3267/712 100       0    22.20   2.72)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 23149 :time 0.00)
ramon: poll                 wall=3.000s usage=2.951s mem=23492KiB load=1.00 rootload=1.00
(sat.stats   3597  93457  253 14710/14707  3686/740 101       0    22.62   3.20)
lshr: (lshr[42] (bv2int %0) (mod (bv2int %1) 42)) 4260607557632 := 4260607557632 >>l 34
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 249 := 249&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 250 := 250&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 252 := 252&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 248 := 248&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 96 := 248&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 64 := 248&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 128 := 248&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 248&1511115516672
lshr: (lshr[64] (* 4194304 (bv2int %0)) (mod (+ 22 #55 #262) 64)) 325455441854302 := 17870283350560735232 >>l 56
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 249&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 58 := 249&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 249&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 41 := 249&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 249&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 4 := 249&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 249&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 48 := 249&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 249&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 8 := 249&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 249&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 32 := 249&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 249&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 192 := 249&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 249&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 128 := 249&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 254&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 6 := 254&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 0 := 254&1511115516672
band: (band[42] (lshr[64] (* 4194304 #65) (mod #263 64)) (if (= #566 63) 63174504709799177424233927016448 (if #568 31587252354899588712116963508224 #692))) 4 := 254&1511115516672
band: (band[42] (lshr[42] (bv2int %0) (mod #55 42)) (if (= #461 41) 7530987824177643945721856 (if #463 3765493912088821972860928 #543))) 16 := 254&1511115516672
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 31116 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 31891 :time 0.00)
ramon: poll                 wall=4.000s usage=3.951s mem=29008KiB load=1.00 rootload=1.00
(sat.stats   5393 117836  617 31963/31959  6237/2405 214       0    30.45   4.09)
ramon: poll                 wall=5.000s usage=4.951s mem=48556KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.951s mem=54664KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.949s mem=58148KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.949s mem=61324KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.949s mem=64032KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.949s mem=83044KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.949s mem=85332KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.948s mem=88520KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.948s mem=90220KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.948s mem=93012KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.947s mem=94624KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.002s usage=15.949s mem=96412KiB load=1.00 rootload=1.01
ramon: poll                 wall=17.000s usage=16.947s mem=98176KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.947s mem=99476KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.002s usage=18.947s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.944s mem=99MiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 20:56:29 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.040s
ramon: group.total          20.001s
ramon: group.utime          19.957s
ramon: group.stime          0.044s
ramon: group.mempeak        100MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.057s
ramon: loadavg              1.00
