ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:23:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41399 MiB
ramon: sys.mem.avail        61383 MiB
ramon: sys.nprocs           1323
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EF1liPbYYMai.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3751041
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   232/232     0/0  69       0    18.51   0.00)
(sat.stats    101    482    0   232/232   101/28  69       0    18.85   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 289 :time 0.00)
(sat.stats    101    482    0   232/232   101/28  69       0    18.85   0.01)
(sat.stats    101    482    0   232/232   101/28  69       0    18.85   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 362018.85 :time 0.00)
(sat.stats    101    482    0   234/234    37/27  69       0    18.85   0.01)
(sat.stats    104    504    1   234/234    40/30  69       0    18.85   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    163   1772    2   234/234    99/76  69       0    18.95   0.02)
(sat.stats    166   1832    3   234/234   102/76  69       0    18.95   0.02)
(sat.stats    169   1900    4   234/234   105/76  69       0    18.95   0.02)
(sat.stats    172   1954    5   234/234   108/78  69       0    18.95   0.02)
(sat.stats    175   2006    6   234/234   111/78  69       0    18.95   0.02)
(sat.stats    178   2086    7   234/234   114/78  69       0    18.95   0.02)
(sat.stats    181   2156    8   234/234   117/78  69       0    18.95   0.02)
(sat.stats    184   2218    9   234/234   120/78  69       0    18.95   0.02)
(sat.stats    187   2277   10   234/234   123/78  69       0    18.95   0.02)
(sat.stats    190   2354   11   234/234   126/78  69       0    18.95   0.02)
(sat.stats    193   2402   12   234/234   129/81  69       0    18.95   0.02)
(sat.stats    211   2832   18   234/234   147/99  69       0    18.95   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1584 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    316   4528   23   497/497   249/127  79       0    19.92   0.27)
ramon: poll                 wall=1.000s usage=0.911s mem=21716KiB load=0.91 rootload=0.90
ramon: poll                 wall=2.000s usage=1.909s mem=22484KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.907s mem=22872KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.905s mem=23268KiB load=1.00 rootload=1.00
(sat.stats   1200   8602   52  7538/7538  1138/132  79       0    21.94   3.96)
(sat.stats   1203   8621   53  8079/8079  1141/132  79       0    21.94   3.96)
(sat.stats   1206   8660   54  8079/8079  1144/132  79       0    21.94   3.96)
(sat.stats   1598  11707  139 12741/12741  1540/135  79       0    22.77   4.52)
ramon: poll                 wall=5.000s usage=4.905s mem=24700KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.905s mem=26480KiB load=1.00 rootload=1.00
(sat.stats   3021  22500  152 29733/29733  2988/161  79       0    25.78   6.09)
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 19275 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 20392 :time 0.00)
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units        :memory       )
(sat.stats   3871  44580  191 34774/34774  3853/375  83       0    27.98   6.80)
ramon: poll                 wall=7.000s usage=6.905s mem=28564KiB load=1.00 rootload=1.00
(sat.stats   5463  66432  378 36639/36639  4960/596  83       0    28.42   7.68)
ramon: poll                 wall=8.000s usage=7.904s mem=29056KiB load=1.00 rootload=1.00
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 0 := 0 >>l 19
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 0&1125841924784128
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #60 #294) 64)) 13252967803444527103 := 0 >>l 33
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 29459 :time 0.00)
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 30042 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 31321 :time 0.00)
ramon: poll                 wall=9.000s usage=8.904s mem=29628KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 32916 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 34194 :time 0.00)
ramon: poll                 wall=10.004s usage=9.908s mem=30008KiB load=1.00 rootload=0.99
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 1&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 1 := 1&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 27874 := 2147483607&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 66229 := 2147483607&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 2076 := 15386&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 2452 := 15383&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 8 := 15383&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 8 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 414 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 3160 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 4 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 7104 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 16 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 32 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 10624 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 8192 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 6912 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 3072 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 512 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 4096 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 15375&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 2048 := 15375&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 12287&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 48 := 12287&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 16 := 1020&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 1020&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 32 := 1020&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 1020&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 64 := 1020&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 1020&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 128 := 1020&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 1020&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 256 := 1020&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 1020&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 512 := 1020&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 17404&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 16384 := 17404&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 32768&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 32768 := 32768&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 32 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 7616 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 50048 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 9728 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 256 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 62464 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 12288 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 2048 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 8192 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 16384 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 32768 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 65536&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 65536 := 65536&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 327676&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 262144 := 327676&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 524291&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 524288 := 524291&1125841924784128
band: (band[50] (lshr[50] (bv2int %1) (mod #60 50)) (if (= #477 49) 633825300114099501099609227264 (if #479 316912650057049750549804613632 #575))) 0 := 1048577&1125841924784128
band: (band[50] (lshr[64] (* 16384 #55) (mod #295 64)) (if (= #598 63) 20769187434138812452031995158986752 (if #600 10384593717069406226015997579493376 #724))) 1048576 := 1048577&1125841924784128
ramon: poll                 wall=11.000s usage=10.904s mem=46008KiB load=1.00 rootload=0.98
ramon: poll                 wall=12.000s usage=11.904s mem=67568KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.903s mem=76788KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.903s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.903s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.903s mem=108MiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.902s mem=113MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.902s mem=118MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.902s mem=121MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.902s mem=125MiB load=1.00 rootload=0.99
ramon: end                  Wed Dec 25 15:23:54 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.080s
ramon: group.total          19.991s
ramon: group.utime          19.907s
ramon: group.stime          0.084s
ramon: group.mempeak        125MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.089s
ramon: loadavg              1.00
