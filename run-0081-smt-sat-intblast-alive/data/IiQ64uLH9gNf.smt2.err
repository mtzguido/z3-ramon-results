ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:09:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29443 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/IiQ64uLH9gNf.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             357446
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   238/238     0/0  58       0    18.54   0.00)
(sat.stats    103    605    0   238/238   103/31  58       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    605    0   238/238   103/31  58       0    18.83   0.01)
(sat.stats    103    605    0   238/238   103/31  58       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 373418.83 :time 0.00)
(sat.stats    103    605    0   240/240    39/30  58       0    18.83   0.01)
(sat.stats    168   1633    1   240/240   104/81  58       0    18.93   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    171   1676    2   240/240   107/81  58       0    19.02   0.01)
(sat.stats    174   1725    3   240/240   110/81  58       0    19.02   0.01)
(sat.stats    177   1774    4   240/240   113/81  58       0    19.02   0.01)
(sat.stats    180   1817    5   240/240   116/81  58       0    19.02   0.01)
(sat.stats    183   1858    6   240/240   119/81  58       0    19.02   0.01)
(sat.stats    186   1907    7   240/240   122/81  58       0    19.02   0.01)
(sat.stats    189   1954    8   240/240   125/81  58       0    19.02   0.01)
(sat.stats    192   2021    9   240/240   128/81  58       0    19.02   0.01)
(sat.stats    195   2118   10   240/240   131/81  58       0    19.02   0.01)
(sat.stats    198   2127   11   240/240   134/84  58       0    19.02   0.01)
(sat.stats    201   2139   12   240/240   137/87  58       0    19.02   0.01)
(sat.stats    210   2281   15   240/240   146/96  58       0    19.02   0.01)
lshr: (lshr[53] (bv2int %0) (mod (bv2int %0) 53)) 39 := 39 >>l 39
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    352   5549   21   263/263   288/178  58       0    19.61   0.06)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2313 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2730 :time 0.00)
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 16382 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 1&32768
lshr: (lshr[64] (bv2int %0) (mod (+ #65 #710) 64)) 0 := 549756552671 >>l 39
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 1 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 4 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 11264 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 744 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 928 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 16 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 576 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 640 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 768 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 512 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 10240 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 12288 := 16383&32768
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 8192 := 16383&32768
(sat.stats    511   8058   33  5768/5766   517/285  73       0    21.17   0.17)
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 1&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 1 := 32768&1
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 2&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 2 := 32768&2
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 4&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 4 := 32768&4
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 8&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 8 := 32768&8
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 7966&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 16 := 32768&7966
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 32&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 32 := 32768&32
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 13572&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 3456 := 32768&13572
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 13996&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 64 := 32768&13996
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 4608&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 4608 := 32768&4608
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 10922&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 256 := 32768&10922
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 9544&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 1024 := 32768&9544
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 9756&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 2048 := 32768&9756
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 11369&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 4096 := 32768&11369
band: (band[53] (lshr[53] (bv2int %0) (mod #65 53)) (if (= #462 52) 9007199254740992 (if #464 4503599627370496 #566))) 0 := 10733&32768
band: (band[53] (if (= #581 63) 36893488147419103232 (if #583 18446744073709551616 #707)) (lshr[64] (bv2int %0) (mod #711 64))) 8192 := 32768&10733
ramon: poll                 wall=1.000s usage=0.929s mem=36504KiB load=0.93 rootload=0.91
ramon: poll                 wall=2.000s usage=1.929s mem=53800KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.928s mem=58844KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.928s mem=63460KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.928s mem=66736KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.928s mem=86728KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.927s mem=89552KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.927s mem=93148KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.927s mem=95504KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.927s mem=98272KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.926s mem=97MiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.926s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.926s mem=101MiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.926s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.925s mem=104MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.925s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.925s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.924s mem=109MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.923s mem=111MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.923s mem=112MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:09:56 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.070s
ramon: group.total          20.004s
ramon: group.utime          19.924s
ramon: group.stime          0.080s
ramon: group.mempeak        113MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              1.00
