ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:29:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29570 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1MZhPcVZouxK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             593900
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   6191   1899  1266/1142/98     101/6     6   15   52.17)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   79.3651     10000        49          0            1        2)
(smt.stats    1    202   7417   2831  2348/2114/99     194/8     7   20   52.39)
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&1
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&1
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #865 #869) 64)) 1 := 108 << 2
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #865 #869) 64)) 1 := 108 << 2
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 7 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 6 := 7&110
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #865 #869) 64)) 110 := 108 << 2
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 6 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 4 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 4 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 4 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 4 := 7&434
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 4 := 7&440
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 4 := 7&436
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #865 #869) 64)) 436 := 108 << 2
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #103))) 55 := 54 << 3
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #103))) 440 := 54 << 3
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #103))) 440 := 54 << 3
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 7 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 6 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 4 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #103))) 433 := 54 << 3
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 1 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 2 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 2 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 4 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 1 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 4 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 4 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 4 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 4 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 1 := 7&432
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 7&432
band: (band[57] (if (= #107 56) 1 (if #620 3 #780)) (shl[57] (bv2int %0) (+ 57 #783))) 2 := 7&432
(smt.stats    2    313   8641   5223  2658/2405/184     300/12     9   40   52.77)
(smt.stats    3    414  11391   8359  2683/2425/187     396/12    11   43   52.90)
(sat.ddfw       1      1    40.004     20001        98          1            1        3)
(smt.stats    4    525  13050  10638  2723/2458/206     481/30    13   71   53.09)
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #865 #869) 64)) 576460752303423490 := 108086391056892008 << 1
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #865 #869) 64)) 576460752303423490 := 108086391056892008 << 1
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #865 #869) 64)) 576460752303423490 := 108086391056892008 << 1
(sat.ddfw       1      1   40.8163     40001       196          2            1        5)
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2 := 3&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #865 #869) 64)) 2 := 144115188075855974 << 1
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2 := 3&448
(smt.stats    5    647  16080  14472  2769/2506/212     609/40    14   73   53.18)
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2 := 3&72057594037927696
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 3&72057594037927696
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #103))) 144115188075855867 := 18014398509481924 << 2
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 3&72057594037927696
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #103))) 144115188075855867 := 18014398509481924 << 2
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 3&904
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #103))) 1809 := 226 << 2
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 0 := 3&904
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #103))) 144115188075855865 := 226 << 2
(sat.ddfw       1      1   35.3357     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.976s mem=55644KiB load=0.98 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  17186  16502  2920/2653/221     712/53    15   75   53.37)
(sat.ddfw       1      1   30.2115    110001       539          4            1       12)
(smt.stats    7    859  18067  17963  3063/2678/221     851/60    15   75   53.56)
(smt.stats    8    981  19478  20419  3255/2984/224     995/68    16   75   53.56)
(sat.ddfw       1      1   26.1228    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.976s mem=55940KiB load=1.00 rootload=1.00
(smt.stats    9   1115  22393  24914  3335/2999/226    1156/96    18   84   53.67)
(sat.ddfw       1      1   22.8314    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.974s mem=56156KiB load=1.00 rootload=0.99
(smt.stats   10   1216  25002  27864  3436/3081/226    1293/99    18   84   53.76)
(smt.stats   11   1327  26930  31600  3493/3226/228    1434/135    19   85   53.76)
(sat.ddfw       1      1   20.2664    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  29156  34199  3614/3279/229    1653/164    20   87   53.97)
ramon: poll                 wall=4.000s usage=3.973s mem=56388KiB load=1.00 rootload=1.00
(smt.stats   13   1583  30718  36261  3735/3405/230    1817/165    20   87   53.97)
(sat.ddfw       1      1   18.1653    370001      1813          8            1       38)
(smt.stats   14   1730  32710  40362  3880/3527/230    1992/192    21   88   54.08)
(smt.stats   15   1831  33678  42450  4052/3665/230    2119/192    21   88   54.18)
ramon: poll                 wall=5.000s usage=4.975s mem=56496KiB load=1.00 rootload=1.01
(smt.stats   16   1942  35243  44240  4129/3808/230    2249/192    21   88   54.18)
(sat.ddfw       1      1   16.6976    460001      2254          9            1       47)
(smt.stats   17   2064  38100  47846  4231/3942/230    2381/194    21   88   54.18)
ramon: poll                 wall=6.000s usage=6.049s mem=56624KiB load=1.07 rootload=1.07
(smt.stats   18   2198  40368  51393  4320/3975/230    2587/194    21   88   54.27)
(sat.ddfw       1      1   15.4488    560001      2745         10            1       57)
(smt.stats   19   2345  42931  55454  4483/4216/232    2788/248    22   88   54.37)
ramon: poll                 wall=7.000s usage=7.045s mem=56808KiB load=1.00 rootload=1.00
(smt.stats   20   2506  45537  60542  4607/4303/235    3065/299    23   90   54.46)
(smt.stats   21   2607  49101  64965  4632/4352/235    3174/299    23   90   54.46)
(sat.ddfw       1      1   14.1881    670001      3284         11            1       68)
(smt.stats   22   2718  52776  70072  4711/4378/235    3317/336    24   93   54.62)
ramon: poll                 wall=8.000s usage=8.045s mem=57108KiB load=1.00 rootload=1.00
(smt.stats   23   2840  55075  74661  4886/4511/235    3527/337    24   93   54.84)
ramon: poll                 wall=9.000s usage=9.045s mem=57316KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    13.109    790001      3872         12            1       80)
(smt.stats   24   2974  57293  80365  5179/4760/235    3781/338    24   93   54.93)
ramon: poll                 wall=10.000s usage=10.108s mem=57428KiB load=1.06 rootload=1.06
(smt.stats   25   3121  61086  89304  5250/4917/236    4010/392    25   97   54.93)
(sat.ddfw       1      1   12.1928    920001      4509         13            1       93)
(smt.stats   26   3282  64888  96905  5472/5043/236    4290/396    25   97   55.09)
ramon: poll                 wall=11.000s usage=11.093s mem=57540KiB load=0.99 rootload=0.98
(smt.stats   27   3459  68383 105438  5664/5268/236    4618/396    25   97   55.21)
(smt.stats   28   3560  69806 108985  5718/5423/236    4874/396    25   97   55.21)
ramon: poll                 wall=12.000s usage=12.036s mem=57460KiB load=0.94 rootload=0.95
(smt.stats   29   3671  71304 111406  5908/5461/236    5031/404    25   97   55.33)
(sat.ddfw       1      1   11.3867   1060001      5196         14            1      108)
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 8 := 144115188075855871&72057594037919776
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 16 := 144115188075855871&72057594037919776
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919776
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919776
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037924488
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919776
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919776
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919736
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919248
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919264
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919736
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919248
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919264
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 32 := 144115188075855871&72057594037919264
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919264
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919264
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919360
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919360
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919488
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919360
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919488
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 576 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 576 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 576 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 512 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 576 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 884 := 144115188075855871&72057594037919296
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 2560 := 144115188075855871&72057594037919296
(smt.stats   30   3793  73439 119506  6105/5742/237    5313/588    26   97   55.52)
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 8192 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 8192 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 8192 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 57344 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 57344 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 8192 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 57344 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 90112 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 40960 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 57344 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 90112 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 90112 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 57344 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 90112 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 122880 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 90112 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 122880 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 253952 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 260600 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 253952 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 253952 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 253952 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 253952 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 253952 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 253952 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 260600 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 260592 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 260576 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 253952 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 1040384 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 1040512 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 1040640 := 144115188075855871&72057594037919744
band: (band[57] (if (= #401 63) 1 (if #599 3 #858)) (shl[64] (* 2 #101) (mod #873 64))) 1042688 := 144115188075855871&72057594037919744
(smt.stats   31   3927  75146 126660  6335/5890/426    5609/658    27  132   56.05)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  80121 136717  6378/6110/442    6064/718    28  148   56.14)
ramon: poll                 wall=13.000s usage=12.961s mem=58532KiB load=0.92 rootload=0.92
(smt.stats   33   4235  84799 148036  6585/6117/442    6438/734    28  148   56.73)
ramon: poll                 wall=14.000s usage=13.961s mem=59304KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.6648   1210001      5931         15            1      123)
(smt.stats   34   4412  96294 175581  6636/6369/446    7064/1131    30  163   57.07)
(smt.stats   35   4606 103502 192871  6743/6407/451    7570/1177    31  167   57.07)
(smt.stats   36   4707 106572 203942  6817/6540/452    7773/1234    32  184   57.19)
ramon: poll                 wall=15.000s usage=14.961s mem=59560KiB load=1.00 rootload=1.00
(smt.stats   37   4818 110416 211703  6933/6541/452    7943/1248    32  184   57.19)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4940 114240 225288  7119/6763/452    8218/1315    33  185   57.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 230)
(smt.stats   39   5074 117792 233395  7169/6874/453    8318/1410    34  186   57.38)
(smt.stats   40   5221 125801 249729  7211/6912/455    8524/1410    34  186   57.65)
(sat.ddfw       1      1   10.0288   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=15.961s mem=60036KiB load=1.00 rootload=1.00
(smt.stats   41   5382 132370 272690  7457/6941/455    8945/1502    35  190   57.74)
ramon: poll                 wall=17.000s usage=16.960s mem=60292KiB load=1.00 rootload=1.00
(smt.stats   42   5559 138340 292050  7581/7273/458    9497/1614    37  198   58.14)
(sat.ddfw       1      1   9.47022   1540001      7549         17            1      156)
ramon: poll                 wall=18.000s usage=17.959s mem=60548KiB load=1.00 rootload=1.00
(smt.stats   43   5753 143573 317958  7875/7315/458    9862/1623    37  198   58.24)
ramon: poll                 wall=19.000s usage=19.025s mem=60548KiB load=1.07 rootload=1.06
(smt.stats   44   5966 149874 347678  8132/7627/461   10506/1760    38  201   58.44)
(smt.stats   45   6067 154715 359200  8159/7876/461   10644/1924    39  203   58.44)
(smt.stats   46   6178 160162 371586  8164/7882/461   10814/1926    39  203   58.53)
(sat.ddfw       1      1   9.05752   1720001      8431         18            1      174)
ramon: poll                 wall=20.002s usage=20.059s mem=60804KiB load=1.03 rootload=1.04
ramon: end                  Fri Nov  1 21:29:37 2024
ramon: root.execname        z3
ramon: root.utime           20.050s
ramon: root.stime           0.000s
ramon: group.total          20.061s
ramon: group.utime          20.053s
ramon: group.stime          0.008s
ramon: group.mempeak        61060KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.004s
ramon: loadavg              1.00
