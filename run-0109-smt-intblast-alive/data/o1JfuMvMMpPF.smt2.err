ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:54:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40684 MiB
ramon: sys.mem.avail        61707 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/o1JfuMvMMpPF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3078827
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 2199023255552 := 4 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 2199023255552 := 4 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 2199023255552 := 33554432 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 2199023255552 := 33554432 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 2199023255552 := 4 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 2 << 40
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 2199023255552 := 4 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 2 << 40
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&2199023255551
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&2199023255551
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 18446741874686296064 := 6 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&1099511627776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 3 << 40
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&3
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&2199023255551
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&2199023255551
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&3
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 1 := 1&1099511627776
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&1099511627776
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 3298534883328 := 2199023255554 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&1099511627776
band: (band[41] (if (or #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 #588 #589 #590 ...) 0 (if #614 1 #616)) (shl[41] (bv2int %0) (+ 41 #768))) 1 := 1&1099511627776
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 1 := 1&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511105 := 2199023255554 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 1 := 1&1099511627776
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&1099511627776
band: (band[41] (if (or #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 #588 #589 #590 ...) 0 (if #614 1 #616)) (shl[41] (bv2int %0) (+ 41 #768))) 1 := 1&1099511627776
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&1099511627775
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&1099511627774
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 7696581394430 := 2199023255566 << 39
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 1&1099511627776
band: (band[41] (if (or #575 #576 #577 #578 #579 #580 #581 #582 #583 #584 #585 #586 #587 #588 #589 #590 ...) 0 (if #614 1 #616)) (shl[41] (bv2int %0) (+ 41 #768))) 1 := 1&1099511627776
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 1 := 1&1099511627776
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 1 := 1&1099511627776
(smt.stats    0    101   1947    704  1170/1025/128      94/19     9   21   19.15)
(smt.stats    1    202   3758   1434  1565/1425/135     197/24    11   24   19.25)
(smt.stats    2    313   5798   2893  1644/1490/139     302/33    13   25   19.25)
(smt.stats    3    414   8022   4414  1705/1563/145     400/46    15   28   19.34)
(smt.stats    4    525   9674   5668  1726/1580/154     505/46    16   34   19.34)
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 2&33554434
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 2&33554434
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 2&33554434
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 2&33554434
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 2&33554434
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 2&33554436
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 33554436 := 33554434 << 40
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 2&33554436
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 33554436 := 33554434 << 40
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 2&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 24189255811076 := 33554434 << 40
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 24189255811076 := 33554434 << 36
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 24189255811076 := 33554434 << 36
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 24189255811072 := 33554434 << 36
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 24189255811074 := 33554434 << 36
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 24189255811074 := 33554434 << 36
(smt.stats    5    647  11217   7091  1793/1599/155     614/65    17   42   19.54)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  11702   7653  1994/1689/180     723/71    18   48   19.93)
(smt.stats    7    859  13010   8737  2289/2027/180     839/71    18   48   20.02)
ramon: poll                 wall=1.000s usage=0.909s mem=21168KiB load=0.91 rootload=0.90
(smt.stats    8    981  13352   9126  2548/2287/180     963/83    19   48   20.21)
(smt.stats    9   1115  15692  11531  3021/2797/189    1128/91    20   63   20.21)
(smt.stats   10   1216  17238  14416  3066/2902/191    1223/115    22   65   20.21)
(smt.stats   11   1327  18521  16836  3093/2921/191    1352/116    22   65   20.21)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  21201  21180  3141/2962/192    1525/144    23   65   20.31)
(smt.stats   13   1583  24198  23543  3146/2984/192    1675/144    23   65   20.31)
(smt.stats   14   1730  27735  28698  3191/2991/193    1833/205    24   66   20.31)
(smt.stats   15   1831  29698  31886  3302/3040/194    1937/213    25   67   20.50)
(smt.stats   16   1942  32181  35035  3363/3161/194    2052/213    25   67   20.50)
(smt.stats   17   2064  34359  37794  3401/3239/195    2177/224    26   70   20.60)
(smt.stats   18   2198  38700  46995  3441/3257/197    2315/236    27   87   20.60)
ramon: poll                 wall=2.000s usage=1.908s mem=21832KiB load=1.00 rootload=1.00
(smt.stats   19   2345  40786  53315  3794/3315/197    2471/242    27   87   20.69)
(smt.stats   20   2506  41197  53927  3957/3679/197    2632/274    28   87   20.89)
(smt.stats   21   2607  41889  56875  4693/4355/197    2732/286    28   87   20.89)
ramon: poll                 wall=3.000s usage=2.908s mem=22204KiB load=1.00 rootload=1.00
(smt.stats   22   2718  43876  61792  4724/4546/197    2837/287    28   87   21.00)
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&18522046464
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 18522046464 := 18522046464 << 35
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17179869184
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 17179869184 := 17179869184 << 35
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17179869184
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 17179869184 := 17179869184 << 35
(smt.stats   23   2840  45788  65489  4815/4649/204    2962/296    29   94   21.13)
(smt.stats   24   2974  47748  70053  4850/4655/204    3120/299    29   94   21.13)
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 38
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 24189255811089 := 0 << 38
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 24189255811089 := 0 << 38
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 37
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 37
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 27
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 1
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 13
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 11
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 8
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 2
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 4
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 3
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 7
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 5
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 6
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 9
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511109 := 0 << 10
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511125 := 0 << 11
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511125 := 0 << 11
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 28
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 31
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 32
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 33
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511121 := 0 << 34
(smt.stats   25   3121  49613  74238  4988/4773/265    3277/322    31  122   21.61)
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 30
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 29
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 27
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 27
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 26
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 25
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 24
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 14
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 15
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 16
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 17
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 18
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 19
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 20
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 21
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 22
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 23
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516545
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027649 := 6 << 12
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4398046511105 := 6 << 13
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 21
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 21
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 21
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 21
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 21
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 21
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 21
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 21
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 37
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 37
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 34
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 34
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 33
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 33
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 24
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 24
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 24
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 23
(smt.stats   26   3282  52554  82295  5340/5017/310    3459/350    31  122   21.80)
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 23
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 22
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 6 << 22
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 4 << 22
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 4 << 29
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 4 << 29
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 4 << 30
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 4 << 30
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 4 << 31
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 5500880027650 := 4 << 31
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 7699903283202 := 4 << 31
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102934179838
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 9899027202046 := 4 << 32
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1102833516546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 9898926538754 := 4 << 32
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&2198587047940
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 10994680070148 := 4 << 28
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&2198587047940
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 10994680070148 := 4 << 28
(smt.stats   27   3459  56761  92186  5603/5378/402    3666/376    34  154   22.39)
(smt.stats   28   3560  59511  96137  5631/5391/402    3763/381    34  154   22.58)
(smt.stats   29   3671  62724  98397  5648/5424/402    3876/383    35  156   22.58)
ramon: poll                 wall=4.000s usage=3.908s mem=23944KiB load=1.00 rootload=0.99
(smt.stats   30   3793  67906 111995  5663/5437/402    3997/383    35  156   22.58)
(smt.stats   31   3927  71634 116635  5695/5447/402    4147/386    35  156   22.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  76187 121521  5781/5548/403    4300/404    36  156   22.77)
(smt.stats   33   4235  80868 124470  5839/5586/403    4465/405    36  156   22.96)
(smt.stats   34   4412  86211 137447  5957/5733/405    4687/436    37  158   23.06)
ramon: poll                 wall=5.000s usage=4.907s mem=24596KiB load=1.00 rootload=0.99
(smt.stats   35   4606  91978 148880  6022/5793/414    4866/454    38  165   23.15)
(smt.stats   36   4707  96881 153242  6038/5804/415    4963/453    39  168   23.15)
(smt.stats   37   4818  98774 158296  6077/5849/416    5068/461    40  169   23.15)
(smt.stats   38   4940 102738 161372  6084/5854/416    5186/461    40  169   23.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 69)
(smt.stats   39   5074 106975 172346  6099/5872/433    5222/463    42  189   23.26)
(smt.stats   40   5221 111073 183678  6100/5873/437    5359/455    43  203   23.36)
(smt.stats   41   5382 114807 193992  6237/5978/446    5513/460    44  208   23.55)
(smt.stats   42   5559 118615 203807  6269/6010/452    5669/461    45  208   23.65)
ramon: poll                 wall=6.000s usage=5.907s mem=25032KiB load=1.00 rootload=1.00
(smt.stats   43   5753 124735 215787  6305/6046/452    5849/466    46  220   23.65)
(smt.stats   44   5966 132198 230195  6434/6065/452    6049/470    46  220   23.93)
(smt.stats   45   6067 136372 237689  6509/6213/452    6152/472    46  220   23.93)
ramon: poll                 wall=7.000s usage=6.907s mem=25376KiB load=1.00 rootload=1.00
(smt.stats   46   6178 138854 241249  6694/6277/452    6276/482    46  220   23.93)
(smt.stats   47   6300 142614 249932  6756/6490/452    6402/482    46  220   24.03)
(smt.stats   48   6434 149114 262766  6834/6575/458    6513/516    47  235   24.03)
(smt.stats   49   6581 154188 270250  6852/6587/458    6652/521    47  235   24.03)
(smt.stats   50   6742 162117 284055  6868/6611/458    6811/532    48  237   24.03)
ramon: poll                 wall=8.000s usage=7.907s mem=25592KiB load=1.00 rootload=1.00
(smt.stats   51   6919 166173 290261  7030/6620/458    6993/537    48  237   24.12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 178315 303829  7055/6797/460    7185/548    49  240   24.12)
(smt.stats   53   7326 187846 317996  7061/6808/480    7379/555    51  261   24.22)
(smt.stats   54   7560 198194 347945  7072/6823/481    7630/593    53  272   24.22)
(smt.stats   55   7661 200465 355138  7081/6832/481    7732/593    53  272   24.22)
ramon: poll                 wall=9.000s usage=8.906s mem=25780KiB load=1.00 rootload=1.00
(smt.stats   56   7772 203574 363294  7090/6841/481    7834/593    53  272   24.31)
(smt.stats   57   7894 210198 368573  7097/6848/481    7961/593    53  272   24.31)
(smt.stats   58   8028 214928 378568  7116/6858/485    8105/607    54  275   24.41)
(smt.stats   59   8175 220284 384895  7349/7000/500    8316/623    55  278   24.70)
ramon: poll                 wall=10.000s usage=9.906s mem=26600KiB load=1.00 rootload=1.00
(smt.stats   60   8336 226115 394790  7468/7089/501    8512/629    55  278   24.99)
(smt.stats   61   8513 230637 406586  7486/7189/502    8717/684    56  291   25.18)
(smt.stats   62   8707 234554 419777  7557/7215/509    8927/718    57  299   25.37)
(smt.stats   63   8920 244920 447446  7659/7325/523    9186/735    58  303   25.47)
(smt.stats   64   9154 253942 461225  7680/7348/523    9402/765    59  316   25.57)
(smt.stats   65   9411 262704 476020  7812/7359/526    9664/765    60  321   25.66)
ramon: poll                 wall=11.000s usage=10.906s mem=27172KiB load=1.00 rootload=1.00
(smt.stats   66   9512 264541 482599  7842/7514/526    9760/765    60  321   25.66)
(smt.stats   67   9623 268599 491332  7957/7518/526    9905/767    60  321   25.85)
(smt.stats   68   9745 272981 497483  8013/7687/526   10030/767    60  321   25.85)
(smt.stats   69   9879 284086 511199  8029/7692/526   10168/767    60  321   25.85)
ramon: poll                 wall=12.000s usage=11.905s mem=27424KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 292053 526155  8089/7718/526   10315/781    60  321   26.04)
ramon: poll                 wall=13.000s usage=12.905s mem=27880KiB load=1.00 rootload=1.00
(smt.stats   71  10187 298015 537680  8215/7801/526   10498/788    60  321   26.14)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 307779 549035  8293/7927/526   10685/790    60  321   26.14)
ramon: poll                 wall=14.000s usage=13.905s mem=27952KiB load=1.00 rootload=1.00
(smt.stats   73  10558 317079 567535  8455/8007/526   10897/800    60  321   26.23)
(smt.stats   74  10771 332480 594939  8491/8149/528   11109/898    61  327   26.33)
ramon: poll                 wall=15.000s usage=14.905s mem=28060KiB load=1.00 rootload=1.00
(smt.stats   75  11005 342403 616829  8604/8175/528   11355/900    61  327   26.42)
(smt.stats   76  11262 352415 630606  8690/8297/528   11617/903    61  327   26.42)
(smt.stats   77  11544 360889 664091  8776/8392/528   11992/903    61  327   26.52)
ramon: poll                 wall=16.000s usage=15.904s mem=28260KiB load=1.00 rootload=1.00
(smt.stats   78  11645 368693 671451  8779/8453/528   12111/903    61  327   26.52)
(smt.stats   79  11756 378075 681767  8800/8453/528   12230/903    61  327   26.52)
(smt.stats   80  11878 387035 697825  8806/8480/528   12355/903    61  327   26.61)
(smt.stats   81  12012 392710 709846  8839/8513/529   12493/999    62  328   27.03)
(smt.stats   82  12159 401601 735888  8898/8525/530   12648/1010    63  329   27.12)
ramon: poll                 wall=17.000s usage=16.904s mem=28772KiB load=1.00 rootload=1.00
(smt.stats   83  12320 408081 751094  9054/8637/530   12822/1021    63  329   27.32)
(smt.stats   84  12497 413755 764454  9136/8776/530   13002/1023    63  329   27.32)
ramon: poll                 wall=18.000s usage=17.904s mem=28980KiB load=1.00 rootload=1.00
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1342177281
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4399388688385 := 1099511627776 << 1
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1342177281
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4399388688385 := 1099511627776 << 1
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1392508925
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4399439020029 := 1099511627776 << 2
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&1342177281
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #957 #961) 64)) 4399388688385 := 1099511627776 << 2
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 2180752867327 := 549755813888 << 3
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 2180752867327 := 549755813888 << 3
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 2180752867327 := 549755813888 << 3
band: (band[41] (if (or #400 #403 #406 #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 ...) 0 (if #397 1 #799)) (shl[64] (* 2 #307) (mod #965 64))) 0 := 0&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 2180752867327 := 549755813888 << 3
(smt.stats   85  12691 425371 789270  9197/8823/530   13227/1030    63  329   27.42)
(smt.stats   86  12904 434600 811097  9264/8893/535   13476/1081    64  330   27.42)
ramon: poll                 wall=19.000s usage=18.904s mem=29348KiB load=1.00 rootload=1.00
(smt.stats   87  13138 441924 821282  9350/8959/536   13711/1135    65  330   27.51)
(smt.stats   88  13395 452993 849190  9430/9054/536   13994/1141    65  330   27.61)
ramon: poll                 wall=20.000s usage=19.903s mem=29376KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:54:50 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.020s
ramon: group.total          19.948s
ramon: group.utime          19.924s
ramon: group.stime          0.024s
ramon: group.mempeak        29632KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.045s
ramon: loadavg              1.00
