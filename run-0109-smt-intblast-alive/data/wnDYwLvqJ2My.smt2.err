ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:05:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40439 MiB
ramon: sys.mem.avail        61705 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/wnDYwLvqJ2My.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3113612
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    102   3970    683  1124/1019/104      97/23     7   17   19.04)
(smt.stats    1    203   5366   2673  2021/1794/108     201/24    10   21   19.24)
(smt.stats    2    314   8075   5044  2292/2069/109     306/28    11   22   19.44)
(smt.stats    3    415  10355   7243  2317/2090/110     413/34    12   24   19.54)
(smt.stats    4    526  11273   9062  2349/2091/110     529/35    12   24   19.63)
(smt.stats    5    648  12250  10163  2425/2145/110     656/36    12   24   19.73)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  15218  12789  2492/2259/110     758/36    12   24   19.83)
(smt.stats    7    860  16208  14707  2545/2264/110     872/38    12   24   19.83)
(smt.stats    8    982  17877  17260  2608/2378/117    1011/46    13   30   19.92)
(smt.stats    9   1116  20498  21533  2616/2386/118    1132/61    15   44   19.92)
(smt.stats   10   1217  24003  24931  2618/2388/118    1232/61    15   44   20.06)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738364 := 34359738441&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738360 := 34359738441&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738347 := 34359738464&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 11 := 34359738464&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 34359738443&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738347 := 34359738443&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 34359738443&34359738364
(smt.stats   11   1328  26136  28030  2657/2426/155    1359/64    16   52   20.06)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738351 := 34359738464&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738351 := 34359738464&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738351 := 34359738465&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738465&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738468&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738364 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738358 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738364 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738772&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738484&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738772&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738804&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738807&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738804&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738836&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738868&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739028&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739060&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739124&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738804&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738836&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738836&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738868&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738868&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359738871&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739028&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739316&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739380&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739380&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359740340&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359740404&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739127&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739383&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739383&34359738364
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 34359738356 := 34359739383&34359738364
(smt.stats   12   1450  28471  31176  2811/2473/196    1542/80    16   52   20.35)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 68249716736&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 68249716848&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16 := 68249716848&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 48 := 68249716848&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 48 := 68249716848&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 48 := 68249716848&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 112 := 68249716848&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 112 := 68249716848&134217727
(smt.stats   13   1584  30711  34521  2845/2572/249    1772/95    17   70   20.54)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 112 := 68249718833&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 112 := 68249718833&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 112 := 68249722930&134217727
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   14   1731  31765  35998  3034/2650/274    1987/157    18  101   20.74)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 112 := 68249722929&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 112 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 114 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 12338 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 12338 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 16434 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8242 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8242 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8242 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8242 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8242 := 68249722930&134217727
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8242 := 68249722930&134217727
(smt.stats   15   1832  34961  43018  3345/3113/320    2505/210    19  111   21.12)
ramon: poll                 wall=1.000s usage=0.910s mem=22428KiB load=0.91 rootload=0.90
(smt.stats   16   1943  37063  48075  3463/3121/320    2705/217    19  111   21.31)
(smt.stats   17   2065  41276  58844  3489/3261/327    3380/525    21  144   21.41)
(smt.stats   18   2199  46397  77398  3504/3267/328    4303/527    21  144   21.51)
(smt.stats   19   2346  49311  85424  3681/3288/328    4526/805    22  152   21.60)
(smt.stats   20   2507  52026  98610  3960/3732/329    5353/1013    23  156   21.69)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2608  56408 118070  3961/3733/329    6139/1013    23  156   21.89)
(smt.stats   22   2719  59119 131793  4168/3734/329    6395/1022    23  156   22.01)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 524275 := 8479472&524287
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 524274 := 8479472&524287
(smt.stats   23   2841  62252 142217  4373/3976/329    6652/1027    23  156   22.25)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8380400 := 8479472&8388607
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8372208 := 8479472&8388607
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8380400 := 8479728&8388607
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8372208 := 8464368&8388607
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 8372208 := 8450032&8388607
(smt.stats   24   2975  65263 152272  4652/4422/331    7183/1345    24  167   22.25)
(smt.stats   25   3122  72150 202305  4656/4425/334    8039/1713    25  183   22.34)
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 0 := 68585259496&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #292) 64)) 9223372036720558568 := 38 << 2
ramon: poll                 wall=2.000s usage=1.910s mem=23692KiB load=1.00 rootload=1.00
band: (band[36] (shl[64] (bv2int %0) (mod #293 64)) (if (= #679 63) 0 (if #681 1 #831))) 1 := 8437993&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #292) 64)) 9223371968143737065 := 38 << 2
(smt.stats   26   3283  74818 216198  4889/4635/341    8603/1718    25  183   22.44)
(smt.stats   27   3460  78554 244634  5069/4682/341    9564/1720    25  183   22.63)
(smt.stats   28   3561  80380 249219  5128/4858/350    9737/2037    26  186   22.73)
(smt.stats   29   3672  82563 258946  5304/4910/350   10114/2044    26  186   22.82)
ramon: poll                 wall=3.000s usage=2.909s mem=24176KiB load=1.00 rootload=1.00
(smt.stats   30   3794  84939 267624  5527/5117/350   10440/2048    26  186   22.92)
(smt.stats   31   3928  89420 296846  5615/5386/352   11717/2554    28  221   23.11)
(smt.stats   32   4075  93009 305323  5726/5393/352   12121/2554    28  221   23.30)
ramon: poll                 wall=4.000s usage=3.909s mem=24680KiB load=1.00 rootload=1.00
(smt.stats   33   4236  97059 310522  6074/5565/352   12387/2559    28  221   23.40)
ramon: poll                 wall=5.000s usage=4.908s mem=24784KiB load=1.00 rootload=1.00
(smt.stats   34   4413 102402 316997  6424/6139/353   12760/2769    29  241   23.49)
(smt.stats   35   4607 106407 338747  6526/6221/353   13367/2773    29  241   23.59)
(smt.stats   36   4708 107903 346938  6762/6382/355   13492/3020    30  250   23.68)
ramon: poll                 wall=6.000s usage=5.908s mem=24984KiB load=1.00 rootload=1.00
(smt.stats   37   4819 110451 361437  7028/6607/355   13819/3021    30  250   23.78)
(smt.stats   38   4941 113494 372288  7146/6829/355   14303/3021    30  250   23.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 802)
ramon: poll                 wall=7.000s usage=6.907s mem=25188KiB load=1.00 rootload=0.99
(smt.stats   39   5075 116751 389173  7264/6949/355   14050/3021    30  250   23.87)
(smt.stats   40   5222 120549 395553  7481/7051/355   14267/3022    30  250   23.87)
ramon: poll                 wall=8.000s usage=7.907s mem=25276KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   41   5383 124570 409034  7777/7301/355   14630/3022    30  250   23.97)
(smt.stats   42   5560 130395 431508  7955/7704/360   15047/3513    31  256   24.06)
ramon: poll                 wall=9.000s usage=8.906s mem=25496KiB load=1.00 rootload=1.00
(smt.stats   43   5754 139048 458708  8150/7876/362   15775/3594    32  273   24.16)
ramon: poll                 wall=10.001s usage=9.906s mem=25828KiB load=1.00 rootload=1.00
(smt.stats   44   5967 148621 497959  8374/8126/363   16231/3676    33  283   24.26)
(smt.stats   45   6068 151795 508497  8394/8155/363   16423/3676    33  283   24.35)
(smt.stats   46   6179 155459 535780  8446/8176/363   16780/3679    33  283   24.35)
(smt.stats   47   6301 158488 553735  8472/8221/363   16961/3679    33  283   24.35)
(smt.stats   48   6435 163062 572590  8504/8277/364   17331/3906    34  290   24.44)
ramon: poll                 wall=11.001s usage=10.905s mem=26204KiB load=1.00 rootload=1.00
(smt.stats   49   6582 167650 585346  8650/8278/364   17573/3910    34  290   24.54)
(smt.stats   50   6743 173891 610471  8825/8449/364   17977/3912    34  290   24.54)
ramon: poll                 wall=12.000s usage=11.900s mem=26212KiB load=1.00 rootload=1.00
(smt.stats   51   6920 178973 631496  9082/8610/364   18257/3914    34  290   24.73)
(smt.stats   52   7114 184573 656983  9181/8885/364   18691/3915    34  290   24.73)
ramon: poll                 wall=13.000s usage=12.900s mem=26552KiB load=1.00 rootload=1.00
(smt.stats   53   7327 190748 683726  9410/9120/365   18969/4031    35  296   24.92)
(smt.stats   54   7561 195236 716355  9528/9197/365   19297/4037    35  296   25.01)
(smt.stats   55   7662 197993 725648  9593/9313/365   19405/4038    35  296   25.11)
ramon: poll                 wall=14.000s usage=13.899s mem=26616KiB load=1.00 rootload=1.00
(smt.stats   56   7773 201332 734339  9782/9437/365   19600/4038    35  296   25.11)
(smt.stats   57   7895 205256 739359  9939/9594/365   19929/4039    35  296   25.20)
ramon: poll                 wall=15.000s usage=14.899s mem=26756KiB load=1.00 rootload=1.00
(smt.stats   58   8029 209388 747976 10062/9777/365   20363/4039    35  296   25.20)
(smt.stats   59   8176 215679 752293 10165/9844/365   20887/4039    35  296   25.44)
(smt.stats   60   8337 221141 761297 10286/9979/365   21324/4041    35  296   25.54)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   61   8514 229280 767922 10454/10139/368   21577/4489    36  316   25.63)
ramon: poll                 wall=16.000s usage=15.899s mem=27328KiB load=1.00 rootload=0.99
(smt.stats   62   8708 236429 811105 10690/10283/369   22370/4491    36  316   25.82)
ramon: poll                 wall=17.000s usage=16.898s mem=27840KiB load=1.00 rootload=1.00
(smt.stats   63   8921 246595 834820 10857/10479/369   22754/4560    37  318   25.92)
(smt.stats   64   9155 252222 851481 10990/10674/370   23773/4740    38  348   26.01)
ramon: poll                 wall=18.000s usage=17.898s mem=27840KiB load=1.00 rootload=1.00
(smt.stats   65   9412 261264 865994 11186/10764/370   24249/4743    38  348   26.20)
(smt.stats   66   9513 264458 870833 11245/10981/370   24522/4743    38  348   26.20)
(smt.stats   67   9624 268703 880987 11345/11057/370   24897/4744    38  348   26.30)
ramon: poll                 wall=19.000s usage=18.898s mem=27840KiB load=1.00 rootload=1.00
(smt.stats   68   9746 273446 893493 11490/11110/370   25053/4746    38  348   26.30)
(smt.stats   69   9880 277427 901872 11613/11298/370   25293/4748    38  348   26.39)
ramon: poll                 wall=20.000s usage=19.898s mem=28096KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:06:11 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.995s
ramon: group.utime          19.983s
ramon: group.stime          0.012s
ramon: group.mempeak        28096KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.095s
ramon: loadavg              1.00
