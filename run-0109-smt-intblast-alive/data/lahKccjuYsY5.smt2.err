ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:51:11 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40750 MiB
ramon: sys.mem.avail        61708 MiB
ramon: sys.nprocs           1251
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/lahKccjuYsY5.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3068278
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2199023255468 := 2199023255509&2199023255551
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2199023255502
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2199023255418
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&1
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&1
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 4398046511106 := 82 << 40
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 4398046511106 := 82 << 40
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2199023255551
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2199023255550
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2199023255509 := 2199023255509&2199023255510
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2199023255508 := 2199023255509&2199023255510
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 2199023255510 := 82 << 40
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2199023255509 := 2199023255509&2199023255510
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2199023255550
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2199023255550
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2199023255547
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&84
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&88
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&96
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&84
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&88
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&96
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&128
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&128
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&256
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&84
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&83
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&84
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 6597069766658 := 82 << 40
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 4398046511106 := 82 << 40
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 2199023255509&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 10995116277762 := 82 << 40
(smt.stats    0    101   2882   1007  1166/1051/145      88/15     7   28   19.34)
(smt.stats    1    202   3490   1939  2148/1953/148     222/51    10   30   19.44)
(smt.stats    2    313   5181   3860  2198/2002/150     347/78    12   35   19.57)
(smt.stats    3    414   6891   6454  2221/2023/156     431/78    15   40   19.57)
(smt.stats    4    526   8749   8197  2239/2043/175     505/121    19   79   19.67)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 1&83886162
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 83886161 := 41943081 << 1
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 1&83886162
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 83886161 := 41943081 << 1
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 1&83886162
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 83886161 := 41943081 << 1
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 1&83886162
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 83886161 := 41943081 << 1
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 1&83886162
band: (band[41] (if (= #120 40) 1 (if #544 3 #656)) (shl[41] (bv2int %0) (+ 41 #659))) 1 := 1&83886162
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 1 := 1&83886162
(smt.stats    5    648  11390  10054  2276/2048/176     623/126    19   79   19.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  13948  11976  2297/2091/192     729/127    20   83   19.86)
(smt.stats    7    860  15979  15151  2320/2111/193     843/132    22   83   19.86)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2 := 274877906938&41943048
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 4 := 274877906938&41943048
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 4 := 274877906938&41943048
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 274877906938&41943048
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2 := 274877906938&50331640
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 4 := 274877906938&50331640
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2 := 274877906938&50331640
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 4 := 274877906938&50331640
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 4 := 274877906938&50331640
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 274877906938&50331640
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 16 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 32 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 64 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 128 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 256 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 512 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 1024 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2048 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 4096 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 4096 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8192 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 16384 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 32768 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 65536 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 131072 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 262144 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 524288 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 1048576 := 274877906938&50331648
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2097152 := 274877906938&50331648
(smt.stats    8    982  17706  17699  2433/2222/294     960/154    25  120   20.38)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 4 := 68719476734&1099511627784
(smt.stats    9   1116  21228  22502  2460/2235/296    1125/168    26  125   20.50)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528404992
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528404992
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528404992
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528404992
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405000
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405000
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405056
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405032
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405048
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405040
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405048
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405064
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405080
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405272
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405528
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405184
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405192
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405208
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405272
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405528
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528406040
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405240
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405208
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405016
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405016
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 24 := 68719476734&1099528405016
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 16 := 68719476734&1099528405016
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099528405016
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099528405000
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099520017544
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099520017416
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099520017416
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099520017416
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099520016426
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099520016426
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099520016426
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099520016426
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 8 := 68719476734&1099520016426
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 10 := 68719476734&1099520016426
(smt.stats   10   1217  22326  25307  2643/2357/369    1346/190    27  126   20.88)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 10 := 68719476734&1099520016554
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 10 := 68719476734&1099520016554
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 42 := 68719476734&1099520016554
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 170 := 68719476734&1099520016554
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 170 := 68719476734&1099520016522
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 170 := 68719476734&33554602
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 170 := 68719476734&33554602
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 170 := 68719476734&33554602
(smt.stats   11   1328  23734  28789  2863/2479/396    1597/239    28  143   21.18)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 234 := 68719476734&33554538
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 426 := 68719476734&33554538
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 426 := 68719476734&33554538
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 490 := 68719476734&33554538
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 362 := 68719476734&33554538
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 234 := 68719476734&33554538
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 362 := 68719476734&33554538
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 106 := 68719476734&33554538
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 33554538 := 68719476734&33554538
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 33554538 := 67109056 << 35
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 33554538 := 68719476734&33554538
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 33554538 := 67109056 << 35
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 33554538 := 68719476734&33554538
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 33554538 := 67109056 << 35
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  26504  35147  2990/2779/419    2217/423    30  155   21.37)
(smt.stats   13   1584  31823  40834  3006/2794/421    2564/545    31  158   21.58)
(smt.stats   14   1731  38303  52961  3218/2956/422    2939/640    32  164   21.77)
(smt.stats   15   1835  42306  62122  3235/2973/425    3190/768    34  172   21.87)
(smt.stats   16   1946  45621  69030  3271/3005/434    3478/779    35  197   22.06)
ramon: poll                 wall=1.003s usage=1.002s mem=23408KiB load=1.00 rootload=0.98
(smt.stats   17   2068  49681  83165  3305/3039/436    3843/779    35  197   22.06)
(smt.stats   18   2202  53820  94281  3421/3039/436    4081/916    36  213   22.28)
(smt.stats   19   2349  57562 106169  3622/3171/437    4511/935    37  215   22.48)
ramon: poll                 wall=2.003s usage=2.002s mem=23988KiB load=1.00 rootload=1.00
(smt.stats   20   2510  59969 113232  3796/3380/438    4896/970    38  219   22.59)
(smt.stats   21   2611  62406 119468  3858/3547/439    5167/978    38  219   22.68)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   22   2722  67401 128792  3934/3641/439    5398/1030    39  221   22.68)
(smt.stats   23   2844  75284 152698  3966/3700/439    5532/1030    39  221   22.78)
(smt.stats   24   2978  80430 169413  4004/3702/439    6211/1032    39  221   22.78)
(smt.stats   25   3125  85260 189026  4027/3758/440    6817/1280    40  223   22.89)
(smt.stats   26   3286  91541 213728  4050/3784/442    7644/1280    40  223   22.99)
(smt.stats   27   3463  97489 232836  4073/3802/444    8248/1506    41  235   23.08)
ramon: poll                 wall=3.000s usage=2.999s mem=24372KiB load=1.00 rootload=1.00
(smt.stats   28   3564 101866 241029  4144/3808/444    8478/1689    42  246   23.08)
(smt.stats   29   3675 106790 251017  4283/3907/444    8723/1693    42  246   23.08)
(smt.stats   30   3797 112186 262095  4459/4048/444    9017/1696    42  246   23.22)
(smt.stats   31   3931 115772 271621  4591/4210/444    9599/1698    42  246   23.32)
(smt.stats   32   4078 118783 287079  4606/4340/445   10000/1903    43  255   23.42)
(smt.stats   33   4239 122509 298713  4629/4362/446   10158/1992    44  258   23.42)
ramon: poll                 wall=4.000s usage=3.982s mem=24796KiB load=0.98 rootload=0.99
(smt.stats   34   4416 129394 326191  4731/4375/446   11146/1998    44  258   23.51)
(smt.stats   35   4610 137764 354121  4799/4517/447   11713/2114    45  277   23.61)
(smt.stats   36   4711 142098 382835  4809/4541/449   12085/2182    46  293   23.61)
(smt.stats   37   4822 145896 397092  4838/4547/450   12561/2184    46  293   23.94)
(smt.stats   38   4944 150236 409175  4951/4683/452   13089/2229    47  344   23.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=5.000s usage=4.982s mem=25452KiB load=1.00 rootload=0.99
(smt.stats   39   5078 154377 421669  5038/4687/452   13830/2234    47  344   24.04)
(smt.stats   40   5225 162061 435951  5087/4793/452   14279/2235    47  344   24.04)
(smt.stats   41   5386 166865 445370  5238/4839/452   14752/2237    47  344   24.16)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5563 172118 471366  5396/5060/452   15425/2237    47  344   24.26)
(smt.stats   43   5757 179469 494630  5632/5135/452   16337/2242    47  344   24.45)
ramon: poll                 wall=6.000s usage=5.982s mem=25860KiB load=1.00 rootload=1.00
(smt.stats   44   5970 186070 522845  5793/5385/452   17374/2242    47  344   24.55)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 112 := 2147483647&112
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 112 := 102 << 30
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 112 := 2147483647&112
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 112 := 102 << 30
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 112 := 2147483647&112
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 112 := 102 << 30
(smt.stats   45   6072 187564 533091  5808/5530/452   17656/2243    47  344   24.84)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 208 := 2147483647&208
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 208 := 102 << 30
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 208 := 2147483647&208
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 208 := 102 << 30
(smt.stats   46   6183 190298 544242  5877/5560/457   18418/2570    48  345   25.25)
(smt.stats   47   6305 193717 555112  5922/5620/458   18858/2572    48  345   25.25)
(smt.stats   48   6439 197243 576808  5936/5660/460   19923/2769    49  373   25.35)
(smt.stats   49   6586 200218 596763  5940/5664/460   20209/2769    49  373   25.35)
(smt.stats   50   6747 205829 616006  6000/5682/461   20640/2896    50  407   25.45)
ramon: poll                 wall=7.000s usage=6.982s mem=26836KiB load=1.00 rootload=1.00
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 1 := 7&69155684359
(smt.stats   51   6924 209912 635190  6199/5768/461   20979/2899    50  407   25.54)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2 := 3&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 6 := 554189370 << 1
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2 := 3&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 6 := 571507770 << 1
(smt.stats   52   7118 213770 671611  6272/5973/463   21416/3046    51  413   25.64)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2 := 3&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 6 := 571507770 << 1
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 2 := 3&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #865 #867) 64)) 6 := 571507770 << 1
(smt.stats   53   7331 218882 710565  6360/6032/468   22125/3051    51  413   25.74)
(smt.stats   54   7565 226190 739474  6586/6294/473   22649/3152    52  414   25.83)
ramon: poll                 wall=8.003s usage=7.982s mem=27228KiB load=1.00 rootload=1.00
(smt.stats   55   7666 232409 773822  6656/6344/474   22771/3231    53  475   25.83)
(smt.stats   56   7777 235783 788041  6861/6400/474   22964/3233    53  475   25.93)
ramon: poll                 wall=9.000s usage=8.980s mem=27416KiB load=1.00 rootload=1.00
(smt.stats   57   7899 239511 812286  7162/6683/474   23418/3236    53  475   25.97)
(smt.stats   58   8033 244063 825385  7228/6942/474   23995/3236    53  475   26.09)
(smt.stats   59   8180 249212 866419  7265/6968/474   24597/3237    53  475   26.09)
band: (band[41] (if (or #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 ...) 0 (if #694 1 #774)) (shl[64] (* 2 #114) (mod #868 64))) 0 := 31&486539265
ramon: poll                 wall=10.000s usage=9.979s mem=27716KiB load=1.00 rootload=1.00
(smt.stats   60   8341 253116 884961  7585/6984/476   25120/3416    54  481   26.29)
(smt.stats   61   8518 255950 898809  7748/7348/476   25586/3417    54  481   26.48)
ramon: poll                 wall=11.003s usage=10.982s mem=27996KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8712 258811 908313  8035/7542/476   25868/3422    54  481   26.58)
(smt.stats   63   8925 261593 922285  8468/7935/478   26384/3511    55  485   26.79)
(smt.stats   64   9159 267615 972291  8491/8202/478   26934/3512    55  485   26.79)
ramon: poll                 wall=12.000s usage=11.979s mem=28476KiB load=1.00 rootload=1.00
(smt.stats   65   9416 273812 1035659  8741/8210/478   27438/3517    55  485   27.08)
(smt.stats   66   9517 276550 1043018  8752/8466/478   27931/3517    55  485   27.20)
(smt.stats   67   9628 280424 1056060  8757/8471/478   28200/3517    55  485   27.20)
ramon: poll                 wall=13.000s usage=12.979s mem=28752KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   68   9750 287141 1107500  8790/8475/478   28662/3522    55  485   27.29)
ramon: poll                 wall=14.000s usage=13.978s mem=28764KiB load=1.00 rootload=1.00
(smt.stats   69   9884 290014 1130309  9066/8511/478   28956/3540    55  485   27.39)
(smt.delete-inactive-clauses  :num-deleted-clauses 375)
(smt.stats   70  10031 293155 1151958  9118/8819/478   29046/3540    55  485   27.39)
ramon: poll                 wall=15.000s usage=14.978s mem=28840KiB load=1.00 rootload=1.00
(smt.stats   71  10192 298520 1192177  9375/8842/478   29579/3545    55  485   27.39)
(smt.stats   72  10369 302168 1225722  9807/9109/478   30028/3550    55  485   27.50)
ramon: poll                 wall=16.000s usage=15.978s mem=29024KiB load=1.00 rootload=1.00
(smt.stats   73  10563 306374 1268193  9952/9567/478   31916/3552    55  485   27.73)
ramon: poll                 wall=17.000s usage=16.978s mem=29420KiB load=1.00 rootload=1.00
(smt.stats   74  10776 316851 1318603 10160/9671/479   33597/4192    56  489   27.96)
(smt.stats   75  11010 326350 1368331 10347/9908/479   34651/4204    56  489   28.15)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   76  11267 339328 1402038 10492/10072/479   35314/4211    56  489   28.24)
ramon: poll                 wall=18.000s usage=17.978s mem=29736KiB load=1.00 rootload=1.00
(smt.stats   77  11549 348710 1429837 10634/10254/479   35740/4212    56  489   28.24)
(smt.stats   78  11650 351842 1440452 10827/10365/479   35978/4215    56  489   28.35)
ramon: poll                 wall=19.000s usage=18.977s mem=29928KiB load=1.00 rootload=1.00
(smt.stats   79  11761 354260 1449794 11115/10554/479   36180/4216    56  489   28.44)
(smt.stats   80  11883 358019 1461803 11255/10854/479   36355/4220    56  489   28.54)
ramon: poll                 wall=20.000s usage=19.977s mem=30060KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:51:31 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.986s
ramon: group.utime          19.970s
ramon: group.stime          0.016s
ramon: group.mempeak        30316KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
