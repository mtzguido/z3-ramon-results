ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:11:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40217 MiB
ramon: sys.mem.avail        61378 MiB
ramon: sys.nprocs           1322
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ZliphcT9JnvY.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3894345
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   138/136     0/0  61       0    18.47   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 172 :time 0.00)
(sat.stats    179   2624    0   146/144   177/142  72       0    18.95   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 217 :time 0.00)
(sat.stats    179   2624    0   146/144   177/142  72       0    18.95   0.03)
(sat.stats    179   2624    0   146/144   177/142  72       0    18.95   0.03)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 289818.95 :time 0.00)
(sat.stats    179   2624    0   143/141   185/150  72       0    18.95   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 327 :time 0.00)
(sat.stats    332   6490    1   147/145   336/274  73       0    19.05   0.06)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    335   6517    2   147/145   339/276  73       0    19.05   0.06)
(sat.stats    341   6630    3   147/145   345/281  73       0    19.05   0.06)
(sat.stats    344   6688    4   147/145   348/283  73       0    19.05   0.07)
(sat.stats    347   6757    5   147/145   351/285  73       0    19.05   0.07)
(sat.stats    350   6795    6   147/145   354/288  73       0    19.05   0.07)
(sat.stats    353   6838    7   147/145   357/290  73       0    19.05   0.07)
(sat.stats    357   6883    8   147/145   361/293  73       0    19.05   0.07)
(sat.stats    360   6918    9   147/145   364/296  73       0    19.05   0.07)
(sat.stats    363   6949   10   150/148   367/296  73       0    19.05   0.08)
(sat.stats    366   6981   11   151/149   370/296  73       0    19.05   0.08)
(sat.stats    369   7013   12   151/149   373/296  73       0    19.05   0.08)
(sat.stats    373   7033   13   155/153   377/297  73       0    19.05   0.09)
(sat.stats    377   7069   14   156/154   381/299  73       0    19.05   0.09)
ramon: poll                 wall=1.000s usage=0.919s mem=21592KiB load=0.92 rootload=0.91
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1074  12714   21  5754/5751  1152/374  73       0    20.86   1.43)
(sat.stats   1077  12754   22  6377/6374  1155/374  73       0    20.96   1.43)
(sat.stats   1080  12798   23  6389/6386  1160/375  73       0    20.96   1.43)
(sat.stats   1597  18247  152 14877/14874  1795/463  73       0    22.35   1.85)
ramon: poll                 wall=2.000s usage=1.919s mem=24092KiB load=1.00 rootload=1.00
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 2149 := 1494 << 6
 (sat-cleaner :elim-literals 3 :elim-clauses 2 :cost 7452 :time 0.00)
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&95616
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 1494 := 1494 << 6
ramon: poll                 wall=3.000s usage=2.919s mem=25372KiB load=1.00 rootload=1.00
(sat.stats   2396  31445  218 22918/22912  2664/806  92       0    24.20   3.03)
ramon: poll                 wall=4.005s usage=3.927s mem=25884KiB load=1.00 rootload=1.00
(sat.stats   3595  39033  536 33471/33465  3886/828  92       0    24.97   4.67)
ramon: poll                 wall=5.000s usage=4.919s mem=26396KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 85 :elim-clauses 5 :cost 22880 :time 0.00)
 (sat-cleaner :elim-literals 360 :elim-clauses 0 :cost 24356 :time 0.00)
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 203 := 20 << 20
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&20971520
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 1280 := 20 << 20
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 4194304 := 4 << 4
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&64
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 256 := 4 << 4
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 80 := 5 << 5
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&160
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 320 := 5 << 5
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 64 := 2 << 2
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 32 := 1 << 1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 96 := 3 << 3
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&24
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 192 := 3 << 3
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&8
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 128 := 2 << 2
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 64 := 1 << 1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 16 := 8 << 8
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&2048
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 32 := 8 << 8
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 2304 := 9 << 9
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&4608
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 36 := 9 << 9
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 5120 := 10 << 10
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&10240
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 40 := 10 << 10
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 11264 := 11 << 11
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&22528
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 44 := 11 << 11
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 28672 := 14 << 14
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&229376
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 56 := 14 << 14
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 114688 := 7 << 7
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&896
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 28 := 7 << 7
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 1536 := 12 << 12
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&49152
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 48 := 12 << 12
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 61440 := 15 << 15
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&491520
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 60 := 15 << 15
ramon: poll                 wall=6.000s usage=5.919s mem=27932KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 848 :elim-clauses 5 :cost 26498 :time 0.00)
 (sat-cleaner :elim-literals 9 :elim-clauses 4 :cost 26345 :time 0.00)
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 26624 := 13 << 13
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&106496
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 425984 := 13 << 13
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 34 := 29 << 29
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 118 := 32 << 32
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 37 << 37
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 188124 := 23 << 23
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 327411 := 40 << 40
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 278248 := 34 << 34
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 20935 := 21 << 21
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 245457 := 30 << 30
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 253670 := 31 << 31
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 384726 := 47 << 47
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 36 << 36
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 212721 := 26 << 26
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 368349 := 45 << 45
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 155349 := 19 << 19
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 311020 := 38 << 38
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 204507 := 25 << 25
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 286441 := 35 << 35
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 270032 := 33 << 33
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 376530 := 46 << 46
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 220897 := 27 << 27
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 196322 := 24 << 24
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 360167 := 44 << 44
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 335573 := 41 << 41
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 229088 := 28 << 28
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 351952 := 43 << 43
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 319213 := 39 << 39
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 179924 := 22 << 22
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 138974 := 17 << 17
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 147160 := 18 << 18
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 130785 := 16 << 16
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 343790 := 42 << 42
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   6749 119574  640 39974/39961  5837/1168 189       0    28.53   6.35)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 29722 :time 0.00)
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&175921860444160
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 368640 := 45 << 45
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&10445360463872
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 1337006139375616 := 38 << 38
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&9961472
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 5222680231936 := 19 << 19
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&140737488355328
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 12919261626368 := 47 << 47
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&184717953466368
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 11544872091648 := 42 << 42
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&96757023244288
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 11819749998592 := 43 << 43
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&584115552256
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 9345848836096 := 34 << 34
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&4718592
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 4947802324992 := 18 << 18
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&7516192768
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 7696581394432 := 28 << 28
ramon: poll                 wall=7.000s usage=6.919s mem=30040KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.005s usage=7.927s mem=30552KiB load=1.00 rootload=1.01
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&211106232532992
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 387028092977152 := 44 << 44
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&140737488355328
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 985162418486527 := 46 << 46
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&43980465111040
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 10485760 := 40 << 40
(sat.stats  10428 193632  658 41692/41654  7919/1419 288       0    30.25   8.46)
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&21440476741632
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 42880953483264 := 39 << 39
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&90159953477632
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 22539988369408 := 41 << 41
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&5085241278464
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 81363860455424 := 37 << 37
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&2473901162496
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 79164837199872 := 36 << 36
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&1202590842880
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 76965813944320 := 35 << 35
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&15569256448
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 996432412672 := 29 << 29
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&1048576
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 549755813888 := 16 << 16
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&44040192
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 721554505728 := 21 << 21
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&2228224
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 584115552256 := 17 << 17
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&92274688
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 755914244096 := 22 << 22
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&192937984
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 790273982464 := 23 << 23
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&3623878656
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 927712935936 := 27 << 27
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&32212254720
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 1030792151040 := 30 << 30
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&66571993088
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 1065151889408 := 31 << 31
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&283467841536
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 1133871366144 := 33 << 33
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&137438953472
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 1099511627776 := 32 << 32
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&402653184
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 824633720832 := 24 << 24
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&838860800
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 858993459200 := 25 << 25
band: (band[48] (if (or #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 ...) 0 1) (shl[48] (bv2int %0) (mod #59 48))) 0 := 0&1744830464
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 893353197568 := 26 << 26
ramon: poll                 wall=9.000s usage=8.919s mem=31320KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 15 :elim-clauses 2354 :cost 43799 :time 0.00)
ramon: poll                 wall=10.005s usage=9.927s mem=31832KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.919s mem=31832KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.918s mem=31872KiB load=1.00 rootload=1.00
(sat.stats  13270 291800  672 42921/42882  7253/1520 390       0    31.26  12.57)
ramon: poll                 wall=13.000s usage=12.918s mem=31872KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.918s mem=32508KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 40445 :time 0.00)
ramon: poll                 wall=15.000s usage=14.905s mem=33432KiB load=0.99 rootload=0.98
ramon: poll                 wall=16.000s usage=15.903s mem=33436KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.903s mem=33436KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.901s mem=34148KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.901s mem=34404KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 70 :elim-clauses 1 :cost 46900 :time 0.00)
ramon: poll                 wall=20.005s usage=19.909s mem=34404KiB load=1.00 rootload=1.01
ramon: end                  Wed Dec 25 16:12:00 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.988s
ramon: group.utime          19.956s
ramon: group.stime          0.032s
ramon: group.mempeak        34404KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.00
