ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:02:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28909 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EmG8ya41HROA.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             709499
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 33 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 33 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 33 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 88 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 33 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 33 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 88 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[55] (bv2int %0) (mod (bv2int %0) 55)) 36028797018963966 := 8589934628 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 88 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[55] (bv2int %0) (mod (bv2int %0) 55)) 8589934629 := 8589934628 >>l 33
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   69.9301     10000        49          0            1        2)
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 8589934628 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[55] (bv2int %0) (mod (bv2int %0) 55)) 8589934629 := 8589934628 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 8589934573 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[55] (bv2int %0) (mod (bv2int %0) 55)) 8589934629 := 8589934628 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 88 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[55] (bv2int %0) (mod (bv2int %0) 55)) 8589934629 := 8589934628 >>l 33
(smt.stats    0    101   5114    793  1274/1136/91     105/9     4   13   52.19)
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 1 := 1&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 1 := 1&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 2&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1&8388608
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1 := 17179869223 >>l 33
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 4 := 4&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 4 := 4&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 8 := 44&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 16 := 44&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 32 := 704&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 64 := 704&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 128 := 704&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 256 := 704&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 512 := 704&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 1024 := 11264&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2048 := 11264&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 4096 := 11264&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 8192 := 11264&8388608
(sat.ddfw       1      1   35.3392     20001        98          1            1        3)
(sat.ddfw       1      1   35.0263     40001       196          2            1        5)
(smt.stats    1    202   5515   1143  2520/2073/101     235/13     5   15   53.34)
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 214016 := 214017&8388608
(smt.stats    2    313   6757   2210  2722/2439/192     491/106     7   33   53.15)
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 230400 := 231425&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 230400 := 231425&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 230400 := 232449&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 230400 := 231937&8388608
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 230400 := 232449&8388608
ramon: poll                 wall=1.000s usage=0.790s mem=55452KiB load=0.79 rootload=0.78
(sat.ddfw       1      1   33.0033     70001       343          3            1        8)
(smt.stats    3    414   9084   7335  2786/2559/210     724/168    10   51   53.24)
(smt.stats    4    525  11649  11684  3069/2817/220    1081/255    11   53   53.34)
(smt.stats    5    647  14087  19332  3131/2846/224    1340/295    13   71   53.53)
(sat.ddfw       1      1   30.8642    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  15558  21280  3235/2904/224    1497/383    14   75   53.72)
(sat.ddfw       1      1   27.0997    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.799s mem=56044KiB load=1.01 rootload=1.01
(smt.stats    7    859  17031  26027  3419/3024/224    1632/387    14   75   53.81)
(smt.stats    8    981  18395  28715  3594/3168/224    1829/387    14   75   53.91)
(smt.stats    9   1115  21896  36848  3610/3350/225    2108/568    15   76   53.91)
(smt.stats   10   1216  27851  47703  3622/3362/225    2237/568    15   76   54.01)
(sat.ddfw       1      1   23.2472    220001      1078          6            1       23)
(smt.stats   11   1327  31311  54853  3638/3374/226    2384/619    16   77   54.12)
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 1 := 1346034160631808&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1346034160631808&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1346034160631808&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 1 := 1346034160631808&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1415956228210688&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1346506607034368&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1346506607034368&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1346506607034368&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1346506607034368&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1346506607034368&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1346506607034368&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1346506607034368&8192
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 1347451499839488&8192
(smt.stats   12   1449  33280  60770  3800/3390/228    2624/650    17   85   54.22)
ramon: poll                 wall=3.000s usage=2.742s mem=56340KiB load=0.94 rootload=0.94
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 4 := 3073&4096
(smt.stats   13   1583  35872  67337  3841/3581/257    2915/859    19  108   54.22)
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1025&4096
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1025 := 4059 >>l 44
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1025&4096
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1025 := 4004 >>l 44
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1025&4096
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1025 := 4059 >>l 44
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1025&4096
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1025 := 4004 >>l 44
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1025&4096
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1025 := 4059 >>l 44
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 8 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 8 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 8 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 8 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 8 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 8 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 16 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 384 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 384 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 384 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 320 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 320 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 320 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 288 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 256 := 513&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 512 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 2 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 1 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 1 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
lshr: (lshr[55] (bv2int %0) (mod (bv2int %0) 55)) 513 := 9042512475848709 >>l 44
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
lshr: (lshr[55] (bv2int %0) (mod (bv2int %0) 55)) 513 := 9042512475848709 >>l 44
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 1 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 2 := 514&4096
(smt.stats   14   1730  38858  74242  4007/3622/264    3113/870    19  108   54.41)
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 1 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 2 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 4 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 8 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 16 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 32 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 64 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 128 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 256 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 256 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 32 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 64 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 128 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 32 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 4 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 8 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 4 := 514&4096
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 514&4096
band: (band[55] (lshr[55] (bv2int %0) (mod #109 55)) (if (= #506 54) 36028797018963968 (if #508 18014398509481984 #614))) 4 := 514&4096
(sat.ddfw       1      1   20.8955    290001      1421          7            1       30)
(smt.stats   15   1831  41733  81810  4054/3788/396    3230/916    21  146   54.70)
(smt.stats   16   1942  44717  89432  4136/3852/398    3416/933    22  148   54.92)
(smt.stats   17   2064  48536  99542  4193/3897/399    3673/933    22  148   55.14)
ramon: poll                 wall=4.003s usage=3.669s mem=57768KiB load=0.92 rootload=0.93
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2198  54116 113323  4316/3914/399    3938/1062    23  150   55.43)
(sat.ddfw       1      1   18.8768    370001      1813          8            1       38)
(smt.stats   19   2345  58081 127641  4523/4029/399    4384/1068    23  150   55.62)
(smt.stats   20   2506  60699 136646  4747/4273/399    4927/1074    23  150   55.83)
(smt.stats   21   2607  63662 150240  4890/4511/399    5336/1075    23  150   56.34)
ramon: poll                 wall=5.003s usage=4.830s mem=58984KiB load=1.16 rootload=1.16
(smt.stats   22   2718  66026 158611  4966/4562/399    6042/1075    23  150   56.63)
(sat.ddfw       1      1   17.1854    460001      2254          9            1       47)
(smt.stats   23   2840  67409 162103  5327/4705/399    6260/1077    23  150   57.21)
ramon: poll                 wall=6.000s usage=5.861s mem=59924KiB load=1.03 rootload=1.03
(smt.stats   24   2974  69749 172735  5578/5248/407    6815/1395    24  154   57.21)
(smt.stats   25   3121  75937 193957  5591/5261/411    7065/1554    25  180   57.30)
(sat.ddfw       1      1   15.7654    560001      2745         10            1       57)
(smt.stats   26   3282  82333 210727  5834/5267/411    7469/1557    25  180   57.40)
ramon: poll                 wall=7.000s usage=6.861s mem=60308KiB load=1.00 rootload=1.00
(smt.stats   27   3459  87685 233748  6202/5541/411    8045/1558    25  180   57.49)
(smt.stats   28   3560  89896 244278  6204/5874/412    8241/1844    26  186   57.69)
(smt.stats   29   3671  91566 254454  6230/5882/412    8377/1844    26  186   57.79)
(sat.ddfw       1      1   14.5426    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.861s mem=60312KiB load=1.00 rootload=1.00
(smt.stats   30   3793  96051 273420  6341/5948/413    8727/1918    27  186   58.13)
(smt.stats   31   3927  98702 291730  6543/6071/413    9283/1922    27  186   58.13)
(smt.stats   32   4074 103193 318983  6564/6232/413    9899/1922    27  186   58.23)
band: (band[55] (lshr[64] (bv2int %0) (mod #623 64)) (if (= #633 63) 36893488147419103232 (if #635 18446744073709551616 #759))) 0 := 1071104&0
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #622) 64)) 1071104 := 4126 >>l 1
(smt.stats   33   4235 106943 335940  6621/6237/413   10669/1927    27  186   58.33)
(smt.stats   34   4412 114971 371089  6645/6308/418   11039/2223    28  187   58.42)
(sat.ddfw       1      1   13.4816    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=9.069s mem=60928KiB load=1.21 rootload=1.21
(smt.stats   35   4606 119312 389315  6707/6328/418   11454/2254    29  187   58.53)
(smt.stats   36   4707 121717 401265  6847/6454/419   11666/2255    29  187   58.63)
ramon: poll                 wall=10.000s usage=10.058s mem=61232KiB load=0.99 rootload=0.99
(smt.stats   37   4818 123037 410810  7248/6595/419   11935/2313    30  194   58.87)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4940 125045 424557  7376/6924/419   12187/2313    30  194   59.06)
(sat.ddfw       1      1   12.5701    920001      4509         13            1       93)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 131078 458266  7405/7030/419   13010/2313    30  194   59.06)
ramon: poll                 wall=11.000s usage=11.057s mem=61780KiB load=1.00 rootload=0.99
(smt.stats   40   5221 137545 499745  7410/7035/420   13491/2562    31  198   59.06)
(smt.stats   41   5382 143673 548339  7415/7040/422   13965/2595    32  206   59.40)
(smt.stats   42   5559 150442 586190  7425/7050/423   14824/2629    33  212   59.51)
(sat.ddfw       1      1   11.7796   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=12.057s mem=61864KiB load=1.00 rootload=1.00
(smt.stats   43   5753 160141 644450  7437/7062/424   15244/2796    34  219   59.61)
ramon: poll                 wall=13.000s usage=13.081s mem=62028KiB load=1.02 rootload=1.03
(smt.stats   44   5966 169991 689209  7449/7074/426   16138/3018    36  258   59.71)
(sat.ddfw       1      1   11.0824   1210001      5931         15            1      123)
(smt.stats   45   6067 173576 702986  7484/7076/426   16702/3018    36  258   59.80)
ramon: poll                 wall=14.000s usage=14.026s mem=62116KiB load=0.94 rootload=0.94
(smt.stats   46   6178 176130 707725  7488/7113/426   16888/3018    36  258   59.80)
(smt.stats   47   6300 183281 747310  7498/7123/426   17401/3018    36  258   59.80)
(smt.stats   48   6434 187737 768323  7509/7134/430   17945/3342    37  281   59.90)
ramon: poll                 wall=15.000s usage=15.025s mem=62592KiB load=1.00 rootload=1.00
(smt.stats   49   6581 195064 788137  7512/7137/430   18270/3342    37  281   60.10)
(sat.ddfw       1      1   10.4822   1370001      6715         16            1      139)
(smt.stats   50   6742 204483 841388  7524/7149/430   18743/3342    37  281   60.10)
ramon: poll                 wall=16.000s usage=16.180s mem=62768KiB load=1.16 rootload=1.16
(smt.stats   51   6919 217277 924251  7549/7152/430   19013/3461    38  321   60.53)
(smt.stats   52   7113 226355 952911  7570/7195/430   19536/3461    38  321   60.63)
(smt.stats   53   7326 242707 974192  7571/7196/430   19860/3461    38  321   60.63)
(sat.ddfw       1      1   10.1857   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=17.261s mem=62996KiB load=1.08 rootload=1.08
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   54   7560 250800 1014282  7571/7196/430   20298/3461    38  321   60.63)
(smt.stats   55   7661 255694 1048237  7581/7204/430   20738/3461    38  321   60.73)
(smt.stats   56   7773 263041 1085283  7599/7218/434   21030/3677    39  337   60.73)
(smt.stats   57   7895 268002 1119872  7616/7229/434   21203/3677    39  337   60.83)
ramon: poll                 wall=18.000s usage=18.260s mem=63224KiB load=1.00 rootload=1.00
(smt.stats   58   8029 271872 1137480  7626/7249/436   21667/3696    40  371   60.83)
(smt.stats   59   8176 278187 1175215  7631/7254/436   22083/3696    40  371   60.94)
(sat.ddfw       1      1   9.64837   1720001      8431         18            1      174)
(smt.stats   60   8337 284695 1221416  7632/7255/436   22338/3799    41  373   60.94)
ramon: poll                 wall=19.000s usage=19.260s mem=63432KiB load=1.00 rootload=1.00
(smt.stats   61   8514 290235 1252385  7634/7257/438   23318/3842    42  417   61.03)
(smt.stats   62   8708 296949 1297122  7656/7263/438   23689/3842    42  417   61.22)
ramon: poll                 wall=20.000s usage=20.260s mem=63832KiB load=1.00 rootload=1.00
(smt.stats   63   8922 302394 1334164  7714/7321/446   24235/3946    43  454   61.22)
ramon: end                  Fri Nov  1 22:02:39 2024
ramon: root.execname        z3
ramon: root.utime           20.320s
ramon: root.stime           0.000s
ramon: group.total          20.334s
ramon: group.utime          20.326s
ramon: group.stime          0.008s
ramon: group.mempeak        64344KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.01
