ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:24:38 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30444 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1414
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2CXGL0trxIMr.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             222833
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   252/252     0/0  61       0    18.52   0.00)
(sat.stats    103    604    0   252/252   103/31  61       0    18.89   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    604    0   252/252   103/31  61       0    18.89   0.00)
(sat.stats    103    604    0   252/252   103/31  61       0    18.89   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 391618.89 :time 0.00)
(sat.stats    103    604    0   254/254    39/30  61       0    18.89   0.01)
(sat.stats    169   1599    1   254/254   105/84  61       0    18.99   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    172   1675    2   254/254   108/84  61       0    18.99   0.01)
(sat.stats    175   1753    3   254/254   111/84  61       0    18.99   0.01)
(sat.stats    178   1829    4   254/254   114/84  61       0    18.99   0.01)
(sat.stats    181   1905    5   254/254   117/84  61       0    18.99   0.01)
(sat.stats    184   1990    6   254/254   120/84  61       0    18.99   0.01)
(sat.stats    187   2067    7   254/254   123/84  61       0    18.99   0.01)
(sat.stats    190   2128    8   254/254   126/85  61       0    18.99   0.01)
(sat.stats    193   2230    9   254/254   129/86  61       0    18.99   0.01)
(sat.stats    196   2332   10   254/254   132/89  61       0    18.99   0.01)
(sat.stats    199   2446   11   254/254   135/92  61       0    18.99   0.01)
(sat.stats    202   2570   12   254/254   138/95  61       0    18.99   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    211   2813   15   254/254   147/104  61       0    18.99   0.01)
(sat.stats    345   5677   17   255/255   281/186  61       0    19.29   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4279 :time 0.00)
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #50))) 0 := 111 << 9
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 324 := 511&210432
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 202 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 264 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 240 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #853 #857) 64)) 1152921504606834595 := 4503599627370582 << 8
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
band: (band[60] (if (= #387 63) 1 (if #579 3 #846)) (shl[64] (* 2 #56) (mod #861 64))) 1 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
band: (band[60] (if (= #387 63) 1 (if #579 3 #846)) (shl[64] (* 2 #56) (mod #861 64))) 204 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
band: (band[60] (if (= #387 63) 1 (if #579 3 #846)) (shl[64] (* 2 #56) (mod #861 64))) 2 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 32 := 511&22016
(sat.stats    552   9253   26  1345/1342   496/238  82       0    20.36   0.15)
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 320 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 384 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 256 := 511&22016
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5435 :time 0.00)
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 1 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
band: (band[60] (if (= #387 63) 1 (if #579 3 #846)) (shl[64] (* 2 #56) (mod #861 64))) 56 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
band: (band[60] (if (= #387 63) 1 (if #579 3 #846)) (shl[64] (* 2 #56) (mod #861 64))) 80 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
band: (band[60] (if (= #387 63) 1 (if #579 3 #846)) (shl[64] (* 2 #56) (mod #861 64))) 64 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
band: (band[60] (if (= #387 63) 1 (if #579 3 #846)) (shl[64] (* 2 #56) (mod #861 64))) 32 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
band: (band[60] (if (= #387 63) 1 (if #579 3 #846)) (shl[64] (* 2 #56) (mod #861 64))) 256 := 511&22016
band: (band[60] (if (= #64 59) 1 (if #602 3 #771)) (shl[60] (bv2int %0) (+ 60 #774))) 0 := 511&22016
band: (band[60] (if (= #387 63) 1 (if #579 3 #846)) (shl[64] (* 2 #56) (mod #861 64))) 128 := 511&22016
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 5634 :time 0.00)
ramon: poll                 wall=1.000s usage=0.990s mem=34112KiB load=0.99 rootload=0.98
(sat.stats   1209  17913   44 66285/66282  1925/1022 205       0    36.46   1.48)
(sat.stats   1212  17918   45 66677/66674  1930/1024 205       0    36.57   1.49)
ramon: poll                 wall=2.000s usage=1.990s mem=40392KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.989s mem=52580KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.989s mem=56744KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.989s mem=59244KiB load=1.00 rootload=1.00
(sat.stats   1598  19339  173 127034/127031  2644/1414 205       0    58.95   5.18)
ramon: poll                 wall=6.000s usage=5.988s mem=61488KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.988s mem=63564KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.988s mem=66092KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.988s mem=67500KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.987s mem=69040KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.987s mem=70700KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.987s mem=71992KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.987s mem=73236KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.987s mem=91244KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.986s mem=92532KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.986s mem=93824KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.986s mem=96496KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.986s mem=97064KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.985s mem=98192KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.985s mem=99544KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:24:58 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          19.999s
ramon: group.utime          19.947s
ramon: group.stime          0.052s
ramon: group.mempeak        104MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              1.00
