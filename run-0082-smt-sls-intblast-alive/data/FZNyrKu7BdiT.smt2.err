ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:04:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28901 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FZNyrKu7BdiT.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             715686
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1      62.5     10000        49          0            1        2)
(sat.ddfw       1      1   33.3367     20001        98          1            1        3)
(smt.stats    0    101   2166    320  1148/1005/98     113/16     5   16   51.93)
(sat.ddfw       1      1   36.7647     40001       196          2            1        5)
(smt.stats    1    202   3847    923  1621/1413/98     237/17     5   16   52.13)
(sat.ddfw       1      1   34.3249     70001       343          3            1        8)
(smt.stats    2    313   6574   2264  1792/1600/100     358/61     6   19   52.13)
ramon: poll                 wall=1.000s usage=0.849s mem=54332KiB load=0.85 rootload=0.84
(smt.stats    3    414   8970   3533  2140/1882/100     470/69     6   19   52.34)
(smt.stats    4    525  10417   4969  2333/2077/109     553/104     8   36   52.43)
(smt.stats    5    647  13350   7723  2616/2333/109     678/104     8   36   52.54)
(sat.ddfw       1      1   30.9598    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  15268   9991  2684/2406/109     792/104     8   36   52.66)
(smt.stats    7    859  17078  12916  2707/2486/109     909/104     8   36   52.66)
(smt.stats    8    981  18756  16729  2722/2499/109    1033/105     8   36   52.77)
(smt.stats    9   1115  21632  19420  2727/2513/109    1177/105     8   36   52.77)
(smt.stats   10   1216  24430  22439  2738/2522/109    1279/105     8   36   52.77)
(smt.stats   11   1327  27020  25183  2739/2523/109    1389/105     8   36   52.86)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  29056  28656  2753/2531/109    1513/105     8   36   52.96)
(sat.ddfw       1      1    27.578    160000       784          5            1       17)
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906943 := 274877906943&2199023238907
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906936 := 274877906943&2199023238907
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906936 := 274877906943&2199023238907
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906936 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906936 := 274877906943&2199023238907
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906936 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906936 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906936 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906935 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906928 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906912 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906943 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906942 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906685 := 274877906943&2199023238907
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906685 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 274877906684 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 256 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1024 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1280 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1792 := 274877906943&2199023238912
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 768 := 274877906943&2199023238912
(smt.stats   13   1583  31466  33499  2811/2592/190    1650/165     9   54   53.16)
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 512 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 516 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 516 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1536 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1540 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1548 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1536 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1540 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1548 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 2684 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 3613 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 3612 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1628 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1564 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1596 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1596 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1596 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1692 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1692 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1692 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1724 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1756 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1788 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1788 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1756 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1788 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1756 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1788 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 2812 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 2685 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 2685 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 2685 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 2685 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 2685 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 2684 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 2812 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 3836 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 3709 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 3708 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 3836 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 3836 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 3836 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 3836 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 7805 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 7804 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 7932 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 7932 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 7932 := 274877906943&2199023238908
ramon: poll                 wall=2.000s usage=1.848s mem=56208KiB load=1.00 rootload=0.99
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 15996 := 274877906943&2199023238908
(smt.stats   14   1730  33113  37698  3076/2765/291    1902/184     9   54   53.92)
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 65148 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 48892 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 65276 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 81661 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 81660 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 81661 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 81661 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 81660 := 274877906943&2199023238908
(smt.stats   15   1831  33666  40257  3433/2903/316    2096/220    10   79   54.02)
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 48893 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 48892 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 48892 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 48892 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 48892 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 48892 := 274877906943&2199023238908
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 48892 := 274877906943&2199023238908
(smt.stats   16   2064  39266  56742  3532/3306/374    3175/739    13  141   54.30)
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #786 #790) 64)) 4398046511104 := 4398046511030 << 34
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #786 #790) 64)) 4398046511104 := 4398046511030 << 34
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #786 #790) 64)) 4398046511104 := 4398046511030 << 34
(sat.ddfw       1      1   24.6007    220001      1078          6            1       23)
(smt.stats   17   2198  41105  62080  3634/3336/380    3390/756    14  143   54.59)
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1024 := 17179869183&295936
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1024 := 17179869183&295936
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1024 := 17179869183&295936
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1536 := 17179869183&295936
(smt.stats   18   2345  44423  78028  3976/3715/393    4088/804    15  151   54.74)
(smt.stats   19   2506  47491  90494  4148/3768/393    4839/1022    16  163   54.83)
ramon: poll                 wall=3.003s usage=2.859s mem=57004KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   22.0195    290001      1421          7            1       30)
(smt.stats   20   2607  50456  99159  4372/3982/393    5096/1026    16  163   54.93)
(smt.stats   21   2718  54046 113551  4499/4165/393    5289/1029    16  163   55.02)
ramon: poll                 wall=4.003s usage=3.857s mem=57300KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    19.856    370001      1813          8            1       38)
(smt.stats   22   2840  57472 132802  4630/4388/394    5536/1399    17  171   55.02)
(smt.stats   23   2974  62114 157216  4651/4432/397    5988/1518    18  181   55.23)
(smt.stats   24   3121  65983 169391  4772/4492/398    6445/1855    19  185   55.33)
ramon: poll                 wall=5.000s usage=4.850s mem=57564KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   18.0905    460001      2254          9            1       47)
(smt.stats   25   3282  70052 194499  4914/4693/403    6646/1883    20  195   55.43)
(smt.stats   26   3459  73597 207630  5141/4900/407    7550/2256    21  214   55.62)
(smt.stats   27   3560  76088 214754  5166/4920/408    7770/2256    21  214   55.71)
(smt.stats   28   3671  80853 240436  5178/4929/412    8397/2537    23  252   55.94)
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 7&1
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #786 #790) 64)) 1132496976609281 := 2199023255624 << 3
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #786 #790) 64)) 1132496976609281 := 2199023255624 << 3
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #786 #790) 64)) 1132496976609281 := 2199023255624 << 3
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #786 #790) 64)) 1132496976609280 := 2199023255624 << 3
band: (band[41] (if (= #323 63) 0 (if #553 1 #779)) (shl[64] (* 2 #102) (mod #794 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #786 #790) 64)) 1132496976609280 := 2199023255624 << 3
(smt.stats   29   3793  83259 255932  5214/4944/412    8605/2541    23  252   56.40)
(smt.stats   30   3927  86811 271311  5258/4998/421    8853/2568    24  258   56.50)
ramon: poll                 wall=6.000s usage=5.850s mem=58812KiB load=1.00 rootload=0.99
(sat.ddfw       1      1    16.592    560001      2745         10            1       57)
(smt.stats   31   4074  89076 286058  5337/5013/422    9284/2571    25  303   56.69)
ramon: poll                 wall=7.000s usage=6.849s mem=59180KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4235  92797 304808  5588/5179/423    9618/2571    25  303   57.17)
(sat.ddfw       1      1    15.299    670001      3284         11            1       68)
(smt.stats   33   4412  98356 333155  5718/5432/426    9994/2792    27  316   57.17)
ramon: poll                 wall=8.000s usage=7.850s mem=59356KiB load=1.00 rootload=1.00
(smt.stats   34   4606 103470 366689  5883/5446/428   10454/2840    28  326   57.27)
(sat.ddfw       1      1   14.1894    790001      3872         12            1       80)
(smt.stats   35   4707 104990 374781  5995/5646/428   10657/2842    28  326   57.56)
ramon: poll                 wall=9.003s usage=8.853s mem=60108KiB load=1.00 rootload=1.00
(smt.stats   36   4818 106705 380975  6102/5736/428   10785/2842    28  326   57.56)
(smt.stats   37   4940 109080 395479  6182/5896/431   11157/2878    29  331   57.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 129)
(smt.stats   38   5074 114757 419952  6232/5909/431   12039/2881    29  331   57.66)
(sat.ddfw       1      1    13.245    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.852s mem=60272KiB load=1.00 rootload=1.00
(smt.stats   39   5221 120768 443011  6427/5959/433   12703/3055    30  336   57.94)
ramon: poll                 wall=11.000s usage=10.848s mem=60300KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.4102   1060001      5196         14            1      108)
(smt.stats   40   5382 126928 461088  6776/6482/436   13151/3117    31  347   57.94)
ramon: poll                 wall=12.000s usage=11.849s mem=60364KiB load=1.00 rootload=1.00
(smt.stats   41   5559 132698 488251  6844/6548/437   13551/3156    32  372   58.13)
(smt.stats   42   5753 139199 518389  6953/6593/442   14179/3210    33  381   58.45)
(sat.ddfw       1      1   11.6704   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=12.848s mem=60588KiB load=1.00 rootload=1.00
(smt.stats   43   5966 144292 533948  7125/6707/442   14653/3386    34  400   58.54)
(smt.stats   44   6067 148100 558392  7155/6856/443   15222/3388    34  400   58.54)
(smt.stats   45   6178 151490 570772  7308/6947/447   15516/3555    35  402   58.64)
ramon: poll                 wall=14.000s usage=13.848s mem=60840KiB load=1.00 rootload=1.00
(smt.stats   46   6300 154994 589696  7455/7046/447   15805/3556    35  402   58.64)
(smt.stats   47   6434 159650 617853  7479/7180/447   16082/3597    36  407   59.02)
(smt.stats   48   6581 161869 644591  7495/7200/447   16383/3598    36  407   59.02)
(sat.ddfw       1      1     11.02   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=14.848s mem=61356KiB load=1.00 rootload=1.00
(smt.stats   49   6742 165932 667014  7601/7220/448   16790/3710    37  407   59.11)
ramon: poll                 wall=16.000s usage=15.846s mem=61472KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.4288   1540001      7549         17            1      156)
(smt.stats   50   6919 168268 675287  7955/7379/449   17105/3714    37  407   59.30)
ramon: poll                 wall=17.000s usage=16.844s mem=61576KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.841s mem=61664KiB load=1.00 rootload=1.00
(smt.stats   51   7113 172296 684029  8329/7756/451   18175/3715    37  407   59.40)
(sat.ddfw       1      1   9.89881   1720001      8431         18            1      174)
ramon: poll                 wall=19.003s usage=19.003s mem=61876KiB load=1.16 rootload=1.16
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7326 180510 721462  8579/8075/451   19830/3717    37  407   59.79)
ramon: poll                 wall=20.003s usage=19.966s mem=62044KiB load=0.96 rootload=0.96
ramon: end                  Fri Nov  1 22:04:23 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.976s
ramon: group.utime          19.940s
ramon: group.stime          0.036s
ramon: group.mempeak        62300KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
