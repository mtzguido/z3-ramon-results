ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:30:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29537 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1yr52qVntSfH.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             599696
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 1&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1 := 0 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 1&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1 := 0 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&2
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2 := 0 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&2
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ (sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   142.857     10000        49          0            1        2)
16 #559 #216 #444) 32)) 2 := 0 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65540 := 65539 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 327680 := 131072 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65540 := 65539 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131070 := 65539 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65539 << 16
(sat.ddfw       1      1   69.4514     20001        98          1            1        3)
(smt.stats    0    101   1374    795   577/519/124     100/13    10   19   51.48)
(sat.ddfw       1      1   73.2601     40001       196          2            1        5)
(smt.stats    1    202   2441   2421   814/709/131     274/34    12   30   51.67)
(sat.ddfw       1      1   72.1154     70001       343          3            1        8)
(sat.ddfw       1      1   64.3087    110001       539          4            1       12)
(smt.stats    2    313   2743   2715   924/796/131     398/54    12   30   52.15)
(sat.ddfw       1      1   59.6647    160000       784          5            1       17)
ramon: poll                 wall=1.000s usage=0.761s mem=54216KiB load=0.76 rootload=0.75
(smt.stats    3    416   3673   5645  1272/1182/142     676/151    13   33   52.15)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131072 := 131074 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131072 := 131074 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131072 := 131074 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&131071
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131071 := 131072 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 3
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 13 := 65536 << 3
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 1 := 65536 << 3
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 524289 := 131072 << 1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&131071
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131071 := 131072 << 1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1 := 131072 << 1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65535 := 65536 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 16 := 65536 << 2
(smt.stats    4    527   4337   7298  1361/1208/150     871/201    14   64   52.15)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 524289 := 131072 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147614720 := 131072 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 655360 := 131072 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1073741824 := 131072 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1073872896 := 131072 << 10
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 134217728 := 131072 << 10
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131070 := 65536 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147352576 := 131072 << 10
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147352576 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 655360 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131070 := 65536 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 134086656 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 655360 := 131072 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 10
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 134086656 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147614720 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147483648 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 537001984 := 131072 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 4 := 65536 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1073872896 := 131072 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 4 := 65536 << 14
(smt.stats    5    650   5426  11767  1491/1344/208    1060/277    17   79   52.44)
(sat.ddfw       1      1   54.3487    220001      1078          6            1       23)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    751   6120  13968  1634/1494/235    1241/290    18   84   52.53)
(smt.stats    7    862   7340  17380  1704/1538/238    1442/314    19   90   52.53)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131073 := 131074 << 14
(smt.stats    8    984   8612  23862  1776/1651/243    1646/360    21  101   52.64)
(smt.stats    9   1118  10085  29073  1786/1672/247    1864/376    23  119   52.73)
(sat.ddfw       1      1   49.7159    290001      1421          7            1       30)
(smt.stats   10   1219  11435  32007  1819/1687/247    2022/379    23  119   52.83)
(smt.stats   11   1330  13108  36531  1877/1719/247    2159/392    24  119   52.83)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  14597  41468  1912/1794/249    2407/405    25  122   52.92)
(sat.ddfw       1      1   45.6361    370001      1813          8            1       38)
ramon: poll                 wall=2.002s usage=1.765s mem=55192KiB load=1.00 rootload=0.99
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1573
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147616293 := 66322 << 13
(smt.stats   13   1586  15387  42850  2105/1806/249    2702/412    25  122   53.11)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&813
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615533 := 65942 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&557
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615277 := 65814 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1179
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615899 := 65942 << 7
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1179
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615899 := 65942 << 7
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1180
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615900 := 65942 << 7
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1180
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615900 := 65942 << 7
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&813
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615533 := 65942 << 6
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&813
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615533 := 65942 << 6
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&813
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615533 := 65942 << 6
(sat.ddfw       1      1   42.0364    460001      2254          9            1       47)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&777
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 2&777
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615497 := 65540 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&777
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&777
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 2&777
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 2&777
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615497 := 65540 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&793
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 2&793
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 2&793
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615513 := 65932 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&793
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 2&793
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 2&793
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615513 := 65932 << 16
(smt.stats   14   1733  17515  47650  2255/2128/288    3128/536    27  142   53.30)
(smt.stats   15   1834  18742  52554  2325/2184/290    3313/537    27  142   53.30)
(smt.stats   16   1945  20114  58126  2396/2268/292    3618/545    28  142   53.50)
(sat.ddfw       1      1     38.85    560001      2745         10            1       57)
(smt.stats   17   2067  21654  63341  2421/2279/293    4099/590    29  146   53.64)
(smt.stats   18   2201  23065  69754  2515/2303/293    4361/591    29  146   53.64)
(smt.stats   19   2348  24714  77853  2588/2402/293    4664/723    30  154   53.64)
ramon: poll                 wall=3.002s usage=2.761s mem=55772KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   36.0301    670001      3284         11            1       68)
(smt.stats   20   2509  26508  84064  2626/2487/295    5155/758    31  156   53.74)
(smt.stats   21   2610  28556  92177  2669/2520/295    5333/758    31  156   53.87)
(smt.stats   22   2721  30277 100257  2703/2571/303    5630/789    32  156   53.87)
(smt.stats   23   2843  31390 105924  2742/2574/303    5790/789    32  156   54.16)
(sat.ddfw       1      1   33.5758    790001      3872         12            1       80)
(smt.stats   24   2977  32811 116954  2807/2678/306    6064/818    33  171   54.16)
ramon: poll                 wall=4.000s usage=3.800s mem=56460KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   31.3934    920001      4509         13            1       93)
(smt.stats   25   3124  34139 121629  2863/2684/306    6264/823    33  171   54.35)
(smt.stats   26   3285  35384 126333  3097/2842/306    6505/879    34  183   54.35)
(sat.ddfw       1      1   29.5296   1060001      5196         14            1      108)
ramon: poll                 wall=5.000s usage=4.799s mem=56672KiB load=1.00 rootload=1.00
(smt.stats   27   3462  36783 133585  3500/3120/306    6749/893    34  183   54.54)
(smt.stats   28   3563  37725 145542  3545/3413/308    6985/939    35  184   54.54)
(smt.stats   29   3674  38637 158297  3557/3426/309    7205/969    36  194   54.54)
(smt.stats   30   3796  39581 169928  3590/3448/309    7511/969    36  194   54.54)
(sat.ddfw       1      1   27.8242   1210001      5931         15            1      123)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3930  41191 181082  3627/3492/310    7960/1052    37  196   54.74)
(smt.stats   32   4077  42962 188243  3668/3494/311    8446/1055    37  196   54.83)
ramon: poll                 wall=6.000s usage=5.857s mem=57176KiB load=1.06 rootload=1.05
(smt.stats   33   4238  44112 199532  3737/3557/311    8902/1055    37  196   55.05)
(sat.ddfw       1      1   26.8007   1370001      6715         16            1      139)
(smt.stats   34   4415  45817 221619  3833/3628/311    9369/1196    38  197   55.16)
(smt.stats   35   4609  49392 235682  4024/3791/317   10457/1243    39  201   55.45)
(smt.stats   36   4710  50261 246075  4032/3859/317   10773/1243    39  201   55.45)
(smt.stats   37   4821  51662 260174  4036/3866/318   11107/1314    40  216   55.45)
(sat.ddfw       1      1   25.7732   1540001      7549         17            1      156)
(smt.stats   38   4943  54192 277589  4077/3907/322   11445/1343    41  231   55.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=7.000s usage=6.996s mem=57768KiB load=1.14 rootload=1.14
(smt.stats   39   5077  56122 288349  4090/3914/322   11863/1343    41  231   55.55)
(smt.stats   40   5224  57287 306760  4094/3926/322   12263/1343    41  231   55.68)
(smt.stats   41   5385  59908 325259  4229/3978/322   12851/1357    41  231   55.96)
(sat.ddfw       1      1   24.3276   1720001      8431         18            1      174)
(smt.stats   42   5562  64351 348436  4287/4095/327   13342/1436    42  238   56.11)
ramon: poll                 wall=8.000s usage=8.085s mem=58496KiB load=1.09 rootload=1.09
(smt.stats   43   5756  68215 360379  4432/4121/327   13899/1449    42  238   56.20)
(smt.stats   44   5969  70905 389192  4609/4285/327   14356/1544    43  247   56.20)
(sat.ddfw       1      1   23.0164   1910001      9362         19            1      193)
(smt.stats   45   6070  72392 401271  4652/4451/327   14705/1544    43  247   56.30)
(smt.stats   46   6181  73131 410336  4655/4471/327   14894/1544    43  247   56.30)
(smt.stats   47   6303  74368 416294  4703/4478/327   15070/1546    43  247   56.39)
(smt.stats   48   6437  76142 443130  4747/4563/329   15491/1626    44  272   56.39)
ramon: poll                 wall=9.002s usage=9.169s mem=58888KiB load=1.08 rootload=1.09
(smt.stats   49   6584  78249 460405  4806/4590/335   15930/1631    44  272   56.49)
(sat.ddfw       1      1   22.1631   2110001     10343         20            1      214)
(smt.stats   50   6745  80926 488893  5006/4644/335   16246/1638    44  272   56.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6922  82495 506267  5054/4825/335   16463/1779    45  286   56.77)
(sat.ddfw       1      1    21.268   2320001     11372         21            1      235)
ramon: poll                 wall=10.000s usage=10.434s mem=59288KiB load=1.27 rootload=1.26
(smt.stats   52   7116  84570 533873  5385/5120/337   17128/1781    45  286   56.77)
(smt.stats   53   7329  87052 546427  5509/5208/337   17443/1840    46  296   57.25)
(sat.ddfw       1      1   20.4138   2540001     12451         22            1      257)
ramon: poll                 wall=11.000s usage=11.560s mem=59608KiB load=1.13 rootload=1.13
(sat.ddfw       1      1   19.8413   2770001     13578         23            1      280)
ramon: poll                 wall=12.000s usage=12.624s mem=60380KiB load=1.06 rootload=1.06
(smt.stats   54   7563  87584 547670  5850/5659/337   17700/1843    46  296   58.41)
(smt.stats   55   7664  88038 551938  6651/6362/337   17894/1843    46  296   58.02)
(smt.stats   56   7775  89305 570447  6819/6522/337   18047/1851    46  296   58.02)
(sat.ddfw       1      1   18.8103   3010001     14754         24            1      305)
(smt.stats   57   7897  91171 593524  7060/6716/337   18216/1859    46  296   58.22)
ramon: poll                 wall=13.000s usage=13.733s mem=60904KiB load=1.11 rootload=1.11
(smt.stats   58   8031  92328 597847  7245/6963/337   18539/1867    46  296   58.46)
(sat.ddfw       1      1   18.0414   3260001     15980         25            1      330)
ramon: poll                 wall=14.000s usage=14.733s mem=61228KiB load=1.00 rootload=1.00
(smt.stats   59   8178  93950 630307  7434/7167/337   19600/1870    46  296   58.66)
ramon: poll                 wall=15.000s usage=15.732s mem=61316KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.3183   3520001     17254         26            1      356)
(smt.stats   60   8339  96310 678499  7662/7376/337   20476/1871    46  296   58.85)
(smt.stats   61   8516  99633 724211  7778/7579/337   21794/1871    46  296   58.85)
ramon: poll                 wall=16.000s usage=16.732s mem=61460KiB load=1.00 rootload=1.00
(smt.stats   62   8710 103588 749456  7878/7609/337   22499/1872    46  296   58.95)
(sat.ddfw       1      1   16.6636   3790001     18578         27            1      383)
(smt.stats   63   8923 104663 788002  7921/7705/337   23289/1872    46  296   59.25)
ramon: poll                 wall=17.000s usage=17.731s mem=61772KiB load=1.00 rootload=1.00
(smt.stats   64   9157 107733 808772  8035/7801/337   24479/1873    46  296   59.44)
(smt.stats   65   9414 111289 848761  8180/7861/338   25305/3177    47  297   59.65)
(sat.ddfw       1      1   16.0606   4070001     19951         28            1      412)
(smt.stats   66   9515 112407 853447  8242/7995/338   25875/3178    47  297   59.65)
(smt.stats   67   9626 115060 890253  8310/8056/338   26133/3178    47  297   59.75)
(smt.stats   68   9748 116994 917319  8366/8114/338   26447/3179    47  297   59.75)
ramon: poll                 wall=18.000s usage=18.935s mem=62264KiB load=1.20 rootload=1.20
(smt.stats   69   9882 118727 945558  8419/8164/339   26878/3493    48  301   59.75)
(smt.delete-inactive-clauses  :num-deleted-clauses 1815)
(smt.stats   70  10029 121601 975599  8525/8233/339   25656/3494    48  301   59.94)
(sat.ddfw       1      1   15.4915   4360001     21372         29            1      441)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10190 124855 994965  8677/8354/340   25977/3669    49  307   59.94)
ramon: poll                 wall=19.000s usage=20.038s mem=62448KiB load=1.10 rootload=1.10
(smt.stats   72  10367 127210 1031284  8809/8512/340   26305/3669    49  307   59.94)
(smt.stats   73  10561 129854 1074807  8862/8636/340   27204/3670    49  307   60.03)
ramon: poll                 wall=20.002s usage=21.064s mem=62492KiB load=1.02 rootload=1.03
ramon: end                  Fri Nov  1 21:31:14 2024
ramon: root.execname        z3
ramon: root.utime           21.100s
ramon: root.stime           0.030s
ramon: group.total          21.135s
ramon: group.utime          21.103s
ramon: group.stime          0.032s
ramon: group.mempeak        62744KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.05
