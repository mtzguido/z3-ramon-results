ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:03:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29443 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/G7IgXN2KLZyr.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             337866
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   220/220     0/0  63       0    18.52   0.00)
(sat.stats    107    654    0   220/220   107/32  63       0    18.72   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 493 :time 0.00)
(sat.stats    107    654    0   220/220   107/32  63       0    18.72   0.00)
(sat.stats    107    654    0   220/220   107/32  63       0    18.72   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 397218.72 :time 0.00)
(sat.stats    107    654    0   222/222    72/31  63       0    18.72   0.00)
(sat.stats    121    947    1   222/222    86/43  63       0    18.82   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    124   1008    2   222/222    89/43  63       0    18.82   0.01)
(sat.stats    127   1095    3   222/222    92/45  63       0    18.82   0.01)
(sat.stats    130   1195    4   222/222    95/47  63       0    18.82   0.01)
(sat.stats    133   1290    5   222/222    98/47  63       0    18.82   0.01)
(sat.stats    136   1378    6   222/222   101/47  63       0    18.82   0.01)
(sat.stats    139   1444    7   222/222   104/47  63       0    18.82   0.01)
(sat.stats    142   1496    8   222/222   107/47  63       0    18.82   0.01)
(sat.stats    145   1544    9   222/222   110/47  63       0    18.82   0.01)
(sat.stats    148   1585   10   222/222   113/49  63       0    18.82   0.01)
(sat.stats    151   1679   11   222/222   116/52  63       0    18.82   0.01)
(sat.stats    154   1770   12   222/222   119/55  63       0    18.82   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    353   5632   17   322/322   320/162  63       0    19.59   0.09)
(sat.stats    357   5764   18   322/322   324/163  63       0    19.59   0.09)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3809 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4094 :time 0.00)
lshr: (lshr[44] (bv2int %1) (+ 44 (* 17592186044415 #64))) 0 := 1 >>l 27
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 0&131072
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 63 #548 #552) 64)) 524288 := 524288 >>l 46
(sat.stats    474  10018   31   476/473   440/186  82       0    19.79   0.13)
 (sat-cleaner :elim-literals 6 :elim-clauses 2 :cost 4961 :time 0.00)
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 1&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 1 := 131072&1
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5369 :time 0.00)
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 26778 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 7453 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 112028 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 43736 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 16 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 9728 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 32 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 320 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 256 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 128 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 73728 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 2048 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 1024 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 4096 := 131071&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 28 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 2 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 32 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 8 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 16 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 64 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 512 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 384 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 256 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 1024 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 2048 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 8192 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 4096 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 16384 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 32768 := 131072&131071
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 131071&131072
band: (band[44] (if (= #265 63) 9223372036854775808 (if #426 4611686018427387904 #423)) (lshr[64] (* 524288 #75) (mod #555 64))) 65536 := 131072&131071
(sat.stats    803  16198   32  2811/2808   763/226  96       0    21.40   0.28)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9685 :time 0.00)
(sat.stats   1066  22361   59  4704/4701  1032/266 278       0    21.99   0.40)
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 81920 := 131069&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 98304 := 131069&131072
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 65536 := 131071&131072
(sat.stats   1690  38367  113  9171/9168  1671/522 278       0    23.20   0.64)
ramon: poll                 wall=1.003s usage=0.996s mem=28224KiB load=0.99 rootload=0.98
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   2403  66159  167 43023/43020  2535/850 278       0    29.17   1.31)
lshr: (lshr[44] (bv2int %1) (+ 44 (* 17592186044415 #64))) 0 := 0 >>l 37
band: (band[44] (lshr[44] (bv2int %1) (+ 44 #449)) (if (= #84 43) 8796093022208 (if #453 4398046511104 #537))) 0 := 0&128
lshr: (lshr[64] (* 524288 (bv2int %1)) (mod (+ 63 #548 #552) 64)) 17592186039571 := 0 >>l 56
ramon: poll                 wall=2.000s usage=1.992s mem=32352KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 3 :elim-clauses 2 :cost 29291 :time 0.00)
ramon: poll                 wall=3.000s usage=2.992s mem=33312KiB load=1.00 rootload=1.00
(sat.stats   3644 106984  275 59540/59535  3860/1250 349       0    32.63   3.76)
ramon: poll                 wall=4.000s usage=3.991s mem=33524KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.991s mem=33884KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 40269 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 42981 :time 0.00)
ramon: poll                 wall=6.000s usage=5.991s mem=34456KiB load=1.00 rootload=1.00
(sat.stats   5603 145670  432 64202/64197  5184/1476 360       0    33.84   6.65)
ramon: poll                 wall=7.000s usage=6.991s mem=34668KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 47431 :time 0.00)
ramon: poll                 wall=8.000s usage=7.990s mem=34800KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.990s mem=35740KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.989s mem=35808KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.989s mem=36044KiB load=1.00 rootload=1.00
(sat.stats   9071 205770  524 74029/74024  7289/1747 361       0    35.52  11.09)
ramon: poll                 wall=12.000s usage=11.989s mem=36944KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.989s mem=37492KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.989s mem=38156KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.988s mem=38280KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.003s usage=15.992s mem=38400KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.988s mem=38996KiB load=1.00 rootload=1.00
(sat.stats  12730 255082  701 101302/101297  9862/2516 361       0    38.09  17.28)
ramon: poll                 wall=18.000s usage=17.988s mem=39080KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.988s mem=39368KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.987s mem=39408KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:03:26 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.002s
ramon: group.utime          19.986s
ramon: group.stime          0.016s
ramon: group.mempeak        39664KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
