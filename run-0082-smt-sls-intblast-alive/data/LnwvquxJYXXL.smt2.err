ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:17:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28500 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LnwvquxJYXXL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             763558
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    60.241     10000        49          0            1        2)
(sat.ddfw       1      1   33.0066     20001        98          1            1        3)
(sat.ddfw       1      1    35.524     40001       196          2            1        5)
(smt.stats    0    101   2753    217  1201/1031/96     107/15     4   14   52.26)
(sat.ddfw       1      1   34.4037     70001       343          3            1        8)
ramon: poll                 wall=1.004s usage=0.830s mem=54816KiB load=0.83 rootload=0.82
(smt.stats    1    202   5009    896  1794/1547/97     244/23     5   15   52.26)
(smt.stats    2    313   7790   2351  1884/1714/100     368/32     7   22   52.35)
(sat.ddfw       1      1   32.0513    110001       539          4            1       12)
(smt.stats    3    414  11388   3214  2046/1747/100     474/47     7   22   52.46)
(smt.stats    4    525  13165   5232  2431/2183/112     643/127    11   32   52.66)
(smt.stats    5    647  16186   7113  2797/2304/113     768/170    13   32   52.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  19237   9619  2842/2579/113     881/173    13   32   52.85)
(sat.ddfw       1      1   28.2002    160000       784          5            1       17)
(smt.stats    7    859  23116  12209  2886/2621/113     998/175    13   32   52.85)
ramon: poll                 wall=2.004s usage=1.798s mem=54924KiB load=0.97 rootload=0.97
(smt.stats    8    983  24943  15500  2933/2707/120    1152/233    15   36   52.85)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 3783&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305807824841608903 := 2477 << 2
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 3783&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 3783 := 2477 << 2
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 2476 := 2477 << 2
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 2476 := 2477 << 2
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 9908&1
(smt.stats    9   1117  30145  18309  2988/2756/153    1290/253    17   52   53.05)
(smt.stats   10   1218  34094  21553  3016/2777/153    1386/253    17   52   53.14)
(smt.stats   11   1329  38437  24058  3036/2798/153    1500/253    17   52   53.27)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1451  41288  31081  3039/2801/153    1632/253    17   52   53.37)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 88 := 462&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 88 := 462&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 92 := 464&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 96 := 464&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 96 := 464&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 106 := 480&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 108 := 480&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 128 := 480&2047
(smt.stats   13   1585  44010  33833  3068/2830/185    1766/265    18   59   53.56)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2144 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2144 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2145 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2147 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2147 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2147 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2147 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2151 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2159 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2159 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2151 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2159 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2151 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2151 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2247 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2247 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2247 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2383 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2255 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2247 := 2503&134217727
(smt.stats   14   1732  47476  37914  3151/2835/185    1923/272    19   64   53.88)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2255 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1991 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1223 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1735 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1735 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1735 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1991 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1479 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1479 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1479 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1479 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 455 := 2503&134217727
(sat.ddfw       1      1   24.5604    220001      1078          6            1       23)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 199 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 455 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 455 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 455 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 199 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 199 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2503 := 2503&134217727
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2503 := 2503 << 28
(smt.stats   15   1833  49283  43077  3277/2978/267    2116/286    20   76   54.27)
(smt.stats   16   1944  53169  50194  3322/3083/301    2476/501    22   99   54.36)
(smt.stats   17   2066  56270  55998  3352/3112/311    2596/515    23  127   54.46)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843009213693954 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 35184372088834 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 35184372088834 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2 := 384&3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 461 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 461 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 384&3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 384&3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 384&3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 2 := 384&3
(smt.stats   18   2200  61832  64926  3411/3126/311    2765/520    23  127   54.64)
ramon: poll                 wall=3.000s usage=2.723s mem=56936KiB load=0.93 rootload=0.92
(smt.stats   19   2347  63999  71419  3453/3187/337    2902/552    24  152   54.74)
(sat.ddfw       1      1   22.0472    290001      1421          7            1       30)
(smt.stats   20   2508  65764  78741  3478/3232/338    3082/556    25  175   54.83)
(smt.stats   21   2609  70299  82771  3481/3232/338    3183/587    26  179   54.83)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 8&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 8&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 8&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 0&33554431
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843009213693952 := 116 << 26
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 0&33554431
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843009213693952 := 116 << 26
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 0&33554431
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843009213693952 := 116 << 26
(smt.stats   22   2720  72636  88293  3557/3257/340    3383/611    27  179   54.83)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 35184372088830 := 116 << 26
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 35184372088630 := 116 << 26
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 2 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 4 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 8 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 16 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 32 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 64 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 128 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 256 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 512 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1024 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 2048 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 4096 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 8192 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1024 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 4096 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 8192 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 16384 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 32768 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 65536 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 131072 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 262144 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 524288 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1048576 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 2097152 := 7784628224&33554431
(smt.stats   23   2842  75401  98181  3714/3450/501    3619/659    28  211   55.48)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 72 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 80 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 96 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 96 := 7784628224&33554431
(smt.stats   24   2976  77972 105919  3799/3535/512    3942/785    29  221   55.79)
(smt.stats   25   3123  82217 112510  3935/3553/513    4289/792    29  221   56.18)
ramon: poll                 wall=4.000s usage=3.682s mem=58784KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   19.6657    370001      1813          8            1       38)
(smt.stats   26   3284  89090 130843  4164/3753/513    4881/896    30  223   56.37)
ramon: poll                 wall=5.000s usage=4.622s mem=58684KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   17.7305    460001      2254          9            1       47)
(smt.stats   27   3461  95042 147257  4364/4096/514    5599/999    31  225   56.69)
(smt.stats   28   3562  98643 156252  4394/4099/514    5885/1002    31  225   56.88)
ramon: poll                 wall=6.000s usage=5.600s mem=59228KiB load=0.98 rootload=0.98
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   29   3673 103273 167828  4540/4149/514    6399/1008    31  225   56.88)
(sat.ddfw       1      1   16.3265    560001      2745         10            1       57)
(smt.stats   30   3795 107628 178420  4703/4290/515    6738/1308    32  226   56.98)
(smt.stats   31   3929 110278 190351  4954/4464/515    7730/1310    32  226   57.07)
(smt.stats   32   4076 115265 205273  5183/4691/515    8703/1328    32  226   57.29)
ramon: poll                 wall=7.000s usage=6.571s mem=59520KiB load=0.97 rootload=0.97
(smt.stats   33   4237 118222 218217  5624/4938/515    9324/1341    32  226   57.38)
(sat.ddfw       1      1   15.1328    670001      3284         11            1       68)
(smt.stats   34   4414 122997 240832  6039/5404/515   10575/1342    32  226   57.57)
(smt.stats   35   4608 127973 268126  6107/5798/517   11453/1859    33  227   57.67)
ramon: poll                 wall=8.000s usage=7.567s mem=60060KiB load=1.00 rootload=0.99
(smt.stats   36   4709 131067 280346  6236/5849/517   11944/1902    34  228   57.76)
(smt.stats   37   4820 134774 295389  6442/6009/517   12429/1908    34  228   57.97)
(sat.ddfw       1      1   14.1011    790001      3872         12            1       80)
(smt.stats   38   4942 136659 306035  6690/6189/517   12686/1912    34  228   58.07)
(smt.delete-inactive-clauses  :num-deleted-clauses 591)
(smt.stats   39   5076 139762 323117  6875/6570/517   12765/1915    34  228   58.34)
ramon: poll                 wall=9.004s usage=8.569s mem=60572KiB load=1.00 rootload=1.01
(smt.stats   40   5223 144191 343797  7050/6637/517   13373/1916    34  228   58.43)
(smt.stats   41   5384 147627 359204  7522/6911/517   13830/1918    34  228   58.53)
(smt.stats   42   5561 153353 385613  7834/7353/517   15010/1922    34  228   58.72)
(sat.ddfw       1      1   13.3855    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.646s mem=60956KiB load=1.08 rootload=1.07
(smt.stats   43   5755 158621 413782  8263/7571/517   16113/1923    34  228   58.82)
(smt.stats   44   5968 163953 438144  8481/8000/517   17179/1924    34  228   59.01)
(smt.stats   45   6069 166559 451175  8623/8212/517   17769/1925    34  228   59.12)
ramon: poll                 wall=11.000s usage=10.736s mem=61680KiB load=1.09 rootload=1.09
(smt.stats   46   6180 170656 480341  8860/8377/517   18289/1932    34  228   59.44)
(sat.ddfw       1      1   12.7574   1060001      5196         14            1      108)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2510 := 8796093117951&16383
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1487 := 8796093044223&16383
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 479 := 8796093044223&16383
(smt.stats   47   6303 174095 504072  9188/8595/519   18724/2210    35  241   59.63)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 511 := 35183164098047&16383
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843008005703167 := 35184372088830 << 15
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843008005703167 := 35184372088830 << 15
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843008005703167 := 35184372088830 << 15
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305878192377791999 := 35184372088830 << 15
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305878192377791999 := 35184372088830 << 15
(smt.stats   48   6437 177301 526723  9270/8926/535   19232/2212    35  241   59.63)
ramon: poll                 wall=12.000s usage=11.826s mem=62268KiB load=1.09 rootload=1.09
(sat.ddfw       1      1   12.1428   1210001      5931         15            1      123)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   49   6584 181592 550730  9408/9081/549   21796/2263    36  249   60.12)
ramon: poll                 wall=13.000s usage=12.828s mem=62684KiB load=1.00 rootload=1.01
ramon: poll                 wall=14.000s usage=13.828s mem=62836KiB load=1.00 rootload=0.99
(smt.stats   50   6745 191447 585962  9665/9209/549   22242/2266    36  249   60.31)
(sat.ddfw       1      1   11.4163   1370001      6715         16            1      139)
(smt.stats   51   6922 198265 611768  9835/9515/559   23123/3883    37  283   60.60)
ramon: poll                 wall=15.004s usage=15.067s mem=63160KiB load=1.23 rootload=1.24
(sat.ddfw       1      1   10.8474   1540001      7549         17            1      156)
ramon: poll                 wall=16.004s usage=16.322s mem=63284KiB load=1.26 rootload=1.26
(smt.stats   52   7116 206760 646449 10010/9519/559   24050/3883    37  283   60.79)
ramon: poll                 wall=17.004s usage=17.323s mem=63376KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.3264   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=18.320s mem=63524KiB load=1.00 rootload=1.00
(smt.stats   53   7329 217381 702741 10239/9901/560   25026/4223    38  290   61.36)
ramon: poll                 wall=19.000s usage=19.318s mem=63624KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.79432   1910001      9362         19            1      193)
(smt.stats   54   7563 229654 760715 10408/9936/560   26763/4571    39  294   61.55)
ramon: poll                 wall=20.000s usage=20.317s mem=63808KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:18:02 2024
ramon: root.execname        z3
ramon: root.utime           20.350s
ramon: root.stime           0.000s
ramon: group.total          20.368s
ramon: group.utime          20.360s
ramon: group.stime          0.008s
ramon: group.mempeak        64320KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.054s
ramon: loadavg              1.02
