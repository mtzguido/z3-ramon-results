ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:23:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28368 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/OQAssQvFeidq.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             781756
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   2569    656  1101/992/90      96/4     3   13   51.85)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #867 #869) 64)) 8796093022208 := 62 << 11
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 73 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 73 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 303105 := 74 << 12
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4095 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4094 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4092 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4088 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4080 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 32 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1024 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 2080 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 2048 := 4095&303104
(smt.stats    1    203   4008   1838  1707/1541/165     197/21     8   36   52.44)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 15 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 10 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1024 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   67.5676     10000        49          0            1        2)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2048 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 5 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 4 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 2 := 4095&303104
(smt.stats    2    314   6602   5221  1797/1627/249     312/39    12   60   52.82)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1984 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1920 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1024 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 960 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 4095&303104
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 20 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 20 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 20 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 512 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 128 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 256 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 64 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1024 := 4095&303104
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32 := 4095&303104
(smt.stats    3    416   7918   7730  1888/1713/353     440/52    15   81   53.21)
(sat.ddfw       1      1   36.2355     20001        98          1            1        3)
(smt.stats    4    527  10247  10479  2206/2005/357     546/127    18  106   53.21)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 1 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 64 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 44 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #115))) 45 := 42 << 1
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1 := 1&84
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 1&84
band: (band[43] (if (= #119 42) 1 (if #546 3 #664)) (shl[43] (bv2int %0) (+ 43 #667))) 1 := 1&84
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 1&84
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 1&84
(smt.stats    5    650  12631  12836  2281/2075/365     657/148    20  114   53.59)
(sat.ddfw       1      1   41.0678     40001       196          2            1        5)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    751  15158  17289  2370/2142/368     794/148    20  114   53.69)
(smt.stats    7    862  19127  22913  2420/2181/372     924/177    22  131   53.88)
(sat.ddfw       1      1   38.3632     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.878s mem=56300KiB load=0.88 rootload=0.85
(smt.stats    8    984  22142  27169  2478/2249/376    1133/249    24  143   53.97)
(smt.stats    9   1118  27805  36118  2503/2259/379    1270/251    24  143   54.07)
(sat.ddfw       1      1   37.0714    110001       539          4            1       12)
(smt.stats   10   1219  29868  40537  2516/2283/380    1413/272    26  149   54.07)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 1 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 3 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 3 := 8796093022207&8796093022207
(smt.stats   11   1330  32812  49256  2565/2318/387    1593/314    28  151   54.17)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 7 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 7 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 15 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 15 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 31 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 31 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 63 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 63 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 127 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 127 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 4351 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8447 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8703 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8703 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 9215 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 9215 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 10239 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 10239 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16383 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16383 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8191 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8191 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8191 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 8191 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 12287 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16383 := 8796093022207&8796093022207
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32767 := 8796093022207&8796093022207
(smt.stats   12   1452  34775  55779  2729/2488/512    1851/333    29  172   54.76)
(sat.ddfw       1      1   33.6015    160000       784          5            1       17)
(smt.stats   13   1586  39152  62184  2840/2575/514    2124/424    31  199   54.95)
ramon: poll                 wall=2.000s usage=1.962s mem=57356KiB load=1.08 rootload=1.07
(smt.stats   14   1733  43783  75303  3019/2705/516    2440/470    32  199   55.17)
(sat.ddfw       1      1    28.972    220001      1078          6            1       23)
(smt.stats   15   1834  45500  79332  3192/2791/516    2647/523    33  203   55.35)
(smt.stats   16   1945  48306  86383  3374/3112/519    3360/630    34  212   55.44)
(smt.stats   17   2067  52781  96443  3418/3155/524    3678/779    35  223   55.55)
(sat.ddfw       1      1   25.4823    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   18   2201  56625 112037  3594/3260/526    4041/827    36  223   55.64)
ramon: poll                 wall=3.000s usage=2.961s mem=57852KiB load=1.00 rootload=0.99
(smt.stats   19   2348  60906 133189  3813/3346/527    4590/860    37  226   55.75)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32768 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32768 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 32768 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 24576 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 20480 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16384 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 16384 := 8796093022207&4398046576640
(smt.stats   20   2509  64216 147832  3958/3659/531    5344/962    38  229   56.00)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 0 := 8796093022207&4398046576640
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 139266 := 8796093022207&4398046584834
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 139266 := 8796093022207&4398046584834
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 139266 := 8796093022207&4398046601218
(sat.ddfw       1      1   22.6629    370001      1813          8            1       38)
(smt.stats   21   2610  65737 156969  4194/3722/547    5727/969    38  229   56.19)
(smt.stats   22   2721  67150 164460  4562/3970/553    6000/1313    39  243   56.29)
ramon: poll                 wall=4.000s usage=3.955s mem=58568KiB load=0.99 rootload=1.00
(smt.stats   23   2843  70407 182258  4794/4303/553    6699/1320    39  243   56.49)
(sat.ddfw       1      1   20.4499    460001      2254          9            1       47)
(smt.stats   24   2977  73548 196377  4933/4656/554    7645/1532    41  246   56.79)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 30720 := 8796093022207&4398046771200
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046525440
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046525440
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046525440
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046525440
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
(smt.stats   25   3124  77505 215057  5272/4880/556    8341/1909    42  247   57.05)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&407552
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046263296
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046263296
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046263296
ramon: poll                 wall=5.000s usage=4.955s mem=59396KiB load=1.00 rootload=1.00
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&538624
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 14336 := 8796093022207&4398046001152
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 538624 := 8796093022207&4398046001152
(smt.stats   26   3285  80636 229122  5690/4965/593    8847/1916    42  247   57.24)
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 538624 := 8796093022207&800768
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 538624 := 8796093022207&800768
band: (band[43] (if (or #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 ...) 0 (if #700 1 #784)) (shl[64] (* 2 #113) (mod #870 64))) 538624 := 8796093022207&800768
(sat.ddfw       1      1   18.6289    560001      2745         10            1       57)
(smt.stats   27   3462  85506 246737  5841/5513/629    9979/1960    43  260   57.62)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   28   3563  89355 257921  5869/5542/631   10527/2328    44  264   57.72)
ramon: poll                 wall=6.000s usage=5.954s mem=60184KiB load=1.00 rootload=1.00
(smt.stats   29   3674  93094 269072  5974/5657/633   10781/2431    45  278   57.97)
(sat.ddfw       1      1   17.0993    670001      3284         11            1       68)
(smt.stats   30   3796  96835 287890  6064/5750/634   11994/2437    45  278   58.25)
ramon: poll                 wall=7.003s usage=6.859s mem=61120KiB load=0.90 rootload=0.90
(smt.stats   31   3931 101840 305000  6267/5954/639   13074/2923    46  280   58.35)
(smt.stats   32   4078 107353 333279  6303/5960/639   13502/2923    46  280   58.45)
(sat.ddfw       1      1   15.7584    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.847s mem=60908KiB load=0.99 rootload=0.99
(smt.stats   33   4239 111657 364693  6569/6012/639   14424/3385    47  293   58.84)
(sat.ddfw       1      1   14.6215    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.803s mem=61500KiB load=0.96 rootload=0.95
(smt.stats   34   4416 114672 388798  7008/6695/642   15463/3588    48  294   59.04)
(smt.stats   35   4610 123624 421361  7026/6713/645   16844/3897    49  323   59.23)
ramon: poll                 wall=10.000s usage=9.858s mem=61856KiB load=1.06 rootload=1.06
(smt.stats   36   4711 130489 451812  7074/6739/647   17253/4124    50  333   59.42)
(sat.ddfw       1      1   13.8449   1060001      5196         14            1      108)
(smt.stats   37   4822 137007 469440  7151/6763/647   17631/4130    50  333   59.51)
(smt.stats   38   4944 142288 492957  7280/6967/648   18488/4562    51  348   60.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 444)
ramon: poll                 wall=11.000s usage=10.909s mem=62564KiB load=1.05 rootload=1.04
(smt.stats   39   5078 149913 538548  7298/6979/650   18736/4563    51  348   60.05)
(smt.stats   40   5225 156569 564171  7321/7008/652   19201/4821    52  368   60.14)
(smt.stats   41   5386 164737 598743  7516/7077/652   19771/4834    52  368   60.50)
(sat.ddfw       1      1   13.0696   1210001      5931         15            1      123)
(smt.stats   42   5563 174226 642226  7567/7232/657   21077/5014    53  376   60.60)
ramon: poll                 wall=12.000s usage=12.117s mem=62868KiB load=1.21 rootload=1.21
(smt.stats   43   5757 186563 716835  7611/7266/657   22100/5319    54  410   60.99)
(sat.ddfw       1      1   12.4552   1370001      6715         16            1      139)
ramon: poll                 wall=13.003s usage=13.192s mem=63944KiB load=1.07 rootload=1.07
(smt.stats   44   5970 196110 764551  7764/7401/663   23396/5595    55  419   61.37)
(smt.stats   45   6071 202478 786698  7779/7414/664   23670/6153    56  439   61.37)
(smt.stats   46   6182 209908 817044  7871/7430/664   24065/6160    56  439   61.88)
ramon: poll                 wall=14.000s usage=14.201s mem=64224KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   11.7484   1540001      7549         17            1      156)
(smt.stats   47   6304 216461 845261  8040/7531/664   24402/6238    57  444   62.08)
ramon: poll                 wall=15.003s usage=15.174s mem=64904KiB load=0.97 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6438 222457 867151  8188/7691/664   25079/6243    57  444   62.17)
(smt.stats   49   6585 229308 886797  8201/7841/667   25728/6384    58  458   62.37)
(smt.stats   50   6746 233707 939779  8297/7915/667   26109/6384    58  458   62.74)
ramon: poll                 wall=16.000s usage=16.160s mem=65208KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   11.0967   1720001      8431         18            1      174)
(smt.stats   51   6923 240705 1004501  8323/7936/667   26656/6384    58  458   62.84)
(smt.stats   52   7117 250047 1060288  8348/7961/667   27362/6384    58  458   63.05)
ramon: poll                 wall=17.000s usage=17.155s mem=65280KiB load=0.99 rootload=0.99
ramon: poll                 wall=18.000s usage=18.156s mem=65388KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5123   1910001      9362         19            1      193)
(smt.stats   53   7330 260133 1105406  8438/7976/667   28166/6394    58  458   63.24)
ramon: poll                 wall=19.000s usage=19.154s mem=65780KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   54   7564 269068 1149389  8701/8247/680   30237/6781    59  461   63.44)
ramon: poll                 wall=20.003s usage=20.156s mem=66124KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:23:30 2024
ramon: root.execname        z3
ramon: root.utime           20.170s
ramon: root.stime           0.050s
ramon: group.total          20.239s
ramon: group.utime          20.179s
ramon: group.stime          0.060s
ramon: group.mempeak        66188KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.089s
ramon: loadavg              1.01
