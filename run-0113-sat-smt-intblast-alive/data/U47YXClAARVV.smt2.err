ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:00:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40510 MiB
ramon: sys.mem.avail        61379 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/U47YXClAARVV.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3862513
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   243/241     0/0  61       0    18.61   0.00)
(sat.stats    134    797    0   243/241   134/48  61       0    18.90   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 532 :time 0.00)
(sat.stats    134    797    0   243/241   134/48  61       0    18.90   0.01)
(sat.stats    134    797    0   243/241   134/48  61       0    18.90   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 516218.90 :time 0.00)
(sat.stats    134    797    0   243/241   137/51  61       0    18.90   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1551 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1911 :time 0.00)
(sat.stats    357   3628    1   291/289   357/174  67       0    19.58   0.08)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    360   3637    2   305/303   360/174  67       0    19.58   0.09)
(sat.stats    363   3644    3   312/310   363/174  67       0    19.58   0.10)
(sat.stats    366   3664    4   330/328   366/174  67       0    19.58   0.10)
(sat.stats    369   3677    5   348/346   369/175  67       0    19.58   0.10)
(sat.stats    374   3695    6   379/377   375/176  67       0    19.58   0.10)
(sat.stats    377   3702    7   402/400   378/176  67       0    19.58   0.10)
(sat.stats    381   3794    8   457/455   383/177  67       0    19.58   0.11)
(sat.stats    384   3838    9   459/457   386/178  67       0    19.58   0.11)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 2090 :time 0.00)
(sat.stats    387   3894   10   487/485   388/178  70       0    19.58   0.11)
(sat.stats    390   3949   11   487/485   391/178  70       0    19.58   0.11)
(sat.stats    393   4010   12   487/485   394/178  70       0    19.67   0.11)
(sat.stats    396   4062   13   487/485   397/178  70       0    19.67   0.12)
(sat.stats    399   4125   14   488/486   400/179  70       0    19.58   0.12)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2321 :time 0.00)
 (sat-cleaner :elim-literals 15 :elim-clauses 1 :cost 2646 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3396 :time 0.00)
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 0 := 9098498601 << 27
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 3646 :time 0.00)
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 23613 := 4444796&68258305830551552
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 23614 := 4444796&68258305830551552
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258305830551552
shl: (shl[64] (bv2int %0) (mod (+ #59 #363) 64)) 144115188075835901 := 9098498601 << 27
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 4336276 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 247512 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 4444784 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 384 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 2244672 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 512 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 2030848 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 1024 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 901120 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 2048 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 2166784 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 32768 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 8192 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 3473408 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 3801088 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 4194304 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 262144 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 3145728 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 524288 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 2097152 := 4444796&68258397635477504
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 1 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 32 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 2 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 20 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 24 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 16 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 1823488 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 64 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 128 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 3812352 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 512 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 913408 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 2048 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 1335296 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 2490368 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 98304 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 16384 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 65536 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 2097152 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 524288 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 262144 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 1048576 := 68258397635477504&4444796
band: (band[57] (if (or #592 #593 #594 #595) 0 (if #596 1 #746)) (shl[57] (bv2int %0) (mod #59 57))) 0 := 4444796&68258397635477504
band: (band[57] (shl[64] (bv2int %0) (mod #364 64)) (if (or #776 #777 #778 #779 #780) 0 (if #781 1 #902))) 4194304 := 68258397635477504&4444796
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    728  13398   15  2688/2684   735/235  96       0    22.19   0.40)
(sat.stats    731  13404   16  2730/2726   738/235  96       0    22.29   0.40)
(sat.stats   1065  13917  127 25820/25816  1079/242  96       0    25.27   0.50)
(sat.stats   1597  14743  304 59720/59716  1624/255  96       0    29.80   0.73)
ramon: poll                 wall=1.000s usage=0.925s mem=33640KiB load=0.93 rootload=0.91
(sat.stats   2397  15984  558 105263/105259  2444/275  96       0    36.79   1.25)
ramon: poll                 wall=2.000s usage=1.925s mem=43092KiB load=1.00 rootload=0.99
(sat.stats   3595  17826  711 169041/169037  3673/306  96       0    53.81   2.47)
ramon: poll                 wall=3.000s usage=2.925s mem=58012KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.925s mem=61124KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.924s mem=65096KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.924s mem=70216KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.922s mem=70136KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.922s mem=70392KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.922s mem=70704KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.922s mem=70960KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.921s mem=73352KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.006s usage=11.912s mem=74176KiB load=0.99 rootload=0.99
ramon: poll                 wall=13.000s usage=12.904s mem=74908KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.902s mem=77980KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.902s mem=80668KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.002s usage=15.905s mem=85508KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.901s mem=85432KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.901s mem=87224KiB load=1.00 rootload=1.00
(sat.stats :conflicts :restarts           :learned/bin         :gc         :time )
(sat.stats      :decisions   :clauses/bin            :units        :memory       )
(sat.stats   5418  21432 1173 521983/521979  4839/348  96       0    85.77  18.84)
ramon: poll                 wall=19.000s usage=18.885s mem=87436KiB load=0.98 rootload=0.99
ramon: poll                 wall=20.000s usage=19.884s mem=89492KiB load=1.00 rootload=0.99
ramon: end                  Wed Dec 25 16:01:13 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.040s
ramon: group.total          19.968s
ramon: group.utime          19.920s
ramon: group.stime          0.048s
ramon: group.mempeak        89748KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              0.99
