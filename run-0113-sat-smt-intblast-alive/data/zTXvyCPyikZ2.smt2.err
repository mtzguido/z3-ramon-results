ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:50:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39670 MiB
ramon: sys.mem.avail        61376 MiB
ramon: sys.nprocs           1325
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zTXvyCPyikZ2.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             4008326
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   224/224     0/0  67       0    18.53   0.00)
(sat.stats    101    765    0   224/224   101/28  67       0    18.87   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 310 :time 0.00)
(sat.stats    101    765    0   224/224   101/28  67       0    18.87   0.01)
(sat.stats    101    765    0   224/224   101/28  67       0    18.87   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 353018.87 :time 0.00)
(sat.stats    101    765    0   226/226    37/27  67       0    18.87   0.01)
(sat.stats    196   2445    1   226/226   132/113  67       0    18.97   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    199   2493    2   226/226   135/113  67       0    18.97   0.01)
(sat.stats    202   2534    3   226/226   138/113  67       0    18.97   0.01)
(sat.stats    205   2583    4   226/226   141/113  67       0    18.97   0.01)
(sat.stats    208   2606    5   226/226   144/113  67       0    18.97   0.01)
(sat.stats    211   2629    6   226/226   147/115  67       0    18.97   0.01)
(sat.stats    214   2646    7   226/226   150/117  67       0    18.97   0.01)
(sat.stats    217   2676    8   226/226   153/117  67       0    18.97   0.01)
(sat.stats    220   2737    9   226/226   156/120  67       0    18.97   0.01)
(sat.stats    223   2792   10   226/226   159/123  67       0    18.97   0.01)
(sat.stats    226   2844   11   226/226   162/126  67       0    18.97   0.01)
(sat.stats    229   2899   12   226/226   165/129  67       0    18.97   0.01)
(sat.stats    232   2953   13   226/226   168/132  67       0    18.97   0.01)
(sat.stats    316   4634   41   227/227   252/157  67       0    19.17   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1527 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 1773 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2592 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    554   8091   62  1555/1555   495/187  80       0    20.31   0.95)
ramon: poll                 wall=1.000s usage=0.990s mem=21564KiB load=0.99 rootload=0.98
ramon: poll                 wall=2.000s usage=1.933s mem=22136KiB load=0.94 rootload=0.95
(sat.stats   1014  13051   72  7671/7671   988/192  80       0    21.23   2.28)
(sat.stats   1067  13679   87  8511/8511  1053/193  80       0    21.23   2.33)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7394 :time 0.00)
ramon: poll                 wall=3.000s usage=2.932s mem=23108KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.929s mem=23564KiB load=1.00 rootload=0.99
(sat.stats   1714  21428  106 15928/15928  1736/239  81       0    22.59   4.32)
ramon: poll                 wall=5.000s usage=4.885s mem=24172KiB load=0.96 rootload=0.96
ramon: poll                 wall=6.000s usage=5.880s mem=25268KiB load=1.00 rootload=0.99
lshr: (lshr[46] (bv2int %0) (+ 46 (* 70368744177663 #63))) 3758096386 := 3758096386 >>l 22
(sat.stats   2400  35569  184 29492/29491  2544/384  81       0    24.84   6.28)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 883 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 350 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 436 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 224 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 640 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 320 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 256 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 512 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
lshr: (lshr[64] (* 131072 (bv2int %0)) (mod (+ 63 #566 #570) 64)) 492581209505792 := 492581209505792 >>l 39
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 8 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 426 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 677 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 4 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 800 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 24 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 16 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 384 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 64 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 256 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 896&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 512 := 70368190529536&896
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 16 := 896&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 63 := 16777215&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 62 := 16777215&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 60 := 16777215&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 40 := 16777215&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 48 := 16777215&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 32 := 16777215&70368190529536
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 1024 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 2048 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 2904064 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 2260992 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 8192 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 6111232 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 65536 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 131072 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 786432 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 4718592 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 4194304 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 1048576 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 2097152 := 70368190529536&16777215
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 0 := 16777215&70368190529536
band: (band[46] (if (= #283 63) 649037107316549082289095833550848 (if #441 324518553658274541144547916775424 #438)) (lshr[64] (* 131072 #62) (mod #573 64))) 8388608 := 70368190529536&16777215
 (sat-cleaner :elim-literals 9 :elim-clauses 2 :cost 26254 :time 0.00)
ramon: poll                 wall=7.000s usage=6.877s mem=28576KiB load=1.00 rootload=0.99
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #463)) (if (= #69 45) 2475880078569599465519316992 (if #467 1237940039284799732759658496 #555))) 64 := 67&70368190529536
 (sat-cleaner :elim-literals 421 :elim-clauses 3 :cost 28157 :time 0.00)
ramon: poll                 wall=8.000s usage=7.824s mem=30092KiB load=0.95 rootload=0.94
ramon: poll                 wall=9.000s usage=8.820s mem=33852KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.808s mem=37392KiB load=0.99 rootload=0.98
(sat.stats   3635 125774  246 113949/113947  5842/2425 320       0    39.56  10.97)
ramon: poll                 wall=11.000s usage=10.803s mem=41324KiB load=0.99 rootload=1.00
ramon: poll                 wall=12.000s usage=11.796s mem=44388KiB load=0.99 rootload=0.98
ramon: poll                 wall=13.000s usage=12.754s mem=46284KiB load=0.96 rootload=0.96
ramon: poll                 wall=14.000s usage=13.689s mem=48812KiB load=0.94 rootload=0.93
ramon: poll                 wall=15.000s usage=14.666s mem=49520KiB load=0.98 rootload=0.96
ramon: poll                 wall=16.000s usage=15.662s mem=50568KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.660s mem=51504KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.657s mem=54516KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.654s mem=55088KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.651s mem=55176KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:50:34 2024
ramon: root.execname        z3
ramon: root.utime           19.600s
ramon: root.stime           0.060s
ramon: group.total          19.664s
ramon: group.utime          19.600s
ramon: group.stime          0.064s
ramon: group.mempeak        55700KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              0.98
