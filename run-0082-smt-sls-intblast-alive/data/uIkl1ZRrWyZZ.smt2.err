ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:14:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27182 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/uIkl1ZRrWyZZ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             951555
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    75.188     10000        49          0            1        2)
(sat.ddfw       1      1   40.6545     20001        98          1            1        3)
(sat.ddfw       1      1    41.841     40001       196          2            1        5)
(smt.stats    0    101   2839    211  1377/1247/112      94/18     7   18   52.26)
(sat.ddfw       1      1   36.4964     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.854s mem=54316KiB load=0.85 rootload=0.85
(smt.stats    1    202   4627    984  2155/1920/115     200/18     8   19   52.35)
(smt.stats    2    313   5999   2137  2302/2101/117     301/22    11   26   52.35)
(sat.ddfw       1      1   30.6748    110001       539          4            1       12)
(smt.stats    3    414   8446   4405  2432/2139/118     424/28    12   26   52.55)
(smt.stats    4    525   9211   5388  2920/2393/125     551/66    14   30   52.74)
(smt.stats    5    647  11103   7542  3012/2694/125     674/85    15   33   52.74)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  14754   8919  3031/2787/126     769/88    16   34   52.84)
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 2&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 2&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 4&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 4&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 4&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 4&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 9&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 16&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 32&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 64&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 32&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 64&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 64&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 256&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 256&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 512&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1024&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 1024&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 2048&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 256&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 256 := 256&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 256 := 256 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 256&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 128&16777215
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 128 := 128&16777215
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 128 := 128 << 24
(smt.stats    7    859  16511  11814  3177/2911/262     901/107    19   64   53.22)
(sat.ddfw       1      1   26.3291    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.795s mem=55352KiB load=0.94 rootload=0.94
(smt.stats    8    981  17941  14373  3227/2965/264    1028/119    20   76   53.32)
(smt.stats    9   1115  20835  19313  3278/2989/265    1163/127    21   77   53.41)
(smt.stats   10   1216  22793  21754  3402/3049/265    1267/131    21   77   53.41)
(smt.stats   11   1327  24656  27518  3439/3157/265    1384/132    21   77   53.51)
(sat.ddfw       1      1   23.2472    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27064  31792  3463/3213/267    1506/143    22   79   53.51)
(smt.stats   13   1583  28821  34936  3477/3216/267    1648/144    22   79   53.62)
ramon: poll                 wall=3.000s usage=2.769s mem=56024KiB load=0.97 rootload=0.97
(smt.stats   14   1730  32115  43274  3564/3237/267    1840/158    23   81   53.72)
(smt.stats   15   1831  33400  48513  3608/3335/267    1949/158    23   81   53.72)
(smt.stats   16   1942  35052  56150  3632/3374/273    2059/219    25   84   53.81)
(smt.stats   17   2064  37645  64915  3728/3448/275    2219/220    25   84   53.91)
(sat.ddfw       1      1   20.4499    290001      1421          7            1       30)
(smt.stats   18   2198  44910  74465  3761/3448/275    2369/230    26  105   54.05)
(smt.stats   19   2345  49872  81868  3783/3504/280    2539/243    28  110   54.18)
ramon: poll                 wall=4.002s usage=3.695s mem=56280KiB load=0.92 rootload=0.93
(smt.stats   20   2506  55186  89315  3825/3515/284    2770/256    29  116   54.18)
(smt.stats   21   2607  57945  96209  3895/3556/284    2893/256    29  116   54.18)
(sat.ddfw       1      1   18.4971    370001      1813          8            1       38)
(smt.stats   22   2718  60496 102392  3988/3641/285    3132/265    30  116   54.29)
(smt.stats   23   2840  64390 110475  4043/3721/285    3290/268    30  116   54.45)
ramon: poll                 wall=5.000s usage=4.693s mem=56780KiB load=1.00 rootload=0.99
(smt.stats   24   2974  68232 116654  4113/3771/285    3522/269    30  116   54.55)
(sat.ddfw       1      1   17.1527    460001      2254          9            1       47)
(smt.stats   25   3121  75151 125876  4146/3854/294    3745/352    31  122   54.55)
(smt.stats   26   3282  78927 132811  4219/3884/295    3939/391    32  149   54.64)
(smt.stats   27   3459  82198 143597  4469/3992/295    4351/398    33  149   55.08)
(smt.stats   28   3560  84820 154357  4516/4210/295    4743/401    33  149   55.30)
ramon: poll                 wall=6.000s usage=5.717s mem=57720KiB load=1.02 rootload=1.03
(smt.stats   29   3671  89058 178880  4519/4241/296    4851/523    34  151   55.30)
(smt.stats   30   3793  93253 204321  4577/4243/296    5073/525    34  151   55.43)
(smt.stats   31   3927  97948 237767  4590/4312/296    5271/525    34  151   55.43)
(sat.ddfw       1      1   15.5473    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 103512 248480  4603/4325/296    5538/525    34  151   55.52)
(smt.stats   33   4235 106451 254027  4815/4328/297    5967/692    35  152   55.71)
ramon: poll                 wall=7.000s usage=6.716s mem=57876KiB load=1.00 rootload=1.00
(smt.stats   34   4412 109128 263428  5083/4559/297    6340/692    35  152   55.81)
(smt.stats   35   4606 118208 274946  5101/4812/297    6748/692    35  152   55.81)
(smt.stats   36   4707 121278 286293  5117/4839/301    7141/839    36  154   56.01)
(smt.stats   37   4818 129851 303433  5117/4839/301    7275/839    36  154   56.01)
(sat.ddfw       1      1   14.3229    670001      3284         11            1       68)
(smt.stats   38   4940 134381 316252  5128/4850/301    7791/979    37  177   56.01)
(smt.delete-inactive-clauses  :num-deleted-clauses 370)
(smt.stats   39   5074 137699 327764  5134/4856/301    7984/979    37  177   56.10)
ramon: poll                 wall=8.000s usage=7.717s mem=58564KiB load=1.00 rootload=1.00
(smt.stats   40   5221 145199 356930  5140/4861/301    8182/979    37  177   56.36)
(smt.stats   41   5382 151470 389418  5149/4870/301    8583/979    37  177   56.65)
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 512 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 127 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 127 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 126 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 124 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 8192&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 16384&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 0 := 16384&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 127 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 126 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 124 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 8 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 16 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 32 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 64 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 32768&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 32768&131071
(smt.stats   42   5559 156821 408683  5290/4995/370    9049/1501    38  179   56.75)
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98304&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98304&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98304&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98308&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 102404&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98304&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 98308&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 65536&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 65540&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 5 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4100 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6180 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6164 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 6148 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 5124 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4100 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4116 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4116 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4100 := 69636&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 1028 := 131076&131071
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 6612102152262 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 6612102152262 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 6612102152262 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 6612102152262 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 22005264941126 << 17
band: (band[55] (shl[64] (bv2int %0) (mod #808 64)) (if (= #822 63) 0 (if #824 1 #955))) 4 := 131076&131071
shl: (shl[64] (bv2int %0) (mod (+ #117 #807) 64)) 131076 := 22005264941126 << 17
(smt.stats   43   5753 161102 431505  5566/5281/433    9467/1572    39  205   57.29)
ramon: poll                 wall=9.000s usage=8.717s mem=59660KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   13.2846    790001      3872         12            1       80)
(smt.stats   44   5966 166904 451113  5747/5378/435    9990/1698    40  216   57.39)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6067 170691 464425  5762/5480/435   10474/1698    40  216   57.48)
(smt.stats   46   6178 175510 490550  5848/5484/435   10606/1698    40  216   57.48)
ramon: poll                 wall=10.000s usage=9.716s mem=59724KiB load=1.00 rootload=1.00
(smt.stats   47   6300 179820 517062  5960/5570/435   10787/1700    40  216   57.58)
(sat.ddfw       1      1   12.5567    920001      4509         13            1       93)
(smt.stats   48   6434 185799 555194  5992/5711/436   11092/2066    41  221   57.58)
(smt.stats   49   6581 190868 572959  6066/5712/436   11394/2073    41  221   57.67)
ramon: poll                 wall=11.000s usage=10.777s mem=60164KiB load=1.06 rootload=1.06
(smt.stats   50   6742 198171 615307  6088/5801/436   11614/2073    41  221   57.67)
(smt.stats   51   6919 208275 672318  6101/5817/436   11815/2073    41  221   58.12)
(smt.stats   52   7113 217928 714959  6170/5857/437   12156/2264    42  221   58.12)
ramon: poll                 wall=12.000s usage=11.781s mem=60424KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   11.7341   1060001      5196         14            1      108)
(smt.stats   53   7326 225561 748900  6393/5922/437   12448/2270    42  221   58.24)
ramon: poll                 wall=13.000s usage=12.777s mem=60260KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.0084   1210001      5931         15            1      123)
(smt.stats   54   7560 231150 767278  6770/6140/437   12902/2284    42  221   58.43)
ramon: poll                 wall=14.000s usage=13.849s mem=60708KiB load=1.07 rootload=1.08
(smt.stats   55   7661 233155 777165  7154/6608/437   13180/2285    42  221   58.52)
ramon: poll                 wall=15.000s usage=14.847s mem=60664KiB load=1.00 rootload=0.99
(smt.stats   56   7772 236342 795041  7446/6911/437   13497/2287    42  221   58.62)
(sat.ddfw       1      1   10.3708   1370001      6715         16            1      139)
(smt.stats   57   7894 238301 805819  7669/7183/437   13764/2293    42  221   58.72)
ramon: poll                 wall=16.000s usage=15.847s mem=61068KiB load=1.00 rootload=1.00
(smt.stats   58   8028 240673 820394  7791/7438/437   14273/2293    42  221   58.82)
(smt.stats   59   8175 247476 864740  7814/7523/437   14542/2293    42  221   58.91)
(smt.stats   60   8336 258677 914971  7827/7543/437   15052/2293    42  221   58.91)
(smt.stats   61   8513 267399 957900  7836/7555/438   15519/2995    43  230   59.01)
ramon: poll                 wall=17.000s usage=16.851s mem=61472KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8707 276978 1007301  7849/7565/438   15879/3003    43  230   59.01)
(sat.ddfw       1      1   9.80618   1540001      7549         17            1      156)
(smt.stats   63   8920 281601 1018873  7981/7597/438   16152/3005    43  230   59.01)
(smt.stats   64   9154 290429 1045274  7987/7706/438   16413/3005    43  230   59.11)
ramon: poll                 wall=18.000s usage=17.901s mem=61712KiB load=1.05 rootload=1.05
(smt.stats   65   9411 296985 1076145  8152/7711/438   16745/3018    43  230   59.21)
(smt.stats   66   9512 298845 1086868  8193/7912/438   16971/3018    43  230   59.21)
(smt.stats   67   9623 302475 1119150  8236/7955/438   17089/3018    43  230   59.21)
ramon: poll                 wall=19.000s usage=18.905s mem=61628KiB load=1.00 rootload=1.00
(smt.stats   68   9745 306185 1153257  8300/8008/438   17177/3019    43  230   59.21)
(sat.ddfw       1      1    9.2956   1720001      8431         18            1      174)
(smt.stats   69   9879 310742 1179281  8444/8030/438   17651/3028    43  230   59.30)
(smt.delete-inactive-clauses  :num-deleted-clauses 154)
(smt.stats   70  10026 314241 1193135  8472/8191/439   17894/3566    44  230   59.94)
ramon: poll                 wall=20.000s usage=19.933s mem=62528KiB load=1.03 rootload=1.03
(smt.stats   71  10187 323739 1248076  8472/8191/439   18061/3566    44  230   60.40)
ramon: end                  Fri Nov  1 23:14:45 2024
ramon: root.execname        z3
ramon: root.utime           20.010s
ramon: root.stime           0.000s
ramon: group.total          20.027s
ramon: group.utime          20.019s
ramon: group.stime          0.008s
ramon: group.mempeak        62880KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              1.00
