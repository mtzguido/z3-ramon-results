ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:55:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27611 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/gsMlZczzpBOc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             890020
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4123   1525  1137/1025/100      92/11     6   15   51.96)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   116.279     10000        49          0            1        2)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 17592186044414&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1 := 1&65535
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 1 := 17592186044415 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65535 := 131072&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 131072&65535
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 131072&65535
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65534 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65532 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65534 := 131072&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 65534 := 131072&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 131072&65535
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 1 := 2 << 16
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 16 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 32 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 64 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 128 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 256 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 512 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 256 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 512 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 1024 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2048 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4096 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8192 := 65536&65535
(smt.stats    1    202   5314   3126  1938/1652/124     191/18     8   16   52.55)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 1 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 2 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 2 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 4 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 8 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 16 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 65504 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 64 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 128 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 256 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 512 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 1024 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 2048 := 65536&65535
(sat.ddfw       1      1   57.8092     20001        98          1            1        3)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 4096 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 8192 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 16384 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 32768 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 16400 := 65536&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 65536&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 16512 := 65536&65535
(sat.ddfw       1      1    58.651     40001       196          2            1        5)
(smt.stats    2    313   6014   4312  1952/1765/245     309/19    11   49   53.70)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 6684672&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 24576 := 6684672&65535
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 6684672&65535
band: (band[44] (shl[44] (bv2int %1) (mod #104 44)) (if (= #590 43) 1 (if #592 3 #713))) 24576 := 6684672&65535
(smt.stats    3    415   8082   8544  2452/2259/263     456/89    14   61   53.32)
(smt.stats    4    526   9018  10196  2712/2492/269     593/148    16   66   53.41)
(sat.ddfw       1      1   50.2513     70001       343          3            1        8)
(smt.stats    5    648  10433  12301  2857/2522/269     720/156    16   66   53.51)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  12075  16904  2940/2719/271     835/173    18   71   53.60)
(smt.stats    7    860  15611  23565  2972/2748/273     969/178    19   73   53.70)
(smt.stats    8    982  16936  27328  3079/2849/282    1099/219    21   81   53.70)
ramon: poll                 wall=1.000s usage=0.932s mem=56080KiB load=0.93 rootload=0.91
(sat.ddfw       1      1   42.6439    110001       539          4            1       12)
(smt.stats    9   1116  20865  34629  3101/2861/282    1222/221    21   81   53.89)
(sat.ddfw       1      1   39.9992    160000       784          5            1       17)
(sat.ddfw       1      1   34.0528    220001      1078          6            1       23)
ramon: poll                 wall=2.000s usage=1.988s mem=56224KiB load=1.06 rootload=1.05
(smt.stats   10   1217  24398  40381  3191/2878/282    1329/222    21   81   53.90)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439553&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439553&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268451841&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268451841&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439568&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439568&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439570&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439570&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443650&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443648&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443650&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443666&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439554&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439568&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268439570&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443666&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268451856&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268451858&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268447742&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443664&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443666&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 18 := 268443666&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8210 := 268443664&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8210 := 268443666&131071
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 268443666 := 268443666 << 17
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8210 := 268443664&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 8210 := 268443666&131071
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 268443666 := 268443666 << 17
(smt.stats   11   1328  26360  43532  3320/2965/282    1505/229    21   81   54.19)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 7170 := 268439553&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2 := 268468224&131071
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2 := 268468226&131071
(smt.stats   12   1450  29075  49816  3388/3093/344    1751/271    22   93   54.31)
(sat.ddfw       1      1   29.6736    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1584  31864  56391  3486/3223/357    1980/383    23  100   54.41)
(smt.stats   14   1731  35151  63674  3655/3277/357    2131/457    24  110   54.41)
(smt.stats   15   1832  37216  69323  3693/3453/357    2235/457    24  110   54.41)
(smt.stats   16   1943  40185  78327  3732/3499/358    2348/479    25  115   54.41)
ramon: poll                 wall=3.000s usage=2.987s mem=57008KiB load=1.00 rootload=0.99
(smt.stats   17   2065  44020  88027  3763/3511/359    2517/500    26  120   54.58)
(sat.ddfw       1      1   26.3418    370001      1813          8            1       38)
(smt.stats   18   2199  46808  94408  3809/3538/359    2656/502    26  120   54.58)
(smt.stats   19   2346  51730 102900  3885/3608/359    2837/503    26  120   54.67)
(smt.stats   20   2507  55533 113619  3988/3749/360    3183/665    27  127   54.67)
(smt.stats   21   2608  59620 125425  3992/3753/360    3307/665    27  127   54.77)
(smt.stats   22   2719  63814 139185  4006/3758/360    3501/665    27  127   54.90)
(smt.stats   23   2841  67010 150395  4010/3770/361    3752/763    28  128   55.03)
(smt.stats   24   2975  70340 165554  4027/3786/364    3929/825    29  131   55.03)
(sat.ddfw       1      1   23.6655    460001      2254          9            1       47)
(smt.stats   25   3122  72120 172702  4047/3789/364    4091/825    29  131   55.03)
ramon: poll                 wall=4.000s usage=3.984s mem=57216KiB load=1.00 rootload=1.00
(smt.stats   26   3283  76640 191046  4209/3929/368    4358/964    31  153   55.16)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3460  79510 202093  4236/3991/373    4669/1061    32  171   55.16)
(smt.stats   28   3561  81011 209543  4263/4016/378    4778/1095    33  196   55.26)
(smt.stats   29   3672  82756 216114  4307/4052/382    4899/1095    33  196   55.26)
(smt.stats   30   3794  85194 224294  4369/4057/382    5037/1106    34  205   55.26)
(sat.ddfw       1      1   21.4777    560001      2745         10            1       57)
(smt.stats   31   3928  87343 235715  4450/4154/383    5253/1116    35  207   55.45)
ramon: poll                 wall=5.000s usage=5.011s mem=58096KiB load=1.03 rootload=1.03
(smt.stats   32   4075  92384 247569  4459/4202/383    5466/1116    35  207   55.74)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 0&4294967295
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 0 := 0 << 32
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 0&4294967295
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 16384 := 0 << 32
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 0&4294967295
shl: (shl[64] (bv2int %1) (mod (+ #104 #335) 64)) 0 := 0 << 32
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 0 := 0&4294967295
shl: (shl[44] (bv2int %1) (mod (bv2int %0) 44)) 16384 := 0 << 32
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295000112&4294967295
(smt.stats   33   4236  96693 266651  4525/4211/383    5733/1121    35  207   55.84)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295196688&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295131156&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295131380&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134748&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134748&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134716&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295132732&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295132732&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295132796&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295133180&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295133180&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295133180&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295133500&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134332&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134716&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295134972&4294967295
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 4294967292 := 4295135228&4294967295
(smt.stats   34   4413  99291 280794  4984/4377/394    6273/1181    36  209   56.43)
(smt.stats   35   4607 101312 291030  4992/4708/438    6981/1224    37  217   56.43)
(sat.ddfw       1      1   19.8377    670001      3284         11            1       68)
(smt.stats   36   4708 104068 301205  5060/4710/438    7170/1224    37  217   56.43)
ramon: poll                 wall=6.000s usage=6.012s mem=58616KiB load=1.00 rootload=0.99
(smt.stats   37   4819 106800 309873  5154/4802/438    7377/1383    38  233   56.52)
(smt.stats   38   4941 110211 324418  5229/4949/444    7904/1488    39  239   56.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 78)
(smt.stats   39   5075 113908 340343  5318/4952/444    8243/1489    39  239   56.71)
(sat.ddfw       1      1   18.0886    790001      3872         12            1       80)
(smt.stats   40   5222 115346 351560  5325/5045/445    8459/1680    40  243   56.71)
(smt.stats   41   5383 117695 365784  5332/5052/445    8877/1680    40  243   56.71)
ramon: poll                 wall=7.000s usage=6.980s mem=58984KiB load=0.97 rootload=0.97
(smt.stats   42   5560 122296 388941  5357/5077/446    9310/1733    41  243   56.82)
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2048 := 591906&4095
band: (band[44] (shl[64] (bv2int %1) (mod #336 64)) (if (= #732 63) 0 (if #734 1 #876))) 2048 := 591906&4095
(smt.stats   43   5754 126557 407601  5695/5122/446    9955/1740    41  243   57.06)
(smt.stats   44   5967 128833 423248  6267/5969/454   10842/1841    42  244   57.25)
(sat.ddfw       1      1   16.7612    920001      4509         13            1       93)
(smt.stats   45   6068 131334 436568  6331/5972/454   11969/1845    42  244   57.44)
ramon: poll                 wall=8.000s usage=7.979s mem=59796KiB load=1.00 rootload=1.00
(smt.stats   46   6179 132585 442478  6340/6038/455   12072/2289    43  265   57.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6301 138146 472929  6473/6051/456   12573/2292    43  265   57.54)
(smt.stats   48   6435 140701 499682  6567/6269/457   13082/2355    44  266   57.85)
(smt.stats   49   6582 144570 518722  6592/6287/457   14035/2355    44  266   57.95)
ramon: poll                 wall=9.000s usage=8.980s mem=60160KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.6425   1060001      5196         14            1      108)
(smt.stats   50   6743 149312 544056  6671/6365/459   14283/2717    45  270   58.14)
(smt.stats   51   6920 153117 560441  6765/6392/459   14669/2719    45  270   58.14)
(smt.stats   52   7114 153802 571044  6799/6499/459   15218/2791    46  271   58.14)
(smt.stats   53   7327 158297 590334  6920/6502/459   15549/2798    46  271   58.23)
ramon: poll                 wall=10.002s usage=9.980s mem=60492KiB load=1.00 rootload=1.00
(smt.stats   54   7561 162393 634315  7002/6633/459   16135/2800    46  271   58.23)
(sat.ddfw       1      1   14.6484   1210001      5931         15            1      123)
(smt.stats   55   7662 165174 647669  7055/6719/461   16632/3024    47  277   58.33)
(smt.stats   56   7773 170763 678481  7091/6791/461   17359/3024    47  277   58.43)
(smt.stats   57   7895 174955 706436  7098/6795/461   18015/3024    47  277   58.69)
ramon: poll                 wall=11.000s usage=10.975s mem=61076KiB load=1.00 rootload=0.99
(smt.stats   58   8029 177816 723932  7149/6804/461   18734/3025    47  277   58.83)
(smt.stats   59   8176 184200 752579  7250/6866/461   19047/3028    47  277   58.92)
(sat.ddfw       1      1    13.786   1370001      6715         16            1      139)
(smt.stats   60   8337 190062 794357  7326/6963/461   19518/3029    47  277   59.02)
ramon: poll                 wall=12.000s usage=11.975s mem=61408KiB load=1.00 rootload=1.00
(smt.stats   61   8514 194189 827561  7381/7081/462   19977/3610    48  280   59.11)
(smt.stats   62   8708 204808 915177  7390/7090/462   20365/3610    48  280   59.11)
ramon: poll                 wall=13.000s usage=12.987s mem=61616KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   13.0971   1540001      7549         17            1      156)
(smt.stats   63   8921 212196 949740  7569/7101/462   21646/3631    48  280   59.70)
(smt.stats   64   9155 219856 985930  7677/7288/462   22622/3632    48  280   59.80)
ramon: poll                 wall=14.000s usage=14.075s mem=61888KiB load=1.09 rootload=1.09
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9412 228462 1036135  7868/7406/462   23319/3634    48  280   59.89)
(smt.stats   66   9513 229029 1042710  7952/7652/462   23711/3634    48  280   59.99)
(sat.ddfw       1      1   12.4922   1720001      8431         18            1      174)
(smt.stats   67   9624 233269 1068526  8066/7662/462   24118/3635    48  280   59.99)
(smt.stats   68   9746 236933 1083718  8100/7779/462   24381/3637    48  280   60.08)
ramon: poll                 wall=15.000s usage=15.046s mem=62532KiB load=0.97 rootload=0.97
(smt.stats   69   9880 238933 1108382  8121/7817/462   24720/3637    48  280   60.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 1153)
(smt.stats   70  10027 240864 1126645  8144/7838/462   24116/3638    48  280   60.08)
(smt.stats   71  10189 245906 1168961  8152/7852/463   24413/4646    49  285   60.17)
(smt.stats   72  10366 249561 1201976  8165/7859/463   24660/4646    49  285   60.17)
ramon: poll                 wall=16.000s usage=16.011s mem=62604KiB load=0.96 rootload=0.96
(smt.stats   73  10560 255087 1243719  8301/7866/463   25437/4649    49  285   60.27)
(sat.ddfw       1      1   11.7197   1910001      9362         19            1      193)
ramon: poll                 wall=17.000s usage=16.925s mem=62892KiB load=0.91 rootload=0.92
ramon: poll                 wall=18.000s usage=17.803s mem=63040KiB load=0.88 rootload=0.87
(smt.stats   74  10773 261027 1281350  8611/8002/463   25914/4658    49  285   60.55)
(sat.ddfw       1      1   10.9529   2110001     10343         20            1      214)
ramon: poll                 wall=19.000s usage=18.710s mem=63504KiB load=0.91 rootload=0.91
(smt.stats   75  11007 266707 1308206  8779/8346/463   26436/4664    49  285   60.73)
(smt.stats   76  11264 270214 1336191  8922/8565/463   27215/4664    49  285   60.83)
ramon: poll                 wall=20.000s usage=19.656s mem=63520KiB load=0.95 rootload=0.95
ramon: end                  Fri Nov  1 22:55:43 2024
ramon: root.execname        z3
ramon: root.utime           19.690s
ramon: root.stime           0.040s
ramon: group.total          19.734s
ramon: group.utime          19.690s
ramon: group.stime          0.044s
ramon: group.mempeak        63824KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              0.98
