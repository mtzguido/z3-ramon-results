ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:16:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         43188 MiB
ramon: sys.mem.avail        61717 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0MIlagXYctSO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2750317
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4201    428  1165/978/97     104/28     4   18   19.15)
(smt.stats    1    202   4816    990  1976/1705/97     211/37     4   18   19.44)
(smt.stats    2    313   5707   1695  2307/1991/97     354/56     4   18   19.63)
(smt.stats    3    414   6043   2348  3020/2733/98     464/83     5   20   19.91)
(smt.stats    4    525   7286   4220  3305/3096/112     692/165     9   37   19.91)
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 108&34359738368
lshr: (lshr[64] (* 268435456 (bv2int %0)) (mod (+ 28 #97 #258) 64)) 108 := 406142844928 >>l 29
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 108&34359738368
lshr: (lshr[64] (* 268435456 (bv2int %0)) (mod (+ 28 #97 #258) 64)) 108 := 406142844928 >>l 29
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 108&34359738368
lshr: (lshr[64] (* 268435456 (bv2int %0)) (mod (+ 28 #97 #258) 64)) 108 := 406142844928 >>l 29
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 648 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 643 := 752&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 110&34359738368
lshr: (lshr[64] (* 268435456 (bv2int %0)) (mod (+ 28 #97 #258) 64)) 110 := 406142844928 >>l 29
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 512 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 646 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 644 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 640 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 512 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 624 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 512 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 512 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 503 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 503 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 503 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 503 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 508 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 506 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 506 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 506 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 506 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 506 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 504 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 496 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 480 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 448 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 432 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 432 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 448 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 432 := 756&34359738368
(smt.stats    5    647  10716   6454  3437/3186/173     876/189    10   50   20.10)
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 448 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 384 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 384 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 384 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 384 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 288 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 256 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 288 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 256 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
lshr: (lshr[36] (bv2int %0) (mod (bv2int %0) 36)) 2180 := 1513 >>l 1
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
lshr: (lshr[36] (bv2int %0) (mod (bv2int %0) 36)) 1514 := 1513 >>l 1
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
lshr: (lshr[36] (bv2int %0) (mod (bv2int %0) 36)) 1514 := 1513 >>l 1
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
lshr: (lshr[36] (bv2int %0) (mod (bv2int %0) 36)) 1514 := 1513 >>l 1
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 32 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 32 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 756 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 752 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 736 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 704 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 512 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 671 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 512 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 444 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 444 := 756&34359738368
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  13401  10132  3521/3309/252     989/213    13   70   20.49)
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 384 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 384 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 280 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 272 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 256 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 280 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 274 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 272 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 256 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 16 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 2 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 2 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 2 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 16 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 16 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 16 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 512 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 32 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 1 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 64 := 756&34359738368
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 0 := 756&34359738368
band: (band[36] (lshr[36] (bv2int %0) (mod #97 36)) (if (= #465 35) 2361183241400462868480 (if #467 1180591620700231434240 #535))) 64 := 756&34359738368
(smt.stats    7    859  16733  13290  3608/3393/322    1154/217    15   91   20.71)
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 352 := 460&67645734912
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 352 := 384&67645734912
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 352 := 416&67645734912
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 352 := 352&67645734912
band: (band[36] (lshr[64] (* 268435456 #97) (mod #259 64)) (if (= #558 63) 1267650600209782657422993653760 (if #560 633825300104891328711496826880 #684))) 512 := 620&67645734912
(smt.stats    8    981  20007  16394  3677/3441/329    1453/277    16   93   20.80)
ramon: poll                 wall=1.004s usage=0.997s mem=22044KiB load=0.99 rootload=0.99
(smt.stats    9   1115  25923  21204  3828/3552/330    1655/350    18   93   20.90)
(smt.stats   10   1216  30008  26320  3923/3624/330    1858/356    18   93   21.00)
(smt.stats   11   1327  32690  29677  3968/3713/331    2028/445    19   96   21.00)
(smt.stats   12   1449  35299  37310  4024/3799/334    2334/472    20   96   21.21)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1583  39655  47823  4256/3966/335    2715/531    22  105   21.50)
ramon: poll                 wall=2.000s usage=1.993s mem=22820KiB load=1.00 rootload=0.99
(smt.stats   14   1730  44783  63219  4353/4080/336    2978/587    23  107   21.59)
(smt.stats   15   1831  48131  72872  4386/4087/336    3192/588    23  107   21.59)
(smt.stats   16   1942  51224  81977  4432/4163/340    3527/622    24  107   21.59)
(smt.stats   17   2064  53616  89855  4456/4167/340    3769/658    25  125   21.69)
(smt.stats   18   2198  56690 102755  4522/4211/340    3949/662    25  125   22.07)
(smt.stats   19   2345  60279 116396  4572/4269/340    4211/666    25  125   22.07)
(smt.stats   20   2506  62671 126793  4624/4351/341    4519/748    26  127   22.07)
ramon: poll                 wall=3.000s usage=2.993s mem=23456KiB load=1.00 rootload=1.00
(smt.stats   21   2607  66107 137279  4650/4377/343    4716/749    26  127   22.17)
(smt.stats   22   2718  68435 150017  4668/4397/344    4897/794    28  142   22.17)
(smt.stats   23   2840  70912 163678  4718/4427/344    5084/796    28  142   22.27)
(smt.stats   24   2975  73320 174686  4795/4511/347    5454/828    29  155   22.47)
(smt.stats   25   3122  79044 197645  4826/4514/348    5788/831    29  155   22.56)
(smt.stats   26   3283  86834 219836  4864/4551/348    6102/887    30  167   22.66)
ramon: poll                 wall=4.000s usage=3.990s mem=23920KiB load=1.00 rootload=1.00
(smt.stats   27   3460  93492 236108  4904/4590/349    6562/922    31  171   22.66)
(smt.stats   28   3561  97157 248440  4921/4631/349    6801/925    31  171   22.75)
(smt.stats   29   3672 101020 266479  4975/4643/349    7040/929    31  171   22.75)
(smt.stats   30   3794 103480 277741  5133/4700/349    7214/932    31  171   22.85)
ramon: poll                 wall=5.000s usage=4.986s mem=24168KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3928 105433 290789  5190/4906/350    7492/1054    32  172   22.85)
(smt.stats   32   4075 109706 303024  5241/4913/350    7852/1058    32  172   23.04)
(smt.stats   33   4236 114304 319752  5373/5005/350    8178/1062    32  172   23.13)
ramon: poll                 wall=6.000s usage=5.986s mem=24416KiB load=1.00 rootload=1.00
(smt.stats   34   4413 119538 335589  5661/5377/352    8717/1242    33  176   23.23)
(smt.stats   35   4607 125641 356160  5760/5387/352    9190/1246    33  176   23.33)
ramon: poll                 wall=7.000s usage=6.986s mem=24856KiB load=1.00 rootload=1.00
(smt.stats   36   4708 129812 367237  5807/5502/352    9446/1298    34  176   23.42)
(smt.stats   37   4819 132641 381448  5885/5601/353    9719/1336    35  178   23.42)
(smt.stats   38   4941 135701 393263  5903/5612/358   10292/1338    35  178   23.42)
(smt.delete-inactive-clauses  :num-deleted-clauses 56)
(smt.stats   39   5075 137836 405161  6025/5655/359   10465/1423    36  181   23.52)
ramon: poll                 wall=8.000s usage=7.982s mem=24908KiB load=1.00 rootload=0.99
(smt.stats   40   5222 139936 417610  6195/5906/360   10798/1426    36  181   23.61)
(smt.stats   41   5383 144961 440565  6221/5928/361   11423/1481    37  192   23.71)
(smt.stats   42   5560 148706 454458  6309/5953/361   12089/1564    38  192   23.80)
(smt.stats   43   5754 153866 479981  6465/6035/361   12744/1571    38  192   23.90)
ramon: poll                 wall=9.000s usage=8.982s mem=25292KiB load=1.00 rootload=1.00
(smt.stats   44   5967 159067 513435  6548/6226/361   13216/1575    38  192   23.99)
(smt.stats   45   6068 161832 524567  6619/6335/363   13518/1697    39  196   24.09)
(smt.stats   46   6179 165363 543009  6760/6340/363   13836/1705    39  196   24.09)
(smt.stats   47   6301 169296 565242  6860/6484/363   14175/1712    39  196   24.09)
(smt.stats   48   6435 173609 584011  6881/6589/363   14493/1713    39  196   24.18)
ramon: poll                 wall=10.000s usage=9.982s mem=25484KiB load=1.00 rootload=1.00
(smt.stats   49   6582 176896 596584  6933/6606/363   15122/1713    39  196   24.18)
(smt.stats   50   6743 184523 638413  6938/6654/364   15587/1898    40  196   24.28)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6920 188276 660272  6989/6661/364   16023/1901    40  196   24.28)
(smt.stats   52   7114 194896 691423  7005/6717/364   16341/1901    40  196   24.49)
ramon: poll                 wall=11.000s usage=10.981s mem=25888KiB load=1.00 rootload=1.00
(smt.stats   53   7327 201422 722081  7128/6844/366   16799/2016    41  248   24.68)
(smt.stats   54   7561 205799 743634  7223/6855/366   17348/2021    41  248   24.68)
ramon: poll                 wall=12.000s usage=11.981s mem=26168KiB load=1.00 rootload=1.00
(smt.stats   55   7662 208917 757386  7268/6946/366   17664/2022    41  248   24.77)
(smt.stats   56   7773 211530 770273  7346/7041/367   18058/2052    42  252   24.87)
(smt.stats   57   7895 216439 782825  7397/7080/367   18356/2055    42  252   24.87)
(smt.stats   58   8029 219045 792155  7442/7147/367   18852/2056    42  252   24.97)
(smt.stats   59   8176 224019 810195  7510/7169/367   19290/2060    42  252   25.06)
ramon: poll                 wall=13.000s usage=12.981s mem=26400KiB load=1.00 rootload=1.00
(smt.stats   60   8337 230308 829732  7588/7261/369   19901/2121    43  255   25.16)
(smt.stats   61   8514 233861 854807  7632/7325/369   20769/2126    43  255   25.16)
(smt.stats   62   8708 238411 881644  7683/7363/369   21657/2234    44  255   25.26)
ramon: poll                 wall=14.000s usage=13.981s mem=26724KiB load=1.00 rootload=1.00
(smt.stats   63   8921 243453 908176  7972/7407/369   22398/2234    44  255   25.45)
(smt.stats   64   9155 246709 934385  8008/7701/370   23633/2324    45  259   25.54)
(smt.stats   65   9412 252096 976424  8092/7736/370   24176/2324    45  259   25.64)
(smt.stats   66   9513 254457 984633  8095/7811/370   25228/2324    45  259   25.73)
ramon: poll                 wall=15.000s usage=14.977s mem=27160KiB load=1.00 rootload=1.00
(smt.stats   67   9624 258233 996955  8103/7819/370   25550/2324    45  259   25.83)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   68   9746 262490 1024471  8115/7827/370   26455/2325    45  259   25.92)
(smt.stats   69   9880 266351 1042054  8177/7835/370   26741/2328    45  259   25.92)
(smt.delete-inactive-clauses  :num-deleted-clauses 37)
ramon: poll                 wall=16.000s usage=15.977s mem=27732KiB load=1.00 rootload=1.00
(smt.stats   70  10027 269575 1062552  8312/7911/370   27118/2331    45  259   26.02)
(smt.stats   71  10188 273439 1083248  8493/8043/370   27448/2334    45  259   26.13)
ramon: poll                 wall=17.000s usage=16.977s mem=27748KiB load=1.00 rootload=1.00
(smt.stats   72  10365 279386 1122128  8680/8238/370   28097/2339    45  259   26.22)
(smt.stats   73  10559 287656 1175191  8747/8440/370   29015/2341    45  259   26.32)
(smt.stats   74  10772 297229 1230664  8766/8464/370   29831/2341    45  259   26.51)
ramon: poll                 wall=18.000s usage=17.976s mem=27840KiB load=1.00 rootload=1.00
(smt.stats   75  11006 303271 1268732  8802/8518/372   30717/2834    46  267   26.51)
(smt.stats   76  11263 311840 1323182  8876/8526/372   31536/2837    46  267   26.61)
(smt.stats   77  11545 318727 1378294  8902/8616/372   33160/2863    47  286   26.89)
ramon: poll                 wall=19.000s usage=18.976s mem=28336KiB load=1.00 rootload=1.00
(smt.stats   78  11646 321973 1398175  8953/8657/374   33825/3120    48  328   26.89)
(smt.stats   79  11757 325811 1420563  8998/8695/375   34308/3123    48  328   27.00)
(smt.stats   80  11879 331487 1462384  9015/8717/377   34692/3123    48  328   27.10)
(smt.stats   81  12013 334096 1487675  9040/8728/377   35411/3126    48  328   27.10)
(smt.stats   82  12160 338653 1516146  9142/8751/377   35993/3211    49  390   27.19)
ramon: poll                 wall=20.000s usage=19.975s mem=28616KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:17:11 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.989s
ramon: group.utime          19.985s
ramon: group.stime          0.004s
ramon: group.mempeak        28872KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              1.00
