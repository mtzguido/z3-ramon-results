ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:58:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29016 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DEMSbEo1zHaG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             697443
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   64.9351     10000        49          0            1        2)
(sat.ddfw       1      1   33.1159     20001        98          1            1        3)
(smt.stats    0    101   4316    394  1190/1075/97     102/19     5   16   51.94)
(sat.ddfw       1      1   35.0877     40001       196          2            1        5)
(smt.stats    1    203   7982    971  1836/1673/99     210/30     6   19   52.13)
(smt.stats    2    314  12198   2510  1939/1678/99     345/31     6   19   52.13)
(sat.ddfw       1      1   33.2594     70001       343          3            1        8)
ramon: poll                 wall=1.004s usage=0.828s mem=54444KiB load=0.83 rootload=0.82
(smt.stats    3    415  15295   3038  2016/1787/99     457/32     6   19   52.34)
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 33 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 34 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 34 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 36 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 122 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 120 := 128&124
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 32 := 128&123
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&91
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088923 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&91
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088923 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&90
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088922 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 44 #749 #753) 64)) 35184372088833 := 137438953634 << 7
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 128 := 128&17592186065152
(smt.stats    4    526  17720   4593  2383/2177/111     547/73     8   27   52.43)
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 126 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 124 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 124 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 8 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 68719476818 := 68719476817 << 8
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 68719476818 := 68719476817 << 8
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 127 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 127 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 126 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 124 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 4 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 8 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
shl: (shl[45] (bv2int %0) (+ 45 (* 35184372088831 #104))) 17592186065151 := 68719476817 << 8
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 64 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 32 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 8 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 8 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 2 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 2 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 4 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 4 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 16 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 128 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 0 := 128&17592186065152
band: (band[45] (if (= #108 44) 1 (if #584 2 #670)) (shl[45] (bv2int %0) (+ 45 #673))) 1 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 2 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 2 := 128&17592186065152
band: (band[45] (if (= #342 63) 1 (if #564 2 #742)) (shl[64] (* 2 #102) (mod #757 64))) 2 := 128&17592186065152
(smt.stats    5    648  20972   7820  2514/2321/256     671/97    11   60   52.95)
(sat.ddfw       1      1   29.8063    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    749  24467   9612  2746/2475/256     795/101    11   60   53.14)
(sat.ddfw       1      1   26.4545    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.822s mem=55416KiB load=1.00 rootload=0.99
(smt.stats    7    860  29451  13017  2930/2670/259     967/121    13   68   53.43)
(smt.stats    8    982  33372  18749  3152/2906/266    1219/181    16   74   53.52)
(sat.ddfw       1      1   23.6317    220001      1078          6            1       23)
(smt.stats    9   1116  40478  24119  3339/3000/267    1457/184    17   78   53.91)
ramon: poll                 wall=3.004s usage=2.825s mem=56108KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.2186    290001      1421          7            1       30)
(smt.stats   10   1217  43657  26147  3508/3228/269    1614/201    18   84   54.10)
(smt.stats   11   1328  47244  30612  3771/3307/269    1934/212    19   86   54.20)
ramon: poll                 wall=4.000s usage=3.818s mem=56332KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.1847    370001      1813          8            1       38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  49487  34447  3966/3710/272    2164/271    20   90   54.30)
(smt.stats   13   1584  55959  40005  4001/3718/274    2593/279    20   90   54.39)
(smt.stats   14   1731  61652  47687  4086/3809/275    2852/372    22  104   54.59)
ramon: poll                 wall=5.000s usage=4.816s mem=56888KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   17.4656    460001      2254          9            1       47)
(smt.stats   15   1832  65887  54030  4211/3844/275    3139/375    22  104   54.68)
(smt.stats   16   1943  70761  62913  4344/4082/278    3474/441    24  109   54.78)
(smt.stats   17   2065  75844  69511  4447/4086/278    3902/448    24  109   54.87)
ramon: poll                 wall=6.000s usage=5.825s mem=57276KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   16.3239    560001      2745         10            1       57)
(smt.stats   18   2199  80032  77551  4569/4224/279    4151/565    25  111   54.87)
ramon: poll                 wall=7.000s usage=6.914s mem=57192KiB load=1.09 rootload=1.09
(smt.stats   19   2346  87403  89254  4825/4335/279    4591/565    25  111   54.97)
(sat.ddfw       1      1   15.1892    670001      3284         11            1       68)
(smt.stats   20   2507  93023  98417  4986/4580/279    5271/569    25  111   55.28)
ramon: poll                 wall=8.000s usage=7.916s mem=57776KiB load=1.00 rootload=1.00
(smt.stats   21   2608  97261 108861  5071/4751/279    5615/569    25  111   55.38)
(smt.stats   22   2719 102938 118952  5172/4824/280    5923/674    26  118   55.47)
(sat.ddfw       1      1     14.04    790001      3872         12            1       80)
(smt.stats   23   2841 109016 128797  5376/4939/280    6210/677    26  118   55.57)
ramon: poll                 wall=9.000s usage=8.917s mem=57888KiB load=1.00 rootload=1.00
(smt.stats   24   2975 112466 135323  5600/5157/280    6537/679    26  118   55.66)
(smt.stats   25   3122 118779 148076  5751/5347/280    6802/686    26  118   55.76)
ramon: poll                 wall=10.000s usage=9.916s mem=57996KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.0313    920001      4509         13            1       93)
(smt.stats   26   3283 122034 156227  5871/5526/280    7056/697    26  118   55.85)
(smt.stats   27   3460 125072 162445  6173/5909/284    7580/825    27  123   55.95)
ramon: poll                 wall=11.004s usage=10.919s mem=58404KiB load=1.00 rootload=1.00
(smt.stats   28   3561 130036 167661  6246/5911/284    7749/825    27  123   55.95)
(smt.stats   29   3672 134749 174886  6362/6022/284    7998/987    28  139   55.95)
(sat.ddfw       1      1   12.1676   1060001      5196         14            1      108)
(smt.stats   30   3794 140289 185568  6436/6103/284    8161/988    28  139   56.30)
ramon: poll                 wall=12.004s usage=11.915s mem=58616KiB load=1.00 rootload=1.00
(smt.stats   31   3928 145368 194409  6595/6215/284    8554/988    28  139   56.39)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 148995 205580  6633/6339/284    8830/988    28  139   56.49)
ramon: poll                 wall=13.004s usage=12.987s mem=58632KiB load=1.07 rootload=1.07
(smt.stats   33   4236 155870 213957  6784/6395/284    9130/992    28  139   56.58)
(sat.ddfw       1      1   11.4121   1210001      5931         15            1      123)
(smt.stats   34   4413 161763 224020  6998/6537/284    9359/996    28  139   56.68)
ramon: poll                 wall=14.000s usage=13.979s mem=59068KiB load=1.00 rootload=0.99
(smt.stats   35   4607 168486 240980  7091/6788/290    9914/1269    29  143   56.77)
(sat.ddfw       1      1   10.7788   1370001      6715         16            1      139)
(smt.stats   36   4708 172982 247703  7274/6906/291   10480/1333    30  148   56.87)
ramon: poll                 wall=15.000s usage=15.000s mem=59360KiB load=1.02 rootload=1.02
(smt.stats   37   4819 177454 257485  7480/7024/291   10819/1337    30  148   56.97)
ramon: poll                 wall=16.000s usage=15.997s mem=59428KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 181326 275859  7654/7246/291   11144/1377    31  148   57.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 782)
(smt.stats   39   5075 186197 291778  7709/7402/291   11334/1378    31  148   57.06)
(sat.ddfw       1      1   10.1772   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=16.992s mem=59608KiB load=0.99 rootload=0.99
(smt.stats   40   5222 192279 306140  7921/7470/291   11894/1387    31  148   57.25)
(smt.stats   41   5383 199144 319962  8070/7680/291   12208/1389    31  148   57.35)
ramon: poll                 wall=18.000s usage=17.994s mem=59880KiB load=1.00 rootload=1.00
(smt.stats   42   5560 204165 335035  8244/7905/291   12827/1389    31  148   57.44)
(sat.ddfw       1      1    9.6401   1720001      8431         18            1      174)
ramon: poll                 wall=19.004s usage=18.993s mem=60036KiB load=1.00 rootload=1.00
(smt.stats   43   5754 211930 363502  8399/8018/291   13413/1391    31  148   57.95)
ramon: poll                 wall=20.000s usage=19.988s mem=60396KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 21:59:14 2024
ramon: root.execname        z3
ramon: root.utime           20.040s
ramon: root.stime           0.010s
ramon: group.total          20.061s
ramon: group.utime          20.041s
ramon: group.stime          0.020s
ramon: group.mempeak        60656KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.00
