ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:55:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28383 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/EZDViRfnaJCR.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4133909
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1606    402   604/550/99     125/16     5   16   18.59)
(smt.stats    1    202   3450   1209   811/701/99     254/19     5   16   18.69)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 16383 := 57472&16384
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&16384
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&32768
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&32768
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8192 := 57472&8192
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 270336 := 270336 >>l 26
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8192 := 57472&8192
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 270336 := 270336 >>l 26
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8192 := 57472&8192
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 270336 := 270336 >>l 26
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8192 := 57472&8192
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 270336 := 270336 >>l 26
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8192 := 57472&8192
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 270336 := 270336 >>l 26
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 0 := 0 >>l 26
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 13
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 0 := 0 >>l 26
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 13
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 0 := 0 >>l 26
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 13
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 0 := 0 >>l 26
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 57472&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 13
(smt.stats    2    313   5100   2357   966/864/142     272/41     7  137   18.88)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 67108864 := 67108864 >>l 29
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 67108864 := 67108864 >>l 29
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 67108864 := 67108864 >>l 29
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 67108864 := 67108864 >>l 29
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 67108864 := 67108864 >>l 29
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 7185 := 0 >>l 16
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 16
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 16
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 16
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 7184&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 16
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 28736&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 0 := 0 >>l 27
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 28736&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 0 := 0 >>l 27
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 28736&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 14
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 28736&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 0 := 0 >>l 27
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 28736&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 14
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 28736&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 0 := 0 >>l 27
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 28736&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 14
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 14368&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 0 := 0 >>l 28
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 14368&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 1 := 0 >>l 15
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8191 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8190 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8188 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8191 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8190 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 19 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 16 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 32 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 64 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 128 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 256 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 32 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 32 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 128 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 256 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 512 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1024 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4096 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4096 := 28736&8192
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1024 := 28736&8192
(smt.stats    3    427   5873   3942  1229/1125/245     490/87    10  176   19.27)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 3592&8191
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 3592&8191
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 3592&7928
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 3592&7936
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 3592&7936
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 896 := 1796&7936
(smt.stats    4    538   8726   8225  1434/1310/257     776/132    12  179   19.36)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 771 := 1796&7936
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 770 := 1796&7936
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 768 := 1796&7936
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 768 := 1796&7936
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 768 := 1796&7936
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1536 := 1796&7936
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1536 := 1796&7936
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1536 := 1796&7943
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1536 := 1796&7939
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1792 := 1796&7939
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 270083 := 65028096 >>l 31
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1792 := 1796&7939
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 270083 := 65028096 >>l 31
(smt.stats    5    660  10763  14089  1493/1369/293    1045/225    15  195   19.56)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    761  12772  18055  1529/1382/295    1304/236    16  197   19.66)
(smt.stats    7    872  14871  24091  1565/1410/295    1463/303    17  199   19.75)
(smt.stats    8    994  17158  30304  1648/1494/295    1732/304    17  199   19.95)
(smt.stats    9   1128  20420  40950  1690/1522/295    1996/305    17  199   19.95)
(smt.stats   10   1229  22650  47437  1713/1563/296    2150/371    18  206   19.95)
(smt.stats   11   1340  24242  51514  1725/1578/296    2372/371    18  206   20.09)
(smt.stats   12   1462  26003  56279  1752/1612/298    2572/396    19  209   20.09)
(smt.stats   13   1596  28745  63681  1763/1621/299    2818/396    19  209   20.18)
(smt.stats   14   1743  32130  74029  1766/1624/299    3041/438    20  210   20.18)
(smt.stats   15   1844  33732  78522  1804/1630/303    3288/451    21  219   20.28)
(smt.stats   16   1955  35140  83182  1850/1709/306    3490/466    22  232   20.28)
(smt.stats   17   2077  37413  91422  1874/1735/308    3751/526    23  246   20.37)
ramon: poll                 wall=1.003s usage=0.939s mem=22024KiB load=0.94 rootload=0.92
(smt.stats   18   2211  40343  99677  1996/1748/309    4123/536    23  246   20.66)
(smt.stats   19   2358  44214 110064  2059/1876/309    4558/572    24  247   20.66)
(smt.stats   20   2522  47222 122356  2155/1969/311    5060/601    25  254   20.76)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 786432 := 134209536 >>l 18
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 786432 := 134209536 >>l 18
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 786432 := 134209536 >>l 18
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 786432 := 134209536 >>l 18
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 786432 := 134209536 >>l 18
(smt.stats   21   2623  49094 130227  2206/2039/312    5442/656    26  258   20.86)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 19 := 20 >>l 5
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 19 := 31 >>l 5
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 19 := 31 >>l 5
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 19 := 20 >>l 5
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&0
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 19 := 31 >>l 5
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2 := 32768&19
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2 := 32768&19
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2 := 32768&19
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1 := 32768&19
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 16 := 32768&19
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8 := 32768&19
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4 := 32768&19
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 32 := 32768&39
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 32 := 32768&32
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 64 := 32768&64
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 256 := 32768&256
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 256 := 32768&256
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas        :deletions      )
(smt.stats   22   2734  50005 134799  2299/2155/349    4788/684    27 1195   21.05)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1024 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4096 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4096 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 512 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 1 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 2 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 4 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 4096 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 4096 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 4095 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 4094 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 2 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 4 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 8 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 16 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 32 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 64 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 128 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 256 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 512 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 1024 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 2048 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 128 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 94 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 68 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 72 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 80 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 80 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 66 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 64 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 64 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 32 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 8 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 8 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 4 := 32768&4096
(smt.stats   23   2856  50756 140982  2480/2219/425    4985/693    27 1195   21.48)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 3072 := 32768&4096
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 32768&4096
band: (band[18] (if (= #113 17) 235405312 (if #310 117702656 #342)) (lshr[18] (bv2int %0) (+ 18 #345))) 3072 := 32768&4096
(smt.stats   24   2990  51105 143561  2791/2413/455    5355/695    27 1195   21.67)
(smt.stats   25   3137  54230 157336  2830/2637/462    6021/695    27 1195   21.88)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1024 := 197632&85511
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1024 := 197632&85511
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1024 := 197632&85505
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1024 := 197632&82946
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1024 := 197632&84993
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1024 := 197632&84993
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 16 := 197632&85511
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 64 := 197632&85511
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 64 := 197632&85511
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 197632&85511
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 197632&84496
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 65536 := 197632&84496
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 870928 := 155189248 >>l 23
(smt.stats   26   3298  59701 174041  2918/2737/487    6939/979    29 1233   21.98)
(smt.stats   27   3475  62985 192814  3182/3002/488    7661/1050    30 1246   22.28)
(smt.stats   28   3576  64684 198957  3200/3007/488    8208/1051    30 1246   22.38)
(smt.stats   29   3687  69096 210847  3241/3045/489    8753/1052    30 1246   22.48)
ramon: poll                 wall=2.000s usage=1.935s mem=23816KiB load=1.00 rootload=0.99
(smt.stats   30   3809  72542 224829  3292/3068/489    9317/1201    31 1250   22.48)
(smt.stats   31   3943  74969 238698  3302/3122/495    9955/1317    32 1259   22.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions      )
(smt.stats   32   4090  79064 261100  3339/3155/496   10597/1404    33 1291   22.67)
(smt.stats   33   4251  81587 277070  3426/3175/496   10920/1406    33 1291   22.77)
(smt.stats   34   4428  84383 290394  3620/3350/496   11433/1407    33 1291   22.87)
(smt.stats   35   4622  88775 311617  3753/3471/502   12103/1547    34 1297   23.06)
(smt.stats   36   4723  89479 313945  3937/3586/502   12265/1552    34 1297   23.06)
(smt.stats   37   4834  91132 325570  3997/3793/502   12468/1553    34 1297   23.06)
(smt.stats   38   4956  93138 338287  4017/3816/502   13120/1773    35 1318   23.26)
(smt.delete-inactive-clauses  :num-deleted-clauses 206)
(smt.stats   39   5090  96884 356489  4062/3853/502   13617/1774    35 1318   23.26)
ramon: poll                 wall=3.000s usage=2.935s mem=24904KiB load=1.00 rootload=1.00
(smt.stats   40   5237 101074 381420  4122/3868/502   14074/1776    35 1318   23.36)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 0&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 524288 := 142614528 >>l 14
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 0&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 262144 := 150986752 >>l 14
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 0&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 262144 := 142598144 >>l 14
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 0&0
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 262144 := 142598144 >>l 14
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 0&898
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 57 := 1797 >>l 1
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 0&898
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 57 := 1797 >>l 1
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 0&898
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 899 := 1797 >>l 1
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 0&898
lshr: (lshr[18] (bv2int %0) (+ 18 (* 262143 #109))) 899 := 1797 >>l 1
(smt.stats   41   5398 105139 405198  4183/3925/502   14912/1780    35 1318   23.66)
(smt.stats   42   5575 108449 426575  4302/4060/513   15749/1945    36 1320   23.86)
(smt.stats   43   5769 110844 445545  4343/4100/513   16176/1945    36 1320   23.95)
(smt.stats   44   5982 115719 471478  4380/4160/514   17670/2000    37 1334   24.25)
(smt.stats   45   6083 118744 482770  4391/4163/514   17954/2000    37 1334   24.25)
(smt.stats   46   6194 121380 501044  4404/4181/515   18671/2170    38 1344   24.35)
ramon: poll                 wall=4.000s usage=3.935s mem=25928KiB load=1.00 rootload=1.00
(smt.stats   47   6316 125673 519882  4515/4292/517   19599/2174    38 1344   24.54)
(smt.stats   48   6450 129052 540185  4651/4313/518   20539/2480    39 1364   24.63)
(smt.stats   49   6597 133489 553095  4730/4457/518   21036/2486    39 1364   24.83)
(smt.stats   50   6758 138558 582141  4832/4553/518   21774/2494    39 1364   25.02)
ramon: poll                 wall=5.000s usage=4.935s mem=26440KiB load=1.00 rootload=1.00
(smt.stats   51   6935 142562 604575  4848/4624/518   22998/2494    39 1364   25.11)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions      )
(smt.stats   52   7129 147216 629993  4868/4639/518   25020/2494    39 1364   25.21)
(smt.stats   53   7342 152289 656038  4992/4658/519   26723/2945    40 1367   25.41)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 131072&15376
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 131072&15376
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 131072&15376
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 2048 := 131072&15376
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8192 := 131072&15376
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8192 := 131072&16080
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8192 := 131072&16080
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4096 := 131072&16080
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4096 := 131072&15376
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4096 := 131072&15376
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 131072&15376
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 801808 := 1738801152 >>l 16
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 131072&15456
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 539744 := 1744568320 >>l 16
(smt.stats   54   7576 155470 683925  5095/4800/519   27420/2954    40 1367   25.71)
(smt.stats   55   7677 157039 698468  5185/4894/534   27613/2957    40 1367   25.84)
(smt.stats   56   7788 160699 716474  5232/4984/534   28394/3157    41 1370   25.94)
ramon: poll                 wall=6.000s usage=5.935s mem=27464KiB load=1.00 rootload=1.00
(smt.stats   57   7910 164616 735876  5267/5021/534   29004/3159    41 1370   25.94)
(smt.stats   58   8044 167922 753020  5298/5061/535   30149/3162    41 1370   26.13)
(smt.stats   59   8191 170792 768725  5436/5138/536   30762/3166    41 1370   26.23)
(smt.stats   60   8352 174089 790356  5510/5231/536   31382/3386    42 1388   26.23)
(smt.stats   61   8529 178190 818447  5612/5308/536   32050/3388    42 1388   26.42)
ramon: poll                 wall=7.000s usage=6.935s mem=27976KiB load=1.00 rootload=1.00
(smt.stats   62   8723 182068 854577  5745/5432/539   32503/3391    42 1388   26.52)
(smt.stats   63   8936 185212 881546  5965/5600/539   33150/3445    43 1420   26.72)
(smt.stats   64   9170 190861 915835  6035/5781/542   34746/3446    43 1420   27.00)
(smt.stats   65   9427 195226 949125  6084/5807/543   36140/3447    43 1420   27.10)
ramon: poll                 wall=8.000s usage=7.935s mem=28744KiB load=1.00 rootload=1.00
(smt.stats   66   9528 197793 966826  6135/5853/543   36620/3707    44 1466   27.20)
(smt.stats   67   9639 200310 986162  6240/5919/543   37051/3708    44 1466   27.20)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions      )
(smt.stats   68   9761 203047 1007898  6346/6029/544   37614/3709    44 1466   27.30)
(smt.stats   69   9895 204943 1028204  6391/6136/545   38054/3710    44 1466   27.30)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   70  10042 206863 1047198  6429/6172/545   38436/3713    44 1466   27.39)
(smt.stats   71  10203 210130 1077737  6480/6193/545   38948/3812    45 1476   27.49)
ramon: poll                 wall=9.000s usage=8.935s mem=29000KiB load=1.00 rootload=1.00
(smt.stats   72  10380 215772 1116245  6570/6251/545   39891/3816    45 1476   27.58)
(smt.stats   73  10574 220041 1139793  6635/6392/546   41089/3817    45 1476   27.87)
(smt.stats   74  10787 225592 1178495  6833/6413/546   41804/3827    45 1476   27.96)
(smt.stats   75  11021 229504 1204189  7038/6662/546   42823/4067    46 1479   28.06)
ramon: poll                 wall=10.003s usage=9.939s mem=29512KiB load=1.00 rootload=1.00
(smt.stats   76  11278 234485 1245110  7285/6844/547   44130/4070    46 1479   28.25)
(smt.stats   77  11560 240927 1286193  7397/7074/547   45329/4074    46 1479   28.35)
(smt.stats   78  11661 244012 1299262  7485/7163/547   45648/4236    47 1482   28.44)
(smt.stats   79  11772 246593 1319123  7596/7266/547   45941/4238    47 1482   28.54)
ramon: poll                 wall=11.000s usage=10.935s mem=30188KiB load=1.00 rootload=1.00
(smt.stats   80  11894 250600 1358767  7709/7374/547   46526/4239    47 1482   28.54)
(smt.stats   81  12028 253100 1383197  7740/7500/549   48007/4241    47 1482   28.73)
(smt.stats   82  12175 256898 1399644  7768/7512/549   48394/4241    47 1482   28.83)
(smt.stats   83  12336 261015 1432125  7858/7546/550   48766/4446    48 1526   28.83)
(smt.stats   84  12513 264973 1469858  7940/7640/550   49910/4452    48 1526   29.16)
ramon: poll                 wall=12.000s usage=11.934s mem=30700KiB load=1.00 rootload=1.00
(smt.stats   85  12707 271227 1544441  8096/7770/551   51252/4457    48 1526   29.16)
(smt.stats   86  12920 278907 1605598  8273/7860/551   52798/4459    48 1526   29.45)
(smt.stats   87  13154 286042 1652420  8440/8064/552   54753/4649    49 1562   29.64)
ramon: poll                 wall=13.000s usage=12.934s mem=31212KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats   88  13411 292249 1710767  8594/8233/552   56059/4650    49 1562   29.83)
(smt.stats   89  13693 300943 1777609  8614/8369/554   59792/4862    50 1579   30.12)
(smt.stats   90  14003 309913 1844091  8709/8390/554   62758/4863    50 1579   30.67)
ramon: poll                 wall=14.000s usage=13.934s mem=32236KiB load=1.00 rootload=1.00
(smt.stats   91  14104 312498 1858205  8756/8478/554   63711/4863    50 1579   30.76)
(smt.stats   92  14215 314211 1880453  8911/8642/555   64182/4863    50 1579   30.96)
(smt.stats   93  14337 318396 1912464  9008/8677/555   64732/4867    50 1579   30.96)
(smt.stats   94  14471 321138 1936614  9040/8797/555   66031/5142    51 1585   31.15)
(smt.stats   95  14618 322922 1956601  9068/8810/555   66805/5143    51 1585   31.24)
(smt.stats   96  14779 325339 1972671  9236/8853/556   67260/5147    51 1585   31.34)
ramon: poll                 wall=15.000s usage=14.934s mem=32728KiB load=1.00 rootload=1.00
(smt.stats   97  14956 327211 1991786  9339/9040/556   67915/5148    51 1585   31.61)
(smt.delete-inactive-clauses  :num-deleted-clauses 924)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8 := 4096&65544
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 8 := 4096&65544
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1 := 4096&65544
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 1 := 4096&65544
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 4096&65544
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 589832 := 2013265920 >>l 21
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 4096&65544
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 327688 := 2013265920 >>l 21
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 0 := 4096&65544
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 327688 := 2013265920 >>l 21
(smt.stats   98  15150 330181 2022317  9393/9114/556   67848/5152    51 1585   31.71)
band: (band[18] (if (= #201 31) 3856880631808 (if #287 1928440315904 #284)) (lshr[32] (* 8192 #184) (mod #363 32))) 4096 := 4096&36868
lshr: (lshr[32] (* 8192 (bv2int %0)) (mod (+ 31 #356 #360) 32)) 36868 := 939794432 >>l 21
(smt.stats   99  15363 333354 2060573  9588/9187/561   68493/5155    51 1585   31.80)
(smt.stats  100  15597 337189 2100737  9604/9358/561   69601/5155    51 1585   31.90)
(smt.stats  101  15854 341143 2162936  9611/9370/561   71110/5432    52 1587   31.99)
ramon: poll                 wall=16.000s usage=15.934s mem=33560KiB load=1.00 rootload=1.00
(smt.stats  102  16136 346508 2227117  9626/9377/561   73754/5432    52 1587   32.18)
(smt.stats  103  16446 352640 2299331  9633/9392/561   76894/5432    52 1587   32.38)
ramon: poll                 wall=17.000s usage=16.934s mem=34328KiB load=1.00 rootload=0.99
(smt.stats  104  16786 356651 2382647  9774/9395/561   78173/5434    52 1587   32.57)
(smt.stats  105  16887 357542 2408834  9798/9543/561   78409/5434    52 1587   32.66)
(smt.stats  106  16998 358974 2427345  9837/9590/561   79080/5434    52 1587   32.66)
(smt.stats  107  17120 362705 2449264  9917/9597/561   79727/5437    52 1587   32.85)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions      )
(smt.stats  108  17254 366343 2476555 10040/9691/561   80232/5439    52 1587   32.95)
ramon: poll                 wall=18.000s usage=17.933s mem=34816KiB load=1.00 rootload=1.00
(smt.stats  109  17401 369554 2501831 10133/9810/561   80607/5441    52 1587   32.95)
(smt.stats  110  17562 372917 2528231 10171/9928/564   81990/6418    53 1594   33.05)
(smt.stats  111  17739 379262 2589029 10245/9935/564   83659/6418    53 1594   33.14)
(smt.stats  112  17933 383479 2633623 10406/10031/564   84476/6420    53 1594   33.34)
ramon: poll                 wall=19.000s usage=18.933s mem=35072KiB load=1.00 rootload=1.00
(smt.stats  113  18146 389241 2680232 10497/10182/564   86176/6425    53 1594   33.54)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas          :deletions      )
(smt.stats  114  18380 395758 2728778 10672/10296/564   87219/6426    53 1594   33.74)
ramon: poll                 wall=20.000s usage=19.933s mem=36096KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:56:19 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.020s
ramon: group.total          20.004s
ramon: group.utime          19.980s
ramon: group.stime          0.024s
ramon: group.mempeak        36096KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
