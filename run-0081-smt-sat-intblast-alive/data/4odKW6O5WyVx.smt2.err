ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:32:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30253 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1400
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/4odKW6O5WyVx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             247151
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   142/140     0/0  61       0    18.44   0.00)
(sat.stats    101    337    0   142/140   101/58  61       0    18.66   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 381 :time 0.00)
(sat.stats    101    337    0   142/140   101/58  61       0    18.66   0.00)
(sat.stats    101    337    0   142/140   101/58  61       0    18.66   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 294018.66 :time 0.00)
(sat.stats    101    337    0   146/144    85/59  61       0    18.66   0.00)
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 1 := 1 << 47
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 425 :time 0.00)
(sat.stats    345   4479    1   187/184   327/278  76       0    19.05   0.03)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    348   4493    2   187/184   330/278  76       0    19.05   0.03)
(sat.stats    351   4512    3   187/184   333/278  76       0    19.05   0.04)
(sat.stats    354   4522    4   187/184   336/278  76       0    19.05   0.04)
(sat.stats    357   4563    5   192/188   339/280  76       0    19.05   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 539 :time 0.00)
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 1&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 1 := 194 << 46
(sat.stats    360   4599    6   204/199   343/281  76       0    19.05   0.04)
(sat.stats    363   4622    7   216/211   345/281  80       0    19.05   0.04)
(sat.stats    366   4649    8   220/215   348/281  80       0    19.05   0.04)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 582 :time 0.00)
(sat.stats    369   4677    9   221/216   350/281  80       0    19.14   0.05)
(sat.stats    372   4707   10   225/220   353/281  80       0    19.14   0.05)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 612 :time 0.00)
(sat.stats    376   4752   11   227/222   355/282  81       0    19.14   0.05)
(sat.stats    379   4775   12   227/222   358/282  81       0    19.14   0.05)
(sat.stats    382   4785   13   227/222   361/282  81       0    19.14   0.05)
(sat.stats    385   4800   14   227/222   364/283  81       0    19.14   0.05)
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 1&140737488355328
band: (band[48] (if (or #383 #386 #389 #392 #395 #398 #401 #404 #407 #410 #413 #416 #419 #422 #425 #428 ...) 0 (if #380 1 #817)) (shl[64] (* 2 #57) (mod #1011 64))) 1 := 1&140737488355328
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 1 := 1&140737488355328
 (sat-cleaner :elim-literals 17 :elim-clauses 1 :cost 1072 :time 0.00)
(sat.stats    473   5598   20   723/717   460/305  97       0    19.43   0.18)
ramon: poll                 wall=1.000s usage=0.961s mem=21292KiB load=0.96 rootload=0.95
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    838   7933   31  3623/3617   850/308  97       0    20.48   1.26)
(sat.stats   1172   9587   38  5736/5730  1220/315  97       0    20.83   1.68)
ramon: poll                 wall=2.000s usage=1.961s mem=22264KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 4 :elim-clauses 1 :cost 10343 :time 0.00)
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 140737488355267 := 0 << 47
 (sat-cleaner :elim-literals 10 :elim-clauses 75 :cost 11157 :time 0.00)
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 1 := 6 << 42
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&26388279066624
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 1688849860263936 := 12 << 41
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 39582418599936 := 9 << 39
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&4947802324992
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 2533274790395904 := 18 << 38
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 1099511627776 := 2 << 46
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&140737488355328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 562949953421312 := 4 << 45
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 32168 := 4 << 44
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&70368744177664
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 1125899906842624 := 8 << 43
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 87960930222080 := 5 << 43
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 140737488355328 := 8 << 40
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&8796093022208
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 2251799813685248 := 16 << 39
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 3298534883328 := 3 << 45
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&105553116266496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 844424930131968 := 6 << 44
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&43980465111040
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 1407374883553280 := 10 << 42
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 61572651155456 := 7 << 41
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&15393162788864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 1970324836974592 := 14 << 40
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 211106232532992 := 24 << 24
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&402653184
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 7599824371187712 := 48 << 23
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #72))) 58674 := 43 << 5
band: (band[48] (if (or #565 #566 #567 #568 #569 #570 #571 #572 #573 #574 #575 #576 #577 #578 #579 #580 ...) 0 (if #611 1 #613)) (shl[48] (bv2int %0) (+ 48 #793))) 0 := 0&1376
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1003 #1007) 64)) 721420288 := 86 << 4
(sat.stats   2662  52026  145 14715/14692  2745/775 115       0    22.80   2.68)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 13053 :time 0.00)
(sat.stats   2714  55247  146 15003/14979  2800/780 178       0    22.91   2.70)
 (sat-cleaner :elim-literals 12 :elim-clauses 0 :cost 13676 :time 0.00)
ramon: poll                 wall=3.000s usage=2.954s mem=24228KiB load=0.99 rootload=0.99
ramon: poll                 wall=4.000s usage=3.954s mem=24712KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.954s mem=25556KiB load=1.00 rootload=1.00
(sat.stats   3602 110564  220 20748/20723  3800/994 179       0    24.16   5.48)
ramon: poll                 wall=6.000s usage=5.953s mem=25592KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.952s mem=26092KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.952s mem=26444KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.952s mem=27044KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.952s mem=27956KiB load=1.00 rootload=1.00
(sat.stats   6557 184157  245 39928/39903  5539/1332 179       0    28.34  10.49)
ramon: poll                 wall=11.000s usage=10.951s mem=30996KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.951s mem=32216KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.002s usage=12.953s mem=33028KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.951s mem=33484KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc         :time )
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   8091 216294  356 52909/52884  6359/1386 179       0    34.21  14.59)
ramon: poll                 wall=15.000s usage=14.950s mem=34716KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.950s mem=39440KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 32706 :time 0.00)
ramon: poll                 wall=17.000s usage=16.950s mem=39652KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.950s mem=39744KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.950s mem=39920KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.950s mem=40976KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:33:02 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.995s
ramon: group.utime          19.975s
ramon: group.stime          0.020s
ramon: group.mempeak        41232KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.045s
ramon: loadavg              1.00
