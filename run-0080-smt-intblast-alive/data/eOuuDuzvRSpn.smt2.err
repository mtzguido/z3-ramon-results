ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:45:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25117 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1401
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/eOuuDuzvRSpn.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             105637
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4169    585  1281/1083/97     112/8     5   14   19.18)
(smt.stats    1    202   6467    987  1751/1557/100     225/23     8   18   19.37)
(smt.stats    2    313   8868   1881  1934/1677/100     352/24     8   18   19.46)
(smt.stats    3    414  11470   3718  2069/1844/100     461/24     8   18   19.46)
(smt.stats    4    525  11929   4352  2682/1923/105     588/100     9   20   19.68)
(smt.stats    5    647  14879   7405  2719/2500/106     714/117    11   27   19.77)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19638  14724  2809/2572/107     831/130    12   27   19.87)
(smt.stats    7    859  20800  17473  2971/2704/109     977/165    13   29   19.87)
(smt.stats    8    981  22895  22267  3041/2796/110    1122/214    14   29   19.97)
(smt.stats    9   1115  25697  26825  3065/2807/110    1255/215    14   29   19.97)
(smt.stats   10   1216  27254  34420  3108/2858/111    1353/222    15   32   19.97)
(smt.stats   11   1327  28572  36493  3125/2876/111    1481/222    15   32   20.06)
(smt.stats   12   1449  30314  39141  3155/2910/117    1637/229    16   33   20.06)
ramon: poll                 wall=1.001s usage=0.932s mem=21168KiB load=0.93 rootload=0.93
(smt.stats   13   1583  31998  42540  3159/2914/118    1766/261    17   46   20.18)
(smt.stats   14   1730  33624  46438  3228/2965/120    1926/274    18   47   20.18)
(smt.stats   15   1831  34649  49245  3275/3001/120    2041/286    19   49   20.18)
(smt.stats   16   1942  35890  52089  3356/3090/127    2171/313    20   64   20.18)
(smt.stats   17   2064  37737  55621  3415/3118/127    2335/313    20   64   20.27)
(smt.stats   18   2198  41545  62682  3429/3188/128    2483/342    21   69   20.27)
(smt.stats   19   2345  44204  78170  3476/3192/128    2639/342    21   69   20.27)
(smt.stats   20   2506  45569  83784  3558/3258/128    2820/344    21   69   20.37)
(smt.stats   21   2607  46177  87162  3601/3360/133    2937/372    22   72   20.37)
(smt.stats   22   2718  47101  92412  3661/3364/133    3090/372    22   72   20.53)
(smt.stats   23   2840  48227  99856  3709/3456/136    3227/432    23   75   20.53)
ramon: poll                 wall=2.000s usage=1.930s mem=21648KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   24   2974  50000 106202  3748/3476/136    3370/432    23   75   20.53)
(smt.stats   25   3121  51070 112599  3832/3512/136    3543/434    23   75   20.53)
(smt.stats   26   3282  52799 120987  3919/3637/136    3705/434    23   75   20.62)
(smt.stats   27   3459  55614 125721  3939/3692/136    3883/434    23   75   20.62)
(smt.stats   28   3560  56460 130443  3956/3702/136    3995/435    23   75   20.72)
(smt.stats   29   3671  57477 135725  3990/3720/136    4110/435    23   75   20.72)
(smt.stats   30   3793  60213 143819  4008/3754/136    4236/435    23   75   20.81)
(smt.stats   31   3927  61210 149982  4012/3772/136    4381/435    23   75   20.81)
(smt.stats   32   4074  62552 154982  4110/3774/136    4536/437    23   75   20.81)
(smt.stats   33   4235  64314 165624  4229/3891/136    4701/438    23   75   20.91)
(smt.stats   34   4412  65655 175196  4287/4012/136    4895/438    23   75   20.91)
ramon: poll                 wall=3.000s usage=2.930s mem=22144KiB load=1.00 rootload=1.00
(smt.stats   35   4606  68704 183722  4310/4052/136    5085/438    23   75   21.02)
(smt.stats   36   4707  71049 187861  4314/4074/136    5184/438    23   75   21.02)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 15 := 491&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 819&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 819&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 818&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 15 := 491&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 3 := 491&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 3 := 491&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 496&15
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 2310346608841064944 := 2147486024 << 5
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 822&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 493&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 492&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 496&15
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 2251799813685744 := 2147486024 << 5
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 562952100907476 := 2147486024 << 5
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 562952100907476 := 2147486024 << 5
(smt.stats   37   4818  72723 193412  4378/4106/163    5293/485    24   79   21.12)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 1 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 1 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 2 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 2 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 1 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 8 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 8 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 4 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 1 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 2 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 4 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 8 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 2 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 2 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 4 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 4 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 2 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 4 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 8 := 68719552768&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 68719552768&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 1 := 68719552768&15
(smt.stats   38   4940  74425 199506  4450/4173/220    5455/489    24   79   21.32)
(smt.delete-inactive-clauses  :num-deleted-clauses 68)
(smt.stats   39   5074  77412 205481  4460/4210/245    5525/497    25  100   21.42)
(smt.stats   40   5221  81040 219064  4488/4219/245    5716/497    25  100   21.51)
(smt.stats   41   5382  84334 230710  4593/4296/248    5915/518    26  100   21.61)
(smt.stats   42   5559  89283 244620  4597/4343/248    6104/518    26  100   21.82)
(smt.stats   43   5753  96061 255191  4611/4344/248    6323/545    27  105   21.91)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   44   5966  99400 269314  4721/4380/249    6561/556    28  106   21.91)
ramon: poll                 wall=4.000s usage=3.930s mem=23140KiB load=1.00 rootload=1.00
(smt.stats   45   6067 101879 277960  4726/4472/249    6704/556    28  106   21.91)
(smt.stats   46   6178 105784 286713  4732/4475/249    6821/557    28  106   21.91)
(smt.stats   47   6300 109212 294454  4739/4484/249    6977/557    28  106   22.01)
(smt.stats   48   6434 111941 298957  4776/4512/249    7146/557    28  106   22.01)
(smt.stats   49   6581 115950 308482  4786/4526/256    7301/590    29  110   22.17)
(smt.stats   50   6742 117886 312268  5047/4546/256    7528/604    30  122   22.26)
ramon: poll                 wall=5.000s usage=4.930s mem=23612KiB load=1.00 rootload=0.99
(smt.stats   51   6919 119553 317087  5240/4833/256    7763/605    30  122   22.36)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 8 := 511&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 8 := 511&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 9 := 511&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 11 := 511&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 15 := 511&15
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 2305843009213694463 := 2251799813685245 << 5
(smt.stats   52   7113 125076 326910  5252/4986/256    8051/606    30  122   22.36)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 1 := 2251799813685152&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685152&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 3 := 2251799813685152&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685152&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 3 := 2251799813685152&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685152&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 2 := 2251799813685152&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685152&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 2 := 2251799813685152&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 8 := 2251799813685152&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 8 := 2251799813685152&15
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685152&15
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 8 := 2251799813685152&15
(smt.stats   53   7326 129256 339072  5342/5032/262    8428/713    31  123   22.45)
(smt.stats   54   7560 133892 354255  5470/5112/263    8842/716    31  123   22.55)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 9 := 809&31
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 6755399441056553 := 2251799813685246 << 6
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 9 := 809&31
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4503599627371305 := 2251799813685246 << 6
(smt.stats   55   7661 135985 361326  5546/5205/264    9112/758    32  128   22.74)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685120&31
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 562952100907612 := 2251799813685246 << 6
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685120&31
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 562952100907564 := 2251799813685246 << 6
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 16 := 2251799813685120&31
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 16 := 2251799813685120&31
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 16 := 2251799813685120&31
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 16 := 2251799813685120&31
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685120&31
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 1 := 2251799813685120&31
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685120&31
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 20 := 2251799813685120&31
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685120&31
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 20 := 2251799813685120&31
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813685120&31
band: (band[51] (shl[51] (bv2int %0) (mod #101 51)) (if (= #606 50) 0 (if #608 1 #749))) 16 := 2251799813685120&31
(smt.stats   56   7772 137476 365571  5711/5296/269    9336/763    32  128   22.83)
(smt.stats   57   7894 139517 371100  5882/5439/294    9720/766    32  128   22.93)
(smt.stats   58   8028 140466 373466  5922/5618/294    9903/766    32  128   23.03)
(smt.stats   59   8175 141895 378532  6584/6048/295   10249/907    33  135   23.12)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 39 := 2251799813685247&63
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 47 := 2251799813685247&63
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 63 := 2251799813685247&63
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4616189618054758399 := 2251799813685247 << 7
(smt.stats   60   8336 143953 394027  6679/6401/307   10665/908    33  135   23.22)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 63 := 2251799813685247&63
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4616189618054758399 := 2181431069507749 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 63 := 2251799813685247&63
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 4616189618054758399 := 2181431069507749 << 7
ramon: poll                 wall=6.000s usage=5.929s mem=24616KiB load=1.00 rootload=0.98
(smt.stats   61   8513 147262 406544  6712/6418/307   11048/951    34  142   23.31)
(smt.stats   62   8707 150186 413092  6745/6438/307   11303/951    34  142   23.41)
(smt.stats   63   8920 154633 430750  6761/6479/307   11643/951    34  142   23.41)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   64   9154 160897 456327  6788/6503/311   12131/1118    35  145   23.41)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 1055&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 2236037214989452319 := 2147486173 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 1023&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 2236037214989452287 := 2147486173 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 1023&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #367) 64)) 2236037214989452287 := 2147486173 << 1
(smt.stats   65   9411 163636 469835  7212/6553/311   12819/1294    36  158   23.60)
ramon: poll                 wall=7.000s usage=6.929s mem=25020KiB load=1.00 rootload=1.00
(smt.stats   66   9512 165137 476635  7260/6931/316   13298/1297    36  158   23.80)
(smt.stats   67   9623 167804 490141  7352/7056/317   13566/1416    37  159   23.80)
(smt.stats   68   9745 170360 504055  7454/7061/317   13907/1421    37  159   23.91)
(smt.stats   69   9879 172853 512121  7543/7161/317   14419/1514    38  162   24.01)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 175982 521969  7626/7272/317   14880/1518    38  162   24.10)
ramon: poll                 wall=8.001s usage=7.925s mem=25492KiB load=0.99 rootload=1.00
(smt.stats   71  10187 179431 542645  7724/7355/317   15103/1522    38  162   24.20)
(smt.stats   72  10364 182424 558557  7870/7476/318   15495/1595    39  165   24.29)
(smt.stats   73  10558 186856 586344  7973/7645/320   16041/1598    39  165   24.29)
ramon: poll                 wall=9.000s usage=8.924s mem=25720KiB load=1.00 rootload=1.00
(smt.stats   74  10771 195319 627704  8034/7697/320   16574/1688    40  177   24.29)
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813684976&8388607
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813684976&8388607
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 0 := 2251799813684976&8388607
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 16 := 2251799813684976&8388607
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 16 := 2251799813684976&8388607
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 16 := 2251799813685008&8388607
band: (band[51] (shl[64] (bv2int %0) (mod #368 64)) (if (or #769 #770) 0 (if #771 1 #904))) 16 := 2251799813685008&8388607
(smt.stats   75  11005 200503 668097  8161/7772/321   17860/1767    41  178   24.58)
(smt.stats   76  11262 206252 688704  8398/7897/353   18462/1994    42  193   24.87)
ramon: poll                 wall=10.000s usage=9.924s mem=26204KiB load=1.00 rootload=0.99
(smt.stats   77  11544 211140 712715  8861/8516/354   18990/1995    42  193   24.96)
(smt.stats   78  11645 213179 729260  8978/8575/354   19344/2036    43  195   25.06)
(smt.stats   79  11756 216149 750098  9028/8720/356   19707/2037    43  195   25.15)
ramon: poll                 wall=11.000s usage=10.923s mem=26600KiB load=1.00 rootload=1.00
(smt.stats   80  11878 218742 774683  9039/8739/360   20042/2171    44  219   25.15)
(smt.stats   81  12012 221482 794131  9047/8747/360   20553/2171    44  219   25.25)
(smt.stats   82  12159 224485 813285  9124/8758/361   20842/2253    45  236   25.25)
(smt.stats   83  12320 228623 832529  9175/8875/362   21204/2256    45  236   25.35)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   84  12497 232102 848101  9184/8882/362   21691/2295    46  240   25.44)
(smt.stats   85  12691 234379 865267  9199/8897/364   22174/2295    46  240   25.54)
(smt.stats   86  12904 235645 876729  9207/8905/364   22490/2295    46  240   25.54)
ramon: poll                 wall=12.000s usage=11.923s mem=27056KiB load=1.00 rootload=1.00
(smt.stats   87  13138 239048 897734  9254/8932/365   22907/2444    47  255   25.63)
(smt.stats   88  13395 243787 923251  9368/9008/365   23280/2444    47  255   25.83)
(smt.stats   89  13677 252452 953165  9441/9104/367   24371/2539    48  259   25.93)
ramon: poll                 wall=13.000s usage=12.923s mem=27808KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   90  13987 260079 1009738  9494/9145/367   25327/2539    48  259   26.44)
(smt.stats   91  14088 262057 1019786  9520/9187/368   25630/2816    49  288   26.44)
(smt.stats   92  14199 266012 1055707  9550/9230/368   25782/2816    49  288   26.44)
(smt.stats   93  14321 271473 1104457  9558/9241/368   26239/2816    49  288   26.53)
(smt.stats   94  14455 275562 1135916  9566/9249/369   26743/3005    50  296   26.63)
(smt.stats   95  14602 277667 1161626  9582/9249/370   26979/3005    50  296   26.63)
ramon: poll                 wall=14.000s usage=13.923s mem=28456KiB load=1.00 rootload=1.00
(smt.stats   96  14763 281887 1187337  9833/9269/370   27350/3006    50  296   26.99)
(smt.stats   97  14940 284999 1218383  9962/9525/370   27811/3128    51  298   27.09)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 288748 1234757 10042/9675/370   28815/3129    51  298   27.19)
ramon: poll                 wall=15.000s usage=14.923s mem=28604KiB load=1.00 rootload=1.00
(smt.stats   99  15347 296252 1268902 10132/9738/370   29250/3132    51  298   27.28)
(smt.stats  100  15581 301976 1307342 10278/9842/370   30004/3134    51  298   27.38)
(smt.stats  101  15838 309526 1360401 10460/9967/370   30643/3136    51  298   27.47)
ramon: poll                 wall=16.001s usage=15.924s mem=28952KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  102  16120 314770 1380184 10585/10162/370   31388/3137    51  298   27.57)
(smt.stats  103  16430 322665 1410757 10929/10291/370   32540/3142    51  298   27.76)
ramon: poll                 wall=17.000s usage=16.922s mem=29276KiB load=1.00 rootload=1.00
(smt.stats  104  16770 329113 1441291 11004/10642/370   33292/3144    51  298   27.85)
(smt.stats  105  16871 331402 1455061 11047/10695/371   33576/3521    52  301   27.95)
(smt.stats  106  16982 332847 1467322 11067/10749/371   34063/3521    52  301   27.95)
(smt.stats  107  17104 335641 1483150 11101/10755/371   34371/3521    52  301   27.95)
(smt.stats  108  17238 339137 1505178 11132/10791/371   34700/3522    52  301   28.04)
ramon: poll                 wall=18.000s usage=17.922s mem=29556KiB load=1.00 rootload=1.00
(smt.stats  109  17385 342680 1529361 11283/10818/371   35038/3524    52  301   28.14)
(smt.stats  110  17546 348152 1564586 11372/11012/372   35614/3761    53  307   28.23)
ramon: poll                 wall=19.001s usage=18.923s mem=29864KiB load=1.00 rootload=0.99
(smt.stats  111  17723 352532 1597723 11507/11070/372   36128/3764    53  307   28.23)
(smt.stats  112  17917 358018 1638149 11644/11205/372   36880/3764    53  307   28.43)
ramon: poll                 wall=20.000s usage=19.922s mem=29980KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:45:20 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.997s
ramon: group.utime          19.961s
ramon: group.stime          0.036s
ramon: group.mempeak        30496KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.00
