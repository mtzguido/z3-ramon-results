ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:01:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24670 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/q833Fc9rGEmw.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             159593
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4750   1260  1323/1163/98      98/21     4   15   19.17)
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 1 := 1&576460752303423486
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1 := 18446744073709551584 >>l 63
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1 := 18446744073709551584 >>l 63
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 576460752303423486 := 576460752303423487 >>l 58
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1 := 18446744073709551584 >>l 63
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 576460752303423486 := 576460752303423487 >>l 58
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 1 := 1&576460752303423486
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 2 := 2&576460752303423486
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 2 := 18446744073709551584 >>l 63
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 1 := 1&576460752303423486
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 2 := 576460752303423487 >>l 58
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 2 := 288230376151711744 >>l 58
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 2 := 2&576460752303423486
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 2 := 9223372036854775808 >>l 63
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 1 := 288230376151711744 >>l 58
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 1 := 1&576460752303423486
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 2 := 576460752303423487 >>l 58
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&576460752303423486
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 1 := 1&576460752303423486
(smt.stats    1    202   7582   3251  2094/1898/123     194/57     7   26   19.56)
(smt.stats    2    313  10541   7826  2735/2478/128     297/57    10   29   19.76)
(smt.stats    3    414  11333   9300  2780/2523/131     403/63    11   30   19.85)
(smt.stats    4    525  12516  11127  2890/2536/136     514/70    12   32   19.95)
(smt.stats    5    647  13941  14525  2933/2671/138     625/84    14   40   19.95)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14960  16073  2970/2680/138     731/86    14   40   19.95)
(smt.stats    7    859  15877  17803  3033/2726/138     841/90    14   40   19.95)
(smt.stats    8    981  16959  20132  3097/2779/138     967/91    14   40   19.95)
(smt.stats    9   1115  17984  22987  3184/2875/138    1103/95    14   40   20.05)
(smt.stats   10   1216  18988  26555  3234/2976/139    1245/141    15   40   20.05)
(smt.stats   11   1327  19329  30136  3253/2989/139    1355/141    15   40   20.05)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  20711  32340  3278/3006/139    1482/141    15   40   20.05)
(smt.stats   13   1583  22069  35125  3320/3030/139    1620/142    15   40   20.14)
(smt.stats   14   1730  23190  39901  3349/3081/139    1768/142    15   40   20.26)
(smt.stats   15   1831  24884  47451  3358/3094/139    1870/143    15   40   20.26)
(smt.stats   16   1942  28424  50298  3366/3107/141    1987/157    16   42   20.26)
(smt.stats   17   2064  30587  53734  3378/3118/141    2106/157    17   44   20.26)
(smt.stats   18   2198  33877  58241  3389/3123/142    2238/161    18   45   20.35)
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 2 := 2&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 4 := 4&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 8 := 8&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 16 := 16&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 32 := 32&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 52 := 52&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 48 := 52&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 40 := 52&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 32 := 52&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 4 := 52&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 8 := 52&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 16 := 52&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 16 := 16&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 12 := 16&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 12 := 20&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 12 := 16&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 12 := 20&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 8 := 16&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 8 := 16&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 8 := 24&567453553048682496
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 2 := 2&567453553048682496
(smt.stats   19   2345  35355  61406  3492/3208/194    2412/167    18   45   20.46)
ramon: poll                 wall=1.000s usage=0.936s mem=21652KiB load=0.94 rootload=0.92
(smt.stats   20   2506  38441  65012  3504/3229/200    2579/177    19   64   20.55)
(smt.stats   21   2607  39985  67482  3557/3249/200    2697/190    20   64   20.55)
(smt.stats   22   2718  41099  71148  3581/3315/200    2816/190    20   64   20.55)
(smt.stats   23   2840  42846  74700  3581/3315/200    2945/190    20   64   20.65)
(smt.stats   24   2974  44976  79567  3598/3332/202    3086/213    21   68   20.65)
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 7&0
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 8646911284551352327 := 9223372036854775808 >>l 5
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 7&0
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 8646911284551352327 := 9223372036854775808 >>l 5
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&0
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 8646911284551352321 := 9223372036854775808 >>l 5
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&0
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 8646911284551352321 := 9223372036854775808 >>l 5
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1&0
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 8646911284551352321 := 9223372036854775808 >>l 5
(smt.stats   25   3121  46870  85353  3638/3344/202    3238/215    21   68   20.97)
(smt.stats   26   3282  50091  94821  3709/3410/207    3412/227    22   72   20.97)
(smt.stats   27   3459  52706 102198  3757/3449/208    3613/235    23   72   20.97)
(smt.stats   28   3560  53537 105747  3766/3486/209    3732/251    24   75   20.97)
(smt.stats   29   3671  54629 109863  3772/3494/209    3861/251    24   75   20.97)
(smt.stats   30   3793  56724 114070  3812/3499/209    3986/255    25   81   21.07)
(smt.stats   31   3927  59193 120448  3843/3567/212    4122/261    26   83   21.07)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  62740 126633  3850/3570/212    4270/261    26   83   21.07)
(smt.stats   33   4235  66223 134418  3857/3581/212    4454/266    27   86   21.16)
(smt.stats   34   4412  73136 143441  3865/3587/212    4641/266    27   86   21.16)
(smt.stats   35   4606  75417 152227  3930/3653/213    4861/282    28   86   21.16)
(smt.stats   36   4707  76543 158001  3949/3663/213    4976/283    28   86   21.16)
(smt.stats   37   4818  79237 163273  3954/3674/213    5085/283    28   86   21.27)
ramon: poll                 wall=2.000s usage=1.934s mem=22380KiB load=1.00 rootload=1.00
(smt.stats   38   4940  80875 167944  3990/3682/213    5230/287    28   86   21.27)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  85646 173579  4010/3733/213    5370/287    28   86   21.27)
(smt.stats   40   5221  88422 182004  4026/3743/214    5544/308    29   86   21.56)
(smt.stats   41   5382  89634 188596  4054/3751/214    5716/308    29   86   21.56)
(smt.stats   42   5559  92038 196937  4062/3781/214    5912/308    29   86   21.56)
(smt.stats   43   5753  95116 204864  4064/3787/214    6108/308    29   86   21.56)
(smt.stats   44   5966  99107 217694  4087/3789/214    6350/309    29   86   21.66)
(smt.stats   45   6067 100365 224281  4095/3818/214    6486/309    29   86   21.66)
(smt.stats   46   6178 102487 231714  4100/3819/214    6616/309    29   86   21.66)
(smt.stats   47   6300 105016 236662  4131/3846/214    6763/312    29   86   21.85)
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 79&576460717943685120
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606847055 := 9223372036854775872 >>l 29
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 79&576460717943685120
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606847055 := 9223372036854775872 >>l 29
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 41&576460717943685120
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606847017 := 9223372036854775872 >>l 29
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 79&576460717943685120
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606847055 := 18446742974197926336 >>l 29
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 79&576460717943685120
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606847055 := 18446742974197926336 >>l 29
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 79&576460717943685120
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606847055 := 9223372036854775872 >>l 29
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 43&576460717943685120
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 721420288 := 721420288 >>l 24
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 0&576460717943685120
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 576460717943685123 := 1 >>l 24
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 0&576460717943685120
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 576460717943685123 := 1 >>l 24
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 2 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 4 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 8 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 2 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 4 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 4 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 4 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 2 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 8 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 16 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 16 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460717943685120
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 16 := 16&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 8 := 11&576460717943685120
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 8 := 11&576460717943685120
(smt.stats   48   6434 106641 241671  4210/3902/251    6944/346    30   92   21.95)
(smt.stats   49   6581 111112 246172  4246/3952/266    7124/346    30   92   21.95)
(smt.stats   50   6742 115445 256966  4302/3970/266    7316/348    30   92   22.04)
(smt.stats   51   6919 116979 264863  4528/4142/266    7576/366    31   98   22.14)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 120590 271510  4591/4284/267    7873/366    31   98   22.14)
ramon: poll                 wall=3.000s usage=2.932s mem=23416KiB load=1.00 rootload=0.99
(smt.stats   53   7326 127248 280871  4654/4319/267    8098/401    32  101   22.14)
(smt.stats   54   7561 131295 295142  4717/4410/271    8529/428    33  104   22.26)
(smt.stats   55   7662 134716 303387  4720/4413/271    8651/428    33  104   22.35)
(smt.stats   56   7773 137025 310984  4729/4416/271    8772/445    34  131   22.35)
(smt.stats   57   7895 141671 319652  4766/4431/273    8952/450    34  131   22.48)
(smt.stats   58   8029 144236 326380  4804/4468/273    9161/452    34  131   22.48)
(smt.stats   59   8176 148838 337484  4822/4514/273    9343/484    35  141   22.48)
(smt.stats   60   8337 155412 350919  4829/4521/273    9584/484    35  141   22.48)
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 97 := 576460752303423474&288230376151711744
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 97 := 576460752303423474&288230376151711744
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 97 := 288230376168488946&288230376151711744
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 97 := 288230376168488963&288230376151711744
(smt.stats   61   8514 158173 356649  4905/4531/273    9866/486    35  141   22.57)
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 4 := 576460752303423450&288230376151711744
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 4 := 576460752303423401&288230376151711744
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 576460752303423401&288230376151711744
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 576460752303423401&288230376151711744
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 576460752303423385&288230376151711744
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 576460752303423385&288230376151711744
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 26&288230376151711744
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606847002 := 536870912 >>l 6
(smt.stats   62   8708 160449 370965  5051/4722/289   10237/526    36  143   22.67)
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 25&288230376151711744
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606847001 := 549755813696 >>l 6
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 9&288230376151711744
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606846985 := 549755813696 >>l 6
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 9&288230376151711744
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606846985 := 549755813696 >>l 6
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 9&288230376151711744
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 394 := 18 >>l 1
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 9&288230376151711744
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 378 := 18 >>l 1
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 41&288230376151711744
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 75 := 82 >>l 1
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 41&288230376151711744
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 74 := 82 >>l 1
(smt.stats   63   8921 162217 382030  5114/4753/304   10544/529    36  143   22.76)
ramon: poll                 wall=4.000s usage=3.930s mem=24124KiB load=1.00 rootload=1.00
(smt.stats   64   9155 164001 391933  5128/4813/315   10971/582    37  148   22.86)
(smt.stats   65   9412 169050 416780  5302/4987/323   11669/694    38  152   23.15)
(smt.stats   66   9513 170495 421798  5351/5015/323   11856/695    38  152   23.15)
(smt.stats   67   9624 172833 434452  5395/5045/323   12095/735    39  165   23.15)
(smt.stats   68   9746 177199 451726  5403/5075/323   12375/735    39  165   23.28)
(smt.stats   69   9880 181815 470102  5424/5092/325   12764/735    39  165   23.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 972)
(smt.stats   70  10027 183052 477957  5455/5123/329   12011/796    40  168   23.48)
(smt.stats   71  10188 184374 482646  5473/5124/329   12258/800    40  168   23.48)
ramon: poll                 wall=5.000s usage=4.928s mem=24788KiB load=1.00 rootload=1.00
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 97 := 113&504403158265495552
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 96 := 112&504403158265495552
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 9223372036854775824 := 9223372037391646720 >>l 8
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606846992 := 9223372037391646720 >>l 8
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 1152921504606846992 := 9223372037391647168 >>l 8
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
lshr: (lshr[64] (* 32 (bv2int %1)) (mod (+ 5 #99 #351) 64)) 576460752303423504 := 9223372037391646720 >>l 8
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 288230376168488877 := 135 >>l 3
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 288230376168488861 := 135 >>l 3
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
lshr: (lshr[59] (bv2int %1) (mod (bv2int %0) 59)) 216172782113784365 := 128 >>l 3
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 16 := 16&504403158265495552
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 2 := 16&504403158265495552
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 2 := 16&504403158265495552
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&504403158265495552
band: (band[59] (lshr[59] (bv2int %1) (mod #99 59)) (if (= #514 58) 166153499473114483824745506383331328 (if #516 83076749736557241912372753191665664 #630))) 1 := 16&504403158265495552
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10365 187391 498640  5590/5153/329   12630/805    40  168   23.78)
(smt.stats   73  10559 189722 512086  5634/5284/350   12994/839    41  175   23.88)
(smt.stats   74  10772 192129 530895  5684/5310/350   13439/839    41  175   23.88)
(smt.stats   75  11006 196543 552511  5786/5445/358   14193/884    42  187   24.07)
(smt.stats   76  11263 206488 588038  5811/5466/358   14770/884    42  187   24.07)
(smt.stats   77  11545 214178 628458  5833/5477/366   15397/925    43  201   24.17)
ramon: poll                 wall=6.000s usage=5.928s mem=25524KiB load=1.00 rootload=0.99
(smt.stats   78  11646 216026 635728  5909/5513/366   15539/948    44  212   24.27)
(smt.stats   79  11757 217173 644980  6034/5592/367   15675/949    44  212   24.27)
(smt.stats   80  11879 218329 655830  6058/5696/368   15830/950    44  212   24.37)
(smt.stats   81  12013 220511 666486  6084/5724/369   16140/951    44  212   24.37)
(smt.stats   82  12160 221353 672658  6100/5742/369   16344/951    44  212   24.37)
(smt.stats   83  12321 224761 689585  6148/5774/369   16736/977    45  220   24.46)
(smt.stats   84  12498 228866 702709  6217/5867/371   17185/978    45  220   24.56)
(smt.stats   85  12692 233772 731889  6290/5904/372   17770/1062    46  224   24.66)
ramon: poll                 wall=7.000s usage=6.927s mem=26056KiB load=1.00 rootload=0.99
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 16&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 17&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 19&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 65&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 65&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 65&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 65&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 131&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 257&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 257&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 257&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 257&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 515&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 513&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1025&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1025&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1025&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 2049&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 2049&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4097&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4097&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4097&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4129&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4129&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4097&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4097&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4097&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4097&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 4097&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1025&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1025&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1025&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1025&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 1025&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 2049&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 2049&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 2049&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 2049&576460752303423484
band: (band[59] (lshr[64] (* 32 #98) (mod #352 64)) (if (= #653 63) 10633823966279326964783712408533204992 (if #655 5316911983139663482391856204266602496 #779))) 0 := 2049&576460752303423484
(smt.stats   86  12905 238341 763194  6541/6179/483   18270/1100    47  249   25.14)
(smt.stats   87  13139 243959 789790  6581/6198/488   18847/1101    47  249   25.52)
(smt.stats   88  13396 249815 819826  6613/6249/488   19525/1101    47  249   25.71)
(smt.stats   89  13678 255535 848187  6704/6304/488   20185/1282    48  260   25.81)
ramon: poll                 wall=8.005s usage=7.932s mem=27308KiB load=1.00 rootload=1.01
(smt.stats   90  13988 258537 884370  6762/6396/489   20928/1427    49  261   25.90)
(smt.stats   91  14089 260852 897869  6779/6409/489   21050/1427    49  261   25.90)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   92  14200 262274 909656  6783/6413/489   21251/1427    49  261   25.90)
(smt.stats   93  14322 264846 925772  6797/6424/489   21449/1427    49  261   26.00)
(smt.stats   94  14456 265509 940479  6798/6425/489   21721/1427    49  261   26.00)
(smt.stats   95  14603 267047 952340  6834/6439/491   22017/1489    50  265   26.00)
(smt.stats   96  14764 271133 985056  6861/6488/494   22367/1489    50  265   26.45)
(smt.stats   97  14941 274910 1029897  6863/6490/494   22621/1489    50  265   26.64)
(smt.delete-inactive-clauses  :num-deleted-clauses 545)
ramon: poll                 wall=9.000s usage=8.927s mem=28152KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   98  15135 279347 1051583  6990/6587/494   22312/1519    51  306   26.74)
(smt.stats   99  15348 284657 1075987  7000/6597/495   23037/1519    51  306   26.83)
(smt.stats  100  15582 289336 1096293  7063/6609/498   24204/1611    52  313   27.12)
ramon: poll                 wall=10.000s usage=9.927s mem=28816KiB load=1.00 rootload=1.00
(smt.stats  101  15839 298039 1126950  7261/6680/498   25219/1617    52  313   27.50)
ramon: poll                 wall=11.000s usage=10.926s mem=29512KiB load=1.00 rootload=1.00
(smt.stats  102  16121 303765 1152393  7335/6929/500   26240/1738    53  339   27.70)
(smt.stats  103  16431 309954 1197309  7405/6942/500   26866/1741    53  339   27.79)
(smt.stats  104  16771 315743 1257846  7482/7016/500   27608/1741    53  339   28.14)
(smt.stats  105  16872 316480 1269364  7582/7150/500   27795/1893    54  339   28.14)
(smt.stats  106  16983 318384 1282582  7594/7165/500   27936/1893    54  339   28.24)
ramon: poll                 wall=12.000s usage=11.926s mem=29888KiB load=1.00 rootload=1.00
(smt.stats  107  17105 322920 1310461  7603/7180/500   28336/1893    54  339   28.24)
(smt.stats  108  17239 324990 1337254  7609/7182/500   28702/1893    54  339   28.33)
(smt.stats  109  17386 333394 1384213  7618/7193/500   29045/1893    54  339   28.33)
(smt.stats  110  17547 334939 1407293  7620/7195/500   29323/1893    54  339   28.43)
(smt.stats  111  17724 336909 1427356  7631/7196/500   29642/1894    54  339   28.52)
(smt.stats  112  17918 341540 1465046  7663/7229/501   30219/2034    55  352   28.52)
ramon: poll                 wall=13.000s usage=12.926s mem=30108KiB load=1.00 rootload=1.00
(smt.stats  113  18131 347804 1490501  7727/7255/503   31232/2034    55  352   28.71)
ramon: poll                 wall=14.000s usage=13.926s mem=30364KiB load=1.00 rootload=1.00
(smt.stats  114  18365 359806 1562327  7927/7448/506   32189/2101    56  378   28.81)
(smt.stats  115  18622 372687 1629451  7942/7514/506   32852/2101    56  378   28.90)
ramon: poll                 wall=15.000s usage=14.924s mem=30544KiB load=1.00 rootload=1.00
(smt.stats  116  18904 387757 1708399  7996/7526/507   33377/2142    57  389   29.00)
ramon: poll                 wall=16.000s usage=15.924s mem=31060KiB load=1.00 rootload=1.00
(smt.stats  117  19214 396145 1750627  8174/7623/507   34931/2150    57  389   29.48)
ramon: poll                 wall=17.000s usage=16.923s mem=31472KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  118  19554 408563 1824834  8458/7778/509   36016/2161    57  389   29.79)
ramon: poll                 wall=18.000s usage=17.923s mem=31520KiB load=1.00 rootload=1.00
(smt.stats  119  19927 422932 1901238  8598/8056/509   37240/2217    58  423   29.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 6749)
(smt.stats  120  20028 425020 1914516  8609/8176/510   31545/2262    59  440   29.98)
(smt.stats  121  20139 427355 1927481  8617/8186/510   31673/2262    59  440   29.98)
(smt.stats  122  20261 429557 1948972  8619/8188/510   31922/2262    59  440   29.98)
(smt.stats  123  20395 431503 1963912  8619/8188/510   32246/2262    59  440   29.98)
(smt.stats  124  20542 432818 1987389  8619/8188/510   32986/2262    59  440   29.98)
(smt.stats  125  20703 438175 2011965  8652/8193/510   33770/2267    59  440   29.98)
ramon: poll                 wall=19.000s usage=18.923s mem=31708KiB load=1.00 rootload=1.00
(smt.stats  126  20880 446995 2045980  8733/8229/510   34287/2269    59  440   29.98)
(smt.stats  127  21074 456653 2099451  8740/8309/510   35121/2269    59  440   30.07)
(smt.stats  128  21287 482018 2212561  8747/8316/510   35479/2269    59  440   30.17)
ramon: poll                 wall=20.005s usage=19.927s mem=31784KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:02:19 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.989s
ramon: group.utime          19.957s
ramon: group.stime          0.032s
ramon: group.mempeak        32296KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.067s
ramon: loadavg              1.00
