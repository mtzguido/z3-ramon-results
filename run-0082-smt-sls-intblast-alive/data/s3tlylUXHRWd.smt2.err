ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:11:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27227 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/s3tlylUXHRWd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             942539
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    60.241     10000        49          0            1        2)
(sat.ddfw       1      1   29.4147     20001        98          1            1        3)
(sat.ddfw       1      1   29.7177     40001       196          2            1        5)
(smt.stats    0    101   2226    303  1199/1058/114     103/19     6   19   52.06)
ramon: poll                 wall=1.000s usage=0.874s mem=54164KiB load=0.87 rootload=0.87
(smt.stats    1    202   5008   3044  1391/1256/115     201/28     7   21   52.16)
(sat.ddfw       1      1   27.0758     70001       343          3            1        8)
(sat.ddfw       1      1   24.0529    110001       539          4            1       12)
(smt.stats    2    313   8820   3979  1570/1326/117     323/37     8   22   52.35)
ramon: poll                 wall=2.000s usage=1.872s mem=54572KiB load=1.00 rootload=1.00
(smt.stats    3    414  11828   4820  1643/1501/120     437/48    10   31   52.35)
(smt.stats    4    525  12998   8213  2293/1724/120     547/85    10   31   52.56)
(sat.ddfw       1      1    21.195    160000       784          5            1       17)
ramon: poll                 wall=3.000s usage=2.867s mem=54972KiB load=0.99 rootload=0.99
(smt.stats    5    647  15748  11831  2434/2138/120     675/87    10   31   52.75)
(sat.ddfw       1      1   18.7328    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  18746  15652  2555/2350/123     819/125    13   35   52.85)
(smt.stats    7    859  20356  18006  2875/2568/123     954/132    13   35   52.95)
ramon: poll                 wall=4.002s usage=3.872s mem=55120KiB load=1.00 rootload=1.01
(smt.stats    8    981  21852  19618  2984/2684/123    1084/134    13   35   53.04)
(smt.stats    9   1115  23534  22462  3049/2814/128    1266/160    14   36   53.14)
(sat.ddfw       1      1   16.7384    290001      1421          7            1       30)
(smt.stats   10   1216  25111  27599  3076/2824/128    1410/204    15   41   53.14)
(smt.stats   11   1327  27576  34272  3092/2849/128    1524/204    15   41   53.24)
(smt.stats   12   1449  29168  37512  3098/2861/128    1672/204    15   41   53.34)
(smt.stats   13   1583  34017  41054  3109/2874/128    1824/204    15   41   53.34)
(smt.stats   14   1730  38729  50470  3114/2879/128    1968/204    15   41   53.34)
(smt.stats   15   1831  41423  58777  3121/2886/128    2066/204    15   41   53.44)
(smt.stats   16   1942  44621  63714  3128/2889/128    2189/204    15   41   53.44)
ramon: poll                 wall=5.000s usage=4.864s mem=55504KiB load=0.99 rootload=0.99
(smt.stats   17   2064  47400  71306  3186/2898/128    2330/207    15   41   53.44)
(smt.stats   18   2198  50275  77966  3270/2967/128    2494/207    15   41   53.75)
(sat.ddfw       1      1   15.1257    370001      1813          8            1       38)
(smt.stats   19   2345  52371  79032  3394/3056/128    2661/208    15   41   53.75)
ramon: poll                 wall=6.000s usage=5.928s mem=55780KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   14.0252    460001      2254          9            1       47)
(smt.stats   20   2506  54704  81479  3525/3211/129    2875/300    16   43   53.75)
ramon: poll                 wall=7.000s usage=6.924s mem=55880KiB load=1.00 rootload=1.00
(smt.stats   21   2607  56205  83331  3632/3334/129    2976/300    16   43   53.75)
(smt.stats   22   2718  58181  86996  3726/3405/129    3120/301    16   43   53.75)
(smt.stats   23   2840  62170  94016  3732/3497/129    3259/301    16   43   53.93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   24   2974  64826 100491  3746/3511/131    3440/339    17   52   53.93)
(sat.ddfw       1      1   12.8057    560001      2745         10            1       57)
ramon: poll                 wall=8.000s usage=7.923s mem=56108KiB load=1.00 rootload=1.00
(smt.stats   25   3121  66433 104147  3846/3520/131    3626/341    17   52   54.12)
(smt.stats   26   3282  69817 112690  3885/3644/131    3797/341    17   52   54.12)
(smt.stats   27   3459  73744 123877  3886/3649/132    4011/389    18   53   54.12)
(smt.stats   28   3560  75952 132039  3891/3654/132    4124/389    18   53   54.12)
(smt.stats   29   3671  78063 141952  3910/3660/135    4235/433    19   56   54.22)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 90441 := 140737488355317&140737488355327
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 90441 := 140737488355317&140737488355327
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355318
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355327
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355326
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355322
(smt.stats   30   3794  80813 149862  3964/3722/189    4354/443    20   64   54.52)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355323
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355322
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 127 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 126 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 124 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 112 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 189 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 189 := 140737488355317&140737488355321
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 176 := 140737488355317&140737488355320
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 432 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 56 := 140737488355317&140737488355248
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355248
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355131
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 56 := 140737488355317&140737488355131
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 56 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488355120
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488354352
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488266297
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 48 := 140737488355317&140737488266298
(smt.stats   31   3928  82165 154538  4118/3798/246    4554/459    20   64   54.82)
(smt.stats   32   4075  85209 160678  4285/4019/271    4833/506    21   93   54.92)
ramon: poll                 wall=9.000s usage=8.920s mem=57176KiB load=1.00 rootload=0.99
(smt.stats   33   4236  90371 170694  4306/4062/272    5063/506    21   93   55.01)
(smt.stats   34   4413  96618 185212  4323/4079/272    5380/577    22   94   55.20)
(sat.ddfw       1      1   11.7786    670001      3284         11            1       68)
ramon: poll                 wall=10.000s usage=9.921s mem=57292KiB load=1.00 rootload=1.00
(smt.stats   35   4607 101138 202847  4329/4085/279    5597/636    23  101   55.20)
(smt.stats   36   4708 104935 212863  4338/4094/279    5659/651    24  142   55.30)
(smt.stats   37   4819 109563 225655  4343/4099/280    5808/666    25  146   55.30)
(smt.stats   38   4941 112348 232224  4377/4105/281    5986/666    25  146   55.30)
ramon: poll                 wall=11.000s usage=10.922s mem=57432KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.9051    790001      3872         12            1       80)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 115678 239552  4390/4134/281    6158/666    25  146   55.39)
(smt.stats   40   5222 119254 251424  4403/4159/282    6348/713    26  155   55.39)
(smt.stats   41   5383 124245 266119  4405/4161/282    6529/713    26  155   55.49)
(smt.stats   42   5560 129460 283023  4405/4161/282    6717/727    27  167   55.49)
ramon: poll                 wall=12.000s usage=11.921s mem=57876KiB load=1.00 rootload=1.00
(smt.stats   43   5754 132420 292186  4622/4162/282    6999/731    27  167   55.78)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 11 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 7 := 127&140737488266255
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 15 := 127&140737488266255
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2310768821306041359 := 832 << 6
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 15 := 127&140737488266255
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2310768821306041359 := 832 << 6
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 15 := 127&140737488266255
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2310768821306041359 := 832 << 6
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 15 := 127&140737488266253
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   44   5967 134014 297727  5068/4424/282    7430/735    27  167   55.97)
(smt.stats   45   6068 136289 303822  5069/4824/303    7601/795    28  174   55.97)
(sat.ddfw       1      1    10.306    920001      4509         13            1       93)
ramon: poll                 wall=13.000s usage=13.126s mem=58296KiB load=1.21 rootload=1.21
(smt.stats   46   6179 141047 320142  5107/4824/306    7799/797    28  174   56.57)
(smt.stats   47   6301 144434 335079  5181/4876/306    8082/880    29  195   56.57)
(smt.stats   48   6435 148789 349367  5238/4947/306    8471/885    29  195   56.57)
(smt.stats   49   6582 150960 355781  5246/4995/306    8652/888    29  195   56.66)
(smt.stats   50   6743 155074 374024  5259/5012/306    8942/888    29  195   56.66)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1 := 17592186044414&2
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 17592186044414&2
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 17592186044414&2
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2 := 17592186044414&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2 := 6 << 43
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 4 := 17592186044414&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 4 := 6 << 43
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 4 := 17592186044414&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 4 := 6 << 43
(smt.stats   51   6920 158795 385155  5357/5051/306    9177/896    29  195   56.76)
ramon: poll                 wall=14.000s usage=14.264s mem=59152KiB load=1.14 rootload=1.13
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 35184372088829&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2 := 4 << 44
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 35184372088829&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 0 := 4 << 44
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 35184372088829&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 0 := 4 << 44
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 70368744177658&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 1 := 2 << 45
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 70368744177658&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 0 := 2 << 45
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 70368744177658&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 0 := 2 << 45
(smt.stats   52   7114 161331 393654  5430/5115/318    9453/1212    30  196   56.85)
(sat.ddfw       1      1   9.79569   1060001      5196         14            1      108)
(smt.stats   53   7327 169883 424838  5464/5198/332    9948/1423    31  248   57.41)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   54   7561 176495 451376  5482/5214/336   10313/1424    31  248   57.51)
ramon: poll                 wall=15.000s usage=15.264s mem=59912KiB load=1.00 rootload=1.00
(smt.stats   55   7662 180758 467817  5505/5222/336   10459/1453    32  312   57.51)
(smt.stats   56   7773 185160 483323  5513/5247/336   10633/1453    32  312   57.51)
(smt.stats   57   7895 189090 499555  5514/5248/336   11060/1453    32  312   57.60)
(smt.stats   58   8029 191906 510371  5515/5249/336   11627/1453    32  312   57.70)
(smt.stats   59   8176 196310 523273  5516/5250/336   11831/1453    32  312   57.70)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2149 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2156 := 4095&2156
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 2312176196189685868 := 70 << 11
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2668 := 4095&2668
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 140737488357996 := 70 << 11
(smt.stats   60   8337 200754 533530  5605/5263/337   12032/1630    33  313   57.70)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2148 := 4095&2156
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2156 := 4095&2156
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 140737488357484 := 70 << 11
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2156 := 4095&2156
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 140737488357484 := 70 << 11
(smt.stats   61   8514 203879 547442  5741/5470/353   12429/1640    33  313   57.79)
ramon: poll                 wall=16.000s usage=16.263s mem=60204KiB load=1.00 rootload=1.00
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 93 := 46 << 1
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 93 := 46 << 1
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 93 := 46 << 1
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 93 := 46 << 1
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 1&92
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 1 := 1&92
(smt.stats   62   8708 207596 559935  5787/5507/369   12679/1644    33  313   58.36)
(sat.ddfw       1      1   9.15695   1210001      5931         15            1      123)
ramon: poll                 wall=17.000s usage=17.260s mem=60376KiB load=1.00 rootload=1.00
(smt.stats   63   8921 211390 570623  5828/5533/369   12924/1742    34  322   58.45)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 8 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 8 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 53248 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 12288 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 53248 := 65535&126976
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 61440 := 65535&126976
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 126976 := 62 << 15
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 32 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 128 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 128 := 65535&512
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 512 := 65535&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 512 := 62 << 15
(smt.stats   64   9155 216882 596316  5937/5630/422   13390/1752    34  322   58.67)
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 512 := 65535&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #836 #840) 64)) 512 := 62 << 15
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 32768 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 32768 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 8192 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 4096 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 3584 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 3584 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 3328 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 3072 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
ramon: poll                 wall=18.000s usage=18.259s mem=61104KiB load=1.00 rootload=1.00
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 2048 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 16384 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1024 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 1024 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 140736951578826 := 31 << 16
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 140736951578826 := 31 << 16
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 766 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 764 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 4 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 8 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 16 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 32 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 64 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 128 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 256 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 512 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 2 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 2 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 8 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 4 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 1 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 64 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 32 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 64 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 128 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 544 := 65535&2031616
band: (band[47] (if (= #373 63) 1 (if #591 3 #829)) (shl[64] (* 2 #115) (mod #844 64))) 0 := 65535&2031616
band: (band[47] (if (= #121 46) 1 (if #611 3 #741)) (shl[47] (bv2int %0) (+ 47 #744))) 576 := 65535&2031616
(smt.stats   65   9412 221077 616815  6258/5833/530   13944/1872    35  350   59.19)
(smt.stats   66   9513 224229 630594  6428/6111/546   14328/1872    35  350   59.38)
(sat.ddfw       1      1   8.60215   1370001      6715         16            1      139)
ramon: poll                 wall=19.000s usage=19.261s mem=61872KiB load=1.00 rootload=1.00
(smt.stats   67   9624 231125 663899  6489/6169/548   14520/2089    36  377   59.48)
ramon: poll                 wall=20.000s usage=20.260s mem=62116KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:11:57 2024
ramon: root.execname        z3
ramon: root.utime           20.300s
ramon: root.stime           0.000s
ramon: group.total          20.310s
ramon: group.utime          20.302s
ramon: group.stime          0.008s
ramon: group.mempeak        62376KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              1.01
