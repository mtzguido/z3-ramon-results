ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:16:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41574 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QShPRieFfFxs.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2954293
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   1574    104  1061/953/99      98/20     4   17   19.24)
(smt.stats    1    202   1866    765  1862/1637/99     218/25     4   17   19.24)
(smt.stats    2    313   4395   3007  2004/1849/101     366/83     6   19   19.24)
(smt.stats    3    414   5390   4215  2375/2184/109     459/101     8   36   19.44)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 1 := 34359738367 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 0 := 34359738367 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 0 := 2 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1&1073741823
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 1 := 2 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1&1073741823
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 1 := 2 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1&1073741823
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 1 := 2 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1073741823 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1073741822 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869184 := 17179869185 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 17179869184 := 17179869185 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 8 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 16 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 128 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 256 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 512 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1024 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1024 := 1073741824&1073741823
(smt.stats    4    525   6755   5966  2547/2228/119     561/120    10   43   19.87)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 29 := 17179869185 << 30
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 8 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 16 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 128 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 128 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1024 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2048 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4096 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 8192 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 16384 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32768 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 65536 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 131072 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 262144 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 524288 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 1048576 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 2097152 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 4194304 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 8388608 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 16777216 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 33554432 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 67108864 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 134217728 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 268435456 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 536870912 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 536870912 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 67108864 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 134217728 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 268435456 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 134217728 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 67108864 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 37748736 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 37748736 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 50331648 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 41943040 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 41943040 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 41943040 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 35651584 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 33554432 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 512 := 1073741824&1073741823
(smt.stats    5    647   9773   9937  2751/2529/354     830/223    14  100   20.66)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 512 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 512 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 256 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 64 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 1073741824&1073741823
band: (band[35] (shl[35] (bv2int %0) (mod #103 35)) (if (= #561 34) 1 (if #563 3 #657))) 32 := 1073741824&1073741823
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  12504  14609  2776/2546/365     927/220    15  112   20.76)
(smt.stats    7    859  14551  17193  2856/2571/375    1084/223    16  114   20.76)
(smt.stats    8    981  18011  22493  2920/2686/386    1236/237    18  117   20.85)
(smt.stats    9   1115  22025  27890  2992/2762/393    1373/266    19  123   20.95)
(smt.stats   10   1216  23976  32393  3097/2825/393    1472/291    20  131   21.04)
(smt.stats   11   1327  26228  38463  3153/2878/393    1590/295    20  131   21.33)
(smt.stats   12   1449  28692  45373  3193/2959/399    1744/346    21  134   21.33)
(smt.stats   13   1583  31089  51025  3260/2991/399    1945/352    21  134   21.43)
ramon: poll                 wall=1.000s usage=0.932s mem=22644KiB load=0.93 rootload=0.92
(smt.stats   14   1730  36387  61622  3316/3061/399    2084/443    22  142   21.43)
(smt.stats   15   1831  42488  72572  3332/3081/399    2205/445    22  142   21.53)
(smt.stats   16   1942  45283  80568  3413/3101/399    2337/456    22  142   21.62)
(smt.stats   17   2064  47180  88078  3443/3203/400    2461/490    23  144   21.62)
(smt.stats   18   2198  50532  98390  3467/3219/400    2606/491    23  144   21.62)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   19   2345  54807 106739  3469/3233/401    2820/502    24  146   21.91)
(smt.stats   20   2506  56338 114886  3490/3254/406    2989/556    25  152   21.91)
(smt.stats   21   2607  60883 123079  3503/3257/406    3086/553    26  169   21.91)
(smt.stats   22   2718  63128 128336  3512/3274/406    3202/553    26  169   22.04)
(smt.stats   23   2840  65317 134160  3530/3279/406    3333/558    26  169   22.04)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&7
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 5&3
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 5&3
(smt.stats   24   2974  67239 136913  3728/3322/406    3607/573    26  169   22.14)
(smt.stats   25   3121  70759 146881  3756/3511/425    3881/624    27  175   22.14)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 4 := 5&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 4 := 5&8589934591
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 5 := 5&8589934591
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 68719476741 := 6 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 5 := 5&8589934591
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 68719476741 := 17179869233 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 5 := 5&8589934591
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 68719476741 := 17179869233 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 5 := 5&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 68719476741 := 17179869186 << 34
(smt.stats   26   3282  75265 154685  3796/3534/433    4045/634    28  186   22.23)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 2&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 2&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 2&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 2&17179869183
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 2 := 2&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 9223371968135299074 := 2 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 2 := 2&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 9223371968135299074 := 2 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 2 := 2&17179869183
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 9223371968135299074 := 2 << 34
(smt.stats   27   3459  80206 171038  3882/3638/465    4498/740    30  207   22.61)
(smt.stats   28   3560  81991 176555  4085/3784/469    4612/740    30  207   22.73)
ramon: poll                 wall=2.000s usage=1.932s mem=24080KiB load=1.00 rootload=1.00
(smt.stats   29   3671  86125 185790  4161/3804/469    4823/834    31  240   23.02)
(smt.stats   30   3793  89553 193812  4323/3878/469    5045/837    31  240   23.02)
(smt.stats   31   3927  92339 201007  4389/4069/469    5243/837    31  240   23.11)
(smt.stats   32   4074  96228 213020  4412/4102/470    5568/920    32  247   23.21)
ramon: poll                 wall=3.000s usage=2.932s mem=24592KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   33   4235 101653 231423  4485/4154/471    5960/1076    33  249   23.21)
(smt.stats   34   4412 106748 246213  4525/4212/471    6181/1076    33  249   23.30)
(smt.stats   35   4606 111184 255862  4586/4238/473    6564/1114    34  254   23.64)
(smt.stats   36   4707 112988 266440  4762/4450/476    6764/1176    35  255   23.74)
ramon: poll                 wall=4.000s usage=3.932s mem=25036KiB load=1.00 rootload=1.00
(smt.stats   37   4818 115175 280957  4867/4472/476    6960/1179    35  255   23.74)
(smt.stats   38   4940 117646 296669  4879/4580/476    7137/1194    36  255   23.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 402)
(smt.stats   39   5074 122859 315070  4902/4594/477    7286/1299    37  259   23.74)
(smt.stats   40   5221 128096 334142  5167/4606/477    7645/1306    37  259   23.83)
ramon: poll                 wall=5.000s usage=4.931s mem=25340KiB load=1.00 rootload=0.99
(smt.stats   41   5382 134317 359590  5461/4889/477    8198/1313    37  259   24.06)
(smt.stats   42   5559 138129 373864  5579/5278/482    8838/1546    38  266   24.15)
(smt.stats   43   5753 144446 394401  5675/5288/482    9426/1553    38  266   24.25)
(smt.stats   44   5966 152020 440476  5699/5397/483    9949/1774    40  273   24.25)
(smt.stats   45   6067 155365 461278  5713/5406/484   10304/1786    41  274   24.34)
ramon: poll                 wall=6.000s usage=5.931s mem=25676KiB load=1.00 rootload=1.00
(smt.stats   46   6178 157997 485493  5789/5420/485   10479/1789    41  274   24.34)
(smt.stats   47   6300 160270 514197  5838/5509/485   10754/1904    42  279   24.34)
(smt.stats   48   6434 161347 526829  5864/5559/485   10982/1904    42  279   24.44)
(smt.stats   49   6581 166660 556158  5884/5581/485   12015/1905    42  279   24.53)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&1
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 33285996544 := 17179869186 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&1
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 32212254720 := 17179869186 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 4&1
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 32212254720 := 17179869186 << 1
(smt.stats   50   6742 169727 570127  6008/5608/485   12319/1910    42  279   24.63)
(smt.stats   51   6919 172453 589583  6098/5716/490   12600/2180    43  280   24.63)
(smt.stats   52   7113 179153 608757  6102/5794/490   12961/2180    43  280   24.95)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7326 181192 626779  6147/5831/490   13288/2193    44  280   24.95)
ramon: poll                 wall=7.000s usage=6.931s mem=26464KiB load=1.00 rootload=1.00
(smt.stats   54   7560 186702 657265  6168/5858/491   13990/2291    45  296   25.05)
(smt.stats   55   7661 191380 688492  6228/5893/491   14277/2292    45  296   25.14)
(smt.stats   56   7772 196657 724823  6228/5915/491   14751/2292    45  296   25.14)
(smt.stats   57   7894 201739 775383  6235/5918/491   15238/2292    45  296   25.14)
(smt.stats   58   8028 204756 796042  6252/5939/496   15613/2543    46  298   25.24)
(smt.stats   59   8175 212383 846661  6259/5946/499   15825/2623    47  321   25.33)
ramon: poll                 wall=8.000s usage=7.931s mem=26700KiB load=1.00 rootload=1.00
(smt.stats   60   8336 220099 901573  6278/5948/499   16024/2626    47  321   25.33)
(smt.stats   61   8513 223500 923950  6304/5989/500   16557/2643    48  325   25.43)
(smt.stats   62   8707 230077 977232  6316/6002/500   16850/2643    48  325   25.43)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 236742 1025121  6335/6019/503   17616/2710    49  327   25.43)
(smt.stats   64   9154 244191 1061631  6341/6025/504   18096/2710    49  327   25.52)
ramon: poll                 wall=9.000s usage=8.931s mem=27012KiB load=1.00 rootload=1.00
(smt.stats   65   9411 251795 1092720  6558/6045/504   19025/2778    50  350   25.65)
(smt.stats   66   9512 253084 1099662  6565/6247/504   19156/2778    50  350   25.65)
(smt.stats   67   9623 256016 1116176  6605/6252/504   19472/2778    50  350   25.74)
(smt.stats   68   9745 259231 1131307  6665/6300/504   19785/2780    50  350   25.84)
ramon: poll                 wall=10.000s usage=9.930s mem=27248KiB load=1.00 rootload=1.00
(smt.stats   69   9879 263560 1155864  6753/6362/504   20190/2783    50  350   25.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 160)
(smt.stats   70  10026 264684 1166362  6767/6446/504   20227/2783    50  350   25.93)
(smt.stats   71  10187 266933 1202557  6791/6456/504   20472/2785    50  350   25.93)
(smt.stats   72  10364 271321 1244967  6807/6489/504   20688/2785    50  350   25.93)
(smt.stats   73  10558 274713 1272431  6868/6490/504   20976/2787    50  350   26.03)
(smt.stats   74  10771 279292 1289008  6946/6569/504   21271/2790    50  350   26.03)
ramon: poll                 wall=11.000s usage=10.930s mem=27624KiB load=1.00 rootload=1.00
(smt.stats   75  11005 285967 1335548  6997/6661/504   21856/2791    50  350   26.22)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 13 := 17179869224&15
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 12 := 17179869224&15
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 12 := 17179869228&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 9223372054034645036 := 17179869185 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 12 := 17179869228&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 51539607596 := 17179869185 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 12 := 17179869228&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 51539607596 := 17179869185 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 12 := 17179869228&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 51539607596 := 17179869185 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 12 := 17179869228&15
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 51539607596 := 17179869185 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 8 := 26419921408&15
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 8 := 26419921408&15
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 8 := 26419921424&15
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 8 := 26419921424&15
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 8 := 26419921440&15
(smt.stats   76  11262 290624 1354046  7169/6720/504   22197/2798    50  350   26.32)
(smt.stats   77  11544 295292 1380727  7248/6917/522   22628/3232    51  354   26.41)
(smt.stats   78  11645 297726 1403009  7282/6944/524   22770/3239    52  368   26.41)
(smt.stats   79  11756 299056 1427437  7307/6970/524   22957/3239    52  368   26.51)
(smt.stats   80  11878 300087 1445022  7312/6971/524   23101/3239    52  368   26.51)
(smt.stats   81  12012 301619 1460615  7322/6985/526   23446/3239    52  368   26.51)
ramon: poll                 wall=12.000s usage=11.930s mem=27948KiB load=1.00 rootload=1.00
(smt.stats   82  12159 305150 1490259  7326/6989/526   23741/3288    53  370   26.60)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 0&15
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 33285996547 := 0 << 4
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12320 308723 1516188  7344/6994/527   23996/3288    53  370   26.60)
(smt.stats   84  12497 313137 1550066  7420/7036/532   24602/3335    54  373   26.79)
(smt.stats   85  12691 314316 1559981  7452/7098/532   24856/3335    54  373   26.79)
(smt.stats   86  12904 319732 1591395  7581/7109/532   25232/3341    54  373   26.89)
ramon: poll                 wall=13.000s usage=12.929s mem=28420KiB load=1.00 rootload=1.00
(smt.stats   87  13138 326195 1634678  7600/7250/532   25860/3402    55  373   26.99)
(smt.stats   88  13395 337186 1712308  7612/7262/533   26941/3692    56  376   27.18)
ramon: poll                 wall=14.000s usage=13.929s mem=28844KiB load=1.00 rootload=1.00
(smt.stats   89  13677 342028 1755669  7652/7292/536   27651/3692    56  376   27.37)
(smt.stats   90  13987 347906 1819650  7658/7302/536   28145/3692    56  376   27.46)
(smt.stats   91  14088 351546 1843972  7663/7307/536   28375/3962    57  382   27.46)
(smt.stats   92  14199 357057 1870454  7679/7310/536   28652/3968    57  382   27.56)
ramon: poll                 wall=15.000s usage=14.929s mem=29160KiB load=1.00 rootload=1.00
(smt.stats   93  14321 361184 1900182  7751/7338/536   28944/3971    57  382   27.65)
(smt.stats   94  14455 363857 1921383  7920/7464/536   29277/3975    57  382   27.84)
(smt.stats   95  14602 366093 1941089  7972/7601/537   29699/4049    58  401   28.18)
(smt.stats   96  14763 368101 1959633  8357/7624/537   30052/4058    58  401   28.41)
ramon: poll                 wall=16.002s usage=15.931s mem=30140KiB load=1.00 rootload=1.00
(smt.stats   97  14940 370149 1975364  8567/8052/537   30642/4061    58  401   28.51)
(smt.delete-inactive-clauses  :num-deleted-clauses 38)
(smt.stats   98  15134 378422 2004387  8578/8222/538   31242/4061    58  401   28.70)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 26419920896&15
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 320869803 := 33863499776 << 4
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 26419920896&15
shl: (shl[35] (bv2int %0) (mod (bv2int %1) 35)) 320869675 := 33863499776 << 4
(smt.stats   99  15347 385049 2078229  8647/8226/538   31865/4216    59  423   28.80)
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 26419920656&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 541815996176 := 33863499761 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 26419920912&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 541815996432 := 33863499777 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #289 64)) (if (= #676 63) 0 (if #678 1 #829))) 0 := 26419920912&3
shl: (shl[64] (bv2int %0) (mod (+ #103 #288) 64)) 541815996432 := 33863499777 << 2
ramon: poll                 wall=17.000s usage=16.924s mem=30316KiB load=0.99 rootload=0.99
(smt.stats  100  15581 392999 2157051  8701/8343/544   32765/4345    60  425   28.80)
ramon: poll                 wall=18.000s usage=17.917s mem=30812KiB load=0.99 rootload=1.00
(smt.stats  101  15838 399984 2191766  9173/8355/544   33361/4353    60  425   28.99)
(smt.stats  102  16120 404470 2219826  9312/8855/544   33911/4354    60  425   29.19)
ramon: poll                 wall=19.000s usage=18.917s mem=30844KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  103  16430 414585 2276616  9397/9005/545   34621/4536    61  426   29.28)
(smt.stats  104  16770 423160 2315571  9416/9056/545   35269/4536    61  426   29.28)
(smt.stats  105  16871 426724 2364445  9431/9072/546   36291/4684    62  440   29.38)
(smt.stats  106  16982 428721 2386496  9440/9081/546   36680/4684    62  440   29.48)
ramon: poll                 wall=20.002s usage=19.916s mem=31444KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:16:38 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.985s
ramon: group.utime          19.965s
ramon: group.stime          0.020s
ramon: group.mempeak        33224KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.072s
ramon: loadavg              1.00
