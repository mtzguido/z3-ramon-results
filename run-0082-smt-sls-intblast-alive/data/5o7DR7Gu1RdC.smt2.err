ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:40:43 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29362 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5o7DR7Gu1RdC.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             634138
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   63.2911     10000        49          0            1        2)
(smt.stats    0    101   5230    447  1241/1116/104      80/16     9   29   52.08)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&1
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&4
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&1
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&4
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&8
(sat.ddfw       1      1   35.4645     20001        98          1            1        3)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&4
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&2
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&1
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 17592186044415&9
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 17592186044415&4
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2 := 17592186044415&8
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2 := 17592186044415&10
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2 := 17592186044415&10
(smt.stats    1    202   6587   1188  2277/2065/167     197/34    12   46   52.37)
(smt.stats    2    313  10422   2746  2408/2151/170     307/48    13   49   52.65)
(sat.ddfw       1      1   38.1679     40001       196          2            1        5)
(smt.stats    3    414  12102   3875  2545/2324/172     418/61    15   57   52.65)
(smt.stats    4    525  13657   5051  2755/2399/173     540/87    16   58   52.75)
(sat.ddfw       1      1   34.1686     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.871s mem=54940KiB load=0.87 rootload=0.87
(smt.stats    5    647  15084   6262  2889/2544/173     676/92    16   58   52.95)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  17462   8790  3067/2739/173     790/95    16   58   52.95)
(sat.ddfw       1      1   29.3255    110001       539          4            1       12)
(smt.stats    7    859  21082  11791  3082/2843/173     918/95    16   58   53.05)
(smt.stats    8    981  23811  14672  3102/2868/173    1049/95    16   58   53.05)
(smt.stats    9   1115  28033  19082  3105/2871/173    1189/95    16   58   53.16)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 880 := 67108863&880
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 76561193665299312 := 2251799813685696 << 26
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 880 := 67108863&880
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 4503599627371376 := 2251799813685696 << 26
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 16 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 16 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 32 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 64 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 128 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 256 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 512 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1024 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2048 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4096 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 128 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 256 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 512 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 256 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 512 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1024 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2048 := 67108863&30064771072
(smt.stats   10   1216  29118  20546  3209/2882/174    1296/153    17   60   53.65)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4528 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4528 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2992 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2992 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2976 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2976 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2976 := 67108863&30064771072
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2976 := 67108863&30064771072
(smt.stats   11   1327  29881  22249  3462/3056/216    1629/162    18   69   53.65)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&2848
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&2976
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&2976
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&3104
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&3744
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&3616
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&3744
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&4256
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&4128
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&9696
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&8672
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&8608
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 2208 := 134217727&8352
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 160 := 134217727&12448
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  32514  28307  3557/3314/279    2044/265    19   80   53.88)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 31&1348
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 4503599627371844 := 2251799813685738 << 5
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 31&1364
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 4 := 31&1412
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 4503599627371908 := 2251799813685738 << 5
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 31&1217
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #836 #840) 64)) 4503599627371713 := 2251799813685738 << 5
(smt.stats   13   1583  35655  31882  3624/3386/290    2278/496    21   94   53.97)
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 8 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1125899906843306 := 1125899906842869 << 6
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1125899906843306 := 1125899906842869 << 6
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1125899906843306 := 1125899906842869 << 6
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 1125899906843103 := 1125899906842869 << 6
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 1 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 31 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 30 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 28 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 24 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 16 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 16 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 4 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 4 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 4 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 2 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 1 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 8 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 0 := 31&15680
band: (band[51] (if (= #108 50) 0 (if #604 1 #745)) (shl[51] (bv2int %0) (+ 51 #748))) 8 := 31&15680
band: (band[51] (if (= #373 63) 0 (if #583 1 #829)) (shl[64] (* 2 #102) (mod #844 64))) 1 := 31&15680
ramon: poll                 wall=2.000s usage=1.870s mem=56392KiB load=1.00 rootload=0.98
(sat.ddfw       1      1   25.5097    160000       784          5            1       17)
(smt.stats   14   1730  40773  38528  3769/3469/346    2534/508    21   94   54.26)
(sat.ddfw       1      1   22.4387    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.908s mem=57316KiB load=1.04 rootload=1.03
(smt.stats   15   1831  43136  41414  4112/3669/347    2701/585    22  108   54.97)
(sat.ddfw       1      1   20.4141    290001      1421          7            1       30)
(smt.stats   16   1942  48284  50884  4257/3966/352    3106/646    23  116   55.16)
ramon: poll                 wall=4.000s usage=3.909s mem=57600KiB load=1.00 rootload=1.00
(smt.stats   17   2064  51431  59374  4273/3974/353    3410/648    23  116   55.16)
(smt.stats   18   2198  55993  70319  4334/4007/356    3729/725    24  139   55.25)
(sat.ddfw       1      1   18.3066    370001      1813          8            1       38)
(smt.stats   19   2345  61153  81495  4514/4065/356    4280/779    25  141   55.54)
ramon: poll                 wall=5.000s usage=4.908s mem=58264KiB load=1.00 rootload=1.00
(smt.stats   20   2506  65124  93683  4623/4264/356    4958/784    25  141   55.75)
(smt.stats   21   2607  68819 101298  4700/4341/356    5293/787    25  141   55.75)
(sat.ddfw       1      1   16.5624    460001      2254          9            1       47)
(smt.stats   22   2718  73114 114055  4828/4509/359    5588/956    26  145   55.88)
ramon: poll                 wall=6.000s usage=5.910s mem=58116KiB load=1.00 rootload=1.00
(smt.stats   23   2840  76771 121595  4965/4548/359    5963/973    27  145   55.99)
(smt.stats   24   2974  79412 131229  5071/4735/359    6422/975    27  145   56.18)
(sat.ddfw       1      1   15.1446    560001      2745         10            1       57)
(smt.stats   25   3121  85365 140691  5079/4786/360    6602/1023    28  147   56.32)
(smt.stats   26   3282  92282 174009  5098/4807/363    7160/1055    29  153   56.56)
ramon: poll                 wall=7.000s usage=6.989s mem=58676KiB load=1.08 rootload=1.08
(smt.stats   27   3459  96750 203057  5179/4872/368    7931/1148    31  181   56.65)
(sat.ddfw       1      1   13.9949    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.986s mem=59112KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560 100285 213910  5222/4877/369    8575/1193    32  188   56.97)
ramon: poll                 wall=9.000s usage=8.983s mem=59252KiB load=1.00 rootload=0.99
(smt.stats   29   3671 105349 235919  5322/4947/369    8808/1200    32  188   57.25)
(sat.ddfw       1      1    12.906    790001      3872         12            1       80)
ramon: poll                 wall=10.000s usage=9.976s mem=59552KiB load=0.99 rootload=1.00
(smt.stats   30   3793 111915 252969  5449/5020/369    9489/1317    33  190   57.25)
(smt.stats   31   3927 117437 273689  5472/5165/370   10105/1398    34  196   57.35)
(smt.stats   32   4074 121203 292298  5586/5205/372   10727/1504    35  214   57.44)
(sat.ddfw       1      1   11.9408    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.996s mem=59644KiB load=1.02 rootload=1.02
(smt.stats   33   4235 127982 304319  5781/5292/372   11180/1507    35  214   57.54)
(smt.stats   34   4412 134198 332955  5878/5483/372   11737/1510    35  214   57.64)
ramon: poll                 wall=12.000s usage=11.994s mem=59976KiB load=1.00 rootload=1.00
(smt.stats   35   4606 138561 350880  5944/5616/374   12546/1561    36  218   57.98)
(smt.stats   36   4707 140952 363418  6056/5749/375   12758/1648    37  242   57.98)
(smt.stats   37   4818 143290 380184  6147/5823/377   13023/1648    37  242   58.09)
(smt.stats   38   4940 147184 399773  6147/5840/377   13282/1648    37  242   58.09)
(sat.ddfw       1      1   11.1554   1060001      5196         14            1      108)
(smt.delete-inactive-clauses  :num-deleted-clauses 65)
(smt.stats   39   5074 150404 405488  6162/5851/378   13349/1714    38  270   58.21)
ramon: poll                 wall=13.000s usage=12.992s mem=60436KiB load=1.00 rootload=0.99
(smt.stats   40   5221 155207 458122  6190/5864/378   13598/1717    38  270   58.21)
(smt.stats   41   5382 161083 493346  6198/5891/378   14030/1768    39  271   58.42)
ramon: poll                 wall=14.000s usage=13.991s mem=60784KiB load=1.00 rootload=1.00
(smt.stats   42   5559 166503 507277  6263/5895/380   15382/1837    40  297   58.65)
(sat.ddfw       1      1   10.4712   1210001      5931         15            1      123)
ramon: poll                 wall=15.000s usage=14.989s mem=61180KiB load=1.00 rootload=1.00
(smt.stats   43   5753 176095 557397  6417/5996/380   16058/1846    40  297   58.74)
ramon: poll                 wall=16.000s usage=16.060s mem=61244KiB load=1.07 rootload=1.07
(smt.stats   44   5966 181579 588156  6593/6286/381   17109/2020    41  305   58.93)
(sat.ddfw       1      1   9.94716   1370001      6715         16            1      139)
(smt.stats   45   6067 184586 603958  6606/6299/381   17553/2020    41  305   58.93)
(smt.stats   46   6178 186808 619758  6670/6306/381   17701/2023    41  305   58.93)
ramon: poll                 wall=17.000s usage=17.049s mem=61536KiB load=0.99 rootload=0.99
(smt.stats   47   6300 187432 622036  6852/6381/381   17857/2038    41  305   59.05)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 189247 633524  7049/6742/384   18153/2183    42  307   59.14)
(smt.stats   49   6581 193368 645961  7184/6755/384   18496/2184    42  307   59.24)
ramon: poll                 wall=18.000s usage=18.050s mem=61724KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.40317   1540001      7549         17            1      156)
(smt.stats   50   6742 197125 678736  7318/6933/385   19140/2185    42  307   59.34)
(smt.stats   51   6919 202985 711418  7466/7024/385   19730/2291    43  336   59.34)
ramon: poll                 wall=19.000s usage=19.053s mem=61780KiB load=1.00 rootload=1.00
(smt.stats   52   7113 207268 724406  7648/7169/385   20753/2291    43  336   59.55)
ramon: poll                 wall=20.000s usage=20.109s mem=62212KiB load=1.06 rootload=1.06
ramon: end                  Fri Nov  1 21:41:03 2024
ramon: root.execname        z3
ramon: root.utime           20.140s
ramon: root.stime           0.020s
ramon: group.total          20.174s
ramon: group.utime          20.150s
ramon: group.stime          0.024s
ramon: group.mempeak        62468KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.01
