ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:42:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39686 MiB
ramon: sys.mem.avail        61377 MiB
ramon: sys.nprocs           1318
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tEwaSxJxTVpu.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3985516
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   244/244     0/0  67       0    18.53   0.00)
(sat.stats    138    520    0   244/244   138/34  67       0    19.00   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 455 :time 0.00)
(sat.stats    138    520    0   244/244   138/34  67       0    19.00   0.01)
(sat.stats    138    520    0   244/244   138/34  67       0    19.00   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 523619.00 :time 0.00)
(sat.stats    138    520    0   244/244   138/34  67       0    19.00   0.01)
(sat.stats    287   2318    1   244/244   287/127  67       0    19.19   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    290   2345    2   244/244   290/130  67       0    19.19   0.01)
(sat.stats    293   2359    3   244/244   293/132  67       0    19.19   0.01)
(sat.stats    296   2372    4   244/244   296/135  67       0    19.19   0.01)
(sat.stats    302   2400    5   244/244   302/139  67       0    19.19   0.01)
(sat.stats    305   2434    6   244/244   305/139  67       0    19.19   0.01)
(sat.stats    308   2576    7   244/244   308/139  67       0    19.19   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1362 :time 0.00)
(sat.stats    311   2765    8   244/244   310/139  71       0    19.19   0.02)
(sat.stats    335   3000    9   244/244   334/158  71       0    19.19   0.02)
(sat.stats    338   3072   10   244/244   337/159  71       0    19.19   0.02)
(sat.stats    341   3160   11   244/244   340/159  71       0    19.19   0.02)
(sat.stats    344   3266   12   244/244   343/161  71       0    19.19   0.02)
(sat.stats    348   3363   13   244/244   347/164  71       0    19.19   0.02)
(sat.stats    351   3409   14   244/244   350/166  71       0    19.19   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2729 :time 0.00)
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 88 := 88 << 32
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 18670 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 18673 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
shl: (shl[64] (bv2int %0) (mod (+ #71 #362) 64)) 88 := 88 << 32
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 88000 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 24 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 4 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 48 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 32 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 3063040 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 128 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 10920960 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 512 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 7628800 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 21798912 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 4096 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 206110720 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 16384 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 32768 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 83361792 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 131072 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 262144 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 1786773504 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 1048576 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 6291456 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 4194304 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 1107296256 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 16777216 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 1073741824 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 67108864 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 134217728 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 268435456 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 2147483648 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 536870912 := 2281301268&377957122048
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 25417 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 37822 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 104216 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 4 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 69568 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 16 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 32 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 4090624 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 128 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 12224000 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 8442880 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 17506304 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 2048 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 4096 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 486129664 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 541458432 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 32768 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 262144 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 65536 := 377957122048&2281301268
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    808  14468   31  2913/2912   807/215  80       0    22.91   0.64)
(sat.stats    813  14544   32  3536/3535   812/215  80       0    22.72   0.64)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 5363 :time 0.00)
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 524288 := 377957122048&2281301268
band: (band[56] (if (= #591 55) 1 (if #593 2 #750)) (shl[56] (bv2int %0) (mod #71 56))) 0 := 2281301268&377957122048
band: (band[56] (shl[64] (bv2int %0) (mod #363 64)) (if (= #770 63) 0 (if #772 1 #902))) 1048576 := 377957122048&2281301268
ramon: poll                 wall=1.000s usage=0.952s mem=25156KiB load=0.95 rootload=0.94
(sat.stats   1200  30135   33  9504/9503  1199/219 394       0    24.14   1.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7260 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 7445 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 7507 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7577 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 8115 :time 0.00)
 (sat-cleaner :elim-literals 30 :elim-clauses 2 :cost 8876 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 9483 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 10180 :time 0.00)
ramon: poll                 wall=2.000s usage=1.951s mem=30800KiB load=1.00 rootload=1.00
(sat.stats   1598  55836   71 45640/45639  1656/428 444       0    29.84   2.10)
ramon: poll                 wall=3.000s usage=2.951s mem=38764KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.950s mem=53268KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.950s mem=57596KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.950s mem=60592KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.949s mem=64280KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.949s mem=66684KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.949s mem=69204KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.948s mem=87840KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.948s mem=89804KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.947s mem=91476KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.947s mem=93888KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.947s mem=95500KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.003s usage=14.948s mem=98144KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.944s mem=99428KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.944s mem=100MiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.943s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.943s mem=104MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.943s mem=106MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:42:49 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.060s
ramon: group.total          20.001s
ramon: group.utime          19.933s
ramon: group.stime          0.068s
ramon: group.mempeak        107MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.059s
ramon: loadavg              1.00
