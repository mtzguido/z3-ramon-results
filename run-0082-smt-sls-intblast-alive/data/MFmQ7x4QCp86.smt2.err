ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:18:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28444 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/MFmQ7x4QCp86.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             766251
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   149.254     10000        49          0            1        2)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 524287 := 524287&524287
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 524287 := 20 << 19
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 524287 := 524287&524287
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 524287 := 20 << 19
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 524287 := 524287&524287
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 524287 := 20 << 19
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 524287 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 256 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1024 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2048 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 65536 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 262144 := 524287&10485760
(sat.ddfw       1      1   66.6733     20001        98          1            1        3)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 6 := 524287&6
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 1073741830 := 20 << 19
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 6 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
(smt.stats    0    101   2585    683   764/685/189      96/19    11   41   52.26)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 1 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 1 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 1 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 0 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 0 := 10 << 20
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 65536 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 262144 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 262144 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 2048 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 256 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1024 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 256 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 1 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 524272 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 128 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 256 := 524287&10485760
(sat.ddfw       1      1   67.1141     40001       196          2            1        5)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 512 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 1024 := 524287&10485760
(smt.stats    1    202   4018   2260  1411/1264/331     286/88    14   71   52.86)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 2048 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4096 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 16384 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 65536 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 262144 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 262144 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 131072 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 65536 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32878 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32768 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 12288 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 10240 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8192 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 96 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 64 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 32 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 12 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 8 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 4 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 2 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 1 := 524287&10485760
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 524287&10485760
band: (band[30] (if (= #111 29) 0 (if #385 1 #464)) (shl[30] (bv2int %0) (+ 30 #467))) 16 := 524287&10485760
(smt.stats    2    313   5639   4344  1612/1452/456     506/148    17  102   53.34)
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 0 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1048576 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1048576 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1048576 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 3145728 := 4194303&7340032
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 7340032 := 14 << 22
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1572864 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 1048576 := 4194303&7340032
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 3145728 := 4194303&7340032
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 7340032 := 14 << 22
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 3145728 := 4194303&7340032
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #512 #516) 32)) 7340032 := 14 << 22
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16 := 2097151&8388608
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 16 := 2097151&8388608
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32 := 2097151&8388608
band: (band[30] (if (= #272 31) 0 (if #364 1 #505)) (shl[32] (* 2 #105) (mod #520 32))) 32 := 2097151&8388608
(sat.ddfw       1      1   58.1395     70001       343          3            1        8)
(smt.stats    3    414   8416   8046  1810/1587/472     724/184    18  105   53.67)
(sat.ddfw       1      1   52.4934    110001       539          4            1       12)
(smt.stats    4    525  12098  12806  1883/1672/519     971/303    22  161   54.14)
ramon: poll                 wall=1.000s usage=0.801s mem=56672KiB load=0.80 rootload=0.78
(sat.ddfw       1      1   46.5107    160000       784          5            1       17)
(sat.ddfw       1      1    41.323    220001      1078          6            1       23)
(smt.stats    5    647  15884  16640  2024/1860/521    1212/347    23  161   54.43)
(sat.ddfw       1      1   39.1061    290001      1421          7            1       30)
ramon: poll                 wall=2.000s usage=1.858s mem=56632KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   35.3045    370001      1813          8            1       38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  19733  21176  2149/1985/523    1426/402    24  169   54.52)
(sat.ddfw       1      1   31.8134    460001      2254          9            1       47)
ramon: poll                 wall=3.000s usage=2.858s mem=57048KiB load=1.00 rootload=1.00
(smt.stats    7    859  22931  25812  2317/1986/523    1732/414    24  169   54.71)
(sat.ddfw       1      1   28.9101    560001      2745         10            1       57)
ramon: poll                 wall=4.000s usage=3.854s mem=57076KiB load=1.00 rootload=1.00
(smt.stats    8    981  26083  31579  2596/2243/523    2110/416    24  169   54.80)
(sat.ddfw       1      1   26.5508    670001      3284         11            1       68)
(smt.stats    9   1115  30529  40349  2805/2474/524    2590/645    25  172   55.09)
(sat.ddfw       1      1   24.5098    790001      3872         12            1       80)
ramon: poll                 wall=5.000s usage=4.853s mem=57448KiB load=1.00 rootload=1.00
(smt.stats   10   1216  33269  44412  3019/2690/524    2986/650    25  172   55.14)
(sat.ddfw       1      1    22.783    920001      4509         13            1       93)
ramon: poll                 wall=6.000s usage=5.851s mem=57696KiB load=1.00 rootload=0.99
(smt.stats   11   1327  36251  50791  3258/2880/525    3245/893    26  172   55.33)
(sat.ddfw       1      1   21.0875   1060001      5196         14            1      108)
ramon: poll                 wall=7.000s usage=6.792s mem=57712KiB load=0.94 rootload=0.95
(smt.stats   12   1449  38525  56019  3555/3174/525    3579/908    26  172   55.42)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   13   1583  41943  62975  3719/3462/531    3968/1007    27  175   55.53)
(sat.ddfw       1      1    19.976   1210001      5931         15            1      123)
ramon: poll                 wall=8.000s usage=7.835s mem=58112KiB load=1.04 rootload=1.04
(smt.stats   14   1730  45815  67371  3920/3640/531    4410/1141    28  186   55.73)
(sat.ddfw       1      1   18.8724   1370001      6715         16            1      139)
(smt.stats   15   1831  48267  71891  4299/3986/531    4760/1154    28  186   55.82)
ramon: poll                 wall=9.000s usage=8.836s mem=58284KiB load=1.00 rootload=1.00
(smt.stats   16   1942  51418  78916  4553/4387/533    5424/1445    29  188   55.92)
(sat.ddfw       1      1   17.8553   1540001      7549         17            1      156)
(smt.stats   17   2064  54415  85129  4690/4399/533    5829/1452    29  188   56.02)
ramon: poll                 wall=10.000s usage=9.837s mem=58528KiB load=1.00 rootload=1.00
(smt.stats   18   2198  58875  90474  4813/4569/533    6208/1890    30  190   56.21)
(sat.ddfw       1      1   16.9571   1720001      8431         18            1      174)
(smt.stats   19   2345  62144  99534  5203/4944/534    6701/2211    31  190   56.41)
ramon: poll                 wall=11.000s usage=10.908s mem=58812KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   16.5476   1910001      9362         19            1      193)
(smt.stats   20   2506  63260 106194  5357/5077/534    6981/2222    31  190   56.60)
(smt.stats   21   2607  64922 115845  5954/5661/534    7198/2223    31  190   56.60)
ramon: poll                 wall=12.006s usage=12.020s mem=59104KiB load=1.10 rootload=1.10
(smt.stats   22   2718  69621 158615  6106/5877/536    7759/2368    33  194   56.70)
(sat.ddfw       1      1   15.8253   2110001     10343         20            1      214)
(smt.stats   23   2840  73482 180322  6279/5961/536    8120/2368    33  194   56.80)
ramon: poll                 wall=13.000s usage=12.987s mem=59200KiB load=0.97 rootload=0.98
(smt.stats   24   2974  76906 203671  6437/6224/537    8957/2670    34  199   56.89)
ramon: poll                 wall=14.000s usage=13.935s mem=59272KiB load=0.95 rootload=0.94
(sat.ddfw       1      1   15.0819   2320001     11372         21            1      235)
(smt.stats   25   3121  81623 227068  6608/6305/537    9700/2676    34  199   57.08)
(smt.stats   26   3282  84287 248817  7044/6879/539   10270/3280    35  199   57.27)
ramon: poll                 wall=15.000s usage=14.897s mem=59792KiB load=0.96 rootload=0.97
(smt.stats   27   3459  87671 277672  7277/6882/540   10776/3287    35  199   57.37)
(sat.ddfw       1      1   14.3866   2540001     12451         22            1      257)
ramon: poll                 wall=16.000s usage=15.880s mem=59868KiB load=0.98 rootload=0.98
(smt.stats   28   3560  90997 288701  7553/7267/541   11766/3366    36  199   57.56)
(smt.stats   29   3671  96129 301454  7673/7399/541   12538/3376    36  199   57.82)
(sat.ddfw       1      1   13.7626   2770001     13578         23            1      280)
ramon: poll                 wall=17.000s usage=16.830s mem=60236KiB load=0.95 rootload=0.95
(smt.stats   30   3793 101116 330767  7880/7548/541   13373/3768    37  200   58.05)
(smt.stats   31   3927 104352 345852  7972/7807/542   14191/4089    38  208   58.25)
ramon: poll                 wall=18.000s usage=17.830s mem=60748KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.1875   3010001     14754         24            1      305)
(smt.stats   32   4074 109483 367352  8199/7904/543   15338/4092    38  208   58.44)
ramon: poll                 wall=19.000s usage=18.829s mem=61004KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4235 114906 406988  8377/8044/543   16171/4446    39  216   58.53)
(sat.ddfw       1      1   12.6704   3260001     15980         25            1      330)
ramon: poll                 wall=20.000s usage=19.829s mem=61004KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:18:56 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.010s
ramon: group.total          19.906s
ramon: group.utime          19.890s
ramon: group.stime          0.016s
ramon: group.mempeak        61260KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              0.99
