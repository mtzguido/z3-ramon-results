ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:03:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24721 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rMV6PUDZBKm9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             165014
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4382    392  1214/1086/98      93/21     5   16   19.16)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 1&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 1&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 1&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 2 := 4&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4 := 8&4095
(smt.stats    1    202   6736   3675  1983/1749/101     198/27     6   17   19.36)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 1 := 4&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 4&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 4&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 4&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 8&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 8&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 4&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 8&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 4&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 8&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4 := 8&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4 := 9&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 5 := 9&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4 := 5&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4 := 5&4095
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 1 := 1&4095
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 1 := 12 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 1 := 1&4095
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 1 := 12 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 1 := 1&4095
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 1 := 12 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 1 := 1&4095
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 1 := 12 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 1 := 1&4095
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 1 := 12 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 1 := 1&4095
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 1 := 12 << 12
(smt.stats    2    313   9665   6156  2442/2134/170     296/43     9   65   19.76)
(smt.stats    3    414  15495   8268  2495/2254/175     404/44    11   70   19.85)
(smt.stats    4    525  17255   9901  2519/2278/183     506/60    12   86   19.85)
(smt.stats    5    647  19461  11977  2587/2281/186     654/71    13   96   19.96)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748  22607  16304  2663/2360/188     805/87    14  105   20.15)
(smt.stats    7    859  24976  19436  2739/2490/192     921/114    16  115   20.25)
(smt.stats    8    981  26521  21074  2868/2494/193    1071/122    16  115   20.34)
(smt.stats    9   1115  28828  25373  3010/2739/199    1229/136    17  123   20.34)
ramon: poll                 wall=1.000s usage=0.922s mem=21768KiB load=0.92 rootload=0.91
(smt.stats   10   1216  30651  29974  3037/2791/205    1312/182    19  157   20.34)
(smt.stats   11   1327  33746  36988  3050/2804/209    1447/193    20  158   20.44)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  35884  42541  3108/2861/210    1620/223    21  169   20.44)
(smt.stats   13   1583  38390  48456  3175/2881/210    1785/225    21  169   20.56)
(smt.stats   14   1730  40292  51949  3384/2948/210    1977/231    21  169   20.75)
(smt.stats   15   1831  41590  53792  3577/3179/210    2150/235    21  169   20.75)
(smt.stats   16   1942  44236  59977  3664/3419/213    2516/290    22  169   20.75)
(smt.stats   17   2064  46466  64484  3755/3422/213    2729/297    22  169   20.95)
ramon: poll                 wall=2.000s usage=1.921s mem=22536KiB load=1.00 rootload=1.00
(smt.stats   18   2198  47862  68681  4024/3567/213    2954/320    23  171   21.05)
(smt.stats   19   2345  50394  78450  4258/3987/214    3131/377    24  171   21.05)
(smt.stats   20   2506  52859  89055  4384/4042/214    3507/379    24  171   21.15)
(smt.stats   21   2607  55018  96851  4458/4149/214    3635/388    24  171   21.15)
(smt.stats   22   2718  57972 109208  4587/4266/214    3793/390    24  171   21.15)
(smt.stats   23   2840  59603 116647  4717/4365/214    3961/395    24  171   21.26)
(smt.stats   24   2974  60990 122058  4847/4602/215    4317/484    25  174   21.37)
(smt.stats   25   3121  66011 137585  4933/4626/215    4684/488    25  174   21.47)
(smt.stats   26   3283  70015 147545  5092/4740/215    4938/492    25  174   21.47)
ramon: poll                 wall=3.000s usage=2.920s mem=22968KiB load=1.00 rootload=1.00
(smt.stats   27   3460  73885 158984  5162/4911/222    5193/699    26  193   21.47)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 13060 := 281474439688230&140737488355327
(smt.stats   28   3561  75396 165471  5215/4926/222    5428/702    26  193   21.56)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 736 := 281474439688212&140737488355327
(smt.stats   29   3672  77123 178503  5410/4980/227    5767/707    26  193   21.66)
(smt.stats   30   3794  79237 195405  5526/5175/227    6127/751    27  194   21.76)
(smt.stats   31   3928  81472 203386  5686/5284/227    6662/755    27  194   21.85)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  83807 212541  5760/5463/229    7019/803    28  194   21.95)
(smt.stats   33   4236  88553 239266  5864/5529/229    7273/805    28  194   21.95)
ramon: poll                 wall=4.000s usage=3.919s mem=23460KiB load=1.00 rootload=0.99
(smt.stats   34   4413  91099 251571  6078/5642/229    7835/812    28  194   22.05)
(smt.stats   35   4607  93721 265998  6170/5844/229    8222/819    28  194   22.24)
(smt.stats   36   4708  96362 283885  6196/5940/229    8636/820    28  194   22.33)
(smt.stats   37   4819  98187 296090  6279/5952/229    8849/821    28  194   22.33)
(smt.stats   38   4941  99893 307848  6428/6065/229    9091/822    28  194   22.52)
(smt.delete-inactive-clauses  :num-deleted-clauses 26)
(smt.stats   39   5075 103600 326312  6485/6186/229    9494/824    28  194   22.52)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474443686040&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 281474443686040 := 68719346596 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474443686040&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 281474443686040 := 68719346596 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474443685944&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 281474443685944 := 68719346596 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474443686016&15
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 9 := 281474443686024&15
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 2 := 281474443657232&15
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 281474443657232&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 281474443657232 := 68719346596 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 281474443657232&15
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 281474443657232 := 68719346596 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 281474443686000&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 281474443686000 := 68719346593 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 16&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 16 := 68719346595 << 3
(smt.stats   40   5223 106048 335760  6586/6247/229    9813/828    28  194   22.62)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 68719345872&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 68719345872 := 68719346595 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 68188057216&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 68188057216 := 68719346595 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 549754772760&7
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 246428043436676 := 68719346595 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 549754772760&7
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 246428043436676 := 68719346595 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 549754772760&7
band: (band[48] (shl[48] (bv2int %0) (mod #100 48)) (if (= #595 47) 1 (if #597 3 #730))) 1 := 549754772760&7
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 549754772760&7
band: (band[48] (shl[48] (bv2int %0) (mod #100 48)) (if (= #595 47) 1 (if #597 3 #730))) 2 := 549754772760&7
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 549754772760&7
band: (band[48] (shl[48] (bv2int %0) (mod #100 48)) (if (= #595 47) 1 (if #597 3 #730))) 4 := 549754772760&7
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 549754772760&7
band: (band[48] (shl[48] (bv2int %0) (mod #100 48)) (if (= #595 47) 1 (if #597 3 #730))) 1 := 549754772760&7
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   41   5384 109149 348598  6667/6363/244   10032/1349    29  197   22.82)
(smt.stats   42   5561 112911 369105  6678/6421/279   10908/1361    30  206   22.91)
ramon: poll                 wall=5.000s usage=4.919s mem=24352KiB load=1.00 rootload=1.00
(smt.stats   43   5755 116669 389895  6733/6427/279   11300/1441    31  243   23.01)
(smt.stats   44   5968 121376 409758  6766/6509/281   11820/1531    32  245   23.01)
(smt.stats   45   6069 122638 422998  6766/6509/281   12004/1531    32  245   23.10)
(smt.stats   46   6180 124522 440113  6773/6512/281   12246/1532    32  245   23.20)
(smt.stats   47   6302 127494 449433  6817/6521/281   12493/1657    33  249   23.20)
(smt.stats   48   6436 130895 469012  6856/6583/281   12851/1660    33  249   23.20)
(smt.stats   49   6583 133074 478737  6904/6607/281   13047/1663    33  249   23.30)
ramon: poll                 wall=6.000s usage=5.918s mem=24876KiB load=1.00 rootload=1.00
(smt.stats   50   6744 135726 486065  6967/6666/281   13266/1665    33  249   23.54)
(smt.stats   51   6921 139107 510517  6992/6722/281   13761/1665    33  249   23.54)
(smt.stats   52   7115 143342 532881  7020/6745/281   14500/1666    33  249   23.64)
(smt.stats   53   7328 149560 577387  7048/6775/281   14741/1667    33  249   23.64)
(smt.stats   54   7562 154502 601182  7266/7006/282   15084/1878    34  275   23.74)
ramon: poll                 wall=7.000s usage=6.917s mem=25280KiB load=1.00 rootload=1.00
(smt.stats   55   7663 156018 609709  7371/7019/282   15298/1885    34  275   23.84)
(smt.stats   56   7774 157740 623014  7624/7219/282   15443/1886    34  275   23.93)
(smt.stats   57   7896 159985 639444  7876/7447/282   15627/1887    34  275   23.93)
(smt.stats   58   8030 162096 654080  8042/7688/282   15866/1889    34  275   24.03)
(smt.stats   59   8177 165085 684793  8137/7793/283   16108/2028    35  278   24.03)
(smt.stats   60   8338 167880 706785  8162/7894/283   16514/2029    35  278   24.13)
ramon: poll                 wall=8.000s usage=7.917s mem=25632KiB load=1.00 rootload=0.99
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4096 := 4138&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4096 := 4138&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4096 := 4136&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4096 := 4128&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4096 := 4144&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4096 := 4128&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4096 := 4128&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4080 := 4112&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4080 := 4112&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 4080 := 4112&549755813887
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8515 172329 724230  8255/7909/283   17049/2032    35  278   24.22)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 540 := 572&549755813887
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 796 := 828&549755813887
(smt.stats   62   8709 176259 740887  8613/8003/308   17483/2125    36  283   24.32)
(smt.stats   63   8922 181758 773282  8623/8365/308   17810/2125    36  283   24.42)
(smt.stats   64   9156 186906 792116  8879/8366/308   18493/2174    37  283   24.61)
(smt.stats   65   9413 192077 828293  9095/8705/308   19106/2175    37  283   24.71)
(smt.stats   66   9514 193332 836202  9114/8841/308   19654/2176    37  283   24.80)
ramon: poll                 wall=9.000s usage=8.917s mem=26292KiB load=1.00 rootload=1.00
(smt.stats   67   9625 196397 857061  9194/8856/308   20031/2177    37  283   24.80)
(smt.stats   68   9747 198340 868614  9273/8976/308   20242/2177    37  283   24.90)
(smt.stats   69   9881 200403 881118  9521/9035/308   20502/2180    37  283   24.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 254)
(smt.stats   70  10028 203465 910821  9641/9268/308   20974/2180    37  283   24.99)
ramon: poll                 wall=10.000s usage=9.918s mem=26676KiB load=1.00 rootload=1.00
(smt.stats   71  10189 206398 945240  9779/9427/308   21237/2182    37  283   25.09)
(smt.stats   72  10366 211742 973665  9867/9609/309   21775/2483    38  287   25.09)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720199434&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720199834&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720199898&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720199962&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720199898&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720199962&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720199962&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720200218&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720200218&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720200090&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720200090&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720200218&2199023255551
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281405720200218&2199023255551
(smt.stats   73  10561 215718 998712 10031/9613/309   22206/2487    38  287   25.46)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   74  10774 221009 1031974 10146/9849/371   22607/2563    39  299   25.92)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 26 := 281474473132506&140737488355327
(smt.stats   75  11008 225246 1058346 10375/10113/378   23070/2581    40  300   26.12)
ramon: poll                 wall=11.000s usage=10.915s mem=27672KiB load=1.00 rootload=0.99
(smt.stats   76  11265 235065 1080973 10400/10127/378   23530/2583    40  300   26.21)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474473132440&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474473132440&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474473132440&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474473132488&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474473132488&4194303
(smt.stats   77  11547 242852 1111868 10486/10166/379   24218/2584    40  300   26.21)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 8 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 136 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 136 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 136 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 136 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 136 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 136 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 392 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 392 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 392 := 281474473132680&4194303
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 216 := 281474473132680&4194303
(smt.stats   78  11648 245776 1125585 10580/10228/379   24702/2773    41  306   26.59)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 152 := 281474439687960&4194303
(smt.stats   79  11759 248747 1136235 10699/10326/394   24968/2774    41  306   26.69)
ramon: poll                 wall=12.000s usage=11.914s mem=28504KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   80  11881 250332 1141932 10991/10467/394   25187/2781    41  306   26.79)
(smt.stats   81  12015 252710 1150722 11149/10850/394   25650/2781    41  306   26.88)
(smt.stats   82  12162 257547 1176328 11236/10887/395   26128/3042    42  310   26.98)
(smt.stats   83  12323 264560 1208863 11375/11019/395   26390/3046    42  310   27.13)
ramon: poll                 wall=13.000s usage=12.913s mem=28884KiB load=1.00 rootload=1.00
(smt.stats   84  12500 268021 1226875 11500/11223/396   27335/3124    43  312   27.32)
(smt.stats   85  12694 272993 1240587 11575/11239/396   27799/3125    43  312   27.52)
(smt.stats   86  12907 278878 1277777 11625/11318/397   28371/3130    43  312   27.52)
ramon: poll                 wall=14.000s usage=13.913s mem=29256KiB load=1.00 rootload=1.00
(smt.stats   87  13141 283801 1336048 11661/11385/400   29310/3312    44  320   27.71)
(smt.stats   88  13398 288478 1385155 11910/11422/403   30208/3531    45  343   27.84)
(smt.stats   89  13680 293046 1416932 12129/11658/407   31599/3695    46  361   28.12)
ramon: poll                 wall=15.000s usage=14.912s mem=29808KiB load=1.00 rootload=1.00
(smt.stats   90  13990 297390 1473032 12302/11895/408   32083/3700    46  361   28.12)
(smt.stats   91  14091 300213 1496848 12316/12034/409   32299/3854    47  378   28.12)
(smt.stats   92  14202 305877 1546896 12336/12049/409   32436/3854    47  378   28.24)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 12290&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 12290 := 289 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 8194&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 8194 := 289 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 6146&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 6146 := 289 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 6146&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 6146 := 289 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 578&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 68719346766 := 289 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 578&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 68719346764 := 289 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 578&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 68719346764 := 289 << 1
(smt.stats   93  14324 308310 1564570 12436/12050/409   32772/3905    48  380   28.34)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 0 := 578&1
band: (band[48] (shl[48] (bv2int %0) (mod #100 48)) (if (= #595 47) 1 (if #597 3 #730))) 1 := 578&1
(smt.stats   94  14458 310078 1574460 12506/12213/415   33140/3905    48  380   28.43)
(smt.stats   95  14605 314198 1621081 12528/12231/420   33701/3905    48  380   28.53)
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 14 := 526&70368744177663
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 14 := 526&70368744177663
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 14 := 526&70368744177663
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 14 := 526&70368744177663
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 14 := 1294&70368744177663
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 14 := 1038&70368744177663
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 14 := 1038&70368744177663
band: (band[48] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #889))) 14 := 14&70368744177663
shl: (shl[64] (bv2int %0) (mod (+ #100 #350) 64)) 1152358554653425678 := 94 << 46
(smt.stats   96  14766 318217 1660247 12656/12233/420   34399/4059    49  397   28.63)
(smt.stats   97  14943 323385 1683536 12788/12462/425   34631/4061    49  397   28.73)
(smt.delete-inactive-clauses  :num-deleted-clauses 72)
ramon: poll                 wall=16.000s usage=15.911s mem=30424KiB load=1.00 rootload=1.00
(smt.stats   98  15137 328877 1731538 12856/12506/427   35670/4131    50  398   28.82)
(smt.stats   99  15350 332016 1767313 13257/12551/427   36288/4132    50  398   29.13)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  100  15584 336907 1788163 13423/12975/427   37309/4424    51  401   29.32)
ramon: poll                 wall=17.000s usage=16.910s mem=31188KiB load=1.00 rootload=1.00
(smt.stats  101  15841 342577 1816721 13556/13123/427   38156/4427    51  401   29.41)
(smt.stats  102  16123 348537 1867267 13985/13294/427   38787/4433    51  401   29.61)
ramon: poll                 wall=18.000s usage=17.910s mem=31444KiB load=1.00 rootload=1.00
(smt.stats  103  16433 354352 1944645 14249/13727/428   39429/4815    52  410   29.80)
ramon: poll                 wall=19.000s usage=18.909s mem=31444KiB load=1.00 rootload=1.00
(smt.stats  104  16773 364920 2080163 14528/14070/431   41202/4977    53  416   30.06)
ramon: poll                 wall=20.000s usage=19.909s mem=31700KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:04:05 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.995s
ramon: group.utime          19.971s
ramon: group.stime          0.024s
ramon: group.mempeak        31956KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.083s
ramon: loadavg              1.00
