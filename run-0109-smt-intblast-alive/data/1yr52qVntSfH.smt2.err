ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:20:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42975 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1275
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1yr52qVntSfH.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2764205
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 1&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1 := 0 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 1&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1 := 0 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&2
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2 := 0 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&2
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2 := 0 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65540 := 65539 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 327680 := 131072 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65540 := 65539 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131070 := 65539 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 1&65536
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65539 << 16
(smt.stats    0    101   1374    795   577/519/124     100/13    10   19   18.66)
(smt.stats    1    202   2441   2421   814/709/131     274/34    12   30   18.85)
(smt.stats    2    313   2743   2715   924/796/131     398/54    12   30   19.33)
(smt.stats    3    416   3673   5645  1272/1182/142     676/151    13   33   19.33)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131072 := 131074 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131072 := 131074 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131072 := 131074 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&131071
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131071 := 131072 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 3
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 13 := 65536 << 3
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 1 := 65536 << 3
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 524289 := 131072 << 1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&131071
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131071 := 131072 << 1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1 := 131072 << 1
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65535 := 65536 << 2
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 16 := 65536 << 2
(smt.stats    4    527   4337   7298  1361/1208/150     871/201    14   64   19.33)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 524289 := 131072 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147614720 := 131072 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 15
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 655360 := 131072 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1073741824 := 131072 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1073872896 := 131072 << 10
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 134217728 := 131072 << 10
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131070 := 65536 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147352576 := 131072 << 10
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147352576 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 655360 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131070 := 65536 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 134086656 := 131072 << 8
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 655360 := 131072 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 9
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 65537 := 65536 << 10
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 33554432 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 134086656 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147614720 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147483648 := 131072 << 12
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 131071 := 65536 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 537001984 := 131072 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 4 := 65536 << 14
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 1073872896 := 131072 << 13
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&0
shl: (shl[17] (bv2int %1) (+ 17 (* 131071 #121))) 4 := 65536 << 14
(smt.stats    5    650   5426  11767  1491/1344/208    1060/277    17   79   19.63)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    751   6120  13968  1634/1494/235    1241/290    18   84   19.63)
(smt.stats    7    862   7340  17380  1704/1538/238    1442/314    19   90   19.73)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 131073 := 131074 << 14
(smt.stats    8    984   8612  23862  1776/1651/243    1646/360    21  101   19.82)
(smt.stats    9   1118  10085  29073  1786/1672/247    1864/376    23  119   19.92)
(smt.stats   10   1219  11435  32007  1819/1687/247    2022/379    23  119   19.92)
(smt.stats   11   1330  13108  36531  1877/1719/247    2159/392    24  119   19.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  14597  41468  1912/1794/249    2407/405    25  122   20.01)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1573
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147616293 := 66322 << 13
ramon: poll                 wall=1.000s usage=0.910s mem=21376KiB load=0.91 rootload=0.90
(smt.stats   13   1586  15387  42850  2105/1806/249    2702/412    25  122   20.20)
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&813
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615533 := 65942 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&557
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615277 := 65814 << 11
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1179
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615899 := 65942 << 7
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1179
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615899 := 65942 << 7
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1180
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615900 := 65942 << 7
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&1180
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615900 := 65942 << 7
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&813
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615533 := 65942 << 6
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&813
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615533 := 65942 << 6
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 0&813
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615533 := 65942 << 6
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&777
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 2&777
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615497 := 65540 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&777
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&777
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 2&777
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 2&777
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615497 := 65540 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&793
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 2&793
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 2&793
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615513 := 65932 << 16
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 2 := 2&793
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 1 := 2&793
band: (band[17] (if (or #452 #453 #454 #455 #456 #457 #458 #459 #460 #461 #462 #463 #464 #465 #466) 0 (if #467 1 #499)) (shl[32] (* 2 #204) (mod #574 32))) 0 := 2&793
shl: (shl[32] (* 2 (bv2int %1)) (mod (+ 16 #559 #216 #444) 32)) 2147615513 := 65932 << 16
(smt.stats   14   1733  17515  47650  2255/2128/288    3128/536    27  142   20.40)
(smt.stats   15   1834  18742  52554  2325/2184/290    3313/537    27  142   20.40)
(smt.stats   16   1945  20114  58126  2396/2268/292    3618/545    28  142   20.51)
(smt.stats   17   2067  21654  63341  2421/2279/293    4099/590    29  146   20.72)
(smt.stats   18   2201  23065  69754  2515/2303/293    4361/591    29  146   20.72)
(smt.stats   19   2348  24714  77853  2588/2402/293    4664/723    30  154   20.72)
(smt.stats   20   2509  26508  84064  2626/2487/295    5155/758    31  156   20.81)
(smt.stats   21   2610  28556  92177  2669/2520/295    5333/758    31  156   20.91)
(smt.stats   22   2721  30277 100257  2703/2571/303    5630/789    32  156   20.91)
(smt.stats   23   2843  31390 105924  2742/2574/303    5790/789    32  156   21.20)
(smt.stats   24   2977  32811 116954  2807/2678/306    6064/818    33  171   21.20)
ramon: poll                 wall=2.000s usage=1.909s mem=22544KiB load=1.00 rootload=0.99
(smt.stats   25   3124  34139 121629  2863/2684/306    6264/823    33  171   21.39)
(smt.stats   26   3285  35384 126333  3097/2842/306    6505/879    34  183   21.39)
(smt.stats   27   3462  36783 133585  3500/3120/306    6749/893    34  183   21.58)
(smt.stats   28   3563  37725 145542  3545/3413/308    6985/939    35  184   21.58)
(smt.stats   29   3674  38637 158297  3557/3426/309    7205/969    36  194   21.58)
(smt.stats   30   3796  39581 169928  3590/3448/309    7511/969    36  194   21.58)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3930  41191 181082  3627/3492/310    7960/1052    37  196   21.68)
(smt.stats   32   4077  42962 188243  3668/3494/311    8446/1055    37  196   21.78)
(smt.stats   33   4238  44112 199532  3737/3557/311    8902/1055    37  196   21.99)
ramon: poll                 wall=3.000s usage=2.909s mem=23276KiB load=1.00 rootload=1.00
(smt.stats   34   4415  45817 221619  3833/3628/311    9369/1196    38  197   22.10)
(smt.stats   35   4609  49392 235682  4024/3791/317   10457/1243    39  201   22.40)
(smt.stats   36   4710  50261 246075  4032/3859/317   10773/1243    39  201   22.40)
(smt.stats   37   4821  51662 260174  4036/3866/318   11107/1314    40  216   22.40)
(smt.stats   38   4943  54192 277589  4077/3907/322   11445/1343    41  231   22.49)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5077  56122 288349  4090/3914/322   11863/1343    41  231   22.49)
(smt.stats   40   5224  57287 306760  4094/3926/322   12263/1343    41  231   22.62)
(smt.stats   41   5385  59908 325259  4229/3978/322   12851/1357    41  231   22.91)
ramon: poll                 wall=4.000s usage=3.909s mem=24200KiB load=1.00 rootload=1.00
(smt.stats   42   5562  64351 348436  4287/4095/327   13342/1436    42  238   22.91)
(smt.stats   43   5756  68215 360379  4432/4121/327   13899/1449    42  238   23.00)
(smt.stats   44   5969  70905 389192  4609/4285/327   14356/1544    43  247   23.10)
(smt.stats   45   6070  72392 401271  4652/4451/327   14705/1544    43  247   23.10)
(smt.stats   46   6181  73131 410336  4655/4471/327   14894/1544    43  247   23.10)
(smt.stats   47   6303  74368 416294  4703/4478/327   15070/1546    43  247   23.29)
(smt.stats   48   6437  76142 443130  4747/4563/329   15491/1626    44  272   23.29)
(smt.stats   49   6584  78249 460405  4806/4590/335   15930/1631    44  272   23.29)
(smt.stats   50   6745  80926 488893  5006/4644/335   16246/1638    44  272   23.38)
ramon: poll                 wall=5.000s usage=4.909s mem=24888KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6922  82495 506267  5054/4825/335   16463/1779    45  286   23.57)
(smt.stats   52   7116  84570 533873  5385/5120/337   17128/1781    45  286   23.67)
(smt.stats   53   7329  87052 546427  5509/5208/337   17443/1840    46  296   24.05)
ramon: poll                 wall=6.000s usage=5.908s mem=25548KiB load=1.00 rootload=1.00
(smt.stats   54   7563  87584 547670  5850/5659/337   17700/1843    46  296   25.22)
(smt.stats   55   7664  88038 551938  6651/6362/337   17894/1843    46  296   24.84)
(smt.stats   56   7775  89305 570447  6819/6522/337   18047/1851    46  296   24.84)
ramon: poll                 wall=7.000s usage=6.908s mem=26708KiB load=1.00 rootload=1.00
(smt.stats   57   7897  91171 593524  7060/6716/337   18216/1859    46  296   25.03)
(smt.stats   58   8031  92328 597847  7245/6963/337   18539/1867    46  296   25.13)
(smt.stats   59   8178  93950 630307  7434/7167/337   19600/1870    46  296   25.32)
ramon: poll                 wall=8.000s usage=7.908s mem=26912KiB load=1.00 rootload=1.00
(smt.stats   60   8339  96310 678499  7662/7376/337   20476/1871    46  296   25.51)
(smt.stats   61   8516  99633 724211  7778/7579/337   21794/1871    46  296   25.51)
(smt.stats   62   8710 103588 749456  7878/7609/337   22499/1872    46  296   25.61)
(smt.stats   63   8923 104663 788002  7921/7705/337   23289/1872    46  296   25.90)
ramon: poll                 wall=9.002s usage=8.910s mem=27460KiB load=1.00 rootload=1.00
(smt.stats   64   9157 107733 808772  8035/7801/337   24479/1873    46  296   26.09)
(smt.stats   65   9414 111289 848761  8180/7861/338   25305/3177    47  297   26.30)
(smt.stats   66   9515 112407 853447  8242/7995/338   25875/3178    47  297   26.30)
(smt.stats   67   9626 115060 890253  8310/8056/338   26133/3178    47  297   26.40)
(smt.stats   68   9748 116994 917319  8366/8114/338   26447/3179    47  297   26.40)
(smt.stats   69   9882 118727 945558  8419/8164/339   26878/3493    48  301   26.40)
ramon: poll                 wall=10.000s usage=9.908s mem=27876KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 1815)
(smt.stats   70  10029 121601 975599  8525/8233/339   25656/3494    48  301   26.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10190 124855 994965  8677/8354/340   25977/3669    49  307   26.59)
(smt.stats   72  10367 127210 1031284  8809/8512/340   26305/3669    49  307   26.59)
(smt.stats   73  10561 129854 1074807  8862/8636/340   27204/3670    49  307   26.68)
ramon: poll                 wall=11.000s usage=10.907s mem=28220KiB load=1.00 rootload=1.00
(smt.stats   74  10774 133279 1104884  8980/8671/340   27687/3671    49  307   26.78)
(smt.stats   75  11008 138383 1158289  9103/8805/340   28392/3672    49  307   26.97)
(smt.stats   76  11265 144100 1209792  9284/8922/341   28879/4004    50  313   27.06)
ramon: poll                 wall=12.000s usage=11.907s mem=28440KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11547 148794 1246431  9335/9104/341   30277/4004    50  313   27.06)
(smt.stats   78  11648 149172 1259504  9360/9140/341   30445/4004    50  313   27.16)
(smt.stats   79  11759 149487 1270791  9417/9164/341   30588/4004    50  313   27.16)
(smt.stats   80  11881 150328 1305682  9433/9216/341   30887/4004    50  313   27.25)
(smt.stats   81  12015 152137 1326058  9434/9229/341   31970/4004    50  313   27.25)
(smt.stats   82  12162 154384 1341576  9454/9233/341   32375/4004    50  313   27.35)
ramon: poll                 wall=13.000s usage=12.907s mem=28940KiB load=1.00 rootload=1.00
(smt.stats   83  12323 156225 1350036  9604/9270/341   33154/4008    50  313   27.54)
(smt.stats   84  12500 159102 1387837  9798/9450/341   33785/4010    50  313   27.64)
(smt.stats   85  12694 164207 1439272  9875/9643/341   35020/4010    50  313   27.73)
ramon: poll                 wall=14.000s usage=13.907s mem=29476KiB load=1.00 rootload=1.00
(smt.stats   86  12907 166443 1506793  9919/9670/341   35641/4012    50  313   27.83)
(smt.stats   87  13141 169176 1542782  9932/9716/341   36404/4012    50  313   27.83)
(smt.stats   88  13398 171539 1605066  9935/9723/341   37576/4012    50  313   27.92)
(smt.stats   89  13680 175746 1674950  9976/9728/341   38807/4012    50  313   28.02)
ramon: poll                 wall=15.000s usage=14.907s mem=29740KiB load=1.00 rootload=1.00
(smt.stats   90  13990 178474 1691296 10194/9765/341   40139/4017    50  313   28.31)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   91  14091 180807 1705036 10228/10016/341   40482/4017    50  313   28.31)
ramon: poll                 wall=16.000s usage=15.906s mem=29904KiB load=1.00 rootload=1.00
(smt.stats   92  14202 183169 1744735 10243/10017/341   40939/4017    50  313   28.31)
(smt.stats   93  14324 184150 1758107 10261/10043/341   41259/4017    50  313   28.52)
(smt.stats   94  14458 186487 1789701 10277/10055/341   41564/4017    50  313   28.52)
(smt.stats   95  14605 187695 1816998 10299/10081/341   41756/4019    50  313   28.52)
(smt.stats   96  14766 190478 1842774 10312/10092/341   42327/4019    50  313   28.62)
(smt.stats   97  14943 192231 1898390 10313/10101/341   42586/4019    50  313   28.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=17.000s usage=16.906s mem=30200KiB load=1.00 rootload=1.00
(smt.stats   98  15137 195123 1953678 10342/10103/341   43785/4019    50  313   28.72)
(smt.stats   99  15350 198374 2016817 10378/10134/341   44566/4019    50  313   28.82)
(smt.stats  100  15584 201020 2062770 10470/10179/341   45377/4019    50  313   29.01)
ramon: poll                 wall=18.000s usage=17.906s mem=30412KiB load=1.00 rootload=1.00
(smt.stats  101  15841 204656 2104521 10528/10269/341   45920/4022    50  313   29.01)
(smt.stats  102  16123 209131 2142324 10603/10341/341   46684/4024    50  313   29.01)
(smt.stats  103  16433 216926 2271089 10644/10409/341   47672/4024    50  313   29.54)
ramon: poll                 wall=19.000s usage=18.905s mem=31004KiB load=1.00 rootload=1.00
(smt.stats  104  16773 223619 2355101 10753/10440/341   48714/4026    50  313   29.74)
(smt.stats  105  16874 225035 2387439 10777/10561/341   49136/4026    50  313   29.74)
(smt.stats  106  16985 226216 2412854 10798/10577/341   49421/4028    50  313   29.74)
(smt.stats  107  17107 227764 2427833 10810/10588/341   49630/4028    50  313   29.74)
ramon: poll                 wall=20.000s usage=19.905s mem=31400KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:21:14 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.986s
ramon: group.utime          19.962s
ramon: group.stime          0.024s
ramon: group.mempeak        31656KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              1.00
