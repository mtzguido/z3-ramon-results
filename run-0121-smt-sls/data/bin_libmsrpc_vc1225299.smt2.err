ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:24:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         16758 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1182
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libmsrpc_vc1225299.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1351874
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
tabu (if (and (bvsle bv[4294967295:32] #17191) (not #19511)) (bvadd bv[1:32] (if #17189 bv[0:32] v450651476)) (if (and #9116 #11053) bv[0:32] v450651476))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      38     23       125     10000         0          0           48      211)
(sat.ddfw      33     15   90.7477     20073         0          1          100      341)
(sat.ddfw      26    130   113.449     40040         0          2           99      414)
(sat.ddfw      17     14   108.354     70054         0          3           86      577)
(sat.ddfw      10     41    92.907    110004         0          4           56      721)
(sat.ddfw      10    611   79.3587    160000         0          5           19      782)
(sat.ddfw      10   1025     70.34    220000         1          6           55     1080)
ramon: poll                 wall=1.000s usage=0.999s mem=22812KiB load=1.00 rootload=0.99
(sat.ddfw      10   1025   63.7523    290000         1          7           21     1563)
(sat.ddfw      10   1025    57.647    370014         2          8           49     2053)
(sat.ddfw      10   1025   51.4066    460027         3          9           30     2175)
ramon: poll                 wall=2.000s usage=1.998s mem=22812KiB load=1.00 rootload=1.00
(sat.ddfw       4    845   40.1821    560000         3         10           13     2265)
ramon: poll                 wall=3.000s usage=2.998s mem=22812KiB load=1.00 rootload=1.00
(sat.ddfw       4   1025   35.3434    670024         4         11           51     2804)
(sat.ddfw       4   1025    32.153    790019         5         12           29     3113)
ramon: poll                 wall=4.000s usage=3.998s mem=22812KiB load=1.00 rootload=1.00
(sat.ddfw       4   1025   29.4981    920017         6         13           16     3477)
ramon: poll                 wall=5.000s usage=4.998s mem=22812KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   26.2835   1060029         7         14           33     3829)
ramon: poll                 wall=6.000s usage=5.997s mem=22812KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   24.3083   1210011         7         15           12     4582)
ramon: poll                 wall=7.000s usage=6.997s mem=22812KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   20.8308   1370096         8         16          111     4749)
ramon: poll                 wall=8.000s usage=7.997s mem=22812KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   19.6869   1540033         9         17           11     5363)
ramon: poll                 wall=9.000s usage=8.997s mem=23068KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   18.4774   1720021        10         18           26     5459)
ramon: poll                 wall=10.000s usage=9.996s mem=23068KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   17.4465   1910013        12         19           20     6111)
ramon: poll                 wall=11.000s usage=10.996s mem=23068KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.996s mem=23068KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   16.5356   2110077        13         20           97     7156)
(sat.ddfw       3   1025   16.3461   2320059        14         21           88     8953)
ramon: poll                 wall=13.000s usage=12.996s mem=23068KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.996s mem=23068KiB load=1.00 rootload=1.00
(sat.ddfw       2     77    14.824   2540017        15         22           67    10522)
ramon: poll                 wall=15.000s usage=14.996s mem=22816KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   14.6309   2770000        15         23           16    12174)
ramon: poll                 wall=16.000s usage=15.996s mem=22816KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   14.3371   3010018        15         24           16    13263)
ramon: poll                 wall=17.000s usage=16.995s mem=22816KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.003s usage=17.999s mem=22816KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.995s mem=22816KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   13.0471   3260000        15         25            2    13681)
ramon: poll                 wall=20.000s usage=19.995s mem=22816KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:24:49 2024
ramon: root.execname        z3
ramon: root.utime           20.000s
ramon: root.stime           0.000s
ramon: group.total          20.000s
ramon: group.utime          20.000s
ramon: group.stime          0.000s
ramon: group.mempeak        23072KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
