ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:59:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40594 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rjiGorJmxw37.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3094485
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 127 := 72057594037927935&127
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 127 := 126 << 56
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 247 := 72057594037927935&247
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 247 := 246 << 56
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&367
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&367
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&368
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&367
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&368
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 1152921504606846976 := 366 << 56
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 17293822569102704640 := 486 << 56
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 1152921504606846976 := 1086 << 56
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&432345564227567616
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 603 << 57
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&432345564227567616
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 603 << 57
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&1008806316530991104
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 1 := 903 << 57
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927935 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927934 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927932 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927928 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927920 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927904 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927872 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927808 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927680 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927832 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927828 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927824 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 72057594037927808 := 72057594037927935&1008806316530991104
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 72057594037927935&1008806316530991104
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 126 := 1023 << 57
(smt.stats    0    101   3415    691  1390/1246/153      93/14     9   34   19.74)
(smt.stats    1    202   5708   2155  2678/2424/155     189/22    10   35   19.84)
(smt.stats    2    313   6701   3321  2808/2436/156     311/30    11   36   19.96)
(smt.stats    3    414   8087   5402  2905/2649/161     411/46    14   44   20.06)
(smt.stats    4    525  10957   6964  2954/2683/168     475/52    19   64   20.06)
(smt.stats    5    647  14802   9151  3124/2705/168     610/64    19   64   20.06)
ramon: poll                 wall=1.001s usage=0.932s mem=21304KiB load=0.93 rootload=0.92
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16089  11741  3264/2879/168     720/73    19   64   20.19)
(smt.stats    7    859  16626  12815  3353/3024/168     833/83    19   64   20.38)
(smt.stats    8    981  18222  15445  3723/3465/170    1064/146    20   64   20.38)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081121
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081152
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081122
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081122
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081920
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081920
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840082432
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840082432
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840082944
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081408
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840081920
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840082432
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840088576
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840087776
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840087552
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840083968
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084480
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084138
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084136
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840083968
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084480
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840084480
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1536 := 576460752303423487&171136785840080384
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1408 := 576460752303423487&108086391056893100
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1408 := 576460752303423487&99079191802148012
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1444 := 576460752303423487&99079191802148012
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1444 := 576460752303423487&99079191802148064
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1408 := 576460752303423487&99079191802148032
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1408 := 576460752303423487&99079191802148032
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1472 := 576460752303423487&99079191802148032
(smt.stats    9   1115  20659  18550  3885/3575/271    1258/248    22   85   20.69)
(smt.stats   10   1216  20982  19136  4078/3640/296    1483/251    22   85   20.81)
(smt.stats   11   1327  22692  26505  4388/3957/296    1815/252    22   85   21.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  28818  33996  4450/4161/296    2031/321    23   90   21.13)
(smt.stats   13   1583  33352  41616  4528/4255/300    2368/476    26  100   21.13)
(smt.stats   14   1730  38528  52982  4654/4299/301    2642/586    27  100   21.45)
ramon: poll                 wall=2.000s usage=1.928s mem=23028KiB load=1.00 rootload=1.00
(smt.stats   15   1831  41112  68940  4834/4398/301    3064/591    27  100   21.45)
(smt.stats   16   1942  42844  78087  5169/4906/305    3431/737    28  108   21.58)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1 := 3&108086391056941448
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&108086391056941448
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 108086391056941448 := 114 << 2
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&108086391056941448
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 108086391056941448 := 114 << 2
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&108086391056941448
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 108086391056941448 := 114 << 2
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 392 := 114 << 2
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 392 := 114 << 2
(smt.stats   17   2065  47325  86123  5255/4991/312    3794/803    29  120   21.72)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 4 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 4 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 4 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 2 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
shl: (shl[60] (bv2int %0) (+ 60 (* 1152921504606846975 #104))) 2 := 57 << 3
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 3 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 3&456
band: (band[60] (if (= #108 59) 0 (if #631 1 #799)) (shl[60] (bv2int %0) (+ 60 #802))) 1 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 1 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 2 := 3&456
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 2 := 3&456
(smt.stats   18   2199  53937  91314  5351/5048/350    4086/997    30  135   22.01)
(smt.stats   19   2346  61109  98891  5409/5097/350    4423/998    30  135   22.01)
(smt.stats   20   2507  68905 110980  5533/5252/352    4758/1160    32  138   22.11)
(smt.stats   21   2608  74545 125039  5608/5315/355    4892/1225    33  146   22.21)
(smt.stats   22   2719  80993 145789  5620/5318/357    5092/1229    35  158   22.45)
(smt.stats   23   2841  84297 152464  5789/5426/359    5369/1237    35  158   22.55)
ramon: poll                 wall=3.000s usage=2.928s mem=24052KiB load=1.00 rootload=1.00
(smt.stats   24   2975  89788 169642  5836/5501/359    6074/1357    36  166   22.74)
(smt.stats   25   3122  94878 188614  6024/5568/360    6493/1517    37  168   23.05)
ramon: poll                 wall=4.000s usage=3.928s mem=24564KiB load=1.00 rootload=1.00
(smt.stats   26   3283  99237 205996  6361/5783/360    6900/1526    37  168   23.05)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3460 103159 230038  6514/6150/362    7526/1689    38  170   23.19)
(smt.stats   28   3561 108451 248596  6558/6257/363    7753/1775    39  257   23.28)
(smt.stats   29   3672 113853 272322  6558/6261/364    8090/1920    40  267   23.46)
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 4 := 288230376151711743&180143985094871042
(smt.stats   30   3794 116452 284971  6796/6262/364    8448/1928    40  267   23.55)
(smt.stats   31   3928 120358 314565  7059/6557/364    9126/1931    40  267   23.65)
(smt.stats   32   4075 126027 339571  7084/6788/372    9624/2360    41  278   23.76)
(smt.stats   33   4236 134976 370542  7089/6793/372    9882/2360    41  278   23.76)
ramon: poll                 wall=5.000s usage=4.927s mem=25332KiB load=1.00 rootload=0.99
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 1&684547143360353802
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 684547143360353802 := 171136785840079436 << 1
band: (band[60] (if (= #418 63) 0 (if #610 1 #874)) (shl[64] (* 2 #102) (mod #889 64))) 0 := 1&684547143360345610
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 59 #881 #885) 64)) 4143311657180886538 := 171136785840079436 << 1
(smt.stats   34   4413 139844 391031  7290/6814/373   10860/2576    42  278   23.96)
(smt.stats   35   4607 146224 426198  7350/7022/380   11671/2772    43  281   24.05)
(smt.stats   36   4708 148998 436661  7487/7090/380   12021/2794    44  303   24.27)
(smt.stats   37   4819 150989 444639  7645/7189/380   12258/2797    44  303   24.47)
(smt.stats   38   4941 154480 476192  7831/7523/382   13006/2875    45  305   24.57)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=6.000s usage=5.927s mem=26356KiB load=1.00 rootload=1.00
(smt.stats   39   5075 161584 495032  7911/7531/382   13318/2882    45  305   24.81)
(smt.stats   40   5222 167231 512721  8063/7627/384   13579/3095    46  312   24.81)
ramon: poll                 wall=7.000s usage=6.927s mem=26356KiB load=1.00 rootload=1.00
(smt.stats   41   5383 175473 538576  8210/7795/390   13797/3180    47  323   24.90)
(smt.stats   42   5560 180772 559936  8293/7971/391   14387/3200    48  326   25.00)
(smt.stats   43   5754 187342 581942  8392/8002/391   15315/3201    48  326   25.09)
ramon: poll                 wall=8.000s usage=7.927s mem=26612KiB load=1.00 rootload=1.00
(smt.stats   44   5967 193724 621310  8502/8193/395   16134/3504    49  333   25.19)
(smt.stats   45   6068 197032 628358  8582/8206/396   16285/3505    49  333   25.19)
(smt.stats   46   6179 201643 648487  8672/8315/396   16553/3510    49  333   25.19)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6301 205795 662964  8736/8373/396   16939/3624    50  342   25.35)
ramon: poll                 wall=9.000s usage=8.927s mem=27124KiB load=1.00 rootload=1.00
(smt.stats   48   6435 209969 686795  8905/8464/396   17273/3628    50  342   25.57)
(smt.stats   49   6582 216172 726730  8930/8617/396   17672/3628    50  342   25.67)
(smt.stats   50   6743 221861 756450  9054/8630/397   18461/3834    51  344   25.86)
ramon: poll                 wall=10.000s usage=9.927s mem=27380KiB load=1.00 rootload=1.00
(smt.stats   51   6920 227260 774617  9424/8778/398   18937/3843    51  344   25.86)
(smt.stats   52   7114 230844 786698  9491/9142/398   19376/3969    52  346   25.96)
(smt.stats   53   7327 233098 811176  9508/9201/403   19646/4037    53  353   25.96)
ramon: poll                 wall=11.000s usage=10.927s mem=27636KiB load=1.00 rootload=1.00
(smt.stats   54   7561 239497 847145  9696/9211/403   20560/4045    53  353   26.16)
(smt.stats   55   7662 244711 863898  9796/9401/403   21009/4134    54  366   26.27)
ramon: poll                 wall=12.000s usage=11.927s mem=27892KiB load=1.00 rootload=1.00
(smt.stats   56   7773 249241 881073 10070/9558/403   21419/4139    54  366   26.37)
ramon: poll                 wall=13.000s usage=12.927s mem=28148KiB load=1.00 rootload=1.00
(smt.stats   57   7895 252906 892036 10206/9780/403   21998/4144    54  366   26.46)
(smt.stats   58   8029 254476 912631 10287/9980/403   22671/4144    54  366   26.46)
(smt.stats   59   8176 256206 933428 10297/9981/403   22882/4144    54  366   26.46)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   60   8337 260316 959121 10381/10001/403   23723/4147    54  366   26.70)
(smt.stats   61   8514 263495 983285 10555/10125/404   24425/4568    55  369   26.70)
ramon: poll                 wall=14.000s usage=13.927s mem=28404KiB load=1.00 rootload=1.00
(smt.stats   62   8708 269588 1020558 10697/10257/405   24949/4572    55  369   26.80)
(smt.stats   63   8921 278447 1076671 10945/10461/406   25902/4676    56  377   27.00)
ramon: poll                 wall=15.000s usage=14.926s mem=28976KiB load=1.00 rootload=1.00
(smt.stats   64   9155 286614 1109256 11193/10650/406   26494/4877    57  377   27.38)
ramon: poll                 wall=16.000s usage=15.926s mem=29232KiB load=1.00 rootload=1.00
(smt.stats   65   9412 295019 1137908 11665/10977/406   27133/4879    57  377   27.48)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   66   9513 297846 1153715 11755/11387/406   27759/4883    57  377   27.67)
(smt.stats   67   9624 301029 1161156 12073/11540/406   27937/4889    57  377   27.86)
ramon: poll                 wall=17.000s usage=16.926s mem=29488KiB load=1.00 rootload=1.00
(smt.stats   68   9746 304590 1183700 12327/11803/406   28198/4893    57  377   27.96)
(smt.stats   69   9880 309606 1198716 12571/12093/406   28429/4900    57  377   28.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 707)
(smt.stats   70  10027 314591 1229825 12669/12344/407   28317/5233    58  379   28.06)
ramon: poll                 wall=18.000s usage=17.926s mem=29744KiB load=1.00 rootload=1.00
(smt.stats   71  10188 322852 1295327 12781/12349/407   28722/5235    58  379   28.26)
(smt.stats   72  10365 331090 1321394 12938/12510/407   29474/5236    58  379   28.36)
ramon: poll                 wall=19.000s usage=18.925s mem=30000KiB load=1.00 rootload=0.99
(smt.stats   73  10559 337074 1342811 13107/12694/407   30288/5239    58  379   28.46)
(smt.stats   74  10772 349873 1369452 13300/12837/407   30863/5248    58  379   28.55)
ramon: poll                 wall=20.000s usage=19.925s mem=30256KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:59:56 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.003s
ramon: group.utime          19.987s
ramon: group.stime          0.016s
ramon: group.mempeak        30256KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.00
