ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:58:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28996 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1379
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/CrR4hGopirdV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             694724
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    101.01     10000        49          0            1        2)
(smt.stats    0    101   1080   1285  1007/891/97      95/14     4   15   51.76)
(sat.ddfw       1      1   51.2872     20001        98          1            1        3)
(smt.stats    1    202   2026   2370  1322/1191/108     170/26     8   38   51.86)
(smt.stats    2    313   2629   4906  1432/1275/115     279/35    10   41   51.96)
(sat.ddfw       1      1   51.4139     40001       196          2            1        5)
(smt.stats    3    414   3342   5963  1521/1335/115     400/37    10   41   52.15)
(smt.stats    4    525   4396   8029  1687/1527/126     479/58    12   77   52.15)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 10 := 11&10
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 11 := 34359738349 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 0&10
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 0 := 34359738349 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738350 := 34359738349 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738350 := 34359738349 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 10 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 9 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 8 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738350 := 34359738349 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 366 := 34359738349 << 34
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 7 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 6 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 4 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 10 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 8 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 4 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 1 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 2 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 4 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 1 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 2 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 4 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 8 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 3 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 3 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 2 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 1 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 2 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 1 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 2 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 2 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 2 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 4 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 8 := 17179869184&10
(smt.stats    5    647   6994  10442  1761/1597/210     597/77    15  104   52.44)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 8&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 8 := 34359738347 << 32
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 15&2
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 15&2
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 5&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 5 := 34359738347 << 32
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 8&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 8 := 34359738347 << 32
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 3&2
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 2 := 3&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 3 := 34359738347 << 32
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 1 := 34359738347 << 32
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 1 := 34359738347 << 32
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 2 := 12884901888&2
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 12884901888&2
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738347 := 34359738347 << 32
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 12884901888&2
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 17179869185 := 34359738347 << 32
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 12884901888&2
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 17179869185 := 34359738347 << 32
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748   9536  12503  1830/1618/210     706/87    16  112   52.64)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 1 := 12884901888&2
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 12884901888&2
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 1 := 12884901888&2
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 4 := 4&5
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 34359738372 := 34359738348 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 4 := 4&5
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 4 := 34359738348 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 4 := 4&5
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 4 := 34359738348 << 33
(smt.stats    7    859  12576  15041  1860/1670/230     816/100    17  116   52.73)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 0&5
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 17179869184 := 34359738348 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 0&5
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 17179869188 := 34359738348 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 0&5
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738345 := 34359738348 << 33
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 0&5
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 17179869185 := 34359738348 << 33
(sat.ddfw       1      1   43.8596     70001       343          3            1        8)
(smt.stats    8    981  14589  17872  1916/1751/265     899/105    20  148   52.93)
(smt.stats    9   1115  18163  20882  1967/1788/267    1059/106    20  148   53.02)
ramon: poll                 wall=1.002s usage=1.024s mem=55420KiB load=1.02 rootload=1.01
(smt.stats   10   1216  21679  25032  1999/1814/269    1154/122    22  165   53.23)
(smt.stats   11   1327  27196  30360  2027/1842/269    1289/122    22  165   53.23)
(sat.ddfw       1      1   37.1402    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  30357  35242  2042/1855/269    1426/125    23  168   53.32)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 12884901888&2
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 1 := 12884901888&2
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 12884901888&2
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 1 := 12884901888&2
(smt.stats   13   1583  34350  38668  2058/1861/269    1582/127    23  168   53.45)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 1 := 12884901888&2
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 1 := 12884901888&2
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 2 := 17179869194&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 2 := 17179869194&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 2 := 17179869202&10
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 1494648619026 := 349 << 34
(smt.stats   14   1730  39055  44363  2096/1898/271    1771/152    25  170   53.64)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 8 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 4 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 4 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 8 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 17179869184&10
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #558 #559 #560 #561 #562 #563 #564 #565 #566 #567 #568 #569 #570 #571 #572 #573 ...) 0 (if #588 1 #596))) 8 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 4 := 17179869184&10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 4 := 17179869184&10
(smt.stats   15   1831  41677  47465  2110/1909/276    1901/155    25  170   53.76)
(smt.stats   16   1942  43755  51362  2128/1935/277    2039/161    26  171   53.76)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 1 := 21&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 34359738389 := 346 << 31
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 1 := 21&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 21 := 346 << 31
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 1 := 21&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 21 := 346 << 31
(sat.ddfw       1      1   31.8465    160000       784          5            1       17)
(smt.stats   17   2064  46793  56658  2169/1945/285    2221/168    27  174   53.85)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 21474836480&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 21474836486 := 346 << 31
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 21474836480&1
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 21474836486 := 346 << 31
ramon: poll                 wall=2.002s usage=2.024s mem=56208KiB load=1.00 rootload=1.00
(smt.stats   18   2198  49337  63103  2246/2003/291    2446/190    28  188   54.04)
(sat.ddfw       1      1   27.8298    220001      1078          6            1       23)
(sat.ddfw       1      1   24.6132    290001      1421          7            1       30)
ramon: poll                 wall=3.002s usage=3.023s mem=56276KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   22.5989    370001      1813          8            1       38)
(smt.stats   19   2345  51734  68146  2356/2122/297    2674/203    30  190   54.14)
ramon: poll                 wall=4.000s usage=4.079s mem=56332KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   20.4592    460001      2254          9            1       47)
(smt.stats   20   2506  54195  74727  2438/2227/299    2983/226    31  196   54.23)
(smt.stats   21   2607  55708  77986  2465/2245/299    3135/238    32  197   54.23)
ramon: poll                 wall=5.000s usage=5.075s mem=56456KiB load=1.00 rootload=0.99
(smt.stats   22   2718  58177  83813  2514/2280/299    3295/244    32  197   54.33)
(smt.stats   23   2840  59702  90235  2548/2318/299    3470/245    32  197   54.33)
(sat.ddfw       1      1   19.0876    560001      2745         10            1       57)
(smt.stats   24   2974  62095  96200  2567/2361/299    3681/245    32  197   54.43)
ramon: poll                 wall=6.000s usage=6.320s mem=56768KiB load=1.25 rootload=1.25
(smt.stats   25   3121  63962  99658  2646/2364/299    3884/253    32  197   54.56)
(sat.ddfw       1      1    17.834    670001      3284         11            1       68)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 34359738350&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744039349813230 := 4294967295 << 10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 34359738350&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744039349813230 := 4294967295 << 10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 34359738350&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744039349813230 := 4294967295 << 10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 34359738351&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744039349813231 := 4294967295 << 10
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 34359738351&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744039349813231 := 4294967295 << 10
(smt.stats   26   3282  66459 104862  2725/2478/299    4071/261    32  197   54.56)
(smt.stats   27   3459  69493 114310  2800/2546/305    4415/327    33  198   54.75)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 8589934609&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744013580009489 := 2147483645 << 20
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 8589934609&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744013580009489 := 2147483645 << 20
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 8589934577&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744047939747825 := 2147483645 << 20
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 2147483649&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744041497296897 := 2147483645 << 20
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 8589934577&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744047939747825 := 2147483645 << 20
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 2147483649&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744041497296897 := 2147483645 << 20
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 2147483649&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #286) 64)) 18446744041497296897 := 2147483645 << 20
(smt.stats   28   3560  70789 122149  2863/2607/306    4557/367    34  200   54.75)
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 34356592640&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738364 := 2147483645 << 20
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 34356592640&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738360 := 2147483645 << 20
band: (band[35] (shl[64] (bv2int %0) (mod #287 64)) (if (or #729 #730 #731 #732 #733 #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 ...) 0 (if #760 1 #850))) 0 := 34356592640&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 34359738360 := 2147483645 << 20
ramon: poll                 wall=7.002s usage=7.347s mem=56932KiB load=1.02 rootload=1.02
(smt.stats   29   3671  72605 127895  2925/2668/312    4718/369    34  200   54.75)
(sat.ddfw       1      1   16.4181    790001      3872         12            1       80)
(smt.stats   30   3793  76392 137312  3010/2726/317    4947/404    35  214   54.94)
ramon: poll                 wall=8.000s usage=8.343s mem=57528KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   15.1515    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=9.343s mem=57536KiB load=1.00 rootload=1.00
(smt.stats   31   3930  78568 143498  3180/2966/319    5161/420    36  214   55.22)
(sat.ddfw       1      1   14.1115   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=10.340s mem=57540KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=11.340s mem=57804KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077  81826 151252  3233/2983/319    5458/425    36  214   55.32)
(sat.ddfw       1      1   13.1973   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=12.340s mem=57660KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.3916   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=13.342s mem=57840KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=14.341s mem=57840KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.6726   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=15.340s mem=57840KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=16.395s mem=57852KiB load=1.06 rootload=1.05
(sat.ddfw       1      1   11.0247   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=17.393s mem=57852KiB load=1.00 rootload=1.00
(smt.stats   33   4238  86906 160266  3399/3066/319    5747/465    37  216   55.41)
(smt.stats   34   4415  94385 174302  3470/3242/320    6208/532    38  216   55.64)
ramon: poll                 wall=18.000s usage=18.395s mem=58180KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.4608   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=19.430s mem=58220KiB load=1.03 rootload=1.03
(smt.stats   35   4609  98680 181224  3605/3267/322    6542/538    38  216   55.83)
ramon: poll                 wall=20.000s usage=20.507s mem=58004KiB load=1.08 rootload=1.08
(sat.ddfw       1      1    10.001   2110001     10343         20            1      214)
ramon: end                  Fri Nov  1 21:58:29 2024
ramon: root.execname        z3
ramon: root.utime           20.560s
ramon: root.stime           0.010s
ramon: group.total          20.587s
ramon: group.utime          20.567s
ramon: group.stime          0.020s
ramon: group.mempeak        58272KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.03
