ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:48:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27784 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/cj4tmKkldhG9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             868860
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   181.818     10000        49          0            1        2)
(sat.ddfw       1      1   86.9652     20001        98          1            1        3)
(smt.stats    0    101   2237   1167   624/558/98     104/17     6   15   51.46)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&44
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 44 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&44
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 44 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&43
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 1 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 1 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 1 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&20
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 20 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 21 := 22 << 2
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 21 := 22 << 2
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 21 := 22 << 2
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 89 := 22 << 2
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&536
(sat.ddfw       1      1   88.1057     40001       196          2            1        5)
(smt.stats    1    202   2895   2449  1125/1022/149     241/31     9   36   51.87)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&216
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&216
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2 := 2&216
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&216
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2 := 2&216
(smt.stats    2    313   4969   8052  1342/1063/149     426/48     9   36   51.97)
(smt.stats    3    414   7063   9885  1452/1322/152     600/71    11   41   52.06)
(sat.ddfw       1      1   75.7576     70001       343          3            1        8)
(smt.stats    4    525   9425  11946  1470/1324/158     843/72    11   41   52.16)
(sat.ddfw       1      1   64.9351    110001       539          4            1       12)
(smt.stats    5    647  10965  13588  1614/1351/158    1009/116    12   54   52.35)
(sat.ddfw       1      1   62.3429    160000       784          5            1       17)
ramon: poll                 wall=1.004s usage=1.083s mem=54524KiB load=1.08 rootload=1.07
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  11711  14430  1884/1635/159    1145/122    13   56   52.45)
(sat.ddfw       1      1   56.5514    220001      1078          6            1       23)
(smt.stats    7    859  13181  17886  2089/1815/159    1331/124    13   56   52.54)
(sat.ddfw       1      1   52.7506    290001      1421          7            1       30)
(smt.stats    8    981  14786  22023  2176/2034/162    1694/142    14   63   52.54)
(smt.stats    9   1115  16559  26770  2209/2057/163    2063/166    15   64   52.64)
(smt.stats   10   1216  17884  32407  2335/2109/165    2264/233    16   66   52.73)
(sat.ddfw       1      1   45.2489    370001      1813          8            1       38)
(smt.stats   11   1327  19407  38456  2379/2211/165    2526/256    17   79   52.83)
(smt.stats   12   1449  20987  43533  2406/2255/165    2835/259    17   79   52.97)
(smt.stats   13   1583  22130  48507  2445/2283/165    3022/260    17   79   52.97)
ramon: poll                 wall=2.000s usage=2.347s mem=55244KiB load=1.27 rootload=1.26
(smt.stats   14   1730  23366  54590  2453/2318/168    3359/407    18   84   52.97)
(smt.stats   15   1831  25022  59732  2461/2320/168    3506/407    18   84   52.97)
(sat.ddfw       1      1   42.0757    460001      2254          9            1       47)
(smt.stats   16   1942  26518  65358  2465/2330/168    3701/456    19   88   53.06)
(smt.stats   17   2064  27457  70876  2465/2330/170    3971/466    20   90   53.06)
(smt.stats   18   2198  29271  77279  2472/2333/170    4183/466    20   90   53.16)
(sat.ddfw       1      1   39.3236    560001      2745         10            1       57)
(smt.stats   19   2345  31773  88081  2480/2345/170    4368/466    20   90   53.26)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 8388608&8390160
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 8388608&8390160
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 8388608&8390160
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8388608 := 8388608&8390160
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8390160 := 8390160 << 23
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8388608 := 8388608&8390160
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8390160 := 8390160 << 23
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8388608 := 8388608&8390161
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8390161 := 8390160 << 23
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8388608 := 8388608&16777213
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 16777213 := 8390160 << 23
(smt.stats   20   2506  33206  94795  2534/2395/196    4716/491    21   93   53.35)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&4195385
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097148 := 2097152&4195385
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 304 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 320 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 384 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 512 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1024 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 304 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 320 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 384 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 512 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1024 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4096 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8192 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 16384 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 32768 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 65536 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 131072 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1048576 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1048576 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4608 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4608 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4608 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 5120 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 6144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 20480 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 16384 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 65536 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 131072 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 65536 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 16384 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1048576 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1048576 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195385
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195385
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&6292233
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 6292233 := 8389828 << 21
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&6292233
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 6292233 := 8389828 << 21
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   21   2607  34640 100488  2716/2561/345    4908/541    22  135   53.84)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 128 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 128 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&10486017
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 10486017 := 8389854 << 8
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&16776957
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&8388605
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8388605 := 8389854 << 8
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&8388605
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8388605 := 8389854 << 8
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 512&6291457
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 6291457 := 8389852 << 9
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 512&2097153
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 2097153 := 8389852 << 9
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 512&2097153
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 2097153 := 8389852 << 9
(smt.stats   22   2718  36787 107156  2798/2646/366    5336/681    23  147   54.03)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2048&2097153
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2048&2099201
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 2099201 := 8389848 << 11
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2048&2539777
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2048&2541825
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 2541825 := 8389848 << 11
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1024 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1024 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539524 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539524 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539524 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539525 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539525 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2046 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2045 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 256 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 512 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2044 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2040 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 256 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 112 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 112 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 96 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 64 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 32 := 2048&2539520
(smt.stats   23   2840  39131 113345  2950/2754/424    5624/690    23  147   54.33)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 32 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 16 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1 := 2048&2539520
ramon: poll                 wall=3.004s usage=3.422s mem=56784KiB load=1.07 rootload=1.08
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 12 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 40 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 32 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 32 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 64 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 64 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 64 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 128 := 2048&2539520
(smt.stats   24   2974  41599 124736  3063/2895/493    6159/742    24  191   54.82)
(sat.ddfw       1      1    34.965    670001      3284         11            1       68)
(smt.stats   25   3121  46316 134871  3183/2908/494    6820/746    24  191   55.01)
(sat.ddfw       1      1   33.6606    790001      3872         12            1       80)
ramon: poll                 wall=4.000s usage=4.565s mem=57392KiB load=1.15 rootload=1.14
(smt.stats   26   3282  49557 140147  3393/3052/494    7063/949    25  203   55.20)
(sat.ddfw       1      1   31.5381    920001      4509         13            1       93)
(smt.stats   27   3461  54809 155609  3623/3454/512    7755/1097    26  214   55.30)
(smt.stats   28   3562  57683 162263  3797/3604/516    8077/1101    26  214   55.49)
ramon: poll                 wall=5.000s usage=5.545s mem=57892KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   27.9609   1060001      5196         14            1      108)
(smt.stats   29   3673  59634 167218  3962/3607/517    8202/1192    27  270   55.59)
(smt.stats   30   3795  60265 168778  4227/3836/517    8380/1194    27  270   55.78)
(sat.ddfw       1      1   25.7954   1210001      5931         15            1      123)
ramon: poll                 wall=6.000s usage=6.544s mem=58060KiB load=1.00 rootload=1.00
(smt.stats   31   3929  60899 171240  4786/4259/517    8686/1195    27  270   55.87)
(sat.ddfw       1      1   23.8273   1370001      6715         16            1      139)
(smt.stats   32   4076  65654 185893  4833/4632/519    9548/1369    28  278   56.16)
ramon: poll                 wall=7.004s usage=7.507s mem=58792KiB load=0.96 rootload=0.96
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4237  71060 207860  4968/4650/519   10039/1374    28  278   56.25)
(sat.ddfw       1      1   21.8988   1540001      7549         17            1      156)
ramon: poll                 wall=8.000s usage=8.440s mem=58800KiB load=0.94 rootload=0.93
(smt.stats   34   4414  77642 231233  5186/4990/521   11273/1546    29  284   56.44)
(smt.stats   35   4608  84818 250611  5212/5014/527   11991/1546    29  284   56.64)
(sat.ddfw       1      1   20.5245   1720001      8431         18            1      174)
(smt.stats   36   4709  87284 258510  5321/5056/528   12324/1914    30  312   56.74)
ramon: poll                 wall=9.000s usage=9.366s mem=58980KiB load=0.93 rootload=0.93
(smt.stats   37   4820  89113 269243  5426/5150/533   12955/1914    30  312   57.12)
(sat.ddfw       1      1   19.2542   1910001      9362         19            1      193)
ramon: poll                 wall=10.000s usage=10.286s mem=59500KiB load=0.92 rootload=0.91
(smt.stats   38   4942  90117 273542  5726/5242/533   13260/1916    30  312   57.22)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5076  93636 284217  5770/5548/540   13845/1916    30  312   57.42)
ramon: poll                 wall=11.000s usage=11.193s mem=59572KiB load=0.91 rootload=0.91
(sat.ddfw       1      1   18.2066   2110001     10343         20            1      214)
(smt.stats   40   5223  97419 295279  5883/5590/540   14065/2183    31  350   57.52)
ramon: poll                 wall=12.000s usage=12.230s mem=59676KiB load=1.04 rootload=1.04
(smt.stats   41   5384 100350 316223  6052/5713/540   14721/2185    31  350   57.62)
(sat.ddfw       1      1   17.3582   2320001     11372         21            1      235)
(smt.stats   42   5561 103799 331652  6147/5899/540   15491/2194    31  350   57.71)
ramon: poll                 wall=13.004s usage=13.230s mem=59960KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.5426   2540001     12451         22            1      257)
(smt.stats   43   5755 107642 343747  6396/6029/540   16016/2200    31  350   57.81)
ramon: poll                 wall=14.000s usage=14.218s mem=60308KiB load=0.99 rootload=0.98
(smt.stats   44   5968 110998 353767  6744/6298/540   16402/2212    31  350   58.00)
(smt.stats   45   6069 114394 364128  6837/6629/540   16877/2212    31  350   58.00)
(sat.ddfw       1      1   15.8043   2770001     13578         23            1      280)
(smt.stats   46   6180 117804 379550  6927/6643/540   17163/2214    31  350   58.09)
ramon: poll                 wall=15.000s usage=15.345s mem=60404KiB load=1.13 rootload=1.13
(smt.stats   47   6302 119914 387999  7028/6741/540   17440/2227    31  350   58.19)
(sat.ddfw       1      1   15.1086   3010001     14754         24            1      305)
ramon: poll                 wall=16.000s usage=16.285s mem=60552KiB load=0.94 rootload=0.94
(smt.stats   48   6436 122377 400980  7186/6908/540   17938/2228    31  350   58.28)
(smt.stats   49   6583 125477 411111  7209/7012/541   18507/2601    32  354   58.58)
(smt.stats   50   6744 130231 439632  7235/7030/541   19392/2601    32  354   58.68)
ramon: poll                 wall=17.000s usage=17.277s mem=61104KiB load=0.99 rootload=0.99
(smt.stats   51   6921 134231 463012  7379/7183/546   20170/2776    33  367   58.77)
(sat.ddfw       1      1   14.4509   3260001     15980         25            1      330)
(smt.stats   52   7115 138438 479570  7479/7184/546   20680/2780    33  367   59.19)
ramon: poll                 wall=18.000s usage=18.196s mem=61308KiB load=0.92 rootload=0.92
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7328 142000 516545  7683/7377/546   21316/2783    33  367   59.29)
(sat.ddfw       1      1   13.8291   3520001     17254         26            1      356)
ramon: poll                 wall=19.000s usage=19.136s mem=61416KiB load=0.94 rootload=0.94
(smt.stats   54   7562 148457 532274  7915/7493/546   21816/2937    34  383   59.29)
(smt.stats   55   7663 151420 546930  8125/7874/546   22279/2938    34  383   59.38)
(smt.stats   56   7774 153056 557608  8324/7954/546   22658/2951    34  383   59.48)
ramon: poll                 wall=20.004s usage=20.102s mem=61596KiB load=0.96 rootload=0.97
ramon: end                  Fri Nov  1 22:49:11 2024
ramon: root.execname        z3
ramon: root.utime           20.140s
ramon: root.stime           0.020s
ramon: group.total          20.164s
ramon: group.utime          20.144s
ramon: group.stime          0.020s
ramon: group.mempeak        61860KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
