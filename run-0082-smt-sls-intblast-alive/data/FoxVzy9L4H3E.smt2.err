ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:04:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28746 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FoxVzy9L4H3E.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             718003
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   95.2381     10000        49          0            1        2)
(sat.ddfw       1      1    49.266     20001        98          1            1        3)
(smt.stats    0    101   3593    273  1157/1048/110     100/19     6   17   52.05)
(sat.ddfw       1      1   48.8998     40001       196          2            1        5)
(sat.ddfw       1      1   42.0757     70001       343          3            1        8)
(smt.stats    1    202   4001    533  1583/1397/110     202/20     6   17   52.24)
(smt.stats    2    313   6500   1598  1854/1706/112     339/39     7   22   52.24)
(smt.stats    3    414  10141   6611  1960/1799/117     447/46     9   24   52.46)
ramon: poll                 wall=1.000s usage=0.976s mem=54624KiB load=0.98 rootload=0.97
(smt.stats    4    525  12005   7836  2191/1977/120     589/109    11   29   52.46)
(smt.stats    5    647  12379  11116  2625/2126/120     711/163    11   29   52.66)
(sat.ddfw       1      1   35.8423    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  13433  12523  2684/2422/121     842/177    12   30   52.66)
(smt.stats    7    859  14710  15088  2707/2475/122    1020/198    13   33   52.76)
(smt.stats    8    981  15669  17158  2746/2510/123    1170/236    14   34   52.76)
(smt.stats    9   1115  17493  19761  2755/2537/123    1306/236    14   34   52.76)
(smt.stats   10   1216  18995  22946  2799/2577/124    1420/266    15   34   52.85)
(sat.ddfw       1      1   30.8826    160000       784          5            1       17)
(smt.stats   11   1327  20750  27093  2808/2592/125    1530/268    16   37   52.85)
(smt.stats   12   1449  24119  30468  2812/2596/126    1646/271    17   38   52.85)
(smt.stats   13   1583  27426  34154  2824/2599/126    1783/272    17   38   52.99)
ramon: poll                 wall=2.000s usage=1.978s mem=55316KiB load=1.00 rootload=1.00
(smt.stats   14   1730  29528  38620  2871/2613/126    1938/272    17   38   52.99)
(smt.stats   15   1831  30127  41942  2873/2657/126    2040/272    17   38   52.99)
(smt.stats   16   1942  31603  44516  2873/2657/126    2160/272    17   38   52.99)
(smt.stats   17   2064  32794  50005  2876/2660/127    2277/292    18   39   52.99)
(smt.stats   18   2198  34547  53897  2889/2671/127    2410/292    18   39   53.09)
(smt.stats   19   2345  36067  58325  2891/2671/127    2558/292    18   39   53.21)
(sat.ddfw       1      1   26.4905    220001      1078          6            1       23)
(smt.stats   20   2506  37532  63809  2897/2676/127    2731/292    18   39   53.21)
(smt.stats   21   2607  38226  66396  2906/2681/127    2832/292    18   39   53.21)
(smt.stats   22   2718  38866  69693  2912/2689/127    2943/293    18   39   53.21)
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #803 #807) 64)) 8796093022209 := 2 << 39
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #803 #807) 64)) 8796093022209 := 2 << 39
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 0 := 16777525 << 40
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #803 #807) 64)) 339749092982784 := 33555050 << 39
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 0 := 16777525 << 40
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&4398046511103
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&4398046511103
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&4398046511103
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&4398046511103
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&4398046511103
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #803 #807) 64)) 334251534843905 := 8 << 39
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 0 := 13 << 40
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #110))) 0 := 17 << 40
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&4398046511103
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 660828284694 := 660828284694&4398046511103
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #803 #807) 64)) 13194139533311 := 24 << 39
(smt.stats   23   2840  39560  72127  2997/2746/144    3063/311    19   43   53.31)
(smt.stats   24   2974  40788  75400  3076/2820/144    3209/311    19   43   53.31)
(smt.stats   25   3121  42475  79234  3106/2864/144    3358/311    19   43   53.42)
ramon: poll                 wall=3.000s usage=2.956s mem=55700KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   23.6566    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   26   3282  46239  82245  3163/2882/145    3525/319    20   45   53.52)
(smt.stats   27   3459  48304  87818  3260/3006/145    3715/319    20   45   53.52)
(smt.stats   28   3560  49505  91418  3265/3041/145    3834/319    20   45   53.52)
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #803 #807) 64)) 343047627866113 := 0 << 39
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 1 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 2 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 660828284692 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 660828284688 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 660828284672 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 660828284640 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 2 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 4 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 8 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 16 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 32 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 64 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 128 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 512 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 1024 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 2048 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 4096 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 8192 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 16384 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 32768 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 65536 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 65536 := 660828284694&1099511627776
(smt.stats   29   3671  50456  95335  3442/3064/145    3958/323    20   45   54.12)
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 0 := 660828284694&1099511627776
band: (band[42] (if (= #114 41) 1 (if #588 2 #703)) (shl[42] (bv2int %1) (+ 42 #706))) 320 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 660828284694 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 660828284692 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 660828284681 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 8 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 16 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 16 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 32 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 64 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 128 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 256 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 256 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 549755813888 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 512 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1024 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 2048 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 4096 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 8192 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 16384 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 32768 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 65536 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 131072 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 262144 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 524288 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1048576 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 2097152 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 4194304 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 8388608 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 16777216 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 33554432 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 67108864 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 134217728 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 268435456 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 134217728 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 268435456 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 273154048 := 660828284694&1099511627776
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 273678336 := 660828284694&1099511627776
(smt.stats   30   3793  51506  97678  3559/3281/385    4156/362    21   65   54.89)
(sat.ddfw       1      1   21.2709    370001      1813          8            1       38)
(smt.stats   31   3927  52919 102921  4004/3743/394    4599/362    21   65   54.89)
ramon: poll                 wall=4.000s usage=3.955s mem=57196KiB load=1.00 rootload=0.99
(smt.stats   32   4074  56427 111063  4003/3771/402    5055/456    22  106   55.22)
(smt.stats   33   4235  58460 117357  4314/3776/404    5375/848    23  138   55.31)
(smt.stats   34   4412  60356 129036  4928/4695/407    6115/976    24  146   55.41)
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154306 := 165207071173&3298534883329
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154306 := 165207071173&3298534883330
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154320 := 165207071173&3298534883330
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154306 := 165207071173&3298534883329
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154306 := 165207071173&3298534883330
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154320 := 165207071173&3298534883330
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154320 := 165207071173&3298534883329
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154320 := 165207071173&3298534883330
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154320 := 165207071173&3298534883329
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154320 := 165207071173&3298534883330
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154370 := 165207071173&3298534883329
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154370 := 165207071173&3298534883330
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298534883329
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298534883330
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298534883392
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298534883329
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298534883329
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298534883456
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298534883520
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298534948928
(smt.stats   35   4606  66146 152339  5053/4805/427    6855/1631    25  161   55.78)
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535342336
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535342400
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535342528
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535342272
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535342272
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535342272
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535342272
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535407808
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535473344
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535473344
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535538644
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535538624
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535538368
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535535296
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535534292
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535524544
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535530688
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535524544
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535530688
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535524032
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535515840
(sat.ddfw       1      1   19.3507    460001      2254          9            1       47)
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535524032
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535518400
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 671154368 := 165207071173&3298535473344
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1074364420 := 165207071173&3298535473344
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1074364420 := 165207071173&3298535473348
(smt.stats   36   4707  69145 170320  5350/4850/442    7512/1643    25  161   55.98)
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1074298884 := 165207071173&3298535507076
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1074331652 := 165207071173&3298535506948
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1074331652 := 165207071173&3298535505926
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1074331652 := 165207071173&3298535735812
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1074331652 := 165207071173&3298535735812
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1074331652 := 165207071173&3298535743492
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 1074331652 := 165207071173&3298535743492
ramon: poll                 wall=5.000s usage=4.953s mem=58824KiB load=1.00 rootload=1.00
(smt.stats   37   4818  72641 190051  5524/5278/538    8183/1994    27  184   56.56)
(smt.stats   38   4940  76677 210456  5662/5386/539    9346/2005    27  184   56.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 760)
(smt.stats   39   5074  83925 220697  5757/5472/541    9192/2723    28  187   56.77)
(sat.ddfw       1      1   17.7054    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.954s mem=59404KiB load=1.00 rootload=1.00
(smt.stats   40   5221  90072 240897  5926/5566/541    9622/2731    28  187   56.86)
(sat.ddfw       1      1   16.3132    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.951s mem=59308KiB load=1.00 rootload=0.99
(smt.stats   41   5382  94404 249621  6238/5769/541    9923/3192    29  188   57.20)
ramon: poll                 wall=8.009s usage=7.967s mem=59788KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   15.1057    790001      3872         12            1       80)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5559 102868 268501  6442/6201/547   10309/3430    30  196   57.39)
(smt.stats   43   5753 112795 293140  6495/6249/549   10650/3592    31  217   57.48)
ramon: poll                 wall=9.000s usage=8.954s mem=59996KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.0921    920001      4509         13            1       93)
(smt.stats   44   5966 121419 319276  6727/6466/554   11491/3622    33  235   57.77)
(smt.stats   45   6067 124643 337878  6729/6468/556   11698/3743    34  238   57.77)
ramon: poll                 wall=10.000s usage=10.062s mem=60200KiB load=1.11 rootload=1.11
(smt.stats   46   6178 130620 364994  6740/6472/556   11869/3787    35  245   57.86)
(smt.stats   47   6300 138792 390365  6831/6489/556   12169/3791    35  245   58.17)
(sat.ddfw       1      1   13.1864   1060001      5196         14            1      108)
(smt.stats   48   6434 146450 420246  6965/6576/556   13692/3792    35  245   58.36)
ramon: poll                 wall=11.000s usage=11.106s mem=60776KiB load=1.04 rootload=1.04
(smt.stats   49   6581 149719 434788  6981/6720/556   14291/3792    35  245   58.45)
(smt.stats   50   6742 152589 456220  6984/6723/556   14550/3792    35  245   58.45)
(smt.stats   51   6919 162337 517056  7013/6752/556   15053/3792    35  245   58.55)
(sat.ddfw       1      1   12.6082   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=12.225s mem=61100KiB load=1.12 rootload=1.12
(smt.stats   52   7113 168331 530458  7071/6759/556   15317/3797    35  245   58.64)
ramon: poll                 wall=13.000s usage=13.292s mem=61392KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   12.0012   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=14.502s mem=61260KiB load=1.21 rootload=1.21
(smt.stats   53   7327 177896 566495  7421/7160/558   15856/4690    36  255   58.84)
(sat.ddfw       1      1   11.5317   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=15.508s mem=61320KiB load=1.01 rootload=1.00
(smt.stats   54   7561 185362 614681  7633/7372/560   16462/4694    36  255   58.93)
ramon: poll                 wall=16.000s usage=16.508s mem=61376KiB load=1.00 rootload=1.00
(smt.stats   55   7662 192481 665053  7652/7383/561   16522/4824    38  326   58.93)
(smt.stats   56   7773 197205 684889  7741/7404/561   16836/4834    38  326   58.93)
band: (band[42] (if (= #337 63) 1 (if #565 2 #796)) (shl[64] (* 2 #318) (mod #811 64))) 33554432 := 161335030&6441402373
(sat.ddfw       1      1   10.8794   1720001      8431         18            1      174)
(smt.stats   57   7895 201644 711094  7895/7498/561   17115/4838    38  326   59.10)
ramon: poll                 wall=17.000s usage=17.507s mem=61696KiB load=1.00 rootload=1.00
(smt.stats   58   8029 206686 729045  7925/7653/566   17783/5022    39  344   59.10)
(smt.stats   59   8176 214316 757687  8178/7672/566   18611/5035    39  344   59.77)
ramon: poll                 wall=18.009s usage=18.581s mem=62132KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   10.3808   1910001      9362         19            1      193)
ramon: poll                 wall=19.009s usage=19.579s mem=61916KiB load=1.00 rootload=1.00
(smt.stats   60   8337 222450 783292  8441/7919/566   19009/5505    40  374   59.87)
(smt.stats   61   8514 229900 807192  8566/8202/566   20139/5508    40  374   59.96)
ramon: poll                 wall=20.000s usage=20.594s mem=62068KiB load=1.02 rootload=1.03
ramon: end                  Fri Nov  1 22:05:04 2024
ramon: root.execname        z3
ramon: root.utime           20.690s
ramon: root.stime           0.010s
ramon: group.total          20.708s
ramon: group.utime          20.696s
ramon: group.stime          0.012s
ramon: group.mempeak        62328KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.091s
ramon: loadavg              1.03
