ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:45:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42379 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/C3boDM4JIqeX.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2849981
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3818   1627  1089/982/91      95/2     3   13   18.96)
(smt.stats    1    202   5174   3633  1704/1534/91     196/2     3   13   19.05)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 5 := 428087095325&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 5 := 6 << 38
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 428087095325&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 1 := 6 << 38
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 428087095325&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 1 := 6 << 38
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 2 := 6 << 38
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 2 := 90 << 38
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 428087095325&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 1 := 90 << 38
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 2 := 90 << 38
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 2 := 90 << 38
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 428087095325&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 2 := 90 << 38
(smt.stats    2    313   6367   5069  1770/1595/120     292/8     7   20   19.25)
(smt.stats    3    414   8671   6387  1998/1800/120     392/9     7   20   19.25)
(smt.stats    4    525   9686   7135  2027/1822/126     492/15     9   30   19.35)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 4398046511104 := 422 << 40
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 4398046511104 := 422 << 40
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 4398046511104 := 422 << 40
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2199023255551 := 33554389 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2216203124912
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&1116691497136
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&1116691497136
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&32
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&64
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 65970697666560 := 422 << 40
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 33554390 := 33554389 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 4398046511103 := 33554389 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 153931627888640 := 67108862 << 40
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2199023255553 := 8388661 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 2 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 4 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 8 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 16 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381280 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381299 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381299 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381300 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381300 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381300 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381300 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381300 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381300 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381300 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381300 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381296 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1712348381296 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 8 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 32 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 32 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 64 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 128 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 256 := 1712348381301&2199023255552
(smt.stats    5    647  11364   8830  2206/1918/173     619/24    10   37   19.83)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1728 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1728 := 1712348381301&2199023255552
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1712348381301&2199023255552
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 1600 := 1712348381301&2199023255552
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  12447  10694  2295/1991/224     777/31    11   52   20.03)
(smt.stats    7    859  15023  14122  2368/2126/227     918/72    13   56   20.03)
(smt.stats    8    981  16928  16770  2484/2268/229    1034/80    14   63   20.12)
(smt.stats    9   1115  19352  20184  2597/2305/230    1169/85    15   63   20.31)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3424696762603&1
(smt.stats   10   1216  19911  20882  2658/2408/230    1274/85    16   64   20.79)
(smt.stats   11   1327  21020  22613  3040/2708/230    1384/86    16   64   20.79)
ramon: poll                 wall=1.000s usage=0.996s mem=22100KiB load=1.00 rootload=0.98
(smt.stats   12   1449  21485  23101  3105/2878/230    1507/87    16   64   20.89)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   13   1583  24120  27304  3455/3233/238    1627/108    18   82   20.89)
(smt.stats   14   1730  26987  29792  3475/3249/238    1773/109    18   82   20.89)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 3424696762603&175
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 3424696762603&173
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 3424696762603&3
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 3424696762603&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 5 := 4404019200000 << 41
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3424696762603&2
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3424696762603&16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 16 := 4404019200000 << 41
(smt.stats   15   1831  28814  35560  3521/3258/238    1882/113    18   82   20.99)
(smt.stats   16   1942  30602  38735  3587/3314/263    2014/134    19   87   21.18)
(smt.stats   17   2064  33235  42912  3635/3394/263    2156/150    20   87   21.18)
(smt.stats   18   2198  35194  45964  3778/3518/264    2322/173    21   93   21.28)
(smt.stats   19   2345  39288  52582  3883/3555/264    2482/177    21   93   21.28)
ramon: poll                 wall=2.000s usage=1.996s mem=22524KiB load=1.00 rootload=0.99
(smt.stats   20   2506  43208  60673  3960/3721/267    2661/201    22   97   21.37)
(smt.stats   21   2607  49312  67595  3966/3726/267    2833/201    22   97   21.47)
(smt.stats   22   2718  53072  75828  4034/3793/270    3060/304    24  102   21.56)
(smt.stats   23   2840  58098  87298  4079/3807/270    3269/307    24  102   21.56)
(smt.stats   24   2974  62299  96122  4104/3840/270    3541/309    24  102   21.66)
(smt.stats   25   3121  65850 102261  4126/3870/271    3729/412    25  104   21.66)
(smt.stats   26   3282  71362 113338  4146/3887/271    3914/412    25  104   21.75)
(smt.stats   27   3459  75729 123495  4174/3928/274    4136/446    26  115   21.96)
(smt.stats   28   3560  79087 129729  4176/3930/274    4259/446    26  115   21.96)
(smt.stats   29   3671  84074 144653  4179/3933/274    4391/468    27  116   21.96)
ramon: poll                 wall=3.000s usage=2.995s mem=23244KiB load=1.00 rootload=1.00
(smt.stats   30   3793  86242 149733  4284/3934/274    4611/470    27  116   21.96)
(smt.stats   31   3927  88174 155538  4498/4113/274    4819/475    27  116   22.06)
(smt.stats   32   4074  91702 166974  4519/4267/274    5010/477    27  116   22.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   33   4235  94098 173133  4670/4278/274    5264/484    27  116   22.15)
(smt.stats   34   4412  99332 196849  4741/4458/274    5568/485    27  116   22.25)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3&2199023255536
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 6597069766640 := 33554552 << 1
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3&2199023255536
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 6597069766640 := 33554552 << 1
(smt.stats   35   4606 101999 208569  4859/4519/280    5846/605    28  118   22.34)
(smt.stats   36   4707 103887 218481  4929/4679/281    5965/627    29  133   22.34)
(smt.stats   37   4818 107838 229519  4938/4688/281    6125/627    29  133   22.34)
(smt.stats   38   4940 110267 236441  4949/4699/281    6239/627    29  133   22.34)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5074 111865 241580  4967/4717/281    6380/627    29  133   22.34)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3&16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 4398046511120 := 4409589235712 << 1
ramon: poll                 wall=4.000s usage=3.994s mem=24148KiB load=1.00 rootload=1.00
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3&23085449216
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 850 := 2204794617856 << 2
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3&23085449216
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 850 := 2204794617856 << 2
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3&23085449216
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 850 := 2204794617856 << 2
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3&23085449216
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 850 := 2204794617856 << 2
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3&23085449216
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 3 := 3&23085449216
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 3&23085449216
band: (band[42] (if (= #120 41) 1 (if #546 3 #661)) (shl[42] (bv2int %0) (+ 42 #664))) 3 := 3&23085449216
(smt.stats   40   5221 114396 251848  4999/4721/281    6605/631    29  133   22.81)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 3&23085449216
(smt.stats   41   5382 119470 271453  5005/4752/286    6843/679    30  134   22.81)
(smt.stats   42   5559 122877 290705  5032/4775/292    7071/690    31  134   22.91)
(smt.stats   43   5753 126832 306724  5265/4783/292    7450/762    32  149   23.10)
ramon: poll                 wall=5.000s usage=4.993s mem=24568KiB load=1.00 rootload=0.99
(smt.stats   44   5966 130079 320664  5505/5166/293    7924/787    33  151   23.19)
(smt.stats   45   6067 132913 334753  5536/5270/293    8039/787    33  151   23.19)
(smt.stats   46   6178 133765 336445  5719/5290/293    8166/792    33  151   23.38)
(smt.stats   47   6300 136325 349288  5813/5521/293    8339/792    33  151   23.29)
(smt.stats   48   6434 139004 358270  5873/5566/293    8545/794    33  151   23.38)
(smt.stats   49   6581 142708 373614  5882/5626/293    8890/794    33  151   23.38)
(smt.stats   50   6742 154224 419533  5887/5631/295    9053/934    34  159   23.38)
ramon: poll                 wall=6.000s usage=5.993s mem=24784KiB load=1.00 rootload=1.00
(smt.stats   51   6919 159199 442302  6025/5639/295    9405/937    35  166   23.48)
(smt.stats   52   7113 163881 459938  6064/5780/297    9669/976    36  175   23.48)
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8 := 26755443457&14
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8 := 26755443457&14
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 8 := 26755443457&14
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 26755443457&14
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 26755443457&14
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 26755443457&14
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 4 := 26755443457&14
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 26755443457&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 13176617716011761678 := 4398077669090 << 34
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 26755443457&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 13176617716011761678 := 4398077669090 << 34
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 26755443457&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 13176617716011761678 := 4398077669090 << 34
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 26755443457&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 13176899190988472334 := 4398077669090 << 34
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 26755443457&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 13176899190988472334 := 4398077669090 << 34
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 26755443457&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #867 #869) 64)) 13176899190988472334 := 4398077669090 << 34
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   53   7326 169530 482224  6262/5860/297   10195/993    37  180   23.67)
(smt.stats   54   7560 174477 499450  6312/6051/320   10669/1043    38  184   23.77)
(smt.stats   55   7661 177150 508699  6316/6058/320   10834/1043    38  184   23.77)
(smt.stats   56   7772 179632 517957  6370/6062/320   11023/1086    39  195   23.86)
ramon: poll                 wall=7.000s usage=6.992s mem=25224KiB load=1.00 rootload=1.00
(smt.stats   57   7894 182050 528273  6451/6131/320   11280/1088    39  195   23.86)
(smt.stats   58   8028 183927 534513  6521/6211/320   11489/1090    39  195   23.96)
(smt.stats   59   8175 186824 547032  6654/6290/320   11794/1091    39  195   24.04)
ramon: poll                 wall=8.000s usage=7.992s mem=25764KiB load=1.00 rootload=1.00
(smt.stats   60   8336 189444 562119  6773/6421/320   12162/1096    39  195   24.14)
ramon: poll                 wall=9.000s usage=8.991s mem=25828KiB load=1.00 rootload=1.00
(smt.stats   61   8513 191426 569406  6847/6541/320   12421/1096    39  195   24.33)
(smt.stats   62   8707 196793 586458  6892/6624/322   12799/1202    40  198   24.33)
(smt.stats   63   8920 200751 599637  7157/6637/322   13282/1210    40  198   24.42)
(smt.stats   64   9154 211176 630019  7174/6916/323   13893/1249    41  213   24.42)
ramon: poll                 wall=10.000s usage=9.991s mem=26028KiB load=1.00 rootload=1.00
band: (band[42] (if (or #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691 ...) 0 (if #698 1 #780)) (shl[64] (* 2 #114) (mod #870 64))) 428087095324 := 428087095325&2748779069440
(smt.stats   65   9411 218460 661115  7360/6926/323   14530/1256    41  213   24.61)
(smt.stats   66   9512 220564 669255  7385/7121/328   14847/1405    42  214   24.71)
(smt.stats   67   9623 224518 686667  7399/7135/330   15058/1405    42  214   24.71)
(smt.stats   68   9745 226421 696526  7405/7139/330   15216/1448    43  244   24.71)
(smt.stats   69   9879 228590 707430  7488/7148/330   15454/1451    43  244   24.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 825)
ramon: poll                 wall=11.000s usage=10.990s mem=26352KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10026 232155 720253  7578/7308/332   14976/1451    43  244   24.81)
(smt.stats   71  10187 236422 745085  7619/7344/333   15209/1509    44  254   24.81)
(smt.stats   72  10364 243332 766056  7636/7350/333   15439/1526    45  255   24.90)
(smt.stats   73  10558 247667 781310  7719/7366/333   15783/1528    45  255   25.00)
(smt.stats   74  10771 253806 800240  7785/7459/333   16066/1528    45  255   25.00)
ramon: poll                 wall=12.000s usage=11.990s mem=26448KiB load=1.00 rootload=1.00
(smt.stats   75  11005 258338 817971  7873/7531/333   16568/1530    45  255   25.00)
(smt.stats   76  11262 264610 834974  8106/7604/333   17305/1541    45  255   25.19)
ramon: poll                 wall=13.000s usage=12.989s mem=26728KiB load=1.00 rootload=1.00
(smt.stats   77  11544 271174 857660  8227/7948/334   17977/1693    46  262   25.28)
(smt.stats   78  11645 273366 866674  8250/7963/334   18154/1693    46  262   25.28)
(smt.stats   79  11756 277453 882458  8320/7978/334   18415/1694    46  262   25.48)
(smt.stats   80  11878 279883 886290  8441/8061/334   18625/1695    46  262   25.48)
ramon: poll                 wall=14.000s usage=13.989s mem=27132KiB load=1.00 rootload=1.00
(smt.stats   81  12012 281656 898471  8536/8199/334   19140/1696    46  262   25.58)
ramon: poll                 wall=15.000s usage=14.988s mem=27212KiB load=1.00 rootload=1.00
(smt.stats   82  12159 285463 913380  8582/8261/334   19469/1698    46  262   25.67)
(smt.stats   83  12320 291262 928965  8645/8321/334   20151/1700    46  262   25.77)
(smt.stats   84  12497 295724 946377  8760/8399/334   20763/1701    46  262   25.77)
(smt.stats   85  12691 303876 974362  8769/8490/336   21041/1930    47  280   25.86)
ramon: poll                 wall=16.000s usage=15.988s mem=27480KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   86  12904 311897 1010142  8786/8499/336   21488/1930    47  280   25.86)
(smt.stats   87  13138 318576 1033133  8885/8533/337   22000/2036    48  286   25.96)
(smt.stats   88  13395 325192 1067216  9294/8616/337   22530/2038    48  286   26.18)
ramon: poll                 wall=17.000s usage=16.987s mem=27796KiB load=1.00 rootload=1.00
(smt.stats   89  13677 334526 1107155  9445/9028/337   23874/2042    48  286   26.38)
(smt.stats   90  13987 344405 1141961  9461/9184/339   24759/2205    49  312   26.38)
(smt.stats   91  14088 346104 1156698  9477/9194/339   24943/2208    49  312   26.47)
(smt.stats   92  14199 350102 1179273  9485/9208/339   25074/2208    49  312   26.47)
(smt.stats   93  14321 353345 1196853  9502/9211/339   25473/2208    49  312   26.57)
(smt.stats   94  14455 356675 1216696  9506/9229/339   25862/2208    49  312   26.57)
(smt.stats   95  14602 359829 1238610  9519/9242/339   26321/2208    49  312   26.57)
ramon: poll                 wall=18.000s usage=17.983s mem=28248KiB load=1.00 rootload=0.99
(smt.stats   96  14763 366804 1267202  9535/9251/339   26700/2209    49  312   26.66)
(smt.stats   97  14940 371828 1300111  9612/9266/339   27032/2210    49  312   26.76)
(smt.delete-inactive-clauses  :num-deleted-clauses 80)
(smt.stats   98  15134 377075 1328140  9643/9366/339   27638/2210    49  312   26.76)
(smt.stats   99  15347 386365 1373355  9653/9376/339   28001/2210    49  312   26.86)
(smt.stats  100  15581 393033 1408006  9669/9380/339   28546/2212    49  312   27.27)
(smt.stats  101  15838 399631 1438935  9740/9407/339   28879/2213    49  312   27.36)
ramon: poll                 wall=19.000s usage=18.983s mem=28884KiB load=1.00 rootload=1.00
(smt.stats  102  16120 410001 1478928  9805/9468/339   29251/2215    49  312   27.36)
(smt.stats  103  16430 418899 1520370 10128/9531/339   30104/2225    49  312   27.46)
(smt.stats  104  16770 425238 1562961 10395/9898/339   31412/2228    49  312   27.66)
ramon: poll                 wall=20.000s usage=19.966s mem=29312KiB load=0.98 rootload=0.99
ramon: end                  Tue Dec 24 14:46:04 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.980s
ramon: group.utime          19.960s
ramon: group.stime          0.020s
ramon: group.mempeak        29568KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
