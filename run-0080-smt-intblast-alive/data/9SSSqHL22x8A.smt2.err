ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:44:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29082 MiB
ramon: sys.mem.avail        61765 MiB
ramon: sys.nprocs           1272
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9SSSqHL22x8A.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4094514
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   5605    658  1201/1089/95     100/16     3   16   19.07)
(smt.stats    1    202   8568   1401  1780/1527/95     231/27     3   16   19.26)
(smt.stats    2    313  11984   2531  1873/1687/96     345/42     4   18   19.35)
(smt.stats    3    414  13431   3802  1950/1775/96     452/43     4   18   19.35)
(smt.stats    4    525  14386   4937  2201/1910/103     548/68     6   25   19.45)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 0 := 17592186044356 << 27
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 0 := 17592186044356 << 27
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 0 := 17592186044356 << 27
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 0 := 17592186044356 << 27
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022177 := 8796093022178 << 28
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022177 := 8796093022178 << 28
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022177 := 8796093022178 << 28
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 1 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 1 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 2 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 4 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 256 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 256 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 1024 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 2048 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 4096 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16384 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 32768 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 65536 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 131072 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 262144 := 134217727&8788039958528
(smt.stats    5    647  16953   7739  2618/2118/103     674/89     7   25   20.06)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8788039958529 := 8796093022178 << 28
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 134217727 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 134217726 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 134217724 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 134217720 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 128 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 256 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 1024 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 2048 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 4096 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16384 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 32768 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 65536 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 131072 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 262144 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 524288 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 1048576 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 2097152 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 4194304 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8388608 := 134217727&8788039958528
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  17629   8572  2948/2486/181     830/93     8   40   20.76)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 4194304 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16777216 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16777216 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 33554432 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 67108864 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 67108864 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8388608 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 8192 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 512 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 64 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 2 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 1 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 16 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 8 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 4 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 2 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 2 := 134217727&8788039958528
(smt.stats    7    859  21282  14910  3007/2688/308    1314/113     9   67   20.85)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 32768 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 256 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 32 := 134217727&8788039958528
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 134217727&8788039958528
band: (band[43] (if (= #108 42) 0 (if #580 1 #697)) (shl[43] (bv2int %0) (+ 43 #700))) 16 := 134217727&8788039958528
(smt.stats    8    981  24872  22853  3069/2845/413    1517/393    13  103   21.06)
(smt.stats    9   1115  26696  24602  3405/2937/414    1875/409    13  103   21.92)
ramon: poll                 wall=1.000s usage=0.935s mem=23172KiB load=0.94 rootload=0.92
(smt.stats   10   1216  30059  32713  3674/3343/415    2304/574    14  107   22.08)
(smt.stats   11   1327  35413  42909  3882/3542/417    2881/772    15  111   22.17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  38610  50357  4203/3949/431    3406/867    17  117   22.27)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8788039958528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #796 #800) 64)) 18446744065656487936 := 17592186044362 << 24
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022182 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022185 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022185 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022183 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022183 := 8796093022181 << 25
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 0 := 16777215&8795187052544
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022182 := 8796093022181 << 25
(smt.stats   13   1583  44859  62784  4268/3976/439    4107/1390    19  155   22.46)
band: (band[43] (if (= #333 63) 0 (if #559 1 #789)) (shl[64] (* 2 #102) (mod #804 64))) 64 := 8388607&8795220606985
(smt.stats   14   1730  49699  68714  4433/4020/450    4374/1439    20  159   22.66)
(smt.stats   15   1831  52730  76095  4699/4291/455    4640/1486    21  160   22.75)
(smt.stats   16   1942  57819  94973  4993/4737/462    5177/1643    23  161   22.96)
(smt.stats   17   2064  61320 100912  5148/4742/462    5990/1648    23  161   23.06)
ramon: poll                 wall=2.000s usage=1.935s mem=24360KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2198  63028 105628  5594/4923/462    6218/1890    24  180   23.25)
(smt.stats   19   2345  64280 111866  5928/5454/462    6696/1891    24  180   23.35)
(smt.stats   20   2506  69139 121736  6256/5998/466    7351/2052    26  201   23.54)
(smt.stats   21   2607  75543 134075  6406/6030/466    7936/2060    26  201   23.54)
(smt.stats   22   2718  80008 146078  6415/6159/467    8179/2408    27  204   23.63)
ramon: poll                 wall=3.000s usage=2.934s mem=25072KiB load=1.00 rootload=1.00
(smt.stats   23   2840  85137 158456  6512/6162/469    8444/2415    27  204   23.73)
(smt.stats   24   2974  89078 177817  6656/6391/473    9271/2924    29  223   23.82)
(smt.stats   25   3121  92805 190599  6819/6489/476    9502/2927    29  223   24.07)
ramon: poll                 wall=4.000s usage=3.933s mem=25912KiB load=1.00 rootload=1.00
(smt.stats   26   3282  97802 199622  7054/6608/476    9887/2964    30  239   24.15)
(smt.stats   27   3459 103551 216513  7253/6974/478   10823/3103    31  240   24.34)
(smt.stats   28   3560 106575 226249  7287/6996/478   11115/3103    31  240   24.34)
(smt.stats   29   3671 110033 254998  7324/7022/478   11590/3528    32  243   24.44)
(smt.stats   30   3793 112866 273479  7458/7053/479   11766/3714    33  259   24.44)
(smt.stats   31   3927 115897 285624  7538/7214/479   12005/3715    33  259   24.54)
ramon: poll                 wall=5.000s usage=4.932s mem=25988KiB load=1.00 rootload=1.00
(smt.stats   32   4074 120908 309995  7699/7301/480   13515/3775    34  263   24.92)
(smt.stats   33   4235 125579 337283  7830/7512/484   14074/4232    36  267   25.01)
ramon: poll                 wall=6.000s usage=5.931s mem=26520KiB load=1.00 rootload=1.00
(smt.stats   34   4412 131256 350848  8022/7570/484   14510/4235    36  267   25.11)
(smt.stats   35   4606 138352 374506  8131/7796/489   15473/4306    37  279   25.30)
ramon: poll                 wall=7.000s usage=6.930s mem=26792KiB load=1.00 rootload=1.00
(smt.stats   36   4707 142326 381964  8219/7882/489   15651/4477    38  279   25.42)
(smt.stats   37   4818 146338 400915  8366/8032/489   16178/4485    38  279   25.42)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4940 151079 433268  8564/8127/489   16885/4491    38  279   25.52)
(smt.delete-inactive-clauses  :num-deleted-clauses 61)
ramon: poll                 wall=8.000s usage=7.929s mem=27240KiB load=1.00 rootload=1.00
(smt.stats   39   5074 156299 452606  8665/8353/490   18037/5227    39  280   25.73)
(smt.stats   40   5221 163487 475283  8890/8393/490   18550/5230    39  280   25.92)
(smt.stats   41   5382 170069 543009  8947/8654/490   19687/5230    39  280   26.02)
ramon: poll                 wall=9.000s usage=8.928s mem=27500KiB load=1.00 rootload=1.00
(smt.stats   42   5559 175123 566465  9023/8688/491   20383/5622    40  280   26.31)
(smt.stats   43   5753 187413 666999  9068/8773/491   20769/5623    40  280   26.31)
ramon: poll                 wall=10.000s usage=9.928s mem=27860KiB load=1.00 rootload=0.99
(smt.stats   44   5966 193732 708359  9244/8848/492   21995/5768    41  281   26.41)
(smt.stats   45   6067 198063 736957  9372/9014/495   23220/6107    42  286   26.60)
ramon: poll                 wall=11.000s usage=10.927s mem=28216KiB load=1.00 rootload=1.00
(smt.stats   46   6178 204801 791139  9456/9112/496   23631/6108    42  286   26.90)
(smt.stats   47   6300 212657 880045  9475/9194/496   23992/6225    43  289   27.00)
(smt.stats   48   6434 217959 955422  9528/9240/501   24828/6309    44  292   27.19)
ramon: poll                 wall=12.000s usage=11.926s mem=28736KiB load=1.00 rootload=1.00
(smt.stats   49   6581 222851 977626  9660/9246/501   25390/6318    44  292   27.19)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   50   6742 229126 1017729  9864/9427/501   25846/6556    45  367   27.29)
ramon: poll                 wall=13.000s usage=12.925s mem=28912KiB load=1.00 rootload=1.00
(smt.stats   51   6919 236156 1053309 10154/9583/501   26329/6568    45  367   27.38)
ramon: poll                 wall=14.000s usage=13.924s mem=29092KiB load=1.00 rootload=1.00
(smt.stats   52   7113 239620 1064978 10529/9907/501   26788/6570    45  367   27.63)
(smt.stats   53   7326 245503 1100285 11046/10404/501   27893/6573    45  367   27.93)
ramon: poll                 wall=15.000s usage=14.923s mem=29476KiB load=1.00 rootload=1.00
(smt.stats   54   7560 251890 1132207 11329/10833/501   28647/6573    45  367   28.03)
ramon: poll                 wall=16.000s usage=15.922s mem=30056KiB load=1.00 rootload=1.00
(smt.stats   55   7661 255316 1150135 11491/11085/501   28917/6576    45  367   28.12)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   56   7772 257940 1167395 11758/11307/501   29113/6576    45  367   28.22)
(smt.stats   57   7894 264312 1254175 11816/11479/503   29670/6947    46  383   28.22)
ramon: poll                 wall=17.000s usage=16.921s mem=30076KiB load=1.00 rootload=0.99
(smt.stats   58   8028 268176 1272691 11935/11555/503   30643/6948    46  383   28.51)
ramon: poll                 wall=18.000s usage=17.920s mem=30452KiB load=1.00 rootload=1.00
(smt.stats   59   8175 274052 1311335 12146/11670/503   31327/6949    46  383   28.60)
ramon: poll                 wall=19.000s usage=18.920s mem=30484KiB load=1.00 rootload=1.00
(smt.stats   60   8336 277074 1326562 12536/11938/503   31864/6955    46  383   28.70)
(smt.stats   61   8513 281129 1351733 12879/12394/503   33673/6961    46  383   28.89)
ramon: poll                 wall=20.004s usage=19.922s mem=30612KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:44:39 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.988s
ramon: group.utime          19.972s
ramon: group.stime          0.016s
ramon: group.mempeak        30888KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
