ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:53:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24902 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/jqWzrubiQ2FT.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             131644
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2938    931  1064/958/101      89/7     7   16   18.98)
(smt.stats    1    202   4695   2281  1467/1320/103     184/14     9   17   19.07)
(smt.stats    2    313   6709   3642  1642/1399/103     323/22     9   17   19.17)
(smt.stats    3    414   8952   4784  1697/1512/103     437/24     9   17   19.27)
(smt.stats    4    525  11151   6055  1947/1773/106     551/34    10   18   19.40)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719476736 := 0 << 27
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719476736 := 0 << 27
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719476736 := 0 << 27
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 257 := 256 << 28
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&68182605825
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 18446744073172680705 := 137438953468 << 27
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 68719476735 := 256 << 28
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&68451041280
band: (band[36] (if (or #562 #563) 0 (if #564 1 #657)) (shl[36] (bv2int %0) (+ 36 #659))) 1 := 42052238&68451041280
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 42052238&68451041280
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2 := 42052238&68451041280
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 42052238&68451041280
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 68451041025 := 256 << 28
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 42052238&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 268435456 := 256 << 28
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 4 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 8 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 16 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 32 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 64 := 42052238&268435456
(smt.stats    5    647  11866   6988  2143/1808/133     736/40    11   25   19.80)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1040 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1001 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1000 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1000 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 232 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 232 := 42052238&268435456
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 232 := 42052238&268435456
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  12909   8778  2252/2070/179     997/114    13   41   20.08)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 232 := 42052238&2147483648
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 228 := 42052238&11542724608
(smt.stats    7    859  14370  15933  2467/2282/184    1212/150    14   51   20.08)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 544 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 772 := 5256529&7247757316
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757331
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757568
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757568
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757571
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 768 := 5256529&7247757568
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1152 := 5256529&7247757552
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757552
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757536
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757312
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1024 := 5256529&7247757312
(smt.stats    8    981  17066  22455  2576/2299/186    1488/188    16   57   20.18)
(smt.stats    9   1115  19993  31036  2860/2647/235    1736/298    18   68   20.37)
(smt.stats   10   1216  22191  35537  2883/2666/235    1845/336    19   74   20.37)
(smt.stats   11   1327  25777  41343  2920/2704/237    1955/355    21   79   20.47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  27183  43667  3009/2714/237    2091/358    21   79   20.47)
(smt.stats   13   1583  29397  50771  3161/2935/245    2326/399    22   85   20.57)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274289152
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274289152
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11542723072
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11542722560
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274289216
(smt.stats   14   1730  30817  54833  3225/2954/245    2497/471    23   94   20.76)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274302209
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301827
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301842
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301698
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301890
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 320 := 1345671621&11274301810
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2400 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 8544 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 4432 := 1345671621&11274301762
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2368 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2368 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2368 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 12608 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 12608 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 33088 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 37184 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 69952 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 69952 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 69952 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 16832 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 16704 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 20800 := 1345671621&11274302274
(smt.stats   15   1831  31842  60424  3695/3376/281    3077/494    24   95   20.97)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 266560 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 135488 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 143680 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 135488 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 135488 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 135488 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 266560 := 1345671621&11274302274
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 266560 := 1345671621&11006783810
(smt.stats   16   1942  33418  68403  3889/3677/363    3406/803    26  120   21.21)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1410
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1425
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1459
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 1459 := 1620 << 12
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1459
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 1459 := 1620 << 12
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1459
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719478195 := 68719478196 << 12
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 1283 := 1283&1459
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 68719478195 := 68719478196 << 12
(smt.stats   17   2064  36319  76461  3963/3748/375    3821/933    27  125   21.31)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&283
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 267 := 5133&267
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 649 := 5133&131355
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 777 := 5133&131355
(smt.stats   18   2198  41163 102129  4075/3770/378    4120/942    27  125   21.40)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 777 := 5133&131339
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 777 := 5133&131339
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2057 := 5133&131339
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2057 := 5133&131339
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 2057 := 5133&131339
(smt.stats   19   2345  45647 120219  4292/4066/395    4623/1056    29  156   21.50)
ramon: poll                 wall=1.000s usage=0.929s mem=22796KiB load=0.93 rootload=0.90
(smt.stats   20   2506  49493 140869  4334/4120/409    5438/1523    31  166   21.70)
(smt.stats   21   2607  52522 159422  4425/4128/409    5630/1528    31  166   21.70)
(smt.stats   22   2718  54578 175816  4551/4252/409    5780/1613    32  215   21.70)
(smt.stats   23   2840  58260 201078  4636/4360/409    6020/1613    32  215   21.79)
(smt.stats   24   2974  61255 216741  4713/4495/411    6311/1773    33  227   21.79)
(smt.stats   25   3121  64903 244725  4770/4527/411    6548/1778    33  227   21.89)
(smt.stats   26   3282  67591 267107  4796/4583/413    6863/1915    34  234   21.89)
(smt.stats   27   3459  71165 291324  4834/4621/414    7079/2138    36  243   22.03)
(smt.stats   28   3560  72732 306216  4857/4641/415    7220/2137    37  258   22.03)
(smt.stats   29   3671  74662 316150  4940/4669/418    7379/2144    37  258   22.03)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 137438953470 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 137438953470 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 137438953470 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 536871426 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 35 #766 #770) 64)) 206158430208 := 50332160 << 3
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 31 := 0 << 4
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 4
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 4
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 2&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 4
(smt.stats   30   3793  76343 330437  5030/4747/418    7533/2175    38  269   22.51)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 0&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 1
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 0&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 1
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 0&0
shl: (shl[36] (bv2int %0) (+ 36 (* 68719476735 #105))) 1 := 0 << 1
(smt.stats   31   3927  77839 339069  5152/4879/435    7670/2196    39  275   22.61)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074  79393 352195  5216/4961/443    7906/2197    39  275   22.70)
ramon: poll                 wall=2.000s usage=1.928s mem=24260KiB load=1.00 rootload=1.00
(smt.stats   33   4235  84303 388489  5266/4977/443    8662/2204    40  332   22.90)
(smt.stats   34   4412  87595 420261  5281/5033/445    9080/2436    41  333   23.00)
(smt.stats   35   4606  91521 432943  5375/5049/445    9412/2456    42  333   23.00)
(smt.stats   36   4707  94268 445593  5576/5176/445    9581/2457    42  333   23.19)
(smt.stats   37   4818  97334 464960  5612/5338/445    9784/2457    42  333   23.19)
(smt.stats   38   4940  99064 483473  5621/5371/445   10081/2457    42  333   23.19)
(smt.delete-inactive-clauses  :num-deleted-clauses 89)
(smt.stats   39   5074 100824 502625  5641/5382/445   10536/2457    42  333   23.28)
(smt.stats   40   5221 109076 559537  5660/5406/445   10988/2457    42  333   23.38)
ramon: poll                 wall=3.000s usage=2.927s mem=24876KiB load=1.00 rootload=1.00
(smt.stats   41   5382 115083 599804  5760/5429/445   11666/2458    42  333   23.47)
(smt.stats   42   5559 119223 630886  5846/5576/461   13196/2879    43  349   23.76)
(smt.stats   43   5753 122906 659896  5846/5584/462   13413/3113    44  352   23.86)
(smt.stats   44   5966 127564 695209  5911/5590/462   13802/3118    44  352   23.95)
(smt.stats   45   6067 129581 713521  5927/5663/463   13971/3270    45  356   23.95)
(smt.stats   46   6178 130904 739223  5929/5665/463   14125/3270    45  356   24.05)
(smt.stats   47   6300 132660 760911  5930/5666/463   14256/3270    45  356   24.05)
(smt.stats   48   6434 134031 785023  5962/5688/463   14541/3270    45  356   24.15)
(smt.stats   49   6581 140772 812320  5995/5718/469   14700/3322    46  368   24.24)
(smt.stats   50   6742 149579 862740  6003/5726/469   15594/3322    46  368   24.43)
ramon: poll                 wall=4.000s usage=3.926s mem=25864KiB load=1.00 rootload=0.99
(smt.stats   51   6919 165884 955616  6009/5732/469   16366/3322    46  368   24.53)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 170870 978659  6338/5738/470   16899/3578    47  370   24.72)
(smt.stats   53   7326 175939 1019734  7011/6165/470   17700/3581    47  370   24.91)
ramon: poll                 wall=5.000s usage=4.925s mem=26364KiB load=1.00 rootload=1.00
(smt.stats   54   7560 180790 1064392  7273/6771/470   18883/3584    47  370   25.20)
(smt.stats   55   7661 184738 1092033  7359/7001/470   19668/3584    47  370   25.20)
(smt.stats   56   7772 187037 1106325  7391/7094/470   19814/3584    47  370   25.30)
(smt.stats   57   7894 191344 1143359  7531/7116/470   20209/3586    47  370   25.30)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8028 194934 1165166  7620/7310/470   21509/3586    47  370   25.49)
ramon: poll                 wall=6.000s usage=5.917s mem=26968KiB load=0.99 rootload=0.99
(smt.stats   59   8175 202368 1245926  7643/7364/471   22250/4208    48  381   25.59)
(smt.stats   60   8336 206538 1273989  7855/7371/471   22895/4209    48  381   25.68)
(smt.stats   61   8513 211435 1317451  8160/7726/471   23330/4210    48  381   25.96)
(smt.stats   62   8707 222372 1443589  8180/7903/471   23852/4210    48  381   25.96)
(smt.stats   63   8920 226514 1478088  8641/7907/471   24570/4214    48  381   26.06)
ramon: poll                 wall=7.000s usage=6.916s mem=27852KiB load=1.00 rootload=1.00
(smt.stats   64   9154 232611 1538471  8761/8371/471   25676/4215    48  381   26.44)
(smt.stats   65   9411 240639 1637219  8893/8513/471   26418/4216    48  381   26.44)
(smt.stats   66   9512 242261 1652710  8908/8631/471   27989/4216    48  381   26.61)
(smt.stats   67   9623 247437 1701932  8915/8638/471   29632/4216    48  381   26.80)
(smt.stats   68   9745 257615 1780768  8922/8645/471   31056/4216    48  381   26.90)
ramon: poll                 wall=8.000s usage=7.916s mem=28368KiB load=1.00 rootload=1.00
(smt.stats   69   9879 269568 1899616  8927/8650/471   31911/4216    48  381   26.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 232)
(smt.stats   70  10026 275580 1974026  8973/8681/471   32471/4217    48  381   27.09)
(smt.stats   71  10187 279861 2038707  8979/8702/471   32810/4217    48  381   27.09)
(smt.stats   72  10364 283706 2093214  8995/8705/472   33780/6434    49  381   27.18)
(smt.stats   73  10558 289029 2147034  9006/8726/472   34669/6435    49  381   27.38)
ramon: poll                 wall=9.000s usage=8.915s mem=28916KiB load=1.00 rootload=1.00
(smt.stats   74  10771 295510 2211735  9143/8848/473   36115/6923    50  383   27.87)
(smt.stats   75  11005 299315 2270627  9153/8858/474   37443/6923    50  383   27.97)
(smt.stats   76  11262 313755 2457545  9155/8860/474   38338/6923    50  383   28.46)
ramon: poll                 wall=10.000s usage=9.914s mem=29972KiB load=1.00 rootload=1.00
(smt.stats   77  11544 322222 2570644  9171/8876/476   39302/7512    52  419   28.68)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   78  11645 326172 2593767  9300/8982/477   39769/7514    52  419   28.68)
(smt.stats   79  11756 330030 2640437  9346/9015/479   39989/7515    52  419   28.68)
(smt.stats   80  11878 332762 2649243  9419/9036/479   40161/7517    52  419   28.68)
(smt.stats   81  12012 334894 2667934  9454/9138/481   40552/7590    53  423   28.78)
(smt.stats   82  12159 338476 2719664  9482/9151/481   41281/7590    53  423   28.97)
ramon: poll                 wall=11.000s usage=10.913s mem=30632KiB load=1.00 rootload=1.00
(smt.stats   83  12320 343482 2791091  9496/9178/481   42888/7590    53  423   29.16)
(smt.stats   84  12497 348437 2854972  9524/9204/482   43428/7779    54  431   29.26)
(smt.stats   85  12691 356596 2958243  9539/9219/483   44968/8001    55  437   29.45)
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 5&98308
band: (band[36] (if (or #540 #545) 0 (if #535 1 #756)) (shl[64] (* 2 #283) (mod #774 64))) 0 := 5&98308
(smt.stats   86  12904 363383 3026991  9629/9240/484   45760/8001    55  437   29.53)
(smt.stats   87  13138 369970 3049400  9737/9333/484   46593/8003    55  437   29.62)
ramon: poll                 wall=12.000s usage=11.912s mem=31448KiB load=1.00 rootload=1.00
(smt.stats   88  13395 379392 3160551  9941/9463/484   47916/8012    55  437   29.81)
(smt.stats   89  13677 387111 3251894 10099/9690/484   49558/8207    56  445   30.01)
ramon: poll                 wall=13.000s usage=12.911s mem=31652KiB load=1.00 rootload=1.00
(smt.stats   90  13987 396301 3398299 10264/9939/485   51706/8441    57  459   30.20)
(smt.stats   91  14088 403282 3468949 10266/9940/485   52259/8441    57  459   30.29)
(smt.stats   92  14199 409016 3504704 10341/9967/486   52475/8444    57  459   30.48)
ramon: poll                 wall=14.000s usage=13.910s mem=32152KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   93  14321 412722 3530394 10469/10043/486   53531/8590    58  460   30.58)
(smt.stats   94  14455 417924 3577108 10577/10151/486   54316/8596    58  460   30.68)
(smt.stats   95  14602 422935 3622115 10622/10261/489   55793/8596    58  460   30.87)
(smt.stats   96  14763 427430 3687786 11104/10394/489   56250/9162    59  472   30.96)
ramon: poll                 wall=15.000s usage=14.909s mem=32612KiB load=1.00 rootload=1.00
(smt.stats   97  14940 431242 3757231 11185/10814/489   57439/9164    59  472   31.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 364)
(smt.stats   98  15134 437567 3841892 11343/10873/489   57619/9172    59  472   31.25)
(smt.stats   99  15347 444912 3923762 11513/11047/489   58273/9177    59  472   31.25)
ramon: poll                 wall=16.000s usage=15.908s mem=32948KiB load=1.00 rootload=1.00
(smt.stats  100  15581 450288 4015260 11546/11209/489   59153/9178    59  472   31.35)
(smt.stats  101  15838 463094 4164313 11561/11233/489   60052/9178    59  472   31.45)
ramon: poll                 wall=17.000s usage=16.907s mem=33252KiB load=1.00 rootload=0.99
(smt.stats  102  16120 471840 4242692 11753/11263/491   62034/9954    60  493   31.91)
(smt.stats  103  16430 479620 4297253 12043/11561/491   63424/9958    60  493   32.01)
(smt.stats  104  16770 486047 4386839 12097/11721/491   63924/9959    60  493   32.11)
ramon: poll                 wall=18.000s usage=17.906s mem=33528KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units              :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas            :deletions     )
(smt.stats  105  16871 489015 4458038 12099/11774/491   64009/10211    61  509   32.11)
(smt.stats  106  16982 491763 4508829 12165/11780/491   64320/10214    61  509   32.11)
(smt.stats  107  17104 496178 4567708 12217/11876/492   64848/10215    61  509   32.30)
(smt.stats  108  17238 500042 4598174 12292/11930/492   65009/10287    62  516   32.30)
ramon: poll                 wall=19.000s usage=18.903s mem=33904KiB load=1.00 rootload=1.00
(smt.stats  109  17385 505033 4656950 12427/11981/492   65633/10289    62  516   32.49)
(smt.stats  110  17546 507746 4701618 12483/12126/492   66428/10289    62  516   32.49)
(smt.stats  111  17723 511290 4738993 12656/12171/493   66985/10533    63  516   32.68)
ramon: poll                 wall=20.000s usage=19.902s mem=34172KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:53:30 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.976s
ramon: group.utime          19.944s
ramon: group.stime          0.032s
ramon: group.mempeak        34684KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
