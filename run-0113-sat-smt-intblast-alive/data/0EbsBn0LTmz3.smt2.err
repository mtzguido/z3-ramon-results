ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:44:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42757 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1268
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0EbsBn0LTmz3.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3634686
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   228/228     0/0  61       0    18.51   0.00)
(sat.stats    185    985    0   228/228   185/65  61       0    18.80   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 656 :time 0.00)
(sat.stats    185    985    0   228/228   185/65  61       0    18.80   0.01)
(sat.stats    185    985    0   228/228   185/65  61       0    18.80   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 591818.90 :time 0.00)
(sat.stats    185    985    0   228/228   187/67  61       0    18.90   0.01)
(sat.stats    207   1134    1   228/228   209/83  61       0    18.90   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    210   1182    2   228/228   212/84  61       0    18.90   0.01)
(sat.stats    355   4253    3   228/228   357/155  61       0    19.00   0.03)
(sat.stats    400   4727    4   228/228   402/183  61       0    19.00   0.03)
(sat.stats    506   6130    5   228/228   508/216  61       0    19.09   0.04)
(sat.stats    511   6243    6   228/228   513/218  61       0    19.09   0.04)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3341 :time 0.00)
(sat.stats    524   6698    7   231/231   525/221  72       0    19.47   0.29)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    530   6729    8   231/231   531/221  72       0    19.47   0.29)
(sat.stats    533   6735    9   231/231   534/222  72       0    19.47   0.29)
(sat.stats    536   6865   10   233/233   537/222  72       0    19.47   0.29)
(sat.stats    539   6894   11   247/247   539/222  73       0    19.56   0.31)
(sat.stats    543   7032   12   247/247   543/225  73       0    19.56   0.31)
(sat.stats    546   7154   13   247/247   546/226  73       0    19.56   0.31)
(sat.stats    549   7247   14   254/253   549/227  73       0    19.56   0.32)
(sat.stats    552   7286   15   258/257   552/227  73       0    19.56   0.32)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    711   9782   57  2623/2622   718/234  74       0    20.41   0.80)
ramon: poll                 wall=1.003s usage=0.998s mem=21836KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 8308 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 8645 :time 0.00)
(sat.stats   1103  21448  103  8751/8750  1224/282  77       0    21.50   1.55)
 (sat-cleaner :elim-literals 9 :elim-clauses 0 :cost 13791 :time 0.00)
ramon: poll                 wall=2.000s usage=1.994s mem=23024KiB load=1.00 rootload=0.99
(sat.stats   1660  38065  182  9841/9840  1922/537  79       0    21.88   2.01)
 (sat-cleaner :elim-literals 287 :elim-clauses 1 :cost 16364 :time 0.00)
 (sat-cleaner :elim-literals 9 :elim-clauses 3 :cost 16947 :time 0.00)
ramon: poll                 wall=3.000s usage=2.994s mem=24476KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.993s mem=25360KiB load=1.00 rootload=1.00
(sat.stats   3263  85225  258 22122/22120  3724/968  84       0    24.59   4.32)
 (sat-cleaner :elim-literals 33 :elim-clauses 0 :cost 26212 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 27398 :time 0.00)
ramon: poll                 wall=5.000s usage=4.993s mem=26072KiB load=1.00 rootload=1.00
(sat.stats   3759  96703  287 23868/23866  4287/1228  85       0    24.78   5.07)
ramon: poll                 wall=6.000s usage=5.993s mem=26404KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.992s mem=26456KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.992s mem=27432KiB load=1.00 rootload=1.00
(sat.stats   8025 150455  290 36466/36464  7194/1746  85       0    26.84   8.99)
ramon: poll                 wall=9.000s usage=8.992s mem=28068KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin           :units        :memory       )
(sat.stats   8092 151317  311 36482/36480  7232/1753  85       0    26.84   9.02)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 42539 :time 0.00)
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 281474976710648 << 8
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 47 := 128&281474976708608
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 42 := 128&281474976708608
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 128 := 128&281474976708608
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 4 := 128&281474976708608
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 128&281474976708608
shl: (shl[64] (bv2int %0) (mod (+ #59 #317) 64)) 128 := 281474976710648 << 8
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 8 := 128&281474976708608
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 16 := 128&281474976708608
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 32 := 128&281474976708608
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 64 := 128&281474976708608
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 128&281474976708608
band: (band[48] (shl[64] (bv2int %0) (mod #318 64)) (if (= #676 63) 0 (if #678 1 #802))) 18 := 281474976708608&128
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 128&281474976708608
band: (band[48] (shl[64] (bv2int %0) (mod #318 64)) (if (= #676 63) 0 (if #678 1 #802))) 1 := 281474976708608&128
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 128&281474976708608
band: (band[48] (shl[64] (bv2int %0) (mod #318 64)) (if (= #676 63) 0 (if #678 1 #802))) 28 := 281474976708608&128
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 128&281474976708608
band: (band[48] (shl[64] (bv2int %0) (mod #318 64)) (if (= #676 63) 0 (if #678 1 #802))) 32 := 281474976708608&128
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 128&281474976708608
band: (band[48] (shl[64] (bv2int %0) (mod #318 64)) (if (= #676 63) 0 (if #678 1 #802))) 8 := 281474976708608&128
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 128&281474976708608
band: (band[48] (shl[64] (bv2int %0) (mod #318 64)) (if (= #676 63) 0 (if #678 1 #802))) 80 := 281474976708608&128
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 128&281474976708608
band: (band[48] (shl[64] (bv2int %0) (mod #318 64)) (if (= #676 63) 0 (if #678 1 #802))) 64 := 281474976708608&128
band: (band[48] (if (= #562 47) 1 (if #564 2 #656)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 128&281474976708608
band: (band[48] (shl[64] (bv2int %0) (mod #318 64)) (if (= #676 63) 0 (if #678 1 #802))) 128 := 281474976708608&128
ramon: poll                 wall=10.000s usage=9.992s mem=34840KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.003s usage=10.995s mem=41976KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.991s mem=52948KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.991s mem=55528KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.990s mem=56336KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.990s mem=56552KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.990s mem=58836KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.989s mem=60056KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.989s mem=61612KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.989s mem=62096KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.989s mem=63820KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:45:11 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.001s
ramon: group.utime          19.973s
ramon: group.stime          0.028s
ramon: group.mempeak        63824KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.012s
ramon: loadavg              1.00
