ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:07:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41851 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/M6UndVbelhww.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2924365
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 1&1
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 1&1
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 2 := 144115188075855871 << 56
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 1&1
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 2 := 144115188075855871 << 56
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 1&1
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 2 := 144115188075855871 << 56
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72057594037927936&1
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 72057594037927937 := 72057594037927937 << 56
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 2 := 257 << 56
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72057594037927936&1
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 72057594037927937 := 72057594037927937 << 56
(smt.stats    0    101    864    664  1225/1066/102      98/27     7   16   18.97)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72057594037927936&1
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 72057594037927937 := 72057594037927937 << 56
(smt.stats    1    202   1364   1491  1529/1242/121     195/29     9   21   19.26)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 1 := 72057594037927936&1
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72057594037927936&1
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 72057594037927937 := 72057594037927937 << 56
(smt.stats    2    313   2206   3336  1662/1505/123     317/36    11   24   19.35)
(smt.stats    3    418   3286   6067  1745/1600/133     419/53    13   40   19.35)
(smt.stats    4    529   4500   7415  1776/1624/136     518/64    15   53   19.46)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2302&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 2302 := 2302 << 56
(smt.stats    5    651   6279   9439  1816/1660/139     639/72    16   59   19.46)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    752   7148  11346  1861/1682/139     744/72    16   59   19.55)
(smt.stats    7    863   8129  12644  1897/1713/139     861/76    16   59   19.55)
(smt.stats    8    988   9386  14989  1977/1821/143     973/87    17   61   19.65)
(smt.stats    9   1122  10345  17071  2042/1822/143    1117/89    17   61   19.65)
(smt.stats   10   1223  11229  19684  2071/1892/143    1208/92    18   69   19.65)
(smt.stats   11   1334  11851  21857  2078/1922/143    1316/92    18   69   19.75)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1456  13322  25072  2122/1932/143    1439/93    18   69   19.88)
(smt.stats   13   1590  14682  27831  2140/1972/150    1574/111    19   70   19.88)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72057594037927936&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 360287970189639680 := 19973 << 8
(smt.stats   14   1737  16540  30300  2205/1985/150    1722/112    19   70   19.88)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72057594037927936&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 360287970189639680 := 19973 << 8
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72057594037927936&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 360287970189639680 := 72057594037927429 << 8
ramon: poll                 wall=1.002s usage=0.900s mem=21020KiB load=0.90 rootload=0.89
(smt.stats   15   1838  17740  31672  2251/2064/150    1826/115    19   70   19.97)
(smt.stats   16   1949  18658  34471  2326/2135/155    1937/122    20   71   19.97)
(smt.stats   17   2071  19831  36685  2371/2186/156    2056/123    21   74   19.97)
(smt.stats   18   2205  22402  42407  2382/2222/156    2190/123    21   74   19.97)
(smt.stats   19   2352  24960  45504  2384/2224/156    2335/123    21   74   19.97)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 144115188075840770&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 576460752303408386 := 265 << 7
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 144115188075855871&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 576460752303423487 := 3337 << 7
(smt.stats   20   2513  26601  48949  2436/2257/162    2500/127    22   75   20.17)
(smt.stats   21   2614  28315  51667  2464/2298/162    2612/127    22   75   20.40)
(smt.stats   22   2725  29695  56728  2474/2306/162    2725/127    22   75   20.40)
(smt.stats   23   2847  30834  61340  2526/2323/162    2838/130    22   75   20.40)
(smt.stats   24   2981  33875  66669  2532/2370/162    2973/130    22   75   20.40)
(smt.stats   25   3128  35698  71217  2546/2375/162    3118/131    22   75   20.40)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72340172838076416&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 72340172838076672 := 72340172838076672 << 8
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72057594037993472&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 72339069014638848 := 72339069014638848 << 8
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 72057594037993472&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 72339069014638848 := 72339069014638848 << 8
(smt.stats   26   3289  38328  75752  2574/2392/162    3285/132    22   75   20.40)
(smt.stats   27   3467  40084  79875  2636/2475/186    3446/166    24   88   20.40)
(smt.stats   28   3568  41181  81251  2686/2489/186    3542/167    24   88   20.49)
(smt.stats   29   3679  42518  86378  2751/2578/188    3643/173    25  106   20.49)
(smt.stats   30   3801  47235  91817  2761/2601/190    3773/184    26  109   20.49)
(smt.stats   31   3935  48968  96019  2815/2648/191    3905/186    26  109   20.49)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4082  52582 102257  2825/2662/191    4052/190    27  114   20.59)
(smt.stats   33   4243  54758 111441  2829/2665/192    4219/194    28  116   20.59)
ramon: poll                 wall=2.000s usage=1.898s mem=21700KiB load=1.00 rootload=1.00
(smt.stats   34   4420  56832 117902  2875/2678/192    4400/194    28  116   20.59)
(smt.stats   35   4614  61679 126195  2900/2719/192    4593/196    28  116   20.59)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2561&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 432345564227570177 := 8 << 9
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2561&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 432345564227570177 := 8 << 9
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2049&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 432345564227569665 := 8 << 9
(smt.stats   36   4715  63745 130453  2922/2748/192    4696/197    28  116   20.59)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2561&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 432345564227570177 := 562949953421320 << 9
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2048&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 2049 := 108930815987023876 << 9
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 1024&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 1025 := 72902018968059906 << 9
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 1024&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 1025 := 72902018968059906 << 9
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 1024&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 1025 := 72902018968059906 << 9
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 1024&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 1025 := 72902018968059906 << 9
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2048&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 432345564227569664 := 844424930131972 << 10
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 2048&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 432345564227569664 := 844424930131972 << 10
(smt.stats   37   4826  64700 133561  3000/2827/204    4826/208    29  117   20.68)
(smt.stats   38   4948  65515 137327  3023/2858/210    4946/209    30  125   20.89)
(smt.delete-inactive-clauses  :num-deleted-clauses 41)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 144115188075855116&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 720575940379278604 := 144115188075855871 << 7
(smt.stats   39   5082  66794 140580  3051/2870/212    5046/210    30  125   20.99)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 10133099161584387 := 82190693199511552 << 7
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[57] (bv2int %0) (mod (bv2int %1) 57)) 20266198323168003 := 92323792361095168 << 7
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 11673330234144325632 := 91197892454252544 << 16
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 11673330234144325632 := 91197892454252544 << 16
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 11673330234144325632 := 91197892454252544 << 16
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 11673330234144325632 := 91197892454252544 << 17
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 11673330234144325632 := 91197892454252544 << 17
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 11673330234144325632 := 91197892454252544 << 18
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 11673330234144325632 := 91197892454252544 << 18
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 11817445422220181504 := 92323792361095168 << 18
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 12105675798371893248 := 94575592174780416 << 18
(smt.stats   40   5229  68607 142662  3146/2895/212    5206/212    30  125   20.99)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 47
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 44
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 46
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 45
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 43
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 42
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 41
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 40
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 39
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 38
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 37
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 17
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 19
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 20
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 20
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 20
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 20
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 36
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 36
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 36
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 35
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 34
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 33
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 33
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 32
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 31
(smt.stats   41   5390  71155 146445  3306/3029/232    5365/233    31  135   21.47)
band: (band[57] (shl[64] (bv2int %0) (mod #400 64)) (if (or #918 #919 #920 #921 #922 #923 #924 #925 #926 #927 #928 #929 #930 #931 #932 #933 ...) 0 (if #974 1 #988))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #399) 64)) 10376293541461622784 := 81064793292668928 << 29
(smt.stats   42   5567  73950 149369  3601/3334/333    5565/246    32  154   21.76)
ramon: poll                 wall=3.000s usage=2.893s mem=23004KiB load=1.00 rootload=0.98
(smt.stats   43   5761  75960 158004  3747/3442/333    5780/250    32  154   21.85)
ramon: poll                 wall=4.000s usage=3.893s mem=23156KiB load=1.00 rootload=1.00
(smt.stats   44   5974  79982 167230  3869/3569/333    5992/303    33  158   21.95)
(smt.stats   45   6075  81115 173097  3891/3695/333    6087/303    33  158   21.95)
(smt.stats   46   6186  84126 178341  3894/3698/333    6195/303    33  158   22.04)
(smt.stats   47   6308  87666 188145  3896/3698/333    6319/304    33  158   22.04)
(smt.stats   48   6442  90143 192188  3983/3787/334    6490/337    34  163   22.04)
(smt.stats   49   6589  92418 196826  4003/3791/334    6666/337    34  163   22.42)
ramon: poll                 wall=5.000s usage=4.893s mem=23948KiB load=1.00 rootload=1.00
(smt.stats   50   6750  94862 200209  4300/3837/334    6843/343    34  163   22.63)
ramon: poll                 wall=6.000s usage=5.893s mem=23972KiB load=1.00 rootload=1.00
(smt.stats   51   6927  99008 206560  4517/4185/334    7017/346    34  163   22.63)
ramon: poll                 wall=7.000s usage=6.892s mem=24124KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7121 102189 211190  4667/4337/337    7212/394    35  175   22.82)
ramon: poll                 wall=8.000s usage=7.892s mem=24264KiB load=1.00 rootload=1.00
(smt.stats   53   7334 105172 218447  5054/4576/337    7439/400    35  175   22.92)
ramon: poll                 wall=9.000s usage=8.892s mem=24380KiB load=1.00 rootload=1.00
(smt.stats   54   7568 109305 228958  5445/5247/340    7698/437    36  177   23.11)
(smt.stats   55   7669 111496 232390  5451/5253/340    7808/437    36  177   23.11)
(smt.stats   56   7780 117843 239324  5452/5254/340    7918/443    37  181   23.11)
(smt.stats   57   7902 122927 246618  5468/5269/340    8037/443    37  181   23.11)
(smt.stats   58   8036 128498 252396  5477/5279/340    8174/443    37  181   23.11)
(smt.stats   59   8183 133181 257280  5492/5284/340    8322/443    37  181   23.11)
(smt.stats   60   8344 138317 264006  5518/5320/340    8481/443    37  181   23.11)
(smt.stats   61   8521 142576 272363  5545/5339/340    8643/443    37  181   23.11)
ramon: poll                 wall=10.000s usage=9.892s mem=24600KiB load=1.00 rootload=1.00
(smt.stats   62   8715 148211 280657  5802/5352/340    8864/445    37  181   23.30)
ramon: poll                 wall=11.000s usage=10.892s mem=24804KiB load=1.00 rootload=1.00
(smt.stats   63   8928 151555 285439  6245/5628/340    9117/445    37  181   23.49)
(smt.stats   64   9162 156435 291262  6419/6078/340    9352/452    37  181   23.58)
ramon: poll                 wall=12.000s usage=11.891s mem=24960KiB load=1.00 rootload=1.00
(smt.stats   65   9419 164551 299314  6636/6312/340    9629/458    37  181   23.68)
(smt.stats   66   9520 166552 300949  6741/6475/340    9743/463    37  181   23.68)
ramon: poll                 wall=13.000s usage=12.891s mem=25104KiB load=1.00 rootload=1.00
(smt.stats   67   9631 169621 304346  6882/6617/340    9857/470    37  181   23.78)
ramon: poll                 wall=14.002s usage=13.892s mem=25224KiB load=1.00 rootload=1.00
(smt.stats   68   9753 172421 306330  7043/6737/340    9980/473    37  181   23.87)
ramon: poll                 wall=15.000s usage=14.890s mem=25492KiB load=1.00 rootload=1.00
(smt.stats   69   9887 175468 309072  7301/6942/340   10130/486    37  181   23.97)
ramon: poll                 wall=16.000s usage=15.889s mem=25544KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10034 178779 314425  7470/7215/340   10301/491    37  181   24.06)
(smt.stats   71  10195 184546 323478  7671/7297/340   10492/498    37  181   24.06)
ramon: poll                 wall=17.002s usage=16.891s mem=25596KiB load=1.00 rootload=1.01
ramon: poll                 wall=18.000s usage=17.889s mem=25772KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10372 186772 330062  7997/7609/340   10691/505    37  181   24.35)
ramon: poll                 wall=19.000s usage=18.889s mem=26108KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.889s mem=26124KiB load=1.00 rootload=1.00
(smt.stats   73  10566 189841 334763  8503/8085/340   10904/512    37  181   24.44)
ramon: end                  Tue Dec 24 15:07:39 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.973s
ramon: group.utime          19.953s
ramon: group.stime          0.020s
ramon: group.mempeak        26380KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              0.99
