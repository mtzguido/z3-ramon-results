ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:25:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         14035 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1169
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libsmbclient_vc1225271.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1357807
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
tabu (if (= (extract[1:1] v489464196) bv[0:1]) (if (and #27386 #27387) bv[0:64] (if #27391 #16963 #20541)) (concat (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) (extract[7:7] v517436444) ...))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw     100      6   108.253     10284         0          0          288      866)
(sat.ddfw      84     13   83.6581     20072         0          1          222     1023)
(sat.ddfw      81     52   124.776     40161         0          2          234     1360)
(sat.ddfw      66      5   130.526     70182         0          3          239     1704)
(sat.ddfw      43    146   120.713    110138         0          4          162     2084)
(sat.ddfw      43    351    108.13    160094         0          5          144     2459)
(sat.ddfw      37    119    96.467    220000         1          6           68     3728)
(sat.ddfw      37    397    86.741    290000         1          7          138     4280)
ramon: poll                 wall=1.002s usage=1.000s mem=24800KiB load=1.00 rootload=1.00
(sat.ddfw      37    682   79.5045    370061         2          8          147     5724)
(sat.ddfw      37   1025   72.0016    460135         3          9          161     6766)
(sat.ddfw      17    410   63.2633    560091         3         10          110     7757)
(sat.ddfw      17    918   58.5599    670125         4         11          132     8403)
ramon: poll                 wall=2.000s usage=1.987s mem=24656KiB load=0.99 rootload=0.98
(sat.ddfw      17   1025   53.7832    790169         5         12          179     9657)
(sat.ddfw      17   1025   50.3243    920207         6         13          165    11734)
(sat.ddfw      17   1025   48.1035   1060092         7         14          136    13598)
ramon: poll                 wall=3.000s usage=2.987s mem=24912KiB load=1.00 rootload=1.00
(sat.ddfw      17   1025    45.831   1210097         7         15          163    14440)
(sat.ddfw      17   1025   43.8775   1370162         7         16          156    15474)
ramon: poll                 wall=4.000s usage=3.987s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw      17   1025   41.6227   1540066         9         17          212    16776)
(sat.ddfw      17   1025   39.6939   1720078        10         18          154    18744)
ramon: poll                 wall=5.000s usage=4.984s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw      17   1025   37.8997   1910069        12         19          136    20506)
(sat.ddfw       6    349   35.5694   2110040        13         20          102    22130)
ramon: poll                 wall=6.000s usage=5.984s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw       6   1025   33.2116   2320004        14         21          164    23669)
ramon: poll                 wall=7.000s usage=6.982s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw       6   1025   31.2716   2540000        14         22           99    25680)
(sat.ddfw       6   1025   29.9051   2770000        15         23           98    27631)
ramon: poll                 wall=8.002s usage=7.986s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw       6   1025   28.5307   3010000        15         24           69    29235)
ramon: poll                 wall=9.000s usage=8.981s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw       6   1025   26.9251   3260000        15         25           66    30478)
ramon: poll                 wall=10.000s usage=9.976s mem=24660KiB load=0.99 rootload=0.99
(sat.ddfw       4    337   24.9449   3520001        17         26           73    31887)
ramon: poll                 wall=11.000s usage=10.976s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   22.6374   3790042        20         27          108    32869)
ramon: poll                 wall=12.000s usage=11.975s mem=24660KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.962s mem=24660KiB load=0.99 rootload=0.99
(sat.ddfw       1   1025   21.5207   4070069        22         28           94    34684)
(sat.ddfw       1   1025   20.8103   4360060        22         29          148    36377)
ramon: poll                 wall=14.000s usage=13.947s mem=24660KiB load=0.99 rootload=0.98
ramon: poll                 wall=15.000s usage=14.946s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   20.0214   4660000        25         30           95    37889)
ramon: poll                 wall=16.000s usage=15.945s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   19.2415   4970000        27         31           33    39691)
ramon: poll                 wall=17.000s usage=16.944s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   18.3338   5290017        29         32          114    41179)
ramon: poll                 wall=18.003s usage=17.945s mem=24660KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   17.7115   5620000        30         33            4    42448)
ramon: poll                 wall=19.000s usage=18.938s mem=24660KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.937s mem=24660KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:25:41 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.000s
ramon: group.total          19.944s
ramon: group.utime          19.944s
ramon: group.stime          0.000s
ramon: group.mempeak        24916KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
