ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:32:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39844 MiB
ramon: sys.mem.avail        61377 MiB
ramon: sys.nprocs           1328
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mJdH208jNhk8.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3956875
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   258/258     0/0  64       0    18.51   0.01)
(sat.stats    115    981    0   258/258   115/40  64       0    18.89   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 349 :time 0.00)
(sat.stats    115    981    0   258/258   115/40  64       0    18.89   0.01)
(sat.stats    115    981    0   258/258   115/40  64       0    18.89   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 418618.89 :time 0.00)
(sat.stats    115    981    0   260/260    51/39  64       0    18.89   0.01)
(sat.stats    130   1150    1   260/260    66/52  64       0    18.89   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    133   1194    2   260/260    69/53  64       0    18.89   0.01)
(sat.stats    136   1248    3   260/260    72/54  64       0    18.89   0.01)
(sat.stats    140   1313    4   260/260    76/58  64       0    18.89   0.01)
(sat.stats    178   2297    5   260/260   114/89  64       0    18.99   0.01)
(sat.stats    181   2363    6   260/260   117/89  64       0    18.99   0.01)
(sat.stats    184   2408    7   260/260   120/89  64       0    18.99   0.01)
(sat.stats    187   2452    8   260/260   123/89  64       0    18.99   0.01)
(sat.stats    190   2503    9   260/260   126/89  64       0    18.99   0.01)
(sat.stats    193   2564   10   260/260   129/89  64       0    18.99   0.01)
(sat.stats    196   2622   11   260/260   132/89  64       0    18.99   0.01)
(sat.stats    199   2681   12   260/260   135/89  64       0    18.99   0.02)
(sat.stats    211   2897   16   260/260   147/97  64       0    18.99   0.02)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    349   6133   24   262/262   285/182  64       0    19.29   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2770 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4858 :time 0.00)
(sat.stats    473   9116   42   269/269   408/205  71       0    19.87   0.10)
lshr: (lshr[63] (bv2int %0) (+ 63 (* 9223372036854775807 #66))) 0 := 2316977 >>l 37
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 0&1879048192
lshr: (lshr[64] (mod (div #53 2) 4611686018427387904) (mod (+ 62 #758 #759) 64)) 9223372036854775809 := 575360 >>l 36
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 1 := 1&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 67096348 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 67108856 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 346576 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 58636160 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 6315552 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 4821824 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 7860992 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 2931200 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 13189120 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 2048 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 1024 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 12288 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 8192 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 33980416 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 28180480 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 65536 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 57933824 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 45088768 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 524288 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 14680064 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 16777216 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 4194304 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 8388608 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 33554432 := 67108863&1879048192
 (sat-cleaner :elim-literals 7 :elim-clauses 2 :cost 8073 :time 0.00)
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 2 := 67108863&1879048192
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 11465 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 60084 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 65474 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 8 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 284368 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 430528 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 32 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 140928 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 3808768 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 256 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 673792 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 1024 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 54231040 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 4096 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 24576 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 16384 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 47710208 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 458752 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 393216 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 262144 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 8388608 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 1048576 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 6291456 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 4194304 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 33554432 := 1879048192&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 67108863&1879048192
band: (band[63] (if (= #627 63) 258254417031933722624 (if #629 129127208515966861312 #753)) (lshr[64] (mod #473 4611686018427387904) (mod #760 64))) 16777216 := 1879048192&67108863
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 12706 :time 0.00)
(sat.stats    711  12880   56   952/949   638/235 407       0    22.57   0.25)
 (sat-cleaner :elim-literals 95 :elim-clauses 1 :cost 14251 :time 0.00)
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 0&28
lshr: (lshr[64] (mod (div #53 2) 4611686018427387904) (mod (+ 62 #758 #759) 64)) 2 := 206158430142 >>l 62
 (sat-cleaner :elim-literals 45 :elim-clauses 8 :cost 14708 :time 0.00)
lshr: (lshr[63] (bv2int %0) (+ 63 (* 9223372036854775807 #66))) 0 := 9223371761979144673 >>l 62
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 1&56
lshr: (lshr[64] (mod (div #53 2) 4611686018427387904) (mod (+ 62 #758 #759) 64)) 67108862 := 4611685880988566919 >>l 61
 (sat-cleaner :elim-literals 3 :elim-clauses 3 :cost 21482 :time 0.00)
lshr: (lshr[63] (bv2int %0) (+ 63 (* 9223372036854775807 #66))) 0 := 4611690141595992065 >>l 61
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #491)) (if (= #83 62) 129127208515966861312 (if #495 64563604257983430656 #617))) 0 := 0&112
lshr: (lshr[64] (mod (div #53 2) 4611686018427387904) (mod (+ 62 #758 #759) 64)) 1 := 137440940081 >>l 60
(sat.stats   1098  54343  145  7769/7736  1012/373 480       0    25.17   0.74)
ramon: poll                 wall=1.000s usage=0.894s mem=27380KiB load=0.89 rootload=0.89
ramon: poll                 wall=2.000s usage=1.893s mem=30852KiB load=1.00 rootload=0.99
(sat.stats   1983 105082  241 14256/14223  2101/966 480       0    29.59   1.90)
ramon: poll                 wall=3.000s usage=2.892s mem=37456KiB load=1.00 rootload=0.99
(sat.stats   3200 130545  295 41498/41465  4073/1753 480       0    38.64   2.94)
ramon: poll                 wall=4.000s usage=3.891s mem=44516KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.891s mem=48012KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.891s mem=51060KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.890s mem=53988KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.890s mem=64372KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.000s usage=8.889s mem=66240KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.885s mem=67856KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.885s mem=69656KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.885s mem=70748KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.884s mem=72576KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.883s mem=73700KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.005s usage=14.887s mem=74800KiB load=1.00 rootload=1.01
ramon: poll                 wall=16.000s usage=15.882s mem=76172KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.882s mem=77232KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.882s mem=78816KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.882s mem=79712KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.881s mem=80804KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:33:08 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.040s
ramon: group.total          19.988s
ramon: group.utime          19.944s
ramon: group.stime          0.044s
ramon: group.mempeak        81060KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.107s
ramon: loadavg              0.99
