ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:52:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29797 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/BtEfWLoopjsl.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             305736
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   224/224     0/0  67       0    18.54   0.00)
(sat.stats    101    765    0   224/224   101/28  67       0    18.85   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 310 :time 0.00)
(sat.stats    101    765    0   224/224   101/28  67       0    18.85   0.01)
(sat.stats    101    765    0   224/224   101/28  67       0    18.85   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 353018.85 :time 0.00)
(sat.stats    101    765    0   226/226    37/27  67       0    18.85   0.01)
(sat.stats    196   2445    1   226/226   132/113  67       0    18.95   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    199   2493    2   226/226   135/113  67       0    18.95   0.01)
(sat.stats    202   2534    3   226/226   138/113  67       0    18.95   0.01)
(sat.stats    205   2583    4   226/226   141/113  67       0    18.95   0.01)
(sat.stats    208   2606    5   226/226   144/113  67       0    18.95   0.01)
(sat.stats    211   2629    6   226/226   147/115  67       0    18.95   0.01)
(sat.stats    214   2646    7   226/226   150/117  67       0    18.95   0.01)
(sat.stats    217   2676    8   226/226   153/117  67       0    18.95   0.01)
(sat.stats    220   2737    9   226/226   156/120  67       0    18.95   0.01)
(sat.stats    223   2792   10   226/226   159/123  67       0    18.95   0.01)
(sat.stats    226   2844   11   226/226   162/126  67       0    18.95   0.01)
(sat.stats    229   2899   12   226/226   165/129  67       0    18.95   0.01)
(sat.stats    232   2953   13   226/226   168/132  67       0    18.95   0.01)
(sat.stats    316   4739   41   231/231   252/159  67       0    19.54   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1331 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1943 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    530   7363   69  1691/1691   464/178  78       0    20.96   0.74)
ramon: poll                 wall=1.000s usage=0.939s mem=22208KiB load=0.94 rootload=0.93
 (sat-cleaner :elim-literals 14 :elim-clauses 0 :cost 5658 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7735 :time 0.00)
ramon: poll                 wall=2.000s usage=1.939s mem=22720KiB load=1.00 rootload=1.00
(sat.stats   1200  20118  101  7842/7842  1192/258  82       0    21.60   2.37)
(sat.stats   1203  20125  102  7842/7842  1195/258  82       0    21.60   2.37)
ramon: poll                 wall=3.000s usage=2.939s mem=23232KiB load=1.00 rootload=1.00
(sat.stats   1830  30140  150 10239/10239  1874/513  82       0    22.48   3.34)
ramon: poll                 wall=4.000s usage=3.939s mem=24000KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.937s mem=24660KiB load=1.00 rootload=1.00
(sat.stats   2589  53040  281 15739/15739  2752/634  82       0    24.20   5.58)
 (sat-cleaner :elim-literals 59 :elim-clauses 4 :cost 31657 :time 0.00)
ramon: poll                 wall=6.000s usage=5.935s mem=25424KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 105 :elim-clauses 0 :cost 34551 :time 0.00)
lshr: (lshr[46] (bv2int %0) (+ 46 (* 70368744177663 #62))) 70368156070507 := 70364449091720 >>l 22
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16774904 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16776183 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16776150 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16776176 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16776160 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16776128 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16774400 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16775296 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16773632 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16774144 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16775168 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16773120 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 16384 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 8192 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 4063232 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 98304 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 65536 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 262144 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 524288 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 1048576 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 2097152 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 4194304 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 8388608 := 16776191&70368727400448
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
lshr: (lshr[64] (* 131072 (bv2int %0)) (mod (+ 63 #564 #568) 64)) 9222740917235325274 := 9222809071349923840 >>l 39
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 12085590 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 12171913 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 16728272 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 16776136 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 12058532 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 12058560 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 12508320 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 15642240 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 15003392 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 14267904 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 14435328 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 12075008 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 15040512 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 12058624 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 12582912 := 70368727400448&16776191
ramon: poll                 wall=7.000s usage=6.934s mem=27364KiB load=1.00 rootload=0.99
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 11993088 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 11534336 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 12288 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 2048 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 8192 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 393216 := 70368727400448&16776191
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 262144 := 70368727400448&16776191
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 37250 :time 0.00)
band: (band[46] (lshr[46] (bv2int %0) (+ 46 #461)) (if (= #67 45) 2475880078570725365426159616 (if #465 1237940039285362682713079808 #553))) 0 := 16776191&70368727400448
band: (band[46] (if (= #281 63) 649037107316844230194275186376704 (if #439 324518553658422115097137593188352 #436)) (lshr[64] (* 131072 #61) (mod #571 64))) 2097152 := 70368727400448&16776191
(sat.stats   3707  77563  368 27925/27922  4175/832 372       0    27.78   7.83)
ramon: poll                 wall=8.000s usage=7.932s mem=29248KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.931s mem=29732KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.929s mem=30240KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc         :time )
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   5428 101164  538 36667/36664  5266/1045 372       0    29.39  10.80)
ramon: poll                 wall=11.000s usage=10.927s mem=30992KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.926s mem=31728KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.924s mem=32508KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.921s mem=33364KiB load=1.00 rootload=1.00
(sat.stats   8150 125155  641 47652/47649  6779/1108 372       0    33.53  14.82)
ramon: poll                 wall=15.001s usage=14.920s mem=33964KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.001s usage=15.918s mem=34696KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.917s mem=35544KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.915s mem=36352KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.001s usage=18.913s mem=36992KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.910s mem=37732KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:52:35 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.000s
ramon: group.total          19.977s
ramon: group.utime          19.969s
ramon: group.stime          0.008s
ramon: group.mempeak        37732KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.066s
ramon: loadavg              1.00
