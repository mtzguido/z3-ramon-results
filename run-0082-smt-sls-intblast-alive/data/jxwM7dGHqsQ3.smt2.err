ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:59:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27520 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/jxwM7dGHqsQ3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             905351
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3881   1201  1217/1097/97      97/8     3   14   51.86)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   131.579     10000        49          0            1        2)
(sat.ddfw       1      1   62.8994     20001        98          1            1        3)
(smt.stats    1    202   4961   1678  1689/1425/97     200/24     3   14   52.15)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 1 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 1 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 1 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 1 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
(smt.stats    2    313   6763   3842  2007/1640/100     322/64     5   19   52.35)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8587837444 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&2147483648
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934597 << 32
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&2147483648
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934597 << 32
(smt.stats    3    414   7604   4857  2290/2077/119     436/78     7   25   52.46)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 4294967298&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 4503599627370495&2048
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 13510798882111487 := 4294967297 << 12
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 4294967296&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2047 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2046 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2044 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 8 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 16 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 32 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 128 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1024 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 2097154&2048
(sat.ddfw       1      1   60.7903     40001       196          2            1        5)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 4194306&2048
(smt.stats    4    525   8948   6951  2554/2317/178     530/99    10   53   52.85)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 4194432&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 4194306&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 6291968&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 315 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 314 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 6291712&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 6287360&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 6289408&2048
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 9007199261030400 := 6289407 << 12
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1024 := 17592186048512&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1024 := 17592186048512&2048
(smt.stats    5    647  10963   9271  2614/2359/205     679/125    11   63   52.95)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  12625  12098  2703/2440/210     786/128    11   63   52.95)
(sat.ddfw       1      1   50.5051     70001       343          3            1        8)
(smt.stats    7    859  15124  15397  2746/2482/212     908/145    12   65   53.14)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&2048
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 0 << 12
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&2048
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 0 << 12
(smt.stats    8    981  17757  19755  2901/2557/221    1036/159    14   76   53.24)
(smt.stats    9   1115  21408  23671  2968/2707/229    1139/185    16  102   53.33)
(smt.stats   10   1216  24414  26798  2979/2711/229    1240/197    17  102   53.33)
ramon: poll                 wall=1.003s usage=0.935s mem=55660KiB load=0.93 rootload=0.91
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 4194305&1024
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 4194305 := 4194305 << 11
(sat.ddfw       1      1   42.1496    110001       539          4            1       12)
(smt.stats   11   1327  26243  29679  3055/2755/241    1346/205    18  111   53.53)
(sat.ddfw       1      1   35.8416    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  27814  31786  3296/2874/241    1495/212    18  111   53.62)
(smt.stats   13   1583  31705  37738  3350/3087/241    1615/230    19  114   53.62)
(smt.stats   14   1730  38044  47792  3369/3090/241    1782/231    19  114   53.72)
(sat.ddfw       1      1   31.2668    220001      1078          6            1       23)
ramon: poll                 wall=2.000s usage=1.932s mem=55916KiB load=1.00 rootload=1.00
(smt.stats   15   1831  41426  53811  3384/3121/241    1907/231    19  114   53.82)
(smt.stats   16   1942  44808  59940  3393/3130/243    2046/268    20  121   53.82)
(smt.stats   17   2064  46138  61886  3399/3136/243    2165/268    20  121   53.82)
(smt.stats   18   2198  49715  68436  3454/3183/244    2307/299    21  122   53.91)
(smt.stats   19   2345  55056  77794  3524/3209/244    2464/300    21  122   54.01)
(sat.ddfw       1      1    27.668    290001      1421          7            1       30)
(smt.stats   20   2506  57975  85503  3571/3301/246    2642/313    22  124   54.01)
(smt.stats   21   2607  59118  88315  3608/3313/247    2758/314    22  124   54.23)
(smt.stats   22   2718  60662  95537  3670/3381/247    2894/348    23  125   54.23)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 25 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 24 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 16 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 9 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 8 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 32 := 32&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 32 := 32&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 6291519&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 6291520&64
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6291520 := 0 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 4294967488&64
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 4294967488 := 0 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 4294967488&64
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 4294967488 := 0 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&64
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 0 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&64
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 0 << 7
(smt.stats   23   2840  63735 104320  3745/3416/260    3034/370    24  132   54.42)
ramon: poll                 wall=3.000s usage=2.932s mem=56684KiB load=1.00 rootload=1.00
(smt.stats   24   2974  65549 109971  3770/3492/287    3178/380    25  143   54.72)
(smt.stats   25   3121  72202 125433  3803/3512/291    3338/380    25  143   54.72)
(sat.ddfw       1      1   24.6837    370001      1813          8            1       38)
(smt.stats   26   3282  76330 136894  3877/3527/291    3500/402    26  153   54.82)
ramon: poll                 wall=4.003s usage=3.939s mem=57196KiB load=1.00 rootload=1.01
(sat.ddfw       1      1    22.338    460001      2254          9            1       47)
(sat.ddfw       1      1   20.4082    560001      2745         10            1       57)
ramon: poll                 wall=5.000s usage=4.935s mem=57196KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   18.7489    670001      3284         11            1       68)
ramon: poll                 wall=6.000s usage=5.937s mem=57328KiB load=1.00 rootload=1.01
ramon: poll                 wall=7.000s usage=6.937s mem=57584KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    17.321    790001      3872         12            1       80)
(smt.stats   27   3459  77537 139474  4219/3638/291    3709/406    26  153   55.01)
(smt.stats   28   3560  79112 146111  4242/3952/291    3843/406    26  153   55.01)
(smt.stats   29   3671  81795 152381  4322/3963/293    3984/457    27  157   55.10)
(smt.stats   30   3793  83208 157099  4433/4044/293    4125/458    27  157   55.10)
(smt.stats   31   3927  85618 165919  4523/4190/293    4292/459    27  157   55.10)
ramon: poll                 wall=8.000s usage=7.938s mem=57584KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  86987 170087  4556/4252/293    4460/460    27  157   55.10)
(sat.ddfw       1      1    16.111    920001      4509         13            1       93)
(smt.stats   33   4235  93083 180494  4578/4280/293    4658/461    27  157   55.36)
(smt.stats   34   4412  95112 189181  4651/4368/300    4897/622    28  169   55.36)
(smt.stats   35   4606 100644 202924  4658/4375/301    5110/622    28  169   55.36)
(smt.stats   36   4707 104822 213426  4664/4377/301    5218/636    29  171   55.36)
(smt.stats   37   4818 107077 223919  4675/4385/301    5347/636    29  171   55.36)
(smt.stats   38   4940 109838 234059  4684/4401/302    5519/665    30  173   55.46)
(smt.delete-inactive-clauses  :num-deleted-clauses 142)
(smt.stats   39   5074 112229 241689  4697/4402/302    5526/666    30  173   55.46)
(smt.stats   40   5221 114673 254824  4715/4421/302    5676/666    30  173   55.46)
ramon: poll                 wall=9.000s usage=9.168s mem=57780KiB load=1.23 rootload=1.23
(smt.stats   41   5382 118088 269752  4724/4436/302    5842/666    30  173   55.46)
(sat.ddfw       1      1   15.4577   1060001      5196         14            1      108)
(smt.stats   42   5559 122123 286927  4738/4452/302    6028/666    30  173   55.46)
(smt.stats   43   5753 125472 302939  4745/4462/302    6230/666    30  173   55.56)
(smt.stats   44   5966 128682 316245  4754/4471/302    6505/666    30  173   55.56)
(smt.stats   45   6067 131895 324264  4755/4472/302    6610/666    30  173   55.56)
(smt.stats   46   6178 133796 334366  4760/4475/303    6736/719    31  182   55.56)
(smt.stats   47   6300 135510 346793  4762/4479/303    6858/719    31  182   55.56)
(smt.stats   48   6434 137436 360327  4765/4481/306    6990/731    32  188   55.56)
(smt.stats   49   6581 139516 373126  4785/4499/308    7126/733    33  205   56.07)
ramon: poll                 wall=10.000s usage=10.168s mem=58096KiB load=1.00 rootload=1.00
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1 := 6&65536
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 6&65536
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6 := 0 << 17
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 6&65536
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6 := 0 << 17
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 6&65536
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6 := 0 << 17
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 6&65536
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6 := 0 << 17
(smt.stats   50   6742 143258 392789  4815/4506/308    7297/734    33  205   56.17)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1 := 316659650790847&256
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 316659650790847&256
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 316659650790847&256
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 20615843034496&256
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 20615843049860&256
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 20615843049860 := 157286400 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 20615843022081&256
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 20615843022081 := 157286400 << 9
(smt.stats   51   6919 145118 399122  5074/4558/313    7631/747    34  206   56.26)
(sat.ddfw       1      1   14.4397   1210001      5931         15            1      123)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 149593 411819  5124/4826/323    8000/747    34  206   56.36)
(smt.stats   53   7326 155778 446948  5126/4834/323    8239/853    35  208   56.36)
(smt.stats   54   7560 157998 467096  5155/4857/324    8523/919    36  215   56.36)
(smt.stats   55   7661 158790 480419  5165/4866/324    8622/920    36  215   56.46)
(smt.stats   56   7772 159408 489719  5195/4892/324    8776/920    36  215   56.55)
ramon: poll                 wall=11.000s usage=11.169s mem=58768KiB load=1.00 rootload=0.99
(smt.stats   57   7894 160585 508178  5195/4892/324    8899/920    36  215   56.55)
(smt.stats   58   8028 161410 515529  5241/4927/331    9060/968    37  226   56.65)
(smt.stats   59   8175 164897 528615  5247/4931/331    9218/968    37  226   56.74)
(smt.stats   60   8336 171955 564972  5254/4940/332    9419/993    38  228   56.74)
(sat.ddfw       1      1   13.5559   1370001      6715         16            1      139)
ramon: poll                 wall=12.000s usage=12.169s mem=59536KiB load=1.00 rootload=1.00
(smt.stats   61   8513 176997 586469  5312/4947/332    9633/994    38  228   56.84)
(smt.stats   62   8707 186672 616632  5314/5000/332    9856/994    38  228   56.84)
(smt.stats   63   8920 191788 646251  5355/5029/332   10052/995    38  228   57.03)
(smt.stats   64   9154 196211 664020  5396/5060/332   10316/997    38  228   57.03)
ramon: poll                 wall=13.000s usage=13.168s mem=59540KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7762   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=14.167s mem=59540KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.0732   1720001      8431         18            1      174)
ramon: poll                 wall=15.000s usage=15.168s mem=59540KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=16.166s mem=59456KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.4458   1910001      9362         19            1      193)
ramon: poll                 wall=17.000s usage=17.166s mem=59456KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=18.304s mem=59476KiB load=1.14 rootload=1.14
(sat.ddfw       1      1   11.0546   2110001     10343         20            1      214)
ramon: poll                 wall=19.000s usage=19.302s mem=59732KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=20.300s mem=59732KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5137   2320001     11372         21            1      235)
ramon: end                  Fri Nov  1 23:00:19 2024
ramon: root.execname        z3
ramon: root.utime           20.350s
ramon: root.stime           0.020s
ramon: group.total          20.381s
ramon: group.utime          20.357s
ramon: group.stime          0.024s
ramon: group.mempeak        59988KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              1.01
