ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:51:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29123 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/A30efBKPJFOC.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             671924
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 17179869181 := 17179869180 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 17179869181 := 17179869180 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 18446744073709551614 := 17179869176 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 54975581391 := 6871947674 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 54975581391 := 6871947674 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 17179869182 := 17179869180 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 22906492245 := 11453246122 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 22906492245 := 11453246122 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 22906492245 := 11453246122 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 7 := 2 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 7 := 2 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 23 := 6 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 23 := 6 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 23 := 6 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 23 := 6 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 5 := 2 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 34359738361 := 17179869180 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 34359738361 := 17179869180 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 274877906881 := 17179869180 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 274877906944 := 17179869180 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 511 := 2 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 127 := 2 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 127 := 2 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 127 := 2 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 127 := 2 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 127 := 2 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 511 := 2 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 33 := 2 << 5
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 65 := 1 << 6
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 65 := 1 << 6
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 65 := 1 << 6
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 65 := 1 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 511 := 2 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 511 := 2 << 5
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 2045222531 := 2045222530 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 62 := 2 << 5
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   86.2069     10000        49          0            1        2)
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 8589934591 := 0 << 11
(smt.stats    0    101    761    724   195/170/136      74/13    15   27   51.37)
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 8589934591 := 0 << 11
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 8589934591 := 0 << 11
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
(sat.ddfw       1      1   43.6725     20001        98          1            1        3)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 2 := 0 << 31
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 13
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 13
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 13
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 13
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 12
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 12
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 14
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 14
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 14
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 15
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 15
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 15
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 16
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 16
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 16
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 17
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 17
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 17
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 18
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 18
(smt.stats    1    202   1488   3203   711/273/140     211/31    15   27   52.36)
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 32
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 32
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 31
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 31
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 31
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 9
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 7
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 8
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 8
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 8
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 18
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 10
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 10
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 10
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 10
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 9
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 9
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 4
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 4
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 4
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 4
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 1
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 1
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 1
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 2
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 2
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 2
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 3
(smt.stats    2    313   2208   5511  1028/653/280     334/49    16   59   52.59)
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 3
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 5
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 5
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 6
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 19
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 19
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 19
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 20
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 20
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 20
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 20
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 21
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 22
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 22
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 22
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 22
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 27
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 27
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 27
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 27
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 29
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 29
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 29
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 29
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 30
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 30
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 26
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 26
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 26
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 23
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 23
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 23
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 23
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 24
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 24
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 24
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 25
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 25
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 28
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 32
(smt.stats    3    417   2915   7243  1587/1295/393     460/74    18   82   53.77)
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 21
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #107))) 1 := 0 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #151 #120 #144) 64)) 1 := 0 << 32
(smt.stats    4    528   4322   9600  2177/1832/413     674/83    20  108   54.35)
(sat.ddfw       1      1   43.4783     40001       196          2            1        5)
(sat.ddfw       1      1   37.6412     70001       343          3            1        8)
ramon: poll                 wall=1.004s usage=1.013s mem=57532KiB load=1.01 rootload=0.99
(smt.stats    5    650  10350  19580  2177/1837/446     829/110    24  139   55.11)
(sat.ddfw       1      1        32    110001       539          4            1       12)
(sat.ddfw       1      1    27.472    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=2.013s mem=57868KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.9908    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=3.013s mem=58452KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.2379    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=4.016s mem=58712KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    19.034    370001      1813          8            1       38)
ramon: poll                 wall=5.004s usage=5.070s mem=58792KiB load=1.05 rootload=1.06
(sat.ddfw       1      1   17.2348    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    751  18760  32904  2213/1859/457     969/128    28  149   56.45)
ramon: poll                 wall=6.004s usage=6.076s mem=59140KiB load=1.01 rootload=1.00
(sat.ddfw       1      1   15.7257    560001      2745         10            1       57)
ramon: poll                 wall=7.004s usage=7.161s mem=59564KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   14.1643    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=8.053s mem=59620KiB load=0.90 rootload=0.89
(smt.stats    7    862  28168  44353  2267/1896/460    1200/156    30  151   57.12)
ramon: poll                 wall=9.004s usage=9.003s mem=59700KiB load=0.95 rootload=0.95
(sat.ddfw       1      1   12.9506    790001      3872         12            1       80)
(smt.stats    8    984  36800  56191  2362/2024/488    1377/186    31  155   57.22)
ramon: poll                 wall=10.000s usage=10.035s mem=60048KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   11.9882    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.983s mem=60336KiB load=0.95 rootload=0.94
ramon: poll                 wall=12.000s usage=11.948s mem=60476KiB load=0.96 rootload=0.97
(sat.ddfw       1      1   11.1598   1060001      5196         14            1      108)
ramon: poll                 wall=13.004s usage=12.887s mem=60476KiB load=0.94 rootload=0.94
(smt.stats    9   1118  42995  62182  2451/2045/489    1495/209    33  185   57.89)
ramon: poll                 wall=14.004s usage=13.871s mem=60480KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   10.4756   1210001      5931         15            1      123)
ramon: poll                 wall=15.000s usage=14.798s mem=60488KiB load=0.93 rootload=0.93
ramon: poll                 wall=16.000s usage=15.719s mem=60496KiB load=0.92 rootload=0.92
(sat.ddfw       1      1   9.85464   1370001      6715         16            1      139)
ramon: poll                 wall=17.000s usage=16.703s mem=60816KiB load=0.98 rootload=0.98
(smt.stats   10   1219  50646  71809  2672/2226/489    1645/219    33  185   57.99)
ramon: poll                 wall=18.000s usage=17.677s mem=60908KiB load=0.97 rootload=0.98
(sat.ddfw       1      1   9.25926   1540001      7549         17            1      156)
ramon: poll                 wall=19.000s usage=18.611s mem=60720KiB load=0.93 rootload=0.93
ramon: poll                 wall=20.000s usage=19.575s mem=61236KiB load=0.96 rootload=0.97
ramon: end                  Fri Nov  1 21:51:46 2024
ramon: root.execname        z3
ramon: root.utime           19.620s
ramon: root.stime           0.020s
ramon: group.total          19.650s
ramon: group.utime          19.626s
ramon: group.stime          0.024s
ramon: group.mempeak        61244KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              0.98
