ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:52:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40804 MiB
ramon: sys.mem.avail        61380 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QDqZgd2bkwnT.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3837897
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts     :learned/bin    :gc          :time)
(sat.stats          :decisions   :clauses/bin :units       :memory       )
(sat.stats      0      0    0     4/4     0/0  29       0    17.75   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 72057594037927903 := 72057594037927903 << 1
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 8 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 7 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14 :time 0.00)
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 36028797020316406 := 36028797020316406 << 2
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 1 := 1 << 55
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 2 := 2 << 54
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 3 := 3 << 53
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 53 := 53 << 3
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 52 := 52 << 4
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 51 := 51 << 5
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 8 := 8 << 48
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 5 := 5 << 51
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 4 := 4 << 52
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 6 := 6 << 50
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 7 := 7 << 49
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 32 := 32 << 24
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 31 := 31 << 25
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 30 := 30 << 26
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 29 := 29 << 27
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 28 := 28 << 28
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 527 :time 0.00)
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 9 := 9 << 47
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 10 := 10 << 46
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 11 := 11 << 45
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 27 := 27 << 29
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 24 := 24 << 32
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 26 := 26 << 30
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 16 := 16 << 40
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 18 := 18 << 38
(sat.stats    158   1460    0   804/786   161/34  97       0    18.92   0.22)
 (sat-cleaner :elim-literals 53 :elim-clauses 1 :cost 714 :time 0.00)
(sat.stats    158   1460    0   859/841   160/34 121       0    18.92   0.22)
(sat.stats    158   1460    0   859/841   160/34 121       0    18.92   0.23)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 15 :elim-bin 228 :time 0.00)
 (sat-probing :cost 2420818.92 :time 0.00)
(sat.stats    158   1460    0   223/205   128/9 121       0    18.92   0.23)
(sat.stats    162   1527    1   223/205   149/26 121       0    19.01   0.24)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin    :units         :memory       )
(sat.stats    166   1606    2   223/205   153/26 121       0    19.01   0.25)
(sat.stats    169   1630    3   223/205   156/26 121       0    19.01   0.26)
(sat.stats    172   1716    4   223/205   159/26 121       0    19.01   0.26)
(sat.stats    175   1788    5   223/205   162/26 121       0    19.01   0.26)
(sat.stats    178   1818    6   223/205   165/26 121       0    19.01   0.27)
(sat.stats    181   1905    7   223/205   168/27 121       0    19.01   0.27)
(sat.stats    184   2024    8   231/213   171/27 121       0    19.01   0.28)
(sat.stats    187   2090    9   235/217   175/28 121       0    19.01   0.28)
(sat.stats    190   2145   10   235/217   178/28 121       0    19.01   0.28)
(sat.stats    193   2171   11   235/217   181/29 121       0    19.01   0.29)
(sat.stats    196   2178   12   239/221   184/29 121       0    19.01   0.29)
(sat.stats    210   2391   16   259/241   198/30 121       0    19.01   0.31)
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 3298534883328 := 12 << 44
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 4123168604160 := 15 << 41
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 3848290697216 := 14 << 42
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 3573412790272 := 13 << 43
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 6871947673600 := 25 << 31
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 4672924418048 := 17 << 39
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 5222680231936 := 19 << 37
(sat.stats    331   4839   29   704/678   326/46 121       0    19.42   0.56)
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 5497558138880 := 20 << 36
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 6322191859712 := 23 << 33
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 6047313952768 := 22 << 34
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 5772436045824 := 21 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 0 := 36 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 16933596171564190347 := 28 << 41
ramon: poll                 wall=1.000s usage=0.922s mem=20992KiB load=0.92 rootload=0.91
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 48378511622144 := 22 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 422212465065984 := 24 << 43
(sat.stats :conflicts   :restarts       :learned/bin       :gc          :time)
(sat.stats      :decisions    :clauses/bin      :units         :memory       )
(sat.stats    713  14052   31  1215/1182   716/67 121       0    20.00   1.07)
(sat.stats    716  14124   32  1215/1182   719/67 121       0    20.00   1.08)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 598134325510144 := 34 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 8796093022208 := 32 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 23089744183296 := 42 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 25288767438848 := 46 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 24189255811072 := 44 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 21990232555520 := 40 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 20890720927744 := 38 << 36
(sat.stats   1065  24110   75  1715/1680  1077/82 121       0    20.69   1.37)
 (sat-cleaner :elim-literals 12 :elim-clauses 3 :cost 9559 :time 0.00)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 13979173312077496320 := 0 << 55
ramon: poll                 wall=2.000s usage=1.921s mem=22828KiB load=1.00 rootload=1.00
(sat.stats   1715  39494  184  1991/1956  1725/103 189       0    21.65   1.99)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 10859 :time 0.00)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 12 := 12 << 49
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 56294995342131200 := 50 << 6
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 37154696925806592 := 33 << 23
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 45035996273704960 := 40 << 16
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 49539595901075456 := 44 << 12
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 40532396646334464 := 36 << 20
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 52917295621603328 := 47 << 9
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 51791395714760704 := 46 << 10
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 50665495807918080 := 45 << 11
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 46161896180547584 := 41 << 15
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 47287796087390208 := 42 << 14
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 48413695994232832 := 43 << 13
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 55169095435288576 := 49 << 7
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 54043195528445952 := 48 << 8
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 39406496739491840 := 35 << 21
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 38280596832649216 := 34 << 22
ramon: poll                 wall=3.005s usage=2.926s mem=23544KiB load=1.00 rootload=1.00
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 43910096366862336 := 39 << 17
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 41658296553177088 := 37 << 19
shl: (shl[56] (bv2int %0) (+ 56 (* 72057594037927935 #57))) 42784196460019712 := 38 << 18
(sat.stats   2397  63203  234  3107/3056  2423/156 192       0    22.96   3.27)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 16066 :time 0.00)
ramon: poll                 wall=4.000s usage=3.920s mem=24948KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 18788 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 19572 :time 0.00)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 18285740387031056384 := 144115188075855586 << 54
ramon: poll                 wall=5.000s usage=4.920s mem=26916KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.920s mem=26944KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.919s mem=27604KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 21684 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 2 :cost 22682 :time 0.00)
ramon: poll                 wall=8.000s usage=7.919s mem=28020KiB load=1.00 rootload=1.00
(sat.stats   3805 143837  274  8144/8092  3821/293 265       0    26.48   8.04)
 (sat-cleaner :elim-literals 6 :elim-clauses 7 :cost 23146 :time 0.00)
 (sat-cleaner :elim-literals 12 :elim-clauses 6 :cost 23905 :time 0.00)
ramon: poll                 wall=9.000s usage=8.919s mem=31136KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.919s mem=36452KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts       :learned/bin         :gc         :time )
(sat.stats     :decisions     :clauses/bin       :units         :memory       )
(sat.stats   5720 408967  625  8126/8074  4944/385 272       0    35.27  10.81)
ramon: poll                 wall=11.000s usage=10.918s mem=37964KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 17 :elim-clauses 9 :cost 31890 :time 0.00)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 0 := 144115188075855870 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 18446744073575333888 := 144115188075855864 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 18446744073541779456 := 144115188075855862 << 28
ramon: poll                 wall=12.000s usage=11.918s mem=40312KiB load=1.00 rootload=1.00
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 18446744073172680704 := 144115188075855868 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 18446744072904245248 := 144115188075855866 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 0 := 144115188075855860 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 18445970017523597312 := 144115188075855828 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 18445899648779419648 := 144115188075855824 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #91 #93) 64)) 18445934833151508480 := 144115188075855826 << 46
 (sat-cleaner :elim-literals 13 :elim-clauses 14 :cost 38501 :time 0.00)
(sat.stats   8091 652747  877  9165/9111  6250/407 301       0    37.94  12.62)
ramon: poll                 wall=13.000s usage=12.918s mem=47360KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.918s mem=48076KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.917s mem=48392KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.917s mem=48520KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.917s mem=48748KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.005s usage=17.919s mem=48896KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.914s mem=49088KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.906s mem=49608KiB load=0.99 rootload=0.99
ramon: end                  Wed Dec 25 15:53:05 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.972s
ramon: group.utime          19.952s
ramon: group.stime          0.020s
ramon: group.mempeak        53672KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.00
