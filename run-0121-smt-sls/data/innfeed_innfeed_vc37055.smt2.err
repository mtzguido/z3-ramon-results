ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:24:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         17698 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1176
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/innfeed_innfeed_vc37055.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1348423
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
tabu (if (and (bvsle bv[0:64] v25572684) (bvsle bv[0:32] #2350)) (concat (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) (if #1624 #2356 bv[0:1]) ...) v58742756)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1     48   131.605     10002         8          0            4       41)
(sat.ddfw       1     85     66.68     20004        22          1            4       56)
(sat.ddfw       1    114    74.063     40001        43          2            4       98)
(sat.ddfw       1    216   65.0738     70000        77          3            2      141)
(sat.ddfw       1    586      56.5    110002        97          4            4      219)
ramon: poll                 wall=1.000s usage=0.931s mem=18800KiB load=0.93 rootload=0.91
ramon: poll                 wall=2.000s usage=1.931s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.931s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.931s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.931s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.931s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.929s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.004s usage=7.933s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.929s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.928s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.928s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.004s usage=11.930s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.926s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.926s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.926s mem=18800KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.926s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.925s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.925s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.925s mem=18800KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.925s mem=18800KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:24:26 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.997s
ramon: group.utime          19.981s
ramon: group.stime          0.016s
ramon: group.mempeak        19056KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.00
