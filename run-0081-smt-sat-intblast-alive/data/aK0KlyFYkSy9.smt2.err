ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:47:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28634 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aK0KlyFYkSy9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             469316
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   250/250     0/0  64       0    18.51   0.00)
(sat.stats    103    604    0   250/250   103/31  64       0    18.89   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    604    0   250/250   103/31  64       0    18.89   0.01)
(sat.stats    103    604    0   250/250   103/31  64       0    18.89   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 389018.89 :time 0.00)
(sat.stats    103    604    0   252/252    39/30  64       0    18.89   0.01)
(sat.stats    177   1402    1   252/252   113/87  64       0    18.98   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    180   1452    2   252/252   116/87  64       0    18.98   0.01)
(sat.stats    183   1511    3   252/252   119/87  64       0    18.98   0.01)
(sat.stats    186   1556    4   252/252   122/87  64       0    18.98   0.01)
(sat.stats    189   1606    5   252/252   125/87  64       0    18.98   0.01)
(sat.stats    192   1671    6   252/252   128/87  64       0    18.98   0.01)
(sat.stats    195   1747    7   252/252   131/88  64       0    18.98   0.01)
(sat.stats    198   1776    8   252/252   134/91  64       0    18.98   0.01)
(sat.stats    201   1823    9   252/252   137/94  64       0    18.98   0.01)
(sat.stats    204   1892   10   252/252   140/97  64       0    18.98   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    207   1983   11   252/252   143/100  64       0    18.98   0.01)
(sat.stats    338   4389   12   254/254   274/188  64       0    19.18   0.02)
(sat.stats    341   4466   13   254/254   277/188  64       0    19.18   0.02)
(sat.stats    344   4546   14   254/254   280/189  64       0    19.18   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1944 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 4135 :time 0.00)
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #51))) 1 := 1 >>l 58
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 4653 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 0&122
lshr: (lshr[64] (mod (div #50 2) 288230376151711744) (mod (+ 58 #745 #747) 64)) 30 := 30 >>l 57
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 1 := 1&122
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 1&122
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 1 := 122&1
(sat.stats    591  12204   29   388/384   519/296 106       0    20.24   0.14)
 (sat-cleaner :elim-literals 14 :elim-clauses 21 :cost 5832 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 0&61
lshr: (lshr[64] (mod (div #50 2) 288230376151711744) (mod (+ 58 #745 #747) 64)) 576460752303419504 := 511117 >>l 58
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5536 :time 0.00)
(sat.stats    710  23917   50   650/646   595/349 118       0    20.45   0.21)
 (sat-cleaner :elim-literals 23 :elim-clauses 27 :cost 6121 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 6174 :time 0.00)
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #51))) 737 := 1415 >>l 1
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 707&288230376151711744
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 204 := 288230376151711744&707
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 707&288230376151711744
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 2 := 288230376151711744&707
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 707&288230376151711744
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 328 := 288230376151711744&707
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 707&288230376151711744
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 512 := 288230376151711744&707
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 707&288230376151711744
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 176 := 288230376151711744&707
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 707&288230376151711744
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 192 := 288230376151711744&707
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 707&288230376151711744
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 32 := 288230376151711744&707
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 707&288230376151711744
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 384 := 288230376151711744&707
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 707&288230376151711744
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 256 := 288230376151711744&707
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 136 := 707&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 2 := 707&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 4 := 707&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 176 := 707&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 192 := 707&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 32 := 707&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 512 := 707&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 128 := 707&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 256 := 707&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 256 := 471&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 16 := 471&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 8 := 412&288230376151711744
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 4 := 412&288230376151711744
 (sat-cleaner :elim-literals 1 :elim-clauses 3 :cost 6985 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 7162 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats   1175  50949   58  3829/3822   977/425 264       0    22.18   0.61)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 8684 :time 0.00)
(sat.stats   1689  71432  117  5894/5887  1521/750 265       0    22.57   0.92)
ramon: poll                 wall=1.000s usage=0.997s mem=24212KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 15074 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 16006 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 17979 :time 0.00)
lshr: (lshr[59] (bv2int %0) (+ 59 (* 576460752303423487 #51))) 144110996187775278 := 288230376151712310 >>l 23
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 999424&4191888080896
lshr: (lshr[64] (mod (div #50 2) 288230376151711744) (mod (+ 58 #745 #747) 64)) 4191888128311 := 4191888128311 >>l 22
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 744448 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 661504 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 507904 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 823296 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 532480 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 557056 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 655360 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 65536 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 262144 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 524288 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 7960788992 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 5242880 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 2097152 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 4194304 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 5368709120 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 16777216 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 872415232 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 33554432 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 134217728 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 805306368 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 536870912 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 25769803776 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 2147483648 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 4294967296 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 17179869184 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 0 := 34359738374&4191888080896
band: (band[59] (if (= #614 63) 562625694248141324288 (if #616 281312847124070662144 #740)) (lshr[64] (mod #467 288230376151711744) (mod #748 64))) 34359738368 := 4191888080896&34359738374
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 7964672 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 1024 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 62312448 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 181460992 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 22429696 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 339705856 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 720961536 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 23986176 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 4707844096 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 14359199744 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 524288 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 1048576 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 25258098688 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 4194304 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 9042919424 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 24494735360 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 33554432 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 22951231488 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 9932111872 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 7516192768 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 536870912 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 8589934592 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 2147483648 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 4294967296 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 17179869184 := 34359738374&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 34359738368 := 34359738374&4191888080896
ramon: poll                 wall=2.000s usage=1.995s mem=28568KiB load=1.00 rootload=1.00
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 34357271584 := 68719476735&4191888080896
ramon: poll                 wall=3.000s usage=2.992s mem=30876KiB load=1.00 rootload=1.00
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 34356230144 := 68719476735&4191888080896
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 34356146176 := 68719476735&4191888080896
ramon: poll                 wall=4.000s usage=3.990s mem=34140KiB load=1.00 rootload=0.99
band: (band[59] (lshr[59] (bv2int %0) (+ 59 #485)) (if (= #81 58) 17582052945254416384 (if #489 8791026472627208192 #603))) 1024 := 1533&4191888080896
ramon: poll                 wall=5.000s usage=4.987s mem=39872KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.984s mem=44264KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.983s mem=50348KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.982s mem=54060KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.003s usage=8.983s mem=55740KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.977s mem=59896KiB load=1.00 rootload=0.98
ramon: poll                 wall=11.000s usage=10.974s mem=65964KiB load=1.00 rootload=1.00
(sat.stats   8679 237582  219 263516/263507  9113/4153 286       0    77.99  11.83)
ramon: poll                 wall=12.000s usage=11.973s mem=78748KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.972s mem=86676KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.971s mem=91588KiB load=1.00 rootload=0.99
(sat.stats   9746 243644  220 365965/365956 11300/5812 286       0    90.49  14.09)
(sat.stats   9750 243745  221 366353/366344 11326/5836 286       0    90.63  14.12)
(sat.stats   9755 243757  222 366608/366599 11336/5844 286       0    90.63  14.14)
ramon: poll                 wall=15.000s usage=14.960s mem=94668KiB load=0.99 rootload=0.98
ramon: poll                 wall=16.000s usage=15.960s mem=98828KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.957s mem=114MiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.954s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.953s mem=117MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.951s mem=120MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:47:29 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.070s
ramon: group.total          19.967s
ramon: group.utime          19.892s
ramon: group.stime          0.076s
ramon: group.mempeak        129MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.016s
ramon: loadavg              1.00
