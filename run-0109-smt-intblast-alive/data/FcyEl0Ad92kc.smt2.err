ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:53:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42157 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FcyEl0Ad92kc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2876845
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   1250   3018  1131/983/99     102/17     6   15   19.05)
(smt.stats    1    202   1545   3645  1411/1219/99     217/38     7   15   19.34)
(smt.stats    2    313   1870   4059  1627/1443/99     347/43     7   15   19.63)
(smt.stats    3    414   2331   4880  1923/1711/99     489/45     7   15   19.54)
(smt.stats    4    525   3285   7409  1985/1832/107     657/172    11   23   19.54)
(smt.stats    5    647   4946  10301  2122/1866/107     799/175    11   23   19.73)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748   5835  13209  2161/1989/107     934/175    11   23   19.73)
(smt.stats    7    859   7153  15172  2228/2022/108    1061/210    12   26   19.73)
(smt.stats    8    981   8417  18303  2313/2097/108    1223/210    12   26   19.82)
(smt.stats    9   1115  10173  24130  2355/2172/111    1345/253    13   39   19.82)
(smt.stats   10   1216  10941  26945  2415/2226/111    1459/256    13   39   19.82)
ramon: poll                 wall=1.002s usage=0.956s mem=20900KiB load=0.95 rootload=0.95
(smt.stats   11   1327  12104  29812  2484/2274/111    1570/257    13   39   19.82)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  12897  34595  2563/2366/111    1702/258    13   39   19.92)
(smt.stats   13   1583  15088  44613  2619/2434/130    1811/274    14   47   19.92)
(smt.stats   14   1730  15445  44956  2656/2470/130    1918/284    15   91   20.59)
(smt.stats   15   1831  15999  47667  3300/3042/130    2040/284    15   91   20.40)
ramon: poll                 wall=2.000s usage=1.950s mem=21744KiB load=1.00 rootload=0.99
(smt.stats   16   1942  16814  49873  3390/3170/130    2176/284    15   91   20.40)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976709944&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 281474976709944 := 281474976705149 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976709944&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 281474976709944 := 281474976705149 << 29
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976709944&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 281474976709944 := 281474976705150 << 30
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976710015&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 281474976710015 := 281474976705150 << 30
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976709992&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 281474976709992 := 281474976705150 << 30
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976710015&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 281474976710015 := 281474976705150 << 30
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 275562954227712&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 4151 := 281474976705150 << 30
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 275562954227712&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 4152 := 281474976705150 << 30
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 275562954227712&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 4416 := 281474976705150 << 30
(smt.stats   17   2064  17977  52586  3486/3278/131    2294/305    16   92   20.49)
(smt.stats   18   2198  21068  64073  3521/3366/143    2438/319    19  100   20.49)
(smt.stats   19   2345  23075  66884  3573/3367/143    2590/321    19  100   20.59)
(smt.stats   20   2506  24763  73890  3642/3434/143    2747/321    19  100   20.59)
(smt.stats   21   2607  25917  76006  3716/3517/143    2848/321    19  100   20.59)
(smt.stats   22   2718  26734  78218  3800/3594/143    2957/324    19  100   20.69)
(smt.stats   23   2840  27064  78860  4108/3844/143    3079/325    19  100   20.88)
ramon: poll                 wall=3.000s usage=2.950s mem=22220KiB load=1.00 rootload=0.99
(smt.stats   24   2974  27459  80045  4536/4224/143    3213/328    19  100   21.08)
(smt.stats   25   3121  29818  84177  4817/4662/146    3360/348    20  110   21.08)
(smt.stats   26   3282  33234  93896  4836/4674/147    3634/373    21  115   21.08)
(smt.stats   27   3459  36029 101314  4874/4683/147    3841/373    21  115   21.17)
(smt.stats   28   3560  37200 103780  4887/4728/147    3939/373    21  115   21.17)
(smt.stats   29   3671  38974 108469  4898/4743/148    4071/556    22  119   21.17)
(smt.stats   30   3793  40294 111280  4902/4746/148    4220/556    22  119   21.17)
(smt.stats   31   3927  42144 117904  4915/4760/149    4515/746    23  119   21.17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  43474 123086  4946/4772/149    4819/749    23  119   21.27)
ramon: poll                 wall=4.000s usage=3.946s mem=22468KiB load=1.00 rootload=1.00
(smt.stats   33   4235  45676 127631  4971/4804/149    4976/751    23  119   21.48)
(smt.stats   34   4412  47400 131890  4994/4838/150    5140/881    24  120   21.39)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976709944&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 281474976709944 := 281474976710655 << 15
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976709991&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 281474976709991 := 281474976710655 << 15
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 4944&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 281474976715600 := 281474976710655 << 15
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976677888&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 6241 := 281474976710655 << 15
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 281474976677888&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 5544 := 281474976710655 << 15
(smt.stats   35   4606  49198 136240  5042/4876/175    5373/884    24  120   21.39)
(smt.stats   36   4707  50023 142191  5071/4901/177    5468/917    25  161   21.48)
(smt.stats   37   4818  52158 153538  5103/4928/177    5599/917    25  161   21.48)
(smt.stats   38   4940  53844 160590  5122/4960/177    5715/954    26  173   21.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 46)
(smt.stats   39   5074  56672 164665  5138/4971/178    5812/954    26  173   21.48)
(smt.stats   40   5221  58653 169380  5163/4995/178    5962/966    27  174   21.58)
(smt.stats   41   5382  60836 179783  5195/5012/178    6126/966    27  174   21.58)
ramon: poll                 wall=5.000s usage=4.943s mem=22792KiB load=1.00 rootload=1.00
(smt.stats   42   5559  61799 189274  5215/5060/178    6305/966    27  174   21.58)
(smt.stats   43   5753  66794 201472  5269/5076/178    6506/966    27  174   21.58)
(smt.stats   44   5966  69061 212253  5386/5139/178    6753/968    27  174   21.67)
(smt.stats   45   6067  69888 217367  5418/5243/178    6863/972    27  174   21.67)
(smt.stats   46   6178  70959 221823  5497/5281/178    6988/973    27  174   21.77)
ramon: poll                 wall=6.000s usage=5.939s mem=23052KiB load=1.00 rootload=0.99
(smt.stats   47   6300  72212 227188  5528/5343/178    7117/973    27  174   21.77)
(smt.stats   48   6434  73326 231591  5661/5374/178    7268/973    27  174   21.87)
(smt.stats   49   6581  74128 233942  5967/5633/178    7445/975    27  174   21.96)
ramon: poll                 wall=7.000s usage=6.936s mem=23228KiB load=1.00 rootload=1.00
(smt.stats   50   6742  75319 237604  6143/5835/178    7641/984    27  174   21.96)
(smt.stats   51   6919  76940 244698  6294/6009/178    7893/988    27  174   22.06)
ramon: poll                 wall=8.000s usage=7.935s mem=23404KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7113  79175 252361  6411/6162/179    8163/1142    28  174   22.06)
(smt.stats   53   7326  82435 268399  6534/6266/179    8396/1143    28  174   22.15)
(smt.stats   54   7560  85016 281657  6634/6417/179    8700/1143    28  174   22.15)
(smt.stats   55   7661  86896 294963  6703/6487/179    8841/1143    28  174   22.15)
(smt.stats   56   7772  88194 298641  6714/6551/179    8965/1143    28  174   22.15)
(smt.stats   57   7894  89455 302825  6718/6556/181    9076/1208    29  189   22.43)
ramon: poll                 wall=9.000s usage=8.932s mem=23712KiB load=1.00 rootload=0.99
(smt.stats   58   8028  90543 308655  6725/6564/181    9221/1209    29  189   22.43)
(smt.stats   59   8175  92745 319180  6746/6575/181    9390/1209    29  189   22.43)
(smt.stats   60   8336  94673 333382  6748/6589/181    9609/1209    29  189   22.43)
(smt.stats   61   8513  96339 338836  6750/6591/181    9789/1209    29  189   22.43)
(smt.stats   62   8707  98787 346270  6882/6593/181   10019/1213    29  189   22.52)
(smt.stats   63   8920 103116 361247  6963/6763/181   10270/1213    29  189   22.62)
ramon: poll                 wall=10.002s usage=9.931s mem=24120KiB load=1.00 rootload=1.00
(smt.stats   64   9154 105887 376780  7094/6815/181   10523/1217    29  189   22.62)
(smt.stats   65   9411 109072 387293  7258/6937/181   10822/1228    29  189   22.72)
ramon: poll                 wall=11.000s usage=10.925s mem=24320KiB load=1.00 rootload=0.99
(smt.stats   66   9512 110037 392685  7377/7170/181   10927/1229    29  189   22.72)
(smt.stats   67   9623 112329 398856  7469/7244/181   11088/1229    29  189   22.81)
(smt.stats   68   9745 114860 439144  7563/7352/182   11250/1347    30  193   22.81)
(smt.stats   69   9879 116816 454318  7608/7411/182   11395/1347    30  193   22.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 40)
(smt.stats   70  10026 117965 464012  7630/7455/182   11509/1347    30  193   22.81)
(smt.stats   71  10187 119324 470433  7641/7478/182   11678/1347    30  193   22.91)
ramon: poll                 wall=12.000s usage=11.925s mem=24408KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10364 121980 481074  7690/7482/182   11869/1348    30  193   22.91)
(smt.stats   73  10558 125702 492038  7810/7552/182   12088/1348    30  193   23.00)
(smt.stats   74  10771 129628 506222  7946/7690/182   12350/1349    30  193   23.10)
(smt.stats   75  11005 131912 520476  7986/7801/182   12596/1349    30  193   23.10)
ramon: poll                 wall=13.000s usage=12.924s mem=24548KiB load=1.00 rootload=1.00
(smt.stats   76  11262 133945 531831  8029/7830/182   12855/1349    30  193   23.10)
(smt.stats   77  11544 137607 560816  8216/7884/182   13195/1349    30  193   23.20)
(smt.stats   78  11645 138612 568192  8287/8080/182   13312/1349    30  193   23.20)
ramon: poll                 wall=14.000s usage=13.924s mem=24712KiB load=1.00 rootload=1.00
(smt.stats   79  11756 139828 576351  8417/8129/182   13438/1351    30  193   23.20)
(smt.stats   80  11878 141191 590346  8512/8304/182   13650/1351    30  193   23.29)
(smt.stats   81  12012 142965 597777  8554/8354/182   13837/1354    30  193   23.29)
(smt.stats   82  12159 144675 609678  8763/8483/182   14025/1355    30  193   23.39)
ramon: poll                 wall=15.000s usage=14.923s mem=24892KiB load=1.00 rootload=1.00
(smt.stats   83  12320 147065 622788  8834/8612/182   14459/1356    30  193   23.39)
(smt.stats   84  12497 149075 635831  8978/8689/182   14792/1360    30  193   23.48)
(smt.stats   85  12691 151778 641753  9037/8822/182   14990/1360    30  193   23.58)
(smt.stats   86  12904 153983 652855  9062/8891/182   15284/1360    30  193   23.58)
ramon: poll                 wall=16.000s usage=15.921s mem=25164KiB load=1.00 rootload=1.00
(smt.stats   87  13138 155750 663519  9157/8909/182   15546/1362    30  193   23.58)
(smt.stats   88  13395 160322 677105  9217/9009/182   15843/1362    30  193   23.67)
(smt.stats   89  13677 164538 690846  9338/9133/182   16159/1362    30  193   23.67)
ramon: poll                 wall=17.000s usage=16.920s mem=25256KiB load=1.00 rootload=1.00
(smt.stats   90  13987 169106 709720  9411/9201/182   16499/1368    30  193   23.77)
(smt.stats   91  14088 170236 716952  9442/9265/182   16634/1368    30  193   23.77)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   92  14199 172319 728633  9450/9284/182   16768/1368    30  193   24.18)
(smt.stats   93  14321 175353 745011  9464/9300/182   16907/1368    30  193   24.28)
(smt.stats   94  14455 176881 756817  9477/9312/182   17080/1368    30  193   24.28)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3030108044864&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 18443369404097068608 := 2558 << 14
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3030108044864&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 18443369404097068608 := 2558 << 14
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3030108044863&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 18443369404097068607 := 2558 << 14
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3030108044863&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 18443369404097068607 := 2558 << 14
(smt.stats   95  14602 180881 766647  9502/9323/182   17224/1370    30  193   24.28)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 1 := 3074122315520&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3074122315518&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 18443369448111339262 := 2591 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 1 := 3073048842172&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 1 := 3073048842173&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 18443369447037865917 := 2591 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3073048842171&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3073048842171&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3074122315519&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3073048842172&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 18438021422480363452 := 2591 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3074122315519&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 3074122315518&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 3074122315518 := 2591 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 140737488355328&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 2782065065984 := 2591 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 140737488355328&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 2782065065984 := 2591 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 140737488355328&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (or #596 #597 #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 ...) 0 (if #642 1 #644))) 1 := 140737488355328&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 140737488355328&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (or #596 #597 #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 ...) 0 (if #642 1 #644))) 1 := 140737488355328&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 140737488355328&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (or #596 #597 #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 ...) 0 (if #642 1 #644))) 1 := 140737488355328&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 140737488355328&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (or #596 #597 #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 ...) 0 (if #642 1 #644))) 1 := 140737488355328&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 1 := 140737488355328&1
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 84869121&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 84869121 := 2590 << 46
(smt.stats   96  14763 183556 773013  9591/9374/203   17448/1958    31  194   24.47)
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 2589&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 2589 := 2590 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 1725&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1725 := 2590 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 140737488355326 := 2590 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 140737488355328&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 140737488355326 := 2590 << 46
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 1707&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1707 := 2572 << 28
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 594&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 594 := 2572 << 28
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 1706&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 1706 := 2572 << 28
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 2555&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 2555 := 2556 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 2551&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 2551 := 2552 << 8
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 2553&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 2553 := 2554 << 10
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 2553&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 2553 := 2554 << 10
band: (band[48] (shl[64] (bv2int %0) (mod #352 64)) (if (or #841 #842 #843 #844 #845 #846 #847 #848 #849 #850 #851 #852 #853 #854 #855 #856 ...) 0 (if #888 1 #920))) 0 := 2547&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #351) 64)) 2547 := 2548 << 4
(smt.stats   97  14940 185552 778158  9692/9440/228   17641/1962    31  194   24.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 81)
(smt.stats   98  15134 189347 786769  9800/9601/260   17776/1962    31  194   24.85)
ramon: poll                 wall=18.002s usage=17.924s mem=26604KiB load=1.00 rootload=1.00
(smt.stats   99  15347 192010 797198  9789/9604/260   17986/2012    32  214   24.95)
(smt.stats  100  15581 195226 811413  9802/9613/260   18231/2012    32  214   25.14)
ramon: poll                 wall=19.000s usage=18.920s mem=26948KiB load=1.00 rootload=0.99
(smt.stats  101  15838 200606 826908  9966/9628/260   18565/2014    32  214   25.23)
(smt.stats  102  16120 205711 839243 10086/9804/260   18934/2015    32  214   25.33)
ramon: poll                 wall=20.000s usage=19.919s mem=27000KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:53:54 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.978s
ramon: group.utime          19.958s
ramon: group.stime          0.020s
ramon: group.mempeak        27256KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.00
