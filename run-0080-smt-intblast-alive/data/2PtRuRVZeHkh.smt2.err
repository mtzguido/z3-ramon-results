ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:26:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31184 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2PtRuRVZeHkh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4033565
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101    846    281  1256/1081/114     106/13     5   19   19.17)
ramon: poll                 wall=1.000s usage=0.948s mem=20244KiB load=0.95 rootload=0.94
(smt.stats    1    202   1345    669  1481/1202/114     222/13     5   19   19.27)
(smt.stats    2    313   2927   2547  1631/1448/117     391/24     6   22   19.27)
(smt.stats    3    414   4105   3641  1751/1520/117     540/30     7   28   19.27)
(smt.stats    4    525   5817   5061  1779/1651/124     677/93     9   35   19.38)
(smt.stats    5    647   7773   7977  1833/1693/129     818/111    11   38   19.51)
ramon: poll                 wall=2.000s usage=1.945s mem=20548KiB load=1.00 rootload=1.00
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748   8914  10332  1953/1774/131     919/112    12   41   19.51)
(smt.stats    7    859   9988  12818  1967/1821/132    1026/117    13   42   19.51)
(smt.stats    8    981  11179  14347  1979/1826/133    1151/125    15   44   19.61)
ramon: poll                 wall=3.000s usage=2.932s mem=20700KiB load=0.99 rootload=0.98
(smt.stats    9   1115  12348  16545  2039/1838/133    1320/125    15   44   19.61)
(smt.stats   10   1216  13105  18808  2099/1915/133    1419/126    15   44   19.71)
(smt.stats   11   1327  14080  22015  2165/1955/133    1539/129    15   44   19.71)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  15350  24943  2225/2080/138    1683/158    16   47   19.83)
(smt.stats   13   1583  16814  27542  2239/2088/138    1816/158    16   47   19.83)
(smt.stats   14   1730  18182  29803  2262/2101/138    1959/183    17   49   19.83)
(smt.stats   15   1831  18872  31698  2275/2123/138    2070/183    17   49   19.83)
(smt.stats   16   1942  19703  32998  2295/2134/138    2208/183    17   49   19.83)
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&2
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 3 := 1 << 1
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&2
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 3 := 1 << 1
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&2
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 3 := 1 << 1
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&2
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 3 := 1 << 1
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 1 := 2 << 2
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 1 := 2 << 2
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 1 := 2 << 2
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 0 := 2 << 2
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 0 := 2 << 2
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 0 := 50 << 2
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 1 := 48 << 4
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 1 := 48 << 4
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 1 := 48 << 4
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 1 := 48 << 4
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 1 := 48 << 4
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 1 := 2 << 4
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&32
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 49 := 1 << 5
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&32
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 49 := 1 << 5
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1536
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 49 := 48 << 5
(smt.stats   17   2064  20583  35334  2386/2233/161    2351/222    18   54   20.03)
(smt.stats   18   2198  23183  37318  2421/2251/161    2517/223    18   54   20.13)
(smt.stats   19   2345  26284  40042  2440/2284/161    2704/251    19   58   20.13)
(smt.stats   20   2506  27534  42471  2453/2297/162    3006/308    20   61   20.13)
(smt.stats   21   2607  28499  43819  2457/2300/162    3125/308    20   61   20.13)
(smt.stats   22   2718  29982  45726  2457/2300/162    3236/308    20   61   20.13)
ramon: poll                 wall=4.000s usage=3.916s mem=21284KiB load=0.98 rootload=0.98
(smt.stats   23   2840  31666  49005  2459/2302/162    3365/308    20   61   20.40)
(smt.stats   24   2974  33554  51474  2459/2302/162    3501/308    20   61   20.40)
(smt.stats   25   3121  35230  54114  2479/2305/162    3713/308    20   61   20.40)
(smt.stats   26   3282  38393  58478  2502/2331/162    3902/309    20   61   20.40)
(smt.stats   27   3459  40707  64136  2518/2359/162    4099/309    20   61   20.40)
(smt.stats   28   3560  42847  66199  2523/2366/162    4237/309    20   61   20.40)
(smt.stats   29   3671  46423  69537  2524/2367/162    4347/309    20   61   20.40)
(smt.stats   30   3793  48446  74520  2548/2377/162    4479/309    20   61   20.40)
(smt.stats   31   3927  49356  78324  2657/2450/162    4649/313    20   61   20.49)
ramon: poll                 wall=5.000s usage=4.915s mem=21572KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4074  52298  81931  2662/2505/163    4805/385    21   61   20.49)
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13510798882111489
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 49539595901075457 := 13510798882111488 << 22
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13510798882111489
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 49539595901075457 := 13510798882111488 << 22
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13510798882111489
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 49539595901075457 := 13510798882111488 << 22
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13510810701660160
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 6755405346637185 := 6755405346637185 << 23
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13510810701660160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 49539607720624128 := 13510810693274370 << 22
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13510810701660160
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 6755405346637185 := 6755405346637185 << 23
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13510798882111489
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 49539595901075457 := 13510798882111488 << 22
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13510810701660160
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 6755405346637185 := 6755405346637185 << 23
ramon: poll                 wall=6.000s usage=5.912s mem=21916KiB load=1.00 rootload=0.99
(smt.stats   33   4235  54814  87734  2746/2512/163    4966/385    21   61   20.78)
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&32369622321725439
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 104427216359653375 := 32369622321725438 << 22
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&36028797010575360
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 16182625022509055 := 16182625022509055 << 23
ramon: poll                 wall=7.000s usage=6.911s mem=21964KiB load=1.00 rootload=1.00
(smt.stats   34   4412  55631  90790  3250/2794/175    5144/391    22   63   20.87)
(smt.stats   35   4606  57802  97655  3410/3249/178    5380/391    22   63   20.87)
(smt.stats   36   4707  58648  99030  3482/3253/178    5471/397    23   80   20.87)
ramon: poll                 wall=8.000s usage=7.910s mem=22112KiB load=1.00 rootload=1.00
(smt.stats   37   4818  60142 102439  3673/3452/178    5611/397    23   80   20.97)
(smt.stats   38   4940  62677 105192  3707/3512/178    5756/397    23   80   20.97)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5074  65142 110144  3732/3567/179    5888/414    24   84   20.97)
(smt.stats   40   5221  70560 114406  3733/3572/179    6034/414    24   84   21.20)
(smt.stats   41   5382  76622 119185  3744/3572/179    6249/414    24   84   21.20)
(smt.stats   42   5559  78858 123069  3767/3599/179    6448/414    24   84   21.20)
(smt.stats   43   5753  82239 126718  3777/3612/179    6655/414    24   84   21.20)
(smt.stats   44   5966  84550 131101  3800/3620/179    6868/414    24   84   21.29)
(smt.stats   45   6067  86054 133180  3802/3641/179    6973/414    24   84   21.29)
(smt.stats   46   6178  88668 136559  3808/3641/179    7084/414    24   84   21.29)
(smt.stats   47   6300  91146 145701  3815/3653/179    7282/417    24   84   21.39)
(smt.stats   48   6434  93442 154819  3932/3758/185    7441/486    25   91   21.39)
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 36028797018963969 := 32646703530131392 << 35
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&17873661021126656
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 17873661046226971 := 16321152482539520 << 36
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 36028797018963969 := 32646699790360514 << 35
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&17944029765304320
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 17944029765304321 := 16323351505796096 << 36
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&17944029765304320
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 17944029765304321 := 16323351505796096 << 36
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&17944029765304320
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 17944089894846437 := 16323351505796096 << 36
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&17944029765304320
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 17944089919979519 := 16323351505796096 << 36
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&68719476736
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 17730730918150908 := 16323351505534977 << 36
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&68719476736
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 17730730918150908 := 16323351505534977 << 36
ramon: poll                 wall=9.000s usage=8.909s mem=22852KiB load=1.00 rootload=0.99
(smt.stats   49   6581  95629 156960  4070/3759/185    7589/488    25   91   21.58)
(smt.stats   50   6742  96114 158406  4527/4006/195    7750/488    25   91   21.67)
ramon: poll                 wall=10.000s usage=9.908s mem=22972KiB load=1.00 rootload=1.00
(smt.stats   51   6919  98308 167117  4699/4443/195    7963/488    25   91   21.77)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 101620 173374  4734/4529/195    8207/495    26   93   21.77)
(smt.stats   53   7326 106458 186509  4752/4572/195    8453/496    26   93   21.87)
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&9641205180661761
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 45670002199625729 := 45638571597496320 << 48
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13510798882111488
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 9641205184858880 := 22819285798879320 << 49
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&13512447111527989
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 49541244130491957 := 45638571597758642 << 48
ramon: poll                 wall=11.000s usage=10.907s mem=23448KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.906s mem=23576KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.905s mem=23604KiB load=1.00 rootload=1.00
(smt.stats   54   7560 107350 188513  4998/4576/195    8698/500    26   93   22.35)
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&12384898975268864
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 9853685802732224 := 22825925818187862 << 49
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&12384898975268864
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #118))) 9853685854112448 := 22825925819793494 << 49
(smt.stats   55   7661 109163 190635  5344/5076/200    8827/530    27   94   22.26)
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&11822498844770303
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 47851295863734271 := 45651903712854188 << 52
band: (band[55] (if (or #448 #451 #454 #457 #460 #463 #466 #469 #472 #475 #478 #481 #484 #487 #490 #493 ...) 0 (if #445 1 #916)) (shl[64] (* 2 #390) (mod #1138 64))) 0 := 0&11821674856968203
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #1130 #1134) 64)) 47850471875932171 := 45651903175987200 << 52
ramon: poll                 wall=14.000s usage=13.903s mem=23716KiB load=1.00 rootload=1.00
(smt.stats   56   7772 110738 192971  5568/5165/205    8937/537    27   94   22.45)
ramon: poll                 wall=15.000s usage=14.903s mem=23788KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.903s mem=23792KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.901s mem=23792KiB load=1.00 rootload=1.00
(smt.stats   57   7894 111234 193852  5728/5435/211    9063/540    27   94   22.54)
(smt.stats   58   8028 113553 202193  5846/5660/223    9252/540    27   94   22.54)
ramon: poll                 wall=18.000s usage=17.898s mem=23952KiB load=1.00 rootload=0.99
(smt.stats   59   8175 118633 211034  5849/5669/224    9367/615    28  142   22.64)
(smt.stats   60   8336 127299 225822  5858/5673/225    9539/646    30  147   22.64)
(smt.stats   61   8513 132425 236132  5881/5698/225    9737/646    30  147   22.64)
(smt.stats   62   8707 136888 242357  5899/5718/225   10029/646    30  147   22.64)
(smt.stats   63   8920 139393 263727  5979/5781/227   10280/796    31  152   22.73)
(smt.stats   64   9154 150349 275939  5995/5788/231   10554/796    31  152   22.83)
ramon: poll                 wall=19.000s usage=18.890s mem=24460KiB load=0.99 rootload=0.99
(smt.stats   65   9411 154695 286018  6168/5805/231   10829/826    32  156   23.12)
(smt.stats   66   9512 156274 292723  6496/6285/236   11028/846    33  177   23.12)
(smt.stats   67   9623 159491 300418  6523/6320/237   11156/878    34  181   23.12)
(smt.stats   68   9745 165975 310802  6538/6339/237   11302/878    34  181   23.12)
(smt.stats   69   9879 172241 323357  6564/6347/237   11471/879    34  181   23.31)
ramon: poll                 wall=20.000s usage=19.888s mem=24728KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:27:10 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.010s
ramon: group.total          19.943s
ramon: group.utime          19.923s
ramon: group.stime          0.020s
ramon: group.mempeak        25752KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              0.99
