ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:05:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40448 MiB
ramon: sys.mem.avail        61705 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/wO8RrpZIWck9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3112360
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4161    208  1250/1083/96     101/13     4   14   19.14)
(smt.stats    1    202   5666    651  2138/1887/98     198/23     6   17   19.33)
(smt.stats    2    313   7286   1733  2417/2196/99     326/28     7   18   19.33)
(smt.stats    3    414   8460   3241  2464/2229/99     432/28     7   18   19.33)
(smt.stats    4    525   9266   4584  2614/2349/114     508/53     9   57   19.44)
(smt.stats    5    647  10735   6246  2661/2412/116     639/57    11   59   19.58)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  14781   8883  2674/2435/116     739/57    11   59   19.80)
(smt.stats    7    859  18472  11748  2688/2443/116     851/57    11   59   19.80)
(smt.stats    8    981  20944  14846  2710/2469/117     961/72    12   61   19.80)
(smt.stats    9   1115  22190  16832  2740/2471/117    1101/72    12   61   19.80)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 520 := 70368744177662&520
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 520 := 520 << 45
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 519 := 70368744177662&519
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 518 := 70368744177662&518
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 518 := 520 << 45
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 6 := 70368744177662&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 6 := 520 << 45
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 70368744177662 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 5 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 8 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 16 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 32 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 64 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 128 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 256 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 512 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 64 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 128 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 256 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 512 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1024 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4096 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 8192 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 16384 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 32768 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 65536 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 131072 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 262144 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524288 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1048576 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2097152 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4194304 := 70368744177662&281474976710656
(smt.stats   10   1216  23720  18642  2956/2503/117    1207/74    12   61   20.89)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 256 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 640 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 512 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1024 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 4096 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1024 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2048 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1024 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 540672 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 557056 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 557056 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 557056 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524416 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524296 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524296 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524416 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524416 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524320 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524320 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524320 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524304 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524304 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524304 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524352 := 70368744177662&281474976710656
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524289 := 70368744177662&281474976710656
(smt.stats   11   1327  25865  22496  2980/2657/251    1507/84    13   82   20.80)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 524290 := 70368744177662&281474976710656
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26830  23979  3152/2732/296    1788/182    14   99   20.89)
(smt.stats   13   1583  28282  26304  3304/2955/301    2132/185    14   99   21.04)
(smt.stats   14   1730  30047  33421  3575/3065/301    2794/273    15  100   21.13)
(smt.stats   15   1831  30719  36050  3839/3399/301    3094/273    15  100   21.24)
ramon: poll                 wall=1.000s usage=0.943s mem=22592KiB load=0.94 rootload=0.93
(smt.stats   16   1942  31198  37462  4091/3666/301    3366/275    15  100   21.45)
(smt.stats   17   2064  33657  43738  4200/3957/301    3626/275    15  100   21.64)
(smt.stats   18   2198  39817  53826  4210/3967/308    4871/1357    17  126   21.73)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&496
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&496
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&1024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 1024 := 496 << 6
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 0 := 248 << 7
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31567
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31567
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31566
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31566
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31565
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31564
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31564
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&30720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 30720 := 496 << 6
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 0 := 248 << 7
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 0 := 248 << 7
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 127 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 126 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 124 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 127 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 126 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 124 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 125 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 124 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 120 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 112 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 96 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 64 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 28 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 8 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 4 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 16 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 24 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 64 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 32 := 127&31744
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 127&31744
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 2 := 127&31744
(smt.stats   19   2345  42850  60572  4309/4064/392    5084/1388    18  150   22.15)
(smt.stats   20   2506  47530  77490  4500/4212/408    5377/1617    20  175   22.58)
(smt.stats   21   2607  49806  81955  4645/4242/408    5499/1618    20  175   22.78)
(smt.stats   22   2718  51820  86321  4863/4400/408    5612/1634    21  197   22.87)
ramon: poll                 wall=2.000s usage=1.939s mem=24348KiB load=1.00 rootload=1.00
(smt.stats   23   2840  54484  89153  5047/4605/408    5787/1634    21  197   23.10)
(smt.stats   24   2974  58499 101216  5176/4865/412    6325/1655    22  201   23.19)
(smt.stats   25   3121  63610 112385  5319/4891/413    6780/1879    23  215   23.67)
ramon: poll                 wall=3.000s usage=2.935s mem=25252KiB load=1.00 rootload=0.99
(smt.stats   26   3282  69753 133929  5651/5038/413    7550/1954    24  218   23.77)
(smt.stats   27   3459  77323 156313  5759/5443/416    8122/2092    26  246   23.96)
(smt.stats   28   3560  79241 170072  5767/5448/416    8677/2092    26  246   24.05)
(smt.stats   29   3671  83001 180281  5789/5452/416    8854/2093    26  246   24.05)
ramon: poll                 wall=4.000s usage=3.932s mem=25464KiB load=1.00 rootload=1.00
(smt.stats   30   3793  87028 190771  5889/5495/416    9242/2099    26  246   24.15)
(smt.stats   31   3927  92477 217641  6011/5627/416    9759/2099    26  246   24.24)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4074  95805 226948  6067/5712/417   10288/2373    27  249   24.24)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685202&281474976716800
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685202&281474976782336
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 2251799813685202&281474976786432
(smt.stats   33   4235  99329 248133  6154/5837/426   10698/2448    28  253   24.34)
(smt.stats   34   4412 101896 255281  6319/5849/426   10950/2461    28  253   24.44)
(smt.stats   35   4606 108152 294900  6369/6053/429   11869/2565    29  259   24.53)
ramon: poll                 wall=5.000s usage=4.928s mem=26276KiB load=1.00 rootload=0.99
(smt.stats   36   4707 111313 316655  6383/6067/430   12241/2902    30  269   24.63)
(smt.stats   37   4818 114686 327350  6385/6069/430   12392/2902    30  269   24.63)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1&508
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 32576 := 254 << 1
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1&508
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 32576 := 254 << 1
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1&508
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #104))) 32576 := 254 << 1
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 0 := 1&508
band: (band[51] (if (= #108 50) 1 (if #604 3 #746)) (shl[51] (bv2int %0) (+ 51 #749))) 1 := 1&508
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 1 := 1&508
(smt.stats   38   4940 116490 340186  6434/6113/448   12673/3029    31  284   24.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 49)
(smt.stats   39   5074 122699 349823  6483/6150/449   12819/3029    31  284   24.82)
(smt.stats   40   5221 130071 376818  6487/6157/452   13422/3081    32  324   24.92)
(smt.stats   41   5382 138829 399879  6524/6186/455   14560/3133    33  366   25.11)
(smt.stats   42   5559 144389 445694  6589/6257/458   15362/3145    34  382   25.30)
ramon: poll                 wall=6.000s usage=5.923s mem=26968KiB load=1.00 rootload=1.00
(smt.stats   43   5753 151033 479901  6718/6329/461   16133/3284    35  453   25.49)
(smt.stats   44   5966 156072 504097  6924/6592/463   17291/3425    36  469   25.59)
(smt.stats   45   6067 158453 510000  6941/6602/463   17607/3426    36  469   25.68)
ramon: poll                 wall=7.000s usage=6.914s mem=27248KiB load=0.99 rootload=0.99
(smt.stats   46   6178 161262 518402  7041/6618/464   18124/3699    37  478   25.78)
ramon: poll                 wall=8.000s usage=7.908s mem=27580KiB load=0.99 rootload=0.99
(smt.stats   47   6300 164961 527690  7245/6878/466   18393/3701    37  478   25.97)
(smt.stats   48   6434 168603 537714  7344/6920/466   18644/3701    37  478   25.97)
(smt.stats   49   6581 173534 557574  7442/7022/466   20903/3702    37  478   26.46)
ramon: poll                 wall=9.000s usage=8.907s mem=28000KiB load=1.00 rootload=1.00
(smt.stats   50   6742 180989 584923  7590/7112/466   21362/3847    38  479   26.56)
(smt.stats   51   6919 188069 609660  7781/7303/466   22318/3847    38  479   26.66)
ramon: poll                 wall=10.000s usage=9.901s mem=28188KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7113 193110 626993  7831/7457/466   23133/3850    38  479   26.75)
(smt.stats   53   7326 200764 653223  8158/7568/466   23657/3853    38  479   27.00)
ramon: poll                 wall=11.000s usage=10.897s mem=28628KiB load=1.00 rootload=1.00
(smt.stats   54   7560 206161 691697  8344/7926/467   25050/3988    39  479   27.21)
(smt.stats   55   7661 211793 715146  8405/8014/467   25804/3990    39  479   27.31)
(smt.stats   56   7772 216151 736359  8579/8113/468   26417/4450    40  483   27.40)
(smt.stats   57   7894 219912 763979  8652/8293/470   27116/4451    40  483   27.50)
(smt.stats   58   8028 223353 775997  8733/8352/470   27573/4451    40  483   27.80)
ramon: poll                 wall=12.000s usage=11.893s mem=29204KiB load=1.00 rootload=0.99
(smt.stats   59   8175 228162 797748  8898/8439/471   28231/4636    41  499   27.89)
(smt.stats   60   8336 232992 819869  9229/8651/471   28723/4636    41  499   27.99)
ramon: poll                 wall=13.000s usage=12.889s mem=29484KiB load=1.00 rootload=1.00
(smt.stats   61   8513 237678 847855  9450/9051/471   29608/4636    41  499   28.08)
(smt.stats   62   8707 243548 903999  9508/9176/471   30543/4636    41  499   28.18)
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&3
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&3
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 186899384535875586 := 1520 << 4
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&68
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&68
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&70
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&10
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&10
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&6
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&6
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 189151184349560898 := 1520 << 4
band: (band[51] (if (= #373 63) 1 (if #583 3 #830)) (shl[64] (* 2 #102) (mod #845 64))) 2 := 31&66
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #837 #841) 64)) 189151184349560898 := 1520 << 4
(smt.stats   63   8920 248623 949754  9562/9215/487   31173/4977    42  515   28.44)
(smt.stats   64   9154 253522 968144  9600/9256/488   31651/4978    42  515   28.53)
ramon: poll                 wall=14.000s usage=13.887s mem=30060KiB load=1.00 rootload=1.00
(smt.stats   65   9411 262885 997999  9854/9272/489   32355/4979    42  515   28.63)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   66   9512 264676 1013677  9883/9540/491   33288/5198    43  541   28.74)
(smt.stats   67   9623 270048 1046276  9888/9545/491   33596/5198    43  541   28.84)
(smt.stats   68   9745 276723 1076238  9914/9553/491   34156/5198    43  541   28.84)
ramon: poll                 wall=15.000s usage=14.886s mem=30396KiB load=1.00 rootload=1.00
(smt.stats   69   9879 284609 1107515 10070/9590/491   34616/5203    43  541   28.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 288091 1126626 10127/9757/491   35106/5205    43  541   29.03)
(smt.stats   71  10187 293037 1152308 10274/9798/491   35530/5207    43  541   29.22)
(smt.stats   72  10364 296871 1165589 10378/9956/491   35961/5207    43  541   29.31)
ramon: poll                 wall=16.000s usage=15.884s mem=31396KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   73  10558 301836 1197255 10451/10108/494   37276/5953    44  545   29.41)
(smt.stats   74  10771 310174 1246020 10456/10113/495   37895/5953    44  545   29.50)
(smt.stats   75  11005 315775 1308470 10464/10121/495   39276/6174    45  571   29.60)
(smt.stats   76  11262 323183 1394149 10479/10135/498   40856/6722    46  574   29.69)
ramon: poll                 wall=17.000s usage=16.881s mem=31436KiB load=1.00 rootload=1.00
(smt.stats   77  11544 330662 1427783 10705/10155/498   41983/6723    46  574   29.98)
(smt.stats   78  11645 333220 1443070 10741/10377/498   43022/6723    46  574   30.18)
ramon: poll                 wall=18.000s usage=17.877s mem=31604KiB load=1.00 rootload=1.00
(smt.stats   79  11756 336534 1450914 10838/10407/498   43259/6724    46  574   30.18)
(smt.stats   80  11878 338670 1477769 10869/10511/498   43688/6724    46  574   30.18)
(smt.stats   81  12012 341559 1489911 10896/10536/498   43905/7070    47  582   30.27)
ramon: poll                 wall=19.000s usage=18.875s mem=31776KiB load=1.00 rootload=0.99
(smt.stats   82  12159 348329 1510481 11049/10603/498   44311/7072    47  582   30.37)
(smt.stats   83  12320 353871 1541894 11235/10781/498   44832/7073    47  582   30.46)
(smt.stats   84  12497 358031 1555669 11352/10956/498   45498/7074    47  582   30.46)
ramon: poll                 wall=20.000s usage=19.870s mem=32188KiB load=0.99 rootload=1.00
ramon: end                  Tue Dec 24 16:05:44 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.010s
ramon: group.total          19.926s
ramon: group.utime          19.910s
ramon: group.stime          0.016s
ramon: group.mempeak        34228KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              0.99
