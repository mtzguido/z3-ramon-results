ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:04:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29368 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1400
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/GdOxUM8FaXM7.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             342324
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   240/240     0/0  61       0    18.54   0.00)
(sat.stats    102    609    0   240/240   102/31  61       0    18.86   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 269 :time 0.00)
(sat.stats    102    609    0   240/240   102/31  61       0    18.86   0.01)
(sat.stats    102    609    0   240/240   102/31  61       0    18.86   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 375018.86 :time 0.00)
(sat.stats    102    609    0   242/242    38/30  61       0    18.86   0.01)
(sat.stats    167   1699    1   242/242   103/82  61       0    18.96   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    170   1757    2   242/242   106/82  61       0    18.96   0.01)
(sat.stats    173   1816    3   242/242   109/82  61       0    18.96   0.01)
(sat.stats    176   1867    4   242/242   112/82  61       0    18.96   0.01)
(sat.stats    179   1921    5   242/242   115/82  61       0    18.96   0.01)
(sat.stats    182   1981    6   242/242   118/82  61       0    18.96   0.01)
(sat.stats    185   2053    7   242/242   121/82  61       0    18.96   0.01)
(sat.stats    188   2116    8   242/242   124/82  61       0    18.96   0.01)
(sat.stats    191   2195    9   242/242   127/83  61       0    18.96   0.01)
(sat.stats    194   2200   10   242/242   130/86  61       0    18.96   0.01)
(sat.stats    197   2204   11   242/242   133/89  61       0    18.96   0.01)
(sat.stats    200   2215   12   242/242   136/92  61       0    18.96   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    209   2261   15   242/242   145/101  61       0    18.96   0.01)
(sat.stats    370   3130   18   242/242   306/235  61       0    19.06   0.02)
(sat.stats    474   4748   28   242/242   410/276  61       0    19.06   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4556 :time 0.00)
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #71))) 0 := 4 << 50
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 5463 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 0 := 1125899906842623&4503599627370496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #823 #827) 64)) 8 := 8 << 49
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 0 := 1125899906842623&4503599627370496
band: (band[54] (if (= #357 63) 1 (if #561 3 #816)) (shl[64] (* 2 #56) (mod #831 64))) 1 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 1125899906827158 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 92596 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 197912 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 291376 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 913024 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 7509568 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 5031936 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 34464512 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 294912 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 1966437376 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 212746240 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 331776 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 327680 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 1172832256 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 393216 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 1701838848 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 48077209600 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 133953486848 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 203960614912 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 8388608 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 102307463168 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 554184998912 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 67108864 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 8056821776384 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 268435456 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 25757992615936 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 15554224062464 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 58780922413056 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 4294967296 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 43533788512256 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 17179869184 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 705749026078720 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 68719476736 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 344696895307776 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 274877906944 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 584940185976832 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 1099511627776 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 2199023255552 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 510173395288064 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 8796093022208 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 774056185954304 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 35184372088832 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 703687441776640 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 562949953421312 := 1125899906842623&4503599627370496
band: (band[54] (if (= #57 53) 1 (if #584 3 #735)) (shl[54] (bv2int %0) (+ 54 #738))) 281474976710656 := 1125899906842623&4503599627370496
(sat.stats    759  18432   30  1056/1054   691/345  93       0    21.95   0.24)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 7370 :time 0.00)
ramon: poll                 wall=1.004s usage=0.949s mem=28400KiB load=0.95 rootload=0.93
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 8268 :time 0.00)
(sat.stats   1203  42557   32 19011/19008  1136/416 419       0    27.19   1.41)
ramon: poll                 wall=2.000s usage=1.938s mem=28668KiB load=0.99 rootload=0.99
(sat.stats   1763  57364   70 19271/19268  1697/711 419       0    27.47   2.17)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 14319 :time 0.00)
ramon: poll                 wall=3.000s usage=2.932s mem=29516KiB load=0.99 rootload=0.99
(sat.stats :conflicts   :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   2432  90123   91 23112/23109  2457/848 420       0    28.04   3.43)
ramon: poll                 wall=4.000s usage=3.928s mem=29568KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 18454 :time 0.00)
ramon: poll                 wall=5.000s usage=4.924s mem=29472KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.919s mem=29852KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.918s mem=29920KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.004s usage=7.923s mem=29996KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.913s mem=30752KiB load=0.99 rootload=0.99
 (sat-cleaner :elim-literals 39 :elim-clauses 0 :cost 23713 :time 0.00)
ramon: poll                 wall=10.000s usage=9.908s mem=31476KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 42 :elim-clauses 3 :cost 24182 :time 0.00)
ramon: poll                 wall=11.000s usage=10.906s mem=35168KiB load=1.00 rootload=1.00
(sat.stats   3599 177551  127 110840/110837  4142/1394 424       0    35.65  11.71)
ramon: poll                 wall=12.000s usage=11.902s mem=39160KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.900s mem=43164KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.896s mem=44084KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.893s mem=46928KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.889s mem=48744KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.886s mem=51040KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.883s mem=63348KiB load=1.00 rootload=0.98
ramon: poll                 wall=19.000s usage=18.880s mem=66484KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.878s mem=69488KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:04:54 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.030s
ramon: group.total          19.939s
ramon: group.utime          19.903s
ramon: group.stime          0.036s
ramon: group.mempeak        71788KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              0.99
