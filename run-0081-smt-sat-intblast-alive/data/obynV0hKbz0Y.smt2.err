ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:10:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28296 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1359
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/obynV0hKbz0Y.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             538174
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   125/123     0/0  58       0    18.38   0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 128 :time 0.00)
(sat.stats    187   2410    0   159/157   186/172  68       0    18.76   0.02)
(sat.stats    187   2410    0   172/170   186/172  68       0    18.76   0.02)
(sat.stats    187   2410    0   172/170   186/172  68       0    18.76   0.02)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :elim-bin 6 :time 0.00)
 (sat-probing :cost 394018.76 :time 0.00)
(sat.stats    187   2410    0   148/138   191/180  68       0    18.76   0.02)
(sat.stats    190   2523    1   148/138   194/182  68       0    18.86   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    193   2555    2   148/138   197/185  68       0    18.86   0.02)
(sat.stats    400   5333    3   148/138   406/390  68       0    18.86   0.03)
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 3 := 0 << 46
 (sat-cleaner :elim-literals 1 :elim-clauses 2 :cost 634 :time 0.00)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 1 := 1 << 46
(sat.stats    568  10345    4   389/371   576/425  74       0    19.24   0.07)
(sat.stats    571  10544    5   416/398   579/425  74       0    19.24   0.07)
(sat.stats    574  10738    6   458/440   582/425  74       0    19.24   0.08)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 881 :time 0.00)
(sat.stats    577  10898    7   492/474   585/425  78       0    19.24   0.08)
(sat.stats    580  11072    8   492/474   588/425  78       0    19.34   0.08)
(sat.stats    583  11240    9   492/474   591/425  78       0    19.34   0.08)
(sat.stats    586  11397   10   492/474   595/425  78       0    19.34   0.08)
(sat.stats    589  11547   11   492/474   598/425  78       0    19.34   0.08)
(sat.stats    592  11688   12   492/474   601/425  78       0    19.34   0.08)
(sat.stats    595  11795   13   492/474   604/425  78       0    19.34   0.09)
(sat.stats    598  11899   14   492/474   607/425  78       0    19.34   0.09)
(sat.stats    601  11957   15   492/474   610/425  78       0    19.34   0.09)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 46 := 46 << 1
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 9 := 9 << 38
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 18 := 18 << 29
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 26 := 26 << 21
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 11 := 11 << 36
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 15 := 15 << 32
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 27 := 27 << 20
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 35 := 35 << 12
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 17 := 17 << 30
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 4 := 4 << 43
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 3 := 3 << 44
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 2 := 2 << 45
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    832  19449   28  1036/1005   859/446  78       0    19.87   0.14)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 19 := 19 << 28
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 43 := 43 << 4
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 37 := 37 << 10
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 40 := 40 << 7
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 41 := 41 << 6
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 36 := 36 << 11
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 44 := 44 << 3
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 39 := 39 << 8
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 38 := 38 << 9
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 12 := 12 << 35
(sat.stats   1183  35846   32  1504/1465  1224/466  78       0    20.54   0.22)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 14 := 14 << 33
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&120259084288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 0 := 28 << 32
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5056 :time 0.00)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 45 := 45 << 2
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5678 :time 0.00)
(sat.stats   1599  46628  165  2352/2312  1643/507 153       0    21.12   0.43)
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&180
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 2671619741449191425 := 90 << 1
 (sat-cleaner :elim-literals 881 :elim-clauses 3 :cost 6298 :time 0.00)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 118784 := 29 << 18
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&7602176
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 7601893 := 58 << 17
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 87960930222080 := 13 << 34
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&223338299392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 3407872 := 26 << 33
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&64424509440
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 3932160 := 30 << 31
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 107374182400 := 25 << 22
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&104857600
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 6553600 := 50 << 21
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 92274688 := 22 << 25
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&738197504
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 5767168 := 44 << 24
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 8140571 := 31 << 16
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 1600091 := 6 << 41
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&13194139533312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 1572864 := 12 << 40
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&35184372088832
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 8796093022208 := 8 << 42
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 43980465111040 := 5 << 42
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&21990232555520
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 10995116277760 := 10 << 41
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&52776558133248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 6597069766656 := 6 << 43
(sat.stats   2510  73596  288  2756/2710  2556/592 159       0    22.13   0.78)
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 671101018 := 20 << 27
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&2684354560
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 671088640 := 40 << 26
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 4429185024 := 33 << 14
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 939540873 := 28 << 19
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 1409307143 := 42 << 5
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&412316860416
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 402653184 := 24 << 34
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 234888396 := 7 << 40
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&7696581394432
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 234881024 := 14 << 39
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&9663676416
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 603979776 := 36 << 28
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&2473901162496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 301989888 := 18 << 37
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 771783832 := 23 << 24
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&755914244096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 369098752 := 22 << 35
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&5100273664
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 637534208 := 38 << 27
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 6442450944 := 24 << 23
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 536901053 := 16 << 31
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&34359738368
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 536870912 := 32 << 30
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 21474836480 := 10 << 37
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&1374389534720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 335544320 := 20 << 36
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 4398046511104 := 32 << 15
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 268455100 := 8 << 39
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&4398046511104
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 268435456 := 16 << 38
ramon: poll                 wall=1.000s usage=0.995s mem=23972KiB load=1.00 rootload=0.99
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&28311552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 28311551 := 54 << 19
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&37888
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 0 := 74 << 9
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 30720 := 30 << 17
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 34816 := 34 << 13
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #63))) 21504 := 21 << 26
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&1409286144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 1409281716 := 42 << 25
(sat.stats   3596 125297  466  3243/3194  3647/646 159       0    23.26   1.37)
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&9984
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 0 := 78 << 7
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&19456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 9728 := 76 << 8
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&5120
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 0 := 80 << 6
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&1344
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 0 := 84 << 4
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&352
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 171 := 88 << 2
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 344 := 86 << 3
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&278528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 544 := 68 << 12
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&3932160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 0 := 60 << 16
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 25233 :time 0.00)
ramon: poll                 wall=2.000s usage=1.994s mem=25168KiB load=1.00 rootload=0.99
(sat.stats   5512 182669  748  3705/3656  4907/704 312       0    23.85   2.09)
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&2624
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 335872 := 82 << 5
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&2031616
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 253952 := 62 << 15
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 26941 :time 0.00)
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&385875968
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 6029312 := 46 << 23
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&143360
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 587202560 := 70 << 11
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&14680064
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 120259084288 := 56 << 18
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&201326592
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 13194139533312 := 48 << 22
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&70368744177664
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 34359738368 := 4 << 44
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&540672
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 1161084278931456 := 66 << 13
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&1048576
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 1125899906842624 := 64 << 14
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&18253611008
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 598134325510144 := 34 << 29
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&73728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 1266637395197952 := 72 << 10
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 0&54525952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 914793674309632 := 52 << 20
ramon: poll                 wall=3.000s usage=2.994s mem=26132KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 33792 :time 0.00)
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 1&70368744177664
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #749 #751) 64)) 4398046511104 := 2 << 45
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 1 := 1&70368744177664
band: (band[47] (if (or #515 #516 #517 #518 #519 #520 #521 #522 #523 #524 #525 #526 #527 #528 #529 #530 ...) 0 (if #560 1 #562)) (shl[47] (bv2int %0) (+ 47 #738))) 0 := 1&70368744177664
band: (band[47] (shl[64] (* 2 #62) (mod #752 64)) (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #821 1 #823))) 1 := 70368744177664&1
 (sat-cleaner :elim-literals 22 :elim-clauses 5 :cost 35908 :time 0.00)
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats     :decisions     :clauses/bin       :units         :memory       )
(sat.stats   8824 273810  869  4463/4414  6777/911 365       0    25.24   3.31)
ramon: poll                 wall=4.000s usage=3.993s mem=27408KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.992s mem=27920KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.991s mem=28788KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.990s mem=30192KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.990s mem=30800KiB load=1.00 rootload=1.00
(sat.stats  12139 390652 1189  4986/4936  8581/1275 365       0    29.08   8.05)
ramon: poll                 wall=9.000s usage=8.989s mem=33224KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.988s mem=33836KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.987s mem=34256KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.987s mem=34832KiB load=1.00 rootload=1.00
(sat.stats  18207 554976 2813  6196/6144 12148/1316 365       0    33.19  12.79)
ramon: poll                 wall=13.000s usage=12.986s mem=35320KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.003s usage=13.988s mem=36336KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 36 :elim-clauses 6 :cost 76107 :time 0.00)
ramon: poll                 wall=15.000s usage=14.985s mem=37040KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.984s mem=40220KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.983s mem=40876KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 2 :cost 34785 :time 0.00)
 (sat-cleaner :elim-literals 834 :elim-clauses 401 :cost 35274 :time 0.00)
ramon: poll                 wall=18.000s usage=17.982s mem=40964KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.982s mem=42836KiB load=1.00 rootload=1.00
(sat.stats  27309 1262203 3800 42149/42099 11625/3170 430    5875    45.48  19.98)
ramon: poll                 wall=20.000s usage=19.981s mem=47580KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:10:42 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.995s
ramon: group.utime          19.975s
ramon: group.stime          0.020s
ramon: group.mempeak        48096KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              1.00
