ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:01:19 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40559 MiB
ramon: sys.mem.avail        61706 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tCXOcBIkmbN9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3099977
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3869    879  1363/1226/97      91/30     4   16   19.18)
(smt.stats    1    202   5732   1908  2362/2060/99     194/44     5   16   19.47)
(smt.stats    2    313   9348   4536  2423/2192/102     312/53     7   18   19.57)
(smt.stats    3    414  11777   6059  2498/2235/102     416/66     8   19   19.57)
(smt.stats    4    525  13814   7736  2568/2328/106     525/73     9   25   19.66)
(smt.stats    5    647  15979  10211  2659/2351/107     647/92    10   27   19.77)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16518  10576  2811/2514/107     753/99    11   29   20.15)
(smt.stats    7    859  17537  11131  3231/2891/107     886/109    11   29   20.24)
ramon: poll                 wall=1.000s usage=0.976s mem=21708KiB load=0.98 rootload=0.96
(smt.stats    8    981  18435  11879  3488/3172/107    1039/112    11   29   20.43)
(smt.stats    9   1115  22221  16667  3672/3385/110    1197/145    12   35   20.34)
(smt.stats   10   1216  22824  17160  3715/3470/110    1301/146    12   35   20.72)
(smt.stats   11   1327  23423  17890  4127/3780/110    1446/146    12   35   20.72)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  24945  21475  4390/4008/110    1600/147    12   35   20.72)
(smt.stats   13   1583  27883  26539  4511/4239/113    1919/199    13   36   20.72)
ramon: poll                 wall=2.000s usage=1.975s mem=22060KiB load=1.00 rootload=1.00
(smt.stats   14   1730  30892  33120  4638/4295/113    2067/394    14   40   20.83)
(smt.stats   15   1831  33219  37561  4708/4419/113    2199/397    14   40   20.83)
(smt.stats   16   1942  35908  41007  4771/4490/113    2315/398    14   40   20.83)
(smt.stats   17   2064  38098  46224  4863/4592/113    2448/399    14   40   20.93)
(smt.stats   18   2198  39742  51704  4997/4635/113    2607/405    14   40   21.03)
(smt.stats   19   2345  42790  54845  5109/4786/113    2772/410    14   40   21.03)
(smt.stats   20   2506  45762  64076  5256/4911/113    2976/410    14   40   21.03)
(smt.stats   21   2607  47924  71710  5433/5093/113    3106/411    14   40   21.13)
ramon: poll                 wall=3.000s usage=2.970s mem=22368KiB load=1.00 rootload=1.00
(smt.stats   22   2718  49182  74250  5586/5201/113    3225/412    14   40   21.13)
(smt.stats   23   2840  54398  81138  5645/5382/114    3346/573    15   43   21.26)
(smt.stats   24   2974  57632  88969  5750/5442/114    3518/573    15   43   21.26)
(smt.stats   25   3121  60877  95181  5775/5517/115    3671/604    16   60   21.35)
(smt.stats   26   3282  63873 105705  5817/5551/115    3929/604    16   60   21.35)
(smt.stats   27   3459  66293 114674  5902/5656/116    4136/684    17   61   21.35)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 562949953421314 := 281474976709873 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 562949953421314 := 281474976709873 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 250389659773635&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 250389659773635&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 250389659773636&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 531864636484292 := 281474976709873 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 281474976709090&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 31085791263777 := 281474976709873 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 281474976709090&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 31085316931186 := 281474976709873 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 281474976709090&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 31085316931186 := 281474976709873 << 1
(smt.stats   28   3560  67468 118110  5937/5671/124    4268/687    17   61   21.46)
(smt.stats   29   3671  68618 119884  5998/5717/139    4358/743    18   90   21.56)
(smt.stats   30   3793  71283 132378  6076/5795/139    4512/743    18   90   21.56)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 1 := 31085316931106&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 1 := 31085316931106&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 31085316931106&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #597 47) 1 (if #599 3 #732))) 1 := 31085316931106&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 31085316931106&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (= #597 47) 1 (if #599 3 #732))) 1 := 31085316931106&1
(smt.stats   31   3927  73268 139112  6149/5868/156    4650/762    19   90   21.66)
ramon: poll                 wall=4.000s usage=3.970s mem=22944KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  75666 146471  6237/5953/161    4804/765    20   96   21.66)
(smt.stats   33   4235  77964 154042  6411/6046/161    4997/771    21   96   21.76)
(smt.stats   34   4412  80525 163293  6540/6238/161    5208/771    21   96   21.86)
(smt.stats   35   4606  82898 172669  6616/6333/161    5487/771    21   96   21.86)
(smt.stats   36   4707  85300 188198  6738/6380/162    5596/821    22  100   21.86)
(smt.stats   37   4818  88034 195836  6768/6499/162    5754/821    22  100   21.96)
(smt.stats   38   4940  90110 203991  6891/6536/162    5900/821    22  100   21.96)
ramon: poll                 wall=5.004s usage=4.978s mem=23320KiB load=1.00 rootload=1.01
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  92667 212128  6950/6666/162    6045/821    22  100   21.96)
(smt.stats   40   5221  95468 219492  7097/6707/162    6194/821    22  100   22.14)
(smt.stats   41   5382  97701 233369  7232/6893/162    6363/821    22  100   22.14)
(smt.stats   42   5559  99811 243639  7338/7024/162    6564/822    22  100   22.23)
(smt.stats   43   5753 102927 254868  7422/7173/162    6724/822    22  100   22.23)
(smt.stats   44   5966 105304 267787  7488/7222/163    6943/868    23  104   22.23)
(smt.stats   45   6067 106616 275611  7506/7254/167    7091/868    23  104   22.23)
(smt.stats   46   6178 109220 290803  7528/7276/169    7198/914    24  109   22.23)
ramon: poll                 wall=6.000s usage=5.969s mem=23624KiB load=1.00 rootload=0.99
(smt.stats   47   6300 112407 301746  7565/7296/169    7330/916    25  114   22.34)
(smt.stats   48   6434 115394 307143  7613/7328/169    7461/917    25  114   22.34)
(smt.stats   49   6581 117447 320988  7637/7383/169    7653/917    25  114   22.34)
(smt.stats   50   6742 120052 334250  7710/7397/169    7820/918    25  114   22.34)
(smt.stats   51   6919 122454 340965  7743/7472/169    8006/918    25  114   22.44)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 124773 348537  7772/7514/169    8230/918    25  114   22.44)
ramon: poll                 wall=7.000s usage=6.969s mem=23804KiB load=1.00 rootload=1.00
(smt.stats   53   7326 128258 359098  7947/7542/169    8459/921    25  114   22.53)
(smt.stats   54   7560 131878 376512  8053/7713/169    8714/923    25  114   22.53)
(smt.stats   55   7661 133562 387321  8061/7809/169    8816/923    25  114   22.53)
(smt.stats   56   7772 134802 392900  8087/7818/169    8926/923    25  114   22.53)
(smt.stats   57   7894 136168 401212  8134/7845/169    9054/924    25  114   22.69)
(smt.stats   58   8028 137971 412229  8165/7896/169    9227/924    25  114   22.69)
ramon: poll                 wall=8.000s usage=7.968s mem=24120KiB load=1.00 rootload=1.00
(smt.stats   59   8175 139581 421847  8207/7932/169    9381/924    25  114   22.69)
(smt.stats   60   8336 141212 433900  8261/7975/169    9553/925    25  114   22.79)
(smt.stats   61   8513 143376 445301  8381/8054/170    9757/1055    26  119   22.89)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8707 146721 455674  8548/8138/170   10017/1056    26  119   22.99)
ramon: poll                 wall=9.000s usage=8.966s mem=24344KiB load=1.00 rootload=0.99
(smt.stats   63   8920 150130 480920  8724/8340/170   10278/1057    26  119   22.99)
(smt.stats   64   9154 153383 500710  8961/8507/170   10521/1059    26  119   23.08)
(smt.stats   65   9411 157226 523282  9325/8737/170   10814/1063    26  119   23.18)
ramon: poll                 wall=10.000s usage=9.966s mem=24816KiB load=1.00 rootload=1.00
(smt.stats   66   9512 158805 530829  9406/9142/171   10892/1137    27  123   23.18)
(smt.stats   67   9623 160647 536735  9560/9179/171   10997/1148    27  123   23.27)
(smt.stats   68   9745 162138 549375  9679/9386/171   11089/1150    27  123   23.27)
(smt.stats   69   9879 163885 564363  9810/9501/171   11188/1157    27  123   23.27)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 165557 573486  9937/9674/171   11280/1159    27  123   23.27)
(smt.stats   71  10187 169849 583661  9979/9698/171   11455/1160    27  123   23.27)
ramon: poll                 wall=11.000s usage=10.965s mem=24956KiB load=1.00 rootload=1.00
(smt.stats   72  10364 172748 595683 10153/9804/171   11652/1160    27  123   23.37)
(smt.stats   73  10558 175242 609560 10320/9947/171   11871/1161    27  123   23.37)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   74  10771 178705 639040 10572/10100/171   12119/1164    27  123   23.46)
(smt.stats   75  11005 181257 654194 10696/10359/171   12383/1164    27  123   23.56)
ramon: poll                 wall=12.000s usage=11.962s mem=24960KiB load=1.00 rootload=1.00
(smt.stats   76  11262 185412 687339 10913/10472/171   12662/1164    27  123   23.77)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 4&7
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 4 := 4&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 16297119676570271748 := 51 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 2&7
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 16297119676570271746 := 51 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15541709794880&7
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 4 := 15541709794880&7
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15542539883985&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15542539883985&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15542539883984&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15542539883982&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15542539883982&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15541709794880&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15541709794882&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15541709794880&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 2 := 15541709794882&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 8 := 15541709794882&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709794882&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 24 := 15541709794880&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709794880&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709794880&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709794880&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709794896&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709794880&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709794880&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709794896&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795344&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795328&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795344&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795344&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709799440&124341267716529
(smt.stats   77  11544 190244 707409 11082/10781/196   12976/1325    28  125   24.07)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 8 := 15541709795310&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795312&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795312&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795280&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795280&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709794896&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795344&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709795344&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709832208&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709832208&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15541709832208&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542539745278&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542539745246&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542539745278&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542539745278&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542539745278&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542539745278&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542658430942&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542540832784&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542540828688&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542540828688&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542540828688&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542540828688&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542540836880&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542547120144&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542658424848&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542658424848&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542547120144&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542547120144&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542547120208&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 15542547120208&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773890871312&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773890936848&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773890807774&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773890807568&124341267716529
(smt.stats   78  11645 192811 731980 11280/10898/304   13174/1385    29  161   24.36)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891002384&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891002384&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891002384&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 0 := 7773891010576&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773890945040&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773890953232&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773890936976&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773890937104&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773890937360&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891068944&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891068048&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891068048&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891067984&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891068240&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891067984&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891067920&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891067920&124341267716529
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 16 := 7773891067920&124341267716529
(smt.stats   79  11756 195790 760212 11441/11064/371   13440/1451    30  185   24.68)
(smt.stats   80  11878 200253 784789 11470/11184/416   13678/1483    31  199   24.77)
ramon: poll                 wall=13.000s usage=12.961s mem=26604KiB load=1.00 rootload=0.99
(smt.stats   81  12012 203685 802841 11505/11228/418   14007/1542    32  199   24.97)
(smt.stats   82  12159 207341 811054 11742/11320/418   14268/1699    33  203   24.97)
(smt.stats   83  12320 210568 828758 11901/11598/419   14551/1821    34  211   25.17)
(smt.stats   84  12497 214226 840749 12089/11695/419   14905/1824    34  211   25.36)
ramon: poll                 wall=14.000s usage=13.960s mem=26952KiB load=1.00 rootload=1.00
(smt.stats   85  12691 220797 862882 12177/11816/419   15157/1825    34  211   25.56)
(smt.stats   86  12904 234310 919291 12236/11899/419   15669/1826    34  211   25.75)
ramon: poll                 wall=15.000s usage=14.959s mem=27416KiB load=1.00 rootload=1.00
(smt.stats   87  13138 243144 943854 12348/11946/425   16218/1959    35  222   25.94)
ramon: poll                 wall=16.000s usage=15.959s mem=28044KiB load=1.00 rootload=1.00
(smt.stats   88  13395 250827 961102 12648/12282/426   16801/2062    36  233   26.32)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 258 := 260&3705658
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 258 := 258&3705658
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 127226689473216770 := 262 << 22
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 258 := 262&3705658
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 127226689473216774 := 262 << 22
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #891))) 258 := 262&3705658
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 127226689473216774 := 262 << 22
(smt.stats   89  13677 266294 993300 12777/12425/436   17441/2277    37  257   26.61)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   90  13987 282505 1043731 12985/12495/441   18207/2385    38  288   26.91)
(smt.stats   91  14088 286995 1057744 13012/12685/441   18585/2521    39  288   27.10)
ramon: poll                 wall=17.000s usage=16.958s mem=28632KiB load=1.00 rootload=1.00
(smt.stats   92  14199 291811 1074545 13055/12743/445   18828/2597    40  302   27.10)
(smt.stats   93  14321 297628 1099038 13078/12762/447   19147/2601    40  302   27.20)
(smt.stats   94  14455 301537 1118163 13091/12779/450   19520/2630    41  306   27.29)
(smt.stats   95  14602 307258 1135769 13119/12787/450   19728/2632    41  306   27.29)
ramon: poll                 wall=18.000s usage=17.957s mem=28892KiB load=1.00 rootload=1.00
(smt.stats   96  14763 315297 1157415 13239/12814/450   19967/2684    42  313   27.39)
(smt.stats   97  14940 322360 1186940 13330/12939/450   20272/2687    42  313   27.39)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 328038 1209683 13484/13169/451   20735/2710    43  314   27.65)
ramon: poll                 wall=19.000s usage=18.956s mem=29460KiB load=1.00 rootload=1.00
(smt.stats   99  15347 334936 1239666 13531/13179/451   21137/2717    43  314   27.74)
(smt.stats  100  15581 345532 1269121 13578/13264/452   21625/2808    44  319   27.84)
ramon: poll                 wall=20.000s usage=19.956s mem=29712KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:01:39 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.010s
ramon: group.total          19.972s
ramon: group.utime          19.960s
ramon: group.stime          0.012s
ramon: group.mempeak        29716KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
