ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:12:40 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24441 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/yXCWXoDsDnDe.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             191926
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3091   1843  1183/1060/100      92/4     5   15   19.09)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 1&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 2&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 6&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 8&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 8&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 8&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 8&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 32&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 32&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 64&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 19&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 18&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 16 := 16&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 16 := 17 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 16&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 16 := 16&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 16 := 17 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 5&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 4&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 4&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 4 := 268435456 << 36
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 5&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 6&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 5&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 5 := 7&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 5 := 7&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 5 := 7&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 5 := 7&68719476735
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 7 := 7&68719476735
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976710663 := 68987912192 << 36
(smt.stats    1    202   4723   3288  1718/1544/195     193/23    10   38   19.57)
(smt.stats    2    313   6462   4946  1910/1669/195     307/53    10   38   19.67)
(smt.stats    3    414   8514   6533  2185/1988/199     387/72    12   39   19.78)
(smt.stats    4    525  11324   8577  2203/2004/205     438/71    14   99   19.78)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 16 := 16&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 18446462598732840976 := 281474976706560 << 8
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 16 := 16&255
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976710672 := 68987912192 << 8
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 8 := 256&255
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 8 := 256&255
(smt.stats    5    647  12851  10149  2353/2064/219     577/98    15  101   20.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  15042  14094  2756/2521/221     699/132    17  103   20.16)
(smt.stats    7    859  19405  19565  2771/2536/225     813/147    20  110   20.25)
(smt.stats    8    981  23788  24280  2787/2551/226     935/159    21  116   20.25)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 1829587348619264 := 7146825607169 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 1829587348619264 := 7146825607169 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 1829587348619264 := 7146825607169 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 1829587348619264 := 7146825607169 << 47
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 140737488355328&140737488355327
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 7146825711629 << 47
(smt.stats    9   1115  27960  28991  2882/2557/227    1102/165    22  119   20.45)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 256 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 256 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 256 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 98560 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 164096 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295264 := 141289400074496&140737488355327
(smt.stats   10   1216  28608  30050  3246/2992/283    1457/170    23  121   20.74)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295264 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295264 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295264 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295296 := 141289400074496&140737488355327
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 295296 := 141289400074496&140737488355327
(smt.stats   11   1327  30586  33766  3351/3065/299    1688/175    23  121   20.84)
(smt.stats   12   1449  34873  50829  3370/3130/302    1902/423    25  136   20.84)
ramon: poll                 wall=1.000s usage=0.923s mem=22136KiB load=0.92 rootload=0.92
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 112 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658384&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257658448&511
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 72057663295586384 := 69257396289 << 9
(smt.stats   13   1583  36355  54189  3505/3132/302    2128/433    25  136   21.03)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 48 := 69257659024&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 48 := 69257659024&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 80 := 69257659024&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 272 := 69257659024&511
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 272 := 69257659024&511
(smt.stats   14   1730  41089  71296  3752/3474/318    2516/498    26  145   21.13)
(smt.stats   15   1831  44279  85415  3781/3540/319    2698/648    28  151   21.13)
(smt.stats   16   1942  46681  93200  3806/3552/319    3009/653    28  151   21.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   17   2064  50093 105785  3947/3665/331    3220/820    29  167   21.32)
(smt.stats   18   2198  52869 115533  4049/3709/331    3501/859    30  168   21.42)
(smt.stats   19   2345  56523 132087  4071/3806/331    3856/859    30  168   21.51)
(smt.stats   20   2506  61269 146134  4113/3836/335    4216/1100    32  185   21.51)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 6 := 3300&127
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 3300&127
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 4 := 3268&127
(smt.stats   21   2607  64157 156964  4264/3868/335    4489/1103    32  185   21.61)
(smt.stats   22   2718  66689 170525  4598/4027/335    4734/1104    32  185   21.74)
(smt.stats   23   2840  70030 180976  4671/4356/335    5039/1104    32  185   21.74)
ramon: poll                 wall=2.000s usage=1.923s mem=23028KiB load=1.00 rootload=0.99
(smt.stats   24   2974  74366 196757  4811/4420/336    5427/1202    33  188   21.84)
(smt.stats   25   3121  78810 212213  4920/4560/337    5872/1323    34  193   21.93)
(smt.stats   26   3282  84644 239071  5165/4742/340    6207/1431    35  201   22.22)
(smt.stats   27   3459  88310 257078  5442/5181/345    6625/1545    37  219   22.32)
(smt.stats   28   3560  93730 296766  5445/5186/346    7064/1545    37  219   22.42)
(smt.stats   29   3671  97559 318553  5449/5190/346    7340/1633    38  226   22.65)
(smt.stats   30   3793  99864 327193  5562/5190/346    7727/1639    38  226   22.65)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3927 102207 336541  5658/5342/347    8032/1874    39  228   22.65)
(smt.stats   32   4074 108988 352873  5697/5408/347    8585/1878    39  228   22.75)
ramon: poll                 wall=3.000s usage=2.923s mem=24080KiB load=1.00 rootload=1.00
(smt.stats   33   4235 113648 374534  5805/5481/348    8938/2177    40  238   22.84)
(smt.stats   34   4412 120227 419545  5849/5587/348    9193/2177    40  238   22.84)
(smt.stats   35   4606 126416 468648  5939/5628/350    9611/2408    41  238   22.93)
(smt.stats   36   4707 132174 517913  5954/5681/350    9721/2409    41  238   22.93)
(smt.stats   37   4818 140322 572483  5955/5696/350    9897/2425    42  238   22.93)
(smt.stats   38   4940 146276 612951  5966/5707/354   10362/2558    43  239   23.02)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   39   5074 149961 630375  6111/5709/354   10630/2560    43  239   23.02)
ramon: poll                 wall=4.000s usage=3.923s mem=24508KiB load=1.00 rootload=1.00
(smt.stats   40   5221 152126 649302  6520/5884/354   10915/2759    44  255   23.18)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 129279 := 163055&137438953471
(smt.stats   41   5382 153918 668697  6896/6309/354   11261/2759    44  255   23.27)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 268291&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 268291&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 267779&4095
(smt.stats   42   5559 157136 686298  7167/6874/355   12532/2783    45  259   23.46)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 267779&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 267779&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 263171&4095
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391783937 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391783937 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391783937 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391652865 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391652865 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391652865 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 3 := 262147&4095
shl: (shl[64] (bv2int %0) (mod (+ #103 #353) 64)) 281474976972803 := 141289391652865 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 0&4095
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 0 << 12
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 0&4095
shl: (shl[48] (bv2int %0) (mod (bv2int %1) 48)) 1 := 0 << 12
(smt.stats   43   5753 160789 702639  7302/7019/411   13526/3318    46  279   23.94)
(smt.stats   44   5966 165376 723446  7591/7281/412   14302/3325    46  279   24.33)
(smt.stats   45   6067 169455 738887  7598/7309/413   14842/3613    47  284   24.33)
ramon: poll                 wall=5.000s usage=4.922s mem=25756KiB load=1.00 rootload=1.00
(smt.stats   46   6178 178092 811216  7599/7310/413   15272/3613    47  284   24.33)
(smt.stats   47   6300 183555 840918  7627/7314/414   15607/3812    48  297   24.42)
(smt.stats   48   6434 187238 857049  7794/7499/417   15974/3814    48  297   24.52)
(smt.stats   49   6581 191767 881473  7839/7523/420   16746/3873    49  304   24.71)
(smt.stats   50   6742 200157 953937  7874/7563/420   17071/3875    49  304   24.89)
ramon: poll                 wall=6.000s usage=5.922s mem=26360KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   51   6919 212105 1047856  7906/7609/421   18363/4024    51  318   25.08)
(smt.stats   52   7113 223425 1091951  7912/7615/421   19830/4024    51  318   25.27)
(smt.stats   53   7326 232450 1157924  8011/7621/421   20292/4027    51  318   25.37)
ramon: poll                 wall=7.000s usage=6.922s mem=26752KiB load=1.00 rootload=1.00
(smt.stats   54   7560 239219 1207820  8145/7848/423   20938/4447    52  320   25.46)
(smt.stats   55   7661 242611 1233436  8152/7855/423   21247/4521    53  320   25.56)
(smt.stats   56   7772 246704 1252510  8249/7857/423   21716/4525    53  320   25.56)
(smt.stats   57   7894 249958 1291083  8443/8032/423   22211/4526    53  320   25.65)
(smt.stats   58   8028 253167 1314964  8470/8152/423   22750/4526    53  320   25.65)
ramon: poll                 wall=8.000s usage=7.922s mem=27140KiB load=1.00 rootload=1.00
(smt.stats   59   8175 256363 1332571  8682/8179/423   23003/4530    53  320   25.84)
(smt.stats   60   8336 260341 1357615  8872/8496/423   23509/4532    53  320   25.84)
(smt.stats   61   8513 264839 1390538  8929/8598/424   24079/4927    54  330   26.04)
ramon: poll                 wall=9.000s usage=8.921s mem=27568KiB load=1.00 rootload=1.00
(smt.stats   62   8707 272948 1431444  9009/8635/424   24474/4936    54  330   26.04)
(smt.stats   63   8920 279650 1470540  9264/8753/424   25064/4939    54  330   26.37)
ramon: poll                 wall=10.000s usage=9.921s mem=27928KiB load=1.00 rootload=1.00
(smt.stats   64   9154 290725 1551324  9280/8982/424   26572/4940    54  330   26.47)
(smt.stats   65   9411 305365 1680074  9349/8985/424   27278/4942    54  330   26.57)
(smt.stats   66   9512 307662 1688474  9366/9069/424   27539/4942    54  330   26.78)
(smt.stats   67   9623 312543 1713280  9412/9071/424   27820/4942    54  330   26.78)
ramon: poll                 wall=11.000s usage=10.921s mem=28108KiB load=1.00 rootload=1.00
(smt.stats   68   9745 315423 1727146  9598/9142/424   28152/4943    54  330   26.78)
(smt.stats   69   9879 319332 1747878  9735/9360/424   28495/4944    54  330   26.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 105)
(smt.stats   70  10026 324293 1787007  9815/9469/424   28885/4949    54  330   26.97)
ramon: poll                 wall=12.000s usage=11.921s mem=28360KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   71  10187 330070 1843868 10100/9542/424   29348/4958    54  330   26.97)
(smt.stats   72  10364 337682 1898268 10361/9809/425   29853/5808    55  333   27.07)
(smt.stats   73  10558 342534 1916338 10411/10078/425   30193/5808    55  333   27.07)
ramon: poll                 wall=13.000s usage=12.921s mem=28688KiB load=1.00 rootload=1.00
(smt.stats   74  10771 351422 1961030 10630/10131/425   31989/5812    55  333   27.26)
(smt.stats   75  11005 359878 2015306 10789/10492/427   33650/6423    56  336   27.42)
(smt.stats   76  11262 371002 2116729 10799/10502/427   34893/6423    56  336   27.61)
ramon: poll                 wall=14.000s usage=13.920s mem=29068KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   77  11544 380591 2192291 10944/10517/427   36194/7008    57  356   27.71)
(smt.stats   78  11645 382108 2212043 10948/10651/428   36444/7167    58  358   27.71)
(smt.stats   79  11756 384762 2242751 10973/10655/428   36724/7170    58  358   27.81)
(smt.stats   80  11878 387345 2277178 11149/10704/428   36994/7174    58  358   27.90)
(smt.stats   81  12012 389234 2301711 11366/10926/428   37323/7179    58  358   27.90)
(smt.stats   82  12159 393374 2332339 11463/11093/432   37858/7274    59  378   28.00)
ramon: poll                 wall=15.000s usage=14.920s mem=29488KiB load=1.00 rootload=1.00
(smt.stats   83  12320 397081 2365025 11669/11372/433   38231/7275    59  378   28.09)
(smt.stats   84  12497 401572 2411388 11685/11388/434   38696/7395    60  436   28.09)
(smt.stats   85  12691 403059 2445269 11699/11394/435   38941/7395    60  436   28.19)
(smt.stats   86  12904 404128 2471816 11704/11403/436   39433/7504    61  489   28.19)
(smt.stats   87  13138 404600 2484603 11704/11407/436   39672/7504    61  489   28.19)
(smt.stats   88  13395 405222 2494977 11705/11408/436   40002/7504    61  489   28.29)
(smt.stats   89  13677 405864 2508428 11707/11410/436   40407/7504    61  489   28.29)
(smt.stats   90  13987 406631 2527848 11709/11412/436   40736/7742    62  507   28.70)
ramon: poll                 wall=16.000s usage=15.920s mem=30300KiB load=1.00 rootload=1.00
(smt.stats   91  14088 409303 2561631 11781/11457/437   41004/7745    62  507   28.91)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 1 := 72774474006528&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774474006528&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774474006528&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774473744384&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774473744384&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774473744384&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774473744384&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774473744384&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774474268672&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774474268672&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774474268672&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774475317248&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774475317248&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774479511552&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774479511552&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774496288768&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774496288768&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774479511552&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774529843200&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774529843200&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774479511552&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774596952064&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774496288768&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774529843200&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774596952064&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774731169792&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774596952064&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774731169792&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774999605248&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774596952064&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774731169792&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774999605248&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72776073347072&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72776073347072&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774999605248&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72778220830720&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774496288768&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774477414400&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774477414400&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774475317248&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774473220096&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 72774473220096&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71399536328704&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71400073199616&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71400073199616&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71400610070528&4398046511103
(smt.stats   92  14199 411747 2612573 12050/11673/575   43986/7905    63  563   29.72)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71399536328704&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71330816851968&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70506183131136&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70506183131136&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70643622084608&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70918499991552&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70918499991552&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70918499991552&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71468255805440&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71468255805440&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71502615543808&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71502615543808&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71468255805440&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71468255805440&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71468255805440&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 71468255805440&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70506183131136&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70369817919488&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70443914493952&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70443914493952&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70443906236416&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70443906236416&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70443906236416&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70443906236416&4398046511103
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 0 := 70443906236416&4398046511103
(smt.stats   93  14321 414092 2644429 12364/11802/671   45604/7909    63  563   30.45)
ramon: poll                 wall=17.000s usage=16.920s mem=32172KiB load=1.00 rootload=0.98
(smt.stats   94  14455 415541 2662394 12646/12052/701   46284/7912    63  563   30.64)
band: (band[48] (shl[64] (bv2int %0) (mod #354 64)) (if (= #754 63) 0 (if #756 1 #894))) 2 := 131074&35184372088831
(smt.stats   95  14602 422733 2703929 12674/12333/703   46838/7920    63  563   30.83)
(smt.stats   96  14763 430997 2730218 12815/12479/703   47167/8477    64  594   31.13)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   97  14940 441178 2766072 12891/12562/705   48185/8477    64  594   31.32)
(smt.delete-inactive-clauses  :num-deleted-clauses 1305)
ramon: poll                 wall=18.000s usage=17.919s mem=32932KiB load=1.00 rootload=1.00
(smt.stats   98  15134 455208 2853292 12920/12574/705   47690/8479    64  594   31.41)
(smt.stats   99  15347 472175 2990145 12945/12616/705   48572/8940    65  605   31.41)
ramon: poll                 wall=19.000s usage=18.919s mem=33292KiB load=1.00 rootload=1.00
(smt.stats  100  15581 483283 3105984 12992/12644/710   50351/9107    66  610   31.63)
(smt.stats  101  15838 501680 3295988 13045/12716/711   51554/10051    67  646   31.82)
ramon: poll                 wall=20.000s usage=19.919s mem=33468KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:13:00 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.980s
ramon: group.stime          0.020s
ramon: group.mempeak        33984KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              1.00
