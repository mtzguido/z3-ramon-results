ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:36:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41135 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/c52GMIYuU9XF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3021446
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5316    831  1106/1007/107      87/11     9   19   19.25)
(smt.stats    1    202   7052   1461  1962/1774/109     198/18    11   21   19.25)
(smt.stats    2    313   8305   2054  2104/1820/109     309/23    11   21   19.44)
(smt.stats    3    414   9702   3832  2351/2129/111     413/32    12   22   19.54)
(smt.stats    4    525  11083   5110  2504/2311/120     531/76    16   34   19.63)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 1 := 1&1384
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 1&1384
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 129 := 692 << 1
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 1&1384
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 129 := 692 << 1
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 1&1384
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 129 := 692 << 1
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 1&1384
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 129 := 692 << 1
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 1&1384
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 129 := 692 << 1
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 1&1384
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 1 := 1&1384
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 1 := 1&1384
(smt.stats    5    647  15663   7370  2595/2387/134     654/93    17   41   19.73)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&1373
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&1373
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&1374
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&1373
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&1374
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&1376
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&1408
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #835 #292 #665) 64)) 8589936000 := 1372 << 6
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&1408
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #835 #292 #665) 64)) 8589936000 := 1372 << 6
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&1408
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #835 #292 #665) 64)) 8589936000 := 1372 << 6
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&8575255270
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&8575255272
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&8575255272
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&8575255280
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&8575255272
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&8575255280
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&8575255296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #835 #292 #665) 64)) 17165189888 := 1372 << 6
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 126 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 124 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 120 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 16 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 32 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 64 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 118 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 116 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 112 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 96 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 64 := 127&87808
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&87808
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 1373 := 686 << 7
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&87808
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 1373 := 686 << 7
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&87808
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 87807 := 686 << 7
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 127&87808
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 87807 := 686 << 7
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  19409   8625  2701/2422/144     760/99    18   44   20.14)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 128 := 16383&8589934589
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 128 := 16383&8586790336
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 128 := 16383&8586790400
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 256 := 16383&8589934336
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 128 := 16383&8586790337
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 128 := 16383&8586790336
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 188 := 16383&8586790396
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 136 := 16383&8586790344
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 136 := 16383&8586790464
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 136 := 16383&8586790472
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 192 := 16383&8586790464
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 192 := 16383&8586790464
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 192 := 16383&8586790592
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 192 := 16383&8586791104
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 192 := 16383&8586791104
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 192 := 16383&8586793024
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 192 := 16383&8586793152
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 192 := 16383&8586790976
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 192 := 16383&8586791104
(smt.stats    7    859  23880  10623  2761/2512/216     885/109    20   61   20.23)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586794432
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586798144
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586797120
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586797120
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586797120
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4416 := 16383&8586797120
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586805312
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586805312
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586813504
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586817600
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586817600
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586813504
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586817600
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4160 := 16383&8586825792
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #835 #292 #665) 64)) 8586825792 := 1358 << 13
(smt.stats    8    981  26624  14409  2871/2662/299    1232/152    22   81   20.52)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 196608 := 262143&196608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #835 #292 #665) 64)) 8590131200 := 3066 << 17
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 245760 := 262143&245760
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #835 #292 #665) 64)) 8590180352 := 3726 << 17
(smt.stats    9   1115  33189  20012  2967/2685/300    1403/160    23   84   20.90)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 229376 := 262143&229376
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #835 #292 #665) 64)) 8590163968 := 3330 << 17
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 229376 := 262143&229376
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #835 #292 #665) 64)) 8590163968 := 3330 << 17
ramon: poll                 wall=1.000s usage=0.944s mem=22228KiB load=0.94 rootload=0.93
(smt.stats   10   1216  37219  22966  3189/2975/307    1603/203    25   86   21.10)
(smt.stats   11   1327  43051  25455  3274/2979/307    1817/226    26   91   21.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  46007  29291  3587/3191/310    2000/269    27   95   21.29)
(smt.stats   13   1583  50450  37335  3678/3467/326    2556/390    30  113   21.38)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 576 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 576 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 578 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 576 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 578 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 578 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 594 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 578 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 578 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 582 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 606 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 606 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 590 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 590 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 606 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 638 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 718 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 734 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 766 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 766 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 462 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 478 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 510 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 510 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 511 := 4294967295&8589934590
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 511 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 511 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 1023 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 2047 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 4095 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 147455 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 147455 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 139263 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 147455 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 139263 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 147455 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 163839 := 4294967295&8589934591
(smt.stats   14   1730  57647  43820  3898/3683/405    3029/549    32  128   21.55)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 172031 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 180223 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 180223 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 188415 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 180223 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 155647 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 163839 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 188415 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 163839 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 163839 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 163839 := 4294967295&8589934591
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 163839 := 4294967295&8589934591
(smt.stats   15   1831  60177  47093  4020/3800/422    3240/626    33  132   21.78)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 163839 := 8589934591&8587730943
ramon: poll                 wall=2.000s usage=1.942s mem=23072KiB load=1.00 rootload=0.99
(smt.stats   16   1942  62082  51476  4307/3904/422    3666/629    33  132   21.87)
(smt.stats   17   2064  67240  56361  4449/4106/424    4151/791    34  137   22.19)
(smt.stats   18   2198  71992  59904  4902/4394/424    4448/794    34  137   22.19)
ramon: poll                 wall=3.000s usage=2.940s mem=23632KiB load=1.00 rootload=1.00
(smt.stats   19   2345  78397  69511  5206/4791/424    5124/806    34  137   22.38)
(smt.stats   20   2506  83128  75296  5556/5105/424    5757/812    34  137   22.57)
(smt.stats   21   2607  88837  90273  5795/5460/425    6453/1249    35  139   22.57)
(smt.stats   22   2718  93698 105052  5827/5600/428    6721/1415    36  141   22.66)
ramon: poll                 wall=4.002s usage=3.940s mem=23976KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   23   2840 100760 119193  5905/5676/429    7646/1535    37  145   22.76)
(smt.stats   24   2974 107074 135328  6010/5710/429    7832/1890    38  149   22.86)
(smt.stats   25   3121 112513 144056  6233/5813/429    8380/1895    38  149   23.05)
ramon: poll                 wall=5.000s usage=4.938s mem=24312KiB load=1.00 rootload=1.00
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 16387 := 8589934591&16391
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 16387 := 8589934591&16391
(smt.stats   26   3282 120686 157217  6390/6126/433    8776/2064    39  150   23.18)
(smt.stats   27   3459 125997 169980  6596/6219/433    9691/2117    40  179   23.46)
(smt.stats   28   3560 128610 180668  6647/6393/433    9894/2126    40  179   23.46)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 737296 := 8589934591&737304
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 737296 := 8589934591&737304
(smt.stats   29   3671 131120 189139  6833/6519/433   10145/2130    40  179   23.58)
(smt.stats   30   3793 131913 190610  7107/6773/435   10365/2401    41  181   23.68)
(smt.stats   31   3927 136275 211528  7484/7060/435   11167/2403    41  181   23.77)
ramon: poll                 wall=6.000s usage=5.937s mem=25328KiB load=1.00 rootload=0.99
(smt.stats   32   4074 142244 229006  7607/7293/436   12095/2600    42  182   23.97)
(smt.stats   33   4235 146646 245814  8098/7524/437   12567/2896    43  182   24.16)
(smt.stats   34   4412 154626 272602  8361/8120/439   13757/3282    44  186   24.35)
ramon: poll                 wall=7.000s usage=6.937s mem=25816KiB load=1.00 rootload=1.00
(smt.stats   35   4606 162158 308852  8524/8182/446   15105/3620    45  206   24.54)
(smt.stats   36   4707 168116 331515  8654/8324/446   15590/3623    45  206   24.54)
(smt.stats   37   4818 173984 349656  8786/8473/446   15905/3948    46  210   24.66)
ramon: poll                 wall=8.000s usage=7.937s mem=26220KiB load=1.00 rootload=1.00
(smt.stats   38   4940 177768 365871  8884/8581/446   16356/3952    46  210   24.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 182105 375393  8949/8685/446   16709/3960    46  210   24.74)
(smt.stats   40   5221 187544 397443  9089/8751/446   17038/3963    46  210   24.87)
(smt.stats   41   5382 191515 435696  9128/8902/446   17523/3963    46  210   24.87)
(smt.stats   42   5559 196305 457694  9221/8940/450   18112/4793    47  218   24.97)
ramon: poll                 wall=9.000s usage=8.937s mem=26504KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5753 200670 489242  9554/9127/451   18878/4810    47  218   25.26)
(smt.stats   44   5966 206747 510774 10044/9373/452   19504/5084    48  254   25.36)
ramon: poll                 wall=10.000s usage=9.936s mem=26772KiB load=1.00 rootload=1.00
(smt.stats   45   6067 210312 530937 10116/9883/455   19965/5210    49  258   25.46)
(smt.stats   46   6178 216242 540470 10239/9944/455   20119/5217    49  258   25.46)
(smt.stats   47   6300 220418 559579 10451/10128/455   20755/5259    50  261   25.65)
ramon: poll                 wall=11.000s usage=10.936s mem=27108KiB load=1.00 rootload=1.00
(smt.stats   48   6434 223266 562580 10625/10273/455   21179/5261    50  261   25.75)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   49   6581 227224 572372 10879/10554/455   21928/5269    50  261   25.75)
(smt.stats   50   6742 231800 586348 11112/10700/456   22201/5709    51  265   25.85)
ramon: poll                 wall=12.000s usage=11.936s mem=27356KiB load=1.00 rootload=1.00
(smt.stats   51   6919 238015 632475 11335/10998/456   23285/5710    51  265   25.96)
(smt.stats   52   7113 243434 651499 11434/11171/456   23931/5713    51  265   26.08)
(smt.stats   53   7326 252512 705010 11633/11416/457   24756/6216    52  279   26.39)
ramon: poll                 wall=13.000s usage=12.936s mem=27840KiB load=1.00 rootload=1.00
(smt.stats   54   7560 261056 762498 11862/11418/457   26281/6219    52  279   26.48)
(smt.stats   55   7661 264881 784634 11975/11687/457   26471/6220    52  279   26.48)
(smt.stats   56   7772 267436 813629 12006/11776/457   26988/6220    52  279   26.58)
(smt.stats   57   7894 272906 869020 12079/11791/457   27243/6220    52  279   26.58)
ramon: poll                 wall=14.000s usage=13.935s mem=28392KiB load=1.00 rootload=1.00
(smt.stats   58   8028 277516 905968 12214/11887/457   27936/6223    52  279   26.77)
(smt.stats   59   8175 282150 960992 12338/12021/457   28247/6223    52  279   26.77)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   60   8336 287419 1053203 12415/12130/457   28680/6223    52  279   26.77)
ramon: poll                 wall=15.000s usage=14.935s mem=28416KiB load=1.00 rootload=1.00
(smt.stats   61   8513 293014 1123193 12502/12201/457   28958/6223    52  279   26.89)
(smt.stats   62   8707 301123 1192357 12590/12370/458   29355/7123    53  291   26.89)
ramon: poll                 wall=16.000s usage=15.935s mem=28436KiB load=1.00 rootload=1.00
(smt.stats   63   8920 306275 1263150 12629/12383/461   29823/7126    53  291   26.99)
(smt.stats   64   9154 315031 1337605 12810/12427/461   30332/7196    54  337   27.18)
ramon: poll                 wall=17.000s usage=16.935s mem=28580KiB load=1.00 rootload=1.00
(smt.stats   65   9411 321721 1371738 12875/12651/465   30913/7352    55  339   27.18)
(smt.stats   66   9512 324353 1390116 12925/12675/465   31878/7355    55  339   27.28)
(smt.stats   67   9623 329120 1423325 12999/12717/465   32516/7487    56  370   27.38)
(smt.stats   68   9745 334157 1452901 13058/12826/466   32883/7566    57  382   27.47)
(smt.stats   69   9879 339459 1471260 13098/12865/466   33140/7569    57  382   27.47)
ramon: poll                 wall=18.000s usage=17.935s mem=28920KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 511)
(smt.stats   70  10026 343758 1523614 13113/12894/473   32948/7705    58  399   27.48)
(smt.stats   71  10187 350551 1609073 13133/12905/473   33436/7707    58  399   27.48)
(smt.stats   72  10364 355469 1652565 13203/12924/473   33989/7953    59  417   27.57)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 1172 := 8589934591&1280
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 1184 := 8589934591&1280
(smt.stats   73  10558 359109 1676143 13326/13063/473   34788/7960    59  417   27.68)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 49152 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 32768 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 7341940 := 1071 << 18
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 7341940 := 1071 << 18
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 7341940 := 1071 << 18
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #118))) 7341940 := 1071 << 18
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 65534 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 65532 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 640 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 768 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 1024 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 2048 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 4096 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 8192 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 16384 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 32768 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 32768 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 16384 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 32768 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 8192 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 8192 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 8192 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 8192 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 4096 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 2048 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 1024 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 768 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 768 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 760 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 752 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 736 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 640 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 638 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 2 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 65536 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 131072 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 131072 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 196608 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 16 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 32 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 64 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 512 := 262143&280756224
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 0 := 262143&280756224
band: (band[33] (if (= #122 32) 1 (if #566 3 #654)) (shl[33] (bv2int %0) (+ 33 #657))) 576 := 262143&280756224
(smt.stats   74  10771 364366 1702589 13622/13381/635   35178/8247    60  448   28.16)
band: (band[33] (if (= #672 63) 1 (if #674 3 #828)) (shl[64] (* 2 #116) (mod #850 64))) 2112 := 4095&282329088
(smt.stats   75  11005 372296 1744185 13857/13581/638   36008/8253    60  448   28.64)
ramon: poll                 wall=19.002s usage=18.936s mem=30180KiB load=1.00 rootload=0.98
(smt.stats   76  11262 383692 1819345 14295/13639/638   36954/8526    61  466   28.89)
(smt.stats   77  11544 393292 1929377 14674/14095/638   38279/8538    61  466   29.19)
ramon: poll                 wall=20.000s usage=19.932s mem=31132KiB load=1.00 rootload=1.00
(smt.stats   78  11645 399637 1991735 14705/14437/638   38525/8538    61  466   29.29)
ramon: end                  Tue Dec 24 15:36:50 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.994s
ramon: group.utime          19.954s
ramon: group.stime          0.040s
ramon: group.mempeak        31392KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
