ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:21:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29132 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1399
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Nq9RHmbRo9ra.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             393205
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   200/200     0/0  61       0    18.54   0.00)
(sat.stats    101    712    0   200/200   101/28  61       0    18.73   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 460 :time 0.00)
(sat.stats    101    712    0   200/200   101/28  61       0    18.73   0.00)
(sat.stats    101    712    0   200/200   101/28  61       0    18.73   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 320018.73 :time 0.00)
(sat.stats    101    712    0   202/202    37/27  61       0    18.73   0.01)
(sat.stats    104    725    1   202/202    40/30  61       0    18.73   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    751    2   202/202    43/33  61       0    18.73   0.01)
(sat.stats    110    799    3   202/202    46/36  61       0    18.83   0.01)
(sat.stats    113    852    4   202/202    49/39  61       0    18.83   0.01)
(sat.stats    164   2133    5   202/202   100/74  61       0    18.83   0.01)
(sat.stats    167   2200    6   202/202   103/74  61       0    18.83   0.01)
(sat.stats    170   2263    7   202/202   106/74  61       0    18.83   0.01)
(sat.stats    173   2332    8   202/202   109/74  61       0    18.83   0.01)
(sat.stats    176   2396    9   202/202   112/74  61       0    18.83   0.01)
(sat.stats    179   2491   10   202/202   115/76  61       0    18.83   0.01)
(sat.stats    182   2572   11   202/202   118/76  61       0    18.83   0.01)
(sat.stats    185   2657   12   202/202   121/76  61       0    18.83   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    291   4111   19   204/204   227/142  61       0    19.04   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1905 :time 0.00)
(sat.stats    400   5716   22   206/206   335/209  68       0    19.42   0.05)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3502 :time 0.00)
(sat.stats    594   7041   23   900/899   529/236  70       0    20.16   0.66)
ramon: poll                 wall=1.000s usage=0.998s mem=21724KiB load=1.00 rootload=0.99
(sat.stats    715   7515   39  2812/2811   652/238  70       0    20.54   1.12)
ramon: poll                 wall=2.000s usage=1.998s mem=22780KiB load=1.00 rootload=1.00
(sat.stats   1215  11503   64  9820/9819  1200/254  70       0    22.28   2.50)
ramon: poll                 wall=3.000s usage=2.998s mem=24260KiB load=1.00 rootload=1.00
(sat.stats   1599  15016  180 11603/11602  1635/268  70       0    23.16   3.00)
ramon: poll                 wall=4.000s usage=3.998s mem=27464KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units        :memory       )
(sat.stats   2521  26227  238 23247/23246  2851/306  70       0    27.26   4.01)
ramon: poll                 wall=5.000s usage=4.997s mem=31164KiB load=1.00 rootload=1.00
(sat.stats   3887  48455  285 26511/26510  4476/446  70       0    33.62   5.23)
 (sat-cleaner :elim-literals 5 :elim-clauses 3 :cost 36337 :time 0.00)
ramon: poll                 wall=6.000s usage=5.997s mem=35060KiB load=1.00 rootload=1.00
(sat.stats   5395  89818  356 29095/29094  5492/650  76       0    34.23   6.09)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 45432 :time 0.00)
lshr: (lshr[34] (bv2int %0) (+ 34 (* 17179869183 #56))) 2380 := 19 >>l 15
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 0&17179344896
lshr: (lshr[64] (* 536870912 (bv2int %0)) (mod (+ 63 #513 #517) 64)) 51539607518 := 10200547328 >>l 44
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 1 := 1&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 2 := 2&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 4 := 4&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 8 := 8&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 16 := 16&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 32 := 32&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 64 := 64&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 128 := 128&17179344896
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 48418 :time 0.00)
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 256 := 256&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 512 := 512&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 1024 := 1024&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 2048 := 2048&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 4096 := 4096&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 8192 := 8192&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 16384 := 16384&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 32768 := 32768&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 65536 := 65536&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 131072 := 131072&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 262144 := 262144&17179344896
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 39222 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 73849 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 400656 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 473196 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 7936 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 8192 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 16384 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 32768 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 65536 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 131072 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 262144 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 4800 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 4768 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 3080 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 3072 := 17179344896&524287
ramon: poll                 wall=7.000s usage=6.995s mem=37304KiB load=1.00 rootload=1.00
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 2560 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 2176 := 17179344896&524287
band: (band[34] (lshr[34] (bv2int %0) (+ 34 #434)) (if (= #82 33) 73786976286248271872 (if #438 36893488143124135936 #502))) 0 := 524287&17179344896
band: (band[34] (if (= #230 63) 79228162505040965556689174528 (if #412 39614081252520482778344587264 #409)) (lshr[64] (* 536870912 #55) (mod #520 64))) 2048 := 17179344896&524287
ramon: poll                 wall=8.000s usage=7.995s mem=39440KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.003s usage=8.999s mem=41200KiB load=1.00 rootload=1.00
(sat.stats   8091 140708  574 59005/59003  7197/996 133       0    40.95   9.74)
ramon: poll                 wall=10.000s usage=9.995s mem=42432KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.995s mem=43944KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.994s mem=45532KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.994s mem=46348KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.994s mem=47396KiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.994s mem=47828KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.993s mem=48528KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.993s mem=50460KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.993s mem=52148KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.993s mem=52340KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.993s mem=52912KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:21:54 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.005s
ramon: group.utime          19.997s
ramon: group.stime          0.008s
ramon: group.mempeak        53168KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
