ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:53:52 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41569 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1336
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/3L8ePOc9BLV2.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3661380
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   202/202     0/0  64       0    18.54   0.00)
(sat.stats    105    558    0   202/202   105/37  64       0    18.73   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 415 :time 0.00)
(sat.stats    105    558    0   202/202   105/37  64       0    18.73   0.00)
(sat.stats    105    558    0   202/202   105/37  64       0    18.73   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 393218.83 :time 0.00)
(sat.stats    105    558    0   202/202    86/37  64       0    18.83   0.00)
(sat.stats    126    886    1   202/202   107/54  64       0    18.83   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    129    936    2   202/202   110/54  64       0    18.83   0.01)
(sat.stats    156   1586    3   202/202   137/72  64       0    18.83   0.01)
(sat.stats    159   1612    4   202/202   140/72  64       0    18.83   0.01)
(sat.stats    162   1641    5   202/202   143/72  64       0    18.83   0.01)
(sat.stats    165   1688    6   202/202   146/72  64       0    18.83   0.01)
(sat.stats    168   1741    7   202/202   149/72  64       0    18.83   0.01)
(sat.stats    171   1764    8   202/202   152/75  64       0    18.83   0.01)
(sat.stats    174   1809    9   202/202   155/78  64       0    18.83   0.01)
(sat.stats    177   1890   10   202/202   158/81  64       0    18.83   0.01)
(sat.stats    180   1958   11   202/202   161/84  64       0    18.83   0.01)
(sat.stats    183   2051   12   202/202   164/87  64       0    18.83   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    220   3083   15   202/202   201/112  64       0    18.94   0.01)
(sat.stats    317   5377   29   203/203   298/149  64       0    19.04   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3886 :time 0.00)
 (sat-cleaner :elim-literals 18 :elim-clauses 0 :cost 6361 :time 0.00)
lshr: (lshr[35] (bv2int %0) (+ 35 (* 34359738367 #66))) 0 := 69 >>l 1
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 10 := 17&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 5 := 17&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 4 := 17&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 8 := 17&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 16 := 17&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 17&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 3 := 17179869184&17
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 17&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 6 := 17179869184&17
(sat.stats    672  21138   46  1091/1088   669/305  88       0    20.43   0.44)
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 17&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 4 := 17179869184&17
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 17&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 8 := 17179869184&17
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 17&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 16 := 17179869184&17
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 6852 :time 0.00)
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 134 := 262&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 164 := 262&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 64 := 262&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 256 := 262&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 128 := 227&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 96 := 227&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 64 := 227&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 227&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 64 := 17179869184&227
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 227&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 32 := 17179869184&227
(sat.stats    730  26152   56  1898/1895   735/319 150       0    20.83   0.47)
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 227&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 128 := 17179869184&227
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 8 := 122&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 437&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 256 := 17179869184&437
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 647&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 512 := 17179869184&647
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 1207&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 1024 := 17179869184&1207
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 2327&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 2048 := 17179869184&2327
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 5687&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 4096 := 17179869184&5687
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 8487&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 8192 := 17179869184&8487
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 17447&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 16384 := 17179869184&17447
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 33687&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 32768 := 17179869184&33687
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 0 := 65607&17179869184
band: (band[35] (if (= #519 63) 158456325019305303150233124864 (if #521 79228162509652651575116562432 #645)) (lshr[64] (mod #420 17179869184) (mod #653 64))) 65536 := 17179869184&65607
(sat.stats   1200  38620   60 17700/17697  1872/991 150       0    25.57   0.75)
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 63488 := 65607&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 512 := 65607&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 1024 := 65607&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 20480 := 65607&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 57344 := 65607&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 32768 := 65607&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 16384 := 65607&17179869184
band: (band[35] (lshr[35] (bv2int %0) (+ 35 #438)) (if (= #75 34) 295147905162172956672 (if #442 147573952581086478336 #508))) 65536 := 65607&17179869184
ramon: poll                 wall=1.000s usage=0.935s mem=28100KiB load=0.94 rootload=0.92
ramon: poll                 wall=2.002s usage=1.936s mem=32344KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.932s mem=43512KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.932s mem=45844KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.931s mem=50360KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.931s mem=61904KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 16135 :time 0.00)
(sat.stats   2900  57451   61 202295/202292  5949/3498 310       0    63.47   6.25)
(sat.stats :conflicts   :restarts         :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin            :units         :memory       )
(sat.stats   2905  57454   62 202295/202292  5954/3498 310       0    63.47   6.25)
ramon: poll                 wall=7.000s usage=6.931s mem=63952KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.931s mem=64208KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.925s mem=64572KiB load=0.99 rootload=0.99
ramon: poll                 wall=10.000s usage=9.925s mem=64572KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.925s mem=64952KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.925s mem=64952KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.002s usage=12.928s mem=65208KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.924s mem=65208KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.924s mem=65208KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.924s mem=65208KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.924s mem=65464KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.924s mem=65464KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.921s mem=65576KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.920s mem=65832KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:54:12 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.992s
ramon: group.utime          19.972s
ramon: group.stime          0.020s
ramon: group.mempeak        69972KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
