ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:31:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29514 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/29JMsTAYncjY.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             601167
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   1135    441  1135/1013/107      75/16    11   30   51.76)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1 := 2251799813685241 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1 := 2251799813685241 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1 := 2251799813685246 << 6
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1 := 2251799813685246 << 6
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1 := 2251799813685246 << 6
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685246&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685246 := 2251799813685246 << 6
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   88.4956     10000        49          0            1        2)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685244&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685244 := 2251799813685244 << 4
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685244&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685244 := 2251799813685244 << 4
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685244&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685244 := 2251799813685244 << 4
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685243&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685243 := 2251799813685244 << 4
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685243&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685243 := 2251799813685244 << 4
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685244&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685244 := 2251799813685245 << 5
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685245&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685245 := 2251799813685245 << 5
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685245&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685245 := 2251799813685245 << 5
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685241&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685241 := 2251799813685242 << 2
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685241&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685241 := 2251799813685242 << 2
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685242&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685242 := 2251799813685243 << 3
(smt.stats    1    202   1696   1130  1378/1181/107     176/16    12   31   51.96)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685241&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685241 := 2251799813685241 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685234&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685247 := 2251799813685241 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685234&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685247 := 2251799813685241 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685234&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685240 := 2251799813685241 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685234&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685235 := 2251799813685241 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685235&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4503599627370483 := 2251799813685242 << 2
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685237&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4503599627370485 := 2251799813685243 << 3
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685237&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4503599627370485 := 2251799813685243 << 3
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685249 := 2251799813685247 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685249 := 2251799813685247 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685245&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4503599627370493 := 2251799813685247 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685245&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4503599627370493 := 2251799813685247 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685120&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685245 := 2251799813685247 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685120&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685245 := 2251799813685247 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685120&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685245 := 2251799813685247 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685120&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685121 := 2251799813685247 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685120&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685121 := 2251799813685247 << 7
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2251799813685242 << 2
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2251799813685242 << 2
(smt.stats    2    313   2559   2352  1468/1309/160     267/31    16   60   52.15)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685152&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685243 := 2251799813685245 << 5
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685152&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685243 := 2251799813685245 << 5
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685152&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685243 := 2251799813685245 << 5
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685120&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685184 := 2251799813685246 << 6
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685120&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685184 := 2251799813685246 << 6
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685184&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685239 := 2251799813685244 << 4
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685184&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685239 := 2251799813685244 << 4
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685184&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685185 := 2251799813685244 << 4
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685208&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685237 := 2251799813685243 << 3
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685208&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685237 := 2251799813685243 << 3
(sat.ddfw       1      1   45.2534     20001        98          1            1        3)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #872 #873 #874 #875 #876 #877 #878 #879 #880 #881 #882 #883 #884 #885 #886 #887 ...) 0 (if #923 1 #947))) 0 := 2251799813685208&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2251799813685209 := 2251799813685243 << 3
(smt.stats    3    414   3737   3726  1573/1402/181     386/36    17   66   52.34)
(sat.ddfw       1      1   44.9438     40001       196          2            1        5)
(sat.ddfw       1      1    38.961     70001       343          3            1        8)
(smt.stats    4    526   4928   4968  1662/1493/210     447/63    21  113   52.63)
ramon: poll                 wall=1.000s usage=0.920s mem=55020KiB load=0.92 rootload=0.90
(sat.ddfw       1      1   33.0033    110001       539          4            1       12)
(smt.stats    5    648   5912   6110  1766/1504/215     571/68    21  113   52.82)
(sat.ddfw       1      1   28.2002    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.865s mem=55052KiB load=0.94 rootload=0.94
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas       :deletions     )
(smt.stats    6    749   7248   7041  1859/1670/216     657/81    23  127   52.91)
(sat.ddfw       1      1   23.1575    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.732s mem=55268KiB load=0.87 rootload=0.87
(smt.stats    7    860   8409   8256  2007/1739/216     786/83    23  127   53.10)
(sat.ddfw       1      1    19.674    290001      1421          7            1       30)
(smt.stats    8    982  10094  10275  2104/1908/217     912/100    24  134   53.10)
ramon: poll                 wall=4.000s usage=3.624s mem=55716KiB load=0.89 rootload=0.89
(smt.stats    9   1116  13116  12795  2217/1974/219    1043/105    25  142   53.10)
(sat.ddfw       1      1   17.7778    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=4.598s mem=55508KiB load=0.97 rootload=0.98
(smt.stats   10   1217  14248  14111  2375/2086/220    1154/113    26  146   53.20)
(sat.ddfw       1      1   16.3845    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=5.564s mem=55764KiB load=0.97 rootload=0.96
(smt.stats   11   1328  16180  16560  2569/2384/221    1290/131    27  149   53.29)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  18211  19654  2650/2481/232    1420/183    29  175   53.29)
(sat.ddfw       1      1   15.0173    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=6.512s mem=55640KiB load=0.95 rootload=0.95
(smt.stats   13   1584  20030  23023  2709/2501/232    1567/184    29  175   53.39)
(smt.stats   14   1731  22765  25990  2824/2557/232    1731/202    30  180   53.48)
(sat.ddfw       1      1   13.9985    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.512s mem=55836KiB load=1.00 rootload=1.00
(smt.stats   15   1832  23811  28623  3005/2696/232    1857/208    30  180   53.58)
(smt.stats   16   1943  24982  30102  3187/2873/232    1977/211    30  180   53.58)
ramon: poll                 wall=9.000s usage=8.509s mem=55920KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.1291    790001      3872         12            1       80)
(smt.stats   17   2065  26322  33209  3250/3054/234    2103/245    31  203   53.58)
(smt.stats   18   2199  27721  35766  3429/3256/237    2291/246    31  203   53.77)
ramon: poll                 wall=10.000s usage=9.509s mem=56096KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.5374    920001      4509         13            1       93)
(smt.stats   19   2346  30104  39878  3527/3272/237    2469/261    32  217   53.77)
ramon: poll                 wall=11.000s usage=10.588s mem=56164KiB load=1.08 rootload=1.08
(smt.stats   20   2507  32271  43040  3676/3381/237    2636/263    32  217   53.96)
(smt.stats   21   2608  34282  44432  3709/3511/237    2739/263    32  217   54.25)
(sat.ddfw       1      1    11.742   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=11.548s mem=56676KiB load=0.96 rootload=0.96
(smt.stats   22   2719  35122  46361  3904/3584/237    2858/264    32  217   54.54)
ramon: poll                 wall=13.000s usage=12.530s mem=56932KiB load=0.98 rootload=0.98
(smt.stats   23   2841  36830  49852  4066/3859/237    2991/264    32  217   54.54)
(sat.ddfw       1      1   11.0375   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.500s mem=56996KiB load=0.97 rootload=0.97
(smt.stats   24   2975  38899  53201  4315/3938/237    3163/266    32  217   54.78)
ramon: poll                 wall=15.000s usage=14.399s mem=57260KiB load=0.90 rootload=0.89
(smt.stats   25   3122  40882  56229  4382/4173/238    3319/356    33  218   54.87)
(sat.ddfw       1      1   10.3473   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=15.399s mem=57404KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.301s mem=57660KiB load=0.90 rootload=0.91
(sat.ddfw       1      1   9.82886   1540001      7549         17            1      156)
(smt.stats   26   3283  41240  56758  4535/4314/238    3487/366    33  218   55.60)
ramon: poll                 wall=18.000s usage=17.347s mem=58044KiB load=1.05 rootload=1.04
(smt.stats   27   3460  44176  59798  4934/4716/238    3698/369    33  218   55.41)
(smt.stats   28   3561  46184  61665  5037/4856/238    3813/370    33  218   55.41)
ramon: poll                 wall=19.000s usage=18.314s mem=58176KiB load=0.97 rootload=0.97
(smt.stats   29   3672  49912  64822  5126/4882/238    3942/375    33  218   55.50)
(sat.ddfw       1      1   9.32739   1720001      8431         18            1      174)
ramon: poll                 wall=20.000s usage=19.314s mem=58216KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 21:31:41 2024
ramon: root.execname        z3
ramon: root.utime           19.350s
ramon: root.stime           0.020s
ramon: group.total          19.375s
ramon: group.utime          19.351s
ramon: group.stime          0.024s
ramon: group.mempeak        58472KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              0.97
