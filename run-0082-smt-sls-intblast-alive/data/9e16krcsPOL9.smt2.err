ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:50:34 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29105 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9e16krcsPOL9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             668637
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 396 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 102 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 394 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 390 << 4
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   56.8182     10000        49          0            1        2)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 374 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 375 := 376 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 391 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 387 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 355 := 384 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 323 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 339 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 381 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 381 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 377 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 379 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 379 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 380 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 377 := 378 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 383 := 384 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 391 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 389 := 390 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 385 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 391 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 392 << 3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 387 := 388 << 5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 383 := 384 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 384 << 7
(smt.stats    0    101    549    556   199/191/128      82/15    10   32   51.35)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 1 := 374 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 373 := 374 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 393 := 394 << 2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 395 := 396 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 396 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 396 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 376 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 376 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 376 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 382 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 386 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 390 << 4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 304 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 372 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
(sat.ddfw       1      1   26.3879     20001        98          1            1        3)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 304 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 302 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 304 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 370 << 14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 304 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 368 << 15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 306 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 366 << 16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 308 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
(sat.ddfw       1      1   29.5421     40001       196          2            1        5)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 364 << 17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 310 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 362 << 18
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 312 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 360 << 19
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 314 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 358 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 316 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
ramon: poll                 wall=1.000s usage=0.826s mem=54460KiB load=0.83 rootload=0.80
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 356 << 21
(smt.stats    1    202   2078   2809   473/254/142     210/32    12   41   52.35)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 336 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 354 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 338 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 352 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 340 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 350 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 342 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 348 << 25
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 344 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 346 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 318 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 320 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 332 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 330 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 322 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 328 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 324 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 326 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 0 := 334 << 32
(sat.ddfw       1      1   27.2975     70001       343          3            1        8)
(sat.ddfw       1      1   24.0096    110001       539          4            1       12)
(smt.stats    2    313   3441   4406   680/644/319     317/87    15   81   53.18)
ramon: poll                 wall=2.000s usage=1.825s mem=55512KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.0877    160000       784          5            1       17)
ramon: poll                 wall=3.000s usage=2.825s mem=55860KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    18.605    220001      1078          6            1       23)
(smt.stats    3    414   3938   4709   850/705/319     418/103    15   81   53.56)
ramon: poll                 wall=4.000s usage=3.824s mem=55972KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.6113    290001      1421          7            1       30)
ramon: poll                 wall=5.000s usage=4.824s mem=56172KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   14.9365    370001      1813          8            1       38)
ramon: poll                 wall=6.000s usage=5.824s mem=56396KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    13.589    460001      2254          9            1       47)
(smt.stats    4    525   5605   5494  1021/920/324     504/119    17   86   54.14)
ramon: poll                 wall=7.000s usage=6.823s mem=56444KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.823s mem=56580KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.4208    560001      2745         10            1       57)
(smt.stats    5    647   8074   7092  1300/1049/324     625/133    17   86   54.23)
ramon: poll                 wall=9.000s usage=8.822s mem=57020KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.4548    670001      3284         11            1       68)
ramon: poll                 wall=10.000s usage=9.821s mem=57020KiB load=1.00 rootload=1.00
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748   9699   7831  1424/1271/324     730/158    17   86   54.42)
ramon: poll                 wall=11.000s usage=10.821s mem=57024KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.6007    790001      3872         12            1       80)
ramon: poll                 wall=12.000s usage=11.916s mem=57024KiB load=1.10 rootload=1.10
(smt.stats    7    859  11006   9235  1615/1419/324     838/183    17   86   54.61)
ramon: poll                 wall=13.004s usage=13.052s mem=57080KiB load=1.13 rootload=1.13
(sat.ddfw       1      1   9.97085    920001      4509         13            1       93)
(smt.stats    8    981  14011  12691  1731/1599/324     945/199    17   86   54.71)
ramon: poll                 wall=14.000s usage=14.046s mem=57108KiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=15.046s mem=57412KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.31718   1060001      5196         14            1      108)
(smt.stats    9   1115  16927  16486  1906/1842/330    1070/223    20   90   54.71)
ramon: poll                 wall=16.004s usage=16.049s mem=57420KiB load=1.00 rootload=1.01
ramon: poll                 wall=17.000s usage=17.045s mem=57420KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   8.74228   1210001      5931         15            1      123)
(smt.stats   10   1216  19646  19796  2023/1953/333    1161/238    22   91   54.90)
ramon: poll                 wall=18.000s usage=18.046s mem=57420KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=19.042s mem=57420KiB load=1.00 rootload=1.00
(smt.stats   11   1327  22149  21728  2161/1989/333    1281/255    22   91   55.09)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 22517998673723273 := 2250700637601800 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 22517998673723273 := 2250700637601800 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 4398046511103 := 2250700637601800 << 49
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26736  25181  2232/2167/334    1401/263    23   92   55.00)
(sat.ddfw       1      1    8.2313   1370001      6715         16            1      139)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18410726271810535425 := 2250700637601904 << 47
(smt.stats   13   1583  30368  28722  2311/2240/339    1613/269    24   94   55.09)
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645186 := 1125350318800952 << 48
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645186 := 1125350318800952 << 48
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645186 := 1125350318800952 << 48
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1099528807645187 := 1125350318800952 << 48
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #95))) 1125350318800951 := 1125350318800952 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 16325548649218049 := 2250700637601908 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 16044073672507393 := 2250700637601906 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 16887949014597689 := 2250700637601910 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18005605100815295 := 2250700637601912 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18005605100815327 := 2250700637601916 << 41
ramon: poll                 wall=20.000s usage=20.047s mem=57748KiB load=1.01 rootload=1.00
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 19139748828282942 := 2250700637601920 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 19139748828282942 := 2250700637601920 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18577348462903297 := 2250700637601924 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968194 := 2250700637601928 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968196 := 2250700637601932 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968198 := 2250700637601936 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968200 := 2250700637601940 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21392098230009857 := 2250700637601944 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968199 := 2250700637601938 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 21391548641968201 := 2250700637601942 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 19139748828282943 := 2250700637601922 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 19139748828282939 := 2250700637601914 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #131 #135) 64)) 18005605100815345 := 2250700637601918 << 40
(smt.stats   14   1731  34069  32457  2458/2278/339    1760/337    25   94   55.46)
ramon: end                  Fri Nov  1 21:50:54 2024
ramon: root.execname        z3
ramon: root.utime           20.070s
ramon: root.stime           0.020s
ramon: group.total          20.101s
ramon: group.utime          20.073s
ramon: group.stime          0.028s
ramon: group.mempeak        58260KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
