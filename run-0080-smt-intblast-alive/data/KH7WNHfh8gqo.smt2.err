ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:08:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28136 MiB
ramon: sys.mem.avail        61763 MiB
ramon: sys.nprocs           1263
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KH7WNHfh8gqo.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4176923
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2910    722  1458/978/98      93/55     6   15   19.17)
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #300) 64)) 0 := 6 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #300) 64)) 0 := 6 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #300) 64)) 0 := 6 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #300) 64)) 0 := 6 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 1 := 4294967296 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 1 := 4294967296 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 1 := 4294967296 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 2 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 4 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 61 := 274877904640&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 274877904640&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 60 := 274877904640&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 1 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 62 := 4608&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 60 := 7040&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 56 := 7040&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 16 := 7040&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 32 := 7040&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 12 := 8726280704&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 8 := 8726280704&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 4 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 8 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 4 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 4 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 8726283136&63
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 8726282765 := 8726282766 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 4 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 8 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 16 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 32 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 4 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 8 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 16 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 32 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 32 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 12 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 8 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 8 := 4363139328&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 8 := 4363139328&63
(smt.stats    1    202   5140   1547  1949/1765/186     184/63    13   39   19.56)
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
(smt.stats    2    313   7036   2605  2232/2022/194     302/92    15   42   20.34)
(smt.stats    3    414   7509   2769  2429/2199/194     405/93    15   42   20.44)
(smt.stats    4    525  11438   6296  2690/2466/207     585/148    18   56   20.35)
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120433&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120433&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120450&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120433&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120434&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120434&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120436&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120433&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120434&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 66 := 120434&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 83 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120481&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 129 := 120481&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120449&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120449&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120497&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120593&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120657&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120657&17179869183
(smt.stats    5    647  14421   9376  2818/2588/278     774/215    19   71   20.54)
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 65 := 17179869156&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869156&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869160&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869160&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869156&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869156&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 66 := 17179869154&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 34 := 17179869154&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 66 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 66 := 17179869122&17179869183
ramon: poll                 wall=1.000s usage=0.996s mem=22156KiB load=1.00 rootload=0.99
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 194 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 194 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 1474 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 706 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179867586&17179869183
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16688  14234  3014/2788/335     998/267    21   84   21.02)
(smt.stats    7    859  18969  19822  3169/2820/335    1242/269    21   84   21.02)
(smt.stats    8    981  21468  25119  3519/3139/337    1695/320    22   89   21.21)
(smt.stats    9   1115  28724  35512  3610/3359/342    2276/541    25  104   21.30)
(smt.stats   10   1216  32469  40547  3671/3418/344    2513/575    26  108   21.40)
(smt.stats   11   1327  37954  48401  3805/3557/346    2770/662    28  118   21.40)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  42413  57867  4013/3615/346    3187/676    28  118   21.61)
ramon: poll                 wall=2.000s usage=1.996s mem=23248KiB load=1.00 rootload=0.99
(smt.stats   13   1583  45902  63617  4108/3813/349    3503/877    29  122   21.89)
ramon: poll                 wall=3.000s usage=2.995s mem=23748KiB load=1.00 rootload=1.00
(smt.stats   14   1730  49746  65829  4395/3988/349    3751/878    29  122   21.98)
(smt.stats   15   1831  53017  69778  4589/4279/350    3939/977    30  123   22.17)
ramon: poll                 wall=4.000s usage=3.994s mem=23780KiB load=1.00 rootload=1.00
(smt.stats   16   1942  56280  71453  4698/4414/351    4072/980    30  123   22.17)
(smt.stats   17   2064  58802  75437  4851/4528/351    4548/983    30  123   22.17)
(smt.stats   18   2198  61242  82720  5212/4720/351    4786/1038    31  126   22.37)
ramon: poll                 wall=5.000s usage=4.994s mem=23828KiB load=1.00 rootload=1.00
(smt.stats   19   2345  67697  90743  5350/4968/351    5051/1038    31  126   22.47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2506  71833 100185  5415/5154/353    5509/1124    32  135   22.56)
(smt.stats   21   2607  74999 110895  5529/5214/354    5766/1127    32  135   22.56)
(smt.stats   22   2718  79245 120671  5623/5306/357    5986/1172    33  138   22.66)
ramon: poll                 wall=6.000s usage=5.993s mem=24084KiB load=1.00 rootload=1.00
(smt.stats   23   2840  81059 122764  5701/5405/357    6134/1181    34  148   22.66)
(smt.stats   24   2974  83888 130911  5915/5666/359    6876/1183    34  148   22.76)
ramon: poll                 wall=7.000s usage=6.993s mem=24280KiB load=1.00 rootload=1.00
(smt.stats   25   3121  89946 154134  6169/5672/362    7262/1442    35  151   22.85)
(smt.stats   26   3282  95257 170309  6420/5978/362    8028/1484    36  157   23.04)
(smt.stats   27   3459  99786 184567  6615/6246/363    8704/1598    37  157   23.23)
(smt.stats   28   3560 104709 192627  6681/6370/363    8914/1599    37  157   23.32)
ramon: poll                 wall=8.000s usage=7.991s mem=25052KiB load=1.00 rootload=1.00
(smt.stats   29   3671 112757 202173  6784/6496/364    9184/1742    38  162   23.32)
(smt.stats   30   3793 122398 240965  6899/6563/365    9505/1744    38  162   23.32)
(smt.stats   31   3928 129994 253426  6997/6748/368    9818/1837    39  172   23.32)
(smt.stats   32   4075 136905 264049  7037/6758/368   10041/1904    40  195   23.42)
ramon: poll                 wall=9.000s usage=8.990s mem=25052KiB load=1.00 rootload=1.00
(smt.stats   33   4236 144573 303138  7173/6842/369   10765/1943    41  195   23.51)
(smt.stats   34   4413 150923 317335  7256/6985/371   11164/2244    42  208   23.61)
(smt.stats   35   4607 157030 353087  7275/7024/374   11763/2244    42  208   23.80)
(smt.stats   36   4708 161196 371308  7437/7149/374   12096/2511    43  225   23.99)
(smt.stats   37   4819 167289 389273  7482/7150/374   12655/2515    43  225   24.13)
ramon: poll                 wall=10.000s usage=9.989s mem=25820KiB load=1.00 rootload=1.00
(smt.stats   38   4941 172366 405856  7592/7300/375   13148/2719    44  227   24.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 1035)
(smt.stats   39   5075 178404 425713  7641/7319/375   12514/2719    44  227   24.32)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5222 185783 457247  7730/7371/376   12961/2720    44  227   24.42)
(smt.stats   41   5383 194266 491174  7823/7448/376   13317/2878    45  229   24.51)
ramon: poll                 wall=11.000s usage=10.989s mem=26076KiB load=1.00 rootload=1.00
(smt.stats   42   5560 199444 513758  7853/7559/385   14337/3036    46  235   24.51)
(smt.stats   43   5754 207338 575037  7867/7573/385   15611/3036    46  235   24.71)
(smt.stats   44   5967 214276 640709  7873/7579/385   16066/3157    47  252   24.88)
(smt.stats   45   6068 218357 667961  7911/7609/385   16947/3157    47  252   24.98)
(smt.stats   46   6179 220855 678995  7955/7610/385   17101/3161    47  252   24.98)
(smt.stats   47   6301 224052 706019  7986/7684/386   17235/3430    48  253   24.98)
ramon: poll                 wall=12.000s usage=11.989s mem=26588KiB load=1.00 rootload=0.99
(smt.stats   48   6435 227641 736262  7996/7694/392   17672/3434    48  253   25.07)
(smt.stats   49   6582 231840 756672  8014/7699/392   18071/3435    48  253   25.07)
(smt.stats   50   6743 237457 785449  8096/7721/392   18436/3552    49  298   25.17)
(smt.stats   51   6920 243881 814230  8261/7812/392   18842/3554    49  298   25.27)
ramon: poll                 wall=13.000s usage=12.989s mem=26844KiB load=1.00 rootload=1.00
(smt.stats   52   7114 249565 839943  8313/7978/393   19559/3626    50  303   25.27)
(smt.stats   53   7327 256985 886721  8392/8060/394   20360/3823    51  314   25.46)
(smt.stats   54   7561 267567 922916  8410/8103/394   20885/3824    51  314   25.46)
(smt.stats   55   7662 273146 938284  8414/8110/394   21107/3824    51  314   25.46)
(smt.stats   56   7773 277634 952318  8416/8112/394   21282/3824    51  314   25.55)
(smt.stats   57   7895 284264 974733  8419/8115/394   21562/3824    51  314   25.55)
ramon: poll                 wall=14.000s usage=13.988s mem=27232KiB load=1.00 rootload=1.00
(smt.stats   58   8029 287583 988906  8519/8118/395   22093/3991    52  338   25.55)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   59   8176 293011 1024216  8566/8229/396   22682/3992    52  338   25.65)
ramon: poll                 wall=15.000s usage=14.986s mem=27088KiB load=1.00 rootload=1.00
(smt.stats   60   8337 297908 1047006  8608/8270/396   23035/4037    53  360   25.65)
(smt.stats   61   8514 301789 1063335  8666/8316/396   23337/4038    53  360   25.65)
(smt.stats   62   8708 306912 1090699  8737/8379/397   23909/4102    54  363   26.15)
(smt.stats   63   8921 312804 1112191  8759/8451/397   24256/4102    54  363   26.15)
(smt.stats   64   9155 319971 1147113  8872/8461/399   26106/4146    55  388   26.44)
ramon: poll                 wall=16.000s usage=15.986s mem=28148KiB load=1.00 rootload=1.00
(smt.stats   65   9412 329264 1232883  9181/8577/399   27400/4160    55  388   26.81)
(smt.stats   66   9513 332094 1249365  9199/8884/399   28217/4286    56  396   26.90)
(smt.stats   67   9624 336910 1273738  9277/8897/399   28562/4291    56  396   26.90)
ramon: poll                 wall=17.000s usage=16.986s mem=28556KiB load=1.00 rootload=0.99
(smt.stats   68   9746 342066 1301640  9394/8978/399   29273/4295    56  396   27.10)
(smt.stats   69   9880 348442 1353505  9502/9112/399   30039/4298    56  396   27.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 257)
ramon: poll                 wall=18.000s usage=17.985s mem=28876KiB load=1.00 rootload=1.00
(smt.stats   70  10027 351952 1376661  9606/9215/399   30694/4305    56  396   27.29)
(smt.stats   71  10188 357755 1420800  9721/9300/399   31188/4313    56  396   27.29)
(smt.stats   72  10365 364303 1465623  9827/9425/399   32310/4318    56  396   27.38)
(smt.stats   73  10559 369490 1501876  9868/9548/399   32989/4318    56  396   27.48)
ramon: poll                 wall=19.000s usage=18.985s mem=29196KiB load=1.00 rootload=1.00
(smt.stats   74  10772 378335 1580414  9881/9571/399   33735/4318    56  396   27.57)
(smt.stats   75  11006 384931 1644931  9887/9573/399   34236/4318    56  396   27.76)
(smt.stats   76  11263 394238 1720150 10037/9590/399   35023/4319    56  396   27.86)
ramon: poll                 wall=20.000s usage=19.984s mem=29620KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:08:34 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.994s
ramon: group.utime          19.974s
ramon: group.stime          0.020s
ramon: group.mempeak        29856KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
