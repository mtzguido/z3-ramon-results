ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:08:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27346 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1379
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/q1dFUAAVDVjH.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             933280
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4777    996  2273/2022/79     101/3     1   11   52.38)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   87.7193     10000        49          0            1        2)
(smt.stats    1    202  13729   3023  3261/2938/80     201/4     2   11   52.71)
(sat.ddfw       1      1   42.3771     20001        98          1            1        3)
(smt.stats    2    313  19700   4831  3560/3198/83     302/23     4   14   52.93)
(smt.stats    3    414  22483   6407  3850/3472/96     379/37     7   24   52.93)
(smt.stats    4    525  24481   7599  4046/3647/97     458/50     8   24   53.15)
(smt.stats    5    647  30324  12116  4238/3710/97     585/61     8   24   53.25)
(sat.ddfw       1      1    46.729     40001       196          2            1        5)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify   :memory)
(smt.stats      :conflicts  :propagations          :lemmas        :deletions    )
(smt.stats    6    748  34172  14781  4289/3867/97     678/62     8   24   53.35)
(smt.stats    7    859  37294  17941  4331/3904/97     787/63     8   24   53.35)
(smt.stats    8    981  38669  20243  4528/3940/97     908/95     8   24   53.44)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1 := 8&1
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1 := 8&1
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8&1
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 1 := 8&1
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8&1
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 1 := 8&1
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1 := 8&1
(smt.stats    9   1115  40904  26936  4710/4195/98    1039/105     9   25   53.54)
(smt.stats   10   1216  43167  31620  4712/4255/121    1133/107    11   34   53.76)
(smt.stats   11   1327  46527  37989  4743/4277/121    1232/109    11   34   53.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  49190  42027  4744/4284/121    1355/109    11   34   53.88)
(sat.ddfw       1      1   42.9799     70001       343          3            1        8)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 511 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 510 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 508 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 16 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 32 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 64 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 128 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 256 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 32 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 64 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 64 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 64 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 128 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 256 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 256 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 256 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 154 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 152 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 144 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 128 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 16 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 2 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 4 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 8 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 16 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 32 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 64 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 128 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 256 := 2048&511
(smt.stats   13   1583  51301  46447  4835/4291/123    1490/122    12   38   54.26)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 480 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 448 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 128 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 256 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 110 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 32 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 64 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 32 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 96 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 256 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 256 := 2048&511
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 2048&511
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 256 := 2048&511
(smt.stats   14   1730  56186  57929  4892/4397/250    1637/148    14   71   54.35)
ramon: poll                 wall=1.000s usage=0.911s mem=56680KiB load=0.91 rootload=0.89
(sat.ddfw       1      1   37.5587    110001       539          4            1       12)
(smt.stats   15   1831  56576  58563  4914/4438/250    1742/151    14   71   54.64)
(sat.ddfw       1      1   32.8293    160000       784          5            1       17)
(smt.stats   16   1942  56877  59095  5184/4698/250    1869/151    14   71   54.77)
(smt.stats   17   2064  59466  65622  5396/4932/259    2046/205    16   90   54.77)
(smt.stats   18   2198  64836  76651  5423/4957/259    2194/205    16   90   54.87)
(smt.stats   19   2345  71553  91297  5501/5010/262    2374/234    18   98   54.96)
(smt.stats   20   2506  74652  94536  5625/5041/262    2572/235    18   98   54.96)
ramon: poll                 wall=2.000s usage=1.912s mem=57112KiB load=1.00 rootload=1.00
(smt.stats   21   2607  76899  98191  5678/5170/262    2694/236    18   98   55.08)
(sat.ddfw       1      1   29.0562    220001      1078          6            1       23)
(smt.stats   22   2718  78772 100569  5789/5219/262    2812/236    18   98   55.08)
(smt.stats   23   2840  80722 103915  5859/5343/262    2939/236    18   98   55.08)
(smt.stats   24   2974  83829 110205  5904/5422/264    3115/297    19  104   55.18)
(smt.stats   25   3121  89358 117458  5913/5427/267    3309/297    19  104   55.18)
(smt.stats   26   3282  91996 122084  5973/5437/267    3471/327    20  115   55.27)
(smt.stats   27   3459  93624 126395  6036/5495/267    3654/327    20  115   55.43)
(smt.stats   28   3560  96717 139018  6043/5561/270    3813/337    21  123   55.68)
(sat.ddfw       1      1   25.8876    290001      1421          7            1       30)
(smt.stats   29   3671 100395 150562  6061/5561/270    3925/384    22  130   55.78)
(smt.stats   30   3793 102162 155973  6086/5583/270    4061/384    22  130   55.78)
(smt.stats   31   3927 105303 170858  6107/5618/270    4193/384    22  130   55.78)
ramon: poll                 wall=3.003s usage=2.917s mem=57920KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 108129 183006  6119/5633/271    4334/403    23  131   55.78)
(smt.stats   33   4235 111052 199506  6147/5646/271    4528/403    23  131   55.78)
(smt.stats   34   4412 114527 218246  6159/5672/272    4739/441    24  133   55.78)
(smt.stats   35   4606 117754 227581  6179/5688/272    4962/441    24  133   55.78)
(sat.ddfw       1      1   23.2964    370001      1813          8            1       38)
(smt.stats   36   4707 120746 244770  6187/5703/272    5061/441    24  133   55.78)
(smt.stats   37   4818 122231 251086  6214/5707/272    5178/441    24  133   55.78)
(smt.stats   38   4940 124460 261882  6226/5736/272    5323/441    24  133   55.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 126909 276858  6238/5756/273    5469/489    25  135   55.88)
(smt.stats   40   5221 130904 295969  6255/5756/273    5628/489    25  135   55.88)
ramon: poll                 wall=4.000s usage=3.909s mem=58088KiB load=1.00 rootload=0.99
(smt.stats   41   5382 133785 308001  6269/5780/273    5799/489    25  135   55.88)
(smt.stats   42   5559 139524 317027  6274/5792/274    5994/509    26  138   56.21)
(smt.stats   43   5753 144995 335344  6277/5795/276    6181/511    27  154   56.21)
(sat.ddfw       1      1   21.1367    460001      2254          9            1       47)
(smt.stats   44   5966 149466 348764  6295/5813/277    6436/561    28  154   56.46)
(smt.stats   45   6067 153374 356019  6307/5816/277    6537/561    28  154   56.46)
(smt.stats   46   6178 155728 363431  6332/5837/277    6651/564    28  154   56.46)
(smt.stats   47   6300 157733 369147  6366/5874/277    6759/564    28  154   56.46)
(smt.stats   48   6434 161058 379326  6377/5895/279    6917/581    29  161   56.46)
(smt.stats   49   6581 164271 388589  6400/5918/279    7055/581    29  161   56.57)
(smt.stats   50   6742 165848 394962  6411/5929/279    7213/581    29  161   56.57)
ramon: poll                 wall=5.000s usage=4.908s mem=58872KiB load=1.00 rootload=1.00
(smt.stats   51   6919 169626 406939  6430/5948/279    7379/601    30  170   56.57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 173227 416363  6450/5967/279    7576/601    30  170   56.66)
(sat.ddfw       1      1   19.3611    560001      2745         10            1       57)
(smt.stats   53   7326 178223 432251  6457/5974/279    7789/601    30  170   56.66)
(smt.stats   54   7560 181781 446465  6471/5988/279    8022/601    30  170   56.76)
(smt.stats   55   7661 183961 455193  6477/5994/279    8117/601    30  170   56.76)
(smt.stats   56   7772 187302 468144  6489/6004/279    8231/601    30  170   57.19)
(smt.stats   57   7894 190531 477983  6494/6011/280    8351/665    31  171   57.19)
(smt.stats   58   8028 192751 486302  6498/6015/280    8496/665    31  171   57.30)
(smt.stats   59   8175 194212 496486  6499/6016/280    8649/665    31  171   57.30)
ramon: poll                 wall=6.000s usage=5.907s mem=59536KiB load=1.00 rootload=1.00
(smt.stats   60   8336 199385 513519  6501/6017/280    8814/665    31  171   57.30)
(smt.stats   61   8513 202436 524907  6515/6032/280    8985/665    31  171   57.30)
(sat.ddfw       1      1   17.8513    670001      3284         11            1       68)
(smt.stats   62   8707 204651 539711  6518/6035/281    9180/673    32  177   57.43)
(smt.stats   63   8920 206044 554084  6525/6042/281    9391/673    32  177   57.43)
(smt.stats   64   9154 210442 565120  6527/6044/281    9627/673    32  177   57.85)
(smt.stats   65   9411 213570 584207  6533/6050/281    9880/673    32  177   57.95)
(smt.stats   66   9512 215633 593336  6534/6051/281    9982/673    32  177   57.95)
(smt.stats   67   9623 216516 602478  6575/6084/281   10100/673    32  177   57.95)
(smt.stats   68   9745 218326 620984  6577/6086/281   10235/674    32  177   58.05)
ramon: poll                 wall=7.000s usage=6.908s mem=60000KiB load=1.00 rootload=1.00
(smt.stats   69   9879 221285 635508  6588/6093/281   10410/675    32  177   58.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 853)
(smt.stats   70  10026 223448 647361  6599/6108/281    9723/675    32  177   58.05)
(smt.stats   71  10187 227586 659156  6604/6114/284    9890/725    33  188   58.05)
(sat.ddfw       1      1   16.5472    790001      3872         12            1       80)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2 := 16&3
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2 := 16&3
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 16&3
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 2 := 16&3
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 16&3
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 2 := 16&3
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 16&3
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 1 := 16&3
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 231859 667583  6622/6123/284   10073/727    33  188   58.05)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1 := 16&3
(smt.stats   73  10558 237758 676681  6634/6141/289   10269/741    34  189   58.05)
(smt.stats   74  10771 243811 692765  6668/6170/290   10533/741    34  189   58.05)
(smt.stats   75  11005 251568 713153  6672/6178/290   10770/745    35  191   58.17)
(smt.stats   76  11262 256502 734510  6684/6181/290   11068/747    35  191   58.17)
ramon: poll                 wall=8.000s usage=7.905s mem=60624KiB load=1.00 rootload=0.99
(smt.stats   77  11544 260826 746803  6754/6205/291   11334/759    36  205   58.17)
(smt.stats   78  11645 262872 759666  6765/6263/291   11437/759    36  205   58.17)
(smt.stats   79  11756 264912 769819  6768/6274/291   11565/759    36  205   58.27)
(smt.stats   80  11878 267567 780167  6771/6277/291   11690/759    36  205   58.27)
(smt.stats   81  12012 270221 787665  6774/6280/291   11825/759    36  205   58.27)
(sat.ddfw       1      1   15.4376    920001      4509         13            1       93)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1 := 536870912&134217727
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4 := 536870912&134217727
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4 := 536870912&134217727
(smt.stats   82  12159 273728 799775  6797/6282/291   11981/763    36  205   58.27)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 24 := 536870912&134217727
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 24 := 536870912&134217727
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 56 := 536870912&134217727
(smt.stats   83  12320 276498 819057  6866/6324/292   12185/778    37  207   58.37)
(smt.stats   84  12497 279188 838103  6875/6381/292   12505/778    37  207   59.23)
(smt.stats   85  12691 283593 852061  6898/6404/293   12720/815    38  210   59.23)
ramon: poll                 wall=9.003s usage=8.909s mem=61812KiB load=1.00 rootload=1.01
(smt.stats   86  12904 289060 872593  6907/6413/295   13013/852    39  222   59.23)
(smt.stats   87  13138 295957 898320  6919/6425/296   13282/852    39  222   59.34)
(sat.ddfw       1      1   14.6505   1060001      5196         14            1      108)
(smt.stats   88  13395 306082 936856  6920/6426/296   13547/864    40  233   59.34)
(smt.stats   89  13677 312918 963749  6928/6434/296   13839/864    40  233   60.00)
ramon: poll                 wall=10.000s usage=9.903s mem=62068KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions     )
(smt.stats   90  13987 318534 1004084  6938/6444/296   14178/864    40  233   60.00)
(smt.stats   91  14088 320542 1015494  6943/6447/296   14283/864    40  233   60.10)
(smt.stats   92  14199 322114 1027227  6958/6464/296   14391/864    40  233   60.10)
(smt.stats   93  14321 323810 1037018  6958/6464/296   14515/864    40  233   60.10)
(smt.stats   94  14455 326581 1057137  6962/6468/296   14660/864    40  233   60.10)
(smt.stats   95  14602 329533 1075260  6971/6477/296   14813/864    40  233   60.20)
(smt.stats   96  14763 332990 1106968  6973/6479/296   14977/864    40  233   60.20)
(sat.ddfw       1      1   13.6949   1210001      5931         15            1      123)
ramon: poll                 wall=11.003s usage=10.906s mem=62324KiB load=1.00 rootload=1.01
(smt.stats   97  14940 338792 1141874  6974/6480/296   15186/864    40  233   60.20)
(smt.delete-inactive-clauses  :num-deleted-clauses 132)
(smt.stats   98  15134 343137 1165448  6975/6481/296   15266/864    40  233   60.20)
(smt.stats   99  15347 346671 1188291  6982/6488/296   15494/864    40  233   60.30)
(smt.stats  100  15581 348219 1208288  6987/6493/296   15733/864    40  233   60.30)
(smt.stats  101  15838 352962 1238867  7003/6498/296   16020/865    40  233   60.30)
ramon: poll                 wall=12.003s usage=11.838s mem=62420KiB load=0.93 rootload=0.93
(smt.stats  102  16120 356541 1273381  7013/6519/296   16318/865    40  233   60.43)
(smt.stats  103  16430 360149 1312629  7018/6524/296   16678/865    40  233   60.43)
(sat.ddfw       1      1   12.8628   1370001      6715         16            1      139)
(smt.stats  104  16770 365056 1348861  7022/6528/296   17048/865    40  233   60.54)
(smt.stats  105  16871 366110 1356561  7023/6529/296   17152/865    40  233   60.54)
(smt.stats  106  16982 367355 1366279  7023/6529/296   17266/865    40  233   60.54)
(smt.stats  107  17104 370031 1378670  7026/6532/296   17401/865    40  233   60.54)
ramon: poll                 wall=13.003s usage=12.834s mem=62884KiB load=1.00 rootload=0.99
(smt.stats  108  17238 370719 1390671  7031/6537/296   17535/865    40  233   60.65)
(smt.stats  109  17385 374843 1416903  7033/6539/296   17711/865    40  233   60.65)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions     )
(smt.stats  110  17546 375594 1428309  7036/6542/296   17881/865    40  233   60.65)
(smt.stats  111  17723 377519 1444458  7039/6545/296   18068/865    40  233   60.76)
(smt.stats  112  17917 384400 1466919  7040/6546/296   18276/865    40  233   60.76)
(smt.stats  113  18130 386508 1477089  7049/6555/296   18483/865    40  233   60.86)
(smt.stats  114  18364 391317 1496236  7058/6560/296   18718/865    40  233   60.86)
(sat.ddfw       1      1   12.1759   1540001      7549         17            1      156)
ramon: poll                 wall=14.003s usage=13.834s mem=63196KiB load=1.00 rootload=1.00
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2608 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1584 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1584 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1584 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1568 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1568 := 140737488355328&35184372088831
(smt.stats  115  18621 395334 1513328  7189/6564/296   19061/872    40  233   60.95)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2560 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2560 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2560 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2560 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2560 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2048 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2048 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2048 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4096 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8192 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 16384 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 32768 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 65536 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 131072 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 262144 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 524288 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1048576 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2097152 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4194304 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8388608 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 16777216 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 33554432 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 67108864 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 134217728 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 268435456 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 536870912 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1073741824 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2147483648 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4294967296 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8589934592 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 17179869184 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 34359738368 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 68719476736 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 137438953472 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 274877906944 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 549755813888 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1099511627776 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2199023255552 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4398046511104 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8796093022208 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 17592186044416 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 68719476736 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 274877906944 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 274877906944 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 549755813888 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1099511627776 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 2199023255552 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4398046511104 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4398046511104 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4398046511104 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8796093022208 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8796093022208 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8796093022208 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8796093022208 := 140737488355328&35184372088831
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 17592186044416 := 140737488355328&35184372088831
(smt.stats  116  18903 401047 1553297  7418/6891/424   19523/977    41  234   61.78)
(smt.stats  117  19213 412346 1582702  7401/6901/434   19946/1009    42  263   61.78)
ramon: poll                 wall=15.000s usage=14.826s mem=64456KiB load=1.00 rootload=1.00
(smt.stats  118  19553 422952 1627486  7426/6932/443   20506/1105    43  274   61.89)
(sat.ddfw       1      1    11.551   1720001      8431         18            1      174)
(smt.stats  119  19926 435405 1664543  7504/6997/447   21131/1323    44  293   62.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 1979)
(smt.stats  120  20027 438679 1673974  7509/7002/447   19307/1323    44  293   62.10)
(smt.stats  121  20138 444026 1688514  7515/7008/447   19423/1323    44  293   62.10)
ramon: poll                 wall=16.000s usage=15.829s mem=64756KiB load=1.00 rootload=1.00
(smt.stats  122  20260 451420 1706105  7515/7008/447   19590/1323    44  293   62.10)
(smt.stats  123  20394 458424 1729858  7515/7008/447   19735/1323    44  293   62.10)
(smt.stats  124  20541 464229 1747571  7520/7013/447   19958/1323    44  293   62.10)
(smt.stats  125  20702 471511 1772297  7521/7014/447   20126/1323    44  293   62.99)
(smt.stats  126  20879 480895 1802387  7522/7015/447   20311/1323    44  293   62.99)
ramon: poll                 wall=17.000s usage=16.829s mem=65004KiB load=1.00 rootload=1.00
(smt.stats  127  21073 489347 1828287  7570/7032/449   20578/1428    45  294   63.09)
(sat.ddfw       1      1   10.9922   1910001      9362         19            1      193)
(smt.stats  128  21287 493786 1849479  7627/7079/449   20825/1428    45  294   63.09)
(smt.stats  129  21521 500017 1881660  7671/7143/450   21159/1428    45  294   63.09)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 131072 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 4096 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8192 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8192 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8192 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8192 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 8192 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 2096704 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 2096768 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 2096768 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 16 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 16 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 12 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 8 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 8 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 4 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 4 := 8388608&2097151
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 0 := 8388608&2097151
band: (band[48] (if (= #110 47) 281474976710656 (if #820 140737488355328 #912)) (if (= #919 47) 0 (if #921 1 #1053))) 4 := 8388608&2097151
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  130  21778 507405 1926409  7758/7168/450   21607/1483    46  296   63.18)
ramon: poll                 wall=18.000s usage=17.825s mem=65224KiB load=1.00 rootload=0.99
(smt.stats  131  22060 515439 1960585  7803/7264/490   21971/1518    47  304   63.28)
(smt.stats  132  22370 519941 1977939  8036/7386/490   22329/1519    47  304   63.28)
(smt.stats  133  22710 531825 2001929  8064/7549/492   22838/1543    48  304   63.38)
ramon: poll                 wall=19.003s usage=18.827s mem=65632KiB load=1.00 rootload=1.00
(smt.stats  134  23083 551010 2023022  8087/7568/492   23224/1543    48  304   63.38)
(sat.ddfw       1      1   10.4932   2110001     10343         20            1      214)
(smt.stats  135  23493 571390 2061528  8094/7575/492   23881/1627    49  311   63.47)
(smt.stats  136  23594 578277 2079822  8096/7575/492   24010/1627    49  311   63.47)
(smt.stats  137  23705 584279 2095585  8115/7581/493   24154/1719    50  313   63.47)
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1024 := 8796093022208&2199023255551
band: (band[48] (if (= #455 63) 18446744073709551616 (if #609 9223372036854775808 #606)) (if (or #1073 #1074) 0 (if #1075 1 #1211))) 1024 := 8796093022208&2199023255551
(smt.stats  138  23827 589070 2112942  8149/7603/493   24357/1720    50  313   63.47)
ramon: poll                 wall=20.000s usage=19.825s mem=65844KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:08:55 2024
ramon: root.execname        z3
ramon: root.utime           19.810s
ramon: root.stime           0.020s
ramon: group.total          19.836s
ramon: group.utime          19.812s
ramon: group.stime          0.024s
ramon: group.mempeak        66100KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              0.99
