ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:31:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29530 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/24bxN8S2qdzN.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             600417
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   5120   2432  1202/1085/97      95/5     5   14   51.95)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 1 := 1&4
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 2 := 2&4
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 4 := 4&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 4 := 401408 >>l 62
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 1 := 1&4
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 2 := 2&4
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 1 := 401408 >>l 62
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 1 := 401408 >>l 62
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 401408 >>l 62
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 49 >>l 49
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 401408 >>l 62
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 49 >>l 49
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 401408 >>l 62
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 49 >>l 49
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 401408 >>l 62
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 49 >>l 49
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 401408 >>l 62
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&4
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 49 >>l 49
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&2
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685249 := 409600 >>l 63
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&2
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 409600 >>l 63
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&2
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 50 >>l 50
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1        80     10000        49          0            1        2)
(smt.stats    1    202   7134   3562  1857/1657/116     189/12     8   18   52.35)
(smt.stats    2    313  10246   5137  2522/2207/126     298/19     9   22   52.54)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 16 := 46&16
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 16 := 46&16
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 15 := 46&16
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 15 := 46&16
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 46&16
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685294 := 385024 >>l 60
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&16
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685249 := 385024 >>l 60
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&16
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685249 := 385024 >>l 60
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&16
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685249 := 385024 >>l 60
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&16
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685249 := 385024 >>l 60
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&16
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 17 := 47 >>l 47
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&16
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 15 := 47 >>l 47
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&16
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 47 >>l 47
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&8
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685248 := 393216 >>l 61
(smt.stats    3    415  11273   6721  2594/2339/149     410/22    11   26   52.63)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 32 := 32&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 64 := 64&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 128 := 128&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 256 := 256&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 1125899906842624 := 1125899906842624&1125899906842624
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 3377699720527872 := 8192 >>l 14
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 512 := 512&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 1024 := 1024&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 2048 := 2048&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 4096 := 4096&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 8192 := 8192&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 16384 := 16384&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 32768 := 32768&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 65536 := 65536&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 131072 := 131072&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 262144 := 262144&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 524288 := 524288&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 1048576 := 1048576&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 2097152 := 2097152&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 4194304 := 4194304&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 8388608 := 8388608&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 8388608 := 8388608&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 16777216 := 16777216&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 33554432 := 33554432&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 67108864 := 67108864&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 134217728 := 134217728&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 268435456 := 268435456&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 536870912 := 536870912&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 1073741824 := 1073741824&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 2147483648 := 2147483648&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 4294967296 := 4294967296&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 8589934592 := 8589934592&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 8589934592 := 8589934592&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 17179869184 := 17179869184&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 17179869184 := 17179869184&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 34359738368 := 34359738368&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 68719476736 := 68719476736&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 137438953472 := 137438953472&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 274877906944 := 274877906944&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 549755813888 := 549755813888&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 1099511627776 := 1099511627776&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 2199023255552 := 2199023255552&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 4398046511104 := 4398046511104&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 8796093022208 := 8796093022208&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 17592186044416 := 17592186044416&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 17592186044416 := 17592186044416&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 35184372088832 := 35184372088832&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 70368744177664 := 70368744177664&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 140737488355328 := 140737488355328&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 281474976710656 := 281474976710656&1125899906842624
(sat.ddfw       1      1   40.4899     20001        98          1            1        3)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 562949953421312 := 562949953421312&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 1125899906842624 := 1125899906842624&1125899906842624
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 3377699720527872 := 8192 >>l 14
(smt.stats    4    526  11817   8480  2725/2378/151     508/30    11   26   53.61)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 281474976710656 := 281474976710656&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 562949953421312 := 562949953421312&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 562949953421312 := 562949953421312&1125899906842624
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 1125899906842624 := 1125899906842624&1125899906842624
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 3377699720527872 := 8192 >>l 14
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685249 := 0 >>l 13
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685249 := 0 >>l 13
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 2251799813685247&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685247 := 0 >>l 13
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&0
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 1 := 0 >>l 13
(smt.stats    5    648  15108  12996  2746/2475/263     623/52    13   59   53.90)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&562949953421312
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 16384 >>l 15
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&562949953421312
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 16384 >>l 15
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&562949953421312
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 2 >>l 2
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 1&562949953421312
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 1 := 16384 >>l 15
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  19825  16348  2768/2495/268     724/49    14   67   54.02)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&1125899906842624
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 2 := 1 >>l 1
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&1125899906842624
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 1 >>l 1
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&1125899906842624
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 1 >>l 1
(sat.ddfw       1      1   40.4858     40001       196          2            1        5)
(smt.stats    7    860  23335  19817  2793/2521/278     834/56    15   69   54.02)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 4 := 4&70368744177664
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 3 := 3&70368744177664
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 4 := 4&70368744177664
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&70368744177664
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685248 := 40960 >>l 18
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&70368744177664
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685248 := 40960 >>l 18
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 4 := 4&70368744177664
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&70368744177664
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685248 := 40960 >>l 18
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 4 := 4&70368744177664
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&70368744177664
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685248 := 40960 >>l 18
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 5&35184372088832
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685253 := 49152 >>l 19
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 5&35184372088832
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685253 := 49152 >>l 19
(smt.stats    8    982  26456  24209  2830/2553/295     950/56    18   80   54.11)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&281474976710656
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685248 := 24576 >>l 16
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&281474976710656
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2251799813685248 := 24576 >>l 16
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 2&281474976710656
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2 := 24576 >>l 16
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 2&281474976710656
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2 := 24576 >>l 16
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&281474976710656
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 281474976710657 := 3 >>l 3
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&281474976710656
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 4 := 3 >>l 3
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&281474976710656
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 4 := 3 >>l 3
(smt.stats    9   1116  30193  29462  2860/2582/312    1074/98    19   92   54.21)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&68719476736
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 122880 >>l 28
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&68719476736
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 122880 >>l 28
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&68719476736
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 68719476737 := 15 >>l 15
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&68719476736
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 68719476735 := 15 >>l 15
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&68719476736
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 16 := 15 >>l 15
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 2&68719476736
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2 := 122880 >>l 28
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 2&68719476736
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2 := 122880 >>l 28
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 2&68719476736
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2 := 122880 >>l 28
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 2&140737488355328
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2 := 32768 >>l 17
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 2&70368744177664
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2 := 40960 >>l 18
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 2&70368744177664
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 2 := 40960 >>l 18
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&140737488355328
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 32768 >>l 17
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&140737488355328
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 140737488355329 := 4 >>l 4
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&140737488355328
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 32768 >>l 17
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&140737488355328
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 8 := 4 >>l 4
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&140737488355328
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 13 #98 #313) 64)) 0 := 32768 >>l 17
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&140737488355328
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 5 := 4 >>l 4
(smt.stats   10   1217  32393  33287  2922/2642/333    1173/104    21   97   54.21)
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&70368744177664
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 70368744177665 := 5 >>l 5
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&70368744177664
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 8 := 5 >>l 5
band: (band[51] (lshr[64] (* 8192 #98) (mod #314 64)) (if (= #610 63) 18446744073709551616 (if #612 9223372036854775808 #736))) 0 := 0&70368744177664
lshr: (lshr[51] (bv2int %0) (mod (bv2int %0) 51)) 6 := 5 >>l 5
(smt.stats   11   1328  36611  37244  2976/2695/345    1281/104    21   97   54.37)
(sat.ddfw       1      1   34.8028     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.933s mem=56868KiB load=0.93 rootload=0.92
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  40639  42455  2990/2710/345    1417/103    22  108   54.37)
(smt.stats   13   1584  40845  45619  2990/2710/345    1560/103    22  108   54.37)
(sat.ddfw       1      1   29.4118    110001       539          4            1       12)
(smt.stats   14   1731  42253  52096  3058/2719/352    1699/121    24  110   54.95)
ramon: poll                 wall=2.000s usage=2.021s mem=57244KiB load=1.09 rootload=1.08
(sat.ddfw       1      1   25.3802    160000       784          5            1       17)
(smt.stats   15   1832  44013  54222  3211/2929/357    1833/150    25  114   55.05)
(sat.ddfw       1      1   22.1243    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=3.088s mem=57484KiB load=1.07 rootload=1.07
(smt.stats   16   1945  45280  55517  3518/3238/359    1950/155    25  114   55.14)
(sat.ddfw       1      1   20.7285    290001      1421          7            1       30)
(smt.stats   17   2067  46733  58480  3675/3250/360    2086/157    25  114   55.13)
ramon: poll                 wall=4.000s usage=4.195s mem=57836KiB load=1.11 rootload=1.11
(smt.stats   18   2201  51751  64859  3708/3415/362    2238/168    26  124   55.23)
(sat.ddfw       1      1    18.357    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=5.276s mem=57844KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   17.0004    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=6.276s mem=58100KiB load=1.00 rootload=1.00
(smt.stats   19   2348  52905  65636  3772/3432/362    2407/209    27  131   55.80)
(sat.ddfw       1      1   15.3257    560001      2745         10            1       57)
(smt.stats   20   2509  55955  71628  4330/3912/364    2589/212    27  131   55.61)
ramon: poll                 wall=7.000s usage=7.276s mem=58356KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.9718    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=8.276s mem=58484KiB load=1.00 rootload=1.00
(smt.stats   21   2610  56581  72476  4541/4066/364    2709/254    28  133   55.82)
ramon: poll                 wall=9.000s usage=9.276s mem=58740KiB load=1.00 rootload=1.00
(smt.stats   22   2721  59091  76035  4858/4443/364    2844/254    28  133   56.02)
(sat.ddfw       1      1   12.8356    790001      3872         12            1       80)
(smt.stats   23   2843  62023  85727  4907/4595/364    2994/255    28  133   56.12)
ramon: poll                 wall=10.000s usage=10.276s mem=58740KiB load=1.00 rootload=1.00
(smt.stats   24   2977  64940  94733  4974/4692/366    3230/284    29  160   56.12)
ramon: poll                 wall=11.000s usage=11.276s mem=58740KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.8982    920001      4509         13            1       93)
(smt.stats   25   3124  67638  98733  5047/4693/366    3388/286    29  160   56.23)
ramon: poll                 wall=12.000s usage=12.274s mem=58748KiB load=1.00 rootload=1.00
(smt.stats   26   3285  70508 103305  5363/4819/366    3595/286    29  160   56.42)
(sat.ddfw       1      1   11.0751   1060001      5196         14            1      108)
ramon: poll                 wall=13.000s usage=13.274s mem=59004KiB load=1.00 rootload=1.00
(smt.stats   27   3462  72844 111555  5681/5338/368    3787/334    30  162   56.52)
ramon: poll                 wall=14.000s usage=14.410s mem=59100KiB load=1.14 rootload=1.13
(smt.stats   28   3563  75391 118278  5774/5445/369    3897/336    30  162   56.52)
(sat.ddfw       1      1   10.5234   1210001      5931         15            1      123)
(smt.stats   29   3674  79405 127229  5958/5673/371    4068/337    31  162   56.61)
ramon: poll                 wall=15.000s usage=15.572s mem=59100KiB load=1.16 rootload=1.17
(smt.stats   30   3796  82402 133449  6170/5677/371    4225/352    32  162   56.71)
ramon: poll                 wall=16.000s usage=16.570s mem=59100KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   9.95334   1370001      6715         16            1      139)
ramon: poll                 wall=17.000s usage=17.571s mem=59356KiB load=1.00 rootload=1.00
(smt.stats   31   3930  85888 147581  6378/5928/371    4389/353    32  162   56.80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077  91105 152343  6535/6252/371    4686/353    32  162   56.80)
ramon: poll                 wall=18.000s usage=18.571s mem=59356KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.36742   1540001      7549         17            1      156)
(smt.stats   33   4238  96108 163212  6591/6302/374    5220/380    33  176   57.03)
ramon: poll                 wall=19.000s usage=19.571s mem=59612KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=20.622s mem=59492KiB load=1.05 rootload=1.06
ramon: end                  Fri Nov  1 21:31:30 2024
ramon: root.execname        z3
ramon: root.utime           20.680s
ramon: root.stime           0.010s
ramon: group.total          20.692s
ramon: group.utime          20.680s
ramon: group.stime          0.012s
ramon: group.mempeak        59748KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.03
