ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:04:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40593 MiB
ramon: sys.mem.avail        61379 MiB
ramon: sys.nprocs           1324
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/W8EZW8m2prbG.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3873675
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   238/238     0/0  64       0    18.52   0.00)
(sat.stats    102    609    0   238/238   102/31  64       0    18.85   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 269 :time 0.00)
(sat.stats    102    609    0   238/238   102/31  64       0    18.85   0.01)
(sat.stats    102    609    0   238/238   102/31  64       0    18.85   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 372418.85 :time 0.00)
(sat.stats    102    609    0   240/240    38/30  64       0    18.85   0.01)
(sat.stats    170   1622    1   240/240   106/84  64       0    18.94   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    173   1685    2   240/240   109/84  64       0    18.94   0.01)
(sat.stats    176   1751    3   240/240   112/84  64       0    18.94   0.01)
(sat.stats    179   1825    4   240/240   115/84  64       0    18.94   0.01)
(sat.stats    182   1891    5   240/240   118/84  64       0    18.94   0.01)
(sat.stats    185   1961    6   240/240   121/84  64       0    18.94   0.01)
(sat.stats    188   2038    7   240/240   124/84  64       0    18.94   0.01)
(sat.stats    191   2107    8   240/240   127/86  64       0    18.94   0.01)
(sat.stats    194   2119    9   240/240   130/89  64       0    18.94   0.01)
(sat.stats    197   2131   10   240/240   133/92  64       0    18.94   0.01)
(sat.stats    200   2157   11   240/240   136/95  64       0    18.94   0.01)
(sat.stats    203   2192   12   240/240   139/98  64       0    19.04   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    209   2263   14   240/240   145/104  64       0    19.04   0.01)
(sat.stats    357   4012   15   241/241   293/207  64       0    19.17   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1926 :time 0.00)
(sat.stats    510   6564   29   240/240   446/279  67       0    19.27   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4327 :time 0.00)
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #51))) 0 := 16 >>l 37
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 0&7836056220008448
lshr: (lshr[64] (mod (div #81 2) 4503599627370496) (mod (+ 52 #722 #724) 64)) 12637100554401611777 := 8 >>l 36
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 1 := 12&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 1 := 1&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 35938 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 29616 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 12 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 8 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 50272 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 32768 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 64 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 3072 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 128 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 256 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 512 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 12288 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 2048 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 24576 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 16384 := 65535&7836056220008448
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 6936 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 42791 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 65238 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 4 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 51248 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 32 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 40192 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 64 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 128 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 58880 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 24576 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 7168 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 6144 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 4096 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 32768 := 7836056220008448&65535
band: (band[53] (lshr[53] (bv2int %0) (+ 53 #474)) (if (= #53 52) 2582262441612773421942183034880 (if #478 1291131220806386710971091517440 #580))) 0 := 65535&7836056220008448
band: (band[53] (if (= #591 63) 5288473480422959968137590855434240 (if #593 2644236740211479984068795427717120 #717)) (lshr[64] (mod #456 4503599627370496) (mod #725 64))) 16384 := 7836056220008448&65535
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 6051 :time 0.00)
(sat.stats    710  12962   51  7906/7903   684/349 288       0    22.83   0.24)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 7073 :time 0.00)
 (sat-cleaner :elim-literals 18 :elim-clauses 1 :cost 7971 :time 0.00)
 (sat-cleaner :elim-literals 7 :elim-clauses 1 :cost 7981 :time 0.00)
(sat.stats   1203  25608   80 21168/21162  1587/871 330       0    26.49   0.72)
ramon: poll                 wall=1.000s usage=0.998s mem=30904KiB load=1.00 rootload=0.99
(sat.stats   1599  26624  207 32090/32084  2428/1405 330       0    29.55   1.00)
ramon: poll                 wall=2.000s usage=1.998s mem=37548KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.998s mem=41272KiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin          :units         :memory       )
(sat.stats   3216  30500  288 75523/75517  5776/3482 330       0    42.52   3.62)
ramon: poll                 wall=4.000s usage=3.997s mem=45252KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.996s mem=48092KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.996s mem=58508KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.996s mem=60312KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.995s mem=62084KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.995s mem=63928KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.995s mem=65276KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.994s mem=66764KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.003s usage=11.997s mem=68256KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.994s mem=70092KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.993s mem=71256KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.993s mem=72444KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.993s mem=73564KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.993s mem=74624KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.993s mem=76376KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.992s mem=77448KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.992s mem=78396KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:04:59 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.040s
ramon: group.total          20.005s
ramon: group.utime          19.961s
ramon: group.stime          0.044s
ramon: group.mempeak        78652KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
