ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:16:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27106 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/wJGdfBS30THK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             959065
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   82.6446     10000        49          0            1        2)
(sat.ddfw       1      1   42.9227     20001        98          1            1        3)
(smt.stats    0    101   4200    365  1282/1153/98      93/16     6   19   52.05)
(smt.stats    1    202   7652   1745  1973/1768/98     201/16     6   19   52.24)
(sat.ddfw       1      1   44.0529     40001       196          2            1        5)
(smt.stats    2    313  10191   5735  2060/1869/99     311/20     7   20   52.43)
(smt.stats    3    414  11965   8224  2383/2164/107     417/42     8   25   52.53)
(smt.stats    4    526  14848  10088  2638/2390/110     529/48    10   35   52.74)
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&18014398509481982
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&18014398509481981
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&18014398509481981
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&18014398509481980
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421967
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421968
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421967
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421968
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421984
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421967
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421968
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421966
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421964
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421920
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 4 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 16 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 23 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 4 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 28 := 63&562949953421868
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 44 := 63&562949953421868
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #851 #855) 64)) 18577348462903852 := 1125899906843290 << 6
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&562949953421840
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 16 := 63&562949953421840
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #851 #855) 64)) 72620543991349776 := 1125899906843290 << 6
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481983 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481983 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481983 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 18014398509481982 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 562949953421967 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #104))) 562949953421752 := 562949953421645 << 7
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 63 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 62 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 60 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 1 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 32 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 32 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 4 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 2 := 63&42624
(smt.stats    5    648  16535  14999  2778/2520/209     679/80    12   55   53.03)
(sat.ddfw       1      1   41.7827     70001       343          3            1        8)
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 63 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 62 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 60 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 56 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 48 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 32 := 63&42624
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  18675  18675  2880/2561/214     788/94    15   65   53.35)
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 1 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 2 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 4 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 2 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 4 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 2 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 4 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 8 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 16 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 40 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 32 := 63&42624
band: (band[54] (if (= #388 63) 0 (if #592 1 #844)) (shl[64] (* 2 #102) (mod #859 64))) 0 := 63&42624
band: (band[54] (if (= #108 53) 0 (if #613 1 #763)) (shl[54] (bv2int %0) (+ 54 #766))) 9 := 63&42624
(smt.stats    7    860  20506  23240  2864/2609/277     934/126    17   84   53.48)
ramon: poll                 wall=1.000s usage=0.946s mem=55776KiB load=0.95 rootload=0.93
(smt.stats    8    982  23373  27552  2973/2694/284    1109/139    18   85   53.67)
(sat.ddfw       1      1   39.3314    110001       539          4            1       12)
(smt.stats    9   1116  25620  31783  3062/2779/293    1232/167    20  119   53.77)
(sat.ddfw       1      1   36.2574    160000       784          5            1       17)
(smt.stats   10   1217  27178  35587  3117/2795/293    1397/169    20  119   53.87)
ramon: poll                 wall=2.000s usage=2.142s mem=56292KiB load=1.20 rootload=1.20
(sat.ddfw       1      1   31.1694    220001      1078          6            1       23)
(smt.stats   11   1328  28835  39981  3203/2856/293    1554/189    21  126   54.15)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  30462  44545  3341/3059/298    1860/229    23  142   54.25)
(smt.stats   13   1584  33249  53509  3363/3071/299    2069/231    23  142   54.38)
(smt.stats   14   1731  37302  64036  3477/3167/299    2290/251    24  153   54.58)
(sat.ddfw       1      1   25.7448    290001      1421          7            1       30)
(smt.stats   15   1832  38805  69190  3533/3184/300    2598/266    25  159   54.70)
ramon: poll                 wall=3.000s usage=3.141s mem=57276KiB load=1.00 rootload=1.00
(smt.stats   16   1943  40582  75484  3715/3320/300    2931/268    25  159   55.09)
(smt.stats   17   2065  43047  80433  3730/3380/303    3195/297    26  159   55.31)
(sat.ddfw       1      1   22.0872    370001      1813          8            1       38)
(smt.stats   18   2199  47945  92975  3767/3406/303    3414/315    27  165   55.31)
ramon: poll                 wall=4.000s usage=4.141s mem=57788KiB load=1.00 rootload=1.00
(smt.stats   19   2346  51476  99949  3924/3434/303    3657/316    27  165   55.56)
(sat.ddfw       1      1   19.3798    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.140s mem=58044KiB load=1.00 rootload=1.00
(smt.stats   20   2507  54773 109343  4115/3590/303    4085/318    27  165   55.75)
(sat.ddfw       1      1    17.325    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.140s mem=58044KiB load=1.00 rootload=1.00
(smt.stats   21   2608  57330 116685  4303/3814/303    4331/318    27  165   55.94)
(smt.stats   22   2719  60405 126672  4495/4001/305    4633/398    28  170   55.94)
ramon: poll                 wall=7.000s usage=7.140s mem=58556KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.7008    670001      3284         11            1       68)
(smt.stats   23   2841  63163 136305  4671/4164/305    4962/403    28  170   56.13)
(smt.stats   24   2975  66745 151122  4801/4348/305    5541/408    28  170   56.32)
ramon: poll                 wall=8.000s usage=8.140s mem=58812KiB load=1.00 rootload=1.00
(smt.stats   25   3122  70230 160461  4944/4462/305    5933/416    28  170   56.42)
(sat.ddfw       1      1   14.3609    790001      3872         12            1       80)
(smt.stats   26   3283  73481 175957  5172/4658/305    6581/416    28  170   56.61)
ramon: poll                 wall=9.000s usage=9.140s mem=59112KiB load=1.00 rootload=1.00
(smt.stats   27   3460  75880 192875  5405/4875/305    7391/419    28  170   56.80)
(sat.ddfw       1      1     13.38    920001      4509         13            1       93)
(smt.stats   28   3561  77609 197798  5447/5093/305    7971/419    28  170   56.80)
ramon: poll                 wall=10.000s usage=10.324s mem=59368KiB load=1.18 rootload=1.18
(smt.stats   29   3672  79680 204840  5512/5109/305    8348/421    28  170   56.90)
(smt.stats   30   3794  81627 210519  5668/5193/305    8632/424    28  170   57.09)
ramon: poll                 wall=11.000s usage=11.417s mem=59368KiB load=1.09 rootload=1.09
(sat.ddfw       1      1    12.718   1060001      5196         14            1      108)
(smt.stats   31   3928  83434 218710  5863/5409/305    8930/426    28  170   57.18)
ramon: poll                 wall=12.000s usage=12.417s mem=59880KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.8064   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=13.416s mem=60140KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=14.430s mem=60052KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   11.0497   1370001      6715         16            1      139)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   32   4075  85927 227194  5939/5577/305   10196/427    28  170   57.66)
ramon: poll                 wall=15.000s usage=15.430s mem=60308KiB load=1.00 rootload=1.00
(smt.stats   33   4236  91045 251060  6041/5668/305   10918/435    28  170   57.66)
ramon: poll                 wall=16.003s usage=16.430s mem=60564KiB load=1.00 rootload=1.00
(smt.stats   34   4413  98916 290028  6140/5720/305   12414/441    28  170   58.02)
(sat.ddfw       1      1   10.3849   1540001      7549         17            1      156)
(smt.stats   35   4607 102439 306820  6199/5832/306   13739/1193    29  175   58.21)
ramon: poll                 wall=17.000s usage=17.429s mem=60764KiB load=1.00 rootload=1.00
(smt.stats   36   4708 105196 322832  6269/5870/306   14320/1198    29  175   58.21)
(smt.stats   37   4819 108596 338236  6318/5936/306   14537/1199    29  175   58.21)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 111744 358333  6414/6003/306   15098/1200    29  175   58.41)
ramon: poll                 wall=18.000s usage=18.429s mem=61020KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 25)
(smt.stats   39   5075 115279 374716  6435/6084/306   15508/1201    29  175   58.41)
(sat.ddfw       1      1   9.79805   1720001      8431         18            1      174)
(smt.stats   40   5222 124857 415116  6478/6111/306   15889/1201    29  175   58.41)
ramon: poll                 wall=19.000s usage=19.430s mem=61276KiB load=1.00 rootload=1.00
(smt.stats   41   5383 130135 439572  6631/6172/306   16389/1204    29  175   58.50)
(smt.stats   42   5560 133633 465009  6693/6315/306   17484/1205    29  175   58.79)
ramon: poll                 wall=20.000s usage=20.426s mem=61532KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:17:11 2024
ramon: root.execname        z3
ramon: root.utime           20.490s
ramon: root.stime           0.010s
ramon: group.total          20.504s
ramon: group.utime          20.492s
ramon: group.stime          0.012s
ramon: group.mempeak        61788KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.02
