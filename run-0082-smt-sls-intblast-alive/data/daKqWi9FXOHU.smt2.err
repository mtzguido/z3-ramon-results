ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:50:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27761 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/daKqWi9FXOHU.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             873374
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   108.696     10000        49          0            1        2)
(sat.ddfw       1      1   67.1208     20001        98          1            1        3)
(sat.ddfw       1      1   68.0272     40001       196          2            1        5)
(smt.stats    0    101   2529    218   702/635/106     108/12     4   17   51.75)
(sat.ddfw       1      1   59.6421     70001       343          3            1        8)
(smt.stats    1    202   4502   1507  1105/973/107     289/14     5   19   51.84)
(smt.stats    2    313   6249   3582  1477/1294/110     472/85     6   25   51.84)
(sat.ddfw       1      1   51.9481    110001       539          4            1       12)
(smt.stats    3    414   7751   5965  1501/1375/120     613/102     7   26   51.95)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 3586&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 3586&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 3586&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 3586&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 3586&3585
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 268439042 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3585 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3584 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 3072 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2048 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 29007872&3585
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 268435455 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 1 := 29007872&3585
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 29007872&3585
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 29007873 := 3541 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975106&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975106&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 2 := 28975107&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8 := 28975105&224
(smt.stats    4    525   8802   7751  1585/1440/164     836/122     8   57   52.25)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 224 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 192 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 28975232&224
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 297410688 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975105&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975231&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975168&224
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 297410624 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 64 := 28975168&224
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 297410624 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 192 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 1 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 3536 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 0 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 0 := 3537 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 224 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 223 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 30 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] ramon: poll                 wall=1.000s usage=0.778s mem=54644KiB load=0.78 rootload=0.76
(shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 11 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 11 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 10 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 128 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 64 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32 := 1810944&224
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 1810944&224
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32 := 1810944&224
(smt.stats    5    647  10337  12455  1718/1581/320    1026/168    11   94   52.75)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8192 := 8353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16384 := 16545&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8192 := 8353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 8192 := 8353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 16384 := 16545&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32768 := 32929&229456
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 536903841 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32768 := 32929&229456
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 536903841 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 32768 := 32959&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 6273&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 4096 := 4353&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 3585&229456
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 536874497 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 6335&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 6319&229456
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 1879054511 := 3547 << 19
(sat.ddfw       1      1   47.1689    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  12124  15516  1831/1680/352    1355/215    12  103   53.13)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 1816064 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
shl: (shl[28] (bv2int %0) (mod (bv2int %0) 28)) 1816064 := 3547 << 19
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 256 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 512 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1024 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2048 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16384 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32768 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 32768 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 16384 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 4096 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 8192 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2048 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2048 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 2048 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1024 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1024 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 249036800&229456
band: (band[28] (shl[28] (bv2int %0) (mod #104 28)) (if (= #382 27) 0 (if #384 1 #457))) 1024 := 249036800&229456
(smt.stats    7    859  14017  19568  2001/1701/352    1607/227    12  103   53.93)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 49152 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 40960 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 40960 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 40960 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 40960 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 65536 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 131072 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 33152 := 249036800&229456
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 33152 := 249036800&229456
(smt.stats    8    981  16487  24009  2179/1916/469    1845/264    13  121   54.12)
(sat.ddfw       1      1   43.0115    220001      1078          6            1       23)
(smt.stats    9   1115  22090  34289  2255/2069/480    2403/327    14  129   54.40)
(sat.ddfw       1      1   38.3772    290001      1421          7            1       30)
(smt.stats   10   1216  25708  45401  2297/2092/480    2647/424    15  147   54.59)
ramon: poll                 wall=2.000s usage=1.753s mem=56936KiB load=0.98 rootload=0.98
(smt.stats   11   1327  29867  53759  2313/2138/482    2948/518    16  151   54.88)
(sat.ddfw       1      1   34.9803    370001      1813          8            1       38)
(smt.stats   12   1449  35697  65438  2351/2168/482    3153/518    16  151   54.98)
(smt.stats   13   1584  38453  73940  2374/2183/502    3383/736    18  258   55.08)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&0
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 1 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&57364
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 17 << 17
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&917827
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 21 << 21
(sat.ddfw       1      1   31.4795    460001      2254          9            1       47)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&14685247
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 25 << 25
ramon: poll                 wall=3.000s usage=2.683s mem=58016KiB load=0.93 rootload=0.93
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&14
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 5 << 5
(smt.stats   14   1731  41905  83553  2518/2239/504    3706/740    18  258   55.46)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&28
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 6 << 6
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&896
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 11 << 11
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&56
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 7 << 7
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 0&112
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 0 := 8 << 8
(smt.stats   15   1832  44573  90940  2715/2389/529    3991/764    19  269   55.46)
(smt.stats   16   1943  47623  98282  2774/2566/555    4468/793    20  273   55.93)
(sat.ddfw       1      1   28.8684    560001      2745         10            1       57)
ramon: poll                 wall=4.000s usage=3.621s mem=58848KiB load=0.94 rootload=0.93
(sat.ddfw       1      1   26.1905    670001      3284         11            1       68)
(smt.stats   17   2065  52448 106229  2854/2577/556    4861/880    21  302   56.12)
(sat.ddfw       1      1   24.5449    790001      3872         12            1       80)
ramon: poll                 wall=5.000s usage=4.614s mem=59148KiB load=0.99 rootload=1.00
(smt.stats   18   2199  56571 122203  3009/2766/560    5195/987    23  312   56.37)
(sat.ddfw       1      1   23.1111    920001      4509         13            1       93)
ramon: poll                 wall=6.000s usage=5.612s mem=59448KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   19   2346  60502 140830  3144/2927/562    5718/1057    24  315   56.55)
(sat.ddfw       1      1   21.8136   1060001      5196         14            1      108)
ramon: poll                 wall=7.000s usage=6.614s mem=59612KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.6101   1210001      5931         15            1      123)
ramon: poll                 wall=8.000s usage=7.609s mem=59456KiB load=1.00 rootload=0.99
(smt.stats   20   2507  63094 149088  3344/2943/562    6011/1063    24  315   56.84)
(sat.ddfw       1      1   19.5098   1370001      6715         16            1      139)
(smt.stats   21   2608  66246 157397  3554/3261/562    6278/1071    24  315   56.94)
ramon: poll                 wall=9.002s usage=8.614s mem=59744KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   18.5488   1540001      7549         17            1      156)
(smt.stats   22   2719  69598 164281  3729/3378/563    6458/1136    25  317   56.94)
ramon: poll                 wall=10.000s usage=9.607s mem=59768KiB load=1.00 rootload=0.99
(smt.stats   23   2841  72737 175201  3966/3549/563    6762/1140    25  317   57.03)
(sat.ddfw       1      1   17.6609   1720001      8431         18            1      174)
(smt.stats   24   2975  76939 191885  3987/3776/564    7571/1315    26  320   57.13)
ramon: poll                 wall=11.000s usage=10.607s mem=59848KiB load=1.00 rootload=1.00
(smt.stats   25   3122  80851 214550  3997/3786/568    8206/1315    26  320   57.22)
(sat.ddfw       1      1   16.8664   1910001      9362         19            1      193)
(smt.stats   26   3283  85600 230216  4013/3789/568    8767/1501    27  357   57.40)
ramon: poll                 wall=12.000s usage=11.606s mem=60176KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.1173   2110001     10343         20            1      214)
(smt.stats   27   3460  90428 256122  4036/3825/570    9222/1614    28  360   57.49)
(smt.stats   28   3561  92857 269705  4090/3855/571    9650/1619    28  360   57.63)
ramon: poll                 wall=13.000s usage=12.606s mem=60208KiB load=1.00 rootload=1.00
(smt.stats   29   3672  95699 283255  4292/3883/571    9999/1683    29  371   57.72)
(smt.stats   30   3794  99065 302293  4378/4123/571   10490/1684    29  371   57.82)
(sat.ddfw       1      1   15.4128   2320001     11372         21            1      235)
(smt.stats   31   3928 103139 321161  4398/4175/571   10957/1684    29  371   57.91)
ramon: poll                 wall=14.000s usage=13.607s mem=60384KiB load=1.00 rootload=1.00
(smt.stats   32   4075 106043 329878  4494/4195/572   11483/1754    30  375   57.91)
(smt.stats   33   4236 109512 343221  4956/4322/572   11872/1754    30  375   58.01)
(sat.ddfw       1      1    14.776   2540001     12451         22            1      257)
ramon: poll                 wall=15.000s usage=14.607s mem=60848KiB load=1.00 rootload=1.00
(smt.stats   34   4413 111540 354580  5278/4820/572   12462/1754    30  375   58.20)
ramon: poll                 wall=16.000s usage=15.606s mem=60984KiB load=1.00 rootload=1.00
(smt.stats   35   4607 118676 383754  5489/5097/579   13858/1946    31  381   58.39)
(sat.ddfw       1      1   14.1818   2770001     13578         23            1      280)
(smt.stats   36   4708 120704 389127  5664/5312/580   13941/2339    32  475   58.49)
ramon: poll                 wall=17.000s usage=16.606s mem=61084KiB load=1.00 rootload=1.00
(smt.stats   37   4819 123407 405228  5952/5585/580   14704/2346    32  475   58.58)
(smt.stats   38   4941 127438 430386  6099/5767/580   15513/2352    32  475   58.68)
(sat.ddfw       1      1    13.648   3010001     14754         24            1      305)
(smt.delete-inactive-clauses  :num-deleted-clauses 183)
ramon: poll                 wall=18.000s usage=17.604s mem=61420KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   39   5075 131810 444330  6170/5899/581   16268/2618    33  477   58.77)
ramon: poll                 wall=19.000s usage=18.604s mem=61532KiB load=1.00 rootload=1.00
(smt.stats   40   5222 137472 462606  6383/5991/581   17011/2620    33  477   58.96)
(sat.ddfw       1      1   13.1399   3260001     15980         25            1      330)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&14
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 3226468353 := 5 << 5
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&14
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 3226468353 := 5 << 5
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&0
shl: (shl[32] (bv2int %0) (mod (+ #104 #258) 32)) 3226468353 := 1 << 1
(smt.stats   41   5383 141810 487586  6513/6294/584   18107/3014    34  485   59.29)
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&7
band: (band[28] (shl[32] (bv2int %0) (mod #259 32)) (if (or #477 #478) 0 (if #479 1 #539))) 0 := 5242881&7
ramon: poll                 wall=20.000s usage=19.648s mem=61916KiB load=1.04 rootload=1.04
ramon: end                  Fri Nov  1 22:50:35 2024
ramon: root.execname        z3
ramon: root.utime           19.690s
ramon: root.stime           0.010s
ramon: group.total          19.710s
ramon: group.utime          19.698s
ramon: group.stime          0.012s
ramon: group.mempeak        62172KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              0.98
