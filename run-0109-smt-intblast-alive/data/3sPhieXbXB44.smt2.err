ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:25:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42857 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/3sPhieXbXB44.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2781472
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1 := 72057594037927935&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187280&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 0&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 72057594037927936 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187280&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187311&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187311&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 15 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 15 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481983 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481982 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481980 := 63050394783187296&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 0&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 72057594037927936 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 0&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 72057594037927936 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 0&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 72057594037927936 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481979 := 18014398509481984&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481978 := 63050394783187278&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481976 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481968 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481979 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481979 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481978 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481976 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481968 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481952 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481920 := 63050394783187264&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481960 := 18014398509481984&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481960 := 18014398509481992&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 18014398509481960 := 18014398509481960&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 90071992547409896 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037927935 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 72057594037927935 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 1 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 3 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 63050394783187278 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 18014398509481983 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 18014398509481982 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 18014398509481980 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 18014398509481976 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 8 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 16 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 64 := 36028797018963968&18014398509481983
(smt.stats    0    101   4869    991  1411/1225/176     104/21     9   33   19.89)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 36028797018963969 := 63050394783187279 << 55
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 204 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 264 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 64 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 64 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 8 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 8 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 8 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 8 := 36028797018963968&18014398509481983
(smt.stats    1    202   6295   2625  2704/2392/244     251/56    13   49   20.10)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 2 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 2 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 1 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 128 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 128 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 16 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 64 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 64 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 4 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 32 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 16 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&18014398509481983
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 16 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 128 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 128 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 256 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 512 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1024 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2048 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2048 := 36028797018963968&18014398509481983
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2048 := 36028797018963968&18014398509481983
(smt.stats    2    313   7729   4863  2814/2542/334     397/75    18   73   20.68)
(smt.stats    3    414   8078   5521  2993/2622/334     642/75    18   73   20.68)
(smt.stats    4    525  12163   9854  3139/2859/352     929/187    23   97   20.81)
(smt.stats    5    647  16829  18488  3190/2919/355    1162/268    25  100   21.05)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  20677  26726  3277/3001/361    1294/302    29  109   21.14)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 52 := 36028797018964084&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 36028797018964084 := 7 << 7
(smt.stats    7    859  25136  33985  3338/3027/368    1563/334    33  128   21.24)
(smt.stats    8    982  28371  39301  3451/3170/372    1997/468    34  129   21.34)
ramon: poll                 wall=1.000s usage=0.948s mem=22708KiB load=0.95 rootload=0.93
(smt.stats    9   1116  33090  47505  3490/3189/372    2358/506    35  131   21.49)
(smt.stats   10   1217  38580  59167  3506/3218/372    2562/507    35  131   21.59)
(smt.stats   11   1328  43746  70420  3546/3265/374    2816/709    37  137   21.59)
(smt.stats   12   1450  49007  79493  3553/3272/374    3120/709    37  137   21.73)
(smt.stats   13   1584  55301 102175  3558/3277/374    3567/709    37  137   21.83)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   14   1731  58875 112713  3646/3293/376    3777/1079    38  138   21.93)
ramon: poll                 wall=2.000s usage=1.947s mem=23380KiB load=1.00 rootload=1.00
(smt.stats   15   1832  59453 115347  3794/3449/376    3918/1082    38  138   22.21)
(smt.stats   16   1943  60917 122465  4066/3759/377    4257/1134    39  138   22.21)
(smt.stats   17   2065  64481 131147  4096/3783/377    4427/1134    39  138   22.31)
(smt.stats   18   2199  69820 152686  4118/3804/378    4692/1200    41  142   22.51)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 252201579132747776 := 7 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 16248987455552749568 := 7 << 7
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 36028797018963968&63
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 16248987455552749568 := 7 << 7
(smt.stats   19   2346  74372 163369  4209/3869/378    5043/1202    41  142   22.70)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 8064&63
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 9 := 63 << 7
(smt.stats   20   2507  79954 176797  4261/3950/390    5431/1243    43  154   22.79)
ramon: poll                 wall=3.000s usage=2.947s mem=24176KiB load=1.00 rootload=1.00
(smt.stats   21   2608  83380 190054  4302/3962/391    5670/1245    43  154   22.89)
(smt.stats   22   2719  86828 201081  4340/4014/392    5910/1340    44  164   22.89)
(smt.stats   23   2841  90122 214212  4354/4034/392    6069/1379    45  166   22.89)
(smt.stats   24   2975  92441 225594  4368/4048/392    6327/1379    45  166   22.94)
ramon: poll                 wall=4.000s usage=3.947s mem=24628KiB load=1.00 rootload=1.00
(smt.stats   25   3122  97405 235086  4427/4060/393    6736/1453    46  170   23.13)
(smt.stats   26   3283 101646 246630  4462/4132/393    7099/1455    46  170   23.39)
ramon: poll                 wall=5.000s usage=4.942s mem=24944KiB load=1.00 rootload=1.00
(smt.stats   27   3460 108068 266543  4538/4226/394    7720/1593    47  178   23.49)
(smt.stats   28   3561 111152 277001  4557/4229/394    7922/1594    47  178   23.49)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 2 := 896&63
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 1 := 896&63
(smt.stats   29   3672 114022 286274  4612/4250/394    8200/1595    47  178   23.58)
(smt.stats   30   3794 116687 294496  4665/4349/408    8478/1666    48  179   23.78)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 5 := 640&15
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 5 := 640&15
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 4 := 640&15
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 4 := 640&15
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 640&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 640 := 5 << 5
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 640&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 640 := 5 << 5
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 640&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 640 := 5 << 5
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 640&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #397) 64)) 640 := 5 << 5
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
shl: (shl[56] (bv2int %0) (mod (bv2int %0) 56)) 7 := 7 << 7
(smt.stats   31   3928 118973 303884  4711/4355/408    8796/1672    48  179   23.78)
(smt.stats   32   4075 124752 314500  4744/4418/413    9032/1756    49  196   23.92)
ramon: poll                 wall=6.000s usage=5.942s mem=25256KiB load=1.00 rootload=1.00
(smt.stats   33   4236 134647 359812  4770/4454/413    9253/1756    49  196   23.92)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   34   4413 146135 424948  4774/4458/413    9468/1792    50  196   23.92)
(smt.stats   35   4607 149719 439528  4808/4464/413    9877/1793    50  196   24.04)
ramon: poll                 wall=7.000s usage=6.942s mem=25392KiB load=1.00 rootload=1.00
(smt.stats   36   4708 153446 454024  4831/4493/413   10043/1795    50  196   24.04)
(smt.stats   37   4819 157735 469980  4911/4537/413   10252/1795    50  196   24.13)
(smt.stats   38   4941 162954 490797  4952/4607/414   10766/1907    51  198   24.13)
ramon: poll                 wall=8.000s usage=7.942s mem=25624KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5075 166811 503759  4958/4640/414   11088/1907    51  198   24.23)
(smt.stats   40   5222 171673 522122  4987/4665/415   11353/2044    52  210   24.23)
(smt.stats   41   5383 177838 538890  5009/4675/415   11653/2044    52  210   24.32)
ramon: poll                 wall=9.000s usage=8.941s mem=25716KiB load=1.00 rootload=1.00
(smt.stats   42   5560 182141 559658  5055/4712/415   12040/2044    52  210   24.32)
(smt.stats   43   5754 188681 585306  5063/4747/415   12636/2044    52  210   24.42)
(smt.stats   44   5967 194852 618979  5071/4748/416   13197/2152    53  215   24.51)
(smt.stats   45   6068 197420 627899  5076/4757/416   13390/2152    53  215   24.65)
(smt.stats   46   6179 200628 642333  5080/4763/416   13562/2152    53  215   24.67)
ramon: poll                 wall=10.000s usage=9.941s mem=26088KiB load=1.00 rootload=1.00
(smt.stats   47   6301 205499 669312  5088/4770/416   13757/2152    53  215   24.71)
(smt.stats   48   6435 211204 694522  5099/4774/416   14038/2152    53  215   24.81)
(smt.stats   49   6582 215103 716744  5117/4787/416   14230/2152    53  215   24.81)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 4 := 4261&16383
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 4 := 4260&16383
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 4 := 4292&16383
(smt.stats   50   6743 218588 733508  5368/4808/416   14512/2156    53  215   24.81)
(smt.stats   51   6920 222182 753201  5629/5099/421   14914/2267    54  216   25.00)
ramon: poll                 wall=11.000s usage=10.941s mem=26588KiB load=1.00 rootload=1.00
(smt.stats   52   7114 225405 764943  5813/5319/421   15524/2271    54  216   25.00)
(smt.stats   53   7327 228432 780150  6135/5530/421   15974/2271    54  216   25.24)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   54   7561 233414 817448  6239/5882/421   16797/2423    55  216   25.34)
(smt.stats   55   7662 235615 830563  6388/5932/421   17196/2424    55  216   25.34)
(smt.stats   56   7773 237217 844727  6564/6106/421   17738/2426    55  216   25.50)
ramon: poll                 wall=12.000s usage=11.941s mem=27032KiB load=1.00 rootload=1.00
(smt.stats   57   7895 240251 868003  6617/6254/421   18189/2427    55  216   25.63)
(smt.stats   58   8029 242105 881577  6792/6393/421   19227/2427    55  216   25.72)
(smt.stats   59   8176 244466 893984  6927/6484/421   19766/2429    55  216   25.97)
(smt.stats   60   8337 246229 904107  7199/6729/422   20129/2697    56  216   26.07)
(smt.stats   61   8514 247942 909312  7412/6894/422   20625/2698    56  216   26.17)
ramon: poll                 wall=13.001s usage=12.938s mem=28056KiB load=1.00 rootload=1.00
(smt.stats   62   8708 254197 949441  7548/7163/422   22171/2699    56  216   26.38)
(smt.stats   63   8921 262068 993523  7575/7240/422   23651/2699    56  216   26.57)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9155 268420 1035193  7588/7270/424   24481/3076    57  220   26.59)
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 62 := 896&63
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 61 := 896&63
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 61 := 896&63
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 60 := 896&63
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 56 := 896&63
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 56 := 896&63
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 48 := 896&63
band: (band[56] (shl[64] (bv2int %0) (mod #398 64)) (if (or #803 #804) 0 (if #805 1 #933))) 0 := 896&63
band: (band[56] (shl[56] (bv2int %0) (mod #104 56)) (if (= #625 55) 0 (if #627 1 #783))) 32 := 896&63
ramon: poll                 wall=14.000s usage=13.938s mem=28312KiB load=1.00 rootload=0.99
(smt.stats   65   9412 277005 1092995  7602/7276/424   25534/3080    57  220   26.84)
(smt.stats   66   9513 279759 1108816  7604/7286/424   25836/3435    58  223   26.84)
(smt.stats   67   9624 284915 1122029  7619/7287/424   26334/3435    58  223   26.94)
ramon: poll                 wall=15.000s usage=14.938s mem=28568KiB load=1.00 rootload=1.00
(smt.stats   68   9746 290711 1152910  7671/7315/424   26790/3438    58  223   26.94)
(smt.stats   69   9880 294784 1179984  7704/7370/424   27002/3439    58  223   26.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 1724)
(smt.stats   70  10027 297864 1201949  7722/7397/424   25757/3440    58  223   27.16)
ramon: poll                 wall=16.000s usage=15.938s mem=28828KiB load=1.00 rootload=1.00
(smt.stats   71  10188 303613 1225440  7800/7409/424   26127/3448    58  223   27.07)
(smt.stats   72  10365 310438 1256874  7949/7631/429   26758/3849    59  226   27.16)
ramon: poll                 wall=17.000s usage=16.938s mem=28828KiB load=1.00 rootload=1.00
(smt.stats   73  10559 315638 1278782  8006/7669/430   27967/3853    59  226   27.26)
ramon: poll                 wall=18.000s usage=17.938s mem=29084KiB load=1.00 rootload=1.00
(smt.stats   74  10772 323632 1314614  8166/7721/430   29377/3854    59  226   27.35)
(smt.stats   75  11006 329741 1350198  8362/7890/430   30529/4109    60  235   27.55)
ramon: poll                 wall=19.000s usage=18.938s mem=29340KiB load=1.00 rootload=1.00
(smt.stats   76  11263 336591 1378700  8588/8077/431   31171/4113    60  235   27.79)
ramon: poll                 wall=20.000s usage=19.938s mem=29340KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:26:10 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.996s
ramon: group.utime          19.984s
ramon: group.stime          0.012s
ramon: group.mempeak        29852KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.00
