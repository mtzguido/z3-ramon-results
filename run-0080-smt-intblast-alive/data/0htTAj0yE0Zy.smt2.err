ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:22:41 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31270 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1272
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0htTAj0yE0Zy.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4018669
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101    945    634   692/473/104     128/26     5   16   18.68)
(smt.stats    1    202   2061   2117   792/708/108     284/59     7   22   18.77)
(smt.stats    2    313   3064   3525   896/810/118     432/83     8   36   18.77)
(smt.stats    3    414   3859   5297  1069/996/123     571/89     9   38   18.87)
(smt.stats    4    525   4635   6704  1154/1011/123     705/91     9   38   18.96)
(smt.stats    5    647   5190   7729  1370/1088/123     855/112    10   42   19.06)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations         :lemmas          :deletions    )
(smt.stats    6    748   5902   9640  1505/1398/123    1048/113    10   42   19.06)
(smt.stats    7    859   6832  11389  1564/1445/123    1235/115    10   42   19.06)
(smt.stats    8    981   7499  14304  1621/1502/123    1380/118    10   42   19.17)
(smt.stats    9   1115   8093  17381  1709/1563/124    1612/192    11   43   19.17)
(smt.stats   10   1216   8308  20457  1733/1647/124    1729/192    11   43   19.17)
(smt.stats   11   1327   8737  22998  1744/1659/124    1859/192    11   43   19.17)
(smt.stats   12   1449   9246  26921  1763/1672/124    2058/192    11   43   19.26)
(smt.stats   13   1583   9933  30448  1780/1683/124    2252/192    11   43   19.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   14   1730  10612  35871  1784/1703/124    2430/192    11   43   19.36)
(smt.stats   15   1831  11042  39470  1811/1705/124    2553/193    11   43   19.36)
(smt.stats   16   1942  11492  42879  1815/1734/125    2687/287    12   44   19.36)
(smt.stats   17   2064  11818  47575  1831/1744/125    2838/287    12   44   19.36)
(smt.stats   18   2198  12440  50177  1844/1750/126    2995/308    13   45   19.36)
(smt.stats   19   2345  13116  56075  1894/1767/126    3199/308    13   45   19.36)
(smt.stats   20   2506  13780  63236  1922/1824/130    3420/316    14   46   19.53)
(smt.stats   21   2607  14328  68222  1990/1845/130    3559/320    14   46   19.53)
(smt.stats   22   2718  14632  70965  2006/1917/130    3676/368    15   49   19.53)
ramon: poll                 wall=1.003s usage=0.995s mem=20612KiB load=0.99 rootload=0.99
(smt.stats   23   2840  14997  74468  2017/1925/130    3812/368    15   49   19.53)
(smt.stats   24   2974  15594  78339  2066/1939/130    3997/371    15   49   19.53)
(smt.stats   25   3121  15895  86055  2066/1981/130    4148/371    15   49   19.53)
(smt.stats   26   3282  16510  91743  2091/1982/130    4386/374    15   49   19.62)
(smt.stats   27   3459  17225  97602  2135/2010/130    4773/374    15   49   19.62)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 1 := 2 << 1
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 1 := 2 << 1
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 0&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 0 := 1 << 1
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 0&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 6075 := 0 << 1
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 0&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 6075 := 0 << 1
(smt.stats   28   3563  17538 101712  2167/2078/143    4941/589    16   51   19.72)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65538 << 6
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65538 << 6
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65538 << 6
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65537 << 6
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65537 << 5
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65537 << 4
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65537 << 3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65537 << 2
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65537 << 2
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65537 << 2
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65537 << 4
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131073 := 65537 << 4
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 131071&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131071 := 131070 << 3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 131071&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131071 := 65538 << 3
(smt.stats   29   3674  18238 104582  2238/2138/179    5103/594    16   51   19.82)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 131071&1
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 131071&1
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 131070&1
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 131070 := 65537 << 15
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&1
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65536 := 65537 << 15
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 14
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 13
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 12
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 7
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 8
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 11
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 10
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 9
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 1 := 65537&3
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 16
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 2 := 2&3
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 2 := 65537 << 16
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 2 := 2&3
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 2 := 65537 << 16
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 6075 := 65537 << 16
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 0 := 65537 << 16
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 0 := 65537 << 16
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 3 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 1 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
band: (band[17] (shl[17] (bv2int %0) (mod #115 17)) (if (or #364 #365 #366 #367 #368 #369 #370 #371 #372 #373 #374 #375 #376 #377) 0 (if #378 1 #382))) 1 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
band: (band[17] (shl[17] (bv2int %0) (mod #115 17)) (if (or #364 #365 #366 #367 #368 #369 #370 #371 #372 #373 #374 #375 #376 #377) 0 (if #378 1 #382))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
band: (band[17] (shl[17] (bv2int %0) (mod #115 17)) (if (or #364 #365 #366 #367 #368 #369 #370 #371 #372 #373 #374 #375 #376 #377) 0 (if #378 1 #382))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
band: (band[17] (shl[17] (bv2int %0) (mod #115 17)) (if (or #364 #365 #366 #367 #368 #369 #370 #371 #372 #373 #374 #375 #376 #377) 0 (if #378 1 #382))) 1 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
band: (band[17] (shl[17] (bv2int %0) (mod #115 17)) (if (or #364 #365 #366 #367 #368 #369 #370 #371 #372 #373 #374 #375 #376 #377) 0 (if #378 1 #382))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
band: (band[17] (shl[17] (bv2int %0) (mod #115 17)) (if (or #364 #365 #366 #367 #368 #369 #370 #371 #372 #373 #374 #375 #376 #377) 0 (if #378 1 #382))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
band: (band[17] (shl[17] (bv2int %0) (mod #115 17)) (if (or #364 #365 #366 #367 #368 #369 #370 #371 #372 #373 #374 #375 #376 #377) 0 (if #378 1 #382))) 2 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 14
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 14
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 13
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 4&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 4 := 65537 << 13
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 13
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 12
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 12
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 11
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 4&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 4 := 65537 << 11
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 4&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 4 := 65537 << 11
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 4&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 4 := 65537 << 10
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 4&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 4 := 65537 << 10
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 4&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 4 := 65537 << 9
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 9
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 8
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 8
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 7
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65532&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65532 := 65537 << 7
(smt.stats   30   3796  19837 109182  2515/2268/271    5248/614    16   51   20.20)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65533&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65533 := 65537 << 13
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&1
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 1 := 65537&1
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 15
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 4
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 2
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 6
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 5
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65537&0
shl: (shl[32] (bv2int %0) (mod (+ #115 #443 #439) 32)) 65537 := 65537 << 5
(smt.stats   31   3930  21342 114641  2529/2401/276    5391/700    17   95   20.20)
(smt.stats   32   4077  23583 121170  2565/2424/280    5629/714    18  100   20.40)
(smt.stats   33   4238  26365 129985  2667/2476/280    5862/714    18  100   20.79)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 131008&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 131064 := 4094 << 5
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 130976&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 131064 := 4093 << 5
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   34   4415  28512 140351  2704/2567/293    6192/753    19  100   20.95)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 0&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 5 := 65536 << 8
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 0&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 5 := 65536 << 8
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 0&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 65533 := 65536 << 8
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 0&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 65533 := 65536 << 8
(smt.stats   35   4609  30136 145909  2730/2591/303    6495/753    20  136   21.05)
(smt.stats   36   4710  31112 149694  2755/2623/308    6649/753    20  136   21.15)
(smt.stats   37   4821  31896 156973  2771/2638/310    6874/771    21  150   21.15)
(smt.stats   38   4943  32529 163335  2796/2641/310    7070/771    21  150   21.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5077  33882 172326  2896/2735/310    7384/782    22  156   21.34)
(smt.stats   40   5224  34388 178199  2896/2735/315    7569/782    22  156   21.34)
(smt.stats   41   5385  36062 187981  2902/2738/315    7793/827    23  161   21.34)
(smt.stats   42   5562  37073 199156  2908/2749/319    8117/844    24  163   21.43)
(smt.stats   43   5756  39154 213087  3041/2838/319    8426/845    24  163   21.64)
ramon: poll                 wall=2.000s usage=1.992s mem=23356KiB load=1.00 rootload=0.98
(smt.stats   44   5969  42151 220926  3166/2924/333    8886/889    25  172   22.20)
(smt.stats   45   6070  42875 224598  3271/3074/333    9130/889    25  172   22.20)
(smt.stats   46   6181  45231 231118  3283/3079/335    9455/919    26  195   22.20)
(smt.stats   47   6303  47494 243567  3355/3105/335    9700/919    26  195   22.30)
(smt.stats   48   6437  50141 255566  3518/3316/343   10077/987    27  206   22.40)
(smt.stats   49   6584  51999 263017  3533/3331/349   10684/987    27  206   22.49)
(smt.stats   50   6745  54152 272672  3548/3342/349   11373/987    27  206   22.73)
ramon: poll                 wall=3.000s usage=2.992s mem=24100KiB load=1.00 rootload=1.00
(smt.stats   51   6922  55474 281967  3588/3347/349   11728/987    27  206   22.82)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7116  59792 298186  3688/3413/349   12440/1120    28  212   23.03)
(smt.stats   53   7329  63960 325202  3774/3512/350   12819/1121    28  212   23.03)
(smt.stats   54   7563  67097 345222  3788/3579/350   13413/1173    29  214   23.03)
(smt.stats   55   7664  68254 358612  3797/3588/350   13574/1173    29  214   23.03)
(smt.stats   56   7775  70169 369761  3805/3604/350   13827/1173    29  214   23.12)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 122880&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 120707 := 76111 << 13
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 106496&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 104323 := 76125 << 13
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 122880&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 89858 := 76127 << 13
(smt.stats   57   7897  71941 373121  3872/3604/350   14060/1174    29  214   23.33)
(smt.stats   58   8031  73603 380319  3951/3748/366   14343/1217    30  215   23.33)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 0&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 4 := 0 << 14
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 0&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 4 := 0 << 14
ramon: poll                 wall=4.000s usage=3.992s mem=24828KiB load=1.00 rootload=1.00
(smt.stats   59   8178  75729 393507  4008/3776/377   14992/1219    30  215   23.43)
(smt.stats   60   8339  77243 399900  4070/3834/377   15238/1219    30  215   23.53)
(smt.stats   61   8516  80193 413456  4155/3944/379   15800/1372    31  294   23.53)
(smt.stats   62   8710  85333 438209  4367/4146/380   16443/1374    31  294   23.72)
ramon: poll                 wall=5.000s usage=4.991s mem=25188KiB load=1.00 rootload=1.00
(smt.stats   63   8923  88776 451616  4575/4225/390   17065/1463    32  304   23.91)
(smt.stats   64   9157  94370 473298  4612/4404/391   17632/1463    32  304   24.00)
(smt.stats   65   9414  96281 495184  4642/4409/391   18234/1463    32  304   24.53)
(smt.stats   66   9515  97867 502253  4694/4477/391   18703/1540    33  308   24.53)
(smt.stats   67   9626  99847 515029  4696/4479/392   19294/1540    33  308   24.63)
(smt.stats   68   9748 101461 519345  4736/4479/392   19640/1542    33  308   24.73)
ramon: poll                 wall=6.000s usage=5.991s mem=26136KiB load=1.00 rootload=1.00
(smt.stats   69   9882 103620 538955  4863/4579/392   20148/1546    33  308   24.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 366)
(smt.stats   70  10029 106572 555826  4892/4649/392   20278/1696    34  309   24.82)
(smt.stats   71  10190 110431 582970  4896/4677/392   20710/1696    34  309   24.92)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10367 112725 598730  4965/4680/392   21383/1697    34  309   25.01)
ramon: poll                 wall=7.003s usage=6.994s mem=26580KiB load=1.00 rootload=1.00
(smt.stats   73  10561 115331 611647  5069/4818/392   21640/1697    34  309   25.11)
(smt.stats   74  10774 116964 615793  5238/4859/392   22242/1700    34  309   25.30)
ramon: poll                 wall=8.000s usage=7.991s mem=26664KiB load=1.00 rootload=1.00
(smt.stats   75  11008 119819 650479  5554/5189/393   22948/1846    35  312   25.30)
ramon: poll                 wall=9.000s usage=8.991s mem=26992KiB load=1.00 rootload=1.00
(smt.stats   76  11265 123833 689806  5779/5501/394   23788/1971    36  312   25.58)
ramon: poll                 wall=10.000s usage=9.990s mem=27112KiB load=1.00 rootload=1.00
(smt.stats   77  11547 128240 732886  5980/5753/395   25933/1971    36  312   25.78)
(smt.stats   78  11648 130886 746797  6008/5763/396   26402/2042    37  327   25.87)
(smt.stats   79  11759 133154 760451  6033/5799/396   26620/2043    37  327   25.87)
(smt.stats   80  11881 135739 810812  6059/5824/396   26779/2043    37  327   25.87)
(smt.stats   81  12015 137970 840074  6067/5844/399   27634/2073    38  356   26.05)
ramon: poll                 wall=11.000s usage=10.990s mem=27584KiB load=1.00 rootload=1.00
(smt.stats   82  12162 142154 873894  6134/5854/399   28096/2075    38  356   26.15)
(smt.stats   83  12323 144399 892073  6166/5926/399   28828/2079    38  356   26.24)
(smt.stats   84  12500 146483 902562  6177/5958/399   29633/2079    38  356   26.24)
(smt.stats   85  12694 150018 935059  6223/5960/399   30208/2080    38  356   26.44)
ramon: poll                 wall=12.000s usage=11.990s mem=27892KiB load=1.00 rootload=1.00
(smt.stats   86  12907 154359 985236  6277/6051/399   31298/2080    38  356   26.53)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   87  13141 159328 1044459  6288/6065/400   32003/2482    39  357   26.53)
(smt.stats   88  13398 164946 1107701  6297/6078/400   32701/2482    39  357   26.63)
ramon: poll                 wall=13.000s usage=12.990s mem=28148KiB load=1.00 rootload=1.00
(smt.stats   89  13680 168049 1148988  6544/6080/400   33435/2488    39  357   26.85)
ramon: poll                 wall=14.000s usage=13.989s mem=28520KiB load=1.00 rootload=0.99
(smt.stats   90  13990 174778 1231352  6662/6338/400   35136/2490    39  357   27.14)
(smt.stats   91  14091 176270 1246419  6686/6446/401   36043/2701    40  365   27.14)
(smt.stats   92  14202 178836 1278628  6708/6467/401   36409/2701    40  365   27.23)
(smt.stats   93  14324 181778 1319861  6748/6494/401   36803/2702    40  365   27.34)
(smt.stats   94  14458 183117 1334678  6754/6535/401   37923/2702    40  365   27.44)
(smt.stats   95  14605 184691 1357912  6763/6542/401   38188/2702    40  365   27.44)
(smt.stats   96  14766 189322 1398547  6763/6542/401   38564/2702    40  365   27.44)
ramon: poll                 wall=15.000s usage=14.989s mem=28984KiB load=1.00 rootload=1.00
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 26656&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 2048 := 72200 << 2
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 28704&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 2048 := 72712 << 2
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 28704&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 2048 := 72712 << 2
(smt.stats   97  14943 192135 1419422  6872/6546/401   39486/2706    40  365   27.63)
(smt.delete-inactive-clauses  :num-deleted-clauses 1317)
(smt.stats   98  15137 194864 1441749  7037/6650/406   38703/2962    41  366   27.73)
(smt.stats   99  15350 199547 1514765  7124/6893/407   39127/2962    41  366   27.73)
ramon: poll                 wall=16.000s usage=15.989s mem=29476KiB load=1.00 rootload=1.00
(smt.stats  100  15584 203256 1543180  7269/6912/407   39974/2966    41  366   27.92)
(smt.stats  101  15841 206574 1581371  7502/7177/408   41079/3069    42  374   28.25)
(smt.stats  102  16123 210727 1617300  7547/7311/408   41793/3070    42  374   28.25)
ramon: poll                 wall=17.000s usage=16.989s mem=30072KiB load=1.00 rootload=1.00
(smt.stats  103  16433 215772 1673739  7628/7333/408   42494/3071    42  374   29.05)
(smt.stats  104  16773 221430 1715397  7643/7418/408   44152/3071    42  374   29.14)
(smt.stats  105  16874 223195 1731386  7643/7418/409   44540/3270    43  378   29.24)
(smt.stats  106  16985 224756 1741287  7649/7420/409   44895/3270    43  378   29.24)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  107  17107 226592 1763151  7666/7424/409   45491/3270    43  378   29.43)
ramon: poll                 wall=18.000s usage=17.988s mem=30884KiB load=1.00 rootload=1.00
(smt.stats  108  17241 229922 1794446  7690/7451/409   45942/3270    43  378   29.43)
(smt.stats  109  17388 231761 1806837  7701/7472/409   46245/3270    43  378   29.43)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 94208&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 57340 := 88791 << 12
(smt.stats  110  17549 233905 1828209  7741/7490/415   46624/3270    43  378   29.43)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 94208&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 97548 := 88791 << 12
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 110080&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 110084 := 88791 << 9
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 110080&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 110084 := 88791 << 9
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 65536&3
band: (band[17] (shl[17] (bv2int %0) (mod #115 17)) (if (or #364 #365 #366 #367 #368 #369 #370 #371 #372 #373 #374 #375 #376 #377) 0 (if #378 1 #382))) 1 := 65536&3
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 98304&1
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 65536 := 88791 << 15
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 98304&1
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 65536 := 88791 << 15
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 89088&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 55040 := 88791 << 10
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 89088&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 55040 := 88791 << 10
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 47104&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 55040 := 88791 << 11
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 47104&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 55040 := 88791 << 11
(smt.stats  111  17726 235739 1851188  7887/7543/415   47044/3319    44  379   29.62)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 46528&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 101633 := 88791 << 6
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 46528&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 101633 := 88791 << 6
(smt.stats  112  17920 238140 1870127  7941/7652/440   47347/3320    44  379   29.72)
ramon: poll                 wall=19.000s usage=18.988s mem=31336KiB load=1.00 rootload=1.00
(smt.stats  113  18133 245266 1945771  7969/7715/445   48191/3320    44  379   29.91)
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 72048&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 72050 := 94615 << 4
band: (band[17] (shl[32] (bv2int %0) (mod #444 32)) (if (or #465 #466 #467 #468 #469 #470 #471 #472 #473 #474 #475 #476 #477 #478 #479) 0 (if #480 1 #523))) 0 := 72048&0
shl: (shl[17] (bv2int %0) (mod (bv2int %1) 17)) 72050 := 94615 << 4
(smt.stats  114  18367 249441 1962165  8213/7726/445   48964/3325    44  379   30.20)
ramon: poll                 wall=20.000s usage=19.988s mem=31868KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:23:01 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.001s
ramon: group.utime          19.973s
ramon: group.stime          0.028s
ramon: group.mempeak        32128KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
