ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:35:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39452 MiB
ramon: sys.mem.avail        61377 MiB
ramon: sys.nprocs           1328
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/oLb6U3s272HB.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3965217
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   258/258     0/0  58       0    18.51   0.00)
(sat.stats    107    745    0   258/258   107/35  58       0    18.83   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 290 :time 0.00)
(sat.stats    107    745    0   258/258   107/35  58       0    18.83   0.01)
(sat.stats    107    745    0   258/258   107/35  58       0    18.83   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 406018.94 :time 0.00)
(sat.stats    107    745    0   260/260    43/34  58       0    18.94   0.01)
(sat.stats    180   1728    1   260/260   116/93  58       0    18.94   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    183   1761    2   260/260   119/94  58       0    18.94   0.01)
(sat.stats    186   1815    3   260/260   122/94  58       0    18.94   0.01)
(sat.stats    189   1871    4   260/260   125/94  58       0    18.94   0.01)
(sat.stats    192   1926    5   260/260   128/95  58       0    18.94   0.01)
(sat.stats    195   2002    6   260/260   131/95  58       0    18.94   0.01)
(sat.stats    198   2068    7   260/260   134/95  58       0    18.94   0.01)
(sat.stats    201   2094    8   260/260   137/98  58       0    18.94   0.01)
(sat.stats    204   2141    9   260/260   140/99  58       0    19.03   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    207   2233   10   260/260   143/100  58       0    19.03   0.01)
(sat.stats    210   2262   11   260/260   146/103  58       0    19.03   0.01)
(sat.stats    213   2326   12   260/260   149/106  58       0    19.03   0.01)
(sat.stats    216   2460   13   260/260   152/109  58       0    19.03   0.01)
(sat.stats    366   5986   16   262/262   302/194  58       0    19.63   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4398 :time 0.00)
(sat.stats    485   9612   28   275/274   417/214  67       0    19.82   0.08)
lshr: (lshr[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 9223372036853581344 >>l 24
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 0&15393162788864
lshr: (lshr[64] (bv2int %0) (mod (+ #49 #331) 64)) 9223387430017564673 := 195072 >>l 24
 (sat-cleaner :elim-literals 4 :elim-clauses 4 :cost 4929 :time 0.00)
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 1&15393162788864
band: (band[63] (if (= #626 63) 516508834063867445248 (if #628 258254417031933722624 #752)) (lshr[64] (bv2int %0) (mod #755 64))) 1 := 15393162788864&1
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 1 := 1&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 2 := 2&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 12 := 15&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 506024 := 549755793224&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 94768 := 549754621243&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 4064 := 549754776617&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 85885696 := 549718841449&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 7955712 := 560925183&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 64 := 276&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 64 := 383&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 128 := 320&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 128 := 255&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 512 := 576&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 1024 := 1535&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 2048 := 2559&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 4096 := 4544&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 8192 := 8640&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 16384 := 16895&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 32768 := 33216&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 65536 := 65984&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 131072 := 131520&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 262144 := 262655&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 524288 := 524799&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 1048576 := 1049085&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 2097152 := 2097600&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 4194304 := 4194815&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 8388608 := 8389103&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 16777216 := 16777680&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 33554432 := 33554895&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 67108864 := 67109325&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 134217728 := 134218185&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 268435456 := 268435904&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 536870912 := 536871360&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 1073741824 := 1073742335&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 2147483648 := 2147484159&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 4294967296 := 4294967359&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 8589934592 := 8589934655&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 17179869184 := 17179869247&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 34359738368 := 34359738368&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 68719476736 := 68719476736&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 137438953472 := 137438953535&15393162788864
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 274877906944 := 274877906944&15393162788864
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 7451 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    712  17705   46  5544/5541   745/402 333       0    22.23   0.26)
lshr: (lshr[63] (bv2int %0) (mod (bv2int %0) 63)) 549755814866 := 9223372036838852384 >>l 23
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 549755813888 := 1099511627774&30786325577728
ramon: poll                 wall=1.000s usage=0.913s mem=30668KiB load=0.91 rootload=0.90
lshr: (lshr[63] (bv2int %0) (mod (bv2int %0) 63)) 1099511628222 := 9223372036854775633 >>l 22
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 1099511627776 := 2199023255550&61572651155456
(sat.stats   1065  35113   98 47064/47059  1770/1213 333       0    30.19   1.17)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 14452 :time 0.00)
ramon: poll                 wall=2.000s usage=1.912s mem=32108KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.912s mem=32444KiB load=1.00 rootload=1.00
(sat.stats   1599  59320  240 56241/56233  2367/1496 356       0    32.16   3.25)
ramon: poll                 wall=4.000s usage=3.912s mem=32572KiB load=1.00 rootload=1.00
lshr: (lshr[63] (bv2int %0) (mod (bv2int %0) 63)) 7 := 33554332 >>l 28
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 0&962072674304
lshr: (lshr[64] (bv2int %0) (mod (+ #49 #331) 64)) 1 := 4194190 >>l 28
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 23969 :time 0.00)
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 2&962072674304
band: (band[63] (if (= #626 63) 516508834063867445248 (if #628 258254417031933722624 #752)) (lshr[64] (bv2int %0) (mod #755 64))) 2 := 962072674304&2
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 4&962072674304
band: (band[63] (if (= #626 63) 516508834063867445248 (if #628 258254417031933722624 #752)) (lshr[64] (bv2int %0) (mod #755 64))) 4 := 962072674304&4
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 8&962072674304
band: (band[63] (if (= #626 63) 516508834063867445248 (if #628 258254417031933722624 #752)) (lshr[64] (bv2int %0) (mod #755 64))) 8 := 962072674304&8
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 16&962072674304
band: (band[63] (if (= #626 63) 516508834063867445248 (if #628 258254417031933722624 #752)) (lshr[64] (bv2int %0) (mod #755 64))) 16 := 962072674304&16
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 32&962072674304
band: (band[63] (if (= #626 63) 516508834063867445248 (if #628 258254417031933722624 #752)) (lshr[64] (bv2int %0) (mod #755 64))) 32 := 962072674304&32
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 64&962072674304
band: (band[63] (if (= #626 63) 516508834063867445248 (if #628 258254417031933722624 #752)) (lshr[64] (bv2int %0) (mod #755 64))) 64 := 962072674304&64
ramon: poll                 wall=5.000s usage=4.911s mem=36972KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.911s mem=46932KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.910s mem=53076KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.002s usage=7.909s mem=57276KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.904s mem=68960KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.904s mem=71824KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.001s usage=10.908s mem=76960KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.903s mem=77216KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.903s mem=77600KiB load=1.00 rootload=0.99
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 191&962072674304
band: (band[63] (if (= #626 63) 516508834063867445248 (if #628 258254417031933722624 #752)) (lshr[64] (bv2int %0) (mod #755 64))) 128 := 962072674304&191
ramon: poll                 wall=14.000s usage=13.894s mem=79348KiB load=0.99 rootload=1.00
ramon: poll                 wall=15.000s usage=14.894s mem=79556KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.894s mem=81860KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.894s mem=84016KiB load=1.00 rootload=0.99
(sat.stats   3200 162159  281 271156/271146  8208/6009 370       0    83.63  17.04)
band: (band[63] (lshr[63] (bv2int %0) (mod #49 63)) (if (= #488 62) 129127208515966861312 (if #490 64563604257983430656 #612))) 0 := 257&962072674304
band: (band[63] (if (= #626 63) 516508834063867445248 (if #628 258254417031933722624 #752)) (lshr[64] (bv2int %0) (mod #755 64))) 256 := 962072674304&257
ramon: poll                 wall=18.000s usage=17.894s mem=87088KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.893s mem=87576KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.890s mem=89956KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:35:57 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.050s
ramon: group.total          19.988s
ramon: group.utime          19.932s
ramon: group.stime          0.056s
ramon: group.mempeak        90212KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.095s
ramon: loadavg              0.99
