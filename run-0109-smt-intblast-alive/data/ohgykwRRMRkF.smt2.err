ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:55:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40686 MiB
ramon: sys.mem.avail        61707 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ohgykwRRMRkF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3081389
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2561    231  1210/1069/105      97/17     3   16   19.04)
(smt.stats    1    202   3476    754  1723/1372/105     211/19     3   16   19.43)
(smt.stats    2    313   4647   1570  1777/1617/105     333/19     3   16   19.54)
(smt.stats    3    414   7334   3382  2361/2179/111     442/36     4   25   19.63)
(smt.stats    4    525   9921   5825  2729/2186/112     556/81     5   27   19.83)
(smt.stats    5    647  15674  11382  2742/2524/112     676/81     5   27   20.01)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  20245  15366  2754/2524/112     777/81     5   27   20.01)
ramon: poll                 wall=1.000s usage=0.951s mem=21176KiB load=0.95 rootload=0.94
(smt.stats    7    859  23901  18093  2809/2536/112     888/86     5   27   20.11)
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #746 #750) 64)) 1 := 7405568 >>l 44
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #746 #750) 64)) 1 := 7405568 >>l 44
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #746 #750) 64)) 1 := 7405568 >>l 44
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #746 #750) 64)) 1 := 7405568 >>l 44
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #746 #750) 64)) 1 := 7405568 >>l 44
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #746 #750) 64)) 1 := 7405568 >>l 44
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #746 #750) 64)) 1 := 7405568 >>l 44
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #746 #750) 64)) 1 := 7405568 >>l 44
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&1
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 63 #746 #750) 64)) 1 := 7405568 >>l 44
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&0
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #120))) 373 := 113 >>l 28
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&0
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #120))) 373 := 113 >>l 28
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&0
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #120))) 373 := 113 >>l 28
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&0
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #120))) 373 := 113 >>l 28
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737487831040&0
lshr: (lshr[47] (bv2int %0) (+ 47 (* 140737488355327 #120))) 373 := 113 >>l 28
(smt.stats    8    981  25417  20334  2868/2639/125    1005/94     6   28   20.20)
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&6160383
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&6160382
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&6160383
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&6160382
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&6160382
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&6160380
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&6160382
(smt.stats    9   1115  29379  24040  2911/2674/137    1152/100     8   33   20.41)
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&6160382
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&6160380
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&8
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&2
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&4
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&8
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&16
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&32
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&32
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&64
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&128
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&32
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&64
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&128
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&256
(smt.stats   10   1216  29873  24695  3110/2691/143    1313/110     8   33   20.80)
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 2 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 2 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 6 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 6 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 0 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 2 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 6 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 262 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 256 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 2 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 4 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 6 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 263 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 262 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 262 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 4 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 6 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 263 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 262 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 1798 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 2822 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 2822 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 4100 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 4102 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 4358 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 3071 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 3070 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 3062 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 3046 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 2822 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 3062 := 140737488355327&4870
band: (band[47] (if (= #614 63) 1298074214633697683760587227529216 (if #616 649037107316848841880293613764608 #740)) (lshr[64] (* 65536 #118) (mod #753 64))) 3046 := 140737488355327&4870
(smt.stats   11   1327  30994  30408  3291/2985/290    1640/193     9   64   20.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  33599  37568  3467/3230/302    1939/273    11   73   21.18)
(smt.stats   13   1583  35508  41312  3650/3253/303    2430/286    12   77   21.28)
ramon: poll                 wall=2.000s usage=1.949s mem=22680KiB load=1.00 rootload=0.99
(smt.stats   14   1730  38949  47664  3926/3469/304    2709/459    13   85   21.47)
(smt.stats   15   1831  40072  48679  4129/3784/304    2832/521    14   85   21.66)
(smt.stats   16   1942  42504  55342  4354/3978/304    3060/528    14   85   21.66)
ramon: poll                 wall=3.000s usage=2.946s mem=23156KiB load=1.00 rootload=1.00
(smt.stats   17   2064  47421  72722  4386/4151/310    3416/799    16   93   21.79)
(smt.stats   18   2198  53662  97099  4420/4161/313    3627/805    16   93   21.79)
(smt.stats   19   2345  63375 133223  4428/4193/313    3832/864    17  117   22.09)
(smt.stats   20   2506  69891 156120  4439/4204/313    4112/864    17  117   22.19)
(smt.stats   21   2607  74465 174739  4447/4207/313    4227/867    17  117   22.19)
(smt.stats   22   2718  78040 180735  4476/4228/313    4355/870    17  117   22.29)
ramon: poll                 wall=4.000s usage=3.946s mem=23644KiB load=1.00 rootload=1.00
(smt.stats   23   2840  80598 187597  4651/4256/313    4513/876    17  117   22.29)
(smt.stats   24   2974  82600 194843  5070/4495/313    4694/880    17  117   22.48)
(smt.stats   25   3121  86940 204151  5232/4997/314    4902/1097    18  117   22.57)
ramon: poll                 wall=5.000s usage=4.946s mem=23976KiB load=1.00 rootload=1.00
(smt.stats   26   3282  92222 234258  5293/5028/314    5122/1102    18  117   22.67)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3459 100057 266105  5327/5092/314    5418/1102    18  117   22.76)
(smt.stats   28   3560 103149 280058  5348/5095/314    5572/1108    18  117   22.76)
(smt.stats   29   3671 106925 295958  5377/5137/315    5700/1237    19  119   23.15)
(smt.stats   30   3793 108485 303151  5676/5179/315    5837/1240    19  119   23.34)
ramon: poll                 wall=6.000s usage=5.945s mem=24684KiB load=1.00 rootload=1.00
(smt.stats   31   3927 110986 315139  5999/5545/315    6018/1244    19  119   23.34)
(smt.stats   32   4074 114984 334047  6075/5811/315    6255/1246    19  119   23.44)
ramon: poll                 wall=7.000s usage=6.945s mem=25156KiB load=1.00 rootload=0.99
(smt.stats   33   4235 118681 347586  6333/5873/315    6483/1250    19  119   23.53)
(smt.stats   34   4412 125360 364583  6477/6129/315    6720/1252    19  119   23.63)
(smt.stats   35   4606 132671 399954  6503/6267/317    7133/1457    20  125   23.63)
(smt.stats   36   4707 138134 421596  6511/6275/317    7236/1575    21  131   23.63)
ramon: poll                 wall=8.000s usage=7.945s mem=25164KiB load=1.00 rootload=1.00
(smt.stats   37   4818 143108 441258  6556/6290/318    7381/1599    22  132   23.72)
(smt.stats   38   4940 147491 460387  6600/6364/320    7665/1646    23  137   23.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
(smt.stats   39   5074 152244 478312  6754/6518/323    7934/1804    24  166   23.92)
(smt.stats   40   5221 158414 502042  6874/6522/323    8137/1810    24  166   24.01)
ramon: poll                 wall=9.000s usage=8.945s mem=25536KiB load=1.00 rootload=1.00
(smt.stats   41   5382 164307 527013  7168/6756/325    8416/1832    25  178   24.11)
(smt.stats   42   5559 170053 553444  7257/6975/327    8848/1849    26  201   24.20)
(smt.stats   43   5753 177162 590237  7273/7021/327    9217/1882    27  209   24.20)
ramon: poll                 wall=10.000s usage=9.944s mem=25824KiB load=1.00 rootload=1.00
(smt.stats   44   5966 184268 620730  7428/7028/328    9616/1935    28  213   24.39)
(smt.stats   45   6067 187390 631559  7536/7187/328    9792/1942    28  213   24.39)
ramon: poll                 wall=11.000s usage=10.944s mem=25988KiB load=1.00 rootload=1.00
(smt.stats   46   6178 190707 642364  7769/7316/328    9970/1948    28  213   24.49)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6300 193699 649942  8136/7616/328   10164/1951    28  213   24.58)
ramon: poll                 wall=12.003s usage=11.942s mem=26160KiB load=1.00 rootload=1.00
(smt.stats   48   6434 194902 655896  8446/7960/328   10381/1956    28  213   24.68)
(smt.stats   49   6581 200879 685156  8644/8333/328   10716/1959    28  213   24.78)
ramon: poll                 wall=13.000s usage=12.939s mem=26384KiB load=1.00 rootload=1.00
(smt.stats   50   6742 206355 708422  8783/8421/328   11072/1962    28  213   24.87)
(smt.stats   51   6919 211289 733771  8947/8566/328   11570/1966    28  213   24.97)
(smt.stats   52   7113 217613 762347  9046/8720/330   12083/2366    29  221   25.16)
ramon: poll                 wall=14.000s usage=13.938s mem=26808KiB load=1.00 rootload=1.00
(smt.stats   53   7326 223386 788144  9250/8835/330   12758/2371    29  221   25.25)
(smt.stats   54   7560 230138 822211  9359/9032/330   13294/2375    29  221   25.35)
(smt.stats   55   7661 233404 830221  9411/9155/330   13448/2376    29  221   25.35)
(smt.stats   56   7772 238428 858919  9424/9172/330   13888/2376    29  221   25.44)
ramon: poll                 wall=15.000s usage=14.938s mem=27020KiB load=1.00 rootload=1.00
(smt.stats   57   7894 242275 886708  9438/9186/331   14767/2902    30  234   25.54)
(smt.stats   58   8028 246964 919330  9441/9189/331   15156/2902    30  234   26.34)
(smt.stats   59   8175 255711 980010  9453/9190/331   15484/2903    30  234   26.34)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   60   8336 261284 1002114  9580/9213/331   15707/2904    30  234   26.44)
(smt.stats   61   8513 264414 1025850  9751/9499/334   16478/3164    31  235   26.69)
(smt.stats   62   8707 271894 1088034  9769/9509/334   16850/3164    31  235   26.78)
ramon: poll                 wall=16.000s usage=15.938s mem=28396KiB load=1.00 rootload=1.00
(smt.stats   63   8920 281006 1151236  9934/9529/334   17255/3388    32  238   26.97)
(smt.stats   64   9154 285993 1192176 10148/9697/334   18221/3395    32  238   27.16)
ramon: poll                 wall=17.000s usage=16.937s mem=28888KiB load=1.00 rootload=1.00
(smt.stats   65   9411 296243 1277780 10201/9949/335   19190/3700    33  253   27.26)
(smt.stats   66   9512 300522 1310489 10204/9952/335   19810/3700    33  253   27.26)
(smt.stats   67   9623 305879 1357829 10210/9958/335   19986/3700    33  253   27.35)
(smt.stats   68   9745 309573 1397143 10215/9963/336   20152/3845    34  283   27.35)
(smt.stats   69   9879 314729 1467569 10219/9967/336   20283/3845    34  283   27.35)
(smt.delete-inactive-clauses  :num-deleted-clauses 220)
(smt.stats   70  10026 319447 1501664 10225/9973/336   20336/3845    34  283   27.45)
ramon: poll                 wall=18.000s usage=17.937s mem=29000KiB load=1.00 rootload=1.00
(smt.stats   71  10187 326631 1577036 10229/9977/336   20542/3845    34  283   27.45)
(smt.stats   72  10364 335828 1651816 10230/9978/336   21146/3845    34  283   27.45)
(smt.stats   73  10558 344773 1728540 10236/9984/336   21663/3845    34  283   27.45)
(smt.stats   74  10771 356301 1835294 10240/9988/336   22006/3845    34  283   27.54)
ramon: poll                 wall=19.000s usage=18.937s mem=29164KiB load=1.00 rootload=1.00
(smt.stats   75  11005 364863 1922200 10244/9992/336   22383/3845    34  283   27.54)
(smt.stats   76  11262 374782 2017270 10247/9995/336   22668/3845    34  283   27.64)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   77  11544 383832 2111160 10255/10003/340   23425/4178    35  322   27.74)
(smt.stats   78  11645 388030 2149133 10340/10069/340   23646/4178    35  322   27.83)
(smt.stats   79  11756 394285 2210581 10341/10070/340   23801/4217    36  345   27.83)
ramon: poll                 wall=20.000s usage=19.937s mem=29564KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:55:38 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.990s
ramon: group.utime          19.970s
ramon: group.stime          0.020s
ramon: group.mempeak        29824KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              1.00
