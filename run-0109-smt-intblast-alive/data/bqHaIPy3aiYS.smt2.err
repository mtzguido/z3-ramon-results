ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:36:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41130 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1258
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/bqHaIPy3aiYS.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3019967
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5769   3693  1338/1182/96      89/7     5   17   19.28)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2 := 17592186044416&17592186044446
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 17592186044416&17592186044446
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 17592186044416&17592186044446
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 17592186044416&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 4611686018427387904 := 4611686018427387883 << 45
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&17592186044446
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 17592186044446 := 17592186044445 << 45
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&17592186568718
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 17592186568718 := 17592186568717 << 45
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&17592187093052
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 17592187093052 := 17592187093051 << 45
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&17592187093114
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 17592187093114 := 17592187093113 << 45
(smt.stats    1    202   8915   5054  2425/2175/110     180/9     8   20   19.66)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044415 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044415 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044414 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044412 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044408 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 16 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 32 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 128 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 256 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 512 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1024 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2048 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4096 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8192 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 16384 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 32768 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 65536 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 131072 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 262144 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 524288 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1048576 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2097152 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 262144 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 524288 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1048576 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1048576 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2097152 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4194304 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8388608 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 16777216 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 33554432 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 67108864 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 134217728 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 268435456 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 536870912 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1073741824 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2147483648 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 33554432 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 67108864 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 134217728 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 268435456 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 536870912 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1073741824 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2147483648 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4294967296 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8589934592 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17179869184 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 34359738368 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 68719476736 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 137438953472 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 274877906944 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 549755813888 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 274877906944 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 549755813888 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1099511627776 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2199023255552 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4398046511104 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8796093022208 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4194304 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8388608 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8388608 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 16777216 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 33554432 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 33554432 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 33554432 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 134217728 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 134217728 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 134217728 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 67108864 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 67108864 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 67108864 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 268435456 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 536870912 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1073741824 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 805306368 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 536870912 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 536870912 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 536870912 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1073741824 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1073741824 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 268435456 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 268435456 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 268435456 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2147483648 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2147483648 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2147483648 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4294967296 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4294967296 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4294967296 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17179869184 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17179869184 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17179869184 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17179869184 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8589934592 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8589934592 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8589934592 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 34359738368 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 549755813888 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1099511627776 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2199023255552 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2199023255552 := 17592186044416&457396837154816
(smt.stats    2    313  10829  10069  2685/2393/329     312/53    10   67   20.78)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2199023255552 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 549755813888 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4398046511104 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4398046511104 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&457396837154816
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17592186044416 := 17592186044416&457396837154816
(smt.stats    3    414  11447  12259  2688/2442/391     446/67    12   80   20.87)
(smt.stats    4    525  13711  13815  2881/2619/400     458/79    15  137   21.17)
(smt.stats    5    647  18584  17717  2910/2646/401     550/77    16  141   21.31)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&64
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 64 := 17592186568617 << 7
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&64
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 64 := 17592186568617 << 7
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&17592186044415
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 17592186044415 := 17592186568617 << 7
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&17592186044415
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 17592186044415 := 17592186568617 << 7
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&64
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 64 := 17592186044469 << 7
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&17592186044415
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 17592186044415 := 17592186044469 << 7
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&2759749113389618048
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 47 := 64&145258680169277312
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 32 := 64&145258680169277312
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&145258680169277312
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 46 := 64&145258680169277312
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 44 := 64&145258680169277312
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 32 := 64&145258680169277312
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 32 := 64&145258680169277312
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 32 := 64&145276272354781568
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 32 := 64&145258680169277312
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&2759749113389618048
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 64 := 64&4611686018427383168
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748  24103  20766  2951/2662/407     653/86    17  142   21.89)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 24 := 64&4357498600088877696
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 16 := 64&4357498600088877696
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 16 := 64&4357498600088877696
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 16 := 64&4357498600088877696
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 16 := 64&4357498600088877696
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 16 := 64&4611686018427386240
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8 := 64&4611686018427386240
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 64&4611686018427386240
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 4611686018427387903 := 4071254063142928371 << 7
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2 := 64&4357498600088878208
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 64&4357531706659564928
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 4357531706659564929 := 4069268482582242267 << 7
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2 := 64&4357531706659565440
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 2 := 64&4357531706659565440
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8 := 64&4357531706659565440
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8 := 64&4357531706659565440
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8 := 64&4357531706659565440
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 8 := 64&4357531706659565440
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4 := 64&4357531706659565440
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4 := 64&4357531706659565440
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4 := 64&4357531706659565440
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 4 := 64&4357531706659565440
(smt.stats    7    859  27505  22679  3103/2763/438     811/101    18  151   21.98)
(smt.stats    8    981  30708  27099  3161/2896/482     875/134    21  207   21.98)
(smt.stats    9   1115  34942  33235  3194/2928/486    1007/136    21  207   22.18)
(smt.stats   10   1216  40815  39526  3388/3077/488    1112/155    22  228   22.27)
ramon: poll                 wall=1.000s usage=0.921s mem=24332KiB load=0.92 rootload=0.87
(smt.stats   11   1327  46827  45279  3498/3173/492    1237/187    24  234   22.66)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  48945  49826  3783/3472/497    1357/195    25  239   22.77)
(smt.stats   13   1583  52560  53257  3795/3485/503    1474/190    26  253   22.77)
(smt.stats   14   1730  60334  60469  3818/3504/503    1609/190    26  253   22.77)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&4357549298879156608
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13580921335733932416 := 3276635085604250531 << 3
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&4357549298829755008
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13580921335684530816 := 3276635085603864581 << 3
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&4357549298829755008
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13580921335684530816 := 3276635085603864581 << 3
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&4357549298829755008
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13580921335684530816 := 3276635085603864581 << 3
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&4357549298829755008
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13580921335684530816 := 3276635085603864581 << 3
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&4357549298829762944
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13580921335684538752 := 3276635085603864643 << 3
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&4357549298829762944
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13580921335684538752 := 3276635085603864643 << 3
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&4357549298829755008
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13580921335684530816 := 3276635085603864581 << 3
(smt.stats   15   1831  65879  65606  3881/3512/503    1710/200    27  258   22.87)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&3631238305799995688
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 457397827012221 := 453904788224999461 << 3
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&3631238305799995688
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 457397827012221 := 453904788224999461 << 3
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&3631273490172084488
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1 := 3631273490172084488&4
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&3631273490172084488
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 2 := 3631273490172084488&4
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&3631273490172084488
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 4 := 3631273490172084488&4
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&3631273490172084488
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 4 := 3631273490172084488&4
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&3631273490172084488
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1 := 3631273490172084488&4
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4&3631273490172084488
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 2 := 3631273490172084488&4
(smt.stats   16   1942  68211  73089  3943/3620/534    1823/207    29  266   22.97)
(smt.stats   17   2064  70939  77885  3975/3654/540    1948/207    29  266   22.97)
(smt.stats   18   2198  77003  85034  3984/3660/540    2099/219    30  268   23.08)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 1 := 1&4611686018427385728
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 1&4611686018427385728
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 18446744073709549440 := 2882303761517117423 << 1
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 1&4611686018427385728
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 18446744073709549440 := 2882303761517117423 << 1
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 1&4611686018427387648
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 18446744073709551360 := 2882303761517117423 << 1
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 1&4611686018427385856
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 18446744073709549568 := 2882303761517117423 << 1
(smt.stats   19   2345  84683  95428  4041/3705/551    2262/236    31  272   23.20)
(smt.stats   20   2506  91624 105492  4051/3729/553    2437/244    32  279   23.20)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&580999536302882817
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 580999536302882817 := 2882303761517117452 << 30
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&580999536302882817
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 580999536302882817 := 2882303761517117452 << 30
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&580999536302882817
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 580999536302882817 := 2882303761517117452 << 30
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&580999536302882816
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 580999536302882816 := 2882303761517117452 << 30
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&580999536302882816
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 580999536302882816 := 2882303761517117452 << 30
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 48 := 2882303761517117452 << 30
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 0 := 2882303761517117452 << 30
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 0 := 2882303761517117452 << 30
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 536870912 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 536870904 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 536870896 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 32 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 64 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 128 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 256 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 512 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1024 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 2048 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 4096 := 12884901888&536870912
(smt.stats   21   2607  94947 113077  4207/3774/561    2554/275    33  281   23.53)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1152 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1536 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1536 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1536 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1152 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1536 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1536 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1280 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1280 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1280 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1280 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 1280 := 12884901888&536870912
(smt.stats   22   2718  99698 125023  4207/3870/634    2709/279    34  293   23.63)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 3072 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 3072 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 3072 := 12884901888&536870912
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 536870912&12884901888
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 2048 := 12884901888&536870912
ramon: poll                 wall=2.000s usage=1.921s mem=25020KiB load=1.00 rootload=1.00
(smt.stats   23   2840 103568 134846  4267/3884/635    2846/311    35  303   23.73)
(smt.stats   24   2974 107277 142791  4278/3946/646    2990/314    36  305   23.73)
(smt.stats   25   3121 116986 159813  4285/3949/647    3146/326    37  308   23.73)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&35184372088833
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13835093239654252545 := 2882303761517117475 << 53
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&35184372088833
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13835093239654252545 := 2882303761517117475 << 53
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&35184372088833
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 13835093239654252545 := 2882303761517117475 << 53
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&3631238305799995393
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 17466296361082159105 := 2882303761517117475 << 53
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&3631238305799995393
shl: (shl[64] (bv2int %0) (mod (+ #110 #915) 64)) 17466296361082159105 := 2882303761517117475 << 53
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 280 := 2882303761517117475 << 53
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 278 := 2882303761517117475 << 53
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
shl: (shl[62] (bv2int %0) (mod (bv2int %0) 62)) 278 := 2882303761517117475 << 53
(smt.stats   26   3282 124513 175165  4346/3959/647    3371/340    38  309   23.84)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 2048 := 315251973915934720&4503599627370496
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 2048 := 315251973915934720&4503599627370496
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 2048 := 315251973915934720&4503599627370496
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 2048 := 315251973915934720&4503599627370496
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 512 := 315251973915934720&4503599627370496
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 544 := 315251973915934720&4503599627370496
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 0 := 4503599627370496&315251973915934720
band: (band[62] (shl[62] (bv2int %0) (mod #110 62)) (if (= #646 61) 1 (if #648 2 #768))) 512 := 315251973915934720&4503599627370496
(smt.stats   27   3459 127383 182893  4611/4268/666    3900/372    39  311   24.34)
(smt.stats   28   3560 133352 190058  4628/4283/671    4115/525    40  329   24.44)
(smt.stats   29   3671 138874 198323  4793/4307/671    4329/534    40  329   24.75)
ramon: poll                 wall=3.000s usage=2.921s mem=26192KiB load=1.00 rootload=0.99
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17979214145781760 := 18014398509481984&3068253168048538114
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17979214145781760 := 18014398509481984&3068253168048538114
(smt.stats   30   3793 147561 222026  4946/4477/671    4667/542    40  329   24.84)
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17944029782081536 := 18014398509481984&3068217983651283458
band: (band[62] (if (or #784 #785 #786) 0 (if #787 1 #907)) (shl[64] (bv2int %0) (mod #916 64))) 17944029782081536 := 18014398509481984&3068217983651283458
(smt.stats   31   3927 155054 243350  5083/4631/671    5109/546    40  329   24.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 163112 254628  5218/4750/671    5587/548    40  329   25.16)
ramon: poll                 wall=4.000s usage=3.920s mem=26628KiB load=1.00 rootload=1.00
(smt.stats   33   4235 171384 274585  5574/4988/672    6013/805    41  330   25.26)
(smt.stats   34   4412 178235 293386  5935/5285/672    6457/807    41  330   25.45)
(smt.stats   35   4606 186699 313367  5994/5620/673    7276/1029    42  334   25.66)
(smt.stats   36   4707 193998 330677  6031/5683/673    7558/1031    42  334   25.66)
(smt.stats   37   4818 201901 344361  6060/5693/674    7802/1232    43  342   25.76)
(smt.stats   38   4940 204347 356593  6254/5762/674    8206/1234    43  342   25.85)
ramon: poll                 wall=5.003s usage=4.922s mem=27340KiB load=1.00 rootload=1.01
(smt.delete-inactive-clauses  :num-deleted-clauses 73)
(smt.stats   39   5074 209829 366655  6277/5934/678    8469/1401    44  354   25.95)
(smt.stats   40   5221 218734 392035  6315/5942/683    8749/1547    45  394   25.95)
(smt.stats   41   5382 223869 398742  6643/5974/683    9029/1548    45  394   26.14)
(smt.stats   42   5559 230632 419684  6846/6316/683    9835/1557    45  394   26.33)
ramon: poll                 wall=6.000s usage=5.919s mem=27944KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5753 244603 497001  6880/6537/685   11141/1747    46  410   26.42)
(smt.stats   44   5966 256529 539923  7092/6749/687   11865/2445    48  414   26.61)
(smt.stats   45   6067 262964 557853  7111/6763/688   12244/2445    48  414   26.85)
ramon: poll                 wall=7.000s usage=6.919s mem=28516KiB load=1.00 rootload=1.00
(smt.stats   46   6178 269394 579035  7251/6779/688   12487/2668    49  422   26.95)
(smt.stats   47   6300 277956 611458  7488/6961/688   12939/2671    49  422   27.05)
(smt.stats   48   6434 285400 641719  7651/7159/688   13363/2675    49  422   27.14)
ramon: poll                 wall=8.000s usage=7.919s mem=28768KiB load=1.00 rootload=1.00
(smt.stats   49   6581 295883 672764  7794/7363/688   14057/2679    49  422   27.34)
(smt.stats   50   6742 305890 712803  8154/7544/688   14586/2691    49  422   27.43)
ramon: poll                 wall=9.000s usage=8.919s mem=29036KiB load=1.00 rootload=1.00
(smt.stats   51   6919 318173 770058  8570/8227/689   15132/3397    50  424   27.62)
(smt.stats   52   7113 331301 810273  8593/8247/690   15576/3397    50  424   27.72)
(smt.stats   53   7326 345155 861657  8623/8251/690   15869/3631    51  434   27.72)
ramon: poll                 wall=10.000s usage=9.918s mem=29280KiB load=1.00 rootload=1.00
(smt.stats   54   7560 353993 891899  8873/8530/692   16295/3739    52  446   28.01)
(smt.stats   55   7661 362883 927563  8889/8546/692   16573/3739    52  446   28.01)
(smt.stats   56   7772 371202 958198  8892/8549/692   16800/3860    53  449   28.01)
(smt.stats   57   7894 375585 980423  8926/8559/693   17006/3882    54  452   28.10)
ramon: poll                 wall=11.000s usage=10.918s mem=29644KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8028 386324 1014056  8941/8598/693   17334/3882    54  452   28.10)
(smt.stats   59   8175 407073 1102583  8950/8607/693   17564/3882    54  452   28.10)
(smt.stats   60   8336 427721 1201952  8959/8616/695   17891/4205    55  460   28.10)
(smt.stats   61   8513 437999 1254184  8983/8640/695   18596/4205    55  460   28.22)
(smt.stats   62   8707 453797 1326263  8987/8644/695   18806/4616    56  475   28.22)
ramon: poll                 wall=12.000s usage=11.918s mem=29744KiB load=1.00 rootload=1.00
(smt.stats   63   8920 464524 1416080  9003/8660/699   19255/4734    58  502   28.73)
(smt.stats   64   9154 479833 1486402  9058/8661/699   19603/4738    58  502   28.92)
ramon: poll                 wall=13.000s usage=12.917s mem=30832KiB load=1.00 rootload=1.00
(smt.stats   65   9411 488763 1547713  9665/8768/699   20236/4754    58  502   29.01)
(smt.stats   66   9512 491378 1566742  9694/9351/699   20773/4754    58  502   29.01)
(smt.stats   67   9623 498247 1626403  9702/9359/701   21043/5095    59  508   29.12)
(smt.stats   68   9745 506343 1667900  9708/9365/702   21286/5095    59  508   29.12)
(smt.stats   69   9879 512663 1714714  9723/9380/702   21928/5229    60  513   29.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 354)
ramon: poll                 wall=14.000s usage=13.917s mem=30856KiB load=1.00 rootload=1.00
(smt.stats   70  10026 520356 1759666  9729/9386/704   22177/5626    61  517   29.24)
(smt.stats   71  10187 533656 1816705  9748/9399/704   22674/5626    61  517   29.24)
(smt.stats   72  10364 541543 1850976  9828/9417/704   23006/5846    62  521   29.43)
(smt.stats   73  10558 551013 1888181  9935/9569/704   23609/5846    62  521   29.53)
ramon: poll                 wall=15.000s usage=14.917s mem=31120KiB load=1.00 rootload=1.00
(smt.stats   74  10771 569690 1945792  9997/9586/704   23892/5850    62  521   29.53)
(smt.stats   75  11005 577912 1986268 10195/9818/709   24410/5999    63  521   29.72)
ramon: poll                 wall=16.000s usage=15.917s mem=31340KiB load=1.00 rootload=1.00
(smt.stats   76  11262 588282 2026330 10619/9832/709   24895/6008    63  521   29.81)
ramon: poll                 wall=17.000s usage=16.916s mem=31744KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   77  11544 600818 2090302 11007/10356/709   25991/6019    63  521   30.10)
(smt.stats   78  11645 607240 2119376 11135/10672/709   26327/6020    63  521   30.29)
ramon: poll                 wall=18.000s usage=17.900s mem=32192KiB load=0.98 rootload=0.98
(smt.stats   79  11756 610486 2128241 11295/10792/709   26528/6031    63  521   30.38)
ramon: poll                 wall=19.000s usage=18.899s mem=32440KiB load=1.00 rootload=1.00
(smt.stats   80  11878 617903 2167648 11466/11039/709   26991/6036    63  521   30.48)
(smt.stats   81  12012 625639 2203698 11517/11120/710   28253/6442    64  524   30.73)
ramon: poll                 wall=20.000s usage=19.899s mem=32720KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:36:23 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.050s
ramon: group.total          19.964s
ramon: group.utime          19.908s
ramon: group.stime          0.056s
ramon: group.mempeak        32980KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
