ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:16:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         43418 MiB
ramon: sys.mem.avail        61717 MiB
ramon: sys.nprocs           1358
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0HcfegK33Ayj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2749919
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5187    902  1267/1140/89     101/9     2   13   19.08)
(smt.stats    1    202   7359   4193  2074/1869/91     196/9     3   15   19.27)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&117
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&118
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&117
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&118
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&117
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&118
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&117
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&118
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&120
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&120
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&128
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 128 := 116 << 57
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&233
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&240
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&240
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&240
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 288230376151711936 := 232 << 57
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 288230376151711936 := 232 << 57
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 288230376151711936 := 232 << 57
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 288230376151711936 := 232 << 57
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 288230376151711936 := 232 << 57
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 233 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 8 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 8 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 111 := 122015136561838125&234
(smt.stats    2    314   8756   5843  2265/2038/142     303/16     7   28   19.68)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 95 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 94 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 92 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 88 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 64 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 72 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 32 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 32 := 122015136561838125&234
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 40 := 122015136561838125&234
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 288230376151711978 := 232 << 57
(smt.stats    3    415   9759   6982  2598/2339/161     386/22     9   39   19.78)
(smt.stats    4    526  10857   7842  2651/2389/164     509/35    11   45   19.89)
(smt.stats    5    648  15578  11276  2670/2394/164     648/36    11   45   20.00)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  18007  13353  2705/2443/165     774/47    12   50   20.09)
(smt.stats    7    860  19956  15526  2707/2445/165     924/47    12   50   20.09)
(smt.stats    8    982  21313  17067  2711/2447/166    1053/57    13   53   20.19)
(smt.stats    9   1116  22609  19457  2723/2463/179    1147/78    15  117   20.19)
(smt.stats   10   1217  24416  22113  2732/2463/179    1256/78    15  117   20.19)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&1154
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 56 := 144115188075856449 << 1
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&1154
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 56 := 144115188075856449 << 1
(smt.stats   11   1328  26038  24019  2759/2474/179    1389/92    16  122   20.28)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&1154
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 56 := 144115188075856449 << 1
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&1154
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 1 := 144115188075856449 << 1
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 0&1154
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 56 := 144115188075856449 << 1
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   12   1450  27234  27103  2825/2528/184    1551/97    16  122   20.28)
(smt.stats   13   1584  30142  31057  2844/2578/187    1712/102    17  123   20.38)
(smt.stats   14   1731  34059  37786  2853/2580/187    1867/115    18  129   20.48)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 61007568280919008 := 61007568280919062&61007568280920329
ramon: poll                 wall=1.000s usage=0.996s mem=21928KiB load=1.00 rootload=0.98
(smt.stats   15   1832  34697  38979  2988/2595/187    1989/116    18  129   20.57)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 128 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 128 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 132 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 516 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 1028 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 1028 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 1028 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 2052 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 4100 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 8196 := 61007568280919062&61007568280920269
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 16388 := 61007568280919062&61007568280920269
(smt.stats   16   1943  35575  40138  3172/2906/242    2151/137    19  142   20.96)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 256 := 61007568280919062&220031224088764623
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 256 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 256 := 61007568280919062&220031224088772623
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 258 := 61007568280919062&220031224088772623
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 262 := 61007568280919062&220031224088772623
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 279 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 278 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 278 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 278 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 270 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 262 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 206 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 198 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 134 := 61007568280919062&220031224088764431
(smt.stats   17   2065  37246  43812  3262/2975/261    2320/211    20  167   21.06)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 70 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224088764431
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224088887439
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224088887439
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224092033167
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224092033167
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224092033167
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224092033167
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224092033167
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089936015
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089936015
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089690255
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089690255
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089534607
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089534607
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089534607
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089501839
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089501839
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089501839
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 6 := 61007568280919062&220031224089501839
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 524294 := 61007568280919062&220031224089501839
(smt.stats   18   2199  39878  52596  3569/2999/281    2644/220    20  167   21.27)
(smt.stats   19   2346  41017  55197  3815/3300/376    2928/257    21  190   21.75)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 20979718 := 61007568280919062&220031224094154767
(smt.stats   20   2507  42527  58932  4076/3649/376    3358/261    21  190   21.85)
ramon: poll                 wall=2.000s usage=1.996s mem=23372KiB load=1.00 rootload=1.00
(smt.stats   21   2608  46705  70185  4157/3814/381    3613/404    22  191   21.95)
(smt.stats   22   2719  48734  76201  4345/3921/381    3850/469    23  191   22.15)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 20972546 := 61007568280919062&220031224137383936
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 20972545 := 61007568280919062&220031224137383936
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 20972544 := 61007568280919062&220031224137383936
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 20972544 := 61007568280919062&220031224137383936
(smt.stats   23   2841  50409  79299  4571/4122/382    4098/472    23  191   22.34)
(smt.stats   24   2975  52020  83714  4834/4360/382    4368/530    24  195   22.53)
(smt.stats   25   3122  61933  94942  4847/4583/383    4637/634    25  197   22.63)
ramon: poll                 wall=3.000s usage=2.996s mem=24140KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   26   3283  67877 108645  5060/4587/383    5138/641    25  197   22.72)
(smt.stats   27   3460  72605 121995  5237/4842/383    5568/641    25  197   22.72)
(smt.stats   28   3561  76698 140274  5253/4989/383    5924/641    25  197   22.85)
(smt.stats   29   3672  83687 173280  5258/4994/384    6418/862    26  202   22.85)
(smt.stats   30   3794  88311 192912  5315/4998/384    6928/866    26  202   22.96)
(smt.stats   31   3928  89221 198241  5484/5063/384    7336/867    26  202   23.05)
(smt.stats   32   4075  95310 216654  5499/5235/385    7614/1363    27  207   23.05)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   33   4236 105661 253796  5504/5240/385    8288/1363    27  207   23.16)
ramon: poll                 wall=4.000s usage=3.996s mem=24908KiB load=1.00 rootload=1.00
(smt.stats   34   4413 116199 304000  5581/5249/385    9002/1364    27  207   23.36)
(smt.stats   35   4607 122211 320553  5599/5335/386    9718/1829    28  208   23.36)
(smt.stats   36   4708 129107 343066  5600/5336/386    9819/1829    28  208   23.36)
(smt.stats   37   4819 134520 365358  5615/5343/386   10045/1829    28  208   23.46)
(smt.stats   38   4941 138363 377645  5620/5356/386   10333/1829    28  208   23.46)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 140893 389011  5702/5357/386   10680/1832    28  208   23.57)
ramon: poll                 wall=5.000s usage=4.996s mem=25164KiB load=1.00 rootload=0.99
(smt.stats   40   5222 143465 405469  6326/6062/387   10974/2087    29  210   23.66)
(smt.stats   41   5383 148842 423158  6453/6077/387   11719/2096    29  210   23.86)
(smt.stats   42   5560 155920 437762  6548/6226/387   12068/2101    29  210   23.86)
(smt.stats   43   5754 166475 483215  6648/6291/387   13556/2106    29  210   24.05)
ramon: poll                 wall=6.000s usage=5.996s mem=25676KiB load=1.00 rootload=1.00
(smt.stats   44   5967 173118 500583  6796/6391/387   14490/2115    29  210   24.15)
(smt.stats   45   6068 176610 526591  6813/6549/387   14700/2115    29  210   24.15)
(smt.stats   46   6179 183261 578506  6817/6553/387   14982/2115    29  210   24.15)
(smt.stats   47   6301 189763 627292  6826/6562/388   15457/3246    30  214   24.27)
(smt.stats   48   6435 195265 665610  6850/6586/388   15712/3246    30  214   24.27)
(smt.stats   49   6582 198570 676103  6857/6593/388   15961/3246    30  214   24.27)
(smt.stats   50   6743 204861 683815  6857/6593/388   16219/3246    30  214   24.27)
(smt.stats   51   6920 210797 729851  6871/6607/388   16610/3246    30  214   24.27)
ramon: poll                 wall=7.001s usage=7.000s mem=25932KiB load=1.00 rootload=1.01
(smt.stats   52   7114 214974 749771  7088/6613/395   16984/3474    31  225   24.40)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7327 218224 767233  7446/6864/395   17344/3476    31  225   24.59)
ramon: poll                 wall=8.000s usage=7.996s mem=26188KiB load=1.00 rootload=0.99
(smt.stats   54   7561 220584 773776  7691/7195/395   17653/3477    31  225   25.06)
ramon: poll                 wall=9.000s usage=8.995s mem=26700KiB load=1.00 rootload=1.00
(smt.stats   55   7662 221066 776040  8076/7774/395   17750/3564    32  265   25.06)
ramon: poll                 wall=10.000s usage=9.995s mem=26700KiB load=1.00 rootload=1.00
(smt.stats   56   7773 221446 777400  8486/8154/395   17910/3565    32  265   25.16)
(smt.stats   57   7895 223130 781366  9063/8474/395   18064/3566    32  265   25.16)
(smt.stats   58   8029 225880 786911  9139/8819/395   18491/3567    32  265   25.32)
ramon: poll                 wall=11.000s usage=10.995s mem=27212KiB load=1.00 rootload=1.00
(smt.stats   59   8176 228972 800421  9508/8912/395   18659/3570    32  265   25.52)
ramon: poll                 wall=12.000s usage=11.995s mem=27468KiB load=1.00 rootload=1.00
(smt.stats   60   8337 230046 803321  9684/9277/395   18836/3571    32  265   25.89)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   61   8514 234069 818560 10342/10010/395   19171/3572    32  265   25.97)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415581952 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415581952 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415581952 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415581952 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415581952 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415581952 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 82932163131938825 := 227047351207794688 << 56
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415581952 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 82932163131938825 := 227047351207794688 << 56
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415589376 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 82932163131938825 := 227047351207794688 << 56
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415581952 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 85791892894876307 := 227047351207794688 << 56
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 0 := 454094702415581952 << 55
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 30503784140459531&0
shl: (shl[58] (bv2int %0) (+ 58 (* 288230376151711743 #116))) 56717973636336526 := 199403296830721792 << 56
(smt.stats   62   8708 236975 829684 10560/10097/396   19662/3841    33  265   26.07)
ramon: poll                 wall=13.000s usage=12.995s mem=27724KiB load=1.00 rootload=1.00
(smt.stats   63   8921 239486 837930 10701/10369/406   19966/3841    33  265   26.29)
(smt.stats   64   9155 246083 857030 10879/10451/406   20692/3841    33  265   26.38)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 4100 := 61007568280919062&114689
(smt.stats   65   9412 251952 882613 11255/10657/406   21198/3980    34  267   26.48)
(smt.stats   66   9513 254142 894219 11355/11065/406   21549/3980    34  267   26.48)
(smt.stats   67   9624 256629 906513 11368/11078/406   21805/3980    34  267   26.58)
(smt.stats   68   9746 261713 937069 11388/11091/406   22110/3980    34  267   26.58)
ramon: poll                 wall=14.000s usage=13.995s mem=28236KiB load=1.00 rootload=1.00
(smt.stats   69   9880 266195 975068 11420/11130/406   22827/3980    34  267   26.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 83)
(smt.stats   70  10027 272288 989982 11436/11138/406   23238/3983    34  267   26.77)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   71  10188 284467 1041287 11438/11148/406   23499/3983    34  267   26.77)
(smt.stats   72  10365 295876 1089783 11450/11160/406   24158/3985    34  267   26.77)
(smt.stats   73  10559 302923 1117163 11464/11174/406   24486/3985    34  267   26.77)
ramon: poll                 wall=15.000s usage=14.995s mem=28492KiB load=1.00 rootload=1.00
(smt.stats   74  10772 314713 1176255 11529/11185/406   25154/3989    34  267   26.91)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 525 := 1733&220031224127946756
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 524 := 1733&220031224127946756
(smt.stats   75  11006 320365 1204218 11705/11414/415   25795/4585    35  274   27.00)
ramon: poll                 wall=16.000s usage=15.995s mem=29004KiB load=1.00 rootload=1.00
(smt.stats   76  11263 328299 1236512 11757/11426/415   26750/4585    35  274   27.29)
(smt.stats   77  11545 340969 1310588 11790/11500/416   28428/4854    36  290   27.48)
(smt.stats   78  11646 344082 1328824 11805/11512/416   28645/5165    37  291   27.48)
(smt.stats   79  11757 349931 1353521 11813/11517/416   28794/5167    37  291   27.48)
ramon: poll                 wall=17.000s usage=16.995s mem=29260KiB load=1.00 rootload=1.00
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 161 := 866&2097153
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 96 := 866&2097153
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 128 := 866&2097153
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 128 := 866&2097153
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 256 := 866&2097153
(smt.stats   80  11879 352815 1377146 11970/11547/416   29022/5175    37  291   27.58)
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 256 := 866&2097153
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 512 := 866&2097153
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 512 := 866&2097153
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 866&2097153
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 5188146770732908545 := 557830249508613030 << 10
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 866&2097153
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 5188146770732908545 := 557830249508613030 << 10
band: (band[58] (if (or #755 #756 #757 #758 #759 #760 #761) 0 (if #762 1 #874)) (shl[64] (* 2 #114) (mod #904 64))) 0 := 866&2097153
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 57 #901 #903) 64)) 5188146770732908545 := 557830249508613030 << 10
(smt.stats   81  12013 355621 1400141 12023/11732/434   29387/5272    38  293   27.79)
(smt.stats   82  12160 361323 1461769 12164/11840/434   29866/5272    38  293   27.79)
(smt.stats   83  12321 365403 1520601 12184/11861/436   30736/5415    39  326   27.88)
(smt.stats   84  12498 373259 1577733 12214/11885/442   31431/5493    40  345   27.98)
(smt.stats   85  12692 380703 1604650 12233/11900/444   32060/5493    40  345   28.10)
ramon: poll                 wall=18.000s usage=17.995s mem=29772KiB load=1.00 rootload=1.00
(smt.stats   86  12905 389395 1665197 12260/11931/452   32655/5621    41  463   28.20)
(smt.stats   87  13139 398872 1702501 12313/11947/455   33167/5628    41  463   28.30)
ramon: poll                 wall=19.000s usage=18.995s mem=30344KiB load=1.00 rootload=1.00
(smt.stats   88  13396 402609 1721275 12844/12010/455   33418/5715    42  501   28.78)
ramon: poll                 wall=20.000s usage=19.995s mem=30600KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:17:10 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.007s
ramon: group.utime          19.979s
ramon: group.stime          0.028s
ramon: group.mempeak        30856KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
