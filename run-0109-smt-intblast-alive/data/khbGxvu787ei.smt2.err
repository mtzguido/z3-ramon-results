ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:49:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40752 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/khbGxvu787ei.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3063835
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4723    449  1301/1160/110      94/19     8   18   19.24)
(smt.stats    1    202   6373   1656  1993/1778/110     204/57     8   18   19.43)
(smt.stats    2    313   8352   2881  2462/2190/113     309/68     9   21   19.53)
(smt.stats    3    414   9973   4323  2671/2423/114     418/75    11   23   19.63)
(smt.stats    4    525  12802   5824  2761/2513/121     530/88    14   34   19.74)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927933 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927932 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927932 := 72057594037927935&72057594037927933
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927932 := 72057594037927935&72057594037927933
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927928
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927927
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927934
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927765
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 72057594037927764 := 72057594037927935&72057594037927765
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927768
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927776
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927765
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 12 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 7 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 0 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 52 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 84 := 72057594037927935&72057594037927764
(smt.stats    5    648  14275   7222  2867/2615/199     670/98    16   52   20.14)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 32 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 36 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 52 := 72057594037927935&72057594037927764
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 52 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 55 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 54 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 54 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 87 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 84 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 86 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 86 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 212 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 150 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 150 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 150 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 150 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 534 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 215 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 214 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 214 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 598 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 598 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1879 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1878 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927763
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  15638  13040  3042/2788/265     834/139    17   66   20.23)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927762
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927767
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 72057594037927935&72057594037927766
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2390 := 562949953421311&72057594037927766
(smt.stats    7    860  18012  19193  3074/2820/278    1007/172    18   73   20.44)
(smt.stats    8    982  21589  24715  3109/2854/291    1146/212    22  136   20.54)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66592
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66592
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66592
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66592
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 160 := 72057594037927935&66720
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 152 := 72057594037927935&4256
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 152 := 72057594037927935&4264
(smt.stats    9   1116  22559  27030  3315/2902/313    1385/281    23  143   20.92)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 136 := 72057594037927935&32936
(smt.stats   10   1217  23817  29716  3465/3168/313    1522/327    24  147   20.92)
ramon: poll                 wall=1.000s usage=0.876s mem=22268KiB load=0.88 rootload=0.86
(smt.stats   11   1328  25849  34602  3551/3227/313    1722/328    24  147   21.11)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  29648  46544  3617/3362/321    2073/402    25  149   21.11)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 326 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 327 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 335 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 335 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&33231
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 207 := 72057594037927935&28879
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 207 := 72057594037927935&28879
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 207 := 72057594037927935&28879
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 463 := 72057594037927935&28879
(smt.stats   13   1586  32197  56847  3773/3476/342    2554/683    27  169   21.31)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 719 := 72057594037927935&28879
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 719 := 72057594037927935&17039
(smt.stats   14   1733  34069  64399  3987/3537/357    2928/696    27  169   21.31)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 143 := 72057594037927935&8335
(smt.stats   15   1834  35909  70344  4085/3778/373    3238/798    29  175   21.52)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 12435 := 18014398509481983&73874
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 12435 := 18014398509481983&73874
(smt.stats   16   1945  37430  75421  4232/3837/373    3589/806    29  175   21.74)
(smt.stats   17   2067  41144  83530  4328/4049/385    4141/946    30  176   21.74)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 9732 := 549755813887&13828
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 9732 := 549755813887&13828
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9367487224930645508 := 143833713099145698 << 38
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9367487224930645508 := 143833713099145698 << 38
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9367487224930645508 := 143833713099145698 << 38
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9295429630892717572 := 143833713099145698 << 38
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 13828 := 549755813887&13828
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9295429630892717572 := 143833713099145698 << 38
(smt.stats   18   2201  44619  96885  4438/4075/386    4715/1195    31  210   21.94)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 24576 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 65536 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 131072 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 262144 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 524288 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1048576 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2097152 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4194304 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 8388608 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16777216 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 33554432 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 67108864 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 134217728 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 268435456 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 536870912 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 536870912 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 1073741824 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 2147483648 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4294967296 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 8589934592 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 17179869184 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 34359738368 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 68719476736 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 137438953472 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 274877906944 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16384 := 549755813887&132491151147008
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   19   2348  47045 107453  4648/4390/504    5107/1633    33  241   22.63)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16384 := 549755813887&132491151147008
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16384 := 549755813887&132491151147008
ramon: poll                 wall=2.000s usage=1.875s mem=24216KiB load=1.00 rootload=0.99
(smt.stats   20   2509  50962 114284  4764/4408/509    5630/1635    33  241   22.73)
(smt.stats   21   2610  55503 131727  4781/4520/514    5951/1840    34  243   22.83)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 4099 := 72057594037927935&131075
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 32771 := 72057594037927935&131075
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 16387 := 72057594037927935&131075
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 65539 := 72057594037927935&131075
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 65539 := 72057594037927935&131075
(smt.stats   22   2721  57794 136300  5025/4570/514    6223/1958    35  243   22.83)
(smt.stats   23   2843  59904 146016  5137/4883/520    6497/2046    36  245   22.95)
band: (band[56] (if (= #403 63) 1 (if #603 3 #860)) (shl[64] (* 2 #107) (mod #875 64))) 65539 := 36028797018963967&65539
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 55 #867 #871) 64)) 9439544818968625155 := 450 << 54
(smt.stats   24   2977  64292 163580  5224/4893/520    6897/2058    36  245   23.07)
(smt.stats   25   3124  70093 182417  5345/5033/526    7186/2132    37  246   23.17)
(smt.stats   26   3285  76355 208649  5417/5162/527    7567/2364    39  253   23.26)
ramon: poll                 wall=3.000s usage=2.874s mem=24796KiB load=1.00 rootload=1.00
(smt.stats   27   3462  81192 232796  5515/5260/531    7983/2439    40  255   23.36)
(smt.stats   28   3563  85658 247088  5570/5298/540    8500/2663    41  261   23.46)
(smt.stats   29   3674  90154 269741  5622/5322/540    8624/2766    42  282   23.55)
(smt.stats   30   3796  94587 282542  5670/5375/541    8777/2775    43  284   23.55)
ramon: poll                 wall=4.000s usage=3.873s mem=25000KiB load=1.00 rootload=1.00
(smt.stats   31   3930  97847 305358  5761/5506/542    9007/2829    44  285   23.65)
(smt.stats   32   4077 102643 318245  5804/5516/543    9449/2839    44  285   23.84)
ramon: poll                 wall=5.002s usage=4.877s mem=25444KiB load=1.00 rootload=1.00
(smt.stats   33   4238 110932 348885  6001/5746/544    9837/3159    46  297   23.84)
(smt.stats   34   4415 117667 383386  6178/5762/546   10222/3167    46  297   23.93)
ramon: poll                 wall=6.000s usage=5.872s mem=25540KiB load=1.00 rootload=1.00
(smt.stats   35   4609 122423 399693  6406/6008/546   10608/3287    47  308   24.03)
(smt.stats   36   4710 126329 429151  6443/6176/548   10816/3319    48  313   24.03)
(smt.stats   37   4821 130695 455206  6451/6196/553   11092/3525    49  321   24.12)
(smt.stats   38   4943 134117 481543  6509/6217/556   11243/3530    49  321   24.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   39   5077 138776 503468  6591/6315/558   11501/3538    50  366   24.23)
ramon: poll                 wall=7.000s usage=6.872s mem=25896KiB load=1.00 rootload=1.00
(smt.stats   40   5224 143772 536702  6765/6367/558   12049/3622    51  366   24.32)
(smt.stats   41   5385 150033 587606  6794/6528/558   12479/3623    51  366   24.42)
(smt.stats   42   5562 155603 623900  6851/6568/559   12956/4176    52  369   24.51)
ramon: poll                 wall=8.000s usage=7.871s mem=26016KiB load=1.00 rootload=1.00
(smt.stats   43   5756 160546 652911  7025/6606/559   13171/4178    52  369   24.51)
(smt.stats   44   5969 165526 675670  7234/6782/559   13419/4184    52  369   24.63)
ramon: poll                 wall=9.000s usage=8.871s mem=26180KiB load=1.00 rootload=1.00
(smt.stats   45   6070 168840 697151  7267/7011/561   13866/4262    53  373   24.73)
(smt.stats   46   6181 171906 706774  7381/7013/561   14051/4595    54  374   24.82)
ramon: poll                 wall=10.000s usage=9.870s mem=26232KiB load=1.00 rootload=1.00
(smt.stats   47   6303 176452 731739  7488/7172/561   14284/4598    54  374   24.82)
(smt.stats   48   6437 180201 751599  7652/7270/561   14491/4600    54  374   24.92)
(smt.stats   49   6584 184042 782664  7699/7431/563   14747/4732    55  393   24.92)
ramon: poll                 wall=11.000s usage=10.870s mem=26536KiB load=1.00 rootload=1.00
(smt.stats   50   6745 188651 797499  7918/7662/568   14945/4787    56  393   24.92)
(smt.stats   51   6922 193639 833505  8071/7772/570   15307/4937    57  419   25.01)
ramon: poll                 wall=12.000s usage=11.870s mem=26852KiB load=1.00 rootload=1.00
(smt.stats   52   7116 196598 855001  8172/7830/570   16346/4939    57  419   25.20)
(smt.stats   53   7329 200539 880284  8484/8200/571   16673/5734    58  420   25.20)
ramon: poll                 wall=13.000s usage=12.868s mem=27244KiB load=1.00 rootload=0.99
(smt.stats   54   7563 206917 929001  8648/8328/572   17257/5741    58  420   25.76)
(smt.stats   55   7664 211328 961775  8732/8390/572   17393/5887    59  422   25.76)
(smt.stats   56   7775 214962 986533  8805/8461/572   17534/5887    59  422   25.76)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7897 217783 1000209  9051/8549/572   17734/5889    59  422   25.86)
ramon: poll                 wall=14.000s usage=13.867s mem=27848KiB load=1.00 rootload=1.00
(smt.stats   58   8031 220368 1021723  9145/8864/573   18479/5932    60  427   26.05)
(smt.stats   59   8178 225410 1058571  9361/8910/576   18868/5937    60  427   26.14)
ramon: poll                 wall=15.000s usage=14.867s mem=27888KiB load=1.00 rootload=1.00
(smt.stats   60   8339 230685 1097113  9566/9151/576   19177/6231    61  437   26.24)
(smt.stats   61   8516 234605 1121336  9703/9411/578   20048/6264    62  440   26.24)
ramon: poll                 wall=16.000s usage=15.866s mem=27888KiB load=1.00 rootload=1.00
(smt.stats   62   8710 239200 1139879  9816/9447/578   20305/6268    62  440   26.33)
(smt.stats   63   8923 245063 1164543  9998/9544/578   20674/6364    63  441   26.59)
ramon: poll                 wall=17.000s usage=16.866s mem=28348KiB load=1.00 rootload=1.00
(smt.stats   64   9157 250997 1194262 10266/9766/578   21221/6372    63  441   26.78)
ramon: poll                 wall=18.000s usage=17.866s mem=28604KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   65   9414 259242 1252343 10568/10262/579   21739/6593    64  441   26.87)
(smt.stats   66   9515 260683 1264330 10626/10326/580   22095/6595    64  441   26.87)
(smt.stats   67   9626 263363 1274435 10737/10399/580   22242/6595    64  441   26.97)
(smt.stats   68   9748 267919 1291038 10864/10466/580   22438/6699    65  448   27.07)
ramon: poll                 wall=19.000s usage=18.864s mem=28760KiB load=1.00 rootload=1.00
(smt.stats   69   9882 270611 1297948 10948/10600/580   22577/6700    65  448   27.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10029 273258 1327963 11074/10747/581   23023/6700    65  448   27.25)
ramon: poll                 wall=20.000s usage=19.864s mem=29272KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:50:07 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.010s
ramon: group.total          19.934s
ramon: group.utime          19.914s
ramon: group.stime          0.020s
ramon: group.mempeak        29532KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              0.99
