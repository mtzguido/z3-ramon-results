ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:11:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24519 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/xENp9qWtPW6u.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             187422
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2511    129  1263/1109/110      96/18     6   16   19.37)
(smt.stats    1    202   4102    447  2010/1809/110     204/18     6   16   19.47)
(smt.stats    2    313   6397   1272  2246/1993/110     323/18     6   16   19.47)
(smt.stats    3    414   8868   2507  2329/2107/111     427/30     7   17   19.56)
(smt.stats    4    525  11718   3865  2522/2334/116     553/41     9   21   19.66)
(smt.stats    5    647  18631   6580  2570/2360/117     670/64    10   24   19.75)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  24614   8957  2649/2448/117     771/64    11   24   19.85)
ramon: poll                 wall=1.000s usage=0.939s mem=20948KiB load=0.94 rootload=0.93
(smt.stats    7    859  28421  11734  2902/2678/118     890/85    12   24   19.95)
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 12616466432 := 12616466432&12616466432
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 12616466432 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 12616466432 := 12616466432&12616466432
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 12616466432 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 12616466432 := 12616466432&12616466432
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 12616466432 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 1 := 12616466432&1
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 1 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 1 := 12616466432&1
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 1 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 1 := 0 >>l 35
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 9007199254740991 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 33554433 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 33554433 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 33554433 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 33554433 := 33554432 >>l 25
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1 := 12616466432&1
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 268435455 := 12616466432&268435455
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 268435454 := 12616466432&268435454
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&2
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2 := 12616466432&2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&4
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4 := 12616466432&4
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&8
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8 := 12616466432&8
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&16
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 16 := 12616466432&16
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&32
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 32 := 12616466432&32
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&64
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 64 := 12616466432&64
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&128
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 128 := 12616466432&128
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&256
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 256 := 12616466432&256
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&512
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 512 := 12616466432&512
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1024
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1024 := 12616466432&1024
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&2048
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2048 := 12616466432&2048
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&4096
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4096 := 12616466432&4096
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&8192
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8192 := 12616466432&8192
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&16384
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 16384 := 12616466432&16384
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&32768
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 32768 := 12616466432&32768
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&65536
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 65536 := 12616466432&65536
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&131072
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 131072 := 12616466432&131072
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&262144
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 262144 := 12616466432&262144
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&524288
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 524288 := 12616466432&524288
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&1048576
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1048576 := 12616466432&1048576
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&2097152
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2097152 := 12616466432&2097152
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&4194304
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4194304 := 12616466432&4194304
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&8388608
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8388608 := 12616466432&8388608
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&16777216
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 16777216 := 12616466432&16777216
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&33554432
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 33554432 := 12616466432&33554432
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&67108864
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 67108864 := 12616466432&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 12616466432&134217728
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 134217728 := 12616466432&134217728
(smt.stats    8    981  29858  13948  3215/2832/246    1051/114    13   50   21.23)
(smt.stats    9   1115  36156  20337  3244/3002/247    1185/148    15   53   21.23)
(smt.stats   10   1216  43875  27209  3260/3014/247    1287/148    15   53   21.35)
(smt.stats   11   1327  51247  33794  3260/3014/247    1399/148    15   53   21.35)
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 4503599627370496&9007199254740991
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 4503599627370496&4503599627370495
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 4503599627370495 := 0 >>l 11
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  58550  41783  3270/3016/247    1521/148    15   53   21.35)
(smt.stats   13   1583  62178  46540  3285/3038/258    1677/149    16   55   21.52)
(smt.stats   14   1730  68392  54321  3289/3042/258    1820/166    17   57   21.52)
(smt.stats   15   1831  72537  59279  3289/3042/258    1922/166    17   57   21.52)
(smt.stats   16   1942  77417  67418  3293/3046/267    2037/167    18   59   21.52)
(smt.stats   17   2064  80255  74000  3316/3049/268    2160/186    19   76   21.75)
(smt.stats   18   2198  81800  78653  3630/3246/270    2301/205    20   78   21.55)
ramon: poll                 wall=2.000s usage=1.938s mem=23136KiB load=1.00 rootload=0.99
(smt.stats   19   2345  84201  86799  3749/3447/270    2473/212    20   78   21.55)
(smt.stats   20   2506  87288  96216  3831/3537/272    2626/234    22   82   21.55)
(smt.stats   21   2607  88695 103645  3977/3597/272    2733/239    22   82   21.64)
(smt.stats   22   2718  90655 109653  4101/3792/272    2843/240    22   82   21.64)
(smt.stats   23   2840  94273 118718  4144/3878/272    2981/240    22   82   21.64)
(smt.stats   24   2974  96956 126331  4178/3914/272    3189/241    22   82   21.74)
(smt.stats   25   3121  99208 135189  4197/3939/272    3351/241    22   82   21.99)
(smt.stats   26   3282 102595 152302  4217/3956/272    3514/241    22   82   21.99)
(smt.stats   27   3459 104861 164151  4354/3976/272    3710/248    22   82   22.09)
ramon: poll                 wall=3.000s usage=2.938s mem=23344KiB load=1.00 rootload=1.00
(smt.stats   28   3560 107073 169527  4378/4130/275    3808/453    23   84   22.09)
(smt.stats   29   3671 110182 178714  4391/4130/275    3923/453    23   84   22.19)
(smt.stats   30   3793 114294 192068  4404/4149/275    4045/454    23   84   22.19)
(smt.stats   31   3927 116314 199364  4444/4167/275    4176/455    23   84   22.28)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074 118260 206545  4483/4214/275    4322/455    23   84   22.28)
(smt.stats   33   4235 121675 222299  4505/4240/275    4487/455    23   84   22.75)
(smt.stats   34   4412 127578 238560  4535/4263/275    4665/458    23   84   22.75)
(smt.stats   35   4606 131613 253503  4614/4292/275    4877/464    23   84   22.99)
(smt.stats   36   4707 132883 259586  4656/4381/275    4979/465    23   84   22.99)
(smt.stats   37   4818 135363 271728  4668/4414/275    5090/465    23   84   22.99)
(smt.stats   38   4940 137619 284263  4670/4422/275    5213/465    23   84   23.09)
(smt.delete-inactive-clauses  :num-deleted-clauses 25)
(smt.stats   39   5074 139568 294369  4684/4424/275    5323/465    23   84   23.09)
(smt.stats   40   5221 142818 322862  4708/4436/275    5475/465    23   84   23.18)
(smt.stats   41   5382 147405 348540  4713/4465/275    5642/465    23   84   23.18)
ramon: poll                 wall=4.000s usage=3.937s mem=24576KiB load=1.00 rootload=1.00
(smt.stats   42   5559 150428 366724  4723/4475/276    5823/514    24   84   23.28)
(smt.stats   43   5753 153564 386354  4736/4476/276    6023/514    24   84   23.28)
(smt.stats   44   5966 158977 405260  4750/4496/276    6278/515    24   84   23.38)
(smt.stats   45   6067 160048 410418  4772/4524/276    6359/515    24   84   23.38)
(smt.stats   46   6178 165422 420612  4781/4533/276    6463/515    24   84   23.47)
(smt.stats   47   6300 169200 428988  4795/4547/276    6571/515    24   84   23.47)
(smt.stats   48   6434 173175 436443  4809/4561/276    6691/515    24   84   23.47)
(smt.stats   49   6581 174966 444244  4828/4580/276    6829/515    24   84   23.47)
(smt.stats   50   6742 177726 454471  4840/4592/276    6978/515    24   84   24.31)
(smt.stats   51   6919 182354 468458  4859/4596/276    7162/515    24   84   24.31)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 187298 484539  4916/4620/276    7387/518    24   84   24.41)
(smt.stats   53   7326 197902 515691  4931/4677/276    7600/518    24   84   24.50)
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&8799317396481
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 9015998572137473 := 9015998572137472 >>l 12
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 9007199254740992 := 5497558140928 >>l 12
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 9007199254740992 := 274877908992 >>l 12
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&8804422655749
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 63 #775 #779) 64)) 9016003677396741 := 9016003677395968 >>l 12
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 67108862 := 6755399441055744&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 67108860 := 6755399441055744&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 67108856 := 6755399441055744&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 67108848 := 6755399441055744&67108864
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&75497472
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 268435456 := 301989888 >>l 2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&67108864
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 268435456 := 268435457 >>l 2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&268435457
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 268435457 := 1073741829 >>l 2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&268435457
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 268435456 := 6755399441055744&268435457
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&536870912
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 536870912 := 6755399441055744&536870912
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&1073741824
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1073741824 := 6755399441055744&1073741824
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&2147483648
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2147483648 := 6755399441055744&2147483648
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&4294967296
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4294967296 := 6755399441055744&4294967296
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&8589934592
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8589934592 := 6755399441055744&8589934592
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&17179869184
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 17179869184 := 6755399441055744&17179869184
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&34359738368
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 34359738368 := 6755399441055744&34359738368
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&68719476736
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 68719476736 := 6755399441055744&68719476736
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&68719476736
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 68719476736 := 6755399441055744&68719476736
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&137438953472
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 137438953472 := 6755399441055744&137438953472
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&274877906944
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 274877906944 := 6755399441055744&274877906944
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&549755813888
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 549755813888 := 6755399441055744&549755813888
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&1099511627776
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1099511627776 := 6755399441055744&1099511627776
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&2199023255552
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 2199023255552 := 6755399441055744&2199023255552
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&4398046511104
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 4398046511104 := 6755399441055744&4398046511104
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&8796093022208
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 8796093022208 := 6755399441055744&8796093022208
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&17592186044416
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 17592186044416 := 6755399441055744&17592186044416
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&35184372088832
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 35184372088832 := 6755399441055744&35184372088832
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&70368744177664
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 70368744177664 := 6755399441055744&70368744177664
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&70368744177664
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 70368744177664 := 6755399441055744&70368744177664
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&281474976710656
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 281474976710656 := 6755399441055744&281474976710656
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&562949953421312
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 562949953421312 := 6755399441055744&562949953421312
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&1125899906842624
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 1125899906842624 := 6755399441055744&1125899906842624
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&562949953421312
lshr: (lshr[53] (bv2int %0) (+ 53 (* 9007199254740991 #122))) 2251799813685248 := 2251799813685249 >>l 2
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&70368744177664
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 70368744177664 := 6755399441055744&70368744177664
(smt.stats   54   7560 205261 534847  5062/4798/358    7845/623    25  101   24.91)
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&281474976710656
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 281474976710656 := 6755399441055744&281474976710656
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&562949953421312
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 562949953421312 := 6755399441055744&562949953421312
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&140737488355328
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 140737488355328 := 6755399441055744&140737488355328
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&562949953421312
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 562949953421312 := 6755399441055744&562949953421312
band: (band[53] (if (= #643 63) 433498485732174462976 (if #645 216749242866087231488 #769)) (lshr[64] (* 1024 #336) (mod #782 64))) 0 := 6755399441055744&281474976710656
band: (band[53] (if (= #126 52) 211669182486413312 (if #525 105834591243206656 #627)) (lshr[53] (bv2int %0) (+ 53 #630))) 281474976710656 := 6755399441055744&281474976710656
(smt.stats   55   7661 207313 539444  5129/4845/389    7961/624    25  101   25.00)
ramon: poll                 wall=5.000s usage=4.935s mem=26572KiB load=1.00 rootload=0.99
(smt.stats   56   7772 210233 547825  5166/4905/390    8079/624    25  101   25.00)
(smt.stats   57   7894 211987 552422  5326/4912/390    8230/661    26  109   25.10)
(smt.stats   58   8028 214994 560028  5466/5204/395    8401/663    26  109   25.19)
(smt.stats   59   8175 219099 564219  5556/5229/395    8573/665    26  109   25.19)
ramon: poll                 wall=6.000s usage=5.935s mem=26904KiB load=1.00 rootload=1.00
(smt.stats   60   8336 220438 567458  5938/5375/395    8750/746    27  121   25.38)
(smt.stats   61   8513 222027 571009  6245/5987/396    9022/748    27  121   25.48)
(smt.stats   62   8707 233709 605468  6249/5991/396    9218/748    27  121   25.48)
(smt.stats   63   8920 242245 627650  6354/6092/397    9552/921    29  122   25.58)
(smt.stats   64   9154 248527 657786  6359/6101/397    9817/921    29  122   25.67)
(smt.stats   65   9411 258203 681382  6363/6101/397   10075/921    29  122   25.77)
(smt.stats   66   9512 259747 689738  6363/6105/397   10250/921    29  122   25.77)
(smt.stats   67   9623 263461 706681  6368/6110/397   10360/921    29  122   25.86)
ramon: poll                 wall=7.000s usage=6.934s mem=27508KiB load=1.00 rootload=1.00
(smt.stats   68   9745 266288 723327  6369/6111/397   10481/921    29  122   25.86)
(smt.stats   69   9879 269956 732947  6423/6113/397   10619/923    29  122   26.00)
(smt.delete-inactive-clauses  :num-deleted-clauses 6)
(smt.stats   70  10026 273054 745888  6486/6197/397   10785/923    29  122   26.00)
(smt.stats   71  10187 277448 756698  6573/6229/397   10961/924    29  122   26.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 283371 769883  6641/6367/397   11147/924    29  122   26.10)
(smt.stats   73  10558 287744 794451  6772/6401/397   11370/931    29  122   26.19)
(smt.stats   74  10771 292494 828855  6844/6553/397   11585/933    29  122   26.29)
ramon: poll                 wall=8.000s usage=7.934s mem=28016KiB load=1.00 rootload=1.00
(smt.stats   75  11005 296180 847280  6913/6613/397   11824/938    29  122   26.38)
(smt.stats   76  11262 303397 879657  7003/6698/397   12057/941    29  122   26.38)
(smt.stats   77  11544 307874 899969  7034/6768/397   12340/941    29  122   26.57)
(smt.stats   78  11645 309904 907282  7052/6776/397   12441/941    29  122   26.57)
(smt.stats   79  11756 312361 915911  7081/6811/397   12543/941    29  122   26.57)
(smt.stats   80  11878 314188 927426  7085/6825/397   12677/941    29  122   26.67)
(smt.stats   81  12012 316841 946492  7089/6831/397   12820/941    29  122   26.67)
(smt.stats   82  12159 320828 968316  7107/6831/397   12967/941    29  122   26.67)
(smt.stats   83  12320 324135 992278  7135/6865/398   13133/1151    30  122   26.67)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12497 327587 1011856  7285/6879/398   13317/1155    30  122   26.77)
(smt.stats   85  12691 333732 1034732  7328/7068/398   13580/1155    30  122   26.86)
ramon: poll                 wall=9.000s usage=8.934s mem=28632KiB load=1.00 rootload=1.00
(smt.stats   86  12904 337709 1047760  7441/7077/398   13802/1160    30  122   26.96)
(smt.stats   87  13138 341645 1062944  7470/7193/398   14048/1160    30  122   27.05)
(smt.stats   88  13395 348407 1089239  7508/7216/398   14301/1161    30  122   28.58)
(smt.stats   89  13677 354775 1125178  7519/7261/398   14584/1161    30  122   28.68)
(smt.stats   90  13987 362211 1150208  7531/7265/398   14900/1161    30  122   28.77)
(smt.stats   91  14088 365562 1183615  7534/7273/398   15002/1161    30  122   28.77)
(smt.stats   92  14199 373341 1254953  7535/7277/398   15115/1161    30  122   28.77)
(smt.stats   93  14321 378718 1300283  7539/7280/398   15241/1161    30  122   28.87)
(smt.stats   94  14455 381270 1312976  7544/7285/398   15372/1161    30  122   28.87)
ramon: poll                 wall=10.000s usage=9.933s mem=30860KiB load=1.00 rootload=0.99
(smt.stats   95  14602 389950 1338969  7551/7292/399   15509/1266    31  127   28.97)
(smt.stats   96  14763 399112 1379508  7555/7292/399   15672/1266    31  127   29.06)
(smt.stats   97  14940 403636 1395004  7601/7304/399   15867/1270    31  127   29.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
(smt.stats   98  15134 410668 1420238  7620/7361/399   16050/1270    31  127   29.26)
(smt.stats   99  15347 416931 1446265  7692/7363/399   16271/1270    31  127   29.35)
(smt.stats  100  15581 424799 1477391  7736/7453/399   16513/1270    31  127   29.45)
(smt.stats  101  15838 433064 1530646  7783/7485/399   16785/1271    31  127   29.45)
(smt.stats  102  16120 443386 1620786  7783/7524/399   17070/1271    31  127   29.54)
ramon: poll                 wall=11.000s usage=10.933s mem=31620KiB load=1.00 rootload=1.00
(smt.stats  103  16430 454611 1675663  7791/7530/399   17401/1271    31  127   29.73)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  104  16770 460231 1718320  7793/7534/399   17780/1271    31  127   29.83)
(smt.stats  105  16871 462180 1728496  7812/7537/399   17879/1271    31  127   29.93)
(smt.stats  106  16982 464772 1746800  7821/7556/399   18002/1271    31  127   29.93)
(smt.stats  107  17104 469347 1777673  7827/7563/399   18123/1271    31  127   30.02)
(smt.stats  108  17238 473723 1809621  7833/7571/399   18258/1271    31  127   30.17)
(smt.stats  109  17385 480129 1875425  7834/7575/399   18405/1271    31  127   30.27)
(smt.stats  110  17546 482888 1899468  7897/7576/399   18569/1274    31  127   30.27)
(smt.stats  111  17723 489093 1930766  7923/7664/399   18746/1274    31  127   30.36)
ramon: poll                 wall=12.000s usage=11.933s mem=32424KiB load=1.00 rootload=1.00
(smt.stats  112  17917 496985 1985668  7923/7664/399   18940/1274    31  127   30.36)
(smt.stats  113  18130 502105 2052808  7923/7664/399   19154/1274    31  127   30.46)
(smt.stats  114  18364 507764 2117327  7924/7665/399   19388/1274    31  127   30.46)
(smt.stats  115  18621 516900 2163861  7927/7668/400   19632/1373    32  137   30.55)
(smt.stats  116  18903 526211 2192254  7931/7672/400   19920/1373    32  137   30.65)
(smt.stats  117  19213 537906 2212607  7934/7675/400   20269/1373    32  137   30.75)
(smt.stats  118  19553 549992 2237568  7938/7679/401   20626/1403    33  139   30.84)
(smt.stats  119  19926 562571 2268787  7940/7681/401   21006/1403    33  139   30.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 357)
(smt.stats  120  20027 566190 2278065  7940/7681/401   20751/1403    33  139   30.84)
ramon: poll                 wall=13.000s usage=12.932s mem=33048KiB load=1.00 rootload=1.00
(smt.stats  121  20138 570299 2289002  7941/7682/401   20861/1403    33  139   30.84)
(smt.stats  122  20260 575761 2301336  7941/7682/401   20983/1403    33  139   30.84)
(smt.stats  123  20394 580239 2311421  7953/7684/401   21153/1403    33  139   30.94)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  124  20541 584353 2320851  8001/7732/403   21381/1415    34  141   30.94)
(smt.stats  125  20702 592497 2335256  8002/7733/404   21578/1415    34  141   31.04)
(smt.stats  126  20879 599614 2355180  8003/7734/404   21764/1415    34  141   31.04)
(smt.stats  127  21073 607311 2371688  8003/7734/404   21961/1508    35  143   31.13)
(smt.stats  128  21286 616402 2391073  8008/7739/404   22216/1508    35  143   31.13)
(smt.stats  129  21520 623307 2406548  8008/7739/404   22459/1508    35  143   31.23)
(smt.stats  130  21777 634205 2428471  8011/7742/405   22724/1510    36  145   31.23)
ramon: poll                 wall=14.000s usage=13.932s mem=33556KiB load=1.00 rootload=1.00
(smt.stats  131  22059 648228 2454360  8012/7743/405   23023/1510    36  145   31.32)
(smt.stats  132  22369 660658 2489436  8016/7747/405   23331/1510    36  145   31.32)
(smt.stats  133  22709 673082 2514517  8016/7747/405   23671/1510    36  145   31.42)
(smt.stats  134  23082 686648 2547869  8022/7753/406   24053/1516    37  147   31.42)
(smt.stats  135  23492 701213 2584952  8022/7753/406   24466/1516    37  147   31.52)
(smt.stats  136  23593 704248 2593338  8022/7753/406   24567/1516    37  147   31.52)
(smt.stats  137  23704 708129 2604186  8022/7753/406   24679/1516    37  147   31.61)
(smt.stats  138  23826 712416 2614416  8022/7753/406   24801/1516    37  147   31.61)
(smt.stats  139  23960 717143 2625393  8022/7753/406   24936/1516    37  147   31.61)
(smt.stats  140  24107 721966 2640053  8022/7753/406   25083/1516    37  147   31.61)
ramon: poll                 wall=15.000s usage=14.931s mem=33936KiB load=1.00 rootload=1.00
(smt.stats  141  24268 728148 2656835  8022/7753/406   25245/1516    37  147   31.71)
(smt.stats  142  24445 733849 2674607  8023/7754/406   25421/1516    37  147   31.71)
(smt.stats  143  24639 740259 2688750  8023/7754/406   25615/1516    37  147   31.71)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  144  24852 748700 2714237  8025/7756/406   25831/1516    37  147   31.71)
(smt.delete-inactive-clauses  :num-deleted-clauses 33)
(smt.stats  145  25086 757081 2739085  8025/7756/406   26042/1516    37  147   34.78)
(smt.stats  146  25343 767743 2767404  8025/7756/406   26299/1516    37  147   34.78)
(smt.stats  147  25625 778018 2793995  8025/7756/406   26581/1516    37  147   34.78)
(smt.stats  148  25935 788916 2820399  8025/7756/406   26892/1516    37  147   34.88)
ramon: poll                 wall=16.000s usage=15.931s mem=37296KiB load=1.00 rootload=1.00
(smt.stats  149  26275 798378 2843490  8026/7757/406   27240/1516    37  147   34.88)
(smt.stats  150  26648 815258 2881910  8026/7757/406   27621/1516    37  147   35.02)
(smt.stats  151  27058 838463 2979171  8037/7768/407   28039/1531    38  149   35.21)
(smt.stats  152  27508 849815 3053329  8191/7772/407   28535/1549    38  149   35.49)
(smt.stats  153  27609 853106 3079953  8230/7961/407   28633/1549    38  149   35.49)
ramon: poll                 wall=17.000s usage=16.931s mem=37936KiB load=1.00 rootload=0.99
(smt.stats  154  27720 855866 3090519  8302/7965/407   28748/1552    38  149   35.59)
(smt.stats  155  27842 859299 3099617  8395/8062/407   28943/1562    38  149   35.59)
(smt.stats  156  27976 862608 3117282  8486/8212/407   29082/1562    38  149   35.69)
(smt.stats  157  28123 868476 3147509  8491/8222/407   29328/1562    38  149   35.79)
(smt.stats  158  28284 878517 3201685  8491/8222/407   29489/1562    38  149   35.89)
(smt.stats  159  28461 884073 3224570  8499/8226/407   29671/1562    38  149   36.09)
(smt.stats  160  28655 889659 3259247  8506/8237/407   29870/1562    38  149   36.09)
ramon: poll                 wall=18.000s usage=17.930s mem=38680KiB load=1.00 rootload=1.00
(smt.stats  161  28868 903036 3296859  8506/8237/407   30093/1562    38  149   36.19)
(smt.stats  162  29102 907666 3320549  8524/8246/408   30357/1639    39  150   36.28)
(smt.stats  163  29359 915630 3381489  8550/8277/408   30608/1639    39  150   36.28)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  164  29641 922289 3402220  8574/8305/408   30869/1639    39  150   36.40)
(smt.stats  165  29951 933840 3456592  8599/8317/408   31173/1639    39  150   36.40)
(smt.delete-inactive-clauses  :num-deleted-clauses 442)
(smt.stats  166  30291 937406 3496731  8599/8330/408   31075/1639    39  150   36.59)
(smt.stats  167  30664 942064 3518472  8599/8330/408   31456/1639    39  150   36.68)
ramon: poll                 wall=19.000s usage=18.930s mem=39480KiB load=1.00 rootload=1.00
(smt.stats  168  31074 950507 3598962  8756/8330/408   31893/1639    39  150   36.90)
(smt.stats  169  31524 962400 3682531  8779/8506/408   32356/1639    39  150   36.90)
(smt.stats  170  32018 982583 3785328  8822/8516/408   32894/1641    39  150   37.19)
(smt.stats  171  32119 985847 3833060  8851/8575/408   32997/1642    39  150   37.19)
(smt.stats  172  32230 991782 3923759  8851/8579/408   33108/1642    39  150   37.29)
(smt.stats  173  32352 994633 3941356  8872/8580/408   33230/1642    39  150   37.29)
ramon: poll                 wall=20.000s usage=19.930s mem=40076KiB load=1.00 rootload=1.00
(smt.stats  174  32486 999238 3958342  8879/8607/408   33363/1642    39  150   37.29)
ramon: end                  Fri Nov  1 19:11:27 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.994s
ramon: group.utime          19.958s
ramon: group.stime          0.036s
ramon: group.mempeak        40588KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
