ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:38:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41165 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/d9YhFeTXs1fl.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3027142
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 0&1073725440
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 1073741824 := 1073741828 >>l 18
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 1 := 1&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 1&1073725440
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 1 := 4294967292 >>l 18
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 1&1073725440
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 1 := 4294967292 >>l 18
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 1 := 1&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 2 := 2&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 4 := 4&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 1 := 1&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 2 := 2&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 1 := 1&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 2 := 2&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 4 := 4&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 8 := 8&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 1 := 1&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 2 := 2&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 4 := 4&1073725440
(smt.stats    0    101    805    148   705/612/103      97/7     4   16   18.84)
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 201 := 16382&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 201 := 16381&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 201 := 201&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 201 := 201&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 172 := 172&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 172 := 172&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 172 := 172&1073725440
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 172 := 172&1073725440
(smt.stats    1    202   2597   3537  1490/1077/129     316/111     6   21   19.03)
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 0&1073217536
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 0 := 4294967288 >>l 13
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 0&1073217536
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 0 := 262144 >>l 13
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 0&1073217536
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 0 := 262144 >>l 13
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 0&1073217536
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 0 := 262144 >>l 13
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 0&1073217536
lshr: (lshr[30] (bv2int %0) (mod (bv2int %1) 30)) 1073741823 := 1 >>l 11
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 0&1073217536
lshr: (lshr[30] (bv2int %0) (mod (bv2int %1) 30)) 1073741823 := 1 >>l 11
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 0&1073217536
lshr: (lshr[30] (bv2int %0) (mod (bv2int %1) 30)) 2 := 1 >>l 11
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 0&1073217536
lshr: (lshr[30] (bv2int %0) (mod (bv2int %1) 30)) 2 := 1 >>l 11
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 42 := 16383&1073217536
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 42 := 16383&1073217536
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 42 := 16384&1073217536
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 42 := 16383&1073217536
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 42 := 16384&1073217536
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 42 := 16386&1073217536
(smt.stats    2    313   4640   7322  1639/1472/149     496/163    10   29   19.13)
(smt.stats    3    414   5938  10293  1834/1697/161     744/256    13   39   19.23)
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 48 := 16383&1073610752
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 48 := 16383&1073610752
(smt.stats    4    525   7990  15799  1876/1726/173     981/272    14   57   19.42)
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 208 := 262145&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 208 := 262175&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 208 := 262145&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 208 := 262160&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 224 := 262145&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 224 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 264 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 264 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 264 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 264 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 264 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 264 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 256 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 256 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 256 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 256 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 256 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 512 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 512 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 512 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 1024 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 2048 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 4096 := 16383&536870912
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 8192 := 16383&536870912
(smt.stats    5    647  10301  21376  1979/1748/176    1282/300    15   59   19.72)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  11208  23293  2245/1890/246    1642/330    16   74   19.82)
(smt.stats    7    859  12196  27046  2474/2123/246    1958/411    17   74   20.01)
(smt.stats    8    981  14735  36301  2621/2484/256    3290/760    19   89   20.11)
(smt.stats    9   1115  16679  46330  2873/2624/260    3757/900    20   95   20.30)
(smt.stats   10   1216  17971  52883  3004/2809/261    4141/1087    22   95   20.39)
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 1073741760&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426817&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426818&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426975&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426983&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426939&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426908&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426911&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426911&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426911&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426911&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426911&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426911&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426911&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426879&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426879&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426847&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426839&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426839&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426718 := 426847&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426710 := 426735&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426710 := 426727&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426710 := 426743&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426710 := 426727&1073741822
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 426710 := 426711&1073741822
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 1074168535 := 0 >>l 31
(smt.stats   11   1327  19465  63671  3212/3033/288    4440/1121    23   98   20.70)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   12   1449  22992  86127  3259/3109/318    5427/1358    26  147   20.80)
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 33&0
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 1073741857 := 1074003968 >>l 2
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 33&0
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 33 := 8388608 >>l 2
(smt.stats   13   1583  23860  90288  3389/3244/327    5780/1553    27  161   21.22)
(smt.stats   14   1730  26484 103669  3573/3352/332    6369/1742    28  171   21.49)
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 15139&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 5923&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 1073745699 := 3699376128 >>l 20
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 1073745699 := 3699376128 >>l 20
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 1073745699 := 3699376128 >>l 20
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
lshr: (lshr[30] (bv2int %0) (mod (bv2int %1) 30)) 1073737729 := 1015808000 >>l 18
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
lshr: (lshr[30] (bv2int %0) (mod (bv2int %1) 30)) 1073737728 := 1016070143 >>l 18
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
lshr: (lshr[30] (bv2int %0) (mod (bv2int %1) 30)) 1073737728 := 1016070143 >>l 18
(smt.stats   15   1831  28762 119378  3926/3753/351    6705/1844    29  186   21.49)
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 1 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 4 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 8 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 1 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 4 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 8 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 16 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 32 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 64 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 128 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 256 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 512 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 1024 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2048 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2048 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2048 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2432 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2432 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2368 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2368 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2352 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 2304 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 512 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 1024 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 1024 := 3875&1073737728
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 3875&1073737728
band: (band[30] (lshr[30] (bv2int %0) (mod #103 30)) (if (= #332 29) 576460751766552576 (if #334 288230375883276288 #390))) 1024 := 3875&1073737728
(smt.stats   16   1942  30556 127283  4093/3858/454    7248/1853    29  186   22.07)
(smt.stats   17   2064  33194 135322  4235/3979/472    8029/2039    30  213   22.26)
ramon: poll                 wall=1.000s usage=0.993s mem=23552KiB load=0.99 rootload=0.97
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 624&0
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 624 := 1073747024 >>l 2
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 624&0
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 624 := 655361104 >>l 2
band: (band[30] (lshr[32] (* 4 #102) (mod #240 32)) (if (= #413 31) 4611686014132420608 (if #415 2305843007066210304 #475))) 0 := 624&0
lshr: (lshr[32] (* 4 (bv2int %0)) (mod (+ 2 #103 #239) 32)) 624 := 655361104 >>l 2
(smt.stats   18   2198  36627 162325  4383/4136/474    8644/2270    31  233   22.46)
(smt.stats   19   2345  41508 192278  4546/4254/477    9622/2525    32  266   22.87)
(smt.stats   20   2506  47021 209901  4702/4472/480   10558/2640    33  270   23.06)
(smt.stats   21   2607  51314 238655  4763/4476/481   11605/2778    34  276   23.26)
(smt.stats   22   2718  55842 266516  4870/4598/482   12417/3037    35  286   23.45)
(smt.stats   23   2840  59721 292573  4963/4733/483   13239/3155    36  294   23.64)
ramon: poll                 wall=2.000s usage=1.993s mem=25088KiB load=1.00 rootload=1.00
(smt.stats   24   2974  64218 309383  5052/4815/484   13893/3318    37  294   23.74)
(smt.stats   25   3121  69323 328332  5083/4824/484   14707/3322    37  294   23.84)
(smt.stats   26   3282  76299 383258  5142/4860/484   15438/3597    38  320   23.94)
(smt.stats   27   3459  83760 412672  5333/4942/484   16628/3601    38  320   24.14)
(smt.stats   28   3560  87065 425225  5352/5103/485   17254/3821    39  328   24.24)
(smt.stats   29   3671  92526 447568  5392/5149/489   18221/3824    39  328   24.44)
ramon: poll                 wall=3.000s usage=2.993s mem=25856KiB load=1.00 rootload=1.00
(smt.stats   30   3793  96319 459815  5476/5169/489   18601/4024    40  354   24.53)
(smt.stats   31   3927 101283 476158  5629/5369/491   19339/4024    40  354   24.62)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4074 106607 496934  5669/5402/492   20113/4029    40  354   24.72)
(smt.stats   33   4235 110500 515693  5965/5434/492   20706/4281    41  359   24.91)
ramon: poll                 wall=4.000s usage=3.993s mem=26624KiB load=1.00 rootload=1.00
(smt.stats   34   4412 113303 530381  6334/5751/492   21389/4285    41  359   25.01)
(smt.stats   35   4606 119892 564062  6364/6120/492   23328/4285    41  359   25.33)
(smt.stats   36   4707 125467 608199  6439/6198/492   24085/4285    41  359   25.43)
(smt.stats   37   4818 130916 657366  6443/6202/493   25437/4550    42  381   25.53)
(smt.stats   38   4940 135365 706179  6454/6213/493   27006/4550    42  381   25.73)
ramon: poll                 wall=5.000s usage=4.989s mem=27392KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 1955)
(smt.stats   39   5074 139799 728840  6493/6233/493   25872/4553    42  381   25.90)
(smt.stats   40   5221 145480 756528  6590/6279/494   26359/4782    43  381   25.90)
(smt.stats   41   5382 153322 791739  6733/6356/494   27581/4794    43  381   26.09)
(smt.stats   42   5559 159490 835356  6847/6537/495   28944/5004    44  398   26.19)
ramon: poll                 wall=6.000s usage=5.986s mem=27672KiB load=1.00 rootload=1.00
(smt.stats   43   5753 168433 865730  7126/6608/495   30014/5008    44  398   26.40)
(smt.stats   44   5966 176786 899230  7356/6889/495   31450/5010    44  398   26.59)
ramon: poll                 wall=7.000s usage=6.982s mem=28184KiB load=1.00 rootload=1.00
(smt.stats   45   6067 178871 911884  7445/7130/496   32292/5311    45  400   26.78)
(smt.stats   46   6178 181661 934952  7595/7347/497   32770/5314    45  400   26.96)
(smt.stats   47   6300 184632 950508  7762/7367/497   33181/5315    45  400   27.06)
(smt.stats   48   6434 189796 973938  7983/7560/497   33641/5323    45  400   27.06)
ramon: poll                 wall=8.000s usage=7.979s mem=28696KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   49   6581 193688 1004057  8059/7752/502   34955/5449    46  406   27.25)
(smt.stats   50   6742 197518 1023293  8249/7849/502   35733/5453    46  406   27.36)
(smt.stats   51   6919 201217 1045119  8530/8023/502   36434/5459    46  406   27.45)
(smt.stats   52   7113 208107 1083532  8648/8311/502   38017/5773    47  433   27.74)
ramon: poll                 wall=9.000s usage=8.972s mem=29208KiB load=0.99 rootload=1.00
(smt.stats   53   7326 217264 1131482  8880/8428/502   39088/5777    47  433   27.74)
(smt.stats   54   7560 225701 1179777  9001/8707/504   41088/6027    48  435   28.18)
(smt.stats   55   7661 230599 1210090  9135/8831/505   41746/6028    48  435   28.28)
ramon: poll                 wall=10.000s usage=9.965s mem=29720KiB load=0.99 rootload=0.99
(smt.stats   56   7772 235525 1243848  9310/9050/506   42783/6203    49  454   28.37)
(smt.stats   57   7894 240868 1276342  9392/9081/506   43737/6210    49  454   28.37)
(smt.stats   58   8028 244880 1302416  9522/9243/507   44666/6453    50  479   28.56)
ramon: poll                 wall=11.000s usage=10.965s mem=30232KiB load=1.00 rootload=1.00
(smt.stats   59   8175 250982 1335539  9627/9299/507   45281/6455    50  479   28.66)
(smt.stats   60   8336 257622 1372600  9792/9410/507   46911/6458    50  479   28.98)
(smt.stats   61   8513 263918 1420482  9899/9656/510   49502/6872    51  480   29.16)
ramon: poll                 wall=12.000s usage=11.963s mem=30744KiB load=1.00 rootload=1.00
(smt.stats   62   8707 271859 1470506 10045/9666/511   50499/6875    51  480   29.26)
(smt.stats   63   8920 280952 1536478 10238/9844/512   52245/6881    51  480   29.45)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   64   9154 286338 1604390 10256/10013/512   55560/7237    52  495   29.84)
ramon: poll                 wall=13.000s usage=12.957s mem=31512KiB load=0.99 rootload=0.99
(smt.stats   65   9411 293694 1659590 10474/10018/512   57468/7245    52  495   30.03)
(smt.stats   66   9512 295542 1674264 10501/10254/512   58533/7245    52  495   30.12)
(smt.stats   67   9623 299509 1700731 10588/10262/512   60283/7247    52  495   30.32)
ramon: poll                 wall=14.000s usage=13.954s mem=32024KiB load=1.00 rootload=1.00
(smt.stats   68   9745 303598 1717048 10768/10396/512   60808/7253    52  495   30.41)
(smt.stats   69   9879 307511 1740389 10903/10574/512   61316/7255    52  495   30.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 312148 1785118 10981/10684/512   64060/7259    52  495   31.00)
ramon: poll                 wall=15.000s usage=14.953s mem=32536KiB load=1.00 rootload=1.00
(smt.stats   71  10188 319281 1830516 11198/10748/512   65014/7263    52  495   31.09)
(smt.stats   72  10365 325202 1859757 11417/10970/512   65588/7264    52  495   31.49)
(smt.stats   73  10559 331380 1904912 11525/11225/512   67700/7266    52  495   31.68)
ramon: poll                 wall=16.000s usage=15.953s mem=33364KiB load=1.00 rootload=1.00
(smt.stats   74  10772 341062 1978083 11806/11498/515   70383/8260    53  506   31.97)
ramon: poll                 wall=17.000s usage=16.952s mem=33876KiB load=1.00 rootload=1.00
(smt.stats   75  11006 350656 2037403 12052/11601/515   72510/8263    53  506   32.26)
(smt.stats   76  11263 360417 2134953 12184/11941/517   74681/8592    54  538   32.45)
ramon: poll                 wall=18.000s usage=17.952s mem=34388KiB load=1.00 rootload=1.00
(smt.stats   77  11545 367409 2231094 12357/11948/517   77662/8597    54  538   32.74)
(smt.stats   78  11646 370790 2258437 12500/12130/517   78406/8602    54  538   32.93)
(smt.stats   79  11757 374203 2279342 12596/12275/517   78738/8603    54  538   32.93)
ramon: poll                 wall=19.000s usage=18.951s mem=34644KiB load=1.00 rootload=1.00
(smt.stats   80  11879 378061 2315851 12757/12390/517   79595/9001    55  539   33.02)
(smt.stats   81  12013 380966 2331425 12809/12526/517   80216/9001    55  539   33.12)
(smt.stats   82  12160 386918 2360270 12862/12577/517   81707/9008    55  539   33.22)
(smt.stats   83  12321 391649 2398779 12905/12638/517   82273/9008    55  539   33.32)
ramon: poll                 wall=20.000s usage=19.951s mem=35156KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:38:35 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.962s
ramon: group.utime          19.942s
ramon: group.stime          0.020s
ramon: group.mempeak        35156KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
