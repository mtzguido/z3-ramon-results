ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:41:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27931 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Y6YxLH1hukpW.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             843391
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   238.095     10000        49          0            1        2)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&0
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 1
(sat.ddfw       1      1   108.707     20001        98          1            1        3)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&1
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 3 << 2
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 268435453&1
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 268435452&1
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 268435452 := 268435454 << 2
(smt.stats    0    101   2163   1023   710/636/130      94/19    10   22   51.56)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 1 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 1 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 1 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 1 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 268435456 := 134479873 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 268435455 := 134479872 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 268435455 := 134479872 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 134479873 := 134479872 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 134479873 := 134479872 << 10
(smt.stats    1    202   3139   2339  1131/1012/149     196/21    15   38   51.76)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 390 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 389 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 25740288&390
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 268435455 := 147087921 << 10
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 390 := 8261632&390
(sat.ddfw       1      1   104.167     40001       196          2            1        5)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 1 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 4 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 8 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 16 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 32 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 64 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 128 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8261632&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 256 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 25740288&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 64 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 8267776&390
band: (band[28] (shl[28] (bv2int %0) (mod #107 28)) (if (= #387 27) 0 (if #389 1 #462))) 64 := 8267776&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 8 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 32 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 64 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 128 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 8261632&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 128 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 25740288&390
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 256 := 25740288&390
(smt.stats    2    313   3945   3764  1380/1262/244     341/38    17   60   52.34)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 512 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 1024 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2048 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4096 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4096 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 8192 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 524288 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 524288 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 32768 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 49152 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 540672 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 540672 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 16384 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 540672 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 507904 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 1064960 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 1589248 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2637824 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4734976 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 2113536 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4182646 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4182628 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4182624 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 3686400 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4186112 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4186112 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4186112 := 25740288&51208387
(sat.ddfw       1      1   85.2273     70001       343          3            1        8)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183552 := 25740288&51208387
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 4183040 := 25740288&51208387
(smt.stats    3    414   5489   6893  1570/1411/343     560/66    20   80   52.82)
(smt.stats    4    525   7829  10005  1705/1558/366     911/227    24  100   53.02)
(sat.ddfw       1      1   71.4286    110001       539          4            1       12)
(smt.stats    5    647  10436  14720  1747/1606/370    1346/259    26  105   53.21)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  13389  22911  1833/1668/371    1488/265    27  105   53.32)
(sat.ddfw       1      1   60.6784    160000       784          5            1       17)
ramon: poll                 wall=1.000s usage=0.942s mem=55784KiB load=0.94 rootload=0.93
(smt.stats    7    859  13871  23761  2001/1740/371    1630/269    27  105   53.61)
(sat.ddfw       1      1   52.8178    220001      1078          6            1       23)
(smt.stats    8    981  16675  30389  2097/1925/378    2019/284    29  111   53.70)
(smt.stats    9   1115  19357  36696  2123/1939/378    2442/319    30  116   53.80)
(sat.ddfw       1      1   46.7602    290001      1421          7            1       30)
(smt.stats   10   1216  22481  43594  2133/1964/378    2819/321    30  116   53.80)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 3&3125
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 3&3125
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 2&3125
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 2 := 2 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&3125
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 1 := 0 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&3125
shl: (shl[28] (bv2int %0) (mod (bv2int %1) 28)) 1 := 0 << 13
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&50008
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 17
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&50008
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 3 << 17
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&50008
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 17
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&800131
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&800131
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 1&800131
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 1 := 1&800131
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 1 := 2 << 21
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&800131
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 2 << 21
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&800131
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 2 << 21
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&800131
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 21
(smt.stats   11   1327  25419  50079  2221/1983/385    3167/337    31  119   54.09)
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&12802096
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 25
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&12802096
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 25
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&195
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&195
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 1 << 9
band: (band[28] (shl[32] (bv2int %0) (mod #262 32)) (if (or #482 #483) 0 (if #484 1 #544))) 0 := 0&195
shl: (shl[32] (bv2int %0) (mod (+ #107 #261) 32)) 0 := 8134531 << 9
(smt.stats   12   1449  27370  55454  2335/2106/425    3532/366    32  124   54.32)
(sat.ddfw       1      1   41.9068    370001      1813          8            1       38)
ramon: poll                 wall=2.000s usage=1.942s mem=56832KiB load=1.00 rootload=1.00
(smt.stats   13   1583  29873  61293  2449/2204/431    4122/382    33  146   54.71)
(sat.ddfw       1      1   37.9107    460001      2254          9            1       47)
(smt.stats   14   1730  33452  66975  2579/2383/432    4326/439    34  208   54.80)
(sat.ddfw       1      1   34.5662    560001      2745         10            1       57)
ramon: poll                 wall=3.000s usage=2.944s mem=57296KiB load=1.00 rootload=1.00
(smt.stats   15   1831  36071  71223  2643/2392/434    4545/447    35  217   54.90)
(smt.stats   16   1942  38914  78219  2799/2611/435    4971/475    36  218   54.90)
(sat.ddfw       1      1   31.7186    670001      3284         11            1       68)
(smt.stats   17   2064  44329  91936  2813/2613/437    5271/476    36  218   55.02)
(smt.stats   18   2198  48387 100026  2888/2690/440    5589/697    38  233   55.23)
ramon: poll                 wall=4.000s usage=3.968s mem=57564KiB load=1.02 rootload=1.02
(sat.ddfw       1      1   30.1054    790001      3872         12            1       80)
(smt.stats   19   2345  53682 112745  2894/2706/440    5908/697    38  233   55.23)
(smt.stats   20   2506  56339 119717  2961/2773/441    6426/810    39  235   55.33)
(sat.ddfw       1      1   29.0893    920001      4509         13            1       93)
(smt.stats   21   2607  59856 124891  3086/2775/442    6719/818    39  235   55.42)
(smt.stats   22   2718  63166 134102  3231/2929/443    7150/825    39  235   55.60)
(smt.stats   23   2840  65823 147374  3320/3064/443    7418/965    40  239   55.77)
ramon: poll                 wall=5.000s usage=5.320s mem=58084KiB load=1.35 rootload=1.35
(smt.stats   24   2974  68839 163136  3342/3154/444    8159/996    41  240   55.77)
(sat.ddfw       1      1   27.6844   1060001      5196         14            1      108)
(smt.stats   25   3121  73433 181833  3372/3173/445    8703/998    41  240   55.87)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282  77115 202577  3400/3212/451    9065/1244    42  241   56.16)
(sat.ddfw       1      1   26.2421   1210001      5931         15            1      123)
(smt.stats   27   3459  81666 217981  3499/3216/452    9498/1295    43  263   56.16)
ramon: poll                 wall=6.002s usage=6.441s mem=58252KiB load=1.12 rootload=1.12
(smt.stats   28   3560  83290 226923  3525/3334/453    9704/1295    43  263   56.16)
(smt.stats   29   3671  84994 237362  3527/3336/453    9933/1341    44  269   56.16)
(smt.stats   30   3793  86696 248094  3542/3351/454   10266/1341    44  269   56.16)
(sat.ddfw       1      1   24.8872   1370001      6715         16            1      139)
(smt.stats   31   3927  88237 268519  3591/3356/454   10606/1375    45  269   56.25)
ramon: poll                 wall=7.000s usage=7.751s mem=58652KiB load=1.31 rootload=1.31
(sat.ddfw       1      1   24.2372   1540001      7549         17            1      156)
(sat.ddfw       1      1   23.0385   1720001      8431         18            1      174)
(smt.stats   32   4074  91628 278204  3720/3443/454   10850/1383    45  269   56.35)
ramon: poll                 wall=8.000s usage=8.847s mem=58824KiB load=1.10 rootload=1.10
(smt.stats   33   4235  98013 307074  3734/3522/456   11475/1442    46  270   56.60)
(smt.stats   34   4412 101252 330882  3765/3556/457   11993/1530    47  275   56.69)
(sat.ddfw       1      1   22.1678   1910001      9362         19            1      193)
(smt.stats   35   4606 103982 345975  3818/3596/458   12484/1530    47  275   56.88)
(smt.stats   36   4707 107190 362160  3821/3609/459   12592/1639    48  297   56.88)
ramon: poll                 wall=9.000s usage=9.936s mem=59216KiB load=1.09 rootload=1.09
(smt.stats   37   4818 109221 378642  3825/3611/461   12755/1658    49  330   56.88)
(smt.stats   38   4940 110637 390627  3834/3622/463   13123/1658    49  330   56.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 56)
(smt.stats   39   5074 112311 400888  3857/3622/463   13352/1659    49  330   56.98)
(sat.ddfw       1      1   20.9139   2110001     10343         20            1      214)
(smt.stats   40   5221 114913 413818  3903/3648/463   13659/1746    50  334   56.98)
ramon: poll                 wall=10.000s usage=10.935s mem=59380KiB load=1.00 rootload=1.00
(smt.stats   41   5382 121946 440944  3980/3694/465   14398/1746    50  334   57.07)
(sat.ddfw       1      1   19.8076   2320001     11372         21            1      235)
(smt.stats   42   5559 127523 466455  4006/3794/469   15253/1853    51  355   57.17)
ramon: poll                 wall=11.000s usage=11.932s mem=59636KiB load=1.00 rootload=1.00
(smt.stats   43   5753 133778 502365  4017/3800/469   15562/1853    51  355   57.27)
(smt.stats   44   5966 139170 532228  4030/3815/469   16107/2033    52  366   57.78)
(sat.ddfw       1      1   18.8034   2540001     12451         22            1      257)
(smt.stats   45   6067 142251 544187  4043/3821/469   16362/2034    52  366   57.87)
ramon: poll                 wall=12.000s usage=12.932s mem=60076KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    17.917   2770001     13578         23            1      280)
ramon: poll                 wall=13.000s usage=13.931s mem=59840KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6178 145819 556622  4122/3847/470   16640/2147    53  368   57.87)
ramon: poll                 wall=14.000s usage=14.927s mem=60184KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.1074   3010001     14754         24            1      305)
(smt.stats   47   6300 148527 569400  4175/3950/470   16843/2147    53  368   57.87)
(smt.stats   48   6434 153826 602651  4185/3973/471   17252/2223    54  371   57.87)
(smt.stats   49   6581 159055 631170  4196/3979/471   17555/2223    54  371   57.97)
ramon: poll                 wall=15.000s usage=15.931s mem=60284KiB load=1.00 rootload=1.00
(smt.stats   50   6742 163523 654792  4234/3985/471   17772/2224    54  371   57.97)
(sat.ddfw       1      1   16.4064   3260001     15980         25            1      330)
(smt.stats   51   6919 169275 688904  4359/4023/471   18259/2228    54  371   58.16)
ramon: poll                 wall=16.000s usage=16.929s mem=60516KiB load=1.00 rootload=1.00
(smt.stats   52   7113 173963 712338  4425/4170/471   18773/2230    54  371   58.26)
(sat.ddfw       1      1   15.6929   3520001     17254         26            1      356)
ramon: poll                 wall=17.000s usage=17.874s mem=60660KiB load=0.94 rootload=0.95
(smt.stats   53   7326 180039 740787  4640/4268/471   19104/2232    54  371   58.36)
(smt.stats   54   7560 186320 790952  4702/4490/472   20038/2567    55  372   58.36)
ramon: poll                 wall=18.000s usage=18.925s mem=60916KiB load=1.05 rootload=1.05
(smt.stats   55   7661 188650 805170  4898/4623/473   20432/2576    55  372   58.45)
(sat.ddfw       1      1   14.9883   3790001     18578         27            1      383)
(smt.stats   56   7772 190517 814620  5041/4707/473   20668/2579    55  372   58.64)
(smt.stats   57   7894 193576 834176  5295/4894/473   21127/2587    55  372   58.64)
(smt.stats   58   8028 197327 860475  5362/5084/473   21675/2795    56  372   58.74)
ramon: poll                 wall=19.000s usage=19.986s mem=61232KiB load=1.06 rootload=1.06
(smt.stats   59   8175 199937 887769  5364/5150/474   22004/2795    56  372   58.74)
(sat.ddfw       1      1   14.4048   4070001     19951         28            1      412)
(smt.stats   60   8336 205052 921361  5417/5194/475   22963/2884    57  375   58.83)
(smt.stats   61   8513 208480 951032  5439/5212/478   24410/2944    58  439   59.46)
ramon: poll                 wall=20.000s usage=21.154s mem=61640KiB load=1.17 rootload=1.17
ramon: end                  Fri Nov  1 22:41:30 2024
ramon: root.execname        z3
ramon: root.utime           21.210s
ramon: root.stime           0.010s
ramon: group.total          21.228s
ramon: group.utime          21.216s
ramon: group.stime          0.012s
ramon: group.mempeak        61896KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.06
