ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:20:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41546 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/SXgU3d2yd2Uu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2968079
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1 := 2 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1 := 2 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1 := 0 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 72057594037927935 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 3 := 2 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 72057594037927935 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 72057594037927934 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 63 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 62 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 60 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 129 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 8 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 16 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 72057594037927935 := 562949953421313 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 16 := 64&567382630220032
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 64&72057594037927808
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 64&72057594037927808
(smt.stats    0    101   4871    590  1329/1203/161      88/18    12   30   19.36)
(smt.stats    1    202   5776   1520  2493/1839/166     190/65    13   31   19.56)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 256&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 256&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 128 := 256&256
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 128 := 256&256
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 128 := 256&256
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 128 := 256&256
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 256 := 256&256
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 256 := 4 << 8
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 256 := 256&72057594037927808
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 144115188075855744 := 2251799813685246 << 8
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
(smt.stats    2    313   8014   3557  2575/2299/184     323/83    15   35   19.96)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 36028797018963968&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 144115188075855873 := 0 << 55
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 36028797018963968&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 144115188075855873 := 0 << 55
(smt.stats    3    414   9047   5141  2773/2484/197     429/104    17   44   20.35)
ramon: poll                 wall=1.000s usage=0.915s mem=21544KiB load=0.92 rootload=0.91
(smt.stats    4    525  11981   9021  2911/2617/221     532/119    22   84   20.44)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&2
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 2 := 2&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 2 := 2 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 2 := 2&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 2 := 2 << 1
(smt.stats    5    647  17370  13760  2968/2666/240     655/125    25   94   20.54)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  23412  21347  2992/2688/240     779/125    25   94   20.63)
(smt.stats    7    859  27373  27685  3029/2710/242     940/141    26   98   20.82)
(smt.stats    8    981  30135  31628  3079/2768/251    1073/155    27  113   20.82)
(smt.stats    9   1115  34439  37290  3117/2776/251    1250/157    27  113   20.92)
(smt.stats   10   1216  39229  43650  3140/2820/253    1334/173    28  138   21.02)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&1125899906842624
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1125899906842624 := 1125899906842624 << 5
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&4539061041759233
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 4539061041759233 := 1125899906842624 << 5
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&4539061041759233
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 4539061041759233 := 1125899906842624 << 5
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 3 := 32&36028797018963968
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 3 := 32&36028797018963968
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&36028797018963968
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 562949953421312 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&36028797018963968
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 562949953421312 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&36028797018963968
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 562949953421312 << 6
(smt.stats   11   1327  44036  51383  3197/2828/253    1464/185    29  140   21.02)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  47344  57481  3219/2902/274    1607/193    31  146   21.11)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&4503599627370508
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2251799813685253 := 2251799813685254 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&4503599627370508
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2251799813685253 := 2251799813685254 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&4503599627370506
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2251799813685252 := 2251799813685253 << 1
(smt.stats   13   1583  50837  62070  3332/2948/274    1792/204    31  146   21.21)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 1 := 1&1125899906842630
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&1125899906842630
band: (band[56] (if (= #115 55) 1 (if #628 2 #736)) (shl[56] (bv2int %1) (+ 56 #739))) 1 := 1&1125899906842630
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&1125899906842630
band: (band[56] (if (= #115 55) 1 (if #628 2 #736)) (shl[56] (bv2int %1) (+ 56 #739))) 1 := 1&1125899906842630
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 1 := 1&2251799813685278
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 1 := 1&2251799813685278
(smt.stats   14   1730  57003  69873  3396/3036/282    1959/231    32  149   21.40)
ramon: poll                 wall=2.000s usage=1.915s mem=22664KiB load=1.00 rootload=0.99
(smt.stats   15   1831  60901  73788  3423/3062/297    2096/245    33  153   21.60)
(smt.stats   16   1942  63473  79607  3479/3136/310    2231/263    35  158   21.60)
(smt.stats   17   2064  67119  84614  3508/3153/310    2373/264    35  158   21.60)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&2251799813685250
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&2251799813685252
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1227230898458460164 := 2 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&2251799813685252
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1227230898458460164 := 2 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&4
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 1 << 2
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&4
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 1 << 2
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&4
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 1 << 2
(smt.stats   18   2198  71733  91789  3552/3165/311    2502/285    36  179   21.60)
(smt.stats   19   2345  75749 100303  3656/3225/316    2655/297    37  180   21.90)
(smt.stats   20   2506  79752 108178  3759/3412/324    2868/302    38  180   22.09)
ramon: poll                 wall=3.000s usage=2.914s mem=23428KiB load=1.00 rootload=1.00
(smt.stats   21   2607  84397 112205  3802/3423/325    3014/316    39  195   22.19)
ramon: poll                 wall=4.000s usage=3.914s mem=23604KiB load=1.00 rootload=1.00
(smt.stats   22   2718  86645 116865  3838/3479/325    3154/318    39  195   22.28)
(smt.stats   23   2840  92248 125388  3921/3512/325    3309/344    40  196   22.38)
(smt.stats   24   2974  95806 131573  4007/3662/326    3521/380    41  197   22.38)
(smt.stats   25   3121 102493 141238  4043/3665/326    3766/382    41  197   22.47)
ramon: poll                 wall=5.000s usage=4.914s mem=24180KiB load=1.00 rootload=1.00
(smt.stats   26   3282 108932 150553  4134/3707/326    3999/382    41  197   22.57)
(smt.stats   27   3459 114721 164358  4169/3824/328    4234/439    42  203   22.67)
(smt.stats   28   3560 118057 170173  4173/3828/328    4372/439    42  203   22.67)
(smt.stats   29   3671 121630 179449  4180/3835/328    4510/454    43  210   22.67)
(smt.stats   30   3793 125885 188195  4241/3840/328    4651/456    43  210   22.76)
(smt.stats   31   3927 129677 198444  4294/3921/328    4843/456    43  210   22.76)
ramon: poll                 wall=6.000s usage=5.912s mem=24184KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 134345 210093  4306/3959/329    4994/479    44  221   22.76)
(smt.stats   33   4235 139469 228960  4314/3967/329    5160/479    44  221   22.86)
(smt.stats   34   4412 144552 255535  4344/3993/329    5374/479    44  221   22.86)
(smt.stats   35   4606 148730 266759  4409/4043/329    5616/479    44  221   23.05)
(smt.stats   36   4707 151285 279710  4428/4060/330    5877/533    45  227   23.15)
(smt.stats   37   4818 155054 307901  4449/4077/330    6009/533    45  227   23.15)
(smt.stats   38   4940 158367 329785  4457/4084/331    6148/546    46  228   23.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 63)
(smt.stats   39   5074 160957 335729  4470/4094/331    6258/546    46  228   23.34)
ramon: poll                 wall=7.000s usage=6.912s mem=24748KiB load=1.00 rootload=1.00
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330736130
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330736130
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330735618
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330735618
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330734014
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589886 := 2251799813685250 << 16
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330734014
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589886 := 2251799813685250 << 16
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330733954
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589826 := 2251799813685250 << 16
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330734014
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589886 := 2251799813685250 << 16
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330733571
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589443 := 2251799813685250 << 16
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330733571
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589443 := 2251799813685250 << 16
(smt.stats   40   5221 164632 346762  4587/4179/347    6437/568    47  231   23.44)
ramon: poll                 wall=8.000s usage=7.912s mem=25084KiB load=1.00 rootload=0.99
(smt.stats   41   5382 165156 348654  4866/4248/354    6610/570    47  231   23.72)
(smt.stats   42   5559 168459 360667  5158/4751/355    6967/573    47  231   23.82)
ramon: poll                 wall=9.000s usage=8.912s mem=25368KiB load=1.00 rootload=1.00
(smt.stats   43   5753 177333 385790  5207/4792/355    7271/663    48  244   23.91)
(smt.stats   44   5966 182472 397296  5330/4856/355    7589/668    48  244   24.01)
(smt.stats   45   6067 186000 405266  5363/4977/355    7760/668    48  244   24.01)
(smt.stats   46   6178 188712 411399  5382/4993/356    7886/715    49  247   24.01)
ramon: poll                 wall=10.000s usage=9.912s mem=25644KiB load=1.00 rootload=1.00
(smt.stats   47   6300 192068 418821  5443/5008/356    8068/717    49  247   24.10)
(smt.stats   48   6434 198036 443717  5496/5103/356    8212/717    49  247   24.20)
(smt.stats   49   6581 201631 456260  5531/5144/358    8522/812    50  250   24.20)
(smt.stats   50   6742 208051 493110  5546/5158/358    8733/812    50  250   24.20)
(smt.stats   51   6919 210794 514040  5578/5190/362    8926/919    51  254   24.30)
ramon: poll                 wall=11.000s usage=10.911s mem=26116KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 217912 527065  5600/5209/362    9164/927    52  255   24.49)
(smt.stats   53   7326 224579 549559  5625/5231/363    9442/927    52  255   24.40)
(smt.stats   54   7560 230505 572305  5629/5244/363    9768/965    53  262   24.49)
(smt.stats   55   7661 232640 584385  5629/5244/363    9913/965    53  262   24.49)
(smt.stats   56   7772 237934 603651  5653/5251/363   10061/965    53  262   24.59)
ramon: poll                 wall=12.005s usage=11.916s mem=26128KiB load=1.00 rootload=1.01
(smt.stats   57   7894 242247 613151  5776/5277/363   10225/966    53  262   24.60)
(smt.stats   58   8028 245468 622080  5812/5427/363   10399/966    53  262   24.60)
(smt.stats   59   8175 250314 639937  5832/5439/363   10587/966    53  262   24.60)
ramon: poll                 wall=13.000s usage=12.911s mem=26160KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8336 257772 661293  5886/5469/364   10846/1036    54  283   24.60)
(smt.stats   61   8513 261324 678911  5913/5513/364   11089/1036    54  283   24.91)
ramon: poll                 wall=14.000s usage=13.911s mem=26496KiB load=1.00 rootload=1.00
(smt.stats   62   8707 266470 692659  6063/5531/364   11321/1037    54  283   25.01)
(smt.stats   63   8920 270720 717541  6127/5686/364   11571/1037    54  283   25.01)
(smt.stats   64   9154 277320 746802  6158/5757/365   11878/1108    55  287   25.10)
(smt.stats   65   9411 279454 762990  6220/5779/365   12261/1108    55  287   25.10)
(smt.stats   66   9512 280728 770998  6243/5849/366   12390/1133    56  290   25.10)
ramon: poll                 wall=15.000s usage=14.911s mem=26676KiB load=1.00 rootload=1.00
(smt.stats   67   9623 282486 783831  6283/5872/366   12541/1133    56  290   25.20)
(smt.stats   68   9745 283840 796157  6295/5900/366   12718/1133    56  290   25.20)
(smt.stats   69   9879 287991 807008  6366/5909/366   12854/1133    56  290   25.39)
(smt.delete-inactive-clauses  :num-deleted-clauses 240)
(smt.stats   70  10026 290638 819447  6400/6011/367   12825/1156    57  291   25.39)
ramon: poll                 wall=16.000s usage=15.910s mem=27204KiB load=1.00 rootload=1.00
(smt.stats   71  10187 295582 834759  6486/6012/367   13040/1159    57  291   25.39)
(smt.stats   72  10364 301476 880914  6563/6107/367   13300/1159    57  291   25.39)
(smt.stats   73  10558 307024 905164  6611/6205/368   13631/1193    58  296   25.49)
(smt.stats   74  10771 313519 934284  6719/6229/371   13893/1193    58  296   25.49)
ramon: poll                 wall=17.000s usage=16.910s mem=27216KiB load=1.00 rootload=1.00
(smt.stats   75  11005 319710 955838  6788/6397/373   14277/1208    59  303   25.68)
(smt.stats   76  11262 328531 992945  6883/6401/373   14653/1212    59  303   25.68)
ramon: poll                 wall=18.000s usage=17.910s mem=27252KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11544 336788 1028756  6933/6512/373   15098/1271    60  327   25.77)
(smt.stats   78  11645 340564 1042499  6948/6553/373   15212/1271    60  327   25.77)
(smt.stats   79  11756 347214 1062258  7001/6561/373   15359/1272    60  327   25.77)
(smt.stats   80  11878 352464 1081059  7056/6619/373   15519/1273    60  327   25.77)
(smt.stats   81  12012 356305 1100338  7077/6682/373   15785/1273    60  327   25.87)
ramon: poll                 wall=19.000s usage=18.908s mem=27360KiB load=1.00 rootload=1.00
(smt.stats   82  12159 362667 1118663  7092/6689/373   15967/1275    60  327   25.87)
(smt.stats   83  12320 365960 1127727  7150/6708/373   16144/1275    60  327   25.87)
(smt.stats   84  12497 370671 1147597  7204/6786/373   16379/1276    60  327   25.87)
ramon: poll                 wall=20.000s usage=19.908s mem=27740KiB load=1.00 rootload=1.00
(smt.stats   85  12691 377612 1170215  7332/6825/373   16681/1277    60  327   25.96)
ramon: end                  Tue Dec 24 15:20:43 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.990s
ramon: group.utime          19.974s
ramon: group.stime          0.016s
ramon: group.mempeak        27996KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.083s
ramon: loadavg              1.00
