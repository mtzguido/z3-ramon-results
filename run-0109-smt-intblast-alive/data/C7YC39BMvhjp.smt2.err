ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:45:51 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42386 MiB
ramon: sys.mem.avail        61714 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/C7YC39BMvhjp.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2850418
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4872   1113  1226/1103/90      97/1     3   13   18.96)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1 := 4&1
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 1 := 102 << 2
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 1 := 102 << 2
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 1 := 36028797018963906 << 2
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 1 := 210 << 2
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 1 := 102 << 2
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 1 := 102 << 2
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1704
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 0 := 213 << 3
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1704
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 0 := 213 << 3
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1704
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 0 := 213 << 3
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1704
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 0 := 213 << 3
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&1704
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 0 := 213 << 3
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1 := 4&56
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4 := 4&56
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4 := 4&56
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2 := 4&56
(smt.stats    1    202   7206   2340  1907/1694/106     191/12     7   21   19.35)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 3 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&24
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 1 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&24
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 4 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&24
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 2 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&24
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 2 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&24
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 4 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&24
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 2 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&24
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 2 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&24
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 2 := 4&24
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&136
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 2 := 4&136
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&136
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 2 := 4&136
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&136
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 1 := 4&136
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&136
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 1 := 4&136
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4&136
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 1 := 4&136
(smt.stats    2    313   9101   4308  1996/1802/172     301/24    11   39   19.64)
(smt.stats    3    414  11735   6627  2026/1828/173     403/24    11   39   19.73)
(smt.stats    4    525  13386   8484  2076/1872/177     518/36    14   47   19.83)
(smt.stats    5    647  18283  13090  2127/1912/181     636/39    15   55   19.94)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4 := 512&56
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2 := 512&56
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2 := 512&56
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 108086391056891960 := 4503599627370496 << 9
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&433
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 108086391056892337 := 4503599627370604 << 9
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&18014398509481208
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 126100789566373112 := 9007199254740796 << 9
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&18014398509481201
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 126100789566373105 := 9007199254740796 << 9
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&18014398509481201
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 126100789566373105 := 9007199254740796 << 9
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&18014398509481201
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 126100789566373105 := 9007199254740796 << 9
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&851073945350144
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 851073945350657 := 106384243166252 << 10
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&851073945350144
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 851073945350657 := 106384243166252 << 10
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&851073945350144
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 851073945350657 := 106384243166252 << 10
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&105656296202240
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 105656296243257 := 105656296243256 << 10
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&105656296257536
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 105656296258049 := 105656296243310 << 10
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  20391  15145  2586/2262/181     756/46    15   55   20.23)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&1276610918002688
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 512 := 512&1276610918002688
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&851073945350144
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 512 := 512&851073945350144
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&851073945350144
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 512 := 512&851073945350144
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 512&851073945350144
band: (band[54] (if (= #120 53) 1 (if #569 2 #673)) (shl[54] (bv2int %0) (+ 54 #676))) 512 := 512&851073945350144
(smt.stats    7    859  21888  18055  2704/2341/198     888/60    16   58   20.42)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 1024&1134765260469248
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 1024&1134765260469248
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 1024&1134765260469248
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 1024&1134765260469248
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1024 := 1024&1134765260469248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 145249953336325120 := 283691315110010 << 10
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1024 := 1024&1134765260469248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 145249953336325120 := 283691315110010 << 10
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1024 := 1024&1134765260469248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 145249953336325120 := 283691315110010 << 10
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1024 := 1024&1134765260469248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 145249953336325120 := 283691315110010 << 10
(smt.stats    8    981  24120  21885  2784/2512/239    1078/87    18   72   20.51)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 2251799813685248&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 36028797018963977 := 175921860444196 << 51
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 2251799813685248&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 36028797018963977 := 175921860444196 << 51
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 2251799813685248&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 36028797018963977 := 175921860444196 << 51
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 2251799813685248&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 36028797018963977 := 175921860444088 << 51
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 2251799813685248&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 36028797018963977 := 105553116266584 << 51
(smt.stats    9   1115  26178  25698  2886/2588/247    1228/111    20   98   20.70)
(smt.stats   10   1216  30188  31714  2928/2652/248    1347/118    21  104   20.70)
ramon: poll                 wall=1.000s usage=0.999s mem=22212KiB load=1.00 rootload=0.98
(smt.stats   11   1327  32707  34539  3047/2659/248    1497/120    21  104   20.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  34211  36761  3198/2920/254    1659/134    22  107   20.99)
(smt.stats   13   1583  36943  40426  3201/2923/256    1889/134    22  107   20.99)
ramon: poll                 wall=2.000s usage=1.987s mem=22384KiB load=0.99 rootload=0.98
(smt.stats   14   1730  41161  46619  3261/2985/258    2129/164    24  124   21.09)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4503599627370496&1134765260445697
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 271350742902675457 := 35993612646875378 << 52
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4503599627370496&1134765260445697
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 271350742902675457 := 35993612646875378 << 52
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4503599627370496&1134765260445697
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 271350742902675457 := 35993612646875378 << 52
(smt.stats   15   1831  44411  53733  3348/3008/261    2263/183    25  127   21.20)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4503599627370496&1134765260445697
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 271350742902675457 := 35993612646875270 << 52
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 4503599627370496&1134765260445697
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 271350742902675457 := 35993612646875270 << 52
(smt.stats   16   1942  45514  56713  3510/3082/267    2429/185    25  127   21.49)
(smt.stats   17   2064  49931  64502  3526/3241/268    2665/185    25  127   21.49)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4 := 9007199254740992&17064420463081467
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4 := 9007199254740992&17064420463081467
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 9007199254740992&17064420463081467
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 9007199254740992&17064420463081467
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 9007199254740992&14495961300599810
(smt.stats   18   2198  52749  69365  3653/3370/290    2850/264    26  136   21.49)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 9007199254740992&17064420463084546
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 9007199254740992&17064420463084546
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 9007199254740992 := 9007199254740992&17064420463084546
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 35078818972566530 := 35149187716743168 << 53
(smt.stats   19   2345  57002  78548  3668/3380/291    2994/281    27  139   21.60)
ramon: poll                 wall=3.000s usage=2.986s mem=22944KiB load=1.00 rootload=1.00
(smt.stats   20   2506  62557  90679  3708/3424/292    3195/283    28  141   21.60)
(smt.stats   21   2607  66525  98810  3721/3430/292    3313/283    28  141   21.70)
(smt.stats   22   2718  71263 107170  3732/3451/293    3445/309    29  146   21.70)
(smt.stats   23   2840  73616 112235  3871/3451/293    3605/313    29  146   21.79)
(smt.stats   24   2974  75656 115832  3957/3593/294    3814/315    29  146   21.79)
(smt.stats   25   3121  79296 124040  3976/3684/294    4036/327    30  148   21.89)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 256&17848135104003078
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 53876932122967046 := 35967224367833094 << 8
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 256&17848135104003078
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 53876932122967046 := 35967224367833094 << 8
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 256&17983612183966742
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 54012409202930710 := 35967224367890442 << 8
ramon: poll                 wall=4.000s usage=3.986s mem=23300KiB load=1.00 rootload=1.00
(smt.stats   26   3282  81620 130115  4198/3715/294    4265/330    30  148   22.08)
(smt.stats   27   3459  84894 135664  4509/3935/299    4583/387    31  149   22.27)
(smt.stats   28   3560  86688 140640  4587/4300/299    4709/387    31  149   22.27)
(smt.stats   29   3671  91233 154768  4596/4313/299    4859/420    32  149   22.27)
(smt.stats   30   3793  97609 171538  4603/4320/300    5022/447    33  155   22.27)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 32&24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 5764607523034234904 := 8936830510596348 << 5
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 32&24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 5764607523034234904 := 8936830510596240 << 5
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 32&24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 5764607523034234904 := 8936830510597320 << 5
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 32&24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 5764607523034234904 := 8936830510597320 << 5
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 32&24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 5764607523034234904 := 8936830510597320 << 5
(smt.stats   31   3927 102441 184596  4639/4325/301    5193/455    34  166   22.47)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8 := 8&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 270215977642229769 := 8936830510628968 << 3
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8 := 8&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 270215977642229768 := 8936830510628968 << 3
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8 := 8&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 252201579132747785 := 8936830510628968 << 3
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8 := 8&9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 252201579132747785 := 8936830510628968 << 3
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 104718 191344  4697/4369/306    5431/459    34  166   22.47)
ramon: poll                 wall=5.000s usage=4.986s mem=24060KiB load=1.00 rootload=1.00
(smt.stats   33   4235 108147 197898  4724/4435/311    5637/474    35  168   22.47)
(smt.stats   34   4412 113829 210777  4731/4442/315    5883/492    36  171   22.56)
(smt.stats   35   4606 118382 220824  4738/4449/315    6239/492    36  171   22.77)
(smt.stats   36   4707 122927 236537  4747/4454/315    6365/538    37  184   22.77)
(smt.stats   37   4818 127788 252242  4755/4466/315    6469/538    37  184   22.77)
(smt.stats   38   4940 132486 269955  4765/4471/315    6663/538    37  184   22.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 13)
(smt.stats   39   5074 136256 275861  4770/4481/315    6799/538    37  184   22.77)
(smt.stats   40   5221 142671 295392  4776/4487/315    7083/538    37  184   22.77)
(smt.stats   41   5382 147015 309993  4839/4515/317    7334/608    38  187   22.86)
ramon: poll                 wall=6.000s usage=5.986s mem=24268KiB load=1.00 rootload=1.00
(smt.stats   42   5559 148373 313139  5150/4860/319    7577/608    38  187   23.05)
ramon: poll                 wall=7.000s usage=6.986s mem=24436KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.985s mem=24760KiB load=1.00 rootload=1.00
(smt.stats   43   5753 153760 325699  5429/5033/321    8008/609    38  187   23.25)
ramon: poll                 wall=9.000s usage=8.984s mem=24848KiB load=1.00 rootload=0.99
(smt.stats   44   5966 157279 335371  5743/5453/324    8391/649    39  203   23.34)
(smt.stats   45   6067 160024 342148  5762/5469/324    8550/649    39  203   23.34)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2048 := 9007199254740992&4097
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4096 := 9007199254740992&6145
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8192 := 9007199254740992&10241
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 16384 := 9007199254740992&18433
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 32768 := 9007199254740992&34817
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 65536 := 9007199254740992&67585
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 131072 := 9007199254740992&133121
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 262144 := 9007199254740992&264193
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 524288 := 9007199254740992&526337
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 65536 := 9007199254740992&133121
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 131072 := 9007199254740992&133121
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 524288 := 9007199254740992&526337
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1048576 := 9007199254740992&1050625
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2097152 := 9007199254740992&2099201
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4194304 := 9007199254740992&4196353
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8388608 := 9007199254740992&8390657
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 16777216 := 9007199254740992&16779265
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 33554432 := 9007199254740992&33556481
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 67108864 := 9007199254740992&67110913
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 134217728 := 9007199254740992&134219777
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2097152 := 9007199254740992&2099201
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2097152 := 9007199254740992&2099201
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4194304 := 9007199254740992&4196353
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8388608 := 9007199254740992&8390657
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 16777216 := 9007199254740992&16779265
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 33554432 := 9007199254740992&33556481
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 67108864 := 9007199254740992&67110913
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 134217728 := 9007199254740992&134219777
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 268435456 := 9007199254740992&268437505
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 536870912 := 9007199254740992&536872961
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1073741824 := 9007199254740992&1073743873
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2147483648 := 9007199254740992&2147485697
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4294967296 := 9007199254740992&4294969345
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8589934592 := 9007199254740992&8589936641
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 17179869184 := 9007199254740992&17179871233
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 34359738368 := 9007199254740992&34359740417
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 68719476736 := 9007199254740992&68719478785
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 137438953472 := 9007199254740992&137438955521
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 274877906944 := 9007199254740992&274877908993
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 549755813888 := 9007199254740992&549755815937
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1099511627776 := 9007199254740992&1099511629825
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2199023255552 := 9007199254740992&2199023257601
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4398046511104 := 9007199254740992&4398046513153
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8796093022208 := 9007199254740992&8796093024257
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 17592186044416 := 9007199254740992&17592186046465
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 35184372088832 := 9007199254740992&35184372090881
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 17592186044416 := 9007199254740992&17592186046465
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 35184372088832 := 9007199254740992&35184372090881
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 70368744177664 := 9007199254740992&70368744179713
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 35184372088832 := 9007199254740992&35184372090881
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 70368744177664 := 9007199254740992&70368744179713
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 140737488355328 := 9007199254740992&140737488357377
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 281474976710656 := 9007199254740992&281474976712705
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1048576 := 9007199254740992&2097153
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1048576 := 9007199254740992&1050625
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 131072 := 9007199254740992&133121
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 131072 := 9007199254740992&133121
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 131072 := 9007199254740992&133121
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 524288 := 9007199254740992&526337
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 262144 := 9007199254740992&526337
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 65536 := 9007199254740992&131073
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2097152 := 9007199254740992&2099201
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4194304 := 9007199254740992&4196353
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8388608 := 9007199254740992&8390657
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8388608 := 9007199254740992&8390657
(smt.stats   46   6178 161871 349646  5969/5634/475    8762/679    40  213   24.08)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2097152 := 9007199254740992&2099201
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4194304 := 9007199254740992&4196353
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4194304 := 9007199254740992&4196353
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4194304 := 9007199254740992&4196353
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4194304 := 9007199254740992&4196353
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 33554432 := 9007199254740992&33556481
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 134217728 := 9007199254740992&134219777
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 134217728 := 9007199254740992&134219777
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8589934592 := 9007199254740992&8589936641
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 17179869184 := 9007199254740992&17179871233
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 34359738368 := 9007199254740992&34359740417
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 68719476736 := 9007199254740992&68719478785
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 274877906944 := 9007199254740992&274877908993
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 549755813888 := 9007199254740992&549755815937
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1099511627776 := 9007199254740992&1099511629825
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2199023255552 := 9007199254740992&2199023257601
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4398046511104 := 9007199254740992&4398046513153
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4398046511104 := 9007199254740992&4398046513153
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2199023255552 := 9007199254740992&4398046513153
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2199023255552 := 9007199254740992&8796093022209
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2199023255552 := 9007199254740992&2199023257601
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2199023255552 := 9007199254740992&2199023257601
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1099511627776 := 9007199254740992&2199023257601
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 274877906944 := 9007199254740992&2199023257601
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 274877906944 := 9007199254740992&2199023257601
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8796093022208 := 9007199254740992&8796093024257
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8796093022208 := 9007199254740992&8796093024257
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8796093022208 := 9007199254740992&8796093024257
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8796093022208 := 9007199254740992&8796093024257
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 8796093022208 := 9007199254740992&8796093024257
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 70368744177664 := 9007199254740992&70368744179713
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 140737488355328 := 9007199254740992&140737488357377
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 281474976710656 := 9007199254740992&281474976712705
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 281474976710656 := 9007199254740992&281474976712705
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 140737488355328 := 9007199254740992&140737488357377
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 140737488355328 := 9007199254740992&140737488357377
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 140737488355328 := 9007199254740992&140737488357377
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 281474976710656 := 9007199254740992&281474976712705
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 281474976710656 := 9007199254740992&281474976712705
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 562949953421312 := 9007199254740992&562949953423361
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1125899906842624 := 9007199254740992&1125899906844673
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1125899906842624 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 562949953421312 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 562949953421312 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 562949953421312 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1125899906842624 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1125899906842624 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1125899906842624 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 562949953421312 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 562949953421312 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 562949953421312 := 9007199254740992&1134765260439553
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2251799813685248 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2251799813685248 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2251799813685248 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 70368744177664 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 35184372088832 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 17592186044416 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 549755813888 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 137438953472 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4026531840 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 268435456 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 536870912 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1073741824 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2147483648 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2147483648 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2147483648 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2147483648 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 2147483648 := 9007199254740992&2251799845033985
(smt.stats   47   6301 165780 373442  6098/5803/667    9029/845    42  294   24.36)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1342177280 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1610612736 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1082130432 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 1140850688 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4294967296 := 9007199254740992&2251799845033985
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4503599627370496 := 9007199254740992&4503599627372545
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4503599627370496 := 9007199254740992&5515219585533953
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4503599627370496 := 9007199254740992&5515219585533953
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 4503599627370496 := 9007199254740992&5515219585533953
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 9007199254740992 := 9007199254740992&10192326459518977
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 46221123478482945 := 36008790219182088 << 53
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 9007199254740992 := 9007199254740992&9007199254743040
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 45035996273707008 := 36008790219182088 << 53
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 9007199254740992 := 9007199254740992&9007199254743040
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 45035996273707008 := 36008790219178092 << 53
(smt.stats   48   6435 168226 382583  6193/5864/698    9335/855    42  294   24.56)
(smt.stats   49   6582 171276 389380  6226/5917/708    9480/859    42  294   24.75)
(smt.stats   50   6743 174518 400230  6284/5993/713    9769/1031    43  303   24.84)
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 16384&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 1134907106097364995 := 36028797018963882 << 14
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 16384&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 1134907106097364995 := 36028797018963882 << 14
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 16384&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 1134907106097364995 := 36028797018963882 << 14
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 16384&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 702561541869797383 := 36028797018963882 << 14
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 16384&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #843 #845) 64)) 702561541869797383 := 36028797018963882 << 14
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 16384&18014398508072960
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 15649 := 18014398509481941 << 15
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 16384&18014398508072960
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 15649 := 18014398509481941 << 15
band: (band[54] (if (or #688 #689 #690 #691 #692 #693 #694 #695 #696 #697) 0 (if #698 1 #804)) (shl[64] (* 2 #114) (mod #846 64))) 0 := 16384&18014398508072960
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #116))) 15649 := 18014398509481941 << 15
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6920 181907 416710  6355/5999/713   10099/1050    43  303   25.66)
ramon: poll                 wall=10.000s usage=9.983s mem=27208KiB load=1.00 rootload=0.98
(smt.stats   52   7114 189525 433565  6501/6090/728   10484/1243    44  310   25.85)
ramon: poll                 wall=11.000s usage=10.983s mem=27416KiB load=1.00 rootload=1.00
(smt.stats   53   7327 197614 449198  6830/6515/729   10705/1311    45  350   25.94)
(smt.stats   54   7561 205323 459465  7152/6575/729   10960/1320    45  350   26.04)
ramon: poll                 wall=12.000s usage=11.983s mem=27672KiB load=1.00 rootload=1.00
(smt.stats   55   7662 208296 467141  7287/6927/729   11076/1320    45  350   26.13)
(smt.stats   56   7773 213357 477873  7442/7019/729   11269/1325    45  350   26.13)
(smt.stats   57   7895 220225 491990  7550/7256/730   11437/1425    46  356   26.23)
(smt.stats   58   8029 225130 501435  7610/7273/730   11683/1425    46  356   26.23)
ramon: poll                 wall=13.000s usage=12.974s mem=27800KiB load=0.99 rootload=0.99
(smt.stats   59   8176 231851 521135  7716/7353/730   12110/1427    46  356   26.33)
(smt.stats   60   8337 237198 531075  7947/7487/731   12325/1583    47  357   26.60)
ramon: poll                 wall=14.000s usage=13.974s mem=28264KiB load=1.00 rootload=1.00
(smt.stats   61   8514 241669 545096  8128/7834/732   12621/1584    47  357   26.69)
(smt.stats   62   8708 248540 568274  8263/7860/734   12880/1586    47  357   26.79)
(smt.stats   63   8921 254853 587204  8407/7999/734   13220/1660    48  374   26.88)
ramon: poll                 wall=15.000s usage=14.973s mem=28348KiB load=1.00 rootload=1.00
(smt.stats   64   9155 260291 609205  8595/8193/734   13539/1662    48  374   26.88)
(smt.stats   65   9412 265275 625150  8821/8361/734   13973/1671    48  374   26.98)
(smt.stats   66   9513 267490 633037  8840/8544/735   14180/1854    49  384   26.98)
(smt.stats   67   9624 273819 642269  8869/8559/735   14305/1855    49  384   27.07)
ramon: poll                 wall=16.000s usage=15.973s mem=28580KiB load=1.00 rootload=1.00
(smt.stats   68   9746 282906 681492  8896/8602/735   14606/1855    49  384   27.07)
(smt.stats   69   9880 294799 737075  8902/8608/738   14740/1965    50  387   27.07)
(smt.delete-inactive-clauses  :num-deleted-clauses 473)
(smt.stats   70  10027 299395 760573  8907/8613/739   14505/1976    51  392   27.07)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   71  10188 309152 795519  8925/8627/739   14781/1978    51  392   27.17)
(smt.stats   72  10365 319306 826093  8936/8642/740   14946/2074    52  401   27.26)
ramon: poll                 wall=17.000s usage=16.973s mem=28852KiB load=1.00 rootload=1.00
(smt.stats   73  10560 326689 855401  8956/8662/741   15222/2071    53  410   27.26)
(smt.stats   74  10773 333389 874894  9137/8704/743   15599/2106    54  412   27.36)
ramon: poll                 wall=18.000s usage=17.973s mem=28992KiB load=1.00 rootload=1.00
(smt.stats   75  11007 340863 891175  9467/9173/746   16092/2112    54  412   27.46)
(smt.stats   76  11264 353709 931666  9600/9195/746   16624/2166    55  417   27.46)
ramon: poll                 wall=19.000s usage=18.973s mem=29308KiB load=1.00 rootload=1.00
(smt.stats   77  11546 364544 967716  9716/9366/746   17143/2180    55  417   27.72)
(smt.stats   78  11647 370418 989482  9726/9432/747   17251/2309    56  419   27.72)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11758 374846 1010950  9736/9442/751   17388/2344    57  431   27.72)
(smt.stats   80  11880 381504 1037654  9741/9447/751   17527/2344    57  431   27.82)
(smt.stats   81  12014 385829 1054041  9807/9458/752   17710/2349    58  444   27.95)
ramon: poll                 wall=20.000s usage=19.972s mem=29640KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:46:11 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.040s
ramon: group.total          19.980s
ramon: group.utime          19.936s
ramon: group.stime          0.044s
ramon: group.mempeak        29896KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
