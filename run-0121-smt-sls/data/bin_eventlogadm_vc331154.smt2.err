ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:20:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27850 MiB
ramon: sys.mem.avail        62136 MiB
ramon: sys.nprocs           1208
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_eventlogadm_vc331154.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1323625
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
tabu (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948))
failed to commit (if (and (bvsle bv[4294967295:32] #6889) (not #13650)) (bvadd bv[1:32] (if #11955 #6674 v142807948)) (if (and #9469 #11954) (bvadd bv[1:32] v142807948) v142807948)) 1 ev: 0 fix:ffffffff [1, 2[
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      45     25   141.507     10047         0          0          110      819)
(sat.ddfw      36     34   102.814     20020         0          1          107      968)
(sat.ddfw      25    117   131.605     40024         0          2           99     1141)
(sat.ddfw      25    408   124.933     70008         0          3           73     1356)
(sat.ddfw      12    293    107.04    110041         0          4           59     1629)
(sat.ddfw       9    421   84.4544    160038         0          5           69     1850)
(sat.ddfw       9   1025   75.9329    220025         1          6           63     2250)
ramon: poll                 wall=1.000s usage=0.999s mem=21324KiB load=1.00 rootload=0.99
(sat.ddfw       9   1025    67.871    290000         1          7           15     2402)
(sat.ddfw       3    117   59.1723    370001         3          8           42     2862)
(sat.ddfw       3   1025   52.8163    460000         3          9           21     3294)
ramon: poll                 wall=2.000s usage=1.999s mem=21324KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   43.3114    560006         5         10           11     3578)
ramon: poll                 wall=3.004s usage=3.003s mem=21324KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   32.1441    670003         6         11            6     3597)
ramon: poll                 wall=4.000s usage=3.998s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.998s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.998s mem=21324KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   19.8576    790042         6         12           53     3705)
ramon: poll                 wall=7.000s usage=6.998s mem=21324KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   16.9282    920000         8         13           12     4019)
ramon: poll                 wall=8.000s usage=7.997s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=21324KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   14.5621   1060000         9         14            3     4228)
ramon: poll                 wall=10.000s usage=9.997s mem=21324KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   13.9782   1210000        10         15           12     4761)
ramon: poll                 wall=11.000s usage=10.997s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.997s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.996s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.996s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.996s mem=21324KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   10.6645   1370000        12         16            8     4888)
ramon: poll                 wall=16.000s usage=15.996s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.996s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.004s usage=18.000s mem=21324KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.995s mem=21324KiB load=1.00 rootload=1.00
(sat.ddfw       1   1025   8.79877   1540001        13         17           58     5175)
ramon: poll                 wall=20.004s usage=19.998s mem=21580KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:20:56 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.000s
ramon: group.utime          19.996s
ramon: group.stime          0.004s
ramon: group.mempeak        21580KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
