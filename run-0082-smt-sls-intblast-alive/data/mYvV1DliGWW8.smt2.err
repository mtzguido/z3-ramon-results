ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:04:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27475 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mYvV1DliGWW8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             918708
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   78.7402     10000        49          0            1        2)
(sat.ddfw       1      1   39.2196     20001        98          1            1        3)
(smt.stats    0    101   6231    439  1356/1221/98     100/25     6   17   52.16)
(smt.stats    1    202   8560   3835  2132/1922/99     197/25     7   18   52.35)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 285&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 285&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 289&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1 := 286&1023
(sat.ddfw       1      1   38.4615     40001       196          2            1        5)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 286&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 288&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4 := 292&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16 := 320&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 64 := 384&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 128 := 512&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 128 := 512&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 128 := 640&1023
(smt.stats    2    313   9958   5277  2303/1947/100     365/40     8   19   52.75)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 100 := 390&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 102 := 390&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 23 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 23 := 347&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 19 := 347&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 19 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 19 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 19 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 23 := 351&1023
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 23 := 351&1023
(smt.stats    3    414  11531   8113  2406/2198/214     628/116    10   43   52.86)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 384&1
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423872 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 384&1
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423872 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 320&1
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423808 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 320&1
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423808 := 1 << 1
(smt.stats    4    525  12619  10139  2445/2223/225     843/218    11   84   53.34)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 3 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 3 := 1 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1 := 2&1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 1 := 2&1
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 2&1
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 1 := 2&1
(smt.stats    5    647  14499  13081  2565/2327/247     992/254    13   96   53.44)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 98&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 34 := 98&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 66 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 66 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 66 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 66 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423554 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 66 := 66&4503599627370495
shl: (shl[64] (bv2int %0) (mod (+ #99 #404) 64)) 576460752303423554 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 2 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 102 := 52 << 52
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 102 := 52 << 52
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  17074  17397  2711/2446/259    1163/294    15   98   53.63)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 1 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 2 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 4503599627370495 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 4503599627370494 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 4503599627370492 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 8 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 16 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 32 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 64 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 128 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 256 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 512 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 1024 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 2048 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 4096 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 8192 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 144 := 234187180623265792&4503599627370495
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 234187180623265792&4503599627370495
band: (band[59] (shl[59] (bv2int %0) (mod #99 59)) (if (= #627 58) 1 (if #629 3 #795))) 144 := 234187180623265792&4503599627370495
(sat.ddfw       1      1     35.17     70001       343          3            1        8)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 1024 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 2048 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4096 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8192 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16384 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 32768 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 65536 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 2048 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4096 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8192 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16384 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 32768 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 65536 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 131072 := 238690780250636288&9007199254740991
(smt.stats    7    859  18876  21412  2943/2631/384    1326/307    17  127   54.28)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 64512 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 32768 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 32768 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 2048 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4096 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8192 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16384 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 16384 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 5888 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 5632 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 5632 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 4608 := 238690780250636288&9007199254740991
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8448 := 238690780250636288&9007199254740991
ramon: poll                 wall=1.000s usage=0.826s mem=56492KiB load=0.83 rootload=0.81
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 8448 := 238690780250636288&9007199254740991
(smt.stats    8    981  20449  26147  3447/2799/453    1692/406    18  143   54.48)
(smt.stats    9   1115  24083  33928  3526/3225/464    1982/537    21  189   54.68)
(sat.ddfw       1      1   30.0075    110001       539          4            1       12)
(smt.stats   10   1216  30544  47480  3531/3230/465    2130/566    22  208   54.89)
(smt.stats   11   1327  34463  58356  3608/3288/470    2320/591    24  220   55.06)
(smt.stats   12   1449  37933  66345  3656/3335/479    2455/678    27  250   55.54)
ramon: poll                 wall=2.000s usage=1.694s mem=57800KiB load=0.87 rootload=0.87
(sat.ddfw       1      1   24.4494    160000       784          5            1       17)
(smt.stats   13   1583  43624  79668  3682/3359/482    2812/678    27  250   55.65)
(smt.stats   14   1730  48816  93901  3713/3364/482    3078/832    28  265   55.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   15   1831  51618 101912  3819/3402/482    3285/834    28  265   55.75)
(sat.ddfw       1      1   22.3384    220001      1078          6            1       23)
(smt.stats   16   1942  54765 110273  3904/3501/482    3721/839    28  265   55.85)
ramon: poll                 wall=3.000s usage=2.681s mem=58144KiB load=0.99 rootload=0.98
(smt.stats   17   2064  58991 119086  3974/3607/485    4080/919    29  266   56.04)
(sat.ddfw       1      1   20.3134    290001      1421          7            1       30)
(smt.stats   18   2198  62988 131502  4066/3740/486    4389/1006    31  270   56.13)
ramon: poll                 wall=4.000s usage=3.681s mem=58396KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.4928    370001      1813          8            1       38)
(smt.stats   19   2345  68502 144156  4204/3750/486    4732/1012    31  270   56.32)
ramon: poll                 wall=5.000s usage=4.681s mem=58940KiB load=1.00 rootload=1.00
(smt.stats   20   2506  73071 157060  4277/3955/490    5180/1172    32  270   56.83)
(smt.stats   21   2607  77406 171661  4279/3957/490    5335/1172    32  270   56.83)
(sat.ddfw       1      1   16.9747    460001      2254          9            1       47)
(smt.stats   22   2718  80611 184912  4286/3963/492    5522/1229    33  274   56.83)
(smt.stats   23   2840  86199 201535  4356/4028/495    5791/1248    34  278   57.05)
(smt.stats   24   2974  90817 226698  4383/4061/500    6274/1430    36  280   57.05)
ramon: poll                 wall=6.000s usage=5.683s mem=59448KiB load=1.00 rootload=1.01
(smt.stats   25   3121  98605 247127  4393/4071/500    6494/1430    36  280   57.31)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282 110689 278187  4407/4085/501    6727/1504    38  300   57.31)
(sat.ddfw       1      1   15.6617    560001      2745         10            1       57)
(smt.stats   27   3459 118329 300733  4417/4095/501    7002/1504    38  300   57.41)
(smt.stats   28   3560 123053 310493  4523/4172/503    7201/1514    39  314   57.51)
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 0 := 576460752303423250&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 576460752303423369 := 576460752303423369 << 1
(smt.stats   29   3671 127652 322487  4542/4182/503    7424/1515    39  314   57.60)
(smt.stats   30   3793 131212 335186  4562/4215/505    7588/1529    40  314   57.60)
ramon: poll                 wall=7.000s usage=6.680s mem=59912KiB load=1.00 rootload=0.99
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 7 := 576460752303423371&7
band: (band[59] (shl[64] (bv2int %0) (mod #405 64)) (if (= #814 63) 0 (if #816 1 #943))) 7 := 576460752303423371&7
(smt.stats   31   3927 138672 351613  4602/4237/506    7843/1581    41  325   57.94)
(smt.stats   32   4074 143069 367053  4613/4266/513    8209/1581    41  325   58.04)
(smt.stats   33   4235 151769 390926  4631/4274/513    8370/1639    42  375   58.04)
(sat.ddfw       1      1    14.508    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.680s mem=60236KiB load=1.00 rootload=1.00
(smt.stats   34   4412 156287 400327  4904/4291/513    8663/1645    42  375   58.13)
(smt.stats   35   4606 165563 418744  4938/4591/513    9001/1645    42  375   58.23)
(smt.stats   36   4707 169636 433147  4943/4596/516    9168/1706    43  379   58.47)
(smt.stats   37   4818 173899 448653  4943/4596/516    9301/1706    43  379   58.47)
(sat.ddfw       1      1   13.5074    790001      3872         12            1       80)
(smt.stats   38   4940 177063 463992  4948/4601/517    9678/1740    44  385   58.57)
ramon: poll                 wall=9.000s usage=8.679s mem=60740KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 18)
(smt.stats   39   5074 180291 475362  5052/4658/518    9931/1790    45  393   58.57)
ramon: poll                 wall=10.000s usage=9.679s mem=61160KiB load=1.00 rootload=1.00
(smt.stats   40   5221 185222 488928  5209/4720/518   10401/1799    45  393   58.76)
(sat.ddfw       1      1   12.6214    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.678s mem=61180KiB load=1.00 rootload=1.00
(smt.stats   41   5382 189354 501844  5407/5052/520   10903/1900    46  405   58.85)
(sat.ddfw       1      1   11.8313   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=11.678s mem=61236KiB load=1.00 rootload=1.00
(smt.stats   42   5559 193934 514893  5501/5078/520   11313/1902    46  405   58.95)
ramon: poll                 wall=13.000s usage=12.678s mem=61372KiB load=1.00 rootload=1.00
(sat.ddfw       1      1     11.14   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.676s mem=61528KiB load=1.00 rootload=1.00
(smt.stats   43   5753 201066 534997  5829/5368/521   11703/1908    46  405   59.04)
ramon: poll                 wall=15.000s usage=14.733s mem=61640KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   10.5222   1370001      6715         16            1      139)
(smt.stats   44   5966 209188 558754  6045/5502/521   12525/2009    47  405   59.58)
ramon: poll                 wall=16.000s usage=15.733s mem=61872KiB load=1.00 rootload=1.00
(smt.stats   45   6067 213183 572207  6155/5714/521   12934/2012    47  405   59.77)
ramon: poll                 wall=17.000s usage=16.733s mem=62184KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.97067   1540001      7549         17            1      156)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6178 217922 588934  6290/5943/523   13604/2150    48  405   59.86)
ramon: poll                 wall=18.000s usage=17.732s mem=62228KiB load=1.00 rootload=0.99
(smt.stats   47   6300 225490 613408  6363/5947/523   14174/2152    48  405   59.86)
(smt.stats   48   6434 232057 638395  6460/6043/523   14473/2248    49  409   59.97)
(smt.stats   49   6581 236371 657231  6511/6157/531   15100/2314    50  421   60.06)
ramon: poll                 wall=19.000s usage=18.806s mem=62284KiB load=1.07 rootload=1.08
(sat.ddfw       1      1    9.4702   1720001      8431         18            1      174)
(smt.stats   50   6742 242004 679952  6637/6176/531   15667/2328    50  421   60.06)
ramon: poll                 wall=20.002s usage=19.863s mem=62364KiB load=1.05 rootload=1.06
ramon: end                  Fri Nov  1 23:04:23 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.010s
ramon: group.total          19.921s
ramon: group.utime          19.909s
ramon: group.stime          0.012s
ramon: group.mempeak        62620KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              0.99
