ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:21:41 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31535 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1232
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0IK9MuPoqOeG.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4015480
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.80)
(smt.stats    0    101   4218   1201  1227/1104/95     100/3     4   14   18.98)
(smt.stats    1    202   5816   2814  2078/1858/98     229/3     7   19   19.08)
(smt.stats    2    313   7329   4698  2314/2074/99     388/31     8   20   19.17)
(smt.stats    3    414   9321   7249  2391/2147/99     580/31     8   20   19.17)
(smt.stats    4    525  10465  10539  2510/2258/106    1166/90    10   24   19.37)
(smt.stats    5    647  12286  13578  2544/2277/106    1386/106    11   30   19.37)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  13591  16353  2584/2310/108    1632/139    12   36   19.46)
(smt.stats    7    859  14822  23393  2626/2353/108    1863/143    12   36   19.46)
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 88&3
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 3 := 88&3
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 3 := 88&3
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 88&3
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 2 := 88&3
(smt.stats    8    981  15616  31713  2654/2405/131    2393/194    14   49   19.76)
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 2 := 88&3
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 88&3
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 3 := 88&3
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 3 := 88&3
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 2 := 88&3
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1 := 44&1
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 2 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 2 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 2 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 4 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 8 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 16 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 32 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 64 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 128 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 256 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 512 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1024 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 2048 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 4096 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 8192 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 16384 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 16384 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 4096 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 8192 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 4096 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 4096 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1984 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 128 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 256 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 512 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1024 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1984 := 720896&32767
(smt.stats    9   1115  16409  37015  2756/2483/224    2866/207    15   60   20.17)
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1932 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1928 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1920 := 720896&32767
(smt.stats   10   1216  17246  40162  2857/2604/240    3141/257    16   78   20.36)
(smt.stats   11   1327  20992  48203  2859/2606/240    3486/257    16   78   20.47)
(smt.stats   12   1449  22543  57196  2862/2609/242    3819/358    17   79   20.47)
(smt.stats   13   1583  24289  66452  2863/2610/243    4234/414    18   87   20.57)
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 8 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 8 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 8 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 512 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 512 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 512 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 2048 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1296 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 256 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 4 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 516 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 520 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 528 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 544 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 576 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 528 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 544 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 576 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 640 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 768 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 1024 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 2048 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 4096 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 8192 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 16384 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 8192 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 16384 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 552 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 552 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 548 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 548 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 544 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 544 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 544 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 544 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 512 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 256 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 256 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 256 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 256 := 720896&32767
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 720896&32767
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 512 := 720896&32767
(smt.stats   14   1730  26199  75417  3023/2717/340    4611/425    18   87   21.06)
(smt.stats   15   1831  28485  85475  3057/2767/365    4768/458    19  113   21.19)
(smt.stats   16   1942  29647  92359  3088/2823/380    5063/484    20  113   21.19)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   17   2064  30771 100778  3107/2844/381    5414/887    21  243   21.29)
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 32 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 32 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 12 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 12 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 8 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 8 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 1154 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 1154 := 134217728&67108863
(smt.stats   18   2198  32219 105261  3292/2848/381    5694/911    21  243   21.48)
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 32912 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 32912 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 32912 := 134217728&67108863
(smt.stats   19   2345  36228 119226  3380/3092/391    6059/988    22  245   21.48)
(smt.stats   20   2506  39217 132745  3465/3199/399    6581/1042    23  246   21.58)
(smt.stats   21   2607  42161 144732  3476/3208/399    6968/1113    24  265   21.68)
(smt.stats   22   2718  45643 158929  3479/3211/402    7185/1277    25  269   21.68)
ramon: poll                 wall=1.000s usage=0.995s mem=23048KiB load=1.00 rootload=0.98
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 16 := 1408&63
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 16 := 1408&63
(smt.stats   23   2840  48550 172131  3505/3214/402    7726/1281    26  278   21.77)
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 192 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 192 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 256 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 256 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 128 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 128 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 22528&1023
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 640 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 22528&1023
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 640 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 22528&1023
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 512 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 22528&1023
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 64 := 22528&1023
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 22528&1023
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 64 := 22528&1023
(smt.stats   24   2974  52655 188785  3531/3239/405    8043/1384    27  284   21.98)
(smt.stats   25   3121  55366 200727  3574/3282/415    8462/1385    27  284   22.07)
(smt.stats   26   3282  58466 222679  3612/3324/415    8815/1505    28  299   22.07)
(smt.stats   27   3459  63612 249884  3629/3345/416    9177/1538    29  300   22.07)
(smt.stats   28   3560  65292 263036  3635/3363/416    9414/1538    29  300   22.07)
(smt.stats   29   3671  67789 279801  3645/3363/416    9690/1538    29  300   22.07)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   30   3793  70021 299038  3646/3374/416   10048/1538    29  300   22.17)
(smt.stats   31   3927  72863 317964  3682/3376/416   10352/1540    29  300   22.17)
(smt.stats   32   4074  78782 350946  3688/3416/416   10923/1540    29  300   22.27)
(smt.stats   33   4235  87109 397822  3691/3419/416   11207/1540    29  300   22.49)
ramon: poll                 wall=2.000s usage=1.995s mem=23876KiB load=1.00 rootload=1.00
(smt.stats   34   4412  94710 437438  3692/3420/416   12015/1540    29  300   22.49)
(smt.stats   35   4606 100801 477394  3697/3425/417   12398/1860    30  316   22.58)
(smt.stats   36   4707 104195 502495  3700/3428/418   12761/1875    31  323   22.68)
(smt.stats   37   4818 107856 525972  3701/3429/418   12980/1875    31  323   22.68)
(smt.stats   38   4940 111840 550059  3705/3433/418   13359/1875    31  323   22.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 103)
(smt.stats   39   5074 115640 570650  3706/3434/418   13530/1875    31  323   22.68)
(smt.stats   40   5221 121860 605276  3707/3435/418   13718/1875    31  323   22.78)
(smt.stats   41   5382 129481 646954  3707/3435/418   13981/1875    31  323   22.78)
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1024 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 2048 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 1024 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 1024 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 1024 := 134217728&67108863
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 0 := 134217728&67108863
band: (band[28] (if (= #113 27) 1476395008 (if #531 738197504 #583)) (if (= #590 27) 0 (if #592 1 #665))) 1024 := 134217728&67108863
(smt.stats   42   5559 130831 657756  3954/3436/418   15005/1880    31  323   23.01)
(smt.stats   43   5753 135699 682481  4086/3722/428   15666/1955    32  325   23.11)
ramon: poll                 wall=3.000s usage=2.995s mem=24900KiB load=1.00 rootload=1.00
(smt.stats   44   5966 139783 712488  4422/3833/429   16921/1958    32  325   23.30)
(smt.stats   45   6067 142979 730015  4505/4231/429   17260/2263    33  327   23.30)
(smt.stats   46   6178 146577 752311  4534/4240/429   17819/2264    33  327   23.40)
(smt.stats   47   6300 149622 776630  4549/4271/429   18316/2264    33  327   23.55)
(smt.stats   48   6434 152209 793629  4581/4279/429   18508/2266    33  327   23.55)
(smt.stats   49   6581 154138 823813  4597/4313/431   18738/2699    34  335   23.65)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 156909 860957  4606/4332/433   19100/2774    35  338   23.65)
(smt.stats   51   6919 162350 902520  4630/4349/435   19650/2775    35  338   23.75)
(smt.stats   52   7113 166709 947994  4643/4359/435   19983/2832    36  349   23.75)
(smt.stats   53   7326 171257 995834  4681/4395/436   20824/3130    37  350   23.94)
ramon: poll                 wall=4.000s usage=3.995s mem=25412KiB load=1.00 rootload=1.00
(smt.stats   54   7560 176711 1021041  4689/4415/436   21231/3130    37  350   23.94)
(smt.stats   55   7661 180530 1054849  4690/4416/436   21454/3130    37  350   23.94)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   56   7772 184556 1091105  4695/4416/436   21646/3130    37  350   24.04)
(smt.stats   57   7894 186196 1109145  4713/4436/436   21855/3130    37  350   24.04)
(smt.stats   58   8028 189946 1137776  4727/4445/436   22257/3130    37  350   24.04)
(smt.stats   59   8175 193403 1176641  4733/4453/436   22496/3130    37  350   24.04)
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1024 := 90112&4095
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 1024 := 90112&4095
band: (band[28] (if (= #346 31) 23622320128 (if #412 11811160064 #409)) (if (or #685 #686) 0 (if #687 1 #747))) 2048 := 90112&4095
(smt.stats   60   8336 197032 1214171  4760/4461/436   22848/3131    37  350   24.14)
(smt.stats   61   8513 199750 1237560  4915/4489/436   23396/3133    37  350   24.24)
(smt.stats   62   8707 205564 1267497  5015/4695/436   23825/3134    37  350   24.24)
ramon: poll                 wall=5.000s usage=4.995s mem=25668KiB load=1.00 rootload=1.00
(smt.stats   63   8920 208484 1329455  5114/4763/436   24347/3134    37  350   24.33)
(smt.stats   64   9154 212844 1362550  5153/4846/437   24880/3507    38  351   24.43)
(smt.stats   65   9411 217075 1400750  5238/4951/438   25273/3508    38  351   24.43)
(smt.stats   66   9512 218935 1421317  5243/4969/439   25643/3635    39  360   24.52)
(smt.stats   67   9623 221180 1451506  5250/4970/439   25910/3635    39  360   24.52)
(smt.stats   68   9745 222527 1464245  5251/4977/439   26146/3635    39  360   24.52)
(smt.stats   69   9879 224343 1498288  5251/4977/439   26747/3635    39  360   24.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 83)
(smt.stats   70  10026 227140 1533694  5269/4983/439   27088/3635    39  360   24.62)
(smt.stats   71  10187 228867 1572263  5269/4995/439   27349/3635    39  360   24.79)
(smt.stats   72  10364 232040 1614058  5270/4996/439   27683/3635    39  360   24.79)
ramon: poll                 wall=6.000s usage=5.995s mem=26180KiB load=1.00 rootload=1.00
(smt.stats   73  10558 235763 1655015  5271/4997/439   27999/3635    39  360   24.79)
(smt.stats   74  10771 239223 1712941  5272/4998/439   28304/3635    39  360   24.79)
(smt.stats   75  11005 244045 1782385  5278/5004/439   29063/3635    39  360   24.88)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11262 249084 1833918  5338/5008/439   29444/3637    39  360   24.88)
(smt.stats   77  11544 253216 1886433  5360/5076/440   29863/4032    40  360   24.98)
(smt.stats   78  11645 254424 1912426  5360/5086/440   30008/4032    40  360   24.98)
(smt.stats   79  11756 256811 1950278  5365/5087/440   30429/4032    40  360   24.98)
ramon: poll                 wall=7.000s usage=6.995s mem=26436KiB load=1.00 rootload=1.00
(smt.stats   80  11878 258319 1981446  5377/5092/440   30656/4032    40  360   25.08)
(smt.stats   81  12012 260098 2008386  5387/5107/440   30929/4032    40  360   25.46)
(smt.stats   82  12159 261621 2032652  5388/5114/440   31147/4032    40  360   25.46)
(smt.stats   83  12320 264057 2072718  5393/5114/440   31662/4032    40  360   25.56)
(smt.stats   84  12497 265906 2123166  5395/5121/441   32496/4247    41  367   25.56)
(smt.stats   85  12691 268457 2179920  5396/5122/441   32822/4247    41  367   25.56)
(smt.stats   86  12904 273022 2261026  5397/5123/441   33291/4247    41  367   25.66)
(smt.stats   87  13138 275303 2302073  5402/5125/441   33617/4247    41  367   25.66)
ramon: poll                 wall=8.000s usage=7.995s mem=27072KiB load=1.00 rootload=1.00
(smt.stats   88  13395 278186 2366301  5402/5128/441   33985/4247    41  367   25.75)
(smt.stats   89  13677 281902 2421907  5432/5131/441   34404/4249    41  367   25.75)
(smt.stats   90  13987 285970 2482683  5566/5172/441   35047/4250    41  367   26.23)
(smt.stats   91  14088 286894 2488754  5917/5614/441   35300/4250    41  367   26.13)
ramon: poll                 wall=9.000s usage=8.995s mem=27584KiB load=1.00 rootload=1.00
(smt.stats   92  14199 288396 2504515  5949/5652/441   35529/4250    41  367   26.13)
(smt.stats   93  14321 290017 2524077  6075/5704/441   35731/4251    41  367   26.13)
(smt.stats   94  14455 290871 2543948  6129/5808/442   35961/4499    42  374   26.13)
(smt.stats   95  14602 293914 2594891  6144/5866/442   37052/4499    42  374   26.23)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   96  14763 295356 2616385  6171/5875/442   37438/4500    42  374   26.32)
(smt.stats   97  14940 298241 2647580  6175/5901/442   37787/4500    42  374   26.32)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   98  15134 300462 2669599  6205/5912/442   38238/4501    42  374   26.42)
(smt.stats   99  15347 303655 2725720  6239/5944/443   38638/4628    43  374   26.42)
(smt.stats  100  15581 307501 2787472  6287/5965/443   39041/4629    43  374   26.42)
ramon: poll                 wall=10.000s usage=9.995s mem=28096KiB load=1.00 rootload=1.00
(smt.stats  101  15838 314840 2872124  6299/6025/443   39729/4629    43  374   26.52)
(smt.stats  102  16120 320373 2939117  6602/6029/443   40495/4634    43  374   26.62)
(smt.stats  103  16430 322107 2960068  7127/6427/443   41285/4636    43  374   27.02)
(smt.stats  104  16770 331636 3051594  7137/6863/443   42337/4636    43  374   27.12)
(smt.stats  105  16871 334588 3077989  7165/6863/443   42588/4636    43  374   27.12)
ramon: poll                 wall=11.004s usage=11.003s mem=28608KiB load=1.00 rootload=1.00
(smt.stats  106  17104 338855 3139383  7199/6899/443   43330/4636    43  374   27.21)
(smt.stats  107  17238 341177 3176742  7271/6967/443   43579/4636    43  374   27.31)
(smt.stats  108  17385 343858 3225115  7271/6983/443   43839/4636    43  374   27.31)
(smt.stats  109  17546 346280 3263640  7307/6986/443   44435/4636    43  374   27.31)
(smt.stats  110  17723 350259 3321969  7313/7024/443   44842/4636    43  374   27.41)
(smt.stats  111  17917 354361 3399821  7345/7048/443   46128/4636    43  374   27.60)
(smt.stats  112  18130 357107 3465857  7351/7054/443   46881/4636    43  374   27.60)
ramon: poll                 wall=12.000s usage=11.995s mem=29120KiB load=1.00 rootload=0.99
(smt.stats  113  18364 359373 3494310  7364/7054/443   47245/4636    43  374   27.70)
(smt.stats  114  18621 361285 3540346  7371/7069/443   47597/4636    43  374   27.70)
(smt.stats  115  18903 364599 3586423  7384/7077/443   47938/4636    43  374   27.70)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  116  19213 367866 3629537  7393/7092/443   48457/4636    43  374   27.70)
(smt.stats  117  19553 373230 3711948  7394/7097/443   49202/4636    43  374   27.81)
ramon: poll                 wall=13.000s usage=12.995s mem=29376KiB load=1.00 rootload=1.00
(smt.stats  118  19926 379694 3835243  7435/7104/443   49872/4637    43  374   27.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 77)
(smt.stats  119  20027 381583 3864989  7436/7138/443   50018/4637    43  374   27.91)
(smt.stats  120  20138 385249 3918942  7436/7138/443   50227/4637    43  374   27.91)
(smt.stats  121  20260 387094 3957270  7436/7138/443   50476/4637    43  374   27.91)
(smt.stats  122  20394 388576 3984154  7440/7138/443   50744/4637    43  374   27.91)
(smt.stats  123  20541 390338 4020146  7444/7146/443   51065/4637    43  374   28.03)
(smt.stats  124  20702 391602 4071223  7445/7147/443   51293/4637    43  374   28.03)
(smt.stats  125  20879 395762 4178503  7445/7147/443   51573/4637    43  374   28.03)
(smt.stats  126  21073 398250 4197623  7551/7147/443   52111/4637    43  374   28.12)
ramon: poll                 wall=14.000s usage=13.995s mem=29632KiB load=1.00 rootload=1.00
(smt.stats  127  21286 404242 4269883  7705/7312/443   52793/4639    43  374   28.22)
(smt.stats  128  21520 407217 4306748  7913/7434/443   53527/4641    43  374   28.31)
(smt.stats  129  21777 412665 4432085  7942/7644/443   53899/4641    43  374   28.31)
(smt.stats  130  22059 416892 4519810  7960/7646/443   54364/4641    43  374   28.41)
ramon: poll                 wall=15.000s usage=14.995s mem=29888KiB load=1.00 rootload=1.00
(smt.stats  131  22369 420727 4581877  7986/7664/443   54765/4641    43  374   28.41)
(smt.stats  132  22709 424083 4649451  8021/7707/443   55195/4641    43  374   28.41)
(smt.stats  133  23082 426725 4702724  8055/7738/443   55631/4641    43  374   28.51)
(smt.stats  134  23492 429682 4820542  8065/7758/443   56171/4641    43  374   28.51)
(smt.stats  135  23593 430507 4837454  8071/7766/443   56286/4641    43  374   28.51)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  136  23704 431972 4863531  8080/7775/443   56418/4641    43  374   28.60)
(smt.stats  137  23826 432684 4886571  8085/7779/443   56546/4641    43  374   28.60)
ramon: poll                 wall=16.000s usage=15.995s mem=30144KiB load=1.00 rootload=1.00
(smt.stats  138  23960 433809 4910901  8085/7783/443   56699/4641    43  374   28.60)
(smt.stats  139  24107 434950 4935106  8089/7787/443   56925/4641    43  374   28.60)
(smt.stats  140  24268 437899 4994532  8096/7787/443   57177/4641    43  374   28.60)
(smt.stats  141  24445 439379 5048684  8102/7794/443   57396/4642    43  374   28.60)
(smt.stats  142  24639 439930 5064623  8102/7800/444   57630/6232    44  376   28.70)
(smt.stats  143  24852 441119 5094311  8150/7805/444   57870/6233    44  376   28.70)
(smt.delete-inactive-clauses  :num-deleted-clauses 277)
(smt.stats  144  25086 443303 5183901  8151/7849/444   57832/6233    44  376   28.70)
(smt.stats  145  25343 446411 5275479  8197/7849/444   58309/6233    44  376   28.70)
ramon: poll                 wall=17.000s usage=16.994s mem=30400KiB load=1.00 rootload=1.00
(smt.stats  146  25625 449988 5378178  8213/7903/444   58648/6233    44  376   28.70)
(smt.stats  147  26275 457214 5586881  8276/7911/444   60048/6234    44  376   28.89)
ramon: poll                 wall=18.000s usage=17.994s mem=30400KiB load=1.00 rootload=1.00
(smt.stats  148  26648 462538 5729038  8286/7976/444   60659/6234    44  376   28.89)
(smt.stats  149  27058 467367 5837141  8365/7987/444   61243/6235    44  376   29.11)
(smt.stats  150  27508 472765 5915472  8379/8072/444   61782/6235    44  376   29.35)
(smt.stats  151  27609 473466 5930252  8381/8079/444   61925/6235    44  376   29.35)
(smt.stats  152  27720 474005 5942052  8381/8079/444   62042/6235    44  376   29.35)
(smt.stats  153  27842 474948 5986369  8391/8079/444   62189/6235    44  376   29.35)
(smt.stats  154  27976 476435 6032908  8407/8089/444   62492/6235    44  376   29.35)
ramon: poll                 wall=19.000s usage=18.994s mem=30912KiB load=1.00 rootload=1.00
(smt.stats  155  28123 478497 6062523  8537/8107/444   62748/6238    44  376   29.56)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  156  28284 481310 6095265  8639/8287/444   62968/6238    44  376   29.56)
(smt.stats  157  28461 483699 6122140  8806/8352/444   63421/6239    44  376   29.65)
(smt.stats  158  28655 485621 6155738  8863/8520/444   63744/6240    44  376   29.65)
(smt.stats  159  28868 487696 6188548  8896/8574/444   64022/6240    44  376   29.65)
(smt.stats  160  29102 491079 6277446  8905/8599/444   65136/6240    44  376   29.75)
ramon: poll                 wall=20.000s usage=19.994s mem=31072KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:22:01 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.003s
ramon: group.utime          19.983s
ramon: group.stime          0.020s
ramon: group.mempeak        31328KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
