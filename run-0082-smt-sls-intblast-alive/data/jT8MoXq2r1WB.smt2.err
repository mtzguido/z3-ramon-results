ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:59:22 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27540 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/jT8MoXq2r1WB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             903272
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&1
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&1
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   119.048     10000        49          0            1        2)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&1
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&2
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&8796093022205
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&8796093022204
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&8796093022205
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&8796093022204
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&8796093022200
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&1
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&16
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&7
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&6
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&16
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&4
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 1 := 137438953471&2
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&2
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&2
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&4
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 4 := 137438953471&20
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&20
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 4 := 137438953471&20
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 4 := 137438953471&20
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 4 := 137438953471&20
(smt.stats    0    101   3938    643  1234/1078/177      80/21    12   37   52.27)
(sat.ddfw       1      1   56.1854     20001        98          1            1        3)
(smt.stats    1    202   6514   1516  2120/1875/179     190/29    13   37   52.46)
(smt.stats    2    313  10083   3130  2412/2095/179     302/41    14   38   52.57)
(sat.ddfw       1      1   53.7634     40001       196          2            1        5)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 16 := 2199023255547&21
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 17 := 2199023255547&21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 8796093022229 := 17592186044414 << 40
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 17 := 2199023255547&21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 8796093022229 := 8796093022230 << 40
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 17 := 2199023255547&21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 8796093022229 := 8796093022230 << 40
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 17 := 2199023255547&21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 8796093022229 := 8796093022230 << 40
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 17 := 2199023255547&21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 8796093022229 := 8796093022230 << 40
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 17 := 2199023255547&21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 17592186044437 := 17592186044414 << 40
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 17 := 2199023255547&21
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 17592186044437 := 8796093022210 << 40
(smt.stats    3    415  13119   4871  2548/2329/190     432/59    16   42   52.69)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 24 := 1099511627773&24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 17592186044440 := 8796093022208 << 39
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 24 := 1099511627773&24
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 17592186044440 := 8796093022208 << 39
(smt.stats    4    526  14902   6495  2590/2364/199     533/91    18   55   52.89)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 16 := 8796093022188&18
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 8 := 8796093022188&18
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 8796093022188&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 26388279066642 := 50331648 << 42
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 8796093022188&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 26388279066642 := 16777216 << 42
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 8796093022188&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 26388279066642 := 16777216 << 42
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 8796093022188&18
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 35184372088850 := 16777226 << 42
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 35184372088832 := 16777224 << 36
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 114349209288704 := 16777242 << 36
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 137438953471&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 131941395333120 := 16777246 << 36
(smt.stats    5    648  17507   8061  2661/2421/206     659/100    19   57   52.89)
(sat.ddfw       1      1   44.9775     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    749  18145   8526  2808/2451/211     756/102    20   62   53.08)
ramon: poll                 wall=1.000s usage=0.942s mem=55436KiB load=0.94 rootload=0.93
(sat.ddfw       1      1   37.9507    110001       539          4            1       12)
(smt.stats    7    860  18563   9470  3076/2696/211     867/105    20   62   53.08)
(smt.stats    8    982  20308  12356  3134/2909/217     996/127    22   71   53.18)
(smt.stats    9   1116  26341  16721  3162/2920/217    1130/129    22   71   53.27)
(smt.stats   10   1217  29291  19464  3192/2943/217    1238/131    22   71   53.27)
(smt.stats   11   1328  32430  21956  3269/2997/218    1347/147    23   72   53.38)
(sat.ddfw       1      1   32.4248    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  35983  25170  3295/3057/218    1464/147    23   72   53.38)
(smt.stats   13   1584  39285  28352  3348/3088/219    1599/159    24   74   53.38)
(smt.stats   14   1731  44325  32846  3376/3139/221    1742/168    25   77   53.48)
ramon: poll                 wall=2.000s usage=1.941s mem=55612KiB load=1.00 rootload=1.00
(smt.stats   15   1832  47063  36123  3439/3186/221    1838/171    26   78   53.58)
(smt.stats   16   1943  50382  39684  3574/3292/221    1969/173    26   78   53.69)
(sat.ddfw       1      1   28.2225    220001      1078          6            1       23)
(smt.stats   17   2065  53954  42563  3601/3342/221    2106/173    26   78   53.69)
(smt.stats   18   2199  59433  46879  3604/3369/221    2240/173    26   78   53.69)
(smt.stats   19   2346  63666  52509  3609/3372/222    2394/210    27   78   54.02)
(smt.stats   20   2507  65302  55829  3627/3392/224    2556/210    28   83   54.02)
(smt.stats   21   2608  67259  59562  3629/3392/224    2665/212    28   83   54.02)
(smt.stats   22   2719  69570  65417  3634/3399/226    2787/233    30   90   54.02)
(smt.stats   23   2841  73640  71151  3634/3399/226    2918/233    30   90   54.02)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 4398046511074 := 4398046511094&4398508816610
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 4397744334850 := 4398046511094&4398508816610
(sat.ddfw       1      1        25    290001      1421          7            1       30)
(smt.stats   24   2975  78122  76177  3696/3461/244    3097/249    32   97   54.12)
ramon: poll                 wall=3.000s usage=2.940s mem=56240KiB load=1.00 rootload=1.00
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 1 := 3&65
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823233 := 4473936 << 1
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 1 := 3&64
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 3&64
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823232 := 4473936 << 1
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 3&64
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823232 := 4260882 << 1
(smt.stats   25   3122  84170  82342  3724/3488/250    3249/262    33  100   54.21)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 3&64
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823232 := 4473936 << 1
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 8 := 32767&32
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 8 := 32767&32
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 8 := 32767&32
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 8 := 32767&32
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 4 := 32767&32
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 32 := 32767&32
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823200 := 4260882 << 14
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 48 := 63&48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823216 := 4473936 << 5
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 48 := 63&48
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823216 := 4260882 << 5
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 1 := 7&41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823209 := 4473936 << 2
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 1 := 7&41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823209 := 2236970 << 2
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 1 := 7&41
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823209 := 2236970 << 2
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 8 := 15&40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823208 := 19014186 << 3
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 8 := 15&40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823208 := 19014184 << 3
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 8 := 15&40
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326962823208 := 19014184 << 3
(smt.stats   26   3283  89464  89697  3822/3544/267    3482/281    33  100   54.31)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 8 := 1099511627773&40
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&64
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8668288
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8668224
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&128
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&256
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8668256
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8668672
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8668256
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8668672
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8669184
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8668672
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8668672
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8669184
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8671232
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8669184
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8671232
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8675328
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8669184
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8683520
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8683520
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8716288
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8669184
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8671232
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8683520
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8716288
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8669184
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8669184
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8683520
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8716288
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8781824
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8716288
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8781824
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8683520
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8683520
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8716288
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8781824
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8930368
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8930368
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1099511627773&8930368
(smt.stats   27   3460  92100  93234  4104/3838/389    3877/306    34  106   54.98)
(sat.ddfw       1      1   22.3901    370001      1813          8            1       38)
(smt.stats   28   3561  95697 101205  4125/3847/392    4052/415    35  142   55.21)
(smt.stats   29   3672  97959 107145  4260/3918/392    4240/417    35  142   55.30)
(smt.stats   30   3794 101500 115623  4302/4026/392    4358/492    36  144   55.30)
ramon: poll                 wall=4.002s usage=3.944s mem=57404KiB load=1.00 rootload=1.00
(smt.stats   31   3928 105139 122767  4409/4165/397    4682/636    37  145   55.40)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 108839 127226  4445/4176/397    4888/636    37  145   55.66)
(sat.ddfw       1      1   20.2202    460001      2254          9            1       47)
(smt.stats   33   4236 113193 135125  4611/4362/398    5102/706    38  152   55.76)
(smt.stats   34   4413 116510 146830  4712/4378/398    5370/708    38  152   55.76)
ramon: poll                 wall=5.002s usage=5.160s mem=57916KiB load=1.22 rootload=1.21
(smt.stats   35   4607 119442 153540  5042/4486/398    5779/791    39  155   55.86)
(smt.stats   36   4708 120410 158034  5307/4987/398    5979/791    39  155   56.05)
(sat.ddfw       1      1     18.44    560001      2745         10            1       57)
(smt.stats   37   4819 122605 166592  5918/5341/398    6268/791    39  155   56.05)
ramon: poll                 wall=6.000s usage=6.155s mem=58604KiB load=1.00 rootload=1.00
(smt.stats   38   4941 123938 169552  6029/5694/398    6477/793    39  155   56.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 9)
(smt.stats   39   5075 128087 176838  6239/5930/398    7616/796    39  155   56.25)
(sat.ddfw       1      1   16.8945    670001      3284         11            1       68)
(smt.stats   40   5222 131366 187448  6334/6044/398    7977/800    39  155   56.46)
ramon: poll                 wall=7.000s usage=7.153s mem=58924KiB load=1.00 rootload=0.99
(smt.stats   41   5383 137407 201450  6519/6130/398    9137/806    39  155   56.56)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5560 141223 222122  6575/6329/400   10049/1752    40  160   56.89)
(sat.ddfw       1      1   15.6027    790001      3872         12            1       80)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 16 := 262143&4194432
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 2 := 262143&4194432
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 32 := 262143&4194432
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 262143&4194432
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 64 := 262143&4194432
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 64 := 262143&4194432
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 64 := 262143&4194432
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 128 := 262143&4194432
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326967017600 := 8795845891154 << 17
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 128 := 262143&4194432
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326967017600 := 8795833108514 << 17
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 128 := 262143&4194432
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #801 #805) 64)) 2459572326967017600 := 8795829340298 << 17
(smt.stats   43   5754 146076 246611  6733/6337/402   10594/1766    40  160   57.00)
ramon: poll                 wall=8.000s usage=8.153s mem=59268KiB load=1.00 rootload=1.00
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 130 := 262143&3801346
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 130 := 262143&3801346
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 2 := 262143&3801346
(smt.stats   44   5967 151004 271285  7054/6809/414   11264/2459    42  174   57.09)
(smt.stats   45   6068 152787 289345  7056/6811/415   11519/2459    42  174   57.21)
(smt.stats   46   6179 155663 297464  7091/6814/415   11637/2702    43  178   57.21)
ramon: poll                 wall=9.000s usage=9.153s mem=59344KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   14.5073    920001      4509         13            1       93)
(smt.stats   47   6301 157734 307810  7327/6943/416   11935/2704    43  178   57.40)
ramon: poll                 wall=10.000s usage=10.153s mem=59536KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    13.558   1060001      5196         14            1      108)
(smt.stats   48   6435 160412 324801  7546/7171/416   12147/2820    44  179   57.50)
(smt.stats   49   6582 165909 339652  7563/7318/419   12492/2852    45  190   57.50)
ramon: poll                 wall=11.000s usage=11.153s mem=59932KiB load=1.00 rootload=1.00
(smt.stats   50   6743 171517 380239  7596/7349/420   13041/3016    46  199   57.50)
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1&2199023255552
shl: (shl[43] (bv2int %1) (+ 43 (* 8796093022207 #105))) 764481813 := 5497558138880 << 1
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1&2199023255552
shl: (shl[43] (bv2int %1) (+ 43 (* 8796093022207 #105))) 764481813 := 5497558138880 << 1
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1&2199023255552
band: (band[43] (if (= #109 42) 1 (if #584 3 #702)) (shl[43] (bv2int %1) (+ 43 #705))) 1 := 1&2199023255552
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1&2199023255552
band: (band[43] (if (= #109 42) 1 (if #584 3 #702)) (shl[43] (bv2int %1) (+ 43 #705))) 1 := 1&2199023255552
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1&2199023255552
band: (band[43] (if (= #109 42) 1 (if #584 3 #702)) (shl[43] (bv2int %1) (+ 43 #705))) 1 := 1&2199023255552
band: (band[43] (if (= #335 63) 1 (if #561 3 #794)) (shl[64] (* 2 #318) (mod #809 64))) 0 := 1&2199023255552
band: (band[43] (if (= #109 42) 1 (if #584 3 #702)) (shl[43] (bv2int %1) (+ 43 #705))) 1 := 1&2199023255552
(smt.stats   51   6920 176017 410589  7649/7360/420   13333/3025    46  199   57.59)
(smt.stats   52   7114 179753 437041  7730/7467/438   13875/3492    47  203   57.71)
(sat.ddfw       1      1   12.7216   1210001      5931         15            1      123)
(smt.stats   53   7327 184721 467209  7802/7499/439   14376/3707    48  217   57.81)
ramon: poll                 wall=12.000s usage=12.152s mem=60124KiB load=1.00 rootload=1.00
(smt.stats   54   7561 191293 488381  7923/7653/441   14780/3980    49  218   57.90)
(smt.stats   55   7662 195090 497831  7941/7658/441   14891/3981    49  218   58.00)
ramon: poll                 wall=13.000s usage=13.151s mem=60424KiB load=1.00 rootload=1.00
(smt.stats   56   7773 200906 518361  8019/7719/445   15284/4062    50  231   58.00)
(sat.ddfw       1      1   11.9868   1370001      6715         16            1      139)
(smt.stats   57   7895 202901 526174  8037/7767/445   15624/4062    50  231   58.09)
(smt.stats   58   8029 205217 543096  8064/7780/445   15992/4063    50  231   58.19)
ramon: poll                 wall=14.000s usage=14.151s mem=60764KiB load=1.00 rootload=1.00
(smt.stats   59   8176 208147 551054  8136/7820/445   16189/4067    50  231   58.57)
(smt.stats   60   8337 209031 570581  8153/7879/445   16380/4067    50  231   58.57)
(smt.stats   61   8514 209528 591100  8163/7889/445   16563/4067    50  231   58.57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8708 214794 635114  8169/7895/447   16906/4422    51  232   58.57)
(sat.ddfw       1      1   11.5246   1540001      7549         17            1      156)
(smt.stats   63   8921 224379 701781  8182/7909/456   17335/4631    53  248   58.79)
ramon: poll                 wall=15.000s usage=15.364s mem=60836KiB load=1.21 rootload=1.22
(smt.stats   64   9155 227602 737151  8186/7911/456   17613/4696    54  272   58.79)
ramon: poll                 wall=16.000s usage=16.325s mem=61232KiB load=0.96 rootload=0.95
(smt.stats   65   9412 233907 781768  8383/7917/456   18394/4701    54  272   58.89)
(smt.stats   66   9513 235951 792006  8437/8160/456   18597/4701    54  272   59.00)
(sat.ddfw       1      1    10.803   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=17.125s mem=61084KiB load=0.80 rootload=0.80
(smt.stats   67   9624 240253 807958  8563/8180/456   18893/4705    54  272   59.09)
(smt.stats   68   9746 243487 825215  8637/8356/457   19089/5025    55  273   59.09)
ramon: poll                 wall=18.002s usage=18.005s mem=61420KiB load=0.88 rootload=0.88
(smt.stats   69   9880 247874 857317  8667/8365/457   19228/5026    55  273   59.26)
(smt.delete-inactive-clauses  :num-deleted-clauses 617)
(smt.stats   70  10027 251045 888315  8706/8404/457   19206/5026    55  273   59.37)
(sat.ddfw       1      1   10.0673   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=18.906s mem=61724KiB load=0.90 rootload=0.90
(smt.stats   71  10188 256065 906722  8919/8435/457   19436/5032    55  273   59.37)
(smt.stats   72  10365 260314 956346  8964/8663/457   19725/5032    55  273   59.47)
ramon: poll                 wall=20.000s usage=19.910s mem=61632KiB load=1.00 rootload=1.01
(smt.stats   73  10559 264100 983976  9040/8767/458   20037/5311    56  286   59.47)
ramon: end                  Fri Nov  1 22:59:42 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.968s
ramon: group.utime          19.940s
ramon: group.stime          0.028s
ramon: group.mempeak        62148KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              1.00
