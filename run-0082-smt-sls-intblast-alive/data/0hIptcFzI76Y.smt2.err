ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:27:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29472 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1389
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0hIptcFzI76Y.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             588062
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   75.7576     10000        49          0            1        2)
(smt.stats    0    101   2173   2755  1182/1059/97      93/11     4   14   51.94)
(smt.stats    1    202   6145   3818  1831/1644/99     198/18     6   14   52.14)
(smt.stats    2    313   8120   5252  2084/1863/103     313/46     9   18   52.34)
(sat.ddfw       1      1   40.8204     20001        98          1            1        3)
(smt.stats    3    414  10318   7471  2186/1890/103     409/59     9   18   52.43)
(smt.stats    4    525  13273   9774  2356/2112/110     509/75    11   28   52.53)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 281474976710656 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 0 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 0 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 1 := 160&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 160&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 161 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 160&1
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 161 := 5 << 5
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 1 := 160&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 1 := 160&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 160&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (or #598 #599 #600 #601) 0 (if #602 1 #725))) 1 := 160&1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 160&1
band: (band[48] (shl[48] (bv2int %0) (mod #101 48)) (if (or #598 #599 #600 #601) 0 (if #602 1 #725))) 1 := 160&1
(smt.stats    5    647  15914  12251  2406/2149/127     633/81    13   35   52.62)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 128&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 128 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 130&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 130 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 286&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 286 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 64&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 287 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 64&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 288 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 64&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 127 := 4 << 4
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 64&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 65 := 4 << 4
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  17775  15725  2456/2174/142     738/84    14   38   52.72)
(sat.ddfw       1      1    44.843     40001       196          2            1        5)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 17&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 17 := 1 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 15&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 15 := 1 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 3&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 3 := 1 << 1
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 2&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 288 := 1 << 1
(smt.stats    7    859  19628  19709  2500/2228/153     849/87    15   40   52.92)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 2&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 288 := 1 << 1
(smt.stats    8    981  21051  24083  2528/2269/164     965/93    17   47   53.11)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 98&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 281474976710754 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 281474976710655&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 18446744073709551615 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 24&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 3 << 3
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 24&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 3 << 3
(smt.stats    9   1115  23747  30473  2569/2278/164    1102/94    17   47   53.20)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 65&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 281474976710721 := 2 << 2
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 17&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #352) 64)) 281474976710673 := 2 << 2
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 8&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 6 := 2 << 2
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 0 := 8&0
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 6 := 2 << 2
(smt.stats   10   1216  26735  33805  2612/2342/185    1206/98    18   49   53.30)
(smt.stats   11   1327  30145  38986  2632/2361/187    1323/108    20   57   53.60)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 2 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 2 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 8 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 8 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 2 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 10 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 4 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 2 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 10 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 10 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 10 := 25599227866&25599227866
(sat.ddfw       1      1        40     70001       343          3            1        8)
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 42 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 58 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 58 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 90 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 58 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 58 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 90 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 154 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 542 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 538 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 90 := 25599227866&25599227866
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 218 := 25599227866&25599227866
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  31587  42721  2775/2489/298    1430/112    22  141   54.08)
ramon: poll                 wall=1.000s usage=0.874s mem=56512KiB load=0.87 rootload=0.86
(sat.ddfw       1      1    34.662    110001       539          4            1       12)
(smt.stats   13   1583  35497  48210  2843/2521/314    1628/119    22  141   54.36)
(sat.ddfw       1      1   30.1199    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.873s mem=56996KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   26.5374    220001      1078          6            1       23)
(smt.stats   14   1730  38796  54448  3103/2564/316    1783/177    23  175   54.65)
(smt.stats   15   1831  40990  57844  3156/2831/316    1904/197    24  175   54.86)
ramon: poll                 wall=3.000s usage=2.873s mem=57020KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.6088    290001      1421          7            1       30)
(smt.stats   16   1942  43063  63054  3293/3001/317    2110/227    25  176   54.95)
(smt.stats   17   2064  46260  66455  3341/3004/317    2296/236    25  176   55.04)
(sat.ddfw       1      1   21.2145    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.911s mem=57548KiB load=1.04 rootload=1.03
(smt.stats   18   2198  50873  77460  3444/3092/319    2534/327    26  182   55.14)
(sat.ddfw       1      1   19.2308    460001      2254          9            1       47)
(smt.stats   19   2345  55733  84391  3656/3352/323    2795/339    27  194   55.24)
ramon: poll                 wall=5.000s usage=4.916s mem=57580KiB load=1.00 rootload=1.01
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 32 := 549&1525
band: (band[48] (shl[64] (bv2int %0) (mod #353 64)) (if (or #754 #755 #756 #757 #758) 0 (if #759 1 #889))) 32 := 549&1525
(smt.stats   20   2506  58780  92760  3718/3415/333    3106/399    29  208   55.24)
(smt.stats   21   2607  62020  99925  3772/3421/334    3296/407    29  208   55.44)
(sat.ddfw       1      1   17.5871    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.914s mem=57996KiB load=1.00 rootload=1.00
(smt.stats   22   2718  66987 106737  3845/3511/338    3427/458    30  212   55.53)
(sat.ddfw       1      1   16.1693    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.910s mem=58064KiB load=1.00 rootload=0.99
(smt.stats   23   2840  69267 108911  4017/3593/338    3598/477    31  212   55.77)
(smt.stats   24   2974  73016 118670  4243/3941/344    3906/579    32  219   55.87)
(smt.stats   25   3121  78958 126865  4318/3956/344    4269/583    32  219   55.96)
ramon: poll                 wall=8.000s usage=7.877s mem=58220KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   14.9757    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.841s mem=59092KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   13.9291    920001      4509         13            1       93)
(smt.stats   26   3282  80058 129363  4834/4120/344    4450/661    33  233   56.64)
ramon: poll                 wall=10.000s usage=9.844s mem=59372KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   13.0305   1060001      5196         14            1      108)
ramon: poll                 wall=11.002s usage=10.844s mem=59580KiB load=1.00 rootload=1.00
(smt.stats   27   3459  81735 135582  5341/4544/344    4660/664    33  233   56.92)
(smt.stats   28   3560  85425 144178  5362/5060/353    5128/874    34  250   57.02)
(smt.stats   29   3671  89527 154005  5385/5072/353    5281/875    34  250   57.02)
ramon: poll                 wall=12.000s usage=11.841s mem=59624KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   12.2529   1210001      5931         15            1      123)
(smt.stats   30   3793  94918 168649  5433/5131/354    5467/917    35  250   57.18)
(smt.stats   31   3927  98697 181606  5470/5148/354    5794/922    35  250   57.28)
ramon: poll                 wall=13.000s usage=12.844s mem=59652KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   11.5515   1370001      6715         16            1      139)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   32   4074 104170 191864  5545/5217/355    6103/1088    36  251   57.37)
ramon: poll                 wall=14.000s usage=13.844s mem=59740KiB load=1.00 rootload=1.00
(smt.stats   33   4235 109381 205199  5595/5285/358    6385/1145    37  261   57.37)
ramon: poll                 wall=15.000s usage=14.844s mem=60048KiB load=1.00 rootload=1.00
(smt.stats   34   4412 116538 225224  5742/5304/358    6663/1151    37  261   57.47)
(sat.ddfw       1      1   10.9297   1540001      7549         17            1      156)
(smt.stats   35   4606 124006 242552  5792/5473/358    7049/1151    37  261   57.46)
ramon: poll                 wall=16.000s usage=15.839s mem=60460KiB load=0.99 rootload=0.99
(smt.stats   36   4707 128056 250892  5851/5493/358    7368/1151    37  261   57.56)
(smt.stats   37   4818 132071 263170  5886/5557/358    7573/1151    37  261   57.56)
ramon: poll                 wall=17.000s usage=16.837s mem=60252KiB load=1.00 rootload=1.00
(smt.stats   38   4940 136170 281001  5914/5600/358    7967/1151    37  261   57.65)
(smt.delete-inactive-clauses  :num-deleted-clauses 256)
(sat.ddfw       1      1   10.3425   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=17.844s mem=60276KiB load=1.01 rootload=1.01
(smt.stats   39   5074 139865 295616  5989/5616/358    8280/1154    37  261   57.93)
(smt.stats   40   5221 145710 312982  6060/5705/358    8473/1158    37  261   58.03)
ramon: poll                 wall=19.000s usage=18.844s mem=60324KiB load=1.00 rootload=1.00
(smt.stats   41   5382 153853 343720  6088/5773/358    8673/1158    37  261   58.03)
(sat.ddfw       1      1    9.8415   1910001      9362         19            1      193)
(smt.stats   42   5559 158191 365317  6106/5800/362    8982/1577    38  267   58.35)
(smt.stats   43   5753 162417 377568  6182/5824/365    9391/1628    39  281   58.35)
ramon: poll                 wall=20.000s usage=19.841s mem=60860KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 21:28:05 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.010s
ramon: group.total          19.918s
ramon: group.utime          19.906s
ramon: group.stime          0.012s
ramon: group.mempeak        60876KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              0.99
