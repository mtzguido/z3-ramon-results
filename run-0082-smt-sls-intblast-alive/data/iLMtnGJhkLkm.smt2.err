ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:57:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27527 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/iLMtnGJhkLkm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             897678
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3271   4395  1321/1191/90      96/4     3   14   51.94)
(smt.stats    1    203   5343   7953  1551/1398/96     186/10     5   18   52.14)
(smt.stats    2    314   7243   9709  2300/1708/96     297/46     5   18   52.33)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   105.263     10000        49          0            1        2)
(smt.stats    3    415   8767  13009  2690/2421/100     392/75     7   24   52.52)
(smt.stats    4    526   9233  16162  2719/2454/100     502/78     7   24   52.52)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 53 := 53&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 53&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 59&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 56&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 179&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 56&4074372053913782
(smt.stats    5    648  11099  20664  2754/2455/107     620/80     8   25   52.62)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 1376&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 2080&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 4096&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 64&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854775872 := 52 << 52
(sat.ddfw       1      1   52.6368     20001        98          1            1        3)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 4074372053913760&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 3392&4074372053913782
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9223372036854779200 := 3391 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 6048334299558576128&4074372053913782
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 3392 := 3391 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 6048334299558576128&4074372053913782
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 3392 := 3391 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 6048334299558576128&4074372053913782
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 3392 := 3391 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4074372053913781 := 4503599627370496&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4074372053913781 := 72057594037927936&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4074372053913780 := 72057594037927936&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913782 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913780 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913776 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913768 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4074372053913760 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 64 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 128 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 256 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 512 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1024 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2048 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2048 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4096 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 8192 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 16384 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 32768 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 65536 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 131072 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 262144 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 524288 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1048576 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2097152 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4194304 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 8388608 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 16777216 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 33554432 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 67108864 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 134217728 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 268435456 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 536870912 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1073741824 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2147483648 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4294967296 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 8589934592 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 17179869184 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 34359738368 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 68719476736 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 137438953472 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 274877906944 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 549755813888 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 549755813888 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1099511627776 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2199023255552 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 4398046511104 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 8796093022208 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 17592186044416 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 35184372088832 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 70368744177664 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 140737488355328 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 281474976710656 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 562949953421312 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1125899906842624 := 67553994410557440&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 67553994410557440&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 67553994410557440&4074372053913782
(sat.ddfw       1      1   53.3333     40001       196          2            1        5)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 90071992547409920&4074372053913782
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 9223372036854775791 := 2068 << 52
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2251799813685249 := 90071992547409920&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 90071992547409920&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 90071992547409920&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 90071992547409920&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 90071992547409920&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 9169328841326329856&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 9169328841326329856&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 9169328841326329856&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 2251799813685248 := 9169328841326329856&4074372053913782
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  11937  21955  3012/2687/371     772/83     9   33   54.41)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 1125899906842623 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 9169328841326329856&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1125899906842624 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 1125899906842625 := 9169328841326329856&4074372053913782
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 373798769071751168&4074372053913782
band: (band[63] (shl[63] (bv2int %0) (mod #114 63)) (if (= #662 62) 1 (if #664 3 #841))) 1125899906842624 := 373798769071751168&4074372053913782
(smt.stats    7    860  16496  26352  3037/2712/376     888/83     9   33   54.50)
(smt.stats    8    983  19739  32081  3029/2753/395    1021/224    12  117   54.60)
(sat.ddfw       1      1   45.8015     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.930s mem=57468KiB load=0.93 rootload=0.91
(smt.stats    9   1117  23944  35798  3100/2771/400    1164/227    12  117   55.08)
(sat.ddfw       1      1   38.5728    110001       539          4            1       12)
(smt.stats   10   1218  26781  39404  3148/2872/401    1256/249    14  132   55.08)
(smt.stats   11   1329  33173  45236  3158/2882/402    1373/249    14  132   55.17)
(sat.ddfw       1      1   33.2883    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  35361  48905  3296/3014/406    1510/266    16  148   55.46)
(smt.stats   13   1585  42163  53772  3303/3021/409    1698/266    16  148   55.57)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456129&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456129&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456130&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456130&474319
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 418834765345456130 := 13510798882127965 << 19
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456136&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4 := 418834765345456136&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456136&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456136&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456136&474319
ramon: poll                 wall=2.000s usage=1.928s mem=58184KiB load=1.00 rootload=1.00
(smt.stats   14   1732  48844  60431  3423/3027/409    1841/296    17  207   55.67)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 418834765345456770&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 130 := 418834765345456770&474319
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 418834765345456770 := 13510798882127965 << 19
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 128 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 131 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 6 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 10 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 18 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 34 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 66 := 418834765345456706&474319
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 418834765345456706 := 13510798882127965 << 19
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 256 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 35 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 290 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 1090 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2114 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4490 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 4554 := 418834765345456706&474319
(smt.stats   15   1833  50481  62958  3654/3232/471    2150/316    18  212   55.76)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 38 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 34 := 418834765345456706&474319
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 66 := 418834765345456706&474319
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 418834765345456706 := 13510798882127965 << 19
(sat.ddfw       1      1   29.0984    220001      1078          6            1       23)
(smt.stats   16   1944  54910  72353  3691/3382/500    2472/318    18  212   55.90)
(smt.stats   17   2066  59390  81265  3714/3424/505    2842/610    20  257   55.90)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 18 := 4503599627370551&115
(sat.ddfw       1      1   25.7448    290001      1421          7            1       30)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 23 := 4503599627371319&115
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 19 := 4503599627371319&115
(smt.stats   18   2200  63570  92426  3943/3656/508    3182/814    21  265   56.19)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 51 := 4503599627371063&115
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9227875636482146871 := 13528399658127361 << 7
ramon: poll                 wall=3.000s usage=2.927s mem=58328KiB load=1.00 rootload=1.00
(smt.stats   19   2347  67400  99870  4165/3776/516    3489/820    21  265   56.29)
(sat.ddfw       1      1    23.108    370001      1813          8            1       38)
(smt.stats   20   2508  73303 114339  4210/3910/517    3835/911    23  276   56.48)
(smt.stats   21   2609  78940 125436  4299/3971/517    4050/912    23  276   56.48)
(smt.stats   22   2720  84322 140828  4311/4014/519    4220/996    24  284   56.48)
ramon: poll                 wall=4.000s usage=3.926s mem=58820KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.9108    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   23   2842  86974 145751  4491/4016/520    4397/1007    25  287   56.77)
(smt.stats   24   2976  89909 150692  4603/4200/520    4653/1008    25  287   56.77)
(smt.stats   25   3123  98787 168413  4625/4318/524    5036/1051    26  292   57.03)
ramon: poll                 wall=5.000s usage=4.926s mem=59408KiB load=1.00 rootload=1.00
(smt.stats   26   3284 106510 187953  4650/4342/526    5410/1208    27  295   57.13)
(sat.ddfw       1      1    19.084    560001      2745         10            1       57)
(smt.stats   27   3461 114029 203203  4719/4366/526    5924/1216    27  295   57.22)
(smt.stats   28   3562 117995 213359  4751/4443/527    6224/1396    28  297   57.22)
(smt.stats   29   3673 124130 230912  4769/4469/528    6413/1477    29  299   57.22)
ramon: poll                 wall=6.000s usage=6.011s mem=59804KiB load=1.09 rootload=1.08
(smt.stats   30   3795 127260 237248  4855/4472/528    6571/1477    29  299   57.40)
(sat.ddfw       1      1   17.8716    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=7.098s mem=59956KiB load=1.09 rootload=1.08
(smt.stats   31   3929 127887 238919  5095/4636/528    6738/1477    29  299   57.60)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 702561541869797632&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9925933578724573440 := 127 << 1
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 702561541869797632&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9925933578724573440 := 64 << 1
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 702561541869797888&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9925933578724573696 := 127 << 1
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 0 := 702561541869797888&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 9925933578724573696 := 127 << 1
(smt.stats   32   4076 131866 249725  5387/5050/538    7249/1739    30  331   57.60)
(sat.ddfw       1      1   16.4384    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=8.082s mem=60100KiB load=0.98 rootload=0.99
(smt.stats   33   4237 134888 259040  5600/5269/544    7651/1742    30  331   57.79)
(sat.ddfw       1      1   15.2636    920001      4509         13            1       93)
(smt.stats   34   4414 138465 266879  5758/5315/544    7955/1744    30  331   58.15)
ramon: poll                 wall=9.000s usage=9.081s mem=60668KiB load=1.00 rootload=1.00
(smt.stats   35   4608 146316 287771  5847/5523/545    8478/1882    31  334   58.24)
(smt.stats   36   4709 149778 298381  5881/5557/545    8630/2013    32  337   58.34)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 3 := 66&7
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 66&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 66 := 66 << 3
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 66&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 66 := 66 << 3
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 2 := 66&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 66 := 66 << 3
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 3 := 3&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 3 := 3 << 3
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 3 := 3&7
shl: (shl[64] (bv2int %0) (mod (+ #114 #444) 64)) 3 := 3 << 3
(smt.stats   37   4821 152833 305298  5966/5652/547    8811/2015    32  337   58.44)
(smt.stats   38   4943 155441 316920  5994/5683/552    9138/2016    32  337   58.44)
(smt.delete-inactive-clauses  :num-deleted-clauses 96)
(smt.stats   39   5077 159960 329487  5997/5692/552    9260/2100    33  338   58.44)
(smt.stats   40   5224 165287 356682  6008/5699/553    9458/2103    33  338   58.69)
(sat.ddfw       1      1   14.2653   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=10.085s mem=61152KiB load=1.00 rootload=1.00
(smt.stats   41   5385 172230 390737  6023/5715/555    9666/2147    34  338   58.69)
(smt.stats   42   5562 177372 404801  6046/5740/556   10207/2160    35  343   58.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5756 188571 443318  6291/5749/557   10810/2165    35  343   58.88)
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627379225&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627380761&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627380761&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381017&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381017&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381273&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381273&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381785&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 14353 := 4503599627381273&2086078491603856855
band: (band[63] (shl[64] (bv2int %0) (mod #849 64)) (if (or #859 #860) 0 (if #861 1 #983))) 8721 := 4503599627381273&2086078491603856855
ramon: poll                 wall=11.000s usage=11.190s mem=61420KiB load=1.11 rootload=1.10
(sat.ddfw       1      1   13.6699   1210001      5931         15            1      123)
(smt.stats   44   5969 195266 468014  6640/6028/557   11383/2249    36  355   59.17)
(smt.stats   45   6070 199552 477723  6658/6334/603   11604/2307    37  378   59.17)
(smt.stats   46   6181 203022 494015  6708/6372/604   11789/2307    37  378   59.36)
ramon: poll                 wall=12.000s usage=12.199s mem=62164KiB load=1.01 rootload=1.01
(smt.stats   47   6303 209301 509975  6850/6411/604   12065/2386    38  380   59.80)
(sat.ddfw       1      1   12.9744   1370001      6715         16            1      139)
(smt.stats   48   6437 214761 530906  6979/6551/605   12457/2390    38  380   59.89)
ramon: poll                 wall=13.000s usage=13.267s mem=62380KiB load=1.07 rootload=1.07
(smt.stats   49   6584 219352 545224  7088/6684/605   13029/2525    39  383   59.99)
(sat.ddfw       1      1   12.3717   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=14.341s mem=62164KiB load=1.07 rootload=1.07
(smt.stats   50   6745 226008 568013  7486/6841/605   13496/2530    39  383   59.99)
ramon: poll                 wall=15.005s usage=15.396s mem=62836KiB load=1.05 rootload=1.05
(smt.stats   51   6922 232838 594042  7645/7295/606   13906/2644    40  383   60.37)
(sat.ddfw       1      1   11.7478   1720001      8431         18            1      174)
(smt.stats   52   7116 241718 630017  7811/7410/609   14402/2647    40  383   60.47)
ramon: poll                 wall=16.000s usage=16.391s mem=62912KiB load=1.00 rootload=1.00
(smt.stats   53   7329 252317 661487  8165/7520/609   14961/2766    41  406   60.57)
(smt.stats   54   7563 261282 697765  8462/8116/610   15994/2959    42  410   60.93)
ramon: poll                 wall=17.000s usage=17.394s mem=63492KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   11.1046   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=18.393s mem=63784KiB load=1.00 rootload=0.99
(smt.stats   55   7664 266468 707678  8698/8162/610   16577/2964    42  410   61.12)
(smt.stats   56   7775 270814 716382  8847/8405/610   16822/2967    42  410   61.21)
ramon: poll                 wall=19.000s usage=19.393s mem=63644KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5385   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.393s mem=63832KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:57:59 2024
ramon: root.execname        z3
ramon: root.utime           20.450s
ramon: root.stime           0.020s
ramon: group.total          20.475s
ramon: group.utime          20.451s
ramon: group.stime          0.024s
ramon: group.mempeak        64088KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.083s
ramon: loadavg              1.02
