ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:44:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29283 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1389
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7FRtw0vBM68f.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             646498
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   59.1716     10000        49          0            1        2)
(sat.ddfw       1      1   31.1558     20001        98          1            1        3)
(sat.ddfw       1      1   44.5434     40001       196          2            1        5)
(smt.stats    0    101   3792    317  1242/1106/109     100/11     7   18   52.14)
(sat.ddfw       1      1   36.3196     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.909s mem=54128KiB load=0.91 rootload=0.90
(sat.ddfw       1      1   29.4118    110001       539          4            1       12)
(smt.stats    1    202   4407    552  1733/1533/113     199/14     8   23   52.33)
ramon: poll                 wall=2.000s usage=1.909s mem=54436KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   24.8011    160000       784          5            1       17)
(smt.stats    2    313   5578   1096  1947/1703/113     313/15     9   27   52.53)
(sat.ddfw       1      1   21.4213    220001      1078          6            1       23)
ramon: poll                 wall=3.003s usage=2.906s mem=54636KiB load=0.99 rootload=1.00
(smt.stats    3    414   7271   1975  2453/2181/113     421/15     9   27   52.63)
(smt.stats    4    525   9309   3136  2582/2394/120     530/63    12   36   52.72)
(sat.ddfw       1      1   18.6916    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.848s mem=54904KiB load=0.95 rootload=0.94
(smt.stats    5    647  10267   4350  2966/2655/125     650/83    13   36   52.82)
(sat.ddfw       1      1   16.5529    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=4.794s mem=55028KiB load=0.95 rootload=0.95
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  10623   4710  3066/2798/125     753/82    14   38   52.91)
(smt.stats    7    859  13808   5775  3310/3019/125     875/82    14   38   53.11)
ramon: poll                 wall=6.000s usage=5.789s mem=55200KiB load=1.00 rootload=0.99
(sat.ddfw       1      1    14.995    460001      2254          9            1       47)
(smt.stats    8    981  14341   6276  3491/3197/125     998/82    14   38   53.11)
(smt.stats    9   1115  16875   9836  3609/3385/128    1222/113    16   40   53.20)
ramon: poll                 wall=7.003s usage=6.798s mem=55468KiB load=1.01 rootload=1.01
(smt.stats   10   1216  17546  10778  3678/3399/128    1327/113    16   40   53.30)
(sat.ddfw       1      1   13.6874    560001      2745         10            1       57)
(smt.stats   11   1327  18278  11663  3930/3633/129    1446/124    17   41   53.41)
ramon: poll                 wall=8.000s usage=7.860s mem=55624KiB load=1.06 rootload=1.07
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  19095  13223  4101/3873/134    1590/129    18   41   53.51)
(smt.stats   13   1583  21950  17923  4147/3893/134    1743/158    19   47   53.51)
(smt.stats   14   1730  24497  20643  4245/3919/134    1905/158    19   47   53.60)
(sat.ddfw       1      1    12.593    670001      3284         11            1       68)
(smt.stats   15   1831  28071  24103  4276/4043/137    2035/192    20   51   53.71)
ramon: poll                 wall=9.000s usage=8.884s mem=55956KiB load=1.02 rootload=1.02
(smt.stats   16   1942  30067  26544  4300/4053/137    2175/192    20   51   53.71)
(smt.stats   17   2064  30842  27398  4355/4084/137    2306/193    20   51   53.81)
ramon: poll                 wall=10.000s usage=9.839s mem=56156KiB load=0.96 rootload=0.95
(smt.stats   18   2198  34983  33966  4513/4241/137    2445/193    20   51   53.81)
(sat.ddfw       1      1   11.5931    790001      3872         12            1       80)
(smt.stats   19   2345  41986  40415  4578/4301/137    2601/193    20   51   53.95)
(smt.stats   20   2506  47395  46614  4585/4356/137    2764/193    20   51   54.07)
(smt.stats   21   2607  49108  54160  4630/4358/137    2867/194    20   51   54.07)
(smt.stats   22   2718  53212  68837  4661/4406/137    3005/194    20   51   54.07)
ramon: poll                 wall=11.000s usage=10.800s mem=56232KiB load=0.96 rootload=0.97
(smt.stats   23   2840  56647  76134  4732/4454/137    3135/194    20   51   54.07)
(smt.stats   24   2974  59339  82347  4750/4507/137    3280/194    20   51   54.17)
(smt.stats   25   3121  61389  87773  4780/4534/137    3439/194    20   51   54.38)
ramon: poll                 wall=12.000s usage=11.816s mem=56628KiB load=1.02 rootload=1.01
(smt.stats   26   3282  63502  99694  4888/4651/138    3608/282    21   57   54.54)
(sat.ddfw       1      1   10.8135    920001      4509         13            1       93)
(smt.stats   27   3459  70004 112517  4894/4665/139    3792/292    22   58   54.54)
(smt.stats   28   3560  72978 118309  4910/4676/141    3891/303    23   62   54.63)
(smt.stats   29   3671  78120 128463  4919/4682/141    4001/303    23   62   54.89)
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 140737488355265&458982689328
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 140737488355265&458982689328
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 140737488355265&458982689328
(smt.stats   30   3793  80716 132337  5012/4727/159    4121/309    24   66   54.89)
(smt.stats   31   3927  85490 139722  5025/4789/159    4363/309    24   66   54.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  88948 145887  5047/4800/159    4513/330    25   67   54.99)
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 3585802260 := 140737488355327&3585802260
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7703547900105588735 := 140737488355311 << 32
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 3585802260 := 140737488355327&3585802260
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7703547900105588735 := 140737488355311 << 32
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 3585802260 := 140737488355327&3585802260
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7703547900105588735 := 140737488355311 << 32
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 156 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 163 := 140737488355323&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 115 := 140737488355323&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 104 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 3585802256 := 140737488355312&3585802260
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7703688637593944048 := 140737488355311 << 32
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 115 := 140737488355323&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 104 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 114 := 140737488355322&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 112 := 140737488355320&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 104 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 112 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 140737488355327&3585802260
(smt.stats   33   4235  93246 153183  5122/4870/180    4674/346    26   72   55.24)
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 140737488355327&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1040 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 2064 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4112 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 221200 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 229392 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 460800 := 140737488355327&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 460800 := 140737488355323&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 526352 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 524304 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 409616 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 409616 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458768 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458768 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458768 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458832 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458832 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458832 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458768 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458768 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458768 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 458768 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 131088 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 131090 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 131088 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 131088 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 131088 := 140737488355312&3585802260
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 131088 := 140737488355312&3585802260
(smt.stats   34   4412  94861 160316  5494/5261/295    5227/498    27  101   55.73)
ramon: poll                 wall=13.000s usage=12.864s mem=57976KiB load=1.05 rootload=1.05
(smt.stats   35   4606 101819 167409  5499/5266/298    5515/498    27  101   55.82)
(smt.stats   36   4707 105167 177630  5510/5277/298    5959/616    28  107   55.92)
(smt.stats   37   4818 110646 193653  5515/5282/298    6086/616    28  107   55.92)
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 3168&7343723029251
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7703125687640525920 := 140737488355322 << 43
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 3168&7343723029251
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7703125687640525920 := 140737488355322 << 43
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 3126&7343723029251
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 3216&7343723029251
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7703125687640525968 := 140737488355322 << 43
(smt.stats   38   4940 114571 207693  5559/5322/310    6273/963    29  107   55.92)
(smt.delete-inactive-clauses  :num-deleted-clauses 308)
(smt.stats   39   5074 118829 222334  5574/5329/310    6107/964    29  107   55.92)
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3567&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3567&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3566&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3564&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3552&14687446058503
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7702984950152170976 := 140737488355323 << 44
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3552&14687446058503
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7702984950152170976 := 140737488355323 << 44
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3552&14687446058503
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7702984950152170976 := 140737488355323 << 44
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3552&14687446058503
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7702984950152170976 := 140737488355323 << 44
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3499&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3498&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1024 := 3496&14687446058503
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 7702984950152170920 := 140737488355323 << 44
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 41984 := 52776558133248&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 41984 := 52776558133248&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 8448 := 52776558133248&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 8450 := 52776558133248&14687446058503
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 8448 := 52776558133248&14687446058503
(smt.stats   40   5221 121812 231101  5763/5401/327    6369/1005    30  113   56.11)
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177664&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177665&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177665&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744308736&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744308736&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177665&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177665&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744308736&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744310786&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177665&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744178688&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177730&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177794&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177794&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177728&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177728&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177730&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177730&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177728&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177730&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177728&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177730&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177794&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4482 := 70368744177794&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4354 := 70368744177794&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4354 := 70368744177920&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4354 := 70368744177922&29374892117007
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4354 := 87960930353216&58749784234014
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4354 := 87960930353218&58749784234014
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4354 := 87960930224384&58749784234014
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4354 := 87960930224386&58749784234014
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4354 := 87960930224386&58749784234014
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 4354 := 87960930224386&58749784234014
(smt.stats   41   5382 126554 241633  5952/5579/342    6596/1020    30  113   56.26)
(smt.stats   42   5560 132575 266155  5995/5758/369    7116/1366    32  140   56.36)
(sat.ddfw       1      1   10.1759   1060001      5196         14            1      108)
(smt.stats   43   5754 138835 288151  6019/5782/371    7326/1366    32  140   56.64)
ramon: poll                 wall=14.000s usage=13.862s mem=58744KiB load=1.00 rootload=0.99
(smt.stats   44   5967 145884 324416  6053/5816/373    7913/1533    34  157   56.64)
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 0 := 140737488355280 << 1
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 0 := 140737488355280 << 1
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #754) 64)) 0 := 140737488355280 << 1
(smt.stats   45   6068 148597 335342  6089/5820/374    8052/1740    35  165   56.74)
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 140737488355232&1
shl: (shl[47] (bv2int %0) (mod (bv2int %0) 47)) 140737488355285 := 140737488355280 << 1
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 140737488355232&1
shl: (shl[47] (bv2int %0) (mod (bv2int %0) 47)) 140737488355281 := 140737488355280 << 1
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 1 := 140737488355232&1
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 140737488355232&1
band: (band[47] (shl[47] (bv2int %0) (mod #114 47)) (if (= #612 46) 1 (if #614 3 #744))) 1 := 140737488355232&1
band: (band[47] (shl[64] (bv2int %0) (mod #755 64)) (if (= #769 63) 0 (if #771 1 #910))) 0 := 140737488355232&1
band: (band[47] (shl[47] (bv2int %0) (mod #114 47)) (if (= #612 46) 1 (if #614 3 #744))) 1 := 140737488355232&1
(smt.stats   46   6179 153033 352823  6129/5861/379    8253/1744    35  165   56.93)
(smt.stats   47   6301 157653 370045  6261/5991/400    8512/1891    37  181   57.12)
(smt.stats   48   6435 163262 381035  6329/6056/402    8752/1893    37  181   57.32)
ramon: poll                 wall=15.000s usage=14.864s mem=59688KiB load=1.00 rootload=1.01
(smt.stats   49   6582 169322 398919  6354/6063/403    9073/1949    38  189   57.32)
(smt.stats   50   6743 175780 426812  6428/6103/403    9440/2058    39  192   57.41)
(smt.stats   51   6920 182618 453384  6453/6180/409    9661/2078    41  243   57.41)
(sat.ddfw       1      1   9.54806   1210001      5931         15            1      123)
ramon: poll                 wall=16.000s usage=15.854s mem=59812KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7114 187738 470680  6614/6193/415   10043/2085    41  243   57.61)
(smt.stats   53   7327 192675 496447  7142/6362/415   10644/2198    42  264   57.80)
ramon: poll                 wall=17.000s usage=16.852s mem=60444KiB load=1.00 rootload=0.99
(smt.stats   54   7561 200160 520422  7307/6889/415   11177/2204    42  264   57.99)
(smt.stats   55   7662 203387 534291  7534/7065/415   11542/2209    42  264   58.09)
(sat.ddfw       1      1   8.97716   1370001      6715         16            1      139)
ramon: poll                 wall=18.000s usage=17.763s mem=60956KiB load=0.91 rootload=0.91
(smt.stats   56   7773 206111 548339  7619/7278/415   11913/2216    42  264   58.19)
ramon: poll                 wall=19.000s usage=18.619s mem=61044KiB load=0.86 rootload=0.86
(smt.stats   57   7895 210809 584351  7675/7390/418   12317/2580    43  270   58.80)
(smt.stats   58   8029 214234 600100  7804/7413/418   12982/2581    43  270   58.80)
(smt.stats   59   8176 216469 620812  8197/7564/418   13422/2585    43  270   58.90)
ramon: poll                 wall=20.000s usage=19.586s mem=61432KiB load=0.97 rootload=0.96
ramon: end                  Fri Nov  1 21:44:37 2024
ramon: root.execname        z3
ramon: root.utime           19.630s
ramon: root.stime           0.000s
ramon: group.total          19.648s
ramon: group.utime          19.640s
ramon: group.stime          0.008s
ramon: group.mempeak        61688KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              0.98
