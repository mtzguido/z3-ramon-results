ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:50:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40836 MiB
ramon: sys.mem.avail        61380 MiB
ramon: sys.nprocs           1324
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/P2JRlLOXLr03.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3830195
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   258/258     0/0  64       0    18.61   0.00)
(sat.stats    115    981    0   258/258   115/40  64       0    19.03   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 349 :time 0.00)
(sat.stats    115    981    0   258/258   115/40  64       0    19.03   0.01)
(sat.stats    115    981    0   258/258   115/40  64       0    19.03   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 418619.03 :time 0.00)
(sat.stats    115    981    0   260/260    51/39  64       0    19.03   0.01)
(sat.stats    130   1150    1   260/260    66/52  64       0    19.03   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    133   1194    2   260/260    69/53  64       0    19.03   0.01)
(sat.stats    136   1248    3   260/260    72/54  64       0    19.03   0.01)
(sat.stats    140   1313    4   260/260    76/58  64       0    19.03   0.01)
(sat.stats    178   2297    5   260/260   114/89  64       0    19.12   0.01)
(sat.stats    181   2363    6   260/260   117/89  64       0    19.12   0.01)
(sat.stats    184   2408    7   260/260   120/89  64       0    19.12   0.01)
(sat.stats    187   2452    8   260/260   123/89  64       0    19.12   0.01)
(sat.stats    190   2503    9   260/260   126/89  64       0    19.12   0.01)
(sat.stats    193   2564   10   260/260   129/89  64       0    19.12   0.01)
(sat.stats    196   2622   11   260/260   132/89  64       0    19.12   0.01)
(sat.stats    199   2681   12   260/260   135/89  64       0    19.12   0.01)
(sat.stats    211   2897   16   260/260   147/97  64       0    19.12   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    349   6133   24   262/262   285/182  64       0    19.32   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2770 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4858 :time 0.00)
lshr: (lshr[63] (bv2int %0) (+ 63 (* 9223372036854775807 #66))) 26 := 26 >>l 37
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 0&9223372036787666944
lshr: (lshr[64] (mod (div #53 2) 4611686018427387904) (mod (+ 62 #760 #761) 64)) 13 := 13 >>l 36
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 5267 :time 0.00)
(sat.stats    536  10931   42   357/355   465/232  91       0    20.19   0.12)
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 1 := 1&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 2 := 2&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 4 := 5&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 8 := 8&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 16 := 16&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 74624 := 67074128&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 64 := 67074047&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 32 := 233&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 128 := 191&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 359&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 1 := 9223372036787666944&359
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 269&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 138 := 9223372036787666944&269
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 269&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 192 := 9223372036787666944&269
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 269&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 132 := 9223372036787666944&269
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 269&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 144 := 9223372036787666944&269
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 269&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 256 := 9223372036787666944&269
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 269&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 128 := 9223372036787666944&269
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 269&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 32 := 9223372036787666944&269
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 269&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 8 := 9223372036787666944&269
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 512&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 512 := 9223372036787666944&512
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 22139904 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 29421568 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 2048 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 13549568 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 8192 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 10256384 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 13107200 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 393216 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 65536 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 262144 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 2097152 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 1048576 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 8388608 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 4194304 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 16777216 := 9223372036787666944&67108863
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 0 := 67108863&9223372036787666944
band: (band[63] (if (= #629 63) 42535295865117307923698453892116250624 (if #631 21267647932558653961849226946058125312 #755)) (lshr[64] (mod #475 4611686018427387904) (mod #762 64))) 33554432 := 9223372036787666944&67108863
 (sat-cleaner :elim-literals 6 :elim-clauses 1 :cost 11671 :time 0.00)
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 256 := 67107550&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 14228480 := 67107487&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 61424128 := 67107487&9223372036787666944
band: (band[63] (lshr[63] (bv2int %0) (+ 63 #493)) (if (= #74 62) 21267647932558653961849226946058125312 (if #497 10633823966279326980924613473029062656 #619))) 2048 := 67107487&9223372036787666944
(sat.stats   1201  16128   76  4744/4742  1158/272 302       0    23.46   0.50)
(sat.stats   1204  16131   77  4750/4748  1161/272 302       0    23.46   0.50)
(sat.stats   1672  17018  111  6604/6602  1629/272 302       0    24.78   0.71)
ramon: poll                 wall=1.000s usage=0.998s mem=27852KiB load=1.00 rootload=0.98
ramon: poll                 wall=2.000s usage=1.996s mem=32416KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.001s usage=2.996s mem=35848KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.995s mem=38484KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.001s usage=4.995s mem=49556KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.995s mem=52500KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.995s mem=53608KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.995s mem=55400KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.001s usage=8.995s mem=56848KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.995s mem=57924KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.004s usage=10.998s mem=60228KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.994s mem=60996KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.994s mem=62020KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.994s mem=64068KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.004s usage=14.998s mem=64580KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.994s mem=81980KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.994s mem=82748KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.993s mem=83492KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.993s mem=85284KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.993s mem=85540KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:50:29 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.050s
ramon: group.total          20.007s
ramon: group.utime          19.951s
ramon: group.stime          0.056s
ramon: group.mempeak        98116KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
