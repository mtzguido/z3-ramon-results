ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:21:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41474 MiB
ramon: sys.mem.avail        61383 MiB
ramon: sys.nprocs           1321
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/DDUTKocvHVLp.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3743881
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   424/424     0/0  57       0    18.94   0.00)
(sat.stats    192   3312    0   424/424   192/95  57       0    19.33   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 739 :time 0.00)
(sat.stats    192   3312    0   424/424   192/95  57       0    19.33   0.02)
(sat.stats    192   3312    0   424/424   192/95  57       0    19.33   0.02)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 829219.43 :time 0.00)
(sat.stats    192   3312    0   428/428   176/93  57       0    19.43   0.02)
(sat.stats    374   6750    1   428/428   358/231  57       0    19.62   0.04)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    377   6888    2   428/428   361/233  57       0    19.62   0.04)
(sat.stats    380   6981    3   428/428   364/235  57       0    19.62   0.04)
(sat.stats    383   7033    4   428/428   367/237  57       0    19.62   0.04)
(sat.stats    386   7087    5   428/428   370/239  57       0    19.62   0.04)
(sat.stats    389   7141    6   428/428   373/240  57       0    19.62   0.04)
(sat.stats    392   7188    7   428/428   376/241  57       0    19.62   0.05)
(sat.stats    396   7227    8   428/428   380/242  57       0    19.62   0.05)
(sat.stats    399   7265    9   428/428   383/244  57       0    19.62   0.05)
(sat.stats    481   9349   10   428/428   465/278  57       0    19.72   0.07)
(sat.stats    484   9551   11   428/428   468/279  57       0    19.72   0.07)
(sat.stats    487   9900   12   428/428   471/279  57       0    19.72   0.07)
(sat.stats    490  10129   13   428/428   474/281  57       0    19.72   0.07)
(sat.stats    493  10380   14   428/428   477/281  57       0    19.72   0.07)
(sat.stats    496  10600   15   428/428   480/282  57       0    19.72   0.07)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 3919 :time 0.00)
ramon: poll                 wall=1.005s usage=0.962s mem=22760KiB load=0.96 rootload=0.95
ramon: poll                 wall=2.000s usage=1.951s mem=23272KiB load=0.99 rootload=0.99
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1200  22073   32  6035/6034  1223/353  70       0    21.75   2.12)
(sat.stats   1203  22078   33  6035/6034  1226/356  70       0    21.75   2.12)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7527 :time 0.00)
(sat.stats   1626  38731   89  6540/6539  1650/603  70       0    22.13   2.29)
ramon: poll                 wall=3.000s usage=2.951s mem=24040KiB load=1.00 rootload=1.00
(sat.stats   2855 107220  181  8715/8714  2982/863  70       0    23.01   3.40)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20422 :time 0.00)
(sat.stats   3630 131415  194  9689/9688  3767/1039  71       0    23.39   3.90)
ramon: poll                 wall=4.000s usage=3.947s mem=24808KiB load=1.00 rootload=0.99
(sat.stats   5486 166387  456  9772/9771  4942/1364  71       0    23.82   4.75)
 (sat-cleaner :elim-literals 1142 :elim-clauses 5 :cost 30541 :time 0.00)
ramon: poll                 wall=5.000s usage=4.947s mem=25064KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin           :units        :memory       )
(sat.stats   8349 225570  639 11476/11475  6512/1672  76       0    24.22   5.92)
ramon: poll                 wall=6.000s usage=5.947s mem=25576KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 44353 :time 0.00)
ramon: poll                 wall=7.000s usage=6.946s mem=26344KiB load=1.00 rootload=1.00
(sat.stats  12301 284983  889 11810/11809  8699/2378  77       0    24.95   7.27)
ramon: poll                 wall=8.000s usage=7.946s mem=26344KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.946s mem=27368KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 95187 :time 0.00)
(sat.stats  18235 368817 2065 13084/13083 11924/2996  78       0    26.27   9.52)
ramon: poll                 wall=10.005s usage=9.954s mem=27880KiB load=1.00 rootload=1.01
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 109910 :time 0.00)
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 8406766 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 8406765 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 33496864 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 33554432 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 1948160 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 4 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 64 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 256 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 128 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 8 := 33554432&2214592512
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 16 := 33554432&2214592512
ramon: poll                 wall=11.000s usage=10.945s mem=28392KiB load=1.00 rootload=0.98
ramon: poll                 wall=12.001s usage=11.943s mem=29160KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.932s mem=30440KiB load=0.99 rootload=0.99
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 60076 :time 0.00)
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 17956 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 32091 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 194440 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 240256 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 5121024 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 10967040 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 9863168 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 27262976 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 25165824 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 16777216 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 33554432 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 4096 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 65536 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 1048576 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 131072 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 786432 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 524288 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 8192 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 16384 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 512 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 256 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 96 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 16 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 64 := 2214592512&33554432
band: (band[42] (if (= #827 41) 1 (if #829 2 #909)) (if (= #284 41) 72567767433216 (if #913 36283883716608 #993))) 0 := 33554432&2214592512
band: (band[42] (if (= #424 63) 304371277216207601664 (if #590 152185638608103800832 #587)) (if (= #1012 63) 0 (if #1014 1 #1138))) 2 := 2214592512&33554432
ramon: poll                 wall=14.000s usage=13.922s mem=32548KiB load=0.99 rootload=0.98
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 67033 :time 0.00)
 (sat-cleaner :elim-literals 13 :elim-clauses 7 :cost 69488 :time 0.00)
ramon: poll                 wall=15.000s usage=14.924s mem=33316KiB load=1.00 rootload=1.01
ramon: poll                 wall=16.000s usage=15.919s mem=34084KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.915s mem=34572KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.913s mem=34868KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.910s mem=35740KiB load=1.00 rootload=1.00
(sat.stats  32152 670877 2625 49165/49162 15165/3760 300    4738    35.17  19.34)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 93003 :time 0.00)
ramon: poll                 wall=20.000s usage=19.909s mem=36656KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:21:33 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.020s
ramon: group.total          19.956s
ramon: group.utime          19.932s
ramon: group.stime          0.024s
ramon: group.mempeak        36924KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.045s
ramon: loadavg              1.00
