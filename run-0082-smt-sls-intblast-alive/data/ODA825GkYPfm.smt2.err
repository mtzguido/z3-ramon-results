ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:22:49 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28355 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ODA825GkYPfm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             780465
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427387901&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387901 := 4611686018427387902 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427387901&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387901 := 4611686018427387902 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427387901&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 4611686018427387901 := 4611686018427387902 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 4611686018427387903 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 1 := 1024 << 54
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   80.6452     10000        49          0            1        2)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509483009 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509483009 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 18014398509481986 := 18014398509481985 << 54
(smt.stats    0    101   1051    522  1269/1106/124      76/6    11   31   51.97)
(smt.stats    1    202   1663   1010  1353/1209/129     176/7    12   32   51.97)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509481985 << 55
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509481985 << 55
(sat.ddfw       1      1   44.2522     20001        98          1            1        3)
(smt.stats    2    313   2463   2039  1488/1328/136     284/11    14   33   52.16)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509499393 << 56
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509499393 << 56
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509500417 << 56
(sat.ddfw       1      1    47.619     40001       196          2            1        5)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509504513 << 57
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509504513 << 57
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509503489 << 57
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 18014398509481984&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18014398509481984 := 18014398509503489 << 57
(smt.stats    3    414   3519   3427  1633/1481/147     383/12    16   37   52.26)
(smt.stats    4    525   4368   4998  1718/1536/158     466/22    18   55   52.26)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 0 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 0 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 0 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 0 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 0 << 58
(sat.ddfw       1      1   42.3131     70001       343          3            1        8)
(smt.stats    5    647   5552   7549  1844/1633/172     629/64    20   62   52.55)
ramon: poll                 wall=1.000s usage=0.902s mem=54780KiB load=0.90 rootload=0.90
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 13569 << 58
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 13569 << 58
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   7333   9289  1998/1815/177     733/82    22   72   52.64)
(sat.ddfw       1      1   36.4631    110001       539          4            1       12)
(smt.stats    7    859   9292  12311  2061/1824/177     853/84    22   72   52.74)
(smt.stats    8    981  10849  14594  2189/1924/177     975/87    22   72   52.83)
(sat.ddfw       1      1   31.7253    160000       784          5            1       17)
(smt.stats    9   1115  12384  17890  2208/2022/181    1128/116    23   82   52.83)
(smt.stats   10   1216  14101  19798  2247/2024/181    1247/119    23   82   52.83)
(smt.stats   11   1327  16858  25996  2266/2073/181    1367/132    24   85   52.93)
ramon: poll                 wall=2.000s usage=1.901s mem=55292KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  19006  31155  2289/2085/182    1508/165    25   88   53.04)
(sat.ddfw       1      1   27.7525    220001      1078          6            1       23)
(smt.stats   13   1583  20369  36445  2318/2119/182    1643/166    25   88   53.04)
(smt.stats   14   1730  22475  40173  2331/2143/184    1789/180    26   94   53.04)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 576&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 576 := 576 << 55
(smt.stats   15   1831  23702  42279  2380/2146/184    1912/188    26   94   53.14)
(sat.ddfw       1      1   24.6392    290001      1421          7            1       30)
(smt.stats   16   1942  24634  46059  2435/2247/191    2027/218    27  102   53.14)
ramon: poll                 wall=3.000s usage=2.898s mem=55292KiB load=1.00 rootload=0.99
(smt.stats   17   2064  26019  50601  2523/2255/192    2158/222    27  102   53.14)
(smt.stats   18   2198  27942  55731  2580/2388/193    2294/240    29  109   53.23)
(sat.ddfw       1      1   22.1423    370001      1813          8            1       38)
(smt.stats   19   2345  30188  64378  2591/2398/193    2445/240    29  109   53.23)
(smt.stats   20   2506  31714  70205  2677/2468/193    2637/240    29  109   53.45)
(smt.stats   21   2607  36264  78485  2687/2482/198    2734/278    30  114   53.45)
ramon: poll                 wall=4.000s usage=3.899s mem=55804KiB load=1.00 rootload=1.00
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2305843009213693952 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2305843009213693953 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 896 << 60
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&7
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2305843009213693953 := 896 << 60
(smt.stats   22   2718  38633  83185  2736/2486/198    2878/280    31  115   53.55)
(smt.stats   23   2840  40983  88300  2761/2549/203    3004/304    32  116   53.55)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 14 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 16 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 0 := 512 << 61
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 0&15
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 16 := 512 << 61
(smt.stats   24   2974  43523  94022  2803/2599/226    3136/322    34  142   53.64)
(sat.ddfw       1      1   20.0401    460001      2254          9            1       47)
(smt.stats   25   3121  47130  98921  2847/2616/226    3284/323    34  142   53.64)
(smt.stats   26   3282  52674 106141  2870/2650/226    3441/335    35  146   53.74)
ramon: poll                 wall=5.000s usage=4.899s mem=56060KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.3083    560001      2745         10            1       57)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317951&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1206964700135281919&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1206964700135281920&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 10430336736990057728 := 18014398509506883 << 59
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1206964700135281919&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1206964700135281920&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 10430336736990057728 := 18014398509506883 << 59
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317951&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317952&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 10394307939971093760 := 18014398509506881 << 59
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317951&3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1170935903116317952&3
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 10394307939971093760 := 18014398509506881 << 59
(smt.stats   27   3459  55254 108962  3031/2678/226    3647/343    35  146   53.83)
(smt.stats   28   3560  56455 113721  3049/2839/241    3767/375    36  148   53.83)
(smt.stats   29   3671  60329 120795  3083/2861/241    3873/381    37  163   53.93)
ramon: poll                 wall=6.000s usage=5.885s mem=56088KiB load=0.99 rootload=0.99
(smt.stats   30   3793  64108 128853  3104/2873/241    4007/381    37  163   54.09)
(sat.ddfw       1      1   16.8273    670001      3284         11            1       68)
(smt.stats   31   3927  69283 138492  3137/2894/241    4142/383    37  163   54.09)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  72497 141085  3151/2937/241    4294/383    37  163   54.20)
ramon: poll                 wall=7.000s usage=6.853s mem=56604KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   15.8793    790001      3872         12            1       80)
(smt.stats   33   4235  75674 146919  3296/3059/244    4465/410    38  163   54.30)
ramon: poll                 wall=8.000s usage=7.915s mem=56504KiB load=1.06 rootload=1.06
(smt.stats   34   4412  77890 153596  3385/3099/244    4648/422    39  164   54.39)
(smt.stats   35   4606  83130 163526  3399/3184/244    4854/422    39  164   54.49)
(sat.ddfw       1      1   14.6976    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.912s mem=56760KiB load=1.00 rootload=1.00
(smt.stats   36   4707  85483 168453  3421/3190/244    4963/424    39  164   54.49)
(smt.stats   37   4818  87711 176385  3441/3222/245    5082/441    40  164   54.58)
(smt.stats   38   4940  91093 185219  3448/3234/245    5224/441    40  164   54.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 25)
(smt.stats   39   5074  94277 191139  3472/3246/249    5333/449    41  165   54.72)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 2&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 14&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 12&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 14&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 13&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 8&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 2&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 2&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&15
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 1&15
(smt.stats   40   5221  96976 197794  3585/3334/287    5498/457    42  165   54.92)
ramon: poll                 wall=10.000s usage=9.911s mem=57016KiB load=1.00 rootload=1.00
(smt.stats   41   5382 102335 217613  3612/3373/287    5663/457    42  165   54.92)
(sat.ddfw       1      1   13.7363   1060001      5196         14            1      108)
(smt.stats   42   5559 108592 228984  3621/3408/290    5843/480    44  176   54.92)
(smt.stats   43   5753 117100 247992  3671/3408/290    6072/484    45  177   55.02)
ramon: poll                 wall=11.000s usage=10.913s mem=57272KiB load=1.00 rootload=1.00
(smt.stats   44   5966 119459 256690  3773/3498/290    6326/493    45  177   55.11)
(smt.stats   45   6067 121547 261131  3817/3600/291    6427/539    46  178   55.21)
(sat.ddfw       1      1   12.9077   1210001      5931         15            1      123)
(smt.stats   46   6178 126325 275070  3838/3620/292    6556/554    47  178   55.21)
(smt.stats   47   6300 130984 292137  3872/3626/292    6679/557    47  178   55.21)
ramon: poll                 wall=12.000s usage=11.912s mem=57528KiB load=1.00 rootload=1.00
(smt.stats   48   6434 134010 308123  3906/3685/292    6818/557    47  178   55.21)
(smt.stats   49   6581 138718 316960  3927/3696/292    6969/557    47  178   55.51)
(smt.stats   50   6742 146231 326406  3940/3714/292    7139/557    47  178   55.74)
(smt.stats   51   6919 149852 345981  3943/3726/292    7317/557    47  178   55.74)
ramon: poll                 wall=13.000s usage=12.911s mem=57844KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 155327 362835  3946/3727/292    7517/557    47  178   55.84)
(sat.ddfw       1      1   12.1599   1370001      6715         16            1      139)
(smt.stats   53   7326 158136 382696  3954/3737/292    7742/557    47  178   55.84)
(smt.stats   54   7560 161887 402440  3968/3751/293    7980/606    48  180   55.84)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775815 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775815 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 7&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775815 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775813 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 5&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 9223372036854775813 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427379712&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427379712&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 1 := 4611686018427386880 << 3
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427379712&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 1 := 4611686018427386880 << 3
(smt.stats   55   7661 164391 411769  4016/3758/293    8077/608    48  180   55.84)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427380732&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446744073709544444 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427380732&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446744073709544444 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427380732&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446744073709544444 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611686018427376900&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446744073709540612 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611193437218144256&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 0 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611193437218144256&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 173 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611193437218144256&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 173 := 4611686018427387008 << 39
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4611193437218144260&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 18446251492500307972 := 4611686018427387008 << 41
(smt.stats   56   7772 167002 417518  4082/3808/303    8199/619    49  182   56.03)
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 2305843009213693868&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #431) 64)) 16140901064495857580 := 4611686018427387008 << 41
ramon: poll                 wall=14.000s usage=13.979s mem=58160KiB load=1.07 rootload=1.06
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4609994969543868416&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 173 := 4611686018427387135 << 41
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4609981775404335104&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 2 := 4611686018427387129 << 41
band: (band[62] (shl[64] (bv2int %0) (mod #432 64)) (if (or #956 #957 #958 #959 #960 #961 #962 #963 #964 #965 #966 #967 #968 #969 #970 #971 ...) 0 (if #1014 1 #1024))) 0 := 4609981775404335104&0
shl: (shl[62] (bv2int %0) (mod (bv2int %1) 62)) 173 := 4611686018427387129 << 41
(smt.stats   57   7894 169304 422186  4156/3878/318    8323/624    49  182   56.22)
(smt.stats   58   8028 172999 430286  4171/3942/325    8473/632    50  186   56.31)
(smt.stats   59   8175 175187 438617  4176/3947/325    8622/632    50  186   56.31)
(sat.ddfw       1      1   11.5028   1540001      7549         17            1      156)
(smt.stats   60   8336 177810 451649  4179/3950/325    8782/638    51  193   56.22)
ramon: poll                 wall=15.005s usage=15.031s mem=58488KiB load=1.05 rootload=1.05
ramon: poll                 wall=16.000s usage=16.016s mem=58744KiB load=0.99 rootload=0.99
(smt.stats   61   8513 180642 457870  4225/3953/325    8975/648    51  193   56.41)
(sat.ddfw       1      1   10.8821   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=17.017s mem=58744KiB load=1.00 rootload=1.00
(smt.stats   62   8707 185194 466000  4402/4087/325    9185/650    51  193   56.41)
ramon: poll                 wall=18.000s usage=18.015s mem=58744KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.3396   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=19.015s mem=59000KiB load=1.00 rootload=1.00
(smt.stats   63   8920 192627 483405  4637/4268/329    9453/696    52  199   56.51)
ramon: poll                 wall=20.000s usage=20.014s mem=59000KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:23:09 2024
ramon: root.execname        z3
ramon: root.utime           20.080s
ramon: root.stime           0.000s
ramon: group.total          20.088s
ramon: group.utime          20.088s
ramon: group.stime          0.000s
ramon: group.mempeak        59256KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.071s
ramon: loadavg              1.00
