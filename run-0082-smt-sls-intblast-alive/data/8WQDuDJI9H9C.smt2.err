ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:47:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29228 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/8WQDuDJI9H9C.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             657607
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   99.0099     10000        49          0            1        2)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1 := 1&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2 := 2&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 4 := 4&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 8 := 8&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16 := 16&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 32 := 32&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 64 := 64&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 128 := 128&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 256 := 256&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 512 := 512&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1024 := 1024&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2048 := 2048&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 4096 := 4096&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 8192 := 8192&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16384 := 16384&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 32768 := 32768&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 65536 := 65536&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 131072 := 131072&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 262144 := 262144&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 524288 := 524288&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048576 := 1048576&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2097152 := 2097152&536870912
(smt.stats    0    101   4244    533  1295/994/98     100/12     4   14   52.25)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048576 := 1048576&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048576 := 1048576&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 4194304 := 4194304&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 8388608 := 8388608&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16777216 := 16777216&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 33554432 := 33554432&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 67108864 := 67108864&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134217728 := 134217728&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 268435456 := 268435456&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 536870912 := 536870912&536870912
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 536870912 := 536870913 << 30
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 536870912 := 536870912&536870912
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 536870912 := 536870913 << 30
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 4194304 := 4194304&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 8388608 := 8388608&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16777216 := 16777216&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 33554432 := 33554432&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 67108864 := 67108864&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134217728 := 134217728&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 268435456 := 268435456&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 536870912 := 536870912&536870912
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 536870912 := 536870913 << 30
(sat.ddfw       1      1   54.0595     20001        98          1            1        3)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 268435456 := 268435456&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 536870912 := 536870912&536870912
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 536870912 := 536870913 << 30
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134221824 := 134221824&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134221824 := 134221824&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134221824 := 134221824&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134234112 := 134234112&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134250496 := 134250496&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134283264 := 134283264&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134348800 := 134348800&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134348800 := 134348800&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134283264 := 134283264&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134234112 := 134234112&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2097152 := 2097152&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 262144 := 262144&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 4194304 := 4194304&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16777216 := 16777216&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16777216 := 16777216&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 8388608 := 8388608&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 524288 := 524288&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 134217728 := 134217728&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 67108864 := 67108864&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 268435456 := 268435456&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 536870912 := 536870912&536870912
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 536870912 := 536870913 << 30
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 536870912 := 1073741824&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 536870912 := 1073741824&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 268435456 := 268435456&536870912
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 268435456 := 268435456&536870912
(smt.stats    1    203   6158   2649  1723/1571/316     331/110    10   66   52.74)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 536870912 := 536870912&536870912
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 536870912 := 17179869184 << 30
(sat.ddfw       1      1   56.8182     40001       196          2            1        5)
(smt.stats    2    314   7068   4699  2404/1872/322     451/138    11   68   52.93)
(smt.stats    3    415  10744   6955  2480/2264/332     648/157    15   75   53.13)
(smt.stats    4    526  12772   8659  2498/2277/336     795/210    17   87   53.23)
(sat.ddfw       1      1   49.8339     70001       343          3            1        8)
(smt.stats    5    648  19385  15443  2530/2309/338     955/233    18   88   53.42)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    749  25522  20869  2582/2312/338    1172/248    19   91   53.42)
(smt.stats    7    860  30696  27400  2592/2374/338    1352/248    19   91   53.61)
ramon: poll                 wall=1.000s usage=0.900s mem=55764KiB load=0.90 rootload=0.88
(smt.stats    8    982  33477  32067  2622/2390/343    1546/343    20   95   53.61)
(sat.ddfw       1      1   42.5532    110001       539          4            1       12)
(smt.stats    9   1116  37295  38681  2673/2447/347    1681/396    22  104   53.99)
(smt.stats   10   1217  41044  43341  2796/2532/349    1823/398    23  113   54.09)
(sat.ddfw       1      1   36.9269    160000       784          5            1       17)
(smt.stats   11   1328  45080  51037  2936/2683/354    1987/420    25  122   54.19)
(smt.stats   12   1450  49423  57153  2957/2705/357    2232/420    26  123   54.38)
(smt.stats   13   1584  54878  66376  2958/2706/360    2476/435    28  137   54.49)
(smt.stats   14   1731  60022  77932  2958/2706/364    2697/468    29  137   54.49)
(smt.stats   15   1832  64326  85774  2964/2712/365    2836/465    30  142   54.68)
(sat.ddfw       1      1   31.6461    220001      1078          6            1       23)
ramon: poll                 wall=2.000s usage=1.867s mem=56820KiB load=0.97 rootload=0.97
(smt.stats   16   1943  67260  94573  2973/2721/368    3005/490    31  142   54.68)
(smt.stats   17   2065  69845  99133  2984/2729/386    3282/510    32  212   54.78)
(sat.ddfw       1      1   28.2486    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   18   2199  72685 102898  3279/2754/386    3521/721    33  229   54.97)
(smt.stats   19   2346  74911 112242  3582/3035/386    3900/728    33  229   55.07)
ramon: poll                 wall=3.000s usage=2.894s mem=57208KiB load=1.03 rootload=1.03
(sat.ddfw       1      1   25.5346    370001      1813          8            1       38)
(smt.stats   20   2507  76896 118197  3861/3612/387    5218/779    34  230   55.26)
(smt.stats   21   2608  80355 132502  3875/3623/388    5725/779    34  230   55.26)
(smt.stats   22   2719  81822 138352  3886/3637/389    5845/1276    35  234   55.26)
(smt.stats   23   2841  86421 155311  3890/3639/389    6378/1276    35  234   55.36)
(smt.stats   24   2975  88257 163229  3898/3649/390    6554/1466    36  236   55.69)
(smt.stats   25   3122  89217 179315  3902/3653/390    6820/1466    36  236   55.69)
(sat.ddfw       1      1   23.2618    460001      2254          9            1       47)
ramon: poll                 wall=4.000s usage=3.929s mem=58116KiB load=1.04 rootload=1.03
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2097152 := 2097153&2097152
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 2097153 := 1099511627774 << 22
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2097152 := 2097153&2097152
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 2097153 := 17179869185 << 22
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2097152 := 4194304&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2097152 := 4194304&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2097152 := 1069547520&2097152
(smt.stats   26   3283  91545 194028  3935/3660/390    7061/1585    37  248   55.69)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2097152 := 4194304&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 2097152 := 6291456&2097152
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 6291456 := 34359738369 << 22
(smt.stats   27   3460  94804 199185  3970/3719/403    7243/1622    38  250   55.98)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048577 := 4299161600&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048704 := 4299161600&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048736 := 4299161600&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048704 := 4299161600&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048578 := 4299161600&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048608 := 1077936128&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048608 := 1077936128&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048608 := 1077936128&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048706 := 1077936128&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048736 := 1077936128&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048704 := 1077936128&2097152
(smt.stats   28   3561  95683 201290  4084/3829/424    7412/1628    38  250   56.38)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1048704 := 1262485504&2097152
(sat.ddfw       1      1   21.2947    560001      2745         10            1       57)
(smt.stats   29   3672  96157 202718  4512/3935/424    7546/1628    38  250   57.15)
(smt.stats   30   3794  98982 210715  4690/4273/424    7749/1662    39  281   57.15)
ramon: poll                 wall=5.000s usage=4.987s mem=60076KiB load=1.06 rootload=1.06
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3928 102312 220198  4736/4485/425    8393/1818    40  284   57.15)
(smt.stats   32   4075 105880 231057  4743/4492/426    8919/1818    40  284   57.25)
(sat.ddfw       1      1   20.5492    670001      3284         11            1       68)
(smt.stats   33   4236 111371 265612  4744/4493/427    9448/2209    41  308   57.25)
(smt.stats   34   4413 114669 280101  4752/4501/429    9664/2219    42  317   57.52)
(smt.stats   35   4607 121857 331737  4756/4505/429   10797/2219    42  317   57.61)
ramon: poll                 wall=6.000s usage=6.050s mem=60208KiB load=1.06 rootload=1.06
(smt.stats   36   4708 125070 359286  4756/4505/429   11033/2440    43  325   57.71)
(smt.stats   37   4819 127720 373543  4758/4507/430   11179/2568    44  336   57.71)
(smt.stats   38   4941 129340 394179  4759/4508/430   11887/2568    44  336   57.80)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(sat.ddfw       1      1   18.9036    790001      3872         12            1       80)
(smt.stats   39   5075 132089 418766  4835/4508/430   12279/2576    44  336   57.90)
(smt.stats   40   5222 137005 460946  4841/4590/432   12489/2966    45  367   58.00)
(smt.stats   41   5383 144140 516008  4849/4594/432   12768/2993    46  368   58.29)
ramon: poll                 wall=7.000s usage=7.118s mem=60640KiB load=1.07 rootload=1.07
(smt.stats   42   5560 147455 552477  4863/4609/434   12994/3014    47  369   58.39)
(smt.stats   43   5754 155116 615711  4868/4617/434   13609/3014    47  369   58.49)
(sat.ddfw       1      1   17.5061    920001      4509         13            1       93)
(smt.stats   44   5967 161219 658685  4912/4641/436   14101/3101    48  383   58.49)
(smt.stats   45   6068 163262 671973  4973/4711/437   14542/3134    49  386   58.59)
ramon: poll                 wall=8.002s usage=8.317s mem=61116KiB load=1.20 rootload=1.20
(smt.stats   46   6179 165398 679890  5072/4722/437   14749/3142    49  386   58.68)
(smt.stats   47   6301 168253 695902  5145/4813/437   14987/3148    49  386   58.78)
(sat.ddfw       1      1   16.4861   1060001      5196         14            1      108)
ramon: poll                 wall=9.000s usage=9.312s mem=61396KiB load=1.00 rootload=1.00
(smt.stats   48   6435 171055 706583  5255/4898/437   15301/3158    49  386   58.87)
(smt.stats   49   6582 174054 731149  5280/5018/439   15653/3279    50  387   58.87)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 12 := 239&16
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 12 := 239&16
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 12 := 239&16
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16 := 239&16
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16 := 240&16
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 240 := 1082331758593 << 5
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16 := 239&16
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16 := 255&16
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 255 := 1082331758593 << 5
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16 := 239&16
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 16 := 255&16
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 255 := 262624 << 5
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 239&2
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 239&2
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 255&2
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 253&2
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 253 := 0 << 2
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 240&2
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 240 := 0 << 2
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 252&2
shl: (shl[40] (bv2int %1) (mod (bv2int %0) 40)) 238 := 63 << 2
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 1 := 252&2
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 160&2
shl: (shl[40] (bv2int %1) (mod (bv2int %0) 40)) 41 := 40 << 2
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 160&2
shl: (shl[40] (bv2int %1) (mod (bv2int %0) 40)) 159 := 40 << 2
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 255&1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 255&1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 254&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 254 := 1082331758592 << 1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 191&1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 160&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 160 := 1065151889408 << 1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 254&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 254 := 17179869184 << 1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 254&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 254 := 17179869184 << 1
(smt.stats   50   6743 175744 741813  5377/5049/453   16033/3290    50  387   59.08)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 271658778622&8
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 271658778622&8
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 271656681888&8
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 271656681888 := 253 << 4
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 271656681726&8
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 271656681632&8
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 271656681632 := 253 << 4
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 271658778622&4
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 271658778622&4
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 271658778618&4
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 271658778618 := 253 << 3
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 256 := 672&256
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 256 := 928&256
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 928 := 262495 << 9
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 256 := 262624&256
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 262624 := 262624 << 9
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6920 178696 758004  5471/5193/519   16262/3362    51  423   59.23)
(smt.stats   52   7114 184058 783078  5539/5250/527   16552/3362    51  423   59.32)
(sat.ddfw       1      1   15.4004   1210001      5931         15            1      123)
ramon: poll                 wall=10.000s usage=10.312s mem=62164KiB load=1.00 rootload=0.99
(smt.stats   53   7327 192725 849377  5582/5261/529   16957/3410    52  451   59.42)
(smt.stats   54   7561 196918 885052  5631/5350/532   17317/3508    53  456   59.52)
(smt.stats   55   7662 200095 903373  5738/5427/532   17441/3508    53  456   59.61)
(smt.stats   56   7773 202770 925553  5777/5437/535   17540/3556    54  466   59.61)
(smt.stats   57   7895 204681 942236  5827/5476/535   17692/3556    54  466   59.61)
(smt.stats   58   8029 206272 953083  5890/5571/535   17909/3556    54  466   59.71)
ramon: poll                 wall=11.000s usage=11.272s mem=62164KiB load=0.96 rootload=0.96
(smt.stats   59   8176 210083 980385  5894/5575/547   18105/3575    55  470   60.18)
(sat.ddfw       1      1   14.3562   1370001      6715         16            1      139)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 17 := 1097368338432&2097152
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   60   8337 215726 1004971  5965/5585/555   18365/3575    55  470   60.29)
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 18 := 1096294596608&2097152
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 18 := 1096294596608&2097152
(smt.stats   61   8514 219476 1019934  6045/5667/555   18797/3598    56  493   60.48)
ramon: poll                 wall=12.002s usage=12.191s mem=62796KiB load=0.92 rootload=0.92
(smt.stats   62   8708 227215 1055958  6297/5755/555   20088/3612    56  493   61.04)
(sat.ddfw       1      1   13.5189   1540001      7549         17            1      156)
ramon: poll                 wall=13.000s usage=13.159s mem=63432KiB load=0.97 rootload=0.97
(smt.stats   63   8921 235173 1077716  6401/5991/556   20534/3690    57  496   61.14)
(smt.stats   64   9155 241896 1112618  6430/6095/556   20879/3690    57  496   61.14)
ramon: poll                 wall=14.000s usage=14.159s mem=63944KiB load=1.00 rootload=1.00
(smt.stats   65   9412 246154 1146642  6807/6126/556   21337/3691    57  496   61.32)
(sat.ddfw       1      1   12.8169   1720001      8431         18            1      174)
(smt.stats   66   9513 251346 1172242  6824/6508/556   22148/3691    57  496   61.42)
(smt.stats   67   9624 252835 1184035  6825/6509/556   22268/3691    57  496   61.42)
(smt.stats   68   9746 258545 1222446  6830/6514/560   22483/3888    58  503   61.42)
(smt.stats   69   9880 263836 1257240  6841/6520/560   22756/3888    58  503   61.42)
ramon: poll                 wall=15.000s usage=15.159s mem=63944KiB load=1.00 rootload=1.00
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1097364144130&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #314) 64)) 2196875771906 := 549218942977 << 1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1097364144130&1
shl: (shl[40] (bv2int %1) (mod (bv2int %0) 40)) 1099511627775 := 1098437885953 << 1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1097368338436&1
shl: (shl[40] (bv2int %1) (mod (bv2int %0) 40)) 1098439983105 := 1098439983106 << 1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1097368338434&1
band: (band[40] (shl[40] (bv2int %1) (mod #104 40)) (if (= #576 39) 1 (if #578 2 #654))) 1 := 1097368338434&1
band: (band[40] (shl[64] (bv2int %1) (mod #315 64)) (if (= #673 63) 0 (if #675 1 #799))) 0 := 1097368338434&1
band: (band[40] (shl[40] (bv2int %1) (mod #104 40)) (if (= #576 39) 1 (if #578 2 #654))) 1 := 1097368338434&1
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 265553 1276074  6899/6574/578   23018/3968    59  542   61.61)
(smt.stats   71  10188 267035 1286262  6946/6613/578   23192/3969    59  542   61.61)
(smt.stats   72  10365 271523 1323803  7011/6636/578   23388/3972    59  542   61.61)
(sat.ddfw       1      1   12.1771   1910001      9362         19            1      193)
ramon: poll                 wall=16.000s usage=16.155s mem=64200KiB load=1.00 rootload=0.99
(smt.stats   73  10559 277869 1368823  7073/6691/578   23928/4024    60  547   61.80)
(smt.stats   74  10772 286396 1438661  7225/6786/578   24372/4030    60  547   61.80)
ramon: poll                 wall=17.000s usage=17.157s mem=64572KiB load=1.00 rootload=1.01
(smt.stats   75  11006 294054 1493671  7325/6914/578   25155/4032    60  547   61.90)
(sat.ddfw       1      1   11.5761   2110001     10343         20            1      214)
(smt.stats   76  11263 301667 1558974  7358/7024/578   25742/4032    60  547   61.99)
ramon: poll                 wall=18.002s usage=18.107s mem=64852KiB load=0.95 rootload=0.95
ramon: poll                 wall=19.000s usage=19.046s mem=64992KiB load=0.94 rootload=0.94
(sat.ddfw       1      1    11.052   2320001     11372         21            1      235)
(smt.stats   77  11545 313092 1609193  7581/7044/578   26488/4049    60  547   62.81)
(smt.stats   78  11646 318338 1626085  7675/7286/578   26699/4053    60  547   62.81)
ramon: poll                 wall=20.000s usage=20.033s mem=64996KiB load=0.99 rootload=0.98
ramon: end                  Fri Nov  1 21:47:46 2024
ramon: root.execname        z3
ramon: root.utime           20.090s
ramon: root.stime           0.010s
ramon: group.total          20.109s
ramon: group.utime          20.093s
ramon: group.stime          0.016s
ramon: group.mempeak        65252KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.00
