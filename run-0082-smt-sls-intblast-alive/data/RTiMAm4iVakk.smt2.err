ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:29:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28245 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/RTiMAm4iVakk.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             803458
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   76.9231     10000        49          0            1        2)
(sat.ddfw       1      1   39.5296     20001        98          1            1        3)
(sat.ddfw       1      1   39.0625     40001       196          2            1        5)
(smt.stats    0    101   3593    273  1157/1048/110     100/19     6   17   52.05)
(sat.ddfw       1      1   37.0828     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.792s mem=54424KiB load=0.79 rootload=0.79
(smt.stats    1    202   4001    533  1582/1396/110     202/20     6   17   52.24)
(smt.stats    2    313   6500   1598  1852/1704/112     339/39     7   22   52.24)
(smt.stats    3    414  10327   7069  1959/1798/117     447/46     9   24   52.45)
(sat.ddfw       1      1   33.0852    110001       539          4            1       12)
(smt.stats    4    525  11679   8426  2536/2318/123     616/102    11   32   52.55)
(smt.stats    5    647  13447  10407  2593/2371/124     789/118    13   34   52.55)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  14510  13220  2707/2397/124     900/125    13   34   52.66)
(smt.stats    7    859  15489  15355  2757/2512/124    1040/130    13   34   52.66)
(sat.ddfw       1      1   29.3077    160000       784          5            1       17)
(smt.stats    8    981  16917  17975  2777/2558/124    1163/130    13   34   52.75)
(smt.stats    9   1115  18377  19724  2811/2579/124    1294/131    13   34   52.75)
(smt.stats   10   1216  22632  23088  2822/2604/124    1389/131    13   34   52.85)
ramon: poll                 wall=2.000s usage=1.792s mem=55068KiB load=1.00 rootload=1.00
(smt.stats   11   1327  23822  25539  2834/2609/124    1505/133    13   34   52.85)
(smt.stats   12   1449  24953  27802  2855/2621/124    1642/133    13   34   52.85)
(smt.stats   13   1583  26079  31736  2877/2645/125    1789/233    14   34   52.85)
(sat.ddfw       1      1   26.0987    220001      1078          6            1       23)
(smt.stats   14   1730  28511  35258  2938/2668/125    1964/233    14   34   52.97)
(smt.stats   15   1831  29654  37781  2977/2734/126    2069/254    15   38   52.97)
(smt.stats   16   1942  30543  41648  3006/2781/127    2196/264    16   40   52.97)
(smt.stats   17   2064  31374  45657  3013/2797/128    2328/273    17   41   52.97)
ramon: poll                 wall=3.000s usage=2.755s mem=55312KiB load=0.96 rootload=0.96
(smt.stats   18   2198  32183  50764  3047/2801/128    2471/275    17   41   52.97)
(smt.stats   19   2345  33472  57720  3066/2843/128    2620/275    17   41   53.08)
(sat.ddfw       1      1   22.9133    290001      1421          7            1       30)
(smt.stats   20   2506  36419  60673  3080/2864/128    2769/275    17   41   53.08)
(smt.stats   21   2607  37686  64154  3089/2871/128    2871/275    17   41   53.08)
(smt.stats   22   2718  38609  67429  3101/2877/128    2981/275    17   41   53.08)
(smt.stats   23   2840  39766  72103  3104/2888/128    3101/275    17   41   53.08)
(smt.stats   24   2974  41321  78159  3109/2893/128    3238/275    17   41   53.21)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&2181843386371
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&2181843386371
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775808 := 4398046511104 << 33
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775808 := 4398046511104 << 33
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775808 := 4398046511104 << 33
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&4380866641920
shl: (shl[42] (bv2int %1) (+ 42 (* 4398046511103 #109))) 1073741824 := 1073741823 << 34
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&17179869183
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&4398046511102
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&4380866641919
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&4380866641918
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&1
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&2
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&4
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 7 := 17179869183&8
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 6 := 17179869183&8
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 4 := 17179869183&8
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&8
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&16
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&16
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&32
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&16
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&32
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&64
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 17179869183&8
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 17179869183&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775816 := 1073741826 << 33
(smt.stats   25   3121  43424  82737  3208/2970/202    3414/309    18   44   53.41)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 0 := 34359738367&8
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 34359738367&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775816 := 4294967296 << 34
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 68719476735&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775816 := 5368709118 << 35
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 1099511627775&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775816 := 5100273666 << 39
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 1099511627775&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775816 := 5100273666 << 39
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 274877906943&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775816 := 5117050882 << 37
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 274877906943&8
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 9223372036854775816 := 5117050882 << 37
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4398046511103&9
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4398046511103&9
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4398046511103&9
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4398046511103&9
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4398046511103&9
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4398046511103&9
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&12
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 10 := 4095&12
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&12
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&40
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&136
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&136
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&264
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&520
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 10 := 4095&1064
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&1064
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&1064
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&1064
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 10 := 4095&1032
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&1032
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 10 := 4095&1032
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&1032
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&1032
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4095&1032
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   26   3282  45755  88458  3408/3083/235    3612/330    19   70   53.81)
(smt.stats   27   3459  47214  93308  3722/3240/295    4008/348    19   70   54.20)
(smt.stats   28   3560  48220  96102  3847/3624/297    4147/424    20   82   54.20)
(sat.ddfw       1      1   20.7684    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.746s mem=56404KiB load=0.99 rootload=0.98
(smt.stats   29   3671  50333 102301  3866/3632/297    4361/424    20   82   54.20)
(smt.stats   30   3793  52200 109283  3872/3649/297    4479/466    21   88   54.32)
(smt.stats   31   3927  55382 117530  3875/3651/297    4691/466    21   88   54.32)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 2048 := 4398046511103&2050
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 2048 := 4398046511103&2050
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1024 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1024 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 64 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 128 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 256 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 512 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 448 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 384 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 256 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 128 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 64 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 16 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 32 := 4398046511103&2048
(smt.stats   32   4074  58962 127341  4010/3707/302    5090/650    22   90   54.41)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 16 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 32 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 32 := 4398046511103&2048
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 16 := 4398046511103&2048
(smt.stats   33   4235  61391 133348  4094/3815/328    5261/660    22   90   54.41)
(smt.stats   34   4412  63983 146249  4099/3876/328    5480/729    23  103   54.60)
(sat.ddfw       1      1   18.9793    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.745s mem=56868KiB load=1.00 rootload=1.00
(smt.stats   35   4606  67021 159886  4156/3883/329    5717/810    24  106   54.69)
(smt.stats   36   4707  70458 170569  4164/3941/329    5823/810    24  106   54.69)
(smt.stats   37   4818  73734 185585  4176/3953/331    5933/838    25  112   54.79)
(smt.stats   38   4940  76907 198108  4181/3958/331    6155/838    25  112   54.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 165)
(smt.stats   39   5074  79978 208115  4264/3965/331    6356/886    26  112   54.91)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 513 := 16777215&5121
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 513 := 16777215&5121
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 513 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1537 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1537 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1793 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1665 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1665 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1537 := 16777215&5121
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1537 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1537 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1537 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1537 := 16777215&5633
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1281 := 16777215&3585
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&3585
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&3585
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&3585
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&3073
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&3073
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&3073
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&3073
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&3073
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&1025
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 13469048226581578753 := 4160749568 << 23
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&1025
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 13469048226581578753 := 4160749568 << 23
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&1025
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 13469048226581578753 := 4160749568 << 23
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&1025
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 13469048226581578753 := 4160749566 << 23
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&1025
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 13469048226581578753 := 4160749566 << 23
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&1025
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 13469052624628089857 := 12750684160 << 23
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&1025
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 13469052624628089857 := 12750684160 << 23
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1025 := 16777215&1025
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 41 #801 #805) 64)) 13469052624628089857 := 10603200512 << 23
(smt.stats   40   5221  82798 216895  4447/4134/342    6543/951    27  114   54.91)
(sat.ddfw       1      1   17.4155    560001      2745         10            1       57)
(smt.stats   41   5382  85550 230250  4557/4235/374    6851/956    27  114   55.02)
(smt.stats   42   5559  88701 243393  4574/4342/377    7340/1001    28  136   55.11)
ramon: poll                 wall=6.000s usage=5.748s mem=57368KiB load=1.00 rootload=1.00
(smt.stats   43   5753  92310 270454  4648/4364/377    7562/1302    29  145   55.31)
(smt.stats   44   5966  93519 286694  4659/4434/377    7833/1302    29  145   55.31)
(smt.stats   45   6067  95751 299729  4667/4442/379    7908/1409    30  187   55.31)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   46   6178  99759 317048  4672/4445/379    8047/1409    30  187   55.31)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1 := 1099511627775&2049
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1153 := 1099511627775&1409
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1153 := 1099511627775&1409
(smt.stats   47   6300 102592 331951  4782/4451/379    8404/1418    30  187   55.50)
(smt.stats   48   6434 104161 343561  5114/4635/379    8850/1424    30  187   55.50)
(sat.ddfw       1      1   16.1007    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.748s mem=57852KiB load=1.00 rootload=1.01
(smt.stats   49   6581 108383 360413  5184/4942/380    9195/1635    31  190   55.62)
(smt.stats   50   6742 113239 386286  5250/4961/380    9452/1638    31  190   55.81)
(smt.stats   51   6919 118153 410238  5263/5034/380    9930/1638    31  190   55.81)
(smt.stats   52   7113 124305 436583  5277/5046/381   10255/1893    32  197   55.81)
ramon: poll                 wall=8.000s usage=7.750s mem=58600KiB load=1.00 rootload=1.00
(smt.stats   53   7326 138821 498171  5282/5057/381   10532/1893    32  197   56.30)
(sat.ddfw       1      1   14.9458    790001      3872         12            1       80)
(smt.stats   54   7560 148644 545864  5302/5069/384   11118/2114    33  205   56.30)
(smt.stats   55   7661 152383 557278  5432/5207/386   11313/2220    34  223   56.40)
(smt.stats   56   7772 155719 571398  5487/5209/386   11480/2220    34  223   56.40)
ramon: poll                 wall=9.000s usage=8.749s mem=58712KiB load=1.00 rootload=1.00
(smt.stats   57   7894 156839 575950  5741/5305/386   11659/2322    35  230   56.51)
(sat.ddfw       1      1    13.956    920001      4509         13            1       93)
(smt.stats   58   8028 159840 588973  5822/5597/390   12063/2322    35  230   56.62)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 14340 := 4398046511103&40964
(smt.stats   59   8175 161992 601197  5976/5599/390   12349/2434    36  256   56.77)
(smt.stats   60   8336 167173 640259  6259/5865/390   13000/2438    36  256   56.77)
ramon: poll                 wall=10.000s usage=9.658s mem=58928KiB load=0.91 rootload=0.91
(smt.stats   61   8513 170709 657436  6366/6069/390   13551/2441    36  256   56.88)
(smt.stats   62   8707 174441 673515  6763/6538/391   14027/2876    37  257   56.98)
(sat.ddfw       1      1   12.8961   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.614s mem=59252KiB load=0.96 rootload=0.95
(smt.stats   63   8920 183545 741698  6811/6565/392   14743/2879    37  257   57.08)
(smt.stats   64   9154 190116 780873  6869/6592/392   15242/3286    38  259   57.18)
(smt.stats   65   9411 201940 856694  6877/6652/392   15695/3286    38  259   57.28)
ramon: poll                 wall=12.000s usage=11.545s mem=59504KiB load=0.93 rootload=0.93
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   66   9512 204110 871300  6917/6661/392   15863/3287    38  259   57.28)
(smt.stats   67   9623 205326 881195  7079/6718/392   16030/3288    38  259   57.28)
(sat.ddfw       1      1   12.0588   1210001      5931         15            1      123)
(smt.stats   68   9745 207618 896534  7279/6882/392   16249/3289    38  259   57.76)
ramon: poll                 wall=13.000s usage=12.547s mem=59620KiB load=1.00 rootload=1.00
(smt.stats   69   9879 212102 936324  7447/7187/393   16689/3824    39  259   57.85)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 214243 951340  7564/7287/393   17119/3829    39  259   57.85)
ramon: poll                 wall=14.000s usage=13.545s mem=59816KiB load=1.00 rootload=1.00
(smt.stats   71  10187 218996 978307  7647/7344/394   17443/3837    39  259   57.95)
(sat.ddfw       1      1   11.3863   1370001      6715         16            1      139)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   72  10364 223580 1029252  7659/7428/394   17658/4026    40  262   57.95)
(smt.stats   73  10558 229425 1088131  7699/7454/394   18047/4027    40  262   57.95)
ramon: poll                 wall=15.000s usage=14.545s mem=60000KiB load=1.00 rootload=1.00
(smt.stats   74  10771 236768 1122936  7767/7480/394   18374/4029    40  262   58.09)
(smt.stats   75  11005 246919 1174869  7799/7574/394   19313/4029    40  262   58.09)
(sat.ddfw       1      1   10.7923   1540001      7549         17            1      156)
ramon: poll                 wall=16.000s usage=15.544s mem=60216KiB load=1.00 rootload=1.00
(smt.stats   76  11262 258838 1271241  8024/7583/394   19742/4038    40  262   58.20)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 33280 := 4398046511103&41024
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 29184 := 4398046511103&41088
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 29184 := 4398046511103&40992
(smt.stats   77  11544 263387 1306415  8608/8331/396   20563/4720    41  265   58.39)
(smt.stats   78  11645 265367 1321683  8716/8412/396   20833/4720    41  265   58.39)
ramon: poll                 wall=17.000s usage=16.543s mem=60776KiB load=1.00 rootload=1.00
(smt.stats   79  11756 266822 1341693  8720/8495/396   21028/4897    42  268   58.39)
(smt.stats   80  11878 268931 1349178  8785/8497/396   21262/4901    42  268   58.55)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 53504 := 1099511627775&53520
(smt.stats   81  12012 270779 1365510  8948/8723/396   21541/4901    42  268   58.55)
(smt.stats   82  12159 273856 1395957  8969/8740/396   21930/4901    42  268   58.65)
(sat.ddfw       1      1   10.2552   1720001      8431         18            1      174)
(smt.stats   83  12320 277356 1433973  9285/8749/396   22498/4905    42  268   58.75)
ramon: poll                 wall=18.000s usage=17.543s mem=60992KiB load=1.00 rootload=1.00
(smt.stats   84  12497 283272 1505629  9303/9076/397   22854/5170    43  273   58.85)
(smt.stats   85  12691 288110 1551592  9326/9093/397   23083/5170    43  273   59.03)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 1 := 4398046511103&3318013231104
(smt.stats   86  12904 290781 1577327  9584/9102/397   23375/5172    43  273   59.12)
ramon: poll                 wall=19.000s usage=18.544s mem=61396KiB load=1.00 rootload=1.00
(smt.stats   87  13138 295792 1586471  9700/9475/397   23748/5172    43  273   59.12)
(sat.ddfw       1      1   9.81202   1910001      9362         19            1      193)
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 2 := 4398046511103&3299318906880
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 8 := 4398046511103&3299318906880
band: (band[42] (if (= #335 63) 1 (if #563 3 #794)) (shl[64] (* 2 #317) (mod #809 64))) 4 := 4398046511103&3299318906880
(smt.stats   88  13395 305391 1723567  9934/9483/400   24220/5517    44  276   59.22)
ramon: poll                 wall=20.000s usage=19.643s mem=61704KiB load=1.10 rootload=1.10
ramon: end                  Fri Nov  1 22:29:50 2024
ramon: root.execname        z3
ramon: root.utime           19.710s
ramon: root.stime           0.010s
ramon: group.total          19.727s
ramon: group.utime          19.715s
ramon: group.stime          0.012s
ramon: group.mempeak        61968KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.088s
ramon: loadavg              0.98
