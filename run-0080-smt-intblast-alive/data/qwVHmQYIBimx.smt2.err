ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:03:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24713 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/qwVHmQYIBimx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             163186
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 0 := 9223372033499332608 >>l 60
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 0 := 9223372028667494400 >>l 60
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 0 := 5234491392 >>l 60
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 0 := 1152921508767596544 >>l 60
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 0 := 1152921503935758336 >>l 60
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #107))) 68719476735 := 8589934587 >>l 33
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 0 := 1152921503935758336 >>l 60
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #107))) 8589934588 := 8589934587 >>l 33
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 0 := 5234491392 >>l 60
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #107))) 40 := 39 >>l 33
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 0 := 5234491392 >>l 60
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #107))) 40 := 39 >>l 33
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 0 := 5234491392 >>l 60
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476728&0
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #107))) 40 := 39 >>l 33
(smt.stats    0    101   5187    867  1108/992/109      99/17     5   21   19.29)
(smt.stats    1    202   6350   1803  2325/1968/111     199/27     6   23   19.58)
(smt.stats    2    313   6925   2750  2496/2198/111     311/27     6   23   19.70)
(smt.stats    3    414   8385   4217  2583/2372/117     414/39     8   27   19.70)
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 137438953473 := 5764607537127096320 >>l 62
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 137438953473 := 5764607537127096320 >>l 62
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 137438953473 := 5764607537127096320 >>l 62
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 137438953473 := 5764607537127096320 >>l 62
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 2 := 68719476734&2
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 2 := 5764607537127096320 >>l 62
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1 := 68719476734&1
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #107))) 6 := 42949673065 >>l 35
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&1
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&1
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&2
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1 := 68719476735&2
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&68719476734
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&68719476732
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&68719476734
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 2 := 68719476735&68719476734
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 7 := 68719476735&8
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&8
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&16
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&8
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&16
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&32
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&32
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&8
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&64
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&16
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&32
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&64
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&128
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&16
(smt.stats    4    525   9656   5983  2703/2465/190     509/60    11   54   20.01)
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&16
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476735&32
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 47 := 68719476735&96
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 46 := 68719476735&96
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 32 := 68719476735&96
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 32 := 68719476735&160
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 32 := 68719476735&2336
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 64 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 96 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 160 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 288 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 544 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 160 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 160 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 544 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1056 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1056 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1069 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1068 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1068 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1064 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1064 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1056 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1056 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1568 := 68719476735&2080
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1057 := 68719476735&2080
(smt.stats    5    647  10666   8730  2973/2680/283     746/104    13   77   20.24)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  10964   9063  3011/2787/283     869/104    13   77   20.66)
(smt.stats    7    859  15899  13133  3423/3205/285    1001/131    14   81   20.81)
(smt.stats    8    981  17656  16509  3453/3236/300    1237/181    16   92   20.81)
(smt.stats    9   1115  22246  22658  3555/3294/303    1432/219    18  138   20.93)
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #107))) 68719476735 := 51539607613 >>l 35
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #107))) 68719476735 := 51539607613 >>l 35
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 1 := 68719476734&1
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
band: (band[36] (if (= #111 35) 2361183241400462868480 (if #468 1180591620700231434240 #536)) (lshr[36] (bv2int %0) (+ 36 #539))) 1 := 68719476734&1
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
band: (band[36] (if (= #111 35) 2361183241400462868480 (if #468 1180591620700231434240 #536)) (lshr[36] (bv2int %0) (+ 36 #539))) 1 := 68719476734&1
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
band: (band[36] (if (= #111 35) 2361183241400462868480 (if #468 1180591620700231434240 #536)) (lshr[36] (bv2int %0) (+ 36 #539))) 1 := 68719476734&1
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719476734&1
band: (band[36] (if (= #111 35) 2361183241400462868480 (if #468 1180591620700231434240 #536)) (lshr[36] (bv2int %0) (+ 36 #539))) 1 := 68719476734&1
(smt.stats   10   1216  24942  26377  3599/3376/315    1574/288    19  141   21.05)
ramon: poll                 wall=1.000s usage=0.999s mem=22232KiB load=1.00 rootload=0.99
(smt.stats   11   1327  29315  34377  3670/3427/315    1825/288    19  141   21.14)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  31596  40544  3762/3508/318    2129/332    21  151   21.24)
(smt.stats   13   1583  35899  47677  3783/3524/319    2410/378    22  158   21.36)
(smt.stats   14   1730  40074  61165  3786/3531/319    2708/378    22  158   21.48)
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719460352&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 1135039597248512 := 5764607534040088576 >>l 49
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719460352&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 1134902158295040 := 5764607534040088576 >>l 49
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 0 := 68719460352&0
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #550 #554) 64)) 1134902158295040 := 5764607534040088576 >>l 49
(smt.stats   15   1831  42585  69317  3834/3574/325    2961/440    23  162   21.65)
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 10240 := 68719460352&10240
band: (band[36] (if (= #269 63) 633825300104891328711496826880 (if #447 316912650052445664355748413440 #444)) (lshr[64] (* 134217728 #105) (mod #557 64))) 10240 := 68719460352&10240
(smt.stats   16   1942  46240  76699  3867/3605/336    3176/441    23  162   21.75)
(smt.stats   17   2064  48919  84016  3909/3616/338    3355/465    24  175   21.75)
(smt.stats   18   2198  51377  90538  4086/3669/338    3615/491    25  179   21.89)
ramon: poll                 wall=2.000s usage=1.999s mem=23540KiB load=1.00 rootload=1.00
(smt.stats   19   2345  54496 102433  4322/3950/339    4116/541    26  185   22.08)
(smt.stats   20   2506  57839 115392  4427/4154/343    4915/572    27  190   22.17)
(smt.stats   21   2607  60537 122965  4473/4184/343    5295/664    28  195   22.27)
(smt.stats   22   2718  63223 129648  4604/4323/344    5586/726    29  195   22.27)
(smt.stats   23   2840  64756 134459  4733/4362/344    5801/734    29  195   22.43)
ramon: poll                 wall=3.000s usage=2.998s mem=23784KiB load=1.00 rootload=1.00
(smt.stats   24   2974  67144 145979  4843/4584/345    6260/857    30  196   22.54)
(smt.stats   25   3121  74599 169922  4852/4590/345    6612/857    30  196   22.54)
(smt.stats   26   3282  83032 203578  4856/4597/345    7057/857    30  196   22.64)
(smt.stats   27   3459  88864 231919  4863/4601/346    7605/991    31  204   22.64)
(smt.stats   28   3560  90743 238565  4874/4605/350    7791/992    31  204   22.75)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   29   3671  96149 251769  4926/4623/350    8064/1098    32  211   22.75)
(smt.stats   30   3793  98392 265509  4978/4699/353    8333/1167    33  211   22.85)
ramon: poll                 wall=4.000s usage=3.998s mem=24128KiB load=1.00 rootload=1.00
(smt.stats   31   3927 101377 276697  5104/4846/354    8566/1167    33  211   22.96)
(smt.stats   32   4074 104607 288908  5183/4854/354    9033/1257    34  237   22.96)
(smt.stats   33   4235 108933 307976  5324/4965/355    9396/1263    34  237   23.06)
(smt.stats   34   4412 113496 329583  5481/5223/359    9967/1427    36  263   23.20)
ramon: poll                 wall=5.000s usage=4.998s mem=24508KiB load=1.00 rootload=0.99
(smt.stats   35   4606 119542 346234  5571/5239/362   10795/1432    36  263   23.30)
(smt.stats   36   4707 121978 351189  5772/5376/362   10977/1551    37  306   23.30)
(smt.stats   37   4818 124053 363105  5809/5545/362   11344/1552    37  306   23.47)
(smt.stats   38   4940 125988 370229  5857/5566/362   11473/1554    37  306   23.47)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 129554 385746  5879/5616/364   12170/1727    38  315   23.57)
(smt.stats   40   5221 131185 395576  5881/5618/364   12409/1727    38  315   23.73)
ramon: poll                 wall=6.000s usage=5.997s mem=25152KiB load=1.00 rootload=1.00
(smt.stats   41   5382 136252 414062  5940/5620/364   12818/1733    38  315   23.83)
(smt.stats   42   5559 140849 435365  6005/5677/365   13429/1839    39  318   23.83)
(smt.stats   43   5753 146452 455077  6211/5940/366   14171/1968    40  321   24.05)
ramon: poll                 wall=7.000s usage=6.997s mem=25596KiB load=1.00 rootload=1.00
(smt.stats   44   5966 153542 500394  6277/5991/366   14957/1968    40  321   24.30)
(smt.stats   45   6067 156516 512290  6278/6001/366   15095/1968    40  321   24.32)
(smt.stats   46   6178 161130 537013  6307/6011/368   15731/2154    41  332   24.34)
(smt.stats   47   6300 163936 558132  6319/6038/368   16045/2154    41  332   24.34)
(smt.stats   48   6434 166172 578917  6320/6043/368   16386/2293    42  334   24.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   49   6581 170106 593414  6406/6046/368   16767/2302    42  334   24.44)
ramon: poll                 wall=8.000s usage=7.997s mem=25804KiB load=1.00 rootload=1.00
(smt.stats   50   6742 175069 611625  6551/6150/368   17108/2304    42  334   24.56)
(smt.stats   51   6919 178467 625317  6680/6307/368   17488/2304    42  334   24.56)
(smt.stats   52   7113 182420 660271  6702/6423/370   17889/2479    43  336   24.67)
(smt.stats   53   7326 184778 698081  6771/6433/370   18141/2529    44  337   24.67)
ramon: poll                 wall=9.000s usage=8.997s mem=26040KiB load=1.00 rootload=1.00
(smt.stats   54   7560 187593 711149  6949/6515/370   18574/2530    44  337   24.78)
(smt.stats   55   7661 189392 722872  7024/6704/370   18730/2532    44  337   24.91)
(smt.stats   56   7772 192142 745115  7171/6762/370   18905/2532    44  337   24.91)
(smt.stats   57   7894 195887 775186  7265/6915/370   19137/2532    44  337   24.91)
(smt.stats   58   8028 198699 794112  7291/7003/376   19692/2675    45  349   25.00)
ramon: poll                 wall=10.000s usage=9.996s mem=26292KiB load=1.00 rootload=1.00
(smt.stats   59   8175 202818 827362  7312/7019/376   20138/2676    45  349   25.00)
(smt.stats   60   8336 208822 875449  7319/7043/376   20749/2676    45  349   25.10)
(smt.stats   61   8513 213680 915426  7333/7045/376   21669/2679    45  349   25.10)
(smt.stats   62   8707 219232 941615  7452/7061/376   22293/2684    45  349   25.25)
ramon: poll                 wall=11.000s usage=10.996s mem=26596KiB load=1.00 rootload=1.00
(smt.stats   63   8920 226221 979820  7681/7247/376   23188/2689    45  349   25.53)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9154 233470 1024452  7769/7415/376   24023/2694    45  349   25.65)
ramon: poll                 wall=12.000s usage=11.996s mem=27072KiB load=1.00 rootload=1.00
(smt.stats   65   9411 237932 1062673  7828/7506/377   24498/3187    46  353   25.77)
(smt.stats   66   9512 240159 1079045  7863/7574/377   25006/3189    46  353   25.77)
(smt.stats   67   9623 243621 1093933  8033/7595/377   25360/3193    46  353   25.77)
(smt.stats   68   9745 247399 1113598  8132/7780/377   25871/3199    46  353   25.91)
(smt.stats   69   9879 251019 1130665  8317/7883/377   26351/3210    46  353   25.91)
ramon: poll                 wall=13.000s usage=12.996s mem=27380KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 1197)
(smt.stats   70  10026 254250 1153460  8403/8084/377   25604/3211    46  353   26.06)
(smt.stats   71  10187 258214 1199977  8427/8135/377   25781/3211    46  353   26.06)
(smt.stats   72  10364 261353 1217567  8540/8154/377   26205/3216    46  353   26.06)
(smt.stats   73  10558 265953 1232933  8706/8321/377   26756/3219    46  353   26.06)
ramon: poll                 wall=14.000s usage=13.995s mem=27556KiB load=1.00 rootload=1.00
(smt.stats   74  10771 271783 1269065  9008/8565/378   27582/3552    47  354   26.40)
(smt.stats   75  11005 275781 1311649  9031/8755/380   28837/3714    48  382   26.50)
(smt.stats   76  11262 281789 1361347  9171/8766/380   29975/3718    48  382   26.61)
ramon: poll                 wall=15.004s usage=14.999s mem=28004KiB load=1.00 rootload=1.00
(smt.stats   77  11544 287830 1431607  9212/8914/380   31719/3719    48  382   26.85)
(smt.stats   78  11645 290117 1456214  9222/8946/381   32337/4316    49  419   26.85)
(smt.stats   79  11756 292780 1500615  9223/8947/381   32800/4316    49  419   26.98)
(smt.stats   80  11878 296512 1548273  9233/8957/381   32984/4316    49  419   26.98)
(smt.stats   81  12012 299273 1571868  9244/8968/381   33719/4316    49  419   26.98)
ramon: poll                 wall=16.000s usage=15.995s mem=28436KiB load=1.00 rootload=1.00
(smt.stats   82  12159 305482 1654638  9255/8979/381   34072/4316    49  419   27.09)
(smt.stats   83  12320 310120 1723371  9259/8983/381   34494/4316    49  419   27.09)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12497 316404 1787154  9264/8988/382   35729/4699    50  464   27.18)
(smt.stats   85  12691 322126 1826237  9303/8996/382   36866/4701    50  464   27.28)
ramon: poll                 wall=17.000s usage=16.995s mem=28708KiB load=1.00 rootload=0.99
(smt.stats   86  12904 325334 1856052  9363/9067/383   37199/4703    50  464   27.38)
(smt.stats   87  13138 330498 1893641  9396/9107/383   37426/4870    51  494   27.38)
(smt.stats   88  13395 340600 2006229  9410/9134/385   38259/4870    51  494   27.38)
ramon: poll                 wall=18.000s usage=17.995s mem=28968KiB load=1.00 rootload=1.00
(smt.stats   89  13677 348088 2044148  9505/9223/386   39947/4954    52  513   27.64)
(smt.stats   90  13987 355002 2099222  9580/9304/388   41273/5295    53  595   27.93)
(smt.stats   91  14088 356784 2111338  9646/9307/388   41491/5296    53  595   28.07)
(smt.stats   92  14199 359829 2142840  9675/9395/388   41745/5296    53  595   28.07)
ramon: poll                 wall=19.000s usage=18.994s mem=29376KiB load=1.00 rootload=1.00
(smt.stats   93  14321 362811 2152129  9717/9400/388   41919/5296    53  595   28.07)
(smt.stats   94  14455 365168 2172323  9792/9471/388   42283/5296    53  595   28.07)
(smt.stats   95  14602 368723 2197200  9822/9536/389   42948/5296    53  595   28.18)
(smt.stats   96  14763 373102 2242669  9977/9552/389   43311/5466    54  605   28.18)
ramon: poll                 wall=20.000s usage=19.994s mem=29788KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:03:26 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.984s
ramon: group.stime          0.016s
ramon: group.mempeak        30044KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
