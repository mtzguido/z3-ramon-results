ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:09:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28529 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1358
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/o6TuD0Gin3Eh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             536189
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   228/228     0/0  63       0    18.54   0.00)
(sat.stats    102    623    0   228/228   102/31  63       0    18.85   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 289 :time 0.00)
(sat.stats    102    623    0   228/228   102/31  63       0    18.85   0.00)
(sat.stats    102    623    0   228/228   102/31  63       0    18.85   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 361818.85 :time 0.00)
(sat.stats    102    623    0   230/230    40/30  63       0    18.85   0.01)
(sat.stats    105    639    1   230/230    43/33  63       0    18.85   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    168   1656    2   230/230   106/80  63       0    18.95   0.01)
(sat.stats    253   3557    3   230/230   191/149  63       0    19.04   0.01)
(sat.stats    256   3669    4   230/230   194/151  63       0    19.04   0.01)
(sat.stats    259   3778    5   230/230   197/152  63       0    19.04   0.01)
(sat.stats    262   3893    6   230/230   200/153  63       0    19.04   0.01)
(sat.stats    265   3989    7   230/230   203/155  63       0    19.04   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    268   4107    8   230/230   206/157  63       0    19.04   0.02)
(sat.stats    271   4205    9   230/230   209/158  63       0    19.04   0.02)
(sat.stats    274   4319   10   230/230   212/159  63       0    19.04   0.02)
(sat.stats    277   4423   11   230/230   215/161  63       0    19.04   0.02)
(sat.stats    280   4524   12   230/230   218/162  63       0    19.04   0.02)
(sat.stats    283   4622   13   230/230   221/163  63       0    19.04   0.02)
(sat.stats    329   5389   22   230/230   267/184  63       0    19.14   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1161 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1202 :time 0.00)
(sat.stats    472   8747   41   330/329   411/235  70       0    19.72   0.09)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2486 :time 0.00)
shl: (shl[48] (bv2int %1) (+ 48 (* 281474976710655 #73))) 0 := 0 << 16
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 47 #799 #803) 64)) 281474976708344 := 0 << 15
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 22497 := 65535&281474547712000
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2969 :time 0.00)
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 1 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 9300 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 22994 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 45640 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 4 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 41392 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 2 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 35680 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 47552 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 26368 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 128 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 32768 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 512 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 20480 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 1024 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 2048 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 16384 := 65535&65536
band: (band[48] (if (= #59 47) 1 (if #572 3 #705)) (shl[48] (bv2int %1) (+ 48 #708))) 0 := 65535&65536
band: (band[48] (if (= #331 63) 1 (if #547 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8192 := 65535&65536
ramon: poll                 wall=1.000s usage=0.999s mem=55640KiB load=1.00 rootload=0.98
(sat.stats :conflicts   :restarts         :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin             :units        :memory       )
(sat.stats   1203  22169   56 126496/126493  5749/4873  88       0    65.55   1.75)
(sat.stats   1207  22216   57 128932/128929  5809/4929  88       0    66.60   1.79)
ramon: poll                 wall=2.000s usage=1.999s mem=69336KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.999s mem=94672KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.999s mem=98MiB load=1.00 rootload=1.00
(sat.stats   1597  26587  177 207963/207960  9019/7750  88       0   103.17   4.76)
ramon: poll                 wall=5.000s usage=4.999s mem=106MiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.999s mem=110MiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.999s mem=116MiB load=1.00 rootload=1.00
ramon: poll                 wall=8.004s usage=8.003s mem=121MiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.998s mem=125MiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.998s mem=128MiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.998s mem=164MiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.998s mem=171MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.998s mem=173MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.998s mem=176MiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.998s mem=179MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.998s mem=185MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.998s mem=185MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.998s mem=187MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.998s mem=189MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.998s mem=192MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:10:02 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.110s
ramon: group.total          20.018s
ramon: group.utime          19.906s
ramon: group.stime          0.112s
ramon: group.mempeak        196MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.021s
ramon: loadavg              1.00
