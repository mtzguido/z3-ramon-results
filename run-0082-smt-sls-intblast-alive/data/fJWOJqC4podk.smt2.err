ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:53:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27671 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/fJWOJqC4podk.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             882573
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4510   2094  1220/1101/92      94/4     4   15   51.97)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    129.87     10000        49          0            1        2)
(smt.stats    1    202   6439   3846  1870/1685/92     190/5     4   15   52.07)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32 := 32&61
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 61 := 60 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32 := 32&61
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 61 := 60 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 18014398509481985 := 60 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 18014398509481985 := 60 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&18014398509481983
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 18014398509481985 := 168 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32 := 32&896
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 31 := 32&896
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 30 := 32&896
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&896
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 281474976710670 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&18014398509479424
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 281474976710616 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 31 := 32&7296
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 31 := 32&7296
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 30 := 32&7296
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&7296
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 114 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&7296
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 114 << 6
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 32&7296
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 114 << 6
(sat.ddfw       1      1    62.118     20001        98          1            1        3)
(smt.stats    2    313   7599   5132  1958/1725/122     295/15     7   22   52.46)
(smt.stats    3    414   9640   8154  2000/1800/136     396/13     9   30   52.58)
(smt.stats    4    525  10598  10027  2460/2072/139     512/27     9   30   52.58)
(smt.stats    5    647  13003  13323  2474/2223/146     637/37    10   34   52.71)
(sat.ddfw       1      1    57.971     40001       196          2            1        5)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 1&2335199806784770
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&2335199806784770
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784770 := 844424930131993 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 1&2335199806784770
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&2335199806784770
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784770 := 844424930131993 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 1&1688849860263903
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1688849860263903 := 844424930131993 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 1&1688849860265282
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&1688849860265282
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 844424930132641 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&562949953421330
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 281474976710665 << 1
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1&562949953421330
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 281474976710665 << 1
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  14811  15361  2539/2284/160     746/39    12   43   52.81)
(smt.stats    7    859  16174  17745  2564/2305/160     870/39    12   43   52.93)
(smt.stats    8    981  19084  20403  2611/2345/176     992/48    14   58   53.03)
(smt.stats    9   1115  23513  26085  2637/2371/185    1099/48    14   58   53.03)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784733 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784732 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784732 := 4503599627370496&2335199806784735
(sat.ddfw       1      1   48.6224     70001       343          3            1        8)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784728 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2335199806784720 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 256 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 512 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1024 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16384 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32768 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 131072 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 524288 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1048576 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8388608 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16777216 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&2335199806784641
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&321
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 4503599627370496&321
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 13 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 5 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784735
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784735
(smt.stats   10   1216  26065  28940  2744/2440/264    1180/100    16  130   53.53)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 5 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 4503599627370496&2335199806784705
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4503599627370496&2335199806784705
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784705 := 13510798882111493 << 53
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4503599627370496&2335199806784705
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784705 := 13510798882111493 << 53
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4503599627370496&2335199806784705
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335199806784705 := 13510798882111493 << 53
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 4503599627370496&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 321 := 13510798882111493 << 53
ramon: poll                 wall=1.000s usage=0.934s mem=56332KiB load=0.93 rootload=0.92
(smt.stats   11   1327  28122  31343  2862/2490/289    1316/113    16  130   54.01)
(sat.ddfw       1      1   40.8163    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  30178  35719  2973/2710/319    1446/153    18  158   54.01)
(smt.stats   13   1583  33052  40027  2999/2736/321    1605/166    19  163   54.01)
(smt.stats   14   1730  38600  49084  3022/2749/321    1779/166    19  163   54.11)
(smt.stats   15   1831  41217  51405  3032/2767/322    1882/190    20  164   54.11)
(sat.ddfw       1      1   34.9155    160000       784          5            1       17)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 516308395293147136 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 498293996783665152 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 498293996783665152 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762461256843264
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 516308395293147136 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&15762598695796672
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&14157036841336832
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 554588992125796352 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&14157036841336832
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 590617789144760320 := 15762598695796736 << 38
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 137438953472&11905237027651584
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 137438953472&11905237027651584
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 570351590821593088 := 15762598695796736 << 38
(smt.stats   16   1942  42729  53960  3180/2770/322    1996/192    20  164   54.32)
(smt.stats   17   2064  45109  56156  3236/2967/337    2133/194    21  167   54.32)
(smt.stats   18   2198  48182  62204  3249/2981/337    2307/194    21  167   54.32)
ramon: poll                 wall=2.000s usage=1.935s mem=56560KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   30.3649    220001      1078          6            1       23)
(smt.stats   19   2345  55384  75677  3251/2985/337    2462/223    22  167   54.32)
(smt.stats   20   2506  59540  82767  3300/3034/339    2678/233    23  167   54.42)
(smt.stats   21   2607  63137  87703  3304/3038/340    2799/233    23  167   54.59)
(sat.ddfw       1      1   26.7686    290001      1421          7            1       30)
(smt.stats   22   2718  64193  88772  3353/3039/340    2955/259    24  170   54.68)
ramon: poll                 wall=3.000s usage=2.935s mem=57364KiB load=1.00 rootload=0.99
(smt.stats   23   2840  66276  91916  3490/3172/340    3129/262    24  170   54.77)
(smt.stats   24   2974  68340  97130  3520/3243/340    3332/264    24  170   54.77)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 64&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 64&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 30357597488201153 := 18014398509481963 << 7
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 64&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 30357597488201153 := 18014398509481963 << 7
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 64&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 30357597488201153 := 18014398509481963 << 7
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 64 := 64&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 12343198978719169 := 18014398509481963 << 7
(smt.stats   25   3121  72561 103948  3568/3301/357    3519/338    26  182   54.89)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 128&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 30357597488201153 := 18014398509481964 << 8
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 128&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 128&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 128&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1039163914019192257 := 18014398509481964 << 8
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 128 := 128&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1057178312528674241 := 18014398509481964 << 8
(sat.ddfw       1      1   23.9808    370001      1813          8            1       38)
(smt.stats   26   3282  78782 115295  3590/3319/369    3719/338    26  182   55.12)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&12343198978719169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1165264703585566145 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1165264703585566145 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 4606014818896625089 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&12343198978719169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 4606014818896625089 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8192 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 6144 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 8192&18014398509252608
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 14636698788954029 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 14073748835532786 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 14073748835532786 := 18014398509481970 << 14
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8192 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8192 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8191 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8190 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 2 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 4 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 2 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 4 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 16 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 32 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 64 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 128 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 256 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 512 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 1024 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 2048 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 4096 := 18014398509252608&8192
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 8192&18014398509252608
band: (band[54] (shl[54] (bv2int %0) (mod #110 54)) (if (= #622 53) 1 (if #624 2 #728))) 8192 := 18014398509252608&8192
(smt.stats   27   3459  83074 125195  3735/3462/496    3974/448    28  223   55.66)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 33554432&3252355394961409
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4194304 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2097152 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1048576 := 33554432&2335362697396225
(smt.stats   28   3560  87224 134042  3796/3485/499    4091/451    28  223   55.66)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 262144 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 524288 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 131072 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32768 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 65536 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32768 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16384 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16384 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16384 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8388608 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335362697396225
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 33554432 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8388608 := 33554432&2335912453210113
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 8388608 := 33554432&2335912453210113
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 32 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 256 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 512 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1024 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1024 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 4096 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 2048 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 16777216 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 33554432&2335637575303169
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 33554432&2335637575303169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 20350036084785153 := 18014398509481982 << 26
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 33554432&2335637575303169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335637575303169 := 18014398509481982 << 26
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 33554432&2335637575303169
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 2335637575303169 := 18014398509481982 << 26
(smt.stats   29   3671  90911 148318  3917/3526/514    4201/510    29  252   55.89)
ramon: poll                 wall=4.000s usage=3.934s mem=58440KiB load=1.00 rootload=1.00
(smt.stats   30   3793  94583 155756  3920/3644/600    4376/524    30  269   56.11)
(sat.ddfw       1      1    21.645    460001      2254          9            1       47)
(smt.stats   31   3927  98266 166312  3926/3650/601    4529/547    31  276   56.38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 102921 176978  3964/3677/610    4698/548    31  276   56.47)
(smt.stats   33   4235 106880 184525  4045/3696/610    4943/593    32  294   56.57)
ramon: poll                 wall=5.002s usage=4.937s mem=58756KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.7083    560001      2745         10            1       57)
(smt.stats   34   4412 114427 197097  4113/3833/613    5155/646    33  299   56.57)
(smt.stats   35   4606 122636 209688  4122/3842/617    5336/659    34  315   56.66)
(smt.stats   36   4707 129149 222745  4238/3930/619    5458/662    35  321   56.86)
(smt.stats   37   4818 135139 231576  4250/3938/619    5623/662    35  321   56.97)
(smt.stats   38   4940 142419 240117  4259/3951/619    5844/662    35  321   57.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 68)
ramon: poll                 wall=6.002s usage=5.937s mem=59524KiB load=1.00 rootload=1.00
(smt.stats   39   5074 148627 250326  4267/3956/619    5979/662    35  321   57.34)
(sat.ddfw       1      1   18.1398    670001      3284         11            1       68)
(smt.stats   40   5221 153444 259111  4516/3968/619    6313/672    35  321   57.53)
ramon: poll                 wall=7.000s usage=6.931s mem=59780KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   16.7856    790001      3872         12            1       80)
(smt.stats   41   5382 158428 274732  4809/4226/619    6744/681    35  321   57.82)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&16449
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606863425 := 285873023221917 << 51
ramon: poll                 wall=8.000s usage=7.929s mem=60288KiB load=1.00 rootload=1.00
(smt.stats   42   5559 162482 285253  4994/4538/619    7250/685    35  321   57.91)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 1125899906842624&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 1152921504606846977 := 285873023221809 << 51
(sat.ddfw       1      1   15.6175    920001      4509         13            1       93)
(smt.stats   43   5753 170133 307021  5195/4726/625    7799/855    36  322   58.01)
(smt.stats   44   5966 178720 336424  5237/4927/627    8613/961    38  325   58.11)
ramon: poll                 wall=9.002s usage=8.934s mem=60672KiB load=1.00 rootload=1.01
(smt.stats   45   6067 183794 350221  5244/4934/627    8826/961    38  325   58.21)
(smt.stats   46   6178 188538 364699  5260/4950/627    9005/1058    39  327   58.21)
(sat.ddfw       1      1   14.4181   1060001      5196         14            1      108)
(smt.stats   47   6300 193651 376931  5267/4957/627    9329/1058    39  327   58.30)
ramon: poll                 wall=10.000s usage=9.809s mem=60728KiB load=0.88 rootload=0.87
(smt.stats   48   6434 196587 383235  5272/4962/628    9519/1226    40  335   58.30)
(smt.stats   49   6581 199263 394538  5354/4970/629    9872/1232    40  335   58.40)
ramon: poll                 wall=11.000s usage=10.990s mem=61152KiB load=1.18 rootload=1.18
(sat.ddfw       1      1   13.7149   1210001      5931         15            1      123)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 200952 398172  5825/5095/629   10036/1234    40  335   58.59)
ramon: poll                 wall=12.000s usage=12.116s mem=61268KiB load=1.13 rootload=1.13
(sat.ddfw       1      1   13.0901   1370001      6715         16            1      139)
(smt.stats   51   6919 202581 404611  6266/5597/629   10241/1237    40  335   58.69)
ramon: poll                 wall=13.000s usage=13.115s mem=61460KiB load=1.00 rootload=1.00
(smt.stats   52   7113 211600 420083  6320/6005/630   10455/1347    41  338   59.15)
(smt.stats   53   7326 222180 451425  6350/6040/631   10641/1347    41  338   59.15)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 1 := 2&11905237027651585
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 2&11905237027651585
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 29919635537133569 := 14263414591328282 << 2
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 2&11905237027651585
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 29919635537133569 := 14263414591328282 << 2
(sat.ddfw       1      1     12.36   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=14.115s mem=61696KiB load=1.00 rootload=1.00
(smt.stats   54   7560 227989 463908  6450/6062/631   10949/1366    42  341   59.34)
band: (band[54] (if (or #744 #745 #746 #747 #748 #749 #750 #751 #752 #753 #754) 0 (if #755 1 #859)) (shl[64] (bv2int %0) (mod #900 64))) 0 := 2&11905237027651585
shl: (shl[64] (bv2int %0) (mod (+ #110 #899) 64)) 29919635537133569 := 14262590403440642 << 2
(smt.stats   55   7661 231017 477945  6569/6197/640   11085/1368    42  341   59.34)
ramon: poll                 wall=15.000s usage=15.117s mem=61764KiB load=1.00 rootload=1.00
(smt.stats   56   7772 235177 488642  6587/6269/640   11215/1412    43  352   59.34)
(smt.stats   57   7895 239935 499416  6603/6291/641   11416/1486    44  352   59.34)
(sat.ddfw       1      1    11.705   1720001      8431         18            1      174)
(smt.stats   58   8029 244579 510934  6704/6332/644   11580/1491    44  352   59.53)
ramon: poll                 wall=16.000s usage=16.119s mem=62016KiB load=1.00 rootload=1.00
(smt.stats   59   8176 249455 522456  6844/6384/644   11823/1496    44  352   59.62)
ramon: poll                 wall=17.000s usage=17.120s mem=62252KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.1105   1910001      9362         19            1      193)
(smt.stats   60   8337 253674 531880  6900/6556/645   11988/1558    45  363   59.62)
ramon: poll                 wall=18.000s usage=18.121s mem=62416KiB load=1.00 rootload=1.00
(smt.stats   61   8514 256289 550018  6917/6593/646   12271/1558    45  363   59.72)
ramon: poll                 wall=19.000s usage=19.156s mem=62372KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   10.5474   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.028s mem=62388KiB load=0.87 rootload=0.87
ramon: end                  Fri Nov  1 22:53:25 2024
ramon: root.execname        z3
ramon: root.utime           20.060s
ramon: root.stime           0.030s
ramon: group.total          20.106s
ramon: group.utime          20.070s
ramon: group.stime          0.036s
ramon: group.mempeak        62672KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              1.00
