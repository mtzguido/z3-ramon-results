ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:45:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29208 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/7o3YFzuC9scs.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             651535
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1       100     10000        49          0            1        2)
(sat.ddfw       1      1   52.3613     20001        98          1            1        3)
(smt.stats    0    101   2260    248  1137/966/97     103/15     3   14   51.94)
(smt.stats    1    202   2555    754  1914/1645/97     224/16     3   14   52.03)
(sat.ddfw       1      1   52.2193     40001       196          2            1        5)
(smt.stats    2    313   4987   3090  2032/1826/97     366/16     3   14   52.03)
(smt.stats    3    414   6105   4518  2066/1905/100     476/44     4   16   52.14)
(smt.stats    4    525   7706   5679  2119/1948/104     607/66     5   23   52.14)
(smt.stats    5    647   9415   6806  2228/1991/104     730/97     6   24   52.24)
(sat.ddfw       1      1   44.7761     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  10821   8240  2294/2112/106     829/105     7   27   52.33)
(smt.stats    7    859  14185   9698  2308/2127/106     946/107     8   27   52.45)
(smt.stats    8    981  16778  11343  2346/2173/110    1075/131    10   30   52.45)
(smt.stats    9   1115  20218  15795  2549/2200/111    1217/152    11   31   52.67)
(smt.stats   10   1216  22139  19351  2732/2525/111    1317/152    11   31   52.78)
ramon: poll                 wall=1.000s usage=0.932s mem=55056KiB load=0.93 rootload=0.92
(smt.stats   11   1327  25133  22380  2746/2530/111    1426/152    11   31   52.78)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26812  25019  2773/2541/111    1550/152    11   31   52.78)
(sat.ddfw       1      1   37.8788    110001       539          4            1       12)
(smt.stats   13   1583  30076  28023  2787/2579/111    1684/152    11   31   52.88)
(smt.stats   14   1730  33937  31003  2789/2582/111    1836/152    11   31   53.00)
(smt.stats   15   1831  36650  34077  2794/2582/111    1937/152    11   31   53.00)
(smt.stats   16   1942  38408  37072  2844/2601/111    2042/155    11   31   53.00)
(smt.stats   17   2064  40375  40148  2855/2642/111    2170/155    11   31   53.00)
(smt.stats   18   2198  43397  44653  2867/2646/111    2304/157    11   31   53.10)
(smt.stats   19   2345  44008  50021  2897/2667/111    2479/157    11   31   53.10)
(smt.stats   20   2506  45390  54259  2914/2705/113    2643/216    13   34   53.10)
(smt.stats   21   2607  47613  56101  2924/2711/113    2746/216    13   34   53.10)
(sat.ddfw       1      1   32.6577    160000       784          5            1       17)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 274877906944 := 274877906940 << 2
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 3&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 137438953471 := 34359738368 << 3
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 274877906944 := 235609634524 << 2
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 3&39268272424
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 39268272423 := 39268272421 << 3
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 3&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 274877906944 := 39268272422 << 2
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 3&39268272424
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 39268272422 := 39268272421 << 3
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 3&39268272424
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 3 := 3&39268272424
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 1 := 3&39268272424
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 3&39268272424
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 2 := 3&39268272424
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 3&39268272424
band: (band[37] (if (= #109 36) 0 (if #566 1 #665)) (shl[37] (bv2int %0) (+ 37 #668))) 2 := 3&39268272424
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 1 := 3&39268272424
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 2 := 3&39268272424
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 2 := 3&39268272424
(smt.stats   22   2718  48434  59818  2989/2766/158    2852/219    14   37   53.30)
(smt.stats   23   2840  51377  62331  3037/2789/158    2978/220    14   37   53.30)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&6
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&7
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&7
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&11
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&6
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&7
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&11
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&10
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&11
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&19
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&34
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&43
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3 := 68719476735&67
(smt.stats   24   2974  54319  66821  3105/2875/222    3119/232    16   72   53.59)
(smt.stats   25   3121  55578  70288  3128/2887/222    3273/232    16   72   53.59)
(smt.stats   26   3282  57058  75119  3132/2913/222    3451/243    17   77   53.59)
ramon: poll                 wall=2.000s usage=1.928s mem=55952KiB load=1.00 rootload=1.00
(smt.stats   27   3459  61876  80150  3162/2929/222    3665/244    17   77   53.89)
(smt.stats   28   3560  62645  82971  3166/2945/223    3771/288    18   79   53.89)
(sat.ddfw       1      1    28.477    220001      1078          6            1       23)
(smt.stats   29   3671  63866  85582  3237/2952/223    3892/291    18   79   53.99)
(smt.stats   30   3793  64781  89650  3293/3021/223    4024/293    18   79   53.99)
(smt.stats   31   3927  65123  94155  3302/3083/223    4160/293    18   79   53.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4074  65788  98716  3302/3083/223    4356/293    18   79   53.99)
(smt.stats   33   4235  66114 101551  3303/3084/223    4516/293    18   79   53.99)
(smt.stats   34   4412  71626 106161  3309/3090/223    4695/293    18   79   53.99)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 0&34359738432
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 37 := 85899345952 << 1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 0&34359738432
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 37 := 17179869216 << 1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 0&34359738400
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 37 := 17179869200 << 1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 0&34359738392
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 93 := 17179869196 << 1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 0&34359738384
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 37 := 17179869192 << 1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&8
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&8
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&8
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 8 := 34359738367&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 8 := 34359738372 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 8 := 34359738367&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 8 := 34359738372 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 8 := 34359738367&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 8 := 34359738372 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 39191576576 << 34
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 17179869185 := 19864223744 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 39728447488 << 34
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 17179869185 := 19864223744 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 39728447488 << 34
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 17179869185 := 19864223744 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 39728447488 << 34
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 17179869185 := 19864223744 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 34359738370 << 34
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 5 := 18790481920 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 17179869183&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 8589934589 := 18253611008 << 35
(smt.stats   35   4606  73650 109849  3400/3174/247    4933/363    19   92   54.29)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 37044092928 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 1 := 18522046464 << 36
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 36507222032 << 35
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 3 := 18522046464 << 36
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 0 := 37044092920 << 35
(smt.stats   36   4707  75599 113473  3440/3201/247    5047/364    19   92   54.38)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 2 := 18522050564 << 36
(sat.ddfw       1      1   25.1889    290001      1421          7            1       30)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 3 := 18522050568 << 36
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 34359738367&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 3 := 19058921480 << 36
ramon: poll                 wall=3.000s usage=2.923s mem=56756KiB load=0.99 rootload=0.99
(smt.stats   37   4818  76877 115123  3513/3231/252    5166/367    19   92   54.48)
(smt.stats   38   4940  77725 121242  3670/3373/253    5311/393    20   93   54.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 214)
(sat.ddfw       1      1   22.5352    370001      1813          8            1       38)
(smt.stats   39   5074  78669 126465  3679/3446/255    5275/393    20   93   54.58)
(smt.stats   40   5221  84847 134143  3685/3450/255    5428/412    21   99   54.58)
ramon: poll                 wall=4.000s usage=3.922s mem=57080KiB load=1.00 rootload=1.00
(smt.stats   41   5382  88879 137235  3948/3617/257    5648/447    22  102   54.77)
(smt.stats   42   5559  91012 140363  4042/3764/257    5864/447    22  102   54.87)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 1&34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 34 := 34 << 1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 1&34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 34 := 34 << 1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 1&34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #770 #774) 64)) 34 := 34 << 1
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 1&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 113816633144 := 0 << 2
(sat.ddfw       1      1   20.3989    460001      2254          9            1       47)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 0 := 1&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #105))) 67645734916 := 0 << 2
(smt.stats   43   5753  97015 147294  4157/3913/269    6145/496    23  105   55.11)
(smt.stats   44   5966 101529 159629  4237/3985/271    6488/496    23  105   55.20)
(smt.stats   45   6067 104258 165601  4248/3992/271    6630/527    24  116   55.30)
ramon: poll                 wall=5.000s usage=4.985s mem=57684KiB load=1.06 rootload=1.07
(sat.ddfw       1      1   18.6359    560001      2745         10            1       57)
(smt.stats   46   6178 107562 169054  4337/3997/271    6780/529    24  116   55.41)
(smt.stats   47   6300 115434 182610  4369/4117/271    6939/529    24  116   55.41)
ramon: poll                 wall=6.000s usage=5.983s mem=57884KiB load=1.00 rootload=0.99
(smt.stats   48   6434 120364 194697  4446/4194/274    7234/663    26  124   55.50)
(sat.ddfw       1      1   17.1153    670001      3284         11            1       68)
(smt.stats   49   6581 123505 203023  4457/4203/274    7422/663    26  124   55.50)
(smt.stats   50   6742 129376 214999  4489/4237/275    7633/709    27  129   55.50)
(smt.stats   51   6919 135028 228225  4623/4356/277    7861/716    27  129   55.74)
ramon: poll                 wall=7.000s usage=7.106s mem=58248KiB load=1.12 rootload=1.13
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 137190 235136  4731/4395/277    8051/724    28  150   55.74)
(sat.ddfw       1      1   15.8353    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=8.278s mem=58204KiB load=1.17 rootload=1.17
(smt.stats   53   7326 139607 246460  4967/4521/277    8299/731    28  150   56.27)
(sat.ddfw       1      1   15.0185    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=9.276s mem=58288KiB load=1.00 rootload=1.00
(smt.stats   54   7560 142066 252966  5147/4758/277    8559/737    28  150   56.27)
(sat.ddfw       1      1   14.2872   1060001      5196         14            1      108)
ramon: poll                 wall=10.005s usage=10.384s mem=58592KiB load=1.10 rootload=1.10
(smt.stats   55   7661 143332 257286  5299/4946/277    8731/742    28  150   56.48)
ramon: poll                 wall=11.000s usage=11.376s mem=58848KiB load=1.00 rootload=0.99
(smt.stats   56   7772 146072 262530  5340/5055/279    8880/808    29  151   56.48)
(sat.ddfw       1      1    13.325   1210001      5931         15            1      123)
(smt.stats   57   7894 149019 272055  5358/5094/279    9102/808    29  151   56.58)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 16 := 68719476735&136902082625
(smt.stats   58   8028 152187 277909  5420/5112/279    9340/829    30  152   56.58)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 17 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 17 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 33 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 65 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 33 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 65 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 101 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 97 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 129 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 129 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 193 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 321 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 577 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 1089 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 2113 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 4161 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 65 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 65 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 69 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 65 := 68719476735&136902082625
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536879137 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536879137 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536879141 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536887393 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536891493 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536891493 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536895589 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536895589 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536895589 := 68719476735&136902082661
(smt.stats   59   8175 153991 286149  5709/5330/364    9663/919    31  179   56.99)
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536871013 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536871013 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536871013 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536871013 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536871013 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536871013 := 68719476735&136902082661
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 536871013 := 68719476735&136902082661
ramon: poll                 wall=12.000s usage=12.380s mem=59396KiB load=1.00 rootload=1.00
(smt.stats   60   8336 158027 298262  5943/5620/406    9974/923    31  179   57.18)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8513 164780 323542  5959/5703/408   10496/1028    32  189   57.28)
(smt.stats   62   8707 173428 343625  5975/5704/408   10771/1171    33  190   57.28)
(sat.ddfw       1      1   12.4922   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=13.377s mem=59756KiB load=1.00 rootload=1.00
(smt.stats   63   8920 181389 362213  6276/5926/410   11406/1226    34  190   57.50)
(smt.stats   64   9154 185046 379125  6297/6038/412   11942/1226    34  190   57.50)
ramon: poll                 wall=14.000s usage=14.378s mem=60008KiB load=1.00 rootload=1.00
band: (band[37] (if (= #305 63) 0 (if #543 1 #763)) (shl[64] (* 2 #288) (mod #778 64))) 3758096389 := 68719476735&136902082693
(smt.stats   65   9411 189916 393994  6625/6062/412   12548/1771    35  201   57.69)
(sat.ddfw       1      1   11.7639   1540001      7549         17            1      156)
(smt.stats   66   9512 191376 402162  6647/6388/418   12836/1771    35  201   57.79)
(smt.stats   67   9623 192396 410496  6651/6392/418   12994/1771    35  201   57.79)
(smt.stats   68   9745 194350 422408  6654/6396/418   13340/1965    36  203   57.79)
ramon: poll                 wall=15.000s usage=15.378s mem=60304KiB load=1.00 rootload=1.00
(smt.stats   69   9879 198978 435659  6802/6401/418   13609/1986    36  203   57.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 3473)
(smt.stats   70  10026 202178 448447  6965/6706/421   10640/2166    37  205   57.89)
(smt.stats   71  10187 210609 464827  7050/6707/421   11128/2171    37  205   58.40)
ramon: poll                 wall=16.000s usage=16.376s mem=60720KiB load=1.00 rootload=0.99
(smt.stats   72  10364 220986 489002  7194/6914/423   11544/2411    39  224   58.60)
(sat.ddfw       1      1   11.1193   1720001      8431         18            1      174)
(smt.stats   73  10558 225663 509005  7303/6971/425   12529/2481    40  244   58.79)
ramon: poll                 wall=17.000s usage=17.375s mem=61156KiB load=1.00 rootload=1.00
(smt.stats   74  10771 233320 537522  7349/7050/430   13113/2747    41  249   58.98)
ramon: poll                 wall=18.000s usage=18.374s mem=61484KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5397   1910001      9362         19            1      193)
(smt.stats   75  11005 240452 564726  7402/7101/432   13614/2800    43  283   59.08)
ramon: poll                 wall=19.000s usage=19.373s mem=61372KiB load=1.00 rootload=1.00
(smt.stats   76  11262 255570 592412  7676/7159/432   14282/2818    43  283   59.17)
ramon: poll                 wall=20.000s usage=20.377s mem=61828KiB load=1.00 rootload=1.00
(sat.ddfw       1      1     10.02   2110001     10343         20            1      214)
(smt.stats   77  11544 269503 625773  7996/7682/439   15692/3024    45  301   59.27)
ramon: end                  Fri Nov  1 21:46:02 2024
ramon: root.execname        z3
ramon: root.utime           20.440s
ramon: root.stime           0.000s
ramon: group.total          20.455s
ramon: group.utime          20.447s
ramon: group.stime          0.008s
ramon: group.mempeak        62084KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.083s
ramon: loadavg              1.02
