ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:51:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29148 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1389
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/9r0byQNQbTAU.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             670397
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4481   2576  1168/1053/90      97/8     3   14   51.87)
(smt.stats    1    202   5500   3918  1828/1572/91     193/18     4   15   52.06)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   123.457     10000        49          0            1        2)
(smt.stats    2    313   6292   5420  2196/1981/103     290/47     7   23   52.16)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 1&101
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 101 := 100 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 1&101
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 101 := 100 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 1&101
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 101 := 100 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 1&150
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&150
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 150 := 149 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&596
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2 := 149 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&562949953421311
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&562949953421311
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&562949953421310
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 562949953421310 := 100 << 2
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 1&400
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 0 := 100 << 2
(smt.stats    3    414   7373   6930  2242/2019/129     387/50     8   23   52.36)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&33
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 562949953421345 := 281474976710642 << 1
(sat.ddfw       1      1    57.477     20001        98          1            1        3)
(smt.stats    4    525   8318   8722  2265/2042/143     468/55    11   57   52.46)
(smt.stats    5    647  10202  11450  2302/2072/144     597/59    12   57   52.56)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  13040  14005  2321/2089/144     687/59    12   57   52.65)
(smt.stats    7    860  16336  19445  2353/2121/149     718/68    14  105   52.65)
(smt.stats    8    982  18350  21926  2355/2123/149     853/68    14  105   52.75)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&46
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&46
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&44
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&46
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&45
(sat.ddfw       1      1   55.7103     40001       196          2            1        5)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&44
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&36
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842660 := 48 << 48
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 12 := 72313030766555&46
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 10 := 72313030766555&46
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 13510798882111534 := 48 << 48
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&0
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 47 := 48 << 48
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&0
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 47 := 48 << 48
(smt.stats    9   1116  20434  26008  2398/2165/185     801/81    16  288   52.85)
(smt.stats   10   1217  23351  29745  2429/2192/188     900/81    16  288   53.02)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&4
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 4 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 0 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 0 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 64 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2049 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 2 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 8 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 32 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 8 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 6 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 2 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2049 := 8 << 8
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 2 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 2 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 32 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 32 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 64 := 65&2048
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 1 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 2 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 64 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 60 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 60 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 56 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 48 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 60 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 64 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 63 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 4 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 8 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 48 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 32 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 4 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 12 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 8 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 4 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 8 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 8 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 4 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 32 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 16 := 2048&65
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 65&2048
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 2 := 2048&65
(smt.stats   11   1328  24884  32649  2554/2285/292    1014/92    18  309   53.50)
(sat.ddfw       1      1     43.29     70001       343          3            1        8)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  27223  36359  2583/2336/319    1143/111    19  319   53.76)
(smt.stats   13   1584  30121  40825  2657/2392/320    1275/114    20  350   53.85)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842626 := 4 << 4
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842624 := 4 << 4
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842624 := 4 << 4
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 4&64
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&64
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 34 := 4 << 4
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 4&64
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 34 := 4 << 4
(smt.stats   14   1731  32327  46213  2708/2418/329    1489/133    21  352   54.14)
ramon: poll                 wall=1.000s usage=0.885s mem=56676KiB load=0.88 rootload=0.88
(sat.ddfw       1      1   36.1991    110001       539          4            1       12)
(smt.stats   15   1832  36687  51775  2829/2527/339    1665/138    22  358   54.62)
(sat.ddfw       1      1   32.0918    160000       784          5            1       17)
(smt.stats   16   1943  37944  54102  2947/2650/344    1857/146    23  358   54.82)
(smt.stats   17   2065  41552  60162  2965/2667/352    2042/166    24  387   54.95)
ramon: poll                 wall=2.000s usage=1.880s mem=57468KiB load=1.00 rootload=0.99
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 16&214457125112920
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 16&214457125112920
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 7434792911720 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 7434792911720 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 7434792911720 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 7434792911720 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 9633816167198 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 9633816167296 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&214457125112916
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1340357031955540 := 13194139533266 << 6
(sat.ddfw       1      1    28.504    220001      1078          6            1       23)
(smt.stats   18   2199  47662  69995  3080/2769/359    2238/189    26  392   55.04)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 16&412829965843584
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 16&412829965843584
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 412829965843562 := 24042654260722 << 6
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 16&412829965843584
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 412829965843562 := 24042654260722 << 6
(smt.stats   19   2346  50444  75368  3174/2786/359    2516/193    26  392   55.23)
(smt.stats   20   2507  56338  89592  3177/2864/371    2777/193    26  392   55.23)
(smt.stats   21   2608  59713  96919  3180/2869/372    2977/221    27  398   55.23)
(smt.stats   22   2719  66774 109264  3192/2879/372    3134/235    28  400   55.41)
(sat.ddfw       1      1   24.4584    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.808s mem=57980KiB load=0.93 rootload=0.93
(smt.stats   23   2841  75526 121875  3207/2886/372    3318/236    28  400   55.51)
(smt.stats   24   2975  79494 128902  3262/2907/372    3633/238    28  400   55.51)
(smt.stats   25   3122  84846 137213  3273/2960/372    3860/238    28  400   55.64)
(sat.ddfw       1      1   22.1976    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.784s mem=58172KiB load=0.98 rootload=0.97
(smt.stats   26   3283  93193 149542  3333/3016/375    4097/288    29  402   55.86)
(sat.ddfw       1      1   20.0803    460001      2254          9            1       47)
(smt.stats   27   3460  97969 158438  3448/3131/377    4333/310    30  402   55.95)
(smt.stats   28   3561 100644 165091  3473/3141/377    4550/312    30  402   56.05)
ramon: poll                 wall=5.000s usage=4.758s mem=58456KiB load=0.97 rootload=0.98
(smt.stats   29   3672 104842 175117  3491/3174/377    4700/312    30  402   56.05)
(smt.stats   30   3794 109176 183224  3572/3182/377    4917/332    31  405   56.15)
(sat.ddfw       1      1   18.5117    560001      2745         10            1       57)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766563
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766555
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766555
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&72313030766547
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&37529996895219
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&37529996895251
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 19 := 72313030766555&37529996895251
(smt.stats   31   3928 112470 190761  3778/3264/377    5209/345    31  405   56.24)
ramon: poll                 wall=6.000s usage=5.760s mem=58784KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 116739 203252  3802/3476/405    5620/361    32  410   56.34)
(smt.stats   33   4236 123810 220114  3831/3487/405    5941/389    33  427   56.44)
(sat.ddfw       1      1    17.158    670001      3284         11            1       68)
(smt.stats   34   4413 132573 242769  3857/3518/406    6233/428    34  431   56.44)
(smt.stats   35   4607 140391 261527  3866/3543/406    6566/428    34  431   56.80)
ramon: poll                 wall=7.000s usage=6.760s mem=59040KiB load=1.00 rootload=0.99
(smt.stats   36   4708 144236 271281  3947/3545/406    6729/431    34  431   56.80)
(smt.stats   37   4819 147484 280531  4186/3666/406    6977/433    34  431   56.89)
(smt.stats   38   4941 150395 289329  4260/3937/407    7390/502    35  437   56.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 64)
(sat.ddfw       1      1   15.9681    790001      3872         12            1       80)
(smt.stats   39   5075 154787 299750  4284/3946/407    7864/503    35  437   57.09)
ramon: poll                 wall=8.000s usage=7.760s mem=59296KiB load=1.00 rootload=1.00
(smt.stats   40   5222 161592 316707  4345/3977/407    8293/508    35  437   57.18)
(smt.stats   41   5383 167950 333606  4370/4045/407    8737/509    35  437   57.49)
(sat.ddfw       1      1   14.9322    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.760s mem=59868KiB load=1.00 rootload=1.00
(smt.stats   42   5560 173518 347800  4533/4056/407    9277/515    35  437   57.58)
(smt.stats   43   5754 181332 374784  4645/4235/407    9690/518    35  437   57.87)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077476 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077476 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077480 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077472 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077472 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077472 := 1077548&428914250226707
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077472 := 1077548&428914250226739
ramon: poll                 wall=10.000s usage=9.805s mem=60424KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   14.0154   1060001      5196         14            1      108)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1077505 := 1077548&428914250226739
(smt.stats   44   5967 186014 388841  4856/4408/407   10191/525    35  437   57.95)
(smt.stats   45   6068 188349 398459  4883/4560/413   10551/776    36  438   57.95)
(smt.stats   46   6179 193619 420330  4923/4565/413   10904/779    36  438   58.05)
ramon: poll                 wall=11.000s usage=10.805s mem=60700KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.1915   1210001      5931         15            1      123)
(smt.stats   47   6301 197647 429921  5146/4615/413   11108/879    37  455   58.14)
ramon: poll                 wall=12.000s usage=11.798s mem=60856KiB load=0.99 rootload=0.99
(smt.stats   48   6435 200943 438708  5262/4841/413   11339/880    37  455   58.24)
(smt.stats   49   6582 206024 446584  5287/4962/413   11593/880    37  455   58.24)
(smt.stats   50   6743 211186 467580  5312/4978/413   11855/880    37  455   58.71)
(sat.ddfw       1      1   12.4359   1370001      6715         16            1      139)
(smt.stats   51   6920 219468 502714  5339/5011/413   12224/881    37  455   58.71)
ramon: poll                 wall=13.003s usage=12.751s mem=60932KiB load=0.95 rootload=0.95
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   52   7114 225747 524169  5404/5021/417   13027/985    38  463   58.80)
(smt.stats   53   7327 233683 555441  5539/5208/418   13637/1104    39  465   58.99)
ramon: poll                 wall=14.000s usage=13.713s mem=61344KiB load=0.97 rootload=0.96
(sat.ddfw       1      1    11.855   1540001      7549         17            1      156)
(smt.stats   54   7561 242462 582417  5656/5219/418   14499/1107    39  465   59.09)
ramon: poll                 wall=15.003s usage=14.708s mem=61364KiB load=0.99 rootload=1.00
(smt.stats   55   7662 245490 591752  5804/5338/418   14902/1110    39  465   59.19)
(smt.stats   56   7773 248490 601429  5947/5518/418   15263/1111    39  465   59.19)
(sat.ddfw       1      1   11.2613   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=15.710s mem=61492KiB load=1.00 rootload=1.00
(smt.stats   57   7895 251900 619360  6181/5637/418   15687/1111    39  465   59.28)
(smt.stats   58   8029 255476 630966  6236/5898/418   16045/1111    39  465   59.28)
ramon: poll                 wall=17.000s usage=16.710s mem=61920KiB load=1.00 rootload=1.00
(smt.stats   59   8176 261863 659275  6383/5910/418   16678/1114    39  465   59.38)
(smt.stats   60   8337 267443 692232  6668/6086/418   17375/1123    39  465   59.47)
(sat.ddfw       1      1   10.7127   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=17.707s mem=61872KiB load=1.00 rootload=0.99
(smt.stats   61   8514 271120 711077  6912/6371/418   18044/1125    39  465   59.57)
(smt.stats   62   8708 277082 732212  6931/6599/418   18390/1125    39  465   59.70)
ramon: poll                 wall=19.000s usage=18.841s mem=62352KiB load=1.13 rootload=1.14
(sat.ddfw       1      1    10.352   2110001     10343         20            1      214)
(smt.stats   63   8921 286260 767698  7085/6614/418   19500/1139    39  465   59.89)
(smt.stats   64   9155 295901 791495  7125/6797/418   20162/1139    39  465   59.99)
ramon: poll                 wall=20.000s usage=19.840s mem=62748KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:51:23 2024
ramon: root.execname        z3
ramon: root.utime           19.820s
ramon: root.stime           0.020s
ramon: group.total          19.850s
ramon: group.utime          19.822s
ramon: group.stime          0.028s
ramon: group.mempeak        63012KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.020s
ramon: loadavg              0.99
