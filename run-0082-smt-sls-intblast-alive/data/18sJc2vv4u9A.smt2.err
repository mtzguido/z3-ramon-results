ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:28:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29551 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/18sJc2vv4u9A.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             591885
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   66.2252     10000        49          0            1        2)
(smt.stats    0    101   3351   2979  1288/1161/111      92/13     6   17   52.18)
(sat.ddfw       1      1   36.7684     20001        98          1            1        3)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 2 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 288230376151711741&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 288230376151711741&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 288230376151711740&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 288230376151711740 := 288230376151711741 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 2 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 2 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 2 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 1&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 1 := 0 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 31 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 30 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 64&31
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 96 := 1 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 64&31
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 96 := 1 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 63&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 8&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&31
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 288230376151711744 := 4503599627370497 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&31
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4503599627370497 := 4503599627370496 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&31
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 288230376151711743 := 4503599627370496 << 6
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 30 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 30 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 28 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 16 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 4 := 64&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 16 := 64&31
(smt.stats    1    202   4202   4066  2031/1797/134     201/22     8   19   52.48)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 28 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 16 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335741504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335741504&31
(sat.ddfw       1      1   42.1053     40001       196          2            1        5)
(smt.stats    2    313   4586   4756  2063/1864/190     322/34    10   36   54.04)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335742144&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 9 := 4575085335742144&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335742144&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 4575085335742144&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335749504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 16 := 4575085335749504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335749504&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 16 := 4575085335749504&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335749440&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 17 := 4575085335749440&31
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335749440&31
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 16 := 4575085335749440&31
(smt.stats    3    414   5758   8592  2508/2313/207     439/52    11   40   53.37)
(smt.stats    4    525   6299  10092  2867/2640/211     499/80    13   59   53.46)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741517&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741520&3
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 4575085335741520 := 4575085335741516 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741521&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335741520&3
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 4575085335741520 := 4575085335741518 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932144&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745344 := 4575085335741518 << 3
(sat.ddfw       1      1   38.5109     70001       343          3            1        8)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932144&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745344 := 4575085335741518 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932144&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745344 := 4575085335741518 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932136&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745280 := 4575085335741517 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685932144&3
shl: (shl[58] (bv2int %1) (mod (bv2int %0) 58)) 4575085335745280 := 4575085335741518 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335745792&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 4575085335745792&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335745792&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 4575085335745792&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 4575085335745792&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 4575085335745792&3
(smt.stats    5    647   8199  12714  2946/2655/211     627/86    13   59   53.75)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685968386&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685968386&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 36600682685968386&3
shl: (shl[64] (bv2int %1) (mod (+ #109 #412) 64)) 36600682685968386 := 571885666968256 << 3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 1 := 36600682685931976&3
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748   9584  14906  3029/2792/242     734/122    15   65   53.75)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685931976&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932032&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932040&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 36600682685932056&562949953421311
ramon: poll                 wall=1.000s usage=0.930s mem=56584KiB load=0.93 rootload=0.90
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346232&562949953421311
(smt.stats    7    859  11965  18870  3412/3120/287     878/159    17   77   54.04)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346232&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346232&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346968&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346968&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043346328&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043347992&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043347992&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043351320&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043350936&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043349272&562949953421311
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 24 := 82351536043349784&562949953421311
(sat.ddfw       1      1   34.5125    110001       539          4            1       12)
(smt.stats    8    981  13084  21995  3571/3299/347    1049/170    19   94   54.43)
(smt.stats    9   1115  15815  27771  3615/3341/351    1167/223    21  148   54.53)
(sat.ddfw       1      1   31.7656    160000       784          5            1       17)
(smt.stats   10   1216  18975  33667  3704/3396/353    1344/231    22  148   54.62)
(smt.stats   11   1327  25397  40077  3797/3460/354    1609/272    23  148   54.72)
ramon: poll                 wall=2.000s usage=2.033s mem=57016KiB load=1.10 rootload=1.11
(sat.ddfw       1      1   28.8051    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  29199  51504  3916/3630/357    2058/303    25  154   54.91)
(smt.stats   13   1583  33853  57690  3998/3644/362    2281/349    26  164   55.00)
(smt.stats   14   1730  39309  69242  4121/3833/364    2761/406    28  166   55.12)
(sat.ddfw       1      1   25.3623    290001      1421          7            1       30)
(smt.stats   15   1831  42653  79441  4206/3880/364    2953/407    28  166   55.31)
ramon: poll                 wall=3.000s usage=3.036s mem=57512KiB load=1.00 rootload=1.00
(smt.stats   16   1942  46640  89464  4306/4000/368    3502/469    29  169   55.41)
(smt.stats   17   2064  51514 109381  4320/4014/378    3734/503    30  172   55.54)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 528&3
(smt.stats   18   2198  55738 128126  4350/4033/378    3957/504    31  174   55.63)
(sat.ddfw       1      1   22.6501    370001      1813          8            1       38)
(smt.stats   19   2345  61031 143347  4370/4060/386    4117/522    32  175   55.63)
(smt.stats   20   2506  64910 155402  4395/4082/390    4330/546    34  199   55.74)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 260 := 288&2047
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 260 := 288&2047
ramon: poll                 wall=4.000s usage=4.036s mem=58316KiB load=1.00 rootload=1.00
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 260 := 288&2047
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 260 := 288&2047
(smt.stats   21   2607  68219 167977  4539/4095/390    4547/557    34  199   55.84)
(smt.stats   22   2718  70419 179508  4743/4241/395    5045/647    35  211   56.14)
(sat.ddfw       1      1   20.4965    460001      2254          9            1       47)
(smt.stats   23   2840  73351 193473  5012/4454/395    5390/682    36  211   56.23)
(smt.stats   24   2974  75732 206629  5208/4900/396    6255/715    37  215   56.33)
(smt.stats   25   3121  78143 215042  5294/4928/401    6665/715    37  215   56.42)
ramon: poll                 wall=5.000s usage=5.035s mem=58676KiB load=1.00 rootload=1.00
(smt.stats   26   3282  81343 241761  5530/5045/401    7298/804    38  219   56.67)
(sat.ddfw       1      1   18.6846    560001      2745         10            1       57)
(smt.stats   27   3459  84735 255473  5777/5427/401    7652/808    38  219   56.67)
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 9150170671483680&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 9150170671483680&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 9150170671483680&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 9150170671483680&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 9150170671483680&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 9150170671483680&3
band: (band[58] (shl[64] (bv2int %1) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 9150170671483680&3
band: (band[58] (shl[58] (bv2int %1) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 9150170671483680&3
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560  86180 262582  5825/5511/403    8356/1022    39  225   56.77)
(smt.stats   29   3671  88159 288156  5868/5531/403    8480/1024    39  225   56.92)
ramon: poll                 wall=6.000s usage=6.033s mem=59424KiB load=1.00 rootload=0.99
(smt.stats   30   3793  90979 300513  5926/5616/404    9085/1058    40  230   57.01)
(sat.ddfw       1      1   17.1741    670001      3284         11            1       68)
(smt.stats   31   3928  94535 323607  5977/5667/410    9419/1122    41  252   57.24)
(smt.stats   32   4075 100000 341015  6046/5669/411   10552/1124    41  252   57.34)
ramon: poll                 wall=7.000s usage=7.069s mem=59748KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   16.1747    790001      3872         12            1       80)
(smt.stats   33   4236 105046 366021  6154/5785/414   11099/1302    42  263   57.43)
ramon: poll                 wall=8.004s usage=8.144s mem=59724KiB load=1.07 rootload=1.07
(smt.stats   34   4413 109543 397439  6323/6013/415   11469/1457    44  283   57.43)
(sat.ddfw       1      1   15.1869    920001      4509         13            1       93)
(smt.stats   35   4607 116663 420506  6384/6023/415   12084/1458    44  283   57.53)
ramon: poll                 wall=9.000s usage=9.276s mem=60036KiB load=1.14 rootload=1.13
(smt.stats   36   4708 121437 438956  6426/6084/416   12290/1533    45  289   57.64)
(smt.stats   37   4820 125358 469192  6515/6134/416   12704/1535    45  289   57.64)
(sat.ddfw       1      1   14.7976   1060001      5196         14            1      108)
(smt.stats   38   4942 128523 484538  6633/6216/416   13415/1538    45  289   57.83)
(smt.delete-inactive-clauses  :num-deleted-clauses 3)
(smt.stats   39   5076 132865 498692  6693/6324/416   13950/1538    45  289   57.83)
ramon: poll                 wall=10.000s usage=10.509s mem=60208KiB load=1.23 rootload=1.24
(smt.stats   40   5223 137832 531318  6823/6396/417   14312/1803    46  291   57.92)
(smt.stats   41   5384 140237 557774  6838/6528/417   14607/1803    46  291   58.23)
(sat.ddfw       1      1   13.7741   1210001      5931         15            1      123)
ramon: poll                 wall=11.000s usage=11.499s mem=60588KiB load=0.99 rootload=0.99
(smt.stats   42   5561 143703 582898  6876/6532/417   15250/1804    46  291   58.33)
(smt.stats   43   5755 148311 605224  7089/6603/417   15813/1811    46  291   58.42)
ramon: poll                 wall=12.000s usage=12.499s mem=60640KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.8835   1370001      6715         16            1      139)
(smt.stats   44   5968 153228 623504  7297/6987/420   16399/2103    47  300   58.61)
ramon: poll                 wall=13.004s usage=13.504s mem=60836KiB load=1.00 rootload=1.00
(smt.stats   45   6069 155779 637372  7438/6988/426   16764/2107    47  300   58.61)
(smt.stats   46   6180 158677 657281  7596/7180/426   17135/2109    47  300   58.71)
(smt.stats   47   6302 163660 709023  7619/7311/427   17475/2280    49  313   58.92)
ramon: poll                 wall=14.000s usage=14.501s mem=61156KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.0979   1540001      7549         17            1      156)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6436 168165 748829  7630/7322/427   17791/2280    49  313   58.92)
(smt.stats   49   6583 170886 767996  7656/7348/429   18877/2383    50  313   59.11)
ramon: poll                 wall=15.000s usage=15.501s mem=61588KiB load=1.00 rootload=1.00
(smt.stats   50   6744 175617 794097  7716/7351/429   19802/2386    50  313   59.21)
(smt.stats   51   6921 180608 823874  7926/7419/429   20525/2536    51  330   59.41)
(sat.ddfw       1      1   11.4112   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.499s mem=61752KiB load=1.00 rootload=1.00
(smt.stats   52   7115 185926 855791  8015/7627/429   20945/2540    51  330   59.41)
ramon: poll                 wall=17.000s usage=17.492s mem=61856KiB load=0.99 rootload=0.99
(smt.stats   53   7328 189894 883862  8290/7728/430   21196/2679    52  330   59.50)
(sat.ddfw       1      1   10.7893   1910001      9362         19            1      193)
(smt.stats   54   7562 195724 924065  8398/8003/430   22038/2682    52  330   59.60)
ramon: poll                 wall=18.000s usage=18.464s mem=61940KiB load=0.97 rootload=0.97
(smt.stats   55   7663 199626 955963  8452/8092/430   22245/2683    52  330   59.60)
(smt.stats   56   7774 204039 998012  8477/8157/430   22485/2683    52  330   59.60)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7896 209851 1022761  8517/8172/430   23106/2686    52  330   60.08)
ramon: poll                 wall=19.000s usage=19.465s mem=62156KiB load=1.00 rootload=1.00
(smt.stats   58   8030 212413 1031655  8580/8239/430   23492/2687    52  330   60.18)
(sat.ddfw       1      1   10.2543   2110001     10343         20            1      214)
(smt.stats   59   8177 214717 1049829  8685/8299/431   23653/3014    53  331   60.18)
ramon: poll                 wall=20.000s usage=20.421s mem=62284KiB load=0.96 rootload=0.95
ramon: end                  Fri Nov  1 21:29:06 2024
ramon: root.execname        z3
ramon: root.utime           20.400s
ramon: root.stime           0.030s
ramon: group.total          20.438s
ramon: group.utime          20.407s
ramon: group.stime          0.032s
ramon: group.mempeak        62540KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.021s
ramon: loadavg              1.02
