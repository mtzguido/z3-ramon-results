ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:23:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41449 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/UURGnceP7CwO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2979711
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 17179869289 >>l 34
(smt.stats    0    101   5167    880  1289/1152/91      97/9     3   13   19.34)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 35 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 35 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 35 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 35 := 34 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 17179869232 >>l 34
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 0&103890535885832192
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 0 := 17179869232 >>l 34
(smt.stats    1    202   7741   2844  2292/2070/106     191/13     8   17   19.44)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 1&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 1 := 1&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 1&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 1 := 1&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 1&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 1 := 1&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 2&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 2 := 2&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 68&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 68 := 68&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 11&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 8 := 11&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 48&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 48 := 48&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 960&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 960 := 960&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 4608&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 4608 := 4608&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 33792&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 33792 := 33792&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 960&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 960 := 960&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 4608&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 4608 := 4608&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 162&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 160 := 162&103890535885832192
(smt.stats    2    313   8901   4178  2473/2132/106     334/13     8   17   20.54)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 178&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 64 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 178&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 64 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 178&103890535885832192
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 64 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 1 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 2 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 4 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 8 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 16 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 32 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 64 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 128 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 15 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 14 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 4 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 8 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 8 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 1 := 178&103890535885832192
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 1 := 177&103890535885832192
(smt.stats    3    414  10023   6799  2605/2369/229     509/46    10   44   20.44)
(smt.stats    4    525  10379   9141  2624/2390/232     626/98    12   66   20.55)
(smt.stats    5    647  15496  15183  2883/2415/233     747/125    13   66   20.55)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17512  21680  2907/2644/234     926/169    14   71   20.66)
(smt.stats    7    859  22290  32071  3029/2747/235    1048/177    15   74   20.79)
(smt.stats    8    981  24886  39664  3050/2766/239    1225/211    17   81   20.89)
(smt.stats    9   1115  30529  52370  3057/2774/242    1467/258    19   91   20.89)
(smt.stats   10   1216  32054  56885  3184/2778/242    1587/263    19   91   20.98)
ramon: poll                 wall=1.000s usage=0.940s mem=22368KiB load=0.94 rootload=0.93
(smt.stats   11   1327  33136  59783  3420/2946/242    1750/267    19   91   21.08)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8&19695645203890176
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 8 := 8246337208342 >>l 28
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8&19695645203890176
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 8 := 8246337208342 >>l 28
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 10&19695645203890176
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 10 := 8246337208342 >>l 28
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 10&19695645203890176
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 10 := 8246337208342 >>l 28
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 10&19695645203890176
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 10 := 8246337208342 >>l 28
(smt.stats   12   1449  35208  65460  3661/3374/249    1942/293    20   99   21.20)
(smt.stats   13   1583  39652  78596  3686/3398/250    2138/293    20   99   21.30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   14   1730  48008 100530  3693/3405/251    2281/375    22  102   21.30)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944607961691&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944607961691&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944607961691&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944607961691&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944607961691&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944608223243&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944608223227&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944608223243&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944610320395&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944610058235&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944608747531&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944609271819&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944608747531&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944608747531&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944608747531&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944609271819&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944609271819&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944609271819&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944610320395&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944702857211&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944702595083&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944610320395&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944702595083&111961480493793280
(smt.stats   15   1832  49858 107190  3871/3583/339    2456/392    23  119   21.50)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944702595083&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070944702595083&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070947923820555&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070951927283723&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070951145046027&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070951145046027&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070951145046027&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070951145046027&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070951690305547&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070951681916939&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070947923820555&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070948469080075&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070948469080075&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070948469080075&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070965103689739&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070999471816715&111961480493793280
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8070999488593931&111961480493793280
(smt.stats   16   1943  51706 112176  4045/3757/381    2785/412    24  128   21.94)
(smt.stats   17   2065  58907 127775  4050/3762/382    3086/412    24  128   21.94)
(smt.stats   18   2199  64241 139598  4060/3772/382    3256/488    25  131   22.07)
(smt.stats   19   2346  77566 170686  4064/3776/382    3438/488    25  131   22.07)
(smt.stats   20   2507  87871 195860  4070/3782/383    3616/516    26  134   22.09)
ramon: poll                 wall=2.000s usage=1.939s mem=23364KiB load=1.00 rootload=1.00
(smt.stats   21   2608  93616 205265  4087/3788/383    3768/517    26  134   22.09)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 2 := 34393292803&13449973555265536
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 2 := 34384904195&13449973555265536
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 2 := 34384904195&13449973555265536
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 34384904195&13449973555265536
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 34384904195&13449973555265536
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 34384904195&13449973555265536
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 34384904195&13449973555265536
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8388611&13449973555265536
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 144115188084244483 := 5634997092409 >>l 25
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8388611&13449973555265536
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 144115188084244483 := 5634997092409 >>l 25
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8388611&13449973555265536
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 144115188084244483 := 5634997092409 >>l 25
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8388611&13449973555265536
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 144115188084244483 := 5634997092409 >>l 25
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 8388611&13449973555265536
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 144115188084244483 := 5634997092409 >>l 25
(smt.stats   22   2719  96322 213460  4333/3992/399    3966/544    27  137   22.30)
(smt.stats   23   2841  97333 215665  4450/4053/404    4161/545    27  137   22.39)
(smt.stats   24   2975  99547 224299  4738/4448/409    4673/589    28  141   22.39)
(smt.stats   25   3122 106201 237496  4745/4455/410    4912/589    28  141   22.51)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 1&19695645203890176
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 144115188075855873 := 5875783696471 >>l 28
(smt.stats   26   3283 115336 272496  4803/4463/410    5172/824    29  161   22.70)
ramon: poll                 wall=3.000s usage=2.939s mem=23992KiB load=1.00 rootload=1.00
(smt.stats   27   3460 119011 280226  4974/4681/411    5575/914    30  163   22.90)
(smt.stats   28   3561 121917 288908  5014/4684/412    6172/917    30  163   22.90)
(smt.stats   29   3672 127159 312926  5092/4745/413    6518/918    30  163   23.00)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3794 132271 327431  5105/4812/413    6833/1155    31  175   23.09)
(smt.stats   31   3928 139513 338796  5110/4817/413    7283/1155    31  175   23.09)
(smt.stats   32   4075 145622 348166  5113/4820/413    7654/1155    31  175   23.14)
ramon: poll                 wall=4.000s usage=3.938s mem=24604KiB load=1.00 rootload=0.99
(smt.stats   33   4236 152001 364871  5197/4904/415    8056/1335    32  185   23.28)
(smt.stats   34   4414 159103 379781  5278/4909/415    8421/1337    32  185   23.40)
(smt.stats   35   4608 173930 425585  5368/5055/415    8913/1442    33  187   23.51)
(smt.stats   36   4709 179459 440704  5379/5065/415    9141/1442    33  187   23.61)
(smt.stats   37   4820 188939 473110  5445/5116/417    9372/1553    34  207   23.70)
ramon: poll                 wall=5.000s usage=4.938s mem=25004KiB load=1.00 rootload=1.00
(smt.stats   38   4942 196647 492320  5453/5124/419    9819/1632    35  216   23.70)
(smt.delete-inactive-clauses  :num-deleted-clauses 418)
(smt.stats   39   5076 205537 511216  5464/5135/420    9678/1632    35  216   23.81)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 64 := 465&105992430290964828
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 64 := 465&105992430290964828
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 64 := 465&105992430290964828
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 64 := 497&105992430290964828
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 64 := 481&105992430290964828
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 64 := 481&105992430290964828
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 64 := 481&105992430290964828
(smt.stats   40   5223 210982 533977  5581/5206/431   10013/1680    36  225   23.81)
(smt.stats   41   5384 221594 578615  5662/5290/446   10254/1760    37  247   23.94)
(smt.stats   42   5561 230509 600235  5675/5346/447   10633/1778    38  247   23.94)
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 73014968323&97953291895308288
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 288230449166680067 := 5669356830731 >>l 8
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 73014968323&97953291895308288
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 288230449166680067 := 5669356830731 >>l 8
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 73014968323&97953291895308288
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 288230449166680067 := 5669356830731 >>l 8
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 73014968323&97953291895308288
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #638) 64)) 288230449166680067 := 5669356830731 >>l 8
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 22145925120&97953291895308288
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 6665789243650 := 5669356830731 >>l 8
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 22145925120&97953291895308288
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 6665789243650 := 5669356830731 >>l 8
band: (band[57] (lshr[64] (bv2int %0) (mod #639 64)) (if (= #649 63) 977607617663964103278592943953281024 (if #651 488803808831982051639296471976640512 #775))) 0 := 22145925120&97953291895308288
band: (band[57] (lshr[57] (bv2int %0) (mod #109 57)) (if (= #518 56) 3818779756499859778432003687317504 (if #520 1909389878249929889216001843658752 #630))) 256 := 22145925120&97953291895308288
(smt.stats   43   5755 238505 632610  5824/5348/447   11055/1853    39  256   24.07)
ramon: poll                 wall=6.000s usage=5.938s mem=25560KiB load=1.00 rootload=1.00
(smt.stats   44   5968 247498 652850  5902/5569/474   11614/1922    41  263   24.29)
(smt.stats   45   6069 254469 664464  5915/5580/475   11836/1922    41  263   24.29)
(smt.stats   46   6180 260736 688837  5922/5587/480   12065/1983    42  319   24.39)
(smt.stats   47   6302 264070 703298  6031/5595/480   12312/1987    42  319   24.68)
(smt.stats   48   6436 267191 714467  6321/5752/480   12566/1989    42  319   24.78)
(smt.stats   49   6583 273018 727625  6363/5993/482   13164/2039    43  322   24.88)
ramon: poll                 wall=7.000s usage=6.937s mem=26364KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6744 281377 749032  6568/6077/483   13680/2045    43  322   24.97)
(smt.stats   51   6921 289617 770879  6661/6247/483   14147/2151    44  348   25.08)
(smt.stats   52   7115 304350 812139  6673/6330/484   14705/2151    44  348   25.08)
ramon: poll                 wall=8.000s usage=7.937s mem=26548KiB load=1.00 rootload=1.00
(smt.stats   53   7328 317128 857856  6846/6338/484   15264/2329    45  351   25.27)
(smt.stats   54   7562 328424 896744  7006/6508/484   15924/2330    45  351   25.46)
ramon: poll                 wall=9.000s usage=8.937s mem=27076KiB load=1.00 rootload=1.00
(smt.stats   55   7663 333419 914460  7143/6706/484   16431/2332    45  351   25.46)
(smt.stats   56   7774 336415 921024  7288/6833/484   16750/2333    45  351   25.65)
(smt.stats   57   7896 339614 932697  7486/6964/484   16981/2333    45  351   25.75)
(smt.stats   58   8030 344129 942951  7542/7179/484   17481/2333    45  351   25.75)
ramon: poll                 wall=10.002s usage=9.939s mem=27364KiB load=1.00 rootload=1.00
(smt.stats   59   8177 350304 955978  7667/7206/484   17872/2337    45  351   25.96)
ramon: poll                 wall=11.000s usage=10.936s mem=27732KiB load=1.00 rootload=1.00
(smt.stats   60   8338 354186 965278  7952/7404/484   18322/2340    45  351   26.25)
(smt.stats   61   8515 359322 983969  8060/7632/484   18848/2340    45  351   26.42)
ramon: poll                 wall=12.000s usage=11.936s mem=28064KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   62   8709 370907 1009780  8126/7721/484   19407/2340    45  351   26.51)
(smt.stats   63   8922 379226 1052483  8147/7803/484   20088/2340    45  351   26.51)
(smt.stats   64   9156 389912 1126845  8193/7835/487   20772/2982    46  359   26.73)
ramon: poll                 wall=13.000s usage=12.936s mem=28328KiB load=1.00 rootload=1.00
(smt.stats   65   9413 402323 1186102  8342/7943/487   21696/3064    47  364   26.92)
(smt.stats   66   9514 406162 1199982  8379/8009/488   22624/3258    48  364   27.02)
(smt.stats   67   9625 414286 1224482  8433/8014/488   23054/3260    48  364   27.02)
ramon: poll                 wall=14.000s usage=13.935s mem=28552KiB load=1.00 rootload=1.00
(smt.stats   68   9747 422422 1255697  8493/8080/488   23540/3260    48  364   27.14)
(smt.stats   69   9881 433377 1290182  8566/8157/488   23794/3261    48  364   27.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 491)
(smt.stats   70  10028 441804 1325467  8594/8224/489   24207/3815    49  366   27.24)
ramon: poll                 wall=15.000s usage=14.935s mem=29008KiB load=1.00 rootload=1.00
(smt.stats   71  10189 456387 1382168  8597/8227/489   25447/3815    49  366   27.44)
(smt.stats   72  10366 467445 1424654  8623/8234/490   25900/3969    50  372   27.44)
(smt.stats   73  10560 476651 1459284  8647/8276/491   27038/3969    50  372   27.66)
(smt.stats   74  10773 487405 1506542  8652/8281/491   27406/4036    51  381   27.82)
ramon: poll                 wall=16.000s usage=15.935s mem=29308KiB load=1.00 rootload=1.00
(smt.stats   75  11007 499294 1560646  8691/8316/497   28746/4067    52  388   27.92)
(smt.stats   76  11264 513939 1615796  8810/8319/497   29482/4068    52  388   28.11)
ramon: poll                 wall=17.000s usage=16.935s mem=29640KiB load=1.00 rootload=1.00
(smt.stats   77  11546 530862 1686412  8975/8600/499   30492/4401    54  475   28.21)
(smt.stats   78  11647 539866 1727542  8981/8606/499   30942/4401    54  475   28.21)
(smt.stats   79  11758 547236 1755837  9028/8608/500   31300/4401    54  475   28.21)
ramon: poll                 wall=18.000s usage=17.934s mem=29800KiB load=1.00 rootload=1.00
(smt.stats   80  11880 553810 1794150  9265/8689/500   31822/4457    55  490   28.48)
(smt.stats   81  12014 559130 1829640  9274/8899/500   32491/4457    55  490   28.48)
ramon: poll                 wall=19.000s usage=18.934s mem=30416KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   82  12161 570421 1880759  9362/8901/500   32781/4457    55  490   28.67)
(smt.stats   83  12322 579523 1920404  9597/9010/500   33214/4459    55  490   28.77)
ramon: poll                 wall=20.000s usage=19.934s mem=30440KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:24:16 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.998s
ramon: group.utime          19.986s
ramon: group.stime          0.012s
ramon: group.mempeak        30696KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.00
