ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:39:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29403 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1379
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5MWmOovwElMO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             631218
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4312   1008  1146/1033/91      95/1     4   14   51.96)
(smt.stats    1    202   5732   3395  1960/1651/99     180/23     8   21   52.06)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   89.2857     10000        49          0            1        2)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 140737488355328 := 36 << 28
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 140737488355328 := 36 << 28
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 140737488355328 := 36 << 28
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 140737488355328 := 36 << 28
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&140737488355327
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&140737488355327
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&140737488355326
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 140737488355328 := 36 << 28
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 140737488355328 := 130 << 28
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 268435455 := 268435455&9663676417
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 1 := 268435455&9663676417
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 9663676417 := 36 << 28
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 1 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 268435452 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 268435448 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 16 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 32 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 64 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 128 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 256 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 512 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 1024 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 2048 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 4096 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 8192 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 16384 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 32768 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 65536 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 131072 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 262144 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 524288 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 1048576 := 268435455&9663676416
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&9663676416
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 18 := 18 << 29
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&9663676416
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 18 := 18 << 29
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&9663676416
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 18 := 18 << 29
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 268435455&9663676416
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 18 := 18 << 29
(sat.ddfw       1      1   46.7336     20001        98          1            1        3)
(smt.stats    2    313   6672   4379  2072/1855/178     294/31    11   38   52.96)
(sat.ddfw       1      1   47.8469     40001       196          2            1        5)
(sat.ddfw       1      1   41.4938     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.892s mem=55612KiB load=0.89 rootload=0.88
(smt.stats    3    414   7297   5619  2347/1985/186     410/39    13   46   53.15)
(smt.stats    4    526   8106   8254  2508/2288/198     483/108    15   92   53.15)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&24159191044
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 2017612657221173252 := 90 << 1
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&24159191041
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&24159191041
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&24159191041
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 1 := 1&24159191041
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 2017612657221173249 := 90 << 1
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 1 := 1&180
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 1 := 1&180
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&180
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 29 := 45 << 2
(sat.ddfw       1      1   35.3669    110001       539          4            1       12)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&180
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 29 := 45 << 2
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&180
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 29 := 45 << 2
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&180
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 29 := 45 << 2
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 1 := 1&180
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&180
band: (band[47] (if (= #120 46) 0 (if #556 1 #685)) (shl[47] (bv2int %0) (+ 47 #688))) 1 := 1&180
(smt.stats    5    648   9839  11370  2570/2329/220     629/124    16  100   53.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    749  13357  14958  2628/2378/230     748/125    17  102   53.37)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&32749125636
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 2017612665811107844 := 7518290042 << 1
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&113818731384
band: (band[47] (if (= #120 46) 0 (if #556 1 #685)) (shl[47] (bv2int %0) (+ 47 #688))) 1 := 1&113818731384
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&113818731384
band: (band[47] (if (= #120 46) 0 (if #556 1 #685)) (shl[47] (bv2int %0) (+ 47 #688))) 1 := 1&113818731384
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 1&113818731384
band: (band[47] (if (= #120 46) 0 (if #556 1 #685)) (shl[47] (bv2int %0) (+ 47 #688))) 1 := 1&113818731384
(smt.stats    7    860  15811  19041  2668/2423/232     900/146    19  106   53.37)
(smt.stats    8    983  18430  24505  2691/2456/238    1018/171    21  116   53.49)
(smt.stats    9   1117  23513  30720  2713/2473/240    1167/172    22  124   53.58)
(smt.stats   10   1218  28904  37200  2726/2482/240    1273/180    23  126   53.71)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 35184372088831&4
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 35184372088831&4
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 35184372088831&8
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 35184372088831&16
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 35184372088831&16
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 35184372088831&8
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 8 := 35184372088831&12
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 18 := 35184372088831&22
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 18 := 35184372088831&22
(smt.stats   11   1329  31278  40093  2773/2531/276    1433/194    24  135   53.71)
(sat.ddfw       1      1   30.2657    160000       784          5            1       17)
(smt.stats   12   1451  35397  47489  2785/2542/281    1578/208    26  138   53.71)
(smt.stats   13   1585  38950  54654  2861/2590/281    1755/219    27  143   53.83)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177664
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177664
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177664
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177696
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177664
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177696
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177664
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177696
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177760
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177760
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177792
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177824
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177888
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744178144
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177728
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177696
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744177760
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744178336
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744178400
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744178144
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744178144
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744179168
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744178656
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177632 := 70368744177663&70368744178656
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177656 := 70368744177663&70368744180704
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177656 := 70368744177663&70368744180712
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177656 := 70368744177663&70368744180728
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177656 := 70368744177663&70368744180728
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177656 := 70368744177663&70368744183800
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177656 := 70368744177663&70368744181752
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177656 := 70368744177663&70368744181752
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177656 := 70368744177663&70368744181752
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 70368744177656 := 70368744177663&70368744181752
(smt.stats   14   1732  42497  64667  3077/2705/317    2045/267    28  151   54.37)
ramon: poll                 wall=2.000s usage=1.967s mem=56668KiB load=1.07 rootload=1.07
(smt.stats   15   1833  43796  69243  3299/2915/332    2368/277    29  154   54.66)
(smt.stats   16   1944  44864  72744  3441/3168/334    2902/289    30  154   54.95)
(sat.ddfw       1      1   26.5844    220001      1078          6            1       23)
(smt.stats   17   2066  48142  80014  3460/3187/334    3151/289    30  154   54.95)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 164282499072 := 17592186044415&164282499072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 164282499072 := 211106232533604 << 44
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 164282499072 := 17592186044415&164282499072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 164282499072 := 211106232533604 << 44
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 164282499072 := 17592186044415&164282499072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 164282499072 := 211106232533604 << 44
(smt.stats   18   2200  50990  87142  3587/3215/335    3520/406    31  160   55.43)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 274877906944 := 17592186044415&274877906944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 274877906944 := 211174952010702 << 44
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 236223201280 := 17592186044415&236223201280
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 236223201280 := 211174952010514 << 44
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 236225298432 := 17592186044415&236225298432
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 236225298432 := 211174952009762 << 44
ramon: poll                 wall=3.000s usage=2.971s mem=57776KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.5215    290001      1421          7            1       30)
(smt.stats   19   2347  51925  88670  3679/3378/340    3788/407    31  160   55.73)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 236250464256 := 17592186044415&236250464256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #879 #881) 64)) 236250464256 := 211174952009762 << 44
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   20   2508  54512 100661  4416/4137/343    4982/568    33  172   55.83)
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 0&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 0 := 46 << 1
band: (band[47] (if (or #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713 #714 #715 ...) 0 (if #718 1 #808)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 0&92
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #116))) 0 := 46 << 1
(smt.stats   21   2609  58508 109444  4454/4149/343    5107/572    33  172   55.92)
(smt.stats   22   2720  62278 124535  4472/4188/352    5517/844    34  181   56.13)
(sat.ddfw       1      1   21.0804    370001      1813          8            1       38)
ramon: poll                 wall=4.006s usage=4.072s mem=58328KiB load=1.09 rootload=1.09
(smt.stats   23   2842  68467 138990  4579/4201/352    5841/936    35  198   56.23)
(smt.stats   24   2976  71777 149275  4639/4353/354    6150/1013    36  207   56.23)
(smt.stats   25   3123  76633 162041  4656/4370/357    6673/1081    37  239   56.49)
(smt.stats   26   3284  82861 189790  4664/4378/360    7983/1272    38  264   56.49)
(sat.ddfw       1      1   19.0718    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.062s mem=58952KiB load=1.00 rootload=1.00
(smt.stats   27   3461  87653 204341  4765/4478/361    9030/1383    39  268   56.68)
(smt.stats   28   3564  90854 213651  4779/4489/361    9317/1383    39  268   56.78)
(smt.stats   29   3675  95774 232752  4808/4506/362    9556/1415    40  269   56.94)
(smt.stats   30   3798  97805 240357  4999/4712/363    9712/1417    40  269   57.13)
(sat.ddfw       1      1   17.3883    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3932 100151 248991  5070/4718/363    9920/1417    40  269   57.13)
ramon: poll                 wall=6.000s usage=6.061s mem=59316KiB load=1.00 rootload=1.00
(smt.stats   32   4079 104373 262768  5093/4792/363   11061/1435    41  269   57.23)
(smt.stats   33   4240 109814 279782  5222/4814/364   11598/1442    41  269   57.33)
(sat.ddfw       1      1   15.9629    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=7.061s mem=59664KiB load=1.00 rootload=1.00
(smt.stats   34   4417 113256 296528  5531/4971/364   11987/1796    42  271   57.52)
(smt.stats   35   4611 119788 320482  5547/5260/364   12558/1796    42  271   57.63)
(smt.stats   36   4712 123914 338950  5575/5263/365   12988/1891    43  273   57.73)
(smt.stats   37   4824 126564 353841  5710/5423/367   13222/2056    44  278   57.72)
ramon: poll                 wall=8.000s usage=8.059s mem=60236KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   14.7656    790001      3872         12            1       80)
(smt.stats   38   4946 129524 371073  5776/5430/367   13609/2057    44  278   57.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   39   5080 133510 387303  5825/5534/368   13891/2057    44  278   57.91)
ramon: poll                 wall=9.000s usage=9.045s mem=60328KiB load=0.99 rootload=0.99
(smt.stats   40   5227 138410 407957  5840/5544/368   14435/2181    45  294   58.20)
(sat.ddfw       1      1   13.5969    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=10.003s mem=60408KiB load=0.96 rootload=0.95
(smt.stats   41   5388 142108 414864  5953/5557/368   14717/2183    45  294   58.39)
(smt.stats   42   5565 147702 444794  6051/5757/368   15638/2183    45  294   58.39)
ramon: poll                 wall=11.000s usage=10.998s mem=60648KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7563   1060001      5196         14            1      108)
(smt.stats   43   5759 153234 469497  6355/5772/368   16634/2190    45  294   58.59)
ramon: poll                 wall=12.000s usage=11.993s mem=61016KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   12.0356   1210001      5931         15            1      123)
(smt.stats   44   5972 158775 491212  6533/6072/368   18029/2192    45  294   58.88)
ramon: poll                 wall=13.000s usage=13.007s mem=61128KiB load=1.01 rootload=1.02
(smt.stats   45   6073 162257 500916  6634/6281/380   18405/3007    46  328   58.97)
(smt.stats   46   6184 165733 524676  6851/6459/380   18967/3010    46  328   59.07)
ramon: poll                 wall=14.000s usage=14.004s mem=61260KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.3725   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=15.006s mem=61360KiB load=1.00 rootload=1.00
(smt.stats   47   6306 168711 533955  7026/6590/380   19372/3010    46  328   59.16)
(sat.ddfw       1      1    10.782   1540001      7549         17            1      156)
(smt.stats   48   6440 171787 547718  7443/6942/381   19737/3238    47  339   59.35)
ramon: poll                 wall=16.000s usage=15.983s mem=61512KiB load=0.98 rootload=0.97
(smt.stats   49   6587 175356 567514  7533/7219/385   20664/3238    47  339   59.45)
(smt.stats   50   6748 178915 588412  7607/7284/387   21634/3684    48  369   59.55)
ramon: poll                 wall=17.000s usage=16.980s mem=61812KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6925 181611 602956  7759/7350/387   22732/3684    48  369   59.64)
(sat.ddfw       1      1   10.2482   1720001      8431         18            1      174)
(smt.stats   52   7119 187514 635132  7842/7491/387   23421/3684    48  369   59.91)
ramon: poll                 wall=18.000s usage=17.978s mem=62192KiB load=1.00 rootload=1.00
(smt.stats   53   7332 190036 653201  8263/7597/387   23951/4248    49  377   60.19)
(smt.stats   54   7566 192434 666716  8752/8106/387   24867/4251    49  377   60.36)
ramon: poll                 wall=19.000s usage=19.402s mem=62788KiB load=1.42 rootload=1.42
(smt.stats   55   7667 193605 679312  9169/8529/387   25254/4252    49  377   60.45)
(sat.ddfw       1      1    9.7586   1910001      9362         19            1      193)
(smt.stats   56   7778 194592 692328  9468/8904/387   25564/4252    49  377   60.55)
ramon: poll                 wall=20.000s usage=20.411s mem=63012KiB load=1.01 rootload=1.01
ramon: end                  Fri Nov  1 21:40:14 2024
ramon: root.execname        z3
ramon: root.utime           20.460s
ramon: root.stime           0.020s
ramon: group.total          20.485s
ramon: group.utime          20.461s
ramon: group.stime          0.024s
ramon: group.mempeak        63308KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.02
