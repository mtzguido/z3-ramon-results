ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:00:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28890 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Dp2KCBGTb7kX.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             702158
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   106.383     10000        49          0            1        2)
(sat.ddfw       1      1   52.9153     20001        98          1            1        3)
(smt.stats    0    103   5065    491  1307/1185/110     101/11     5   20   52.05)
(smt.stats    1    204   7652   1287  2204/2003/112     201/19     7   24   52.24)
(sat.ddfw       1      1   53.3333     40001       196          2            1        5)
(smt.stats    2    315  10375   3618  2317/2032/112     326/26     7   24   52.34)
(smt.stats    3    416  12291   5026  2353/2141/118     422/34     8   25   52.43)
(smt.stats    4    527  14319   6476  2444/2225/124     529/49     9   31   52.43)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&72057594037927809
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&72057594037927935
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&36028797018963967
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 108086391056891903 := 108086391056891776 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&36028797018963967
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 108086391056891903 := 108086391056891776 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&0
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 72057594037927936 := 256 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&0
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 72057594037927936 := 72057594037927808 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&0
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 72057594037927936 := 72057594037927808 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 72057594037927937 := 72057594037927936 >>l 9
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 4 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 8 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 8 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1 := 36028797018963968&1
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 7 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1 := 36028797018963968&1
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 2 := 36028797018963968&2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&4
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 4 := 36028797018963968&4
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2 := 4 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 36028797018963968&1
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 2 := 36028797018963968&2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 4 := 36028797018963968&4
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 8 := 36028797018963968&8
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 16 := 36028797018963968&16
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 32 := 36028797018963968&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 64 := 36028797018963968&64
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 128 := 36028797018963968&128
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 256 := 36028797018963968&256
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 512 := 36028797018963968&512
(smt.stats    5    649  16492   8540  2773/2412/148     649/53    11   42   53.20)
(sat.ddfw       1      1   45.5235     70001       343          3            1        8)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&6
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 7 := 27 >>l 2
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 36028797018963968&7
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    750  19209  11326  2873/2566/207     808/93    13   60   53.33)
(smt.stats    7    861  24047  15901  2878/2625/213     920/99    14   62   53.33)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1 := 36028797018963968&8
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 2 := 36028797018963968&8
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 8 := 36028797018963968&8
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&16
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16 := 36028797018963968&16
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 36028797018963968&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&64
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 64 := 36028797018963968&64
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&128
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 128 := 36028797018963968&128
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&256
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 256 := 36028797018963968&256
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&512
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 512 := 36028797018963968&512
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1024
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1024 := 36028797018963968&1024
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2048
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 2048 := 36028797018963968&2048
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&4096
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 4096 := 36028797018963968&4096
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8192
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 8192 := 36028797018963968&8192
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&16384
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16384 := 36028797018963968&16384
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&32768
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32768 := 36028797018963968&32768
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&65536
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 65536 := 36028797018963968&65536
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&131072
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 131072 := 36028797018963968&131072
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&262144
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 262144 := 36028797018963968&262144
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&524288
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 524288 := 36028797018963968&524288
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1048576
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1048576 := 36028797018963968&1048576
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&2097152
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 2097152 := 36028797018963968&2097152
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&4194304
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 4194304 := 36028797018963968&4194304
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&8388608
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 8388608 := 36028797018963968&8388608
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&16777216
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16777216 := 36028797018963968&16777216
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&33554432
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 33554432 := 36028797018963968&33554432
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&67108864
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 67108864 := 36028797018963968&67108864
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&134217728
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 134217728 := 36028797018963968&134217728
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&268435456
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 268435456 := 36028797018963968&268435456
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&536870912
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 536870912 := 36028797018963968&536870912
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1073741824
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1073741824 := 36028797018963968&1073741824
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 36028797018963968&1073741824
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 1073741824 := 36028797018963968&1073741824
(smt.stats    8    983  25536  18679  3013/2761/363    1108/143    16   96   54.04)
(smt.stats    9   1117  26897  22494  3035/2776/367    1239/147    17  102   54.14)
ramon: poll                 wall=1.000s usage=0.931s mem=56608KiB load=0.93 rootload=0.91
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 2 := 1664 >>l 57
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 2251799813685249 >>l 50
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 2 := 144115188075855744 >>l 57
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 2251799813685251 >>l 50
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&2
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 3377699720527871 >>l 50
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 128&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 128&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 128&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&32
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 32 := 128&32
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&31
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 26 := 128&31
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&31
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 26 := 128&31
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 26 := 128&30
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 25 := 128&30
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 28 := 128&30
(smt.stats   10   1218  29446  26989  3101/2829/392    1508/155    19  104   54.33)
(sat.ddfw       1      1   38.7973    110001       539          4            1       12)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 24 := 128&30
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&30
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 24 := 128&30
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&63
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16 := 128&63
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 128&63
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 16 := 128&63
(smt.stats   11   1329  31063  31433  3218/2934/416    1709/276    21  120   54.43)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&5
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 5 := 9223372036854775680 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 32 := 72057594037927935 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 15 := 9223372036854775680 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 32 := 72057594037927935 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&5
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 5 := 9223372036854775680 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 32 := 72057594037927935 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&5
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 5 := 4323455642275676288 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&7
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 20 := 33776997205278721 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&10
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 10 := 4611686018427386240 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&7
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 26 := 36028797018963943 >>l 52
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&5
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 5 := 6917529027641081984 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&12
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 12 := 32&12
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&8
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 8 := 9223372036854775680 >>l 59
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 32&15
band: (band[56] (if (= #115 55) 72057594037927936 (if #508 36028797018963968 #616)) (lshr[56] (bv2int %1) (+ 56 #619))) 8 := 32&15
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  33226  37225  3262/2979/432    1987/354    23  131   54.55)
(sat.ddfw       1      1   33.0681    160000       784          5            1       17)
(smt.stats   13   1585  38258  45667  3331/3041/434    2178/394    24  137   54.74)
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 2 := 4&385
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&385
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 4467570830351532417 := 4467570830351532416 >>l 62
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&27
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 27 := 4467570830351532416 >>l 62
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&2
lshr: (lshr[64] (* 128 (bv2int %1)) (mod (+ 63 #630 #634) 64)) 2 := 4467570830351532416 >>l 62
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 30 := 36028797018963971 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 31 := 36028797018963969 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 31 := 72057594037927935 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 29 := 36028797018963969 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 0 := 4&1
lshr: (lshr[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 9 := 36028797018963971 >>l 55
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 4&1
band: (band[56] (if (= #349 63) 18446744073709551616 (if #487 9223372036854775808 #484)) (lshr[64] (* 128 #332) (mod #637 64))) 1 := 4&1
(smt.stats   14   1732  42801  57049  3391/3068/436    2421/417    25  141   54.94)
(smt.stats   15   1833  44560  65380  3432/3134/452    2570/435    26  146   54.94)
(smt.stats   16   1944  46613  72831  3504/3193/458    2723/453    28  150   55.14)
ramon: poll                 wall=2.000s usage=1.933s mem=57536KiB load=1.00 rootload=1.00
(smt.stats   17   2066  48543  79254  3544/3224/461    2930/481    29  166   55.14)
(sat.ddfw       1      1   29.0281    220001      1078          6            1       23)
(smt.stats   18   2200  52943  90217  3578/3235/461    3193/482    29  166   55.23)
(smt.stats   19   2347  58933 108251  3594/3278/464    3440/557    30  167   55.41)
(smt.stats   20   2508  62183 116102  3621/3301/466    3697/585    31  169   55.50)
(smt.stats   21   2609  64815 119903  3700/3360/467    3863/630    32  174   55.71)
(sat.ddfw       1      1   25.7448    290001      1421          7            1       30)
ramon: poll                 wall=3.003s usage=2.933s mem=58040KiB load=1.00 rootload=1.00
(smt.stats   22   2720  68014 126193  3776/3429/468    4039/641    33  176   55.71)
(smt.stats   23   2842  70128 133147  3822/3485/470    4191/643    33  176   55.81)
(sat.ddfw       1      1   23.0614    370001      1813          8            1       38)
(smt.stats   24   2976  72539 140866  3847/3513/478    4464/701    34  185   55.90)
(smt.stats   25   3123  74315 148028  3873/3528/478    4655/703    34  185   55.90)
(smt.stats   26   3284  78309 158736  3901/3555/478    4878/704    34  185   56.09)
ramon: poll                 wall=4.007s usage=3.956s mem=58564KiB load=1.02 rootload=1.02
(smt.stats   27   3461  85586 184073  3929/3589/483    5110/727    36  199   56.09)
(sat.ddfw       1      1   21.2665    460001      2254          9            1       47)
(smt.stats   28   3562  88065 190080  3956/3611/488    5278/738    37  199   56.29)
ramon: poll                 wall=5.003s usage=4.976s mem=58936KiB load=1.02 rootload=1.02
(sat.ddfw       1      1   19.3162    560001      2745         10            1       57)
(smt.stats   29   3673  91897 198317  4103/3632/491    5521/790    38  209   56.57)
ramon: poll                 wall=6.000s usage=5.975s mem=59632KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.7276    670001      3284         11            1       68)
(smt.stats   30   3795  96381 209165  4199/3804/492    5744/795    38  209   56.87)
ramon: poll                 wall=7.000s usage=6.975s mem=59652KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.3979    790001      3872         12            1       80)
(smt.stats   31   3929 101920 216927  4344/3930/492    6204/858    39  210   56.97)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076 106577 225224  4371/4024/492    6511/858    39  210   56.97)
ramon: poll                 wall=8.000s usage=7.975s mem=59700KiB load=1.00 rootload=1.00
(smt.stats   33   4237 111254 237561  4394/4039/493    6994/1035    40  211   57.07)
(smt.stats   34   4414 119571 256076  4419/4061/493    7233/1036    40  211   57.28)
(sat.ddfw       1      1   15.2457    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.972s mem=59768KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.2291   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=9.975s mem=59784KiB load=1.00 rootload=1.00
(smt.stats   35   4608 123209 261868  4552/4081/493    7451/1039    40  211   57.47)
(smt.stats   36   4709 124703 265518  4702/4295/493    7569/1040    40  211   57.47)
ramon: poll                 wall=11.000s usage=10.972s mem=60044KiB load=1.00 rootload=1.00
(smt.stats   37   4820 127666 273518  4759/4396/493    7713/1040    40  211   57.47)
(smt.stats   38   4942 131861 288097  4775/4426/493    7922/1041    40  211   57.48)
(sat.ddfw       1      1   13.3321   1210001      5931         15            1      123)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5076 138422 302972  4778/4439/501    8392/1166    41  225   57.83)
(smt.stats   40   5223 148061 323806  4796/4443/501    8679/1167    41  225   57.83)
ramon: poll                 wall=12.000s usage=11.971s mem=60260KiB load=1.00 rootload=1.00
(smt.stats   41   5384 154398 346346  4829/4490/503    8977/1309    42  231   57.93)
(smt.stats   42   5561 158710 357444  4892/4534/504    9280/1311    42  231   58.02)
(sat.ddfw       1      1   12.5539   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=12.959s mem=60232KiB load=0.99 rootload=0.98
(smt.stats   43   5755 165561 373526  5023/4563/504    9526/1366    43  235   58.02)
(smt.stats   44   5968 172411 388128  5156/4722/504    9960/1370    43  235   58.12)
ramon: poll                 wall=14.000s usage=13.960s mem=60628KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6069 174885 396077  5165/4824/505   10145/1404    44  238   58.12)
(smt.stats   46   6180 180216 407176  5236/4827/505   10377/1406    44  238   58.12)
(sat.ddfw       1      1   11.8417   1540001      7549         17            1      156)
(smt.stats   47   6302 185398 427175  5269/4917/505   10679/1406    44  238   58.12)
(smt.stats   48   6436 190423 442662  5337/4933/505   10921/1407    44  238   58.22)
ramon: poll                 wall=15.000s usage=14.963s mem=60568KiB load=1.00 rootload=1.00
(smt.stats   49   6583 196756 466724  5368/5019/505   11175/1409    44  238   58.22)
(smt.stats   50   6744 202091 484358  5437/5072/506   11478/1535    45  238   58.32)
(smt.stats   51   6921 205769 501926  5609/5267/507   11775/1536    45  238   58.22)
ramon: poll                 wall=16.003s usage=15.915s mem=61028KiB load=0.95 rootload=0.95
(sat.ddfw       1      1   11.2101   1720001      8431         18            1      174)
(smt.stats   52   7115 211443 519957  5722/5272/508   12005/1538    45  238   58.61)
(smt.stats   53   7328 219162 539821  6035/5418/508   12433/1572    46  242   58.80)
ramon: poll                 wall=17.000s usage=16.871s mem=61328KiB load=0.96 rootload=0.95
(smt.stats   54   7562 226922 560995  6133/5719/508   13094/1576    46  242   58.99)
(smt.stats   55   7663 230853 580904  6144/5802/508   13234/1576    46  242   59.09)
(sat.ddfw       1      1    10.649   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=17.753s mem=61288KiB load=0.88 rootload=0.88
(smt.stats   56   7774 233752 596293  6176/5810/508   13390/1577    46  242   59.09)
(smt.stats   57   7896 236569 606715  6211/5859/508   13577/1577    46  242   59.09)
(smt.stats   58   8030 239106 621203  6234/5884/508   13834/1577    46  242   59.09)
(smt.stats   59   8177 243369 630992  6329/5907/508   14046/1578    46  242   59.19)
ramon: poll                 wall=19.000s usage=18.748s mem=61408KiB load=1.00 rootload=1.00
(smt.stats   60   8338 247016 645320  6472/6059/508   14276/1579    46  242   59.40)
(smt.stats   61   8515 250768 661645  6563/6163/508   14588/1579    46  242   59.49)
(sat.ddfw       1      1   10.1291   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=19.745s mem=61736KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:00:33 2024
ramon: root.execname        z3
ramon: root.utime           19.790s
ramon: root.stime           0.020s
ramon: group.total          19.821s
ramon: group.utime          19.797s
ramon: group.stime          0.024s
ramon: group.mempeak        61996KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              0.99
