ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:33:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28141 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Tbp22aLjerzL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             817054
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&239
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 238 << 28
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 238 << 28
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379698 := 259379698&137438953469
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379697 := 259379698&137438953469
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379696 := 259379698&137438953469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953469 := 238 << 28
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379696 := 259379698&137438953469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953469 := 238 << 28
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 259379698 := 259379698&137438953469
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 259379698&63887638529
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638529
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 63887638529 := 238 << 28
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   92.5926     10000        49          0            1        2)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 0 := 119 << 29
(smt.stats    0    103   2802    873  1079/968/112     103/12     4   20   51.85)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 0 := 119 << 29
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 0 := 119 << 29
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379698 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379696 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379695 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379696 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379680 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379660 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 259379648 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 128 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 256 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 512 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 1024 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2048 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 4096 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 8192 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2624 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2624 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2560 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2560 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2560 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 2560 := 259379698&63887638528
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 259379698&63887638528
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 3072 := 259379698&63887638528
(smt.stats    1    204   3358   1332  1730/1548/168     218/25     6   32   52.44)
(sat.ddfw       1      1   50.5101     20001        98          1            1        3)
(smt.stats    2    315   3587   1974  2075/1777/178     437/32     7   34   52.55)
(smt.stats    3    420   4651   4804  2417/2245/183     645/73     9   36   52.55)
(smt.stats    4    532   6805  12695  2544/2362/192     979/214    13   55   52.65)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719485440 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719479298 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 2199023255552 := 68719485440 << 31
(sat.ddfw       1      1   51.9481     40001       196          2            1        5)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719485440 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953472 := 68719485440 << 31
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 281796497 := 38654707456 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&281796484
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 274877906944 := 68719485440 << 31
(sat.ddfw       1      1   44.7761     70001       343          3            1        8)
(smt.stats    5    654   8544  18180  2749/2441/211    1233/248    15   64   52.94)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037589 := 2075037590&4294967296
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037588 := 2075037590&4294967296
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037584 := 2075037590&4294967296
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&4294967296
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 2075037588 := 98784248577 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&4294967296
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 536871040 := 98784248577 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 2075037590&4294967296
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 536870933 := 98784248577 << 32
ramon: poll                 wall=1.000s usage=0.880s mem=55204KiB load=0.88 rootload=0.87
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    755   9072  20992  2890/2587/211    1335/250    15   64   53.03)
(sat.ddfw       1      1   38.3142    110001       539          4            1       12)
(smt.stats    7    866  10066  29325  3088/2879/222    1554/339    17   68   53.13)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037589 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037589 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037588 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037589 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037588 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037584 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037576 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037568 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037568 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037565 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075037532 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 40 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 32 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 64 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 528 := 2075037590&60129542144
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 528 := 2075037590&60129542144
(smt.stats    8    988  10782  32717  3243/2916/222    1890/343    17   68   53.51)
(sat.ddfw       1      1   33.1558    160000       784          5            1       17)
(smt.stats    9   1122  15102  47508  3300/3110/269    2089/510    20   90   53.51)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2 := 4150075180&60129556336
(smt.stats   10   1223  19081  54180  3348/3146/273    2235/552    23  101   53.70)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 8 := 4150075180&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 8 := 8 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 8 := 4150075180&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 8 := 8 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 4150075180&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 1 := 8 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 4150075180&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 0 := 8 << 32
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 4150075180&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 0 := 8 << 32
(smt.stats   11   1334  21543  69292  3440/3202/275    2496/560    24  103   53.89)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&3
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&3
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&1
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 16600300723&1
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2 := 16600300723&3
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1456  23501  76655  3557/3331/293    2727/641    26  111   54.09)
ramon: poll                 wall=2.000s usage=1.947s mem=56320KiB load=1.07 rootload=1.06
(smt.stats   13   1590  28924  93276  3588/3357/294    3177/708    27  118   54.21)
(sat.ddfw       1      1    28.958    220001      1078          6            1       23)
(smt.stats   14   1737  34449 107769  3745/3363/294    3854/712    27  118   54.30)
(smt.stats   15   1838  36994 115278  3817/3518/294    4216/713    27  118   54.59)
(smt.stats   16   1949  41576 129354  3833/3601/297    5137/1260    28  130   54.73)
(sat.ddfw       1      1   26.0223    290001      1421          7            1       30)
(smt.stats   17   2071  43280 135081  3847/3615/308    5506/1260    28  130   54.83)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2205  48781 148888  3852/3622/310    5691/1359    29  194   54.83)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 1&60129556267
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 472446416683 := 144 << 1
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 1&60129556267
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 472446416683 := 218 << 1
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 1&60129556267
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 472446416683 := 144 << 1
ramon: poll                 wall=3.000s usage=3.027s mem=57060KiB load=1.08 rootload=1.08
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1 := 1&140
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 36 := 35 << 2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 36 := 35 << 2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 36 := 35 << 2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
shl: (shl[37] (bv2int %0) (+ 37 (* 137438953471 #116))) 63 := 35 << 2
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 1&140
band: (band[37] (if (= #120 36) 0 (if #536 1 #635)) (shl[37] (bv2int %0) (+ 37 #638))) 1 := 1&140
(smt.stats   19   2352  51930 157028  3912/3632/310    5923/1386    30  201   55.04)
(smt.stats   20   2513  56510 165032  3958/3715/327    6160/1403    31  217   55.04)
(smt.stats   21   2614  59225 172299  4013/3731/327    6337/1403    31  217   55.13)
(sat.ddfw       1      1   24.2131    370001      1813          8            1       38)
(smt.stats   22   2725  61203 177052  4046/3783/327    6536/1403    31  217   55.23)
(smt.stats   23   2847  64737 187765  4083/3827/327    6805/1403    31  217   55.45)
(smt.stats   24   2981  67805 198719  4141/3888/328    7398/1493    32  221   55.45)
ramon: poll                 wall=4.000s usage=4.028s mem=57980KiB load=1.00 rootload=1.01
(smt.stats   25   3128  74448 215263  4145/3892/328    7663/1493    32  221   55.45)
(sat.ddfw       1      1   21.6606    460001      2254          9            1       47)
(smt.stats   26   3289  81284 237769  4155/3899/329    7975/1782    33  222   55.55)
(smt.stats   27   3466  85975 248757  4282/3907/329    8413/1789    33  222   55.74)
(smt.stats   28   3567  88733 257056  4301/4041/333    8791/1845    34  224   55.74)
ramon: poll                 wall=5.000s usage=5.011s mem=58276KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   19.6425    560001      2745         10            1       57)
(smt.stats   29   3678  92200 265553  4367/4079/334    9036/1956    35  237   56.00)
(smt.stats   30   3800  94254 270468  4424/4120/335    9330/1961    35  237   56.09)
ramon: poll                 wall=6.000s usage=6.012s mem=58500KiB load=1.00 rootload=1.00
(smt.stats   31   3934  97065 278674  4495/4212/335    9727/1963    35  237   56.19)
(sat.ddfw       1      1   17.9504    670001      3284         11            1       68)
(smt.stats   32   4081 100045 286412  4544/4248/335   10041/2122    36  244   56.19)
(smt.stats   33   4242 105609 310178  4593/4340/336   10576/2122    36  244   56.19)
(smt.stats   34   4419 110939 332228  4610/4357/336   11028/2232    37  248   56.28)
(smt.stats   35   4613 117805 352165  4622/4369/336   11323/2232    37  248   56.28)
ramon: poll                 wall=7.000s usage=7.011s mem=58744KiB load=1.00 rootload=1.00
(smt.stats   36   4714 121530 361390  4738/4388/337   11458/2287    38  248   56.28)
(sat.ddfw       1      1   16.5449    790001      3872         12            1       80)
(smt.stats   37   4825 123364 366720  4920/4485/337   11670/2289    38  248   56.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4947 124853 372803  5047/4682/337   11939/2291    38  248   56.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5081 128219 390594  5099/4842/337   12464/2291    38  248   56.64)
ramon: poll                 wall=8.000s usage=8.057s mem=59224KiB load=1.05 rootload=1.04
(smt.stats   40   5228 131557 406743  5295/4849/338   12978/2422    39  255   56.83)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075034188 := 66401202892&120259104660
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075034188 := 66401202892&120259104660
(smt.stats   41   5389 133943 419878  5630/5069/338   13295/2424    39  255   56.93)
(sat.ddfw       1      1   15.3719    920001      4509         13            1       93)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 1292 := 66401202892&2075036808
(smt.stats   42   5566 135319 424015  5841/5401/343   13623/2475    40  256   57.02)
ramon: poll                 wall=9.000s usage=9.058s mem=59644KiB load=1.00 rootload=1.01
(smt.stats   43   5760 137873 437731  6275/5728/343   13958/2479    40  256   57.23)
(sat.ddfw       1      1   14.3428   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=10.060s mem=59900KiB load=1.00 rootload=1.00
(smt.stats   44   5973 140309 448249  6592/6055/343   14863/2481    40  256   57.57)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075035616 := 66401202892&2075036391
(smt.stats   45   6074 141890 456220  6667/6343/343   15703/2572    41  256   57.66)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075035616 := 66401202892&2075035776
(smt.stats   46   6185 144373 465199  6726/6423/343   15940/2575    41  256   57.76)
(smt.stats   47   6307 147075 476361  6842/6498/343   16632/2580    41  256   57.85)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075035584 := 33200601446&2075035713
(smt.stats   48   6441 149527 488366  6908/6648/350   17175/2881    42  300   57.85)
ramon: poll                 wall=11.000s usage=11.056s mem=60248KiB load=1.00 rootload=0.99
(smt.stats   49   6588 152807 497419  6925/6665/350   17651/2881    42  300   57.95)
(sat.ddfw       1      1   13.4372   1210001      5931         15            1      123)
(smt.stats   50   6749 157277 529565  7011/6745/352   18357/3068    43  314   58.14)
(smt.stats   51   6926 161785 548140  7060/6777/352   18836/3071    43  314   58.24)
ramon: poll                 wall=12.000s usage=12.054s mem=60744KiB load=1.00 rootload=0.99
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 2075036207 := 33200601446&2075036207
(smt.stats   52   7120 165894 565625  7140/6818/352   19409/3074    43  314   58.33)
(sat.ddfw       1      1   12.7724   1370001      6715         16            1      139)
(smt.stats   53   7333 169547 592886  7343/6916/353   20345/3230    44  316   58.43)
ramon: poll                 wall=13.004s usage=13.135s mem=60904KiB load=1.08 rootload=1.08
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 222 << 36
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 222 << 36
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 222 << 36
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 74 << 36
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 0 := 66401202892&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953473 := 74 << 36
(smt.stats   54   7567 174564 626121  7390/7109/355   20870/3231    44  316   58.62)
(smt.stats   55   7668 177254 642284  7412/7144/360   21287/3300    45  337   58.72)
(smt.stats   56   7779 179709 656715  7420/7149/360   21638/3300    45  337   58.72)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 41 := 61&57
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 41 := 61&41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953513 := 134 << 6
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 41 := 61&41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 11682311045161 := 134 << 6
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 41 := 61&41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 11682311045161 := 134 << 6
(smt.stats   57   7901 183033 681565  7462/7166/360   22003/3302    45  337   58.81)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8035 185447 694315  7500/7226/365   22252/3458    46  338   58.81)
(smt.stats   59   8182 188680 708530  7565/7231/365   22535/3463    46  338   59.11)
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 16 := 30&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953489 := 184683593748 << 5
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 16 := 30&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953489 := 184683593748 << 5
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 16 := 30&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953489 := 47244640278 << 5
band: (band[37] (if (or #650 #651 #652 #653 #654 #655 #656 #657 #658 #659 #660 #661 #662 #663 #664 #665 ...) 0 (if #678 1 #748)) (shl[64] (* 2 #114) (mod #862 64))) 16 := 30&17
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 36 #859 #861) 64)) 137438953489 := 47244640278 << 5
ramon: poll                 wall=14.000s usage=14.237s mem=61660KiB load=1.11 rootload=1.11
(smt.stats   60   8343 193331 724961  7710/7433/372   22765/3468    46  338   59.11)
(sat.ddfw       1      1   12.0782   1540001      7549         17            1      156)
(smt.stats   61   8520 197638 753289  7763/7443/372   23155/3495    47  345   59.30)
(smt.stats   62   8714 204452 786512  7782/7499/372   23654/3495    47  345   59.39)
ramon: poll                 wall=15.000s usage=15.238s mem=61764KiB load=1.00 rootload=1.00
(smt.stats   63   8927 210876 819597  7808/7514/373   24455/3559    48  350   59.84)
(smt.stats   64   9161 215575 835480  7828/7552/375   24832/3559    48  350   59.84)
(sat.ddfw       1      1   11.4293   1720001      8431         18            1      174)
(smt.stats   65   9419 221732 886233  7846/7567/375   25765/3680    49  363   59.94)
ramon: poll                 wall=16.000s usage=16.235s mem=62004KiB load=1.00 rootload=0.99
(smt.stats   66   9520 223685 893885  7854/7577/375   26182/3680    49  363   59.94)
(smt.stats   67   9631 226876 903280  7860/7583/375   26362/3680    49  363   60.04)
(smt.stats   68   9753 234789 925975  7865/7586/375   26616/3680    49  363   60.04)
(smt.stats   69   9887 239830 952055  7891/7594/375   27187/3680    49  363   60.04)
ramon: poll                 wall=17.000s usage=17.235s mem=62444KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 14)
(smt.stats   70  10034 242918 965702  7930/7627/375   27475/3682    49  363   60.19)
(smt.stats   71  10195 247432 980881  8007/7672/375   27719/3686    49  363   60.29)
(sat.ddfw       1      1   10.8466   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=18.234s mem=62536KiB load=1.00 rootload=1.00
(smt.stats   72  10372 251369 994766  8202/7925/377   28104/3969    50  364   60.38)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10566 256439 1015882  8217/7940/378   28606/3970    50  364   60.38)
ramon: poll                 wall=19.000s usage=19.232s mem=62892KiB load=1.00 rootload=1.00
(smt.stats   74  10779 262196 1038746  8498/7943/379   29009/3979    50  364   60.48)
(sat.ddfw       1      1   10.3183   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.232s mem=62744KiB load=1.00 rootload=1.00
(smt.stats   75  11013 265907 1058983  8795/8236/379   29557/4080    51  370   60.57)
ramon: end                  Fri Nov  1 22:33:47 2024
ramon: root.execname        z3
ramon: root.utime           20.310s
ramon: root.stime           0.010s
ramon: group.total          20.329s
ramon: group.utime          20.313s
ramon: group.stime          0.016s
ramon: group.mempeak        63016KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.098s
ramon: loadavg              1.01
