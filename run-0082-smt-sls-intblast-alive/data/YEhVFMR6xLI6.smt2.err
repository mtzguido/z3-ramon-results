ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:41:28 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28019 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1379
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YEhVFMR6xLI6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             844319
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   73.5294     10000        49          0            1        2)
(sat.ddfw       1      1   37.8826     20001        98          1            1        3)
(sat.ddfw       1      1   38.0952     40001       196          2            1        5)
(smt.stats    0    101   1257     79  1101/981/105     102/23     3   16   52.14)
(smt.stats    1    202   5451   1143  1448/1302/109     228/49     5   23   52.24)
(sat.ddfw       1      1    32.967     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=1.004s mem=54572KiB load=1.00 rootload=1.00
(smt.stats    2    313   8171   2844  1920/1734/112     339/59     6   24   52.43)
(sat.ddfw       1      1   28.0308    110001       539          4            1       12)
ramon: poll                 wall=2.005s usage=2.007s mem=54580KiB load=1.00 rootload=0.99
(smt.stats    3    414   8753   3586  2115/1819/112     444/65     7   24   52.52)
(sat.ddfw       1      1   24.0495    160000       784          5            1       17)
(smt.stats    4    525  11734   5421  2325/2126/121     548/78     9   37   52.62)
(smt.stats    5    647  15794   7878  2476/2194/122     701/92    10   38   52.71)
(sat.ddfw       1      1   21.0382    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19645  10622  2561/2381/123     827/126    11   38   52.83)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813882&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813882&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813882&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813882 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813882 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813882 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 18446744073709551610 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813882&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 2199023255546 := 549755813882 << 2
ramon: poll                 wall=3.001s usage=3.000s mem=54996KiB load=1.00 rootload=1.00
(smt.stats    7    859  25690  13222  2791/2581/123     941/128    11   38   53.02)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813864&2
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 549755813542 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 1 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813864&2
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 549755813541 := 549755813882 << 2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813864&2
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 2 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813864&2
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 1 := 549755813864&2
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 1 := 549755813864&2
(smt.stats    8    981  29476  16373  2859/2619/138    1069/130    12   41   53.25)
(smt.stats    9   1115  36767  20243  2867/2665/174    1210/130    13   48   53.25)
(smt.stats   10   1216  41630  23630  2913/2684/174    1327/137    14   49   53.41)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813887&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813434&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813434 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813823&64
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813823 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 4 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 4 := 549755813887 << 7
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813760&64
(smt.stats   11   1327  46757  29409  2969/2739/196    1449/152    16   53   53.60)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 5 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 5 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 12 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 12 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 64 := 549755813760&64
(smt.stats   12   1449  49760  34974  3033/2810/249    1621/161    16   53   53.80)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 64 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 60 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 8 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 16 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 32 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 64 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 4 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 2 := 549755813760&64
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813760&64
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 49 := 549755813760&64
(smt.stats   13   1583  52246  39760  3344/3096/302    1799/259    18   78   53.99)
(smt.stats   14   1730  59429  47998  3368/3123/303    1968/274    19   90   54.09)
(smt.stats   15   1831  68073  56711  3373/3126/303    2074/275    19   90   54.23)
(smt.stats   16   1942  70857  62526  3395/3138/304    2283/287    20   90   54.33)
(sat.ddfw       1      1   18.6418    290001      1421          7            1       30)
(smt.stats   17   2064  73221  69607  3479/3212/306    2531/308    21   92   54.43)
ramon: poll                 wall=4.000s usage=3.996s mem=56608KiB load=1.00 rootload=0.98
(smt.stats   18   2198  75977  84491  3577/3240/306    2732/335    22   96   54.62)
(smt.stats   19   2345  80353  94722  3703/3334/307    3068/344    23   96   54.72)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   20   2506  84543 106444  3785/3519/323    3472/369    24  117   54.81)
(sat.ddfw       1      1   16.7049    370001      1813          8            1       38)
(smt.stats   21   2607  88319 114454  3838/3573/325    3661/454    25  149   54.91)
ramon: poll                 wall=5.001s usage=4.996s mem=57132KiB load=1.00 rootload=1.00
(smt.stats   22   2718  92554 124396  3908/3591/325    3969/486    26  151   55.09)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813887&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 18446744073709551615 := 3 << 3
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813887&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 18446744073709551615 := 3 << 3
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 4 := 549755813887&4
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 18446744073709551615 := 3 << 3
(smt.stats   23   2840  96502 133089  3966/3700/336    4137/552    28  154   55.21)
(smt.stats   24   2974 100981 144880  3979/3712/336    4397/552    28  154   55.21)
(smt.stats   25   3121 107678 157373  4005/3730/337    4616/579    29  157   55.30)
(smt.stats   26   3282 116834 179554  4015/3744/337    4955/579    29  157   55.30)
ramon: poll                 wall=6.000s usage=5.989s mem=57660KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   15.1108    460001      2254          9            1       47)
(smt.stats   27   3459 123162 197934  4032/3750/338    5339/651    30  160   55.53)
(smt.stats   28   3560 126358 205007  4034/3763/338    5471/651    30  160   55.53)
(smt.stats   29   3671 129663 218263  4038/3767/338    5628/651    30  160   55.53)
(smt.stats   30   3793 135339 230666  4050/3770/338    5768/651    30  160   55.53)
(smt.stats   31   3927 140318 243887  4053/3781/338    5960/651    30  160   55.81)
(smt.stats   32   4074 143882 251440  4072/3796/341    6283/733    31  171   55.91)
ramon: poll                 wall=7.001s usage=6.991s mem=57928KiB load=1.00 rootload=1.00
(smt.stats   33   4235 149653 269796  4098/3823/342    6532/800    32  185   55.91)
(sat.ddfw       1      1   13.7817    560001      2745         10            1       57)
ramon: poll                 wall=8.001s usage=8.029s mem=57968KiB load=1.04 rootload=1.04
(sat.ddfw       1      1   12.6787    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=8.993s mem=57972KiB load=0.96 rootload=0.96
(smt.stats   34   4412 154521 294860  4161/3889/345    6805/818    33  204   56.00)
ramon: poll                 wall=10.000s usage=9.992s mem=58124KiB load=1.00 rootload=1.00
(smt.stats   35   4606 161445 315640  4167/3895/346    7595/818    33  204   56.27)
(sat.ddfw       1      1   11.7382    790001      3872         12            1       80)
(smt.stats   36   4707 165893 329004  4168/3896/346    7727/854    34  208   56.27)
(smt.stats   37   4818 170135 342748  4186/3900/346    7952/854    34  208   56.47)
(smt.stats   38   4940 173237 352426  4203/3921/346    8164/854    34  208   56.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 795)
(smt.stats   39   5074 175967 359939  4231/3937/346    7630/858    34  208   56.47)
ramon: poll                 wall=11.000s usage=10.994s mem=58660KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   40   5221 181976 376647  4259/3963/346    7817/861    34  208   56.47)
(smt.stats   41   5382 188434 393222  4264/3992/346    8078/861    34  208   56.47)
(smt.stats   42   5559 193039 411994  4278/4004/346    8450/861    34  208   56.66)
(sat.ddfw       1      1   11.0799    920001      4509         13            1       93)
(smt.stats   43   5753 198496 425474  4291/4006/346    8685/861    34  208   56.66)
ramon: poll                 wall=12.000s usage=12.095s mem=58944KiB load=1.10 rootload=1.10
(smt.stats   44   5966 203854 443905  4420/4059/347    9255/950    35  208   56.75)
(smt.stats   45   6067 206308 450994  4461/4148/347    9422/950    35  208   56.75)
(smt.stats   46   6178 209341 462194  4500/4191/347    9618/950    35  208   57.14)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 2 := 390&8
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 390&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755814278 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 390&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755814278 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 390&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755814278 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 390&8
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 390 := 1564 << 4
(smt.stats   47   6300 212169 475077  4608/4228/347    9893/952    35  208   57.24)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 25024&8
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 549755808516 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 25024&8
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 549755808516 := 1564 << 4
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 25024&8
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 8 := 25024&8
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 25024&8
band: (band[39] (shl[39] (bv2int %0) (mod #114 39)) (if (= #586 38) 1 (if #588 2 #662))) 1 := 25024&8
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 214973 486586  4673/4336/352   10121/1067    36  209   57.24)
(smt.stats   49   6581 219062 501837  4695/4410/357   10529/1067    36  209   57.33)
(smt.stats   50   6742 223079 521006  4755/4419/357   10781/1091    37  210   57.33)
ramon: poll                 wall=13.000s usage=13.338s mem=59504KiB load=1.24 rootload=1.24
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 12504&4
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 201348 := 1563 << 3
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 12504&4
shl: (shl[39] (bv2int %0) (mod (bv2int %0) 39)) 201348 := 1563 << 3
(smt.stats   51   6919 226477 534536  4981/4484/357   11382/1098    37  210   57.62)
(sat.ddfw       1      1   10.5263   1060001      5196         14            1      108)
(smt.stats   52   7113 230114 548346  4991/4698/366   11984/1168    38  211   57.81)
(smt.stats   53   7326 236988 575579  5003/4714/367   12346/1354    39  229   57.81)
ramon: poll                 wall=14.000s usage=14.337s mem=60224KiB load=1.00 rootload=1.00
(smt.stats   54   7560 241933 592531  5049/4722/368   12935/1356    39  229   57.91)
(smt.stats   55   7661 245827 612537  5073/4765/368   13167/1356    39  229   58.01)
(smt.stats   56   7772 248533 625261  5199/4798/368   13486/1450    40  238   58.01)
(smt.stats   57   7894 251518 636002  5360/4922/368   13904/1453    40  238   58.13)
ramon: poll                 wall=15.021s usage=15.359s mem=60540KiB load=1.00 rootload=1.00
(smt.stats   58   8028 254140 643886  5423/5132/370   14302/1454    40  238   58.22)
(sat.ddfw       1      1   9.84834   1210001      5931         15            1      123)
(smt.stats   59   8175 258778 670123  5440/5139/370   14728/1507    41  246   58.22)
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813885&16
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813885&16
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813885&16
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 0 := 549755813885&16
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813885&16
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813885 := 549755813885 << 5
band: (band[39] (shl[64] (bv2int %0) (mod #673 64)) (if (= #687 63) 0 (if #689 1 #813))) 16 := 549755813885&16
shl: (shl[64] (bv2int %0) (mod (+ #114 #672) 64)) 549755813885 := 549755813885 << 5
(smt.stats   60   8336 262039 690039  5630/5331/382   15098/1554    42  249   58.42)
(smt.stats   61   8513 265821 710881  5779/5483/383   15857/1555    42  249   58.51)
ramon: poll                 wall=16.000s usage=16.338s mem=60908KiB load=1.00 rootload=1.00
(smt.stats   62   8707 271238 722403  5961/5488/383   16747/1560    42  249   58.64)
ramon: poll                 wall=17.000s usage=17.371s mem=61188KiB load=1.03 rootload=1.03
(smt.stats   63   8920 281675 785978  6138/5757/384   17447/1662    43  258   59.15)
(sat.ddfw       1      1   9.24962   1370001      6715         16            1      139)
(smt.stats   64   9154 287874 814953  6195/5852/385   18475/1778    44  262   59.34)
ramon: poll                 wall=18.000s usage=18.307s mem=61908KiB load=0.94 rootload=0.93
ramon: poll                 wall=19.000s usage=19.311s mem=61784KiB load=1.00 rootload=1.01
(smt.stats   65   9411 294202 838347  6395/6022/386   19468/1783    44  262   59.54)
(sat.ddfw       1      1    8.6921   1540001      7549         17            1      156)
(smt.stats   66   9512 296716 848638  6409/6102/386   19870/1984    45  262   59.63)
(smt.stats   67   9623 299499 857535  6433/6122/386   20133/1987    45  262   59.63)
ramon: poll                 wall=20.000s usage=20.311s mem=62216KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:41:48 2024
ramon: root.execname        z3
ramon: root.utime           20.360s
ramon: root.stime           0.020s
ramon: group.total          20.393s
ramon: group.utime          20.365s
ramon: group.stime          0.028s
ramon: group.mempeak        62472KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.083s
ramon: loadavg              1.02
