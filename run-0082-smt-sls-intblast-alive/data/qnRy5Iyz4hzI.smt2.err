ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:09:44 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27301 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/qnRy5Iyz4hzI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             936763
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   4106    638  1187/1067/89     101/1     2   13   51.96)
(smt.stats    1    202   7387   1961  1800/1624/99     170/13     7   17   52.15)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   67.5676     10000        49          0            1        2)
(smt.stats    2    313   9283   4798  2262/2042/105     247/14     9   17   52.36)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 83 := 2147483647&83
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 83 := 83 << 32
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 83 := 2147483647&83
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 83 := 83 << 32
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 185 := 2147483647&185
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 185 := 185 << 32
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 2147483647 := 2147483647&4294967327
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 2147483584 := 2147483647&4294967327
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 134 := 2147483647&134
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 134 := 134 << 32
(smt.stats    3    414  10851   6286  2324/2064/116     337/18    12   31   52.45)
(sat.ddfw       1      1   37.0407     20001        98          1            1        3)
(smt.stats    4    525  13186   7777  2389/2157/130     434/21    13   44   52.56)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 51 := 562949953421311&51
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 2251799813685299 := 50 << 50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 49 := 562949953421311&49
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 54043195528446001 := 50 << 50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 562949953421311&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 50 << 50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 562949953421311&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 50 << 50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&4294967297
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&4294967296
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&4294967295
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&52
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&53
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&52
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 16 := 281474976710655&56
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 9 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 8 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&128
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&128
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&256
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&256
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&512
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&1024
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&1024
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&2048
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&1024
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&2048
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&4096
(smt.stats    5    647  15408  10362  2525/2222/199     558/29    15   60   53.06)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&132
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&132
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&144
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&144
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&144
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&144
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 40 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 32 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 32 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 32 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 160 := 281474976710655&162
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 2 := 281474976710655&10
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16689  13771  2599/2352/314     727/62    18   88   53.35)
(sat.ddfw       1      1   43.4783     40001       196          2            1        5)
(smt.stats    7    859  17233  14730  2777/2366/314     954/73    18   88   53.73)
(smt.stats    8    981  17632  15539  2955/2589/314    1215/78    18   88   53.92)
(smt.stats    9   1115  22686  29111  3104/2828/314    1515/78    18   88   53.92)
(sat.ddfw       1      1        40     70001       343          3            1        8)
(smt.stats   10   1216  24430  37286  3254/2872/314    1911/86    18   88   54.02)
ramon: poll                 wall=1.003s usage=0.861s mem=56512KiB load=0.86 rootload=0.85
(smt.stats   11   1327  26545  44718  3353/3106/318    2661/425    19   88   54.21)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30882  49908  3375/3122/318    2986/426    19   88   54.31)
(sat.ddfw       1      1    35.057    110001       539          4            1       12)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&40960
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 83316593106395136 := 7 << 7
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&40960
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 81064793292709888 := 7 << 7
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&40960
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 81064793292709888 := 7 << 7
(smt.stats   13   1583  34141  60487  3432/3161/331    3258/586    21  138   54.31)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 0 := 7 << 7
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 0 := 7 << 7
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 1 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 2 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 60 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 56 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 48 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 32 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 2 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 1 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 16 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 16 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 32 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 32 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 2 := 63&896
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 16 := 63&896
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 32 := 63&896
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 4 := 63&896
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 8 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 4 := 896&63
(smt.stats   14   1730  35350  64714  3538/3299/402    3492/749    22  153   55.08)
(smt.stats   15   1831  35586  67835  3584/3333/403    3658/765    23  154   55.20)
(smt.stats   16   1942  40526  79353  3701/3424/406    4082/827    24  169   55.49)
(smt.stats   17   2064  46196  84594  3752/3464/406    4406/827    24  169   55.70)
(sat.ddfw       1      1   30.6554    160000       784          5            1       17)
(smt.stats   18   2198  55966 114231  3784/3496/407    4593/1024    25  171   55.89)
ramon: poll                 wall=2.003s usage=1.861s mem=58304KiB load=1.00 rootload=0.99
(sat.ddfw       1      1    27.113    220001      1078          6            1       23)
(smt.stats   19   2345  61176 119794  3919/3501/407    4848/1033    25  171   56.08)
(sat.ddfw       1      1   24.2466    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.857s mem=58560KiB load=1.00 rootload=1.00
(smt.stats   20   2506  66292 135131  3985/3699/415    5446/1056    26  175   56.37)
(sat.ddfw       1      1   21.8103    370001      1813          8            1       38)
(smt.stats   21   2607  69480 144746  4075/3709/415    5704/1059    26  175   56.47)
ramon: poll                 wall=4.000s usage=3.856s mem=59020KiB load=1.00 rootload=1.00
(smt.stats   22   2718  72866 154020  4145/3797/416    5985/1153    27  180   56.47)
(sat.ddfw       1      1   20.5292    460001      2254          9            1       47)
(smt.stats   23   2840  78812 171771  4227/3887/416    6246/1163    28  180   56.56)
(smt.stats   24   2974  82346 184172  4284/3954/416    6707/1165    28  180   56.66)
ramon: poll                 wall=5.000s usage=5.079s mem=59108KiB load=1.22 rootload=1.22
(smt.stats   25   3121  87578 198528  4304/4008/416    7269/1165    28  180   56.66)
(smt.stats   26   3282  93758 226014  4319/4031/416    7658/1165    28  180   56.87)
(sat.ddfw       1      1    19.253    560001      2745         10            1       57)
(smt.stats   27   3459  99362 251629  4361/4075/419    8520/1381    29  180   56.96)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560 101950 260968  4365/4077/420    9013/1381    29  180   57.06)
(smt.stats   29   3671 104826 275915  4532/4089/420    9350/1383    29  180   57.16)
ramon: poll                 wall=6.000s usage=6.079s mem=59364KiB load=1.00 rootload=1.00
(smt.stats   30   3793 110680 302538  4549/4263/423    9578/1479    31  260   57.16)
(sat.ddfw       1      1   17.5635    670001      3284         11            1       68)
(smt.stats   31   3927 114148 321662  4722/4436/424   10028/1493    32  268   57.35)
(smt.stats   32   4074 121600 353618  4728/4440/424   10503/1495    32  268   57.35)
ramon: poll                 wall=7.000s usage=7.079s mem=59620KiB load=1.00 rootload=0.99
(smt.stats   33   4235 125034 367036  4927/4621/426   10886/1662    33  282   57.45)
(smt.stats   34   4412 133325 380661  4945/4659/426   11143/1662    33  282   57.68)
(sat.ddfw       1      1   16.1442    790001      3872         12            1       80)
(smt.stats   35   4606 145962 403899  4952/4666/426   11428/1662    33  282   57.91)
(smt.stats   36   4707 154510 457193  4955/4669/426   11609/1662    33  282   57.91)
ramon: poll                 wall=8.003s usage=8.082s mem=60132KiB load=1.00 rootload=1.01
(smt.stats   37   4818 158406 475434  5033/4669/426   11843/1663    33  282   58.00)
(sat.ddfw       1      1   14.9632    920001      4509         13            1       93)
(smt.stats   38   4940 161922 484984  5155/4792/426   12120/1663    33  282   58.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 175)
ramon: poll                 wall=9.000s usage=9.078s mem=60644KiB load=1.00 rootload=0.99
(smt.stats   39   5074 167811 509112  5252/4936/426   12284/1668    33  282   58.19)
(smt.stats   40   5221 173095 525252  5365/4991/426   12575/1672    33  282   58.19)
ramon: poll                 wall=10.003s usage=10.080s mem=60900KiB load=1.00 rootload=1.01
(smt.stats   41   5382 179981 546075  5444/5107/429   12897/1890    34  285   58.28)
(sat.ddfw       1      1   13.9498   1060001      5196         14            1      108)
(smt.stats   42   5559 182839 552504  5743/5261/429   13279/1895    34  285   58.51)
ramon: poll                 wall=11.000s usage=11.076s mem=60900KiB load=1.00 rootload=0.99
(smt.stats   43   5753 185075 556311  5964/5493/429   13507/1933    35  299   58.51)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 67553994410561536 := 1446957302154248 << 2
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 67553994410561536 := 1446957302154248 << 2
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 67553994410561536 := 1446957302154248 << 2
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 69805794224246784 := 549755813889032 << 2
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 69805794224246784 := 549755813889032 << 2
(smt.stats   44   5966 188877 573966  6049/5744/435   13944/1934    35  299   58.60)
(sat.ddfw       1      1    13.048   1210001      5931         15            1      123)
(smt.stats   45   6067 192843 586695  6083/5753/435   14165/1936    35  299   58.70)
(smt.stats   46   6178 196600 601807  6158/5782/435   14362/2028    36  301   58.79)
ramon: poll                 wall=12.000s usage=12.075s mem=61156KiB load=1.00 rootload=1.00
(smt.stats   47   6300 200976 630817  6189/5853/436   14498/2028    36  301   58.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 203991 642970  6314/5889/436   14905/2036    37  306   58.89)
ramon: poll                 wall=13.003s usage=13.078s mem=61264KiB load=1.00 rootload=1.00
(smt.stats   49   6581 210322 672596  6324/6017/437   15233/2036    37  306   59.29)
(sat.ddfw       1      1   12.2746   1370001      6715         16            1      139)
(smt.stats   50   6742 217864 731606  6326/6017/438   15609/2101    38  311   59.29)
(smt.stats   51   6919 226082 775741  6341/6034/441   16159/2150    39  322   59.38)
ramon: poll                 wall=14.000s usage=14.022s mem=61644KiB load=0.95 rootload=0.95
(smt.stats   52   7113 233524 809586  6401/6040/441   16942/2203    40  337   59.58)
(sat.ddfw       1      1   11.5741   1540001      7549         17            1      156)
ramon: poll                 wall=15.003s usage=14.975s mem=61736KiB load=0.95 rootload=0.95
(smt.stats   53   7326 242449 859266  6663/6103/441   17680/2210    40  337   59.77)
ramon: poll                 wall=16.000s usage=15.937s mem=62060KiB load=0.97 rootload=0.96
(sat.ddfw       1      1   10.9469   1720001      8431         18            1      174)
(smt.stats   54   7560 252342 916309  6855/6385/441   18572/2213    40  337   59.87)
ramon: poll                 wall=17.000s usage=16.937s mem=62348KiB load=1.00 rootload=1.00
(smt.stats   55   7661 259982 951964  6934/6549/441   18987/2219    40  337   59.97)
(smt.stats   56   7772 265573 975245  7106/6632/441   19476/2222    40  337   60.06)
ramon: poll                 wall=18.000s usage=17.936s mem=62468KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7894 271150 1000750  7258/6815/442   19965/2608    41  339   60.16)
(sat.ddfw       1      1   10.3973   1910001      9362         19            1      193)
(smt.stats   58   8028 273665 1010107  7291/6969/442   20387/2608    41  339   60.25)
(smt.stats   59   8175 276921 1019886  7509/6988/442   20700/2614    41  339   60.35)
ramon: poll                 wall=19.000s usage=18.934s mem=62864KiB load=1.00 rootload=1.00
(smt.stats   60   8336 282391 1050274  7727/7247/442   21448/2616    41  339   60.44)
(smt.stats   61   8513 286351 1069901  7777/7470/445   23149/2735    42  354   60.80)
ramon: poll                 wall=20.003s usage=19.936s mem=63492KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:10:04 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.020s
ramon: group.total          20.002s
ramon: group.utime          19.982s
ramon: group.stime          0.020s
ramon: group.mempeak        63748KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
