ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:49:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39682 MiB
ramon: sys.mem.avail        61376 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ylaawSdeUaOG.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             4005737
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   246/246     0/0  58       0    18.64   0.00)
(sat.stats    103    605    0   246/246   103/31  58       0    18.93   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    605    0   246/246   103/31  58       0    18.93   0.01)
(sat.stats    103    605    0   246/246   103/31  58       0    18.93   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 383818.93 :time 0.00)
(sat.stats    103    605    0   248/248    39/30  58       0    18.93   0.01)
(sat.stats    168   1702    1   248/248   104/84  58       0    19.03   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    171   1750    2   248/248   107/84  58       0    19.03   0.01)
(sat.stats    174   1812    3   248/248   110/84  58       0    19.03   0.01)
(sat.stats    177   1872    4   248/248   113/84  58       0    19.03   0.01)
(sat.stats    180   1943    5   248/248   116/84  58       0    19.03   0.01)
(sat.stats    183   2009    6   248/248   119/84  58       0    19.03   0.01)
(sat.stats    186   2072    7   248/248   122/84  58       0    19.03   0.01)
(sat.stats    189   2142    8   248/248   125/84  58       0    19.03   0.01)
(sat.stats    192   2231    9   248/248   128/85  58       0    19.03   0.01)
(sat.stats    195   2260   10   248/248   131/88  58       0    19.13   0.01)
(sat.stats    198   2326   11   248/248   134/91  58       0    19.13   0.01)
(sat.stats    201   2406   12   248/248   137/94  58       0    19.13   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    210   2653   15   248/248   146/103  58       0    19.13   0.01)
(sat.stats    326   5029   17   249/249   262/171  58       0    19.23   0.04)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1953 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2764 :time 0.00)
(sat.stats    491   7782   40   258/258   426/247  65       0    19.71   0.18)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4082 :time 0.00)
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 0 := 106 >>l 49
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 0 := 0&144115188075855616
lshr: (lshr[64] (bv2int %0) (mod (+ #52 #788) 64)) 106 := 106 >>l 49
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4818 :time 0.00)
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 5047 :time 0.00)
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 1 := 1&144115188075855616
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 2 := 2&144115188075855616
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 4 := 86&144115188075855616
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 8 := 8&144115188075855616
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 16 := 16&144115188075855616
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 32 := 32&144115188075855616
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 64 := 64&144115188075855616
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 128 := 128&144115188075855616
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 0 := 255&144115188075855616
band: (band[57] (if (= #659 63) 1329227995784915854457062986570792960 (if #661 664613997892457927228531493285396480 #785)) (lshr[64] (bv2int %0) (mod #789 64))) 245 := 144115188075855616&255
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 0 := 255&144115188075855616
band: (band[57] (if (= #659 63) 1329227995784915854457062986570792960 (if #661 664613997892457927228531493285396480 #785)) (lshr[64] (bv2int %0) (mod #789 64))) 108 := 144115188075855616&255
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 0 := 255&144115188075855616
band: (band[57] (if (= #659 63) 1329227995784915854457062986570792960 (if #661 664613997892457927228531493285396480 #785)) (lshr[64] (bv2int %0) (mod #789 64))) 50 := 144115188075855616&255
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 0 := 255&144115188075855616
band: (band[57] (if (= #659 63) 1329227995784915854457062986570792960 (if #661 664613997892457927228531493285396480 #785)) (lshr[64] (bv2int %0) (mod #789 64))) 120 := 144115188075855616&255
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 0 := 255&144115188075855616
band: (band[57] (if (= #659 63) 1329227995784915854457062986570792960 (if #661 664613997892457927228531493285396480 #785)) (lshr[64] (bv2int %0) (mod #789 64))) 16 := 144115188075855616&255
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 0 := 255&144115188075855616
band: (band[57] (if (= #659 63) 1329227995784915854457062986570792960 (if #661 664613997892457927228531493285396480 #785)) (lshr[64] (bv2int %0) (mod #789 64))) 192 := 144115188075855616&255
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 0 := 255&144115188075855616
band: (band[57] (if (= #659 63) 1329227995784915854457062986570792960 (if #661 664613997892457927228531493285396480 #785)) (lshr[64] (bv2int %0) (mod #789 64))) 32 := 144115188075855616&255
band: (band[57] (lshr[57] (bv2int %0) (mod #52 57)) (if (= #532 56) 10384593717069655185003398620512256 (if #534 5192296858534827592501699310256128 #644))) 0 := 255&144115188075855616
band: (band[57] (if (= #659 63) 1329227995784915854457062986570792960 (if #661 664613997892457927228531493285396480 #785)) (lshr[64] (bv2int %0) (mod #789 64))) 128 := 144115188075855616&255
 (sat-cleaner :elim-literals 31 :elim-clauses 2 :cost 6691 :time 0.00)
(sat.stats    717  16157   53   815/813   653/337 179       0    20.80   0.34)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 11148 :time 0.00)
(sat.stats   1068  26506  121 23174/23171  1427/770 202       0    26.72   0.59)
ramon: poll                 wall=1.000s usage=0.991s mem=33344KiB load=0.99 rootload=0.98
(sat.stats   1602  27845  216 66404/66401  2826/1635 202       0    37.66   1.66)
ramon: poll                 wall=2.000s usage=1.991s mem=40840KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.991s mem=54456KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.003s usage=3.993s mem=58088KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.990s mem=61400KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.990s mem=64908KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.989s mem=66852KiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts          :learned/bin          :gc          :time)
(sat.stats      :decisions   :clauses/bin            :units         :memory       )
(sat.stats   2573  30295  333 144382/144379  5365/3203 202       0    65.31   7.12)
ramon: poll                 wall=8.000s usage=7.989s mem=69288KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.989s mem=87244KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.988s mem=89036KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.988s mem=90480KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.988s mem=92276KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.987s mem=93656KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.987s mem=95856KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.987s mem=97004KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.987s mem=98480KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.986s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.986s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.986s mem=100MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.003s usage=19.988s mem=100MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:49:43 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.070s
ramon: group.total          20.004s
ramon: group.utime          19.924s
ramon: group.stime          0.080s
ramon: group.mempeak        101MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.018s
ramon: loadavg              1.00
