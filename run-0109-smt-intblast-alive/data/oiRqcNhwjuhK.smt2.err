ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:55:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40683 MiB
ramon: sys.mem.avail        61707 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/oiRqcNhwjuhK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3081419
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101    882    274  1186/1018/107      97/23     4   17   19.15)
(smt.stats    1    202   1446    605  1348/1160/109     201/27     5   20   19.25)
(smt.stats    2    313   1893   1013  1441/1281/109     311/27     5   20   19.34)
ramon: poll                 wall=1.000s usage=0.923s mem=20404KiB load=0.92 rootload=0.92
(smt.stats    3    414   3415   2460  1684/1484/109     422/28     5   20   19.34)
(smt.stats    4    525   4369   4188  1896/1601/117     564/59     6   23   19.44)
(smt.stats    5    647   5871   8261  1970/1794/120     688/97     8   28   19.44)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   6330   8832  2039/1832/120     792/98     8   28   19.73)
ramon: poll                 wall=2.000s usage=1.923s mem=20800KiB load=1.00 rootload=1.00
(smt.stats    7    859   6821   9631  2315/2079/121     914/105     9   29   19.73)
(smt.stats    8    981   7932  11285  2516/2359/124    1068/119    10   30   19.83)
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 18014398509481984 := 9007199254740991 << 1
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 18014398509481984 := 9007199254740991 << 1
(smt.stats    9   1115  10067  14789  2532/2368/127    1205/186    11   34   19.83)
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 961&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 961 := 9007199254740991 << 1
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 961&0
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 961 := 9007199254740991 << 1
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 9007199254740990&0
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 9007199254740991 := 9007199254740991 << 1
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 9007199254740990&0
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 9007199254740359 := 9007199254740991 << 1
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 9007199254740990&0
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 9007199254740359 := 9007199254740991 << 1
(smt.stats   10   1216  11300  18110  2596/2432/142    1292/198    14   48   19.97)
(smt.stats   11   1327  14850  24847  2612/2444/142    1402/199    14   48   20.20)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  16887  29045  2623/2458/147    1516/210    17   55   20.42)
(smt.stats   13   1583  18982  30739  2625/2460/150    1668/210    17   55   20.42)
(smt.stats   14   1730  22835  36111  2643/2472/150    1813/227    18   59   20.42)
(smt.stats   15   1831  24939  40269  2669/2488/150    1914/227    18   59   20.42)
(smt.stats   16   1942  26317  43774  2676/2509/150    2020/227    18   59   20.52)
(smt.stats   17   2064  27634  46754  2679/2512/150    2139/227    18   59   20.52)
(smt.stats   18   2198  29064  50242  2695/2520/158    2000/199    19  331   20.52)
(smt.stats   19   2345  32059  56949  2702/2530/158    2146/228    20  336   20.52)
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 962&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 962 := 208 << 49
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 962&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 962 := 208 << 49
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 962&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 962 := 208 << 49
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 9007199254740991&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 18014398509481983 := 208 << 49
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 9007199254740991&2
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 18014398509481983 := 208 << 49
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 0&2
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 4 := 208 << 49
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 0&2
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 4 := 208 << 49
(smt.stats   20   2506  34818  60987  2738/2563/171    2304/229    21  337   20.61)
(smt.stats   21   2607  38079  64163  2745/2578/176    2395/224    22  351   20.61)
(smt.stats   22   2718  40703  67885  2753/2582/177    2510/224    23  351   20.84)
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 5 := 6&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 4 := 6&5
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 135107988821114886 := 156 << 50
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 5 := 6&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 4 := 6&5
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 135107988821114886 := 156 << 50
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 149&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 149&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 149&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 4 := 152&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 146&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 8&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 8&5
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 144115188075855880 := 156 << 50
(smt.stats   23   2840  43234  72954  2805/2635/204    2632/228    25  363   20.93)
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 5 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 4 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 3 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 4503599627370502 := 156 << 50
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 3 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 4503599627370502 := 156 << 50
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 1 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 1 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 5 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 5 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 4 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 4 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 2 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 2 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 2 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 2 := 4503599627370496&5
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&5
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 4 := 4503599627370496&5
(smt.stats   24   2974  45741  76333  2888/2654/204    2781/230    25  363   21.03)
(smt.stats   25   3121  50627  81015  2922/2748/255    2947/238    26  373   21.13)
ramon: poll                 wall=3.000s usage=2.922s mem=22340KiB load=1.00 rootload=0.99
(smt.stats   26   3282  58021  85127  2933/2760/256    3106/263    28  378   21.13)
(smt.stats   27   3459  65141  93811  2951/2768/256    3294/265    28  378   21.22)
(smt.stats   28   3560  69123  98851  2964/2787/256    3414/265    28  378   21.22)
(smt.stats   29   3671  74416 105352  2964/2787/256    3525/265    28  378   21.22)
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 16 := 9007199254740991&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 16 := 9007199254740991&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 17 := 9007199254740991&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 17 := 9007199254740991&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 17 := 9007199254740991&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 19 := 9007199254740991&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 15 := 9007199254740991&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 23 := 9007199254740991&23
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 9007199254740991 := 9007199254740989 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 23 := 9007199254740991&23
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 9007199254740991 := 9007199254740989 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 23 := 9007199254740991&23
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 9007199254740991 := 9007199254740989 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 0&23
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 0 := 9007199254740989 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 0&23
shl: (shl[64] (bv2int %0) (mod (+ #114 #878) 64)) 0 := 9007199254740989 << 52
(smt.stats   30   3793  78676 113465  3013/2825/285    3649/279    29  379   21.43)
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 9007199254740987 := 9007199254740989 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 9007199254740991 := 9007199254740989 << 52
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 9007199254740991 := 9007199254740989 << 52
(smt.stats   31   3927  82391 119360  3077/2889/296    3841/289    30  384   21.53)
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 17 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 16 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 16 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 16 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 16 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 8 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 8 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 8 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 20 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 16 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 8 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 8 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 8 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 8 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 1 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 0 := 4503599627370496&23
band: (band[53] (shl[53] (bv2int %0) (mod #114 53)) (if (or #630 #631 #632 #633 #634 #635 #636 #637 #638 #639 #640 #641 #642 #643 #644 #645 ...) 0 (if #677 1 #687))) 1 := 4503599627370496&23
band: (band[53] (shl[64] (bv2int %0) (mod #879 64)) (if (or #894 #895 #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 ...) 0 (if #942 1 #981))) 2 := 4503599627370496&23
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  84933 124956  3200/2993/328    4062/329    31  397   21.81)
ramon: poll                 wall=4.000s usage=3.922s mem=23384KiB load=1.00 rootload=1.00
(smt.stats   33   4235  87778 129660  3319/3021/333    4292/330    31  397   22.10)
(smt.stats   34   4412  90255 134286  3511/3211/333    4504/355    32  398   22.19)
ramon: poll                 wall=5.000s usage=4.922s mem=23568KiB load=1.00 rootload=1.00
(smt.stats   35   4606  96332 144770  3669/3359/334    4820/392    33  403   22.29)
(smt.stats   36   4707  99441 154986  3759/3539/336    5072/404    34  411   22.38)
(smt.stats   37   4818 104323 170350  3764/3546/337    5186/422    35  412   23.14)
(smt.stats   38   4940 108919 185756  3770/3552/339    5434/426    37  422   23.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 269)
(smt.stats   39   5074 112231 196761  3775/3557/339    5395/426    37  422   23.34)
ramon: poll                 wall=6.000s usage=5.922s mem=24760KiB load=1.00 rootload=0.99
(smt.stats   40   5221 118881 216108  3812/3557/339    5595/426    37  422   23.34)
(smt.stats   41   5382 122744 225646  3911/3612/339    5937/435    37  422   23.78)
ramon: poll                 wall=7.000s usage=6.921s mem=25552KiB load=1.00 rootload=1.00
(smt.stats   42   5559 126476 234290  4098/3790/339    6197/441    37  422   23.97)
ramon: poll                 wall=8.000s usage=7.921s mem=25556KiB load=1.00 rootload=1.00
(smt.stats   43   5753 130971 241438  4278/3895/339    6431/444    37  422   23.97)
ramon: poll                 wall=9.000s usage=8.921s mem=25560KiB load=1.00 rootload=1.00
(smt.stats   44   5966 138513 254766  4432/4135/346    6696/594    38  433   24.06)
(smt.stats   45   6067 142053 262903  4460/4242/346    6843/594    38  433   24.16)
(smt.stats   46   6178 145779 270367  4475/4254/346    7059/594    38  433   24.16)
ramon: poll                 wall=10.000s usage=9.921s mem=25900KiB load=1.00 rootload=1.00
(smt.stats   47   6300 152064 280797  4570/4284/346    7317/595    38  433   24.25)
(smt.stats   48   6434 154855 289156  4682/4457/348    7623/658    39  435   24.35)
(smt.stats   49   6581 159627 305079  4715/4471/350    7850/687    40  456   24.35)
(smt.stats   50   6742 168609 346447  4722/4497/350    8017/687    40  456   25.38)
ramon: poll                 wall=11.002s usage=10.923s mem=26872KiB load=1.00 rootload=1.00
(smt.stats   51   6919 173373 360022  4873/4499/350    8229/688    40  456   25.47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 178811 371271  5055/4800/350    8533/689    40  456   25.57)
ramon: poll                 wall=12.000s usage=11.920s mem=27100KiB load=1.00 rootload=1.00
(smt.stats   53   7326 185750 386097  5087/4832/350    8849/690    40  456   25.66)
(smt.stats   54   7560 193026 405071  5219/4891/350    9283/691    40  456   25.66)
(smt.stats   55   7661 197421 417722  5293/5031/351    9573/864    41  456   25.66)
(smt.stats   56   7772 203417 433581  5300/5073/352    9748/884    42  460   25.66)
ramon: poll                 wall=13.000s usage=12.920s mem=27268KiB load=1.00 rootload=1.00
(smt.stats   57   7894 212283 453723  5304/5077/352    9895/884    42  460   25.66)
(smt.stats   58   8028 215594 468230  5334/5108/362   10206/930    43  473   25.76)
(smt.stats   59   8175 224529 501492  5337/5111/362   10487/930    43  473   25.76)
(smt.stats   60   8336 230127 520169  5378/5125/362   10819/930    43  473   25.95)
(smt.stats   61   8513 233672 532053  5502/5235/362   11231/932    43  473   26.05)
ramon: poll                 wall=14.000s usage=13.920s mem=27912KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8707 239088 547916  5717/5393/363   11625/1061    44  476   26.34)
ramon: poll                 wall=15.000s usage=14.920s mem=28004KiB load=1.00 rootload=1.00
(smt.stats   63   8920 245856 566763  5850/5496/363   12171/1070    44  476   26.43)
ramon: poll                 wall=16.000s usage=15.920s mem=28156KiB load=1.00 rootload=1.00
(smt.stats   64   9154 252351 586229  5978/5662/364   12827/1094    45  483   26.53)
(smt.stats   65   9411 263361 636472  6083/5770/364   13470/1100    45  483   26.53)
(smt.stats   66   9512 266165 648929  6104/5858/364   13785/1100    45  483   26.62)
(smt.stats   67   9623 270047 659333  6108/5862/365   13897/1196    46  502   26.62)
(smt.stats   68   9745 275346 690417  6115/5869/365   14218/1196    46  502   26.62)
ramon: poll                 wall=17.000s usage=16.919s mem=28320KiB load=1.00 rootload=0.99
(smt.stats   69   9879 278236 697904  6191/5881/365   14472/1208    46  502   26.72)
(smt.delete-inactive-clauses  :num-deleted-clauses 344)
(smt.stats   70  10026 281170 711229  6254/5990/366   14494/1281    47  504   26.72)
(smt.stats   71  10187 290014 727333  6261/6015/366   14675/1281    47  504   26.72)
(smt.stats   72  10364 295826 757175  6293/6037/366   14893/1281    47  504   26.82)
(smt.stats   73  10558 299418 775334  6317/6069/366   15381/1281    47  504   26.91)
ramon: poll                 wall=18.000s usage=17.911s mem=28548KiB load=0.99 rootload=1.00
ramon: poll                 wall=19.002s usage=18.912s mem=28736KiB load=1.00 rootload=1.00
(smt.stats   74  10771 304710 798723  6537/6085/367   15675/1353    48  505   27.10)
(smt.stats   75  11005 310024 815301  6733/6333/367   16035/1355    48  505   27.20)
ramon: poll                 wall=20.000s usage=19.906s mem=29228KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:55:38 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.963s
ramon: group.utime          19.943s
ramon: group.stime          0.020s
ramon: group.mempeak        31220KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.055s
ramon: loadavg              1.00
