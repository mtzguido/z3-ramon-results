ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:39:12 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29373 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/57xy2xNSoiq8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             628880
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&1
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&1
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 3 := 281474976710655&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 3 := 4 << 47
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 3 := 281474976710655&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 3 := 4 << 47
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 3 := 281474976710655&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 3 := 4 << 47
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&1
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&1
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&1
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&1
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&2
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1        80     10000        49          0            1        2)
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 2 := 281474976710655&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 2 := 104 << 47
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 2 := 281474976710655&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 2 := 104 << 47
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 2 := 281474976710655&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 2 := 104 << 47
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 202 := 281474976710655&202
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 202 := 204 << 47
(sat.ddfw       1      1   38.9144     20001        98          1            1        3)
(smt.stats    0    101   3481    778  1206/1078/115      93/7     6   22   52.15)
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&104
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 16 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 16 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 16 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 16 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 48 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 96 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 95 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 16 := 281474976710655&112
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 112 := 281474976710655&112
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 112 := 786504 << 47
(smt.stats    1    202   5095   2699  2341/2102/147     205/19     8   32   52.44)
(smt.stats    2    313   7581   5573  2390/2162/152     306/26    11   34   52.65)
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 787202 := 562949953421311&787202
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 787202 := 787202 << 48
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 787202 := 562949953421311&787202
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #881 #883) 64)) 787202 := 787202 << 48
(sat.ddfw       1      1   40.0802     40001       196          2            1        5)
(smt.stats    3    416   9133   7679  2467/2240/161     416/37    12   36   52.74)
(smt.stats    4    531  11607  11486  2519/2291/166     475/39    15   55   52.74)
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 1 := 1125899906842623&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1125899906842623&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1125899906842623&4
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1125899906842623&4
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 1 := 1125899906842623&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1125899906842623&2
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1125899906842623&64
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1125899906842623&68
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1125899906842623&68
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 12 := 1125899906842623&68
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 20 := 1125899906842623&68
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 36 := 1125899906842623&68
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 8 := 1125899906842623&68
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 12 := 1125899906842623&68
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 4 := 1125899906842623&68
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 68 := 1125899906842623&70
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 68 := 1125899906842623&70
(smt.stats    5    653  12745  13989  2649/2400/218     638/51    16   58   52.93)
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 167 := 1125899906842623&787586
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 166 := 1125899906842623&787586
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 134 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 134 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 134 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 5510 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 5638 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 5638 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 5383 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 5382 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 5382 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 5382 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 5382 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 5382 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 3719 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 3718 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 3718 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 3718 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 3206 := 1125899906842623&787590
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    754  13342  16464  2851/2618/281     864/124    18   84   53.23)
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 9350 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 9350 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 9350 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 9350 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 9350 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 9350 := 1125899906842623&787590
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 9350 := 1125899906842623&799878
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 9350 := 1125899906842623&799878
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 9350 := 1125899906842623&799878
(sat.ddfw       1      1   37.3599     70001       343          3            1        8)
(smt.stats    7    865  14052  20516  3116/2735/292    1167/138    19   87   53.63)
(smt.stats    8    987  15530  25455  3329/3044/312    1806/233    21   91   53.72)
ramon: poll                 wall=1.000s usage=0.838s mem=55976KiB load=0.84 rootload=0.83
(smt.stats    9   1121  16723  30678  3651/3151/312    2161/458    22   95   53.94)
(smt.stats   10   1222  17847  40796  3991/3497/312    2474/465    22   95   53.94)
(sat.ddfw       1      1   33.0852    110001       539          4            1       12)
(smt.stats   11   1333  19159  51809  4388/3814/312    3046/471    22   95   54.25)
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1&98
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #115))) 48 := 49 << 1
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1&98
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #115))) 48 := 49 << 1
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 1&98
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #115))) 48 := 49 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1455  21828  65881  4414/4188/338    3332/952    25  165   54.35)
(smt.stats   13   1589  26917  76143  4442/4213/339    3754/952    25  165   54.46)
(sat.ddfw       1      1    29.205    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.841s mem=57016KiB load=1.00 rootload=1.00
(smt.stats   14   1736  30866  97223  4579/4302/340    4149/1237    27  174   54.76)
(sat.ddfw       1      1   25.9857    220001      1078          6            1       23)
(smt.stats   15   1837  32556 108082  4655/4410/342    4287/1236    28  183   54.86)
(smt.stats   16   1948  34745 129195  4670/4425/343    4625/1320    29  184   54.96)
(smt.stats   17   2070  39749 141677  4678/4431/343    4832/1320    29  184   54.96)
(sat.ddfw       1      1   24.0715    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.984s mem=57380KiB load=1.14 rootload=1.14
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2204  43663 155433  4853/4439/343    5602/1322    29  184   55.16)
(smt.stats   19   2351  48054 169095  5099/4617/343    6563/1328    29  184   55.35)
(smt.stats   20   2512  52484 196386  5222/4895/343    7121/1333    29  184   55.35)
(sat.ddfw       1      1   22.4719    370001      1813          8            1       38)
(smt.stats   21   2613  55387 210972  5231/4986/343    7627/1333    29  184   55.45)
(smt.stats   22   2724  58778 224728  5248/5001/344    7943/2539    30  196   55.45)
(smt.stats   23   2846  64608 255223  5278/5016/345    8084/2539    30  196   55.65)
ramon: poll                 wall=4.000s usage=4.097s mem=58092KiB load=1.11 rootload=1.11
(smt.stats   24   2980  67060 272804  5436/5189/347    8715/2632    31  200   55.84)
(smt.stats   25   3127  71351 300747  5453/5205/348    9211/2835    32  214   55.94)
(smt.stats   26   3288  78940 340660  5533/5268/349    9392/3002    34  219   55.94)
(sat.ddfw       1      1   20.1432    460001      2254          9            1       47)
(smt.stats   27   3465  86472 374645  5550/5280/349   10005/3002    34  219   56.04)
(smt.stats   28   3566  89872 379109  5559/5294/349   10207/3002    34  219   56.04)
(smt.stats   29   3677  95253 396815  5608/5296/349   10559/3009    34  219   56.24)
ramon: poll                 wall=5.000s usage=5.337s mem=58380KiB load=1.24 rootload=1.24
(smt.stats   30   3799 100093 426002  5647/5364/350   10930/3382    35  224   56.24)
(sat.ddfw       1      1   19.1608    560001      2745         10            1       57)
(smt.stats   31   3933 105057 447362  5716/5394/350   11296/3386    35  224   56.34)
(smt.stats   32   4080 107491 469993  5732/5463/350   11570/3386    35  224   56.34)
(smt.stats   33   4241 112108 502134  5741/5475/350   11864/3386    35  224   56.44)
(smt.stats   34   4418 116470 514359  5791/5482/350   12242/3387    35  224   56.53)
ramon: poll                 wall=6.000s usage=6.334s mem=59036KiB load=1.00 rootload=1.00
(smt.stats   35   4612 121145 544948  5820/5552/350   12610/3387    35  224   56.62)
(smt.stats   36   4713 123649 551848  5821/5556/350   12714/3387    35  224   56.62)
(sat.ddfw       1      1   17.3611    670001      3284         11            1       68)
(smt.stats   37   4824 126955 565508  5837/5562/356   12874/3881    36  230   56.62)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4946 129197 577590  5853/5588/358   13142/3881    36  230   56.72)
(smt.delete-inactive-clauses  :num-deleted-clauses 150)
(smt.stats   39   5080 133092 587099  5869/5600/358   13104/3918    37  262   56.72)
(smt.stats   40   5227 139561 632406  5870/5605/358   13297/3918    37  262   56.94)
ramon: poll                 wall=7.000s usage=7.334s mem=59152KiB load=1.00 rootload=1.00
(smt.stats   41   5388 147695 689091  5873/5608/358   13558/3918    37  262   56.94)
(smt.stats   42   5565 151078 711300  5910/5613/358   14003/3918    37  262   56.94)
(smt.stats   43   5759 154859 721670  5977/5655/358   14340/3928    37  262   57.13)
(sat.ddfw       1      1   15.8898    790001      3872         12            1       80)
(smt.stats   44   5972 159674 748148  6282/5774/358   14968/3935    37  262   57.32)
ramon: poll                 wall=8.000s usage=8.331s mem=59504KiB load=1.00 rootload=0.99
(smt.stats   45   6073 162356 759885  6299/6023/358   15108/3937    37  262   57.32)
(smt.stats   46   6184 166182 789404  6321/6045/358   15464/3939    37  262   57.32)
(smt.stats   47   6306 169861 808620  6368/6068/358   15789/3943    37  262   57.42)
(smt.stats   48   6440 173673 839580  6423/6108/358   15956/3945    37  262   57.42)
(smt.stats   49   6587 178837 868983  6435/6165/359   16154/4473    38  267   57.42)
(sat.ddfw       1      1   14.6495    920001      4509         13            1       93)
(smt.stats   50   6748 185913 891668  6443/6173/360   16474/4473    38  267   57.42)
ramon: poll                 wall=9.000s usage=9.330s mem=59712KiB load=1.00 rootload=1.00
(smt.stats   51   6925 193618 923322  6452/6185/360   16689/4541    39  270   57.54)
(smt.stats   52   7119 199535 969467  6489/6199/360   17479/4543    39  270   57.54)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   53   7332 206918 1026028  6531/6243/360   18005/4543    39  270   57.73)
(smt.stats   54   7566 215559 1071138  6639/6339/363   18802/4768    40  300   58.43)
ramon: poll                 wall=10.000s usage=10.328s mem=60400KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.6015   1060001      5196         14            1      108)
(smt.stats   55   7667 218256 1084377  6743/6361/363   19643/4774    40  300   58.52)
ramon: poll                 wall=11.000s usage=11.328s mem=60640KiB load=1.00 rootload=1.00
(smt.stats   56   7778 221378 1098230  6800/6466/363   19977/4860    41  300   58.62)
(smt.stats   57   7900 224905 1120866  6808/6520/365   20219/4860    41  300   58.62)
(smt.stats   58   8034 228523 1154110  6842/6551/365   20799/4904    42  331   58.72)
(smt.stats   59   8181 232261 1182358  6856/6565/366   21288/5033    43  338   58.81)
(sat.ddfw       1      1   12.7043   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=12.326s mem=60892KiB load=1.00 rootload=1.00
(smt.stats   60   8342 237170 1205271  6944/6567/366   21617/5035    43  338   58.81)
(smt.stats   61   8519 240991 1226678  6996/6672/366   22340/5035    43  338   58.92)
(smt.stats   62   8713 248644 1294650  7032/6711/366   22937/5036    43  338   59.01)
ramon: poll                 wall=13.000s usage=13.323s mem=61164KiB load=1.00 rootload=1.00
(smt.stats   63   8926 257926 1372862  7047/6752/366   23387/5036    43  338   59.11)
(sat.ddfw       1      1   11.9145   1370001      6715         16            1      139)
(smt.stats   64   9160 262905 1407330  7306/6757/366   23820/5038    43  338   59.20)
ramon: poll                 wall=14.000s usage=14.323s mem=61380KiB load=1.00 rootload=1.00
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 1 := 3&1125899896840192
(smt.stats   65   9417 268159 1465419  7640/7049/367   24615/5306    44  340   59.39)
(smt.stats   66   9518 269394 1477419  7664/7360/367   25014/5306    44  340   59.39)
ramon: poll                 wall=15.000s usage=15.321s mem=61692KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.2226   1540001      7549         17            1      156)
(smt.stats   67   9629 270566 1487323  7828/7407/367   25230/5306    44  340   59.59)
(smt.stats   68   9751 272478 1495296  8031/7555/367   25536/5308    44  340   59.68)
ramon: poll                 wall=16.000s usage=16.319s mem=61928KiB load=1.00 rootload=1.00
(smt.stats   69   9885 274314 1500267  8165/7749/367   25865/5310    44  340   59.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10032 275905 1504266  8279/7884/367   26154/5310    44  340   59.87)
ramon: poll                 wall=17.000s usage=17.317s mem=62428KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.6051   1720001      8431         18            1      174)
(smt.stats   71  10193 278531 1539607  8455/8064/367   26811/5310    44  340   59.87)
(smt.stats   72  10370 281222 1554846  8681/8167/367   27187/5313    44  340   60.07)
ramon: poll                 wall=18.000s usage=18.316s mem=62476KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10564 283154 1567062  8803/8476/367   27723/5316    44  340   60.21)
band: (band[50] (if (or #714 #715 #716 #717 #718 #719 #720 #721 #722 #723 #724 #725 #726 #727) 0 (if #728 1 #826)) (shl[64] (* 2 #113) (mod #884 64))) 0 := 3&32769
(smt.stats   74  10777 286052 1579428  8938/8523/367   28228/5319    44  340   60.46)
(sat.ddfw       1      1   10.0604   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=19.316s mem=63044KiB load=1.00 rootload=1.00
(smt.stats   75  11011 288346 1603953  9232/8674/367   29119/5323    44  340   60.80)
(smt.stats   76  11268 292036 1614372  9273/8954/367   29501/5323    44  340   60.80)
(smt.stats   77  11550 294510 1637581  9434/8987/367   30529/5325    44  340   60.93)
ramon: poll                 wall=20.000s usage=20.314s mem=63340KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:39:32 2024
ramon: root.execname        z3
ramon: root.utime           20.340s
ramon: root.stime           0.010s
ramon: group.total          20.355s
ramon: group.utime          20.343s
ramon: group.stime          0.012s
ramon: group.mempeak        63852KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.042s
ramon: loadavg              1.02
