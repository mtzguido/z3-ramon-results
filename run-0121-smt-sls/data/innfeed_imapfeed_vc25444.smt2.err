ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:25:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         12695 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1172
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/innfeed_imapfeed_vc25444.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1360754
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
tabu (if (= (if #2279 #2289 #681) bv[0:8]) (if (bvsle bv[0:64] v26099092) (if #2301 #2410 bv[0:8]) (extract[7:0] v21304484)) (if (and #1522 #2266) (if #1548 v30374628 bv[0:8]) (extract[7:0] v20780336)))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       2     40   117.647     10000        25          0            2      120)
(sat.ddfw       1      8   59.8802     20000        54          1            4      128)
(sat.ddfw       0      1   37.4046     31371        96          2            0      134)
ramon: end                  Mon Dec 30 12:25:39 2024
ramon: root.execname        z3
ramon: root.utime           0.300s
ramon: root.stime           0.000s
ramon: group.total          0.305s
ramon: group.utime          0.305s
ramon: group.stime          0.000s
ramon: group.mempeak        19020KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             0.384s
ramon: loadavg              0.80
