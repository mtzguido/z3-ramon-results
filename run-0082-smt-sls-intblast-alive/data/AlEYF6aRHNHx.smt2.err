ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:53:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29039 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/AlEYF6aRHNHx.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             677946
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   86.2069     10000        49          0            1        2)
(sat.ddfw       1      1   44.0573     20001        98          1            1        3)
(smt.stats    0    101   5803    346  1200/1081/114      89/9    10   20   52.05)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 1 := 1&15
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 1 := 2 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 1 := 1&15
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 1 := 2 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 1 := 1&15
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 1 := 2 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 1&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 1&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 1&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 1&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 1&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 2&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 4&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 1&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 2&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 4&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 8&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 8&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 1&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 16 := 17 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 70368744177648&15
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 1 := 70368744177663 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 70368744177648&15
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 1 := 70368744177663 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 70368744177648&15
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 1 := 70368744177663 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 1 := 70368744177648&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 2 := 70368744177648&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 4 := 70368744177648&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 15 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 14 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 4 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 16 := 61572651155457 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 1 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 0&15
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 4398046511103 := 4398046511104 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 1 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 2 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 4 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 8 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 14073748835520&15
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 14073748835531 := 14073748835532 << 4
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447376&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 1 := 18764998447376&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 4 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447376&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 13 := 18764998447376&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 14073748835520&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 4 := 14073748835520&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 4 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 8 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 16&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 1 := 16&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447376&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 2 := 18764998447376&15
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447376&15
band: (band[46] (shl[46] (bv2int %0) (mod #108 46)) (if (= #601 45) 1 (if #603 3 #730))) 2 := 18764998447376&15
(smt.stats    1    202  10611   1637  2004/1816/191     175/15    18   40   52.75)
(sat.ddfw       1      1   43.8596     40001       196          2            1        5)
(sat.ddfw       1      1   37.4532     70001       343          3            1        8)
(smt.stats    2    313  10962   1704  2098/1911/196     289/17    19   41   53.75)
ramon: poll                 wall=1.000s usage=0.783s mem=55940KiB load=0.78 rootload=0.77
(sat.ddfw       1      1   37.9867    110001       539          4            1       12)
(smt.stats    3    414  11458   1920  2479/2292/197     390/18    20   41   53.75)
(smt.stats    4    525  13662   3803  3241/2612/200     494/59    20   41   53.56)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 4120&1
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 211106232537112 := 17592186044416 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447371&1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447371&1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447371&1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447370&1
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 229871230980362 := 21990232555520 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447371&1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447370&1
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 229871230980362 := 61572651155706 << 1
(smt.stats    5    648  18037   6423  3299/3067/214     606/66    23   55   53.66)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088832&1
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 4016 := 17592186044416 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088832&1
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 4016 := 17592186044416 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088832&1
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 4016 := 17592186044416 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088832&1
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 2476 := 17592186044416 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088832&1
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 2464 := 17592186044416 << 1
(sat.ddfw       1      1   34.8911    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    749  19621   7791  3413/3103/221     711/69    24   57   53.86)
(smt.stats    7    860  22611  10419  3505/3258/222     829/80    25   59   53.86)
(smt.stats    8    982  24834  13057  3588/3348/225     950/89    26   63   53.95)
(smt.stats    9   1116  29751  18221  3619/3368/225    1085/89    27   67   54.05)
(smt.stats   10   1217  33652  22426  3644/3390/225    1201/90    27   67   54.05)
ramon: poll                 wall=2.000s usage=2.062s mem=56636KiB load=1.28 rootload=1.27
(sat.ddfw       1      1   31.2343    220001      1078          6            1       23)
(smt.stats   11   1328  39878  28391  3650/3407/226    1303/110    28   69   54.16)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  42586  30754  3681/3418/226    1454/112    28   69   54.25)
(smt.stats   13   1584  43898  33841  3705/3442/228    1613/145    29   71   54.25)
(smt.stats   14   1731  46387  39505  3719/3465/228    1766/149    30   74   54.25)
(smt.stats   15   1832  48055  43580  3738/3478/228    1869/150    30   74   54.35)
(smt.stats   16   1943  51722  50296  3802/3543/228    1993/150    30   74   54.45)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 40210710958672&3
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 321685687669328 := 20105355479334 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 40210710958672&3
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 321685687669328 := 20105355479334 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 40210710958667&3
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 40210710958668&3
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 321685687669324 := 20105355479333 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 40210710958671&3
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 40210710958670&3
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 40210710958668&3
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 321685687669324 := 20105355479333 << 2
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 10052677739660&3
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 40210710958688 := 20105355479331 << 2
(smt.stats   17   2065  54817  54950  3831/3545/230    2269/167    31   75   54.45)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 4691249611852&3
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 37529996894760 := 18764998447379 << 2
(smt.stats   18   2199  57028  60120  3866/3603/246    2435/203    33   82   54.54)
(sat.ddfw       1      1   27.3331    290001      1421          7            1       30)
(smt.stats   19   2346  60843  65646  3949/3605/246    2605/204    33   82   54.54)
(smt.stats   20   2507  63411  69601  3997/3716/246    2764/204    33   82   54.72)
(smt.stats   21   2608  65977  74176  4002/3737/246    2863/204    33   82   54.85)
(smt.stats   22   2719  67962  78302  4013/3747/246    2996/204    33   82   54.85)
ramon: poll                 wall=3.000s usage=3.313s mem=57092KiB load=1.25 rootload=1.25
(smt.stats   23   2841  70903  83888  4038/3775/248    3137/245    34   82   54.85)
(smt.stats   24   2975  75564  91563  4065/3795/251    3294/257    36   91   54.85)
(sat.ddfw       1      1    25.181    370001      1813          8            1       38)
(smt.stats   25   3122  79604  99575  4070/3801/251    3441/257    36   91   54.85)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 2 := 32838747282912&3
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 2 := 32838747282912&3
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 2 := 32838747282912&3
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 3 := 32838747282912&3
(smt.stats   26   3283  83973 108665  4090/3802/251    3958/260    36   91   55.05)
(smt.stats   27   3460  86556 117847  4126/3853/262    4163/288    38   95   55.05)
(smt.stats   28   3561  88729 124630  4151/3871/262    4299/288    38   95   55.23)
(smt.stats   29   3672  95186 134658  4160/3879/262    4408/288    38   95   55.39)
(smt.stats   30   3794 102864 147116  4160/3879/262    4531/288    38   95   55.39)
ramon: poll                 wall=4.000s usage=4.364s mem=57708KiB load=1.05 rootload=1.05
(smt.stats   31   3928 106823 172009  4165/3884/262    5050/288    38   95   55.39)
(sat.ddfw       1      1   22.3658    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 110333 184314  4185/3898/263    5243/646    39  100   55.48)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088833&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088834&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088840&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088848&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088864&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088840&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088848&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088864&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088896&63
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 1161084278931520 := 35184372088832 << 6
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088848&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088840&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088840&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088840&63
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088896&63
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 1161084278931520 := 35184372088832 << 6
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 35184372088896&63
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 1161084278931520 := 35184372088832 << 6
(smt.stats   33   4236 112522 192485  4251/3959/305    5470/661    40  108   55.58)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447492&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447556&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 18764998447556&1023
(smt.stats   34   4413 115000 201662  4407/4092/314    5822/689    41  123   55.67)
(smt.stats   35   4607 118428 209797  4603/4124/317    6673/694    41  123   55.96)
(smt.stats   36   4708 120811 220903  4637/4333/318    6985/756    42  128   55.96)
(smt.stats   37   4819 123839 244722  4657/4358/318    7252/767    43  141   56.05)
(smt.stats   38   4941 125781 255022  4665/4373/320    7439/838    44  153   56.05)
ramon: poll                 wall=5.000s usage=5.363s mem=58500KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 69)
(sat.ddfw       1      1   20.1491    560001      2745         10            1       57)
(smt.stats   39   5075 127433 265853  4698/4396/320    7533/838    44  153   56.05)
(smt.stats   40   5222 130061 298574  4712/4415/322    7743/906    45  156   56.15)
(smt.stats   41   5383 134590 341254  4721/4423/323    7992/906    45  156   56.15)
(smt.stats   42   5560 138615 375283  4722/4425/323    8297/935    46  163   56.51)
(smt.stats   43   5754 141426 414144  4737/4430/323    8509/935    46  163   56.51)
ramon: poll                 wall=6.000s usage=6.351s mem=58552KiB load=0.99 rootload=0.99
(smt.stats   44   5967 146854 466776  4753/4452/323    8723/936    46  163   56.51)
(sat.ddfw       1      1   18.2785    670001      3284         11            1       68)
(smt.stats   45   6068 148884 488443  4763/4462/323    8826/937    46  163   56.60)
(smt.stats   46   6179 151557 514931  4769/4472/323    8947/937    46  163   56.60)
(smt.stats   47   6301 154398 548548  4774/4477/324    9126/998    47  166   56.60)
(smt.stats   48   6435 156273 565996  4781/4484/325    9450/1031    48  175   56.60)
(smt.stats   49   6582 158202 585822  4789/4490/325    9825/1031    48  175   56.70)
ramon: poll                 wall=7.000s usage=7.343s mem=59508KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6743 161817 613265  4882/4501/325   10073/1037    48  175   57.09)
(sat.ddfw       1      1   16.7528    790001      3872         12            1       80)
(smt.stats   51   6920 165297 655087  5008/4709/327   10285/1096    49  179   57.09)
(smt.stats   52   7114 169386 675816  5028/4725/328   10543/1121    50  182   57.09)
(smt.stats   53   7327 173189 710234  5052/4730/329   10793/1141    51  184   57.18)
ramon: poll                 wall=8.000s usage=8.343s mem=59444KiB load=1.00 rootload=1.00
(smt.stats   54   7561 178232 758221  5061/4758/329   11343/1141    51  184   57.18)
(smt.stats   55   7662 179642 763233  5061/4758/330   11447/1178    52  190   57.18)
(smt.stats   56   7773 182450 791054  5094/4760/330   11766/1178    52  190   57.28)
(sat.ddfw       1      1    15.502    920001      4509         13            1       93)
(smt.stats   57   7895 183988 812778  5140/4795/330   11904/1179    52  190   57.47)
(smt.stats   58   8029 186123 839802  5167/4859/334   12408/1209    53  197   57.57)
(smt.stats   59   8176 187913 858997  5180/4859/334   12726/1210    53  197   57.67)
ramon: poll                 wall=9.000s usage=9.340s mem=59900KiB load=1.00 rootload=1.00
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 69195931774720&63
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 42 := 17573860850620 << 6
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 69195931774720&63
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 2 := 17573860850620 << 6
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 69195931774720&63
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 2 := 17573860850620 << 6
(smt.stats   60   8337 189726 869096  5241/4876/334   13406/1217    53  197   57.76)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 52776558133184&7
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 4486007441326016 := 70093866270719 << 3
(smt.stats   61   8514 191012 886154  5277/4956/339   13598/1280    54  198   57.76)
(smt.stats   62   8708 194358 921347  5316/5000/344   13802/1280    54  198   57.76)
(sat.ddfw       1      1   14.4285   1060001      5196         14            1      108)
(smt.stats   63   8921 198867 943773  5323/5012/344   14064/1297    55  199   57.86)
ramon: poll                 wall=10.000s usage=10.339s mem=60116KiB load=1.00 rootload=1.00
(smt.stats   64   9155 204772 999350  5324/5013/344   14770/1297    55  199   57.86)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 69195931774720&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 69195931774720&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 69195931774720&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 32838747282944&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 32838747282944&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 32838747282944&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 32838747282944&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 32838747283456&1023
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 32838747283456 := 8209686820728 << 10
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 32838747283456&1023
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 32838747283456 := 8209686820728 << 10
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 32838747282944&1023
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 0 := 32838747283456&1023
shl: (shl[64] (bv2int %0) (mod (+ #108 #350) 64)) 32838747283456 := 8209686820728 << 10
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9412 210082 1054520  5494/5016/347   15732/1309    56  236   58.53)
(smt.stats   66   9514 211390 1069995  5508/5195/373   15995/1650    57  246   58.53)
ramon: poll                 wall=11.000s usage=11.339s mem=60576KiB load=1.00 rootload=1.00
(smt.stats   67   9625 214311 1090612  5541/5226/374   16167/1650    57  246   58.63)
(smt.stats   68   9747 217411 1105696  5601/5269/374   16398/1650    57  246   58.72)
(sat.ddfw       1      1   13.5026   1210001      5931         15            1      123)
(smt.stats   69   9881 222899 1128307  5602/5277/376   16576/1731    58  253   58.72)
(smt.delete-inactive-clauses  :num-deleted-clauses 777)
(smt.stats   70  10028 226348 1145205  5611/5277/382   16014/1743    59  270   58.72)
(smt.stats   71  10189 229289 1156027  5643/5293/382   16186/1743    59  270   58.82)
(smt.stats   72  10366 231621 1210218  5676/5327/382   16428/1744    59  270   58.82)
ramon: poll                 wall=12.000s usage=12.338s mem=60928KiB load=1.00 rootload=1.00
(smt.stats   73  10560 234454 1238396  5764/5395/382   16711/1757    60  273   58.91)
(smt.stats   74  10773 240903 1285943  5818/5446/382   16983/1757    60  273   59.01)
(sat.ddfw       1      1   12.6914   1370001      6715         16            1      139)
(smt.stats   75  11007 246591 1326056  5833/5492/382   17326/1757    60  273   59.01)
ramon: poll                 wall=13.000s usage=13.338s mem=61104KiB load=1.00 rootload=1.00
(smt.stats   76  11264 252704 1362125  5899/5510/386   17650/1874    61  281   59.01)
(smt.stats   77  11546 263235 1434610  5939/5601/389   18237/1900    62  305   59.21)
(smt.stats   78  11647 266345 1446280  5965/5613/389   18430/1901    62  305   59.21)
ramon: poll                 wall=14.000s usage=14.338s mem=61436KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.9617   1540001      7549         17            1      156)
(smt.stats   79  11758 270373 1473577  6053/5634/389   18731/1909    62  305   59.31)
(smt.stats   80  11880 273371 1500348  6135/5735/389   18979/1913    62  305   59.40)
(smt.stats   81  12014 275579 1511407  6167/5801/389   19715/1914    62  305   59.50)
ramon: poll                 wall=15.000s usage=15.338s mem=61728KiB load=1.00 rootload=0.99
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 470 := 484&4398046511103
(smt.stats   82  12161 280219 1526997  6303/5828/389   20139/1920    62  305   59.59)
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 406 := 418&4398046511103
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 378 := 386&4398046511103
band: (band[46] (shl[64] (bv2int %0) (mod #351 64)) (if (= #749 63) 0 (if #751 1 #891))) 370 := 386&4398046511103
(smt.stats   83  12322 284425 1555421  6488/5981/389   20800/1920    62  305   59.69)
(sat.ddfw       1      1   11.3272   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.337s mem=62152KiB load=1.00 rootload=1.00
(smt.stats   84  12499 287725 1585436  6664/6323/393   21641/2050    63  311   59.78)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   85  12693 294510 1636051  6676/6335/393   22154/2050    63  311   59.88)
(smt.stats   86  12906 299849 1686271  6702/6339/393   22390/2109    64  318   59.97)
ramon: poll                 wall=17.000s usage=17.334s mem=62436KiB load=1.00 rootload=1.00
(smt.stats   87  13140 303806 1728076  6726/6379/393   23597/2109    64  318   60.07)
(smt.stats   88  13397 311614 1803654  6733/6392/393   24458/2109    64  318   60.82)
(sat.ddfw       1      1   10.7478   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=18.334s mem=62692KiB load=1.00 rootload=0.99
(smt.stats   89  13679 316650 1851193  6798/6429/394   24874/2265    65  320   60.82)
(smt.stats   90  13989 322214 1887838  6843/6470/394   25244/2265    65  320   60.82)
(smt.stats   91  14090 324977 1904344  6847/6506/394   25459/2265    65  320   60.92)
(smt.stats   92  14201 329072 1938514  6852/6511/394   25740/2265    65  320   60.92)
ramon: poll                 wall=19.000s usage=19.338s mem=62864KiB load=1.00 rootload=1.01
(smt.stats   93  14323 335007 1991243  6856/6515/394   26005/2265    65  320   60.92)
(smt.stats   94  14457 338324 2012704  6861/6520/394   26332/2265    65  320   60.92)
(sat.ddfw       1      1   10.2291   2110001     10343         20            1      214)
(smt.stats   95  14604 344862 2026229  6866/6521/394   26573/2265    65  320   61.02)
ramon: poll                 wall=20.000s usage=20.337s mem=63068KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:53:29 2024
ramon: root.execname        z3
ramon: root.utime           20.370s
ramon: root.stime           0.030s
ramon: group.total          20.412s
ramon: group.utime          20.376s
ramon: group.stime          0.036s
ramon: group.mempeak        63336KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.02
