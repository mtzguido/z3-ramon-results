ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:17:38 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28496 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LmXjWjrtrK9l.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             763348
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3848   3438  1321/1193/89      97/4     2   13   51.95)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 163 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 163 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 165 := 31831031671201&165
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 38 := 31831031671201&38
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 40 := 31831031671201&40
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 48 := 31831031671201&48
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 64 := 31831031671201&64
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 163 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 165 := 31831031671201&165
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1    75.188     10000        49          0            1        2)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 289 := 31831031671201&289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 289 := 288 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 163 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 165 := 31831031671201&165
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 29 := 31831031671201&192
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&192
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&256
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2849934139195392 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2849934139195392 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&562949953421312
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 562949953421313 := 524304 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670748 := 31831031671201&31831031670784
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670744 := 31831031671201&31831031670784
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670736 := 31831031671201&31831031670784
(smt.stats    1    202   7326   6402  1642/1438/126     190/15     5   22   52.56)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670736 := 31831031671201&31831031670784
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
(sat.ddfw       1      1   39.0664     20001        98          1            1        3)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671168 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671104 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671040 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670784 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031668736 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031660544 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031644160 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 65536 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131072 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 524288 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 524288 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1048576 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2097152 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671040 := 31831031671201&31831031671296
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671040 := 31831031671201&31831031671040
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 31831031671040 := 524322 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 559104 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 622592 := 31831031671201&2849934139195392
(smt.stats    2    313   8469   8775  2619/2359/200     323/56     8   41   52.98)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 357888 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 356352 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8192 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 16384 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 65536 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8192 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 16384 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131080 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131072 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 17 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 17 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 1 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 2 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 4 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671200 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671168 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 4 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671200 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671200 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671168 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 2 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 4 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 72 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 80 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 80 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 257 := 31831031671201&2849934139195392
(smt.stats    3    414   9549  11203  2772/2505/307     488/84     9   54   53.47)
(smt.stats    4    525  12053  14593  2944/2670/326     591/157    12   86   53.57)
(sat.ddfw       1      1   38.5356     40001       196          2            1        5)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 1&16504
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 1&16504
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 61 := 8252 << 1
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 1&16504
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 1&16504
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 61 := 8252 << 1
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 1&16504
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 61 := 8252 << 1
(smt.stats    5    647  16716  19560  2983/2708/339     713/169    14   88   53.77)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&528384
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&532480
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&589824
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&589824
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&532480
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&540672
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&557056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 557056 := 524326 << 42
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&532480
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&557056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 557056 := 524326 << 42
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&557056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 557056 := 524326 << 42
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&589824
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524336
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524352
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&525312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 525312 := 524326 << 42
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524352
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524352
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524352
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 64 := 7957757917800&524352
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 524352 := 524326 << 42
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  20380  24738  3108/2821/398     850/197    17  110   54.07)
(smt.stats    7    859  25055  31301  3129/2833/398    1034/197    17  110   54.17)
(sat.ddfw       1      1    34.965     70001       343          3            1        8)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831034953728
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831034953728
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831035543552
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831035543552
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831035543552
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831035543552
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831038689280
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831042818048 := 130379905725241053&31831042883584
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831042818048 := 130379905725241053&31831042883584
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831042818048 := 130379905725241053&31831042883584
ramon: poll                 wall=1.000s usage=0.824s mem=56740KiB load=0.82 rootload=0.81
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2427722747871232 := 130379905725241053&2427722747871232
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2427722747871232 := 130379905725241053&2427722747871232
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274794590208 := 130379905725241053&2533274794590208
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274798784512 := 130379905725241053&2533274798784512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2533274798784512 := 138 << 56
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274790395904 := 130379905725241053&2533274790395904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2533274790395904 := 138 << 56
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274790395904 := 130379905725241053&2533274790395904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2533274790395904 := 138 << 56
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274823950336 := 130379905725241053&2533274823950336
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2533274823950336 := 138 << 56
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 130379905723531264 := 130379905725241053&130379905723531264
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 130379905723531264 := 138 << 56
(smt.stats    8    981  29284  37491  3288/2870/398    1306/209    17  110   54.77)
(smt.stats    9   1115  38977  44884  3303/3010/457    1490/325    18  121   54.77)
(sat.ddfw       1      1   30.7929    110001       539          4            1       12)
(smt.stats   10   1216  43405  50884  3320/3028/458    1573/446    20  131   54.87)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725825024
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725825024
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725890560
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725890560
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725890560
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725759488
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725759488
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725759488
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725759488
(smt.stats   11   1327  46738  56398  3472/3176/486    1778/498    21  134   55.08)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 65536 := 8344313966415427423&130379905734148096
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2048 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32768 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 16384 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 16384 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8192 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905732050944
(sat.ddfw       1      1   27.0265    160000       784          5            1       17)
(smt.stats   12   1450  49257  64046  3622/3331/524    2011/650    23  167   55.19)
ramon: poll                 wall=2.000s usage=1.822s mem=57604KiB load=1.00 rootload=0.99
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
(smt.stats   13   1584  53597  69489  3687/3342/525    2175/661    23  167   55.33)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&54
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&32
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&20
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&20
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&20
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&20
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 57&64
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775872 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775872 := 9353751942584598558 << 5
(smt.stats   14   1731  59478  77626  3849/3541/558    2562/683    24  174   55.62)
(smt.stats   15   1832  63818  84719  3936/3603/558    2848/777    25  188   55.94)
(sat.ddfw       1      1   23.8383    220001      1078          6            1       23)
(smt.stats   16   1943  68844  92422  4045/3670/558    3016/782    25  188   55.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   17   2065  72953 103492  4090/3751/565    3208/906    26  192   56.04)
ramon: poll                 wall=3.000s usage=2.852s mem=58692KiB load=1.03 rootload=1.03
(smt.stats   18   2199  81577 121338  4116/3808/565    3327/918    27  205   56.04)
(smt.stats   19   2346  89449 129808  4121/3813/565    3509/918    27  205   56.15)
(sat.ddfw       1      1   22.3214    290001      1421          7            1       30)
(smt.stats   20   2507  94760 140955  4141/3833/569    4031/1021    29  213   56.51)
(smt.stats   21   2608 100581 155869  4145/3837/572    4308/1168    30  229   56.60)
(smt.stats   22   2719 105001 166939  4166/3858/577    4459/1194    31  252   56.80)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   23   2841 110914 181438  4345/3998/579    4773/1267    32  256   57.08)
(smt.stats   24   2975 114801 190669  4383/4036/581    5180/1268    32  256   57.18)
(sat.ddfw       1      1   21.2202    370001      1813          8            1       38)
ramon: poll                 wall=4.010s usage=4.204s mem=59700KiB load=1.34 rootload=1.34
(smt.stats   25   3122 121053 203651  4409/4059/590    5467/1349    33  271   57.37)
(smt.stats   26   3283 128736 218110  4435/4069/594    5666/1375    34  313   57.37)
(sat.ddfw       1      1   19.2596    460001      2254          9            1       47)
(smt.stats   27   3460 135699 235698  4535/4181/601    5975/1395    35  326   57.57)
ramon: poll                 wall=5.000s usage=5.191s mem=60152KiB load=1.00 rootload=1.00
(smt.stats   28   3561 137687 242258  4619/4209/623    6322/1431    36  356   57.67)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429402
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429402
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429406
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429468
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429465
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205277 := 9353751942588218928 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429465
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205277 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429465
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205277 := 9353751942588218676 << 62
(smt.stats   29   3672 140832 249522  4872/4515/639    6503/1442    36  356   58.01)
(sat.ddfw       1      1   17.5685    560001      2745         10            1       57)
(smt.stats   30   3794 145423 258358  5063/4542/639    6869/1733    37  399   58.11)
ramon: poll                 wall=6.000s usage=6.345s mem=60276KiB load=1.15 rootload=1.15
(smt.stats   31   3928 149043 270895  5178/4732/639    7316/1743    37  399   58.20)
(smt.stats   32   4075 155664 285861  5207/4851/640    7765/2090    38  402   58.30)
(sat.ddfw       1      1   16.8608    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=7.551s mem=60628KiB load=1.21 rootload=1.20
(smt.stats   33   4237 167371 311987  5282/4930/641    8104/2281    39  405   58.39)
(smt.stats   34   4414 176352 337691  5296/4944/641    8706/2281    39  405   58.39)
(smt.stats   35   4608 184193 365780  5314/4962/652    8967/2506    40  414   58.50)
(smt.stats   36   4709 188967 379885  5482/5008/652    9114/2548    41  460   58.70)
(sat.ddfw       1      1   15.3081    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=8.550s mem=61028KiB load=1.00 rootload=1.00
(smt.stats   37   4820 191557 394243  5752/5167/652    9321/2549    41  460   58.79)
(smt.stats   38   4942 193289 402798  6146/5508/652    9694/2553    41  460   58.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 330)
(smt.stats   39   5076 203509 419260  6182/5811/652    9644/2553    41  460   58.98)
(smt.stats   40   5223 218718 458993  6229/5829/652   10145/2557    41  460   59.42)
ramon: poll                 wall=9.002s usage=9.559s mem=61548KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   14.0298    920001      4509         13            1       93)
(smt.stats   41   5384 231080 483308  6301/5875/652   10982/2562    41  460   59.70)
ramon: poll                 wall=10.000s usage=10.556s mem=62084KiB load=1.00 rootload=1.00
(smt.stats   42   5561 242619 504479  6372/5995/652   11404/2562    41  460   59.70)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5755 250562 541743  6537/6024/652   11953/2570    41  460   59.89)
(sat.ddfw       1      1   12.9522   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=11.555s mem=62276KiB load=1.00 rootload=1.00
(smt.stats   44   5968 260907 584886  6777/6261/652   12463/2572    41  460   59.99)
(smt.stats   45   6069 267329 618104  6794/6428/656   13183/3417    42  463   59.99)
(smt.stats   46   6180 273277 642388  6829/6461/657   13578/3482    43  473   60.11)
ramon: poll                 wall=12.000s usage=12.555s mem=62476KiB load=1.00 rootload=1.00
(smt.stats   47   6302 276478 649285  7010/6468/657   13946/3485    43  473   60.21)
(sat.ddfw       1      1   12.0822   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=13.549s mem=62844KiB load=0.99 rootload=0.99
(smt.stats   48   6436 280219 658572  7262/6732/657   14546/3575    44  490   60.31)
(smt.stats   49   6583 287144 676581  7378/6949/658   15119/3578    44  490   60.50)
ramon: poll                 wall=14.000s usage=14.437s mem=62888KiB load=0.89 rootload=0.88
(sat.ddfw       1      1   11.1568   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=15.352s mem=63320KiB load=0.91 rootload=0.92
(smt.stats   50   6744 296864 704095  7626/7025/658   15866/3810    45  494   60.59)
(smt.stats   51   6921 307178 739590  7672/7306/658   16274/3810    45  494   60.69)
(smt.stats   52   7115 316277 765123  7692/7325/658   16823/3810    45  494   61.41)
ramon: poll                 wall=16.000s usage=16.244s mem=63568KiB load=0.89 rootload=0.89
(sat.ddfw       1      1   10.3861   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=17.183s mem=64052KiB load=0.94 rootload=0.94
(smt.stats   53   7328 329103 817905  7804/7329/659   17561/4246    46  496   61.86)
ramon: poll                 wall=18.000s usage=18.178s mem=64288KiB load=0.99 rootload=0.99
(smt.stats   54   7562 336986 855487  8037/7491/659   18495/4256    46  496   62.14)
(sat.ddfw       1      1   9.81568   1720001      8431         18            1      174)
(smt.stats   55   7663 342778 886995  8121/7693/659   18803/4258    46  496   62.14)
ramon: poll                 wall=19.000s usage=19.162s mem=64188KiB load=0.98 rootload=0.98
(smt.stats   56   7774 347271 899882  8330/7761/659   19381/4260    46  496   62.26)
ramon: poll                 wall=20.000s usage=20.234s mem=64472KiB load=1.07 rootload=1.08
ramon: end                  Fri Nov  1 22:17:59 2024
ramon: root.execname        z3
ramon: root.utime           20.270s
ramon: root.stime           0.030s
ramon: group.total          20.308s
ramon: group.utime          20.276s
ramon: group.stime          0.032s
ramon: group.mempeak        64728KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.076s
ramon: loadavg              1.01
