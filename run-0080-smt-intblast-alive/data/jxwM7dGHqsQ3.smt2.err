ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:53:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24983 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/jxwM7dGHqsQ3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             132238
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3881   1201  1217/1097/97      97/8     3   14   19.09)
(smt.stats    1    202   4961   1678  1689/1425/97     200/24     3   14   19.38)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 1 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 1 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 1 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 1 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
(smt.stats    2    313   6763   3842  2007/1640/100     322/64     5   19   19.48)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8587837444 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&1073741824
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 8589934592 := 8589934592 << 31
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&2147483648
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934597 << 32
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&2147483648
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 0 := 8589934597 << 32
(smt.stats    3    414   7604   4857  2290/2077/119     436/78     7   25   19.57)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 4294967298&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 4503599627370495&2048
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 13510798882111487 := 4294967297 << 12
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 4294967296&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2047 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2046 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2044 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 8 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 16 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 32 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 128 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1024 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 2097154&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 4194306&2048
(smt.stats    4    525   8948   6951  2554/2317/178     530/99    10   53   20.06)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 4194432&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 4194306&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 512 := 6291968&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 315 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 314 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 6291584&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 6291712&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 6287360&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2048 := 6289408&2048
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 9007199261030400 := 6289407 << 12
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1024 := 17592186048512&2048
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1024 := 17592186048512&2048
(smt.stats    5    647  10963   9271  2614/2359/205     679/125    11   63   20.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  12625  12098  2703/2440/210     786/128    11   63   20.06)
(smt.stats    7    859  15124  15397  2746/2482/212     908/145    12   65   20.25)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&2048
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 0 << 12
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&2048
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 0 << 12
(smt.stats    8    981  17757  19755  2901/2557/221    1036/159    14   76   20.35)
(smt.stats    9   1115  21408  23671  2968/2707/229    1139/185    16  102   20.44)
(smt.stats   10   1216  24414  26798  2979/2711/229    1240/197    17  102   20.44)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 4194305&1024
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 4194305 := 4194305 << 11
(smt.stats   11   1327  26243  29679  3055/2755/241    1346/205    18  111   20.54)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  27814  31786  3296/2874/241    1495/212    18  111   20.63)
(smt.stats   13   1583  31705  37738  3350/3087/241    1615/230    19  114   20.63)
(smt.stats   14   1730  38044  47792  3369/3090/241    1782/231    19  114   20.74)
ramon: poll                 wall=1.003s usage=1.002s mem=21916KiB load=1.00 rootload=0.98
(smt.stats   15   1831  41426  53811  3384/3121/241    1907/231    19  114   20.85)
(smt.stats   16   1942  44808  59940  3393/3130/243    2046/268    20  121   20.85)
(smt.stats   17   2064  46138  61886  3399/3136/243    2165/268    20  121   20.85)
(smt.stats   18   2198  49715  68436  3454/3183/244    2307/299    21  122   20.85)
(smt.stats   19   2345  55056  77794  3524/3209/244    2464/300    21  122   20.94)
(smt.stats   20   2506  57975  85503  3571/3301/246    2642/313    22  124   20.94)
(smt.stats   21   2607  59118  88315  3608/3313/247    2758/314    22  124   21.16)
(smt.stats   22   2718  60662  95537  3670/3381/247    2894/348    23  125   21.16)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 25 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 24 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 16 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 9 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 8 := 27&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 32 := 32&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 32 := 32&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 6291519&64
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 6291520&64
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6291520 := 0 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 4294967488&64
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 4294967488 := 0 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 64 := 4294967488&64
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 4294967488 := 0 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&64
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 0 << 7
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&64
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 1 := 0 << 7
(smt.stats   23   2840  63735 104320  3745/3416/260    3034/370    24  132   21.27)
(smt.stats   24   2974  65549 109971  3770/3492/287    3178/380    25  143   21.54)
(smt.stats   25   3121  72202 125433  3803/3512/291    3338/380    25  143   21.54)
ramon: poll                 wall=2.000s usage=1.999s mem=22908KiB load=1.00 rootload=0.99
(smt.stats   26   3282  76330 136894  3877/3527/291    3500/402    26  153   21.64)
ramon: poll                 wall=3.003s usage=3.001s mem=23264KiB load=1.00 rootload=1.01
(smt.stats   27   3459  77537 139474  4219/3638/291    3709/406    26  153   21.83)
(smt.stats   28   3560  79112 146111  4242/3952/291    3843/406    26  153   21.83)
(smt.stats   29   3671  81795 152381  4322/3963/293    3984/457    27  157   21.92)
(smt.stats   30   3793  83208 157099  4433/4044/293    4125/458    27  157   21.92)
ramon: poll                 wall=4.000s usage=3.998s mem=23288KiB load=1.00 rootload=0.99
(smt.stats   31   3927  85618 165919  4523/4190/293    4292/459    27  157   21.92)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  86987 170087  4556/4252/293    4460/460    27  157   21.92)
(smt.stats   33   4235  93083 180494  4578/4280/293    4658/461    27  157   22.02)
(smt.stats   34   4412  95112 189181  4651/4368/300    4897/622    28  169   22.02)
(smt.stats   35   4606 100644 202924  4658/4375/301    5110/622    28  169   22.02)
(smt.stats   36   4707 104822 213426  4664/4377/301    5218/636    29  171   22.02)
(smt.stats   37   4818 107077 223919  4675/4385/301    5347/636    29  171   22.02)
(smt.stats   38   4940 109838 234059  4684/4401/302    5519/665    30  173   22.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 142)
(smt.stats   39   5074 112229 241689  4697/4402/302    5526/666    30  173   22.12)
(smt.stats   40   5221 114673 254824  4715/4421/302    5676/666    30  173   22.12)
(smt.stats   41   5382 118088 269752  4724/4436/302    5842/666    30  173   22.12)
(smt.stats   42   5559 122123 286927  4738/4452/302    6028/666    30  173   22.12)
(smt.stats   43   5753 125472 302939  4745/4462/302    6230/666    30  173   22.21)
ramon: poll                 wall=5.000s usage=4.998s mem=23444KiB load=1.00 rootload=1.00
(smt.stats   44   5966 128682 316245  4754/4471/302    6505/666    30  173   22.21)
(smt.stats   45   6067 131895 324264  4755/4472/302    6610/666    30  173   22.21)
(smt.stats   46   6178 133796 334366  4760/4475/303    6736/719    31  182   22.21)
(smt.stats   47   6300 135510 346793  4762/4479/303    6858/719    31  182   22.21)
(smt.stats   48   6434 137436 360327  4765/4481/306    6990/731    32  188   22.21)
(smt.stats   49   6581 139516 373126  4785/4499/308    7126/733    33  205   22.44)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1 := 6&65536
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 6&65536
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6 := 0 << 17
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 6&65536
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6 := 0 << 17
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 6&65536
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6 := 0 << 17
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 6&65536
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 6 := 0 << 17
(smt.stats   50   6742 143258 392789  4815/4506/308    7297/734    33  205   22.54)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1 := 316659650790847&256
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 316659650790847&256
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 316659650790847&256
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 20615843034496&256
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 20615843049860&256
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 20615843049860 := 157286400 << 9
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 256 := 20615843022081&256
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 20615843022081 := 157286400 << 9
(smt.stats   51   6919 145118 399122  5074/4558/313    7631/747    34  206   22.64)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 149593 411819  5124/4826/323    8000/747    34  206   22.73)
(smt.stats   53   7326 155778 446948  5126/4834/323    8239/853    35  208   22.73)
(smt.stats   54   7560 157998 467096  5155/4857/324    8523/919    36  215   22.83)
(smt.stats   55   7661 158790 480419  5165/4866/324    8622/920    36  215   22.93)
(smt.stats   56   7772 159408 489719  5195/4892/324    8776/920    36  215   22.93)
(smt.stats   57   7894 160585 508178  5195/4892/324    8899/920    36  215   22.93)
(smt.stats   58   8028 161410 515529  5241/4927/331    9060/968    37  226   23.02)
(smt.stats   59   8175 164897 528615  5247/4931/331    9218/968    37  226   23.12)
ramon: poll                 wall=6.000s usage=5.998s mem=24428KiB load=1.00 rootload=1.00
(smt.stats   60   8336 171955 564972  5254/4940/332    9419/993    38  228   23.12)
(smt.stats   61   8513 176997 586469  5312/4947/332    9633/994    38  228   23.31)
(smt.stats   62   8707 186672 616632  5314/5000/332    9856/994    38  228   23.31)
(smt.stats   63   8920 191788 646251  5355/5029/332   10052/995    38  228   23.40)
(smt.stats   64   9154 196211 664020  5396/5060/332   10316/997    38  228   23.40)
ramon: poll                 wall=7.000s usage=6.997s mem=24852KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=24912KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=24912KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.997s mem=24940KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.997s mem=24952KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.003s usage=11.998s mem=24952KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9411 201297 687088  5677/5087/332   10613/1001    38  228   23.50)
(smt.stats   66   9512 202819 693444  5729/5415/332   10745/1001    38  228   23.50)
(smt.stats   67   9623 206571 711366  5731/5417/333   10931/1084    39  230   23.50)
(smt.stats   68   9745 212191 729807  5735/5417/334   11087/1111    40  233   23.50)
(smt.stats   69   9879 217354 752197  5736/5422/334   11251/1111    40  233   23.60)
(smt.delete-inactive-clauses  :num-deleted-clauses 106)
(smt.stats   70  10026 218414 762180  5745/5427/338   11289/1135    41  247   23.60)
(smt.stats   71  10187 220839 791637  5761/5433/338   11460/1135    41  247   23.60)
(smt.stats   72  10364 224781 823020  5765/5447/338   11641/1135    41  247   24.05)
(smt.stats   73  10558 226744 850258  5773/5452/338   11845/1135    41  247   24.05)
(smt.stats   74  10771 229053 878215  5781/5467/338   12093/1135    41  247   24.15)
ramon: poll                 wall=13.000s usage=12.995s mem=25596KiB load=1.00 rootload=1.00
(smt.stats   75  11005 233889 898770  5800/5486/338   12342/1135    41  247   24.24)
(smt.stats   76  11262 240909 922909  5802/5488/338   12604/1135    41  247   24.24)
(smt.stats   77  11544 249640 963523  5807/5490/338   12921/1135    41  247   24.34)
(smt.stats   78  11645 252542 981328  5809/5495/338   13026/1135    41  247   24.34)
(smt.stats   79  11756 255515 998782  5809/5495/338   13143/1135    41  247   24.34)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   80  11878 258764 1016267  5812/5498/338   13267/1135    41  247   24.43)
(smt.stats   81  12012 261444 1026610  5813/5499/338   13427/1135    41  247   24.43)
(smt.stats   82  12159 266643 1052490  5813/5499/338   13576/1135    41  247   24.43)
(smt.stats   83  12320 268807 1072063  5813/5499/338   13739/1135    41  247   24.43)
(smt.stats   84  12497 272621 1093428  5814/5500/338   13923/1135    41  247   24.53)
(smt.stats   85  12691 276641 1125138  5830/5512/338   14131/1135    41  247   24.53)
ramon: poll                 wall=14.000s usage=13.994s mem=25936KiB load=1.00 rootload=1.00
(smt.stats   86  12904 280963 1156425  5840/5522/338   14361/1138    41  247   24.53)
(smt.stats   87  13139 282664 1171454  5845/5531/339   14593/1251    42  248   24.53)
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 2&16
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 9007199254740994 := 115966214144 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 2&16
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 18014398509481986 := 115968311296 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 2&16
shl: (shl[64] (bv2int %1) (mod (+ #104 #374) 64)) 18014398509481986 := 115968311296 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&16
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 7 := 0 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 0&16
shl: (shl[52] (bv2int %1) (mod (bv2int %0) 52)) 7 := 0 << 5
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 1 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 8 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 16 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 4 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 2 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 32&16
band: (band[52] (shl[52] (bv2int %1) (mod #104 52)) (if (= #612 51) 1 (if #614 2 #714))) 1 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 32&16
band: (band[52] (shl[52] (bv2int %1) (mod #104 52)) (if (= #612 51) 1 (if #614 2 #714))) 2 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 32&16
band: (band[52] (shl[52] (bv2int %1) (mod #104 52)) (if (= #612 51) 1 (if #614 2 #714))) 4 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 32&16
band: (band[52] (shl[52] (bv2int %1) (mod #104 52)) (if (= #612 51) 1 (if #614 2 #714))) 16 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 32&16
band: (band[52] (shl[52] (bv2int %1) (mod #104 52)) (if (= #612 51) 1 (if #614 2 #714))) 8 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 32&16
band: (band[52] (shl[52] (bv2int %1) (mod #104 52)) (if (= #612 51) 1 (if #614 2 #714))) 16 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 32&16
band: (band[52] (shl[52] (bv2int %1) (mod #104 52)) (if (= #612 51) 1 (if #614 2 #714))) 2 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 32&16
band: (band[52] (shl[52] (bv2int %1) (mod #104 52)) (if (= #612 51) 1 (if #614 2 #714))) 4 := 32&16
band: (band[52] (shl[64] (bv2int %1) (mod #375 64)) (if (= #733 63) 0 (if #735 1 #859))) 0 := 32&16
band: (band[52] (shl[52] (bv2int %1) (mod #104 52)) (if (= #612 51) 1 (if #614 2 #714))) 1 := 32&16
(smt.stats   88  13396 285282 1183396  6063/5629/425   14895/1260    42  248   25.15)
ramon: poll                 wall=15.000s usage=14.994s mem=26688KiB load=1.00 rootload=0.99
(smt.stats   89  13678 290468 1215500  6254/5835/425   15280/1261    42  248   25.24)
ramon: poll                 wall=16.000s usage=15.994s mem=26764KiB load=1.00 rootload=1.00
(smt.stats   90  13988 299179 1258046  6363/6034/427   15704/1341    44  268   25.34)
(smt.stats   91  14089 303129 1272848  6380/6049/428   15815/1341    44  268   25.34)
(smt.stats   92  14200 307620 1283610  6383/6052/428   15994/1341    44  268   25.43)
(smt.stats   93  14322 315442 1314912  6395/6054/428   16266/1368    45  274   25.43)
(smt.stats   94  14456 318401 1332262  6399/6068/428   16402/1368    45  274   25.43)
(smt.stats   95  14603 323039 1351378  6442/6074/428   16601/1370    45  274   25.43)
(smt.stats   96  14764 329299 1382545  6446/6115/428   16801/1370    45  274   25.53)
(smt.stats   97  14941 334375 1407347  6456/6125/428   17009/1370    45  274   25.62)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
(smt.stats   98  15135 339442 1415335  6497/6156/428   17217/1370    45  274   26.43)
ramon: poll                 wall=17.000s usage=16.994s mem=28028KiB load=1.00 rootload=0.99
(smt.stats   99  15348 348967 1446953  6533/6164/430   17500/1472    46  276   26.63)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  100  15582 354930 1470369  6564/6211/430   17772/1472    46  276   26.63)
(smt.stats  101  15839 363351 1508204  6580/6239/430   18071/1472    46  276   26.63)
(smt.stats  102  16121 377400 1560395  6600/6255/430   18366/1473    46  276   26.82)
ramon: poll                 wall=18.000s usage=17.992s mem=28416KiB load=1.00 rootload=1.00
(smt.stats  103  16431 388287 1607754  6611/6270/433   18751/1553    47  279   26.82)
(smt.stats  104  16771 404337 1665551  6646/6295/433   19108/1574    48  292   26.91)
(smt.stats  105  16872 410592 1687234  6647/6300/434   19215/1578    49  295   26.91)
(smt.stats  106  16983 414487 1701483  6685/6302/434   19344/1579    49  295   26.91)
(smt.stats  107  17105 421389 1731236  6689/6342/434   19476/1579    49  295   26.91)
ramon: poll                 wall=19.000s usage=18.975s mem=28608KiB load=0.98 rootload=0.98
(smt.stats  108  17239 424577 1742569  6782/6342/434   19642/1589    49  295   27.10)
ramon: poll                 wall=20.000s usage=19.974s mem=29060KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:53:37 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.030s
ramon: group.total          19.983s
ramon: group.utime          19.943s
ramon: group.stime          0.040s
ramon: group.mempeak        29316KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
