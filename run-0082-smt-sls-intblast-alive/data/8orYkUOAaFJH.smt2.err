ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:48:11 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29204 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/8orYkUOAaFJH.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             660422
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 1 := 2 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1 := 2&53
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&4503599627370481
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 4503599627370481 := 4503599627370482 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&4503599627370481
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 4503599627370481 := 4503599627370482 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&4503599627370481
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 4503599627370481 := 4503599627370482 << 2
(smt.stats    0    101   3918   2122  1201/1081/92      96/3     5   13   51.97)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 1 := 2 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 1 := 54 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&53
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 53 := 54 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&3
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 4503599627370496 := 1125899906842674 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&200
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 4503599627370495 := 1125899906842674 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&200
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 4503599627370495 := 1125899906842674 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&200
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 4503599627370495 := 1125899906842674 << 2
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   88.4956     10000        49          0            1        2)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 2 := 2&8
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1 := 2&8
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&8
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7 := 2 << 2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1 := 2&8
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 2 := 2&8
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&8
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 1 := 8&2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&8
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 2 := 8&2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&8
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 2 := 8&2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 2&8
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 1 := 8&2
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1 := 2&8
(smt.stats    1    202   5194   5313  1739/1561/130     164/17     8   22   52.36)
(smt.stats    2    313   6595   7308  2260/2031/148     250/20    11   33   52.46)
(sat.ddfw       1      1   48.0817     20001        98          1            1        3)
(smt.stats    3    417   9874  10120  2302/2066/149     358/23    13   34   52.55)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4 := 4&6
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 9007199254740998 := 3377699720527967 << 3
(smt.stats    4    528  11833  12509  2340/2097/160     415/29    17   83   52.65)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4 := 4&379
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4 := 4&379
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4 := 4&372
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 9007199254741364 := 3377699720527967 << 3
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4 := 4&379
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4 := 4&375
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 9007199254741367 := 3377699720527967 << 3
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4 := 4&760
(smt.stats    5    650  16806  17201  2376/2133/176     542/35    18   87   52.74)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 2 := 4&760
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 4&760
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 0 := 3377699720527967 << 3
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 4&760
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 1 := 3377699720527967 << 3
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 4&760
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 4 := 760&4
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 4&760
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 4 := 760&4
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 4&760
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 4 := 760&4
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 4&760
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 2 := 760&4
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 4&760
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 1 := 760&4
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 4&760
band: (band[52] (shl[52] (bv2int %0) (mod #110 52)) (if (= #616 51) 1 (if #618 2 #718))) 1 := 760&4
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1 := 4&760
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1 := 4&760
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 1&375
(sat.ddfw       1      1   51.2821     40001       196          2            1        5)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 1&377
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 1&384
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 27021597764223360 := 3377699720527965 << 1
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 1&1567
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 1&1573
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 1&1572
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 27021597764224548 := 3377699720528069 << 1
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 1&2251799813685434
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 742 := 3377699720527965 << 1
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 1&2251799813685434
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 373 := 3377699720527965 << 1
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 1&2251799813685434
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 743 := 3377699720527965 << 1
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1 := 1&2251799813685434
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    751  18287  19729  2437/2163/199     633/42    19   95   52.93)
(smt.stats    7    862  22998  23184  2478/2226/217     745/45    21  108   53.13)
(smt.stats    8    984  24898  26736  2511/2255/229     804/57    23  180   53.13)
(smt.stats    9   1119  27536  30381  2535/2278/236     900/78    25  218   53.22)
(sat.ddfw       1      1   45.2489     70001       343          3            1        8)
(smt.stats   10   1220  31385  32329  2541/2284/237     996/78    25  218   53.32)
(smt.stats   11   1331  35505  36601  2545/2286/237    1108/79    26  226   53.32)
ramon: poll                 wall=1.000s usage=0.894s mem=55724KiB load=0.89 rootload=0.89
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   12   1453  37617  40854  2557/2294/237    1241/79    26  226   53.51)
(smt.stats   13   1587  41040  44789  2560/2299/237    1379/80    26  226   53.51)
(sat.ddfw       1      1   38.9105    110001       539          4            1       12)
(smt.stats   14   1734  46053  51658  2607/2322/242    1542/95    27  226   53.61)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 9 := 262144&24
(sat.ddfw       1      1   33.3327    160000       784          5            1       17)
(smt.stats   15   1835  50183  56136  2635/2355/243    1662/106    28  228   53.72)
(smt.stats   16   1946  52709  59755  2716/2454/252    1783/119    29  235   53.80)
ramon: poll                 wall=2.000s usage=1.833s mem=56024KiB load=0.94 rootload=0.93
(smt.stats   17   2068  55534  64082  2728/2460/252    1911/119    29  235   53.80)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 562949953421312&3940649673949015
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 21955048183430999 := 2111062325329878 << 50
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 562949953421312&1501199875790217
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 19515598385272201 := 1501199875790210 << 50
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 562949953421312&1501199875790217
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 19515598385272201 := 1501199875790210 << 50
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 562949953421312&1501199875790343
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 19515598385272327 := 1501199875790314 << 50
(sat.ddfw       1      1   28.5311    220001      1078          6            1       23)
(sat.ddfw       1      1   24.5442    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.750s mem=56352KiB load=0.92 rootload=0.92
(smt.stats   18   2202  56849  67138  2998/2479/252    2088/117    30  254   54.09)
(sat.ddfw       1      1   22.8964    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.830s mem=56368KiB load=1.08 rootload=1.08
(sat.ddfw       1      1   20.9302    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.826s mem=56368KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.2567    560001      2745         10            1       57)
(smt.stats   19   2349  57892  70096  3206/2748/257    2255/117    30  254   54.19)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4 := 1125899906842624&3940649673949197
(smt.stats   20   2510  60490  76994  3287/3009/260    2452/153    32  260   54.19)
ramon: poll                 wall=6.000s usage=5.827s mem=56384KiB load=1.00 rootload=1.00
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842616 := 1125899906842624&3940649673949203
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842616 := 1125899906842624&3940649673949203
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842608 := 1125899906842624&3940649673949199
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842608 := 1125899906842624&3940649673949199
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842608 := 1125899906842624&3940649673949199
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842608 := 1125899906842624&3940649673949199
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842608 := 1125899906842624&3940649673949199
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842624 := 1125899906842624&3940649673949197
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 17451448556060685 := 3940649673949195 << 51
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842624 := 1125899906842624&3940649673949215
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 17451448556060703 := 3940649673949195 << 51
(smt.stats   21   2611  62250  80781  3400/3030/265    2612/159    32  260   54.51)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842624 := 1125899906842624&3940649673949197
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 17451448556060685 := 3940649673949195 << 51
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1125899906842624 := 1125899906842624&3940649673949199
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 17451448556060687 := 3940649673949195 << 51
(sat.ddfw       1      1   17.8398    670001      3284         11            1       68)
(smt.stats   22   2722  64232  84409  3505/3165/290    2768/184    33  266   54.70)
ramon: poll                 wall=7.000s usage=6.898s mem=56956KiB load=1.07 rootload=1.07
(smt.stats   23   2844  66080  86887  3694/3320/291    2939/189    33  266   54.80)
(sat.ddfw       1      1   16.4858    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.987s mem=57252KiB load=1.09 rootload=1.08
(smt.stats   24   2978  67781  90993  3831/3556/295    3136/202    34  268   54.79)
(smt.stats   25   3125  70922  98339  3876/3566/295    3394/205    34  268   54.89)
(sat.ddfw       1      1   15.4047    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.972s mem=57440KiB load=0.98 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   26   3286  73822 103662  4063/3604/295    3636/242    35  280   55.08)
(sat.ddfw       1      1   14.4077   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=9.952s mem=57256KiB load=0.98 rootload=0.98
ramon: poll                 wall=11.000s usage=10.902s mem=57256KiB load=0.95 rootload=0.95
(sat.ddfw       1      1   13.4795   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=11.902s mem=57256KiB load=1.00 rootload=1.00
(smt.stats   27   3463  76666 112466  4112/3819/295    3969/242    35  280   55.08)
(smt.stats   28   3564  79003 117910  4140/3863/299    4120/268    36  284   55.08)
(smt.stats   29   3675  82031 126054  4164/3889/299    4364/268    36  284   55.08)
(sat.ddfw       1      1   12.7297   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=12.861s mem=57692KiB load=0.96 rootload=0.96
(smt.stats   30   3797  85425 133091  4240/3903/299    4528/301    37  299   55.18)
(smt.stats   31   3931  88210 142288  4245/3970/299    4705/301    37  299   55.18)
(smt.stats   32   4078  89650 146183  4282/4007/300    5072/358    38  299   55.27)
ramon: poll                 wall=14.000s usage=13.807s mem=57820KiB load=0.95 rootload=0.94
(sat.ddfw       1      1   11.9634   1540001      7549         17            1      156)
(smt.stats   33   4239  92826 154523  4399/4021/301    5357/360    38  299   55.53)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 34359738368 := 34359738368&1688849860411527
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 34359738368 := 34359738368&1688849860411527
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 34359738368 := 34359738368&1688849860411527
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 34359738368 := 34359738368&1688849860411527
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 34359738368 := 34359738368&1688849860411527
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 34359738368 := 34359738368&1688884220149887
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 1688884220149887 := 562949953421320 << 36
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 34359738368 := 34359738368&1688884220149887
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 1688884220149887 := 562949953421320 << 36
(smt.stats   34   4416  99149 167150  4444/4133/302    5636/376    39  305   55.77)
(smt.stats   35   4610 103725 177890  4470/4182/318    5926/441    40  309   55.77)
(smt.stats   36   4711 107687 185925  4478/4199/318    6101/442    40  309   55.77)
ramon: poll                 wall=15.000s usage=14.781s mem=58348KiB load=0.97 rootload=0.98
(smt.stats   37   4822 111242 195638  4482/4206/318    6248/442    40  309   55.77)
(smt.stats   38   4944 115070 204899  4488/4212/318    6552/442    40  309   55.87)
(smt.delete-inactive-clauses  :num-deleted-clauses 34)
(smt.stats   39   5078 119612 215154  4519/4236/318    6795/442    40  309   55.96)
(smt.stats   40   5225 124441 228630  4530/4243/318    6953/443    40  309   56.06)
(sat.ddfw       1      1   11.3766   1720001      8431         18            1      174)
ramon: poll                 wall=16.002s usage=15.700s mem=58548KiB load=0.92 rootload=0.92
(smt.stats   41   5386 128286 236514  4575/4252/318    7236/443    40  309   56.06)
(smt.stats   42   5563 132196 248449  4634/4310/318    7495/446    40  309   56.06)
(smt.stats   43   5757 139210 271795  4644/4357/319    7713/587    41  311   56.35)
(smt.stats   44   5970 143753 283715  4653/4366/319    8013/588    41  311   56.35)
(smt.stats   45   6071 146749 293880  4687/4404/319    8130/588    41  311   56.35)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   46   6182 148929 305166  4690/4407/319    8279/588    41  311   56.45)
ramon: poll                 wall=17.000s usage=16.692s mem=58548KiB load=0.99 rootload=0.99
(smt.stats   47   6304 151457 313694  4695/4412/319    8463/588    41  311   56.45)
(smt.stats   48   6438 154679 328718  4699/4416/320    8631/621    42  314   56.68)
(smt.stats   49   6585 159058 340246  4713/4430/322    8789/621    42  314   56.77)
(smt.stats   50   6746 163493 357507  4714/4431/322    8960/620    43  324   56.77)
(sat.ddfw       1      1   10.8318   1910001      9362         19            1      193)
(smt.stats   51   6923 169103 372614  4727/4444/322    9150/620    43  324   56.77)
(smt.stats   52   7117 172483 383230  4735/4447/322    9420/621    43  324   56.77)
ramon: poll                 wall=18.000s usage=17.666s mem=59164KiB load=0.97 rootload=0.97
(smt.stats   53   7330 177584 395472  4736/4453/322    9652/621    43  324   56.77)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 281474976710656&3
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 31525197391593475 := 2251799813685289 << 49
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 281474976710656&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 31525197391593474 := 2251799813685289 << 49
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 0 := 281474976710656&2
shl: (shl[64] (bv2int %0) (mod (+ #110 #895) 64)) 31525197391593474 := 2251799813685289 << 49
(smt.stats   54   7564 182419 414256  4811/4459/322   10037/628    43  324   56.87)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 8 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 8 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 8 := 281474976710656&562949953421312
(smt.stats   55   7665 184221 420467  4897/4572/328   10203/682    44  325   56.97)
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 160 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 192 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 256 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 512 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1024 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 2048 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4096 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 8192 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 16384 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 32768 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 65536 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 131072 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 262144 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 524288 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1048576 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 2097152 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4194304 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 8388608 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 16777216 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 33554432 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 67108864 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 134217728 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 268435456 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 536870912 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 536870912 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1073741824 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 2147483648 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4294967296 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1073741824 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 2147483648 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 2147483648 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 4294967296 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 8589934592 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 17179869184 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1082130432 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1082130432 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1107296256 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1090519040 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1140850688 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1140850688 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1140850688 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1140850688 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 1073741824 := 281474976710656&562949953421312
band: (band[52] (if (or #734 #735 #736 #737 #738 #739 #740 #741 #742 #743 #744 #745 #746) 0 (if #747 1 #847)) (shl[64] (bv2int %0) (mod #896 64))) 134217728 := 281474976710656&562949953421312
(smt.stats   56   7776 186091 427733  5101/4777/456   10471/686    44  325   57.67)
ramon: poll                 wall=19.000s usage=18.652s mem=60332KiB load=0.99 rootload=0.98
(smt.stats   57   7898 187845 433373  5333/4796/456   10703/688    44  325   57.77)
(smt.stats   58   8032 192404 443343  5449/5139/457   11107/689    44  325   57.86)
(sat.ddfw       1      1   10.3119   2110001     10343         20            1      214)
(smt.stats   59   8179 201320 461575  5471/5140/457   11347/899    45  356   57.86)
ramon: poll                 wall=20.000s usage=19.651s mem=60572KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:48:31 2024
ramon: root.execname        z3
ramon: root.utime           19.720s
ramon: root.stime           0.010s
ramon: group.total          19.739s
ramon: group.utime          19.723s
ramon: group.stime          0.016s
ramon: group.mempeak        61084KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.088s
ramon: loadavg              0.98
