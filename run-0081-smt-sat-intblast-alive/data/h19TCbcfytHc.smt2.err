ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:58:28 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28740 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/h19TCbcfytHc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             502665
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   139/137     0/0  58       0    18.45   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 131 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 137 :time 0.00)
(sat.stats    165   1262    0   152/150   163/157  67       0    18.75   0.02)
(sat.stats    165   1262    0   155/153   163/157  67       0    18.75   0.02)
(sat.stats    165   1262    0   155/153   163/157  67       0    18.75   0.02)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 336418.75 :time 0.00)
(sat.stats    165   1262    0   146/144   168/162  67       0    18.75   0.02)
(sat.stats    168   1388    1   146/144   171/162  67       0    18.75   0.02)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    171   1623    2   146/144   174/163  67       0    18.75   0.02)
(sat.stats    174   1637    3   146/144   177/165  67       0    18.75   0.02)
(sat.stats    178   1644    4   146/144   181/168  67       0    18.75   0.02)
(sat.stats    181   1650    5   146/144   184/171  67       0    18.75   0.02)
(sat.stats    184   1681    6   146/144   187/174  67       0    18.75   0.02)
(sat.stats    187   1716    7   146/144   190/177  67       0    18.75   0.02)
(sat.stats    190   1733    8   146/144   193/180  67       0    18.75   0.02)
(sat.stats    193   1745    9   146/144   196/183  67       0    18.75   0.02)
(sat.stats    197   1750   10   146/144   200/186  67       0    18.75   0.02)
(sat.stats    200   1767   11   146/144   203/189  67       0    18.75   0.02)
(sat.stats    203   1787   12   146/144   206/192  67       0    18.75   0.02)
(sat.stats    209   1812   14   146/144   212/198  67       0    18.85   0.02)
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 9123 := 111 << 48
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&31243722414882816
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 111 := 111 << 48
(sat.stats    400   5332   31   176/173   403/366  67       0    18.85   0.03)
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 89 << 26
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&5972688896
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 89 := 89 << 26
(sat.stats    499   7769   32   208/203   502/404  67       0    19.04   0.04)
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 5905580032 := 88 << 25
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&2952790016
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 88 := 88 << 25
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 3019898880 := 90 << 27
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&12079595520
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 90 := 90 << 27
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 3154116608 := 94 << 31
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&201863462912
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 94 := 94 << 31
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 1020 :time 0.00)
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 1193 :time 0.00)
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 9223372036854773769 := 6 << 6
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&384
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 12884901888 := 6 << 6
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 1369 :time 0.00)
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 10818 := 36 << 36
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&2473901162496
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 2304 := 36 << 36
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 6308211479 := 47 << 47
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&6614661952700416
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 6308233216 := 47 << 47
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 45 << 45
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&1583296743997440
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 6333186975989760 := 45 << 45
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 26792 := 10 << 10
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&10240
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 351843720888320 := 10 << 10
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 71093 := 52 << 52
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&234187180623265792
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 53248 := 52 << 52
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 35 << 35
(sat.stats    715  15742   62   309/302   712/408 110       0    19.72   0.10)
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&1202590842880
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 157625986957967360 := 35 << 35
 (sat-cleaner :elim-literals 109 :elim-clauses 5 :cost 2373 :time 0.00)
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 824633720832 := 24 << 24
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1099511627776 := 32 << 32
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 171798691840 := 5 << 5
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 549755813888 := 16 << 16
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 103079215104 := 3 << 3
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 755914244096 := 22 << 22
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1374389534720 := 40 << 40
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 446676598784 := 13 << 13
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 687194767360 := 20 << 20
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1889785610240 := 55 << 55
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1752346656768 := 51 << 51
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 481036337152 := 14 << 14
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 2130303778816 := 62 << 62
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 17451448556060672 := 62 << 62
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 50 << 50
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats   1201  37741   78  1837/1770  1230/561 150       0    20.90   0.23)
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 46 << 46
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 54 << 54
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 0 := 59 << 59
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&6341068275337658368
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 15564440312192434177 := 59 << 59
(sat.stats   1598  47957  205  1890/1823  1627/568 150       0    21.22   0.32)
 (sat-cleaner :elim-literals 790 :elim-clauses 15 :cost 6468 :time 0.00)
 (sat-cleaner :elim-literals 9 :elim-clauses 10 :cost 6171 :time 0.00)
 (sat-cleaner :elim-literals 6 :elim-clauses 6 :cost 6933 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 6 :cost 7456 :time 0.00)
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1152921504606846976 := 34 << 34
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 3458764513820540928 := 38 << 38
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 4035225266123964416 := 39 << 39
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 2882303761517117440 := 37 << 37
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 576460752303423488 := 33 << 33
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 5188146770730811392 := 41 << 41
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 6917529027641081856 := 44 << 44
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 6341068275337658368 := 43 << 43
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 5764607523034234880 := 42 << 42
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 2305843009213693952 := 4 << 4
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 576460752303423488 := 1 << 1
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1152921504606846976 := 2 << 2
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 8646911284551352320 := 15 << 15
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 6917529027641081856 := 12 << 12
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 4611686018427387904 := 8 << 8
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 6341068275337658368 := 11 << 11
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 5188146770730811392 := 9 << 9
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 4035225266123964416 := 7 << 7
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1152921504606846976 := 18 << 18
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 8645 :time 0.00)
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 576460752303423488 := 17 << 17
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 4035225266123964416 := 23 << 23
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 1729382256910270464 := 19 << 19
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 2882303761517117440 := 21 << 21
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 8070450532247928832 := 30 << 30
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 6917529027641081856 := 28 << 28
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 7493989779944505344 := 29 << 29
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 4611686018427387904 := 56 << 56
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 5764607523034234880 := 58 << 58
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 5188146770730811392 := 57 << 57
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 576460752303423488 := 49 << 49
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 2882303761517117440 := 53 << 53
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 6917529027641081856 := 60 << 60
shl: (shl[63] (bv2int %0) (mod (bv2int %0) 63)) 7493989779944505344 := 61 << 61
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&2305843009213693952
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 12492 := 61 << 61
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 9686 :time 0.00)
(sat.stats   2865 124999  224  2581/2514  2848/709 315       0    23.05   0.87)
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 11004 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 11526 :time 0.00)
ramon: poll                 wall=1.000s usage=0.998s mem=24528KiB load=1.00 rootload=0.99
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&774056185954304
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 9223372036854775808 := 44 << 44
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 12369 :time 0.00)
(sat.stats   3876 177949  310  2676/2607  3859/891 320       0    23.63   1.39)
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&4611686018427387904
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 18446744073709539996 := 60 << 60
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&402653184
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 402664401 := 24 << 24
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&32212254720
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 503316480 := 30 << 30
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&137438953472
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 34359738368 := 32 << 32
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&584115552256
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 146028888064 := 34 << 34
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&283467841536
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 141733920768 := 33 << 33
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&49152
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 206158430208 := 12 << 12
ramon: poll                 wall=2.000s usage=1.998s mem=25556KiB load=1.00 rootload=1.00
(sat.stats   5529 246402  322  2919/2850  4874/1008 320       0    24.17   2.01)
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&10445360463872
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 652835028992 := 38 << 38
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 19697 :time 0.00)
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&378231999954944
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 11819749998592 := 43 << 43
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&184717953466368
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 11544872091648 := 42 << 42
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&90159953477632
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 11269994184704 := 41 << 41
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&43980465111040
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 10995116277760 := 40 << 40
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&3236962232172544
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 12644383719424 := 46 << 46
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&21440476741632
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 10720238370816 := 39 << 39
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&7493989779944505344
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 15942918602752 := 58 << 58
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&8214565720323784704
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 15668040695808 := 57 << 57
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&4035225266123964416
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 15393162788864 := 56 << 56
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&114841790497947648
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 14018773254144 := 51 << 51
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&56294995342131200
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 13743895347200 := 50 << 50
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&27584547717644288
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 13469017440256 := 49 << 49
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&972777519512027136
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 14843406974976 := 54 << 54
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&477381560501272576
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 14568529068032 := 53 << 53
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&1981583836043018240
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 15118284881920 := 55 << 55
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 21449 :time 0.00)
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&2
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 36028797018963968 := 1 << 1
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&8
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 72057594037927936 := 2 << 2
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&24
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 108086391056891904 := 3 << 3
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&64
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 144115188075855872 := 4 << 4
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&160
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 180143985094819840 := 5 << 5
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&5085241278464
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 1333065489701666816 := 37 << 37
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&192937984
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 828662331436171264 := 23 << 23
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&92274688
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 792633534417207296 := 22 << 22
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&4718592
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 648518346341351424 := 18 << 18
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&9961472
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 684547143360315392 := 19 << 19
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&20971520
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 720575940379279360 := 20 << 20
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&44040192
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 756604737398243328 := 21 << 21
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&7516192768
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 1008806316530991104 := 28 << 28
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&15569256448
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 1044835113549955072 := 29 << 29
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&1048576
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 576460752303423488 := 16 << 16
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&2228224
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 612489549322387456 := 17 << 17
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&491520
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 540431955284459520 := 15 << 15
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&896
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 252201579132747776 := 7 << 7
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&2048
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 288230376151711744 := 8 << 8
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&22528
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 396316767208603648 := 11 << 11
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&4608
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 324259173170675712 := 9 << 9
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&229376
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 504403158265495552 := 14 << 14
band: (band[63] (if (or #608 #609 #610 #611 #612 #613 #614 #615 #616 #617 #618 #619 #620 #621 #622 #623 ...) 0 (if #669 1 #671)) (shl[63] (bv2int %0) (mod #63 63))) 0 := 0&106496
shl: (shl[64] (bv2int %0) (mod (+ #63 #389) 64)) 468374361246531584 := 13 << 13
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 24951 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 26470 :time 0.00)
ramon: poll                 wall=3.000s usage=2.998s mem=27312KiB load=1.00 rootload=0.99
(sat.stats   8090 399287  564  3493/3424  6344/1048 459       0    25.57   3.01)
 (sat-cleaner :elim-literals 96 :elim-clauses 5378 :cost 35513 :time 0.00)
ramon: poll                 wall=4.000s usage=3.997s mem=28556KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.997s mem=29192KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.997s mem=29916KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.997s mem=30476KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=31568KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=32232KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.996s mem=32740KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.996s mem=33520KiB load=1.00 rootload=1.00
(sat.stats :conflicts :restarts         :learned/bin          :gc         :time )
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats  12776 527778 1100 23441/23372  3430/1237 464       0    31.93  11.83)
ramon: poll                 wall=12.000s usage=11.996s mem=34208KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.995s mem=34208KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.995s mem=34208KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.995s mem=34408KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.994s mem=34796KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.994s mem=35644KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.003s usage=17.997s mem=36008KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.994s mem=36188KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.994s mem=36508KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:58:48 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.999s
ramon: group.utime          19.987s
ramon: group.stime          0.012s
ramon: group.mempeak        36764KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
