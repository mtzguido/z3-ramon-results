ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:17:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28549 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LZ59iXTV3XSV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             761543
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   114.943     10000        49          0            1        2)
(smt.stats    0    101   2038    379   582/520/101      93/28     8   16   51.47)
(sat.ddfw       1      1   66.6733     20001        98          1            1        3)
(sat.ddfw       1      1   67.5676     40001       196          2            1        5)
(smt.stats    1    202   3420    892  1102/910/101     224/40     9   17   51.76)
(sat.ddfw       1      1   63.9659     70001       343          3            1        8)
(smt.stats    2    313   4472   2184  1229/1128/103     372/59    11   20   51.76)
(smt.stats    3    414   5462   4220  1267/1164/116     505/70    13   30   51.86)
(smt.stats    4    525   6737   6605  1325/1216/122     656/109    14   43   51.86)
(sat.ddfw       1      1   58.5652    110001       539          4            1       12)
(smt.stats    5    647   8245   9799  1351/1238/127     873/114    15   46   51.96)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748   9249  12586  1382/1265/127    1043/144    16   66   52.05)
(smt.stats    7    859  10220  16144  1390/1276/128    1201/158    17   67   52.19)
(smt.stats    8    981  11245  19244  1407/1292/129     930/162    18  493   52.19)
(smt.stats    9   1115  13317  23455  1416/1302/131    1148/170    19  501   52.19)
(sat.ddfw       1      1    52.355    160000       784          5            1       17)
ramon: poll                 wall=1.000s usage=0.915s mem=54216KiB load=0.92 rootload=0.90
(smt.stats   10   1216  13973  24964  1469/1302/131    1263/172    19  501   52.19)
(smt.stats   11   1327  14481  27140  1568/1390/131    1402/172    19  501   52.19)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  15333  30537  1600/1488/137    1566/210    20  515   52.30)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&7
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262144 := 262120 << 4
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&7
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262144 := 262120 << 4
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&7
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262144 := 262120 << 4
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261925&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261925&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261925&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261924&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261924&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261923&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261922&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261920&15
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 524064 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261925&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261924&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 2&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&15
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262144 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 0&15
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 0 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 15 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 14 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 262143 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 262122 := 262121 << 5
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 13 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 12 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 14 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 4 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 261408&15
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1 := 261408&15
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1 := 261408&15
(smt.stats   13   1583  16406  33423  1708/1594/250    1794/229    21  541   52.59)
(sat.ddfw       1      1   46.5846    220001      1078          6            1       23)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1 := 52&31
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1 := 52&31
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1 := 68&31
(smt.stats   14   1730  17678  35550  1904/1747/251    2195/257    22  544   52.79)
(smt.stats   15   1831  19575  46417  2107/1830/251    2453/267    22  544   52.99)
(smt.stats   16   1942  20626  50433  2248/2123/257    2790/338    23  559   53.08)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 240 := 240&65535
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262384 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 240 := 240&65535
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 536871152 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65504 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65520 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65504 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65488 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 65488 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 512 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2048 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8192 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 8192 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 32768 := 131072&65535
(smt.stats   17   2066  22786  58325  2342/2209/320    3351/423    24  571   53.38)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 960 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 512 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2048 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 16 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 80 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 1297 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 1265 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
shl: (shl[18] (bv2int %0) (mod (bv2int %0) 18)) 1265 := 262133 << 17
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 512 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2048 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8192 := 131072&65535
(sat.ddfw       1      1   42.0673    290001      1421          7            1       30)
(smt.stats   18   2200  24613  64833  2519/2307/382    3619/542    25  587   53.76)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 1024 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8192 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16384 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 8192 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 2048 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 992 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 512 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 256 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 64 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 128 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 4096 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32768 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 32 := 131072&65535
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 0 := 131072&65535
band: (band[18] (shl[18] (bv2int %0) (mod #101 18)) (if (= #348 17) 0 (if #350 1 #393))) 16 := 131072&65535
(smt.stats   19   2347  27644  77819  2588/2433/507    4312/572    26  618   54.54)
ramon: poll                 wall=2.000s usage=1.915s mem=56848KiB load=1.00 rootload=0.99
(sat.ddfw       1      1    38.059    370001      1813          8            1       38)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
(smt.stats   20   2508  31657  92039  2654/2507/513    4923/821    28  643   54.84)
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 2 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 16 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 18 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 18 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 50 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 50 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 114 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 114 := 242&32767
band: (band[18] (shl[32] (bv2int %0) (mod #204 32)) (if (or #413 #414) 0 (if #415 1 #485))) 242 := 242&32767
shl: (shl[32] (bv2int %0) (mod (+ #101 #203) 32)) 262386 := 262132 << 16
(smt.stats   21   2609  34052  99983  2731/2568/536    5177/861    29  658   54.94)
(sat.ddfw       1      1   34.8028    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   22   2720  36441 108109  2878/2747/548    5565/1063    30  662   54.94)
ramon: poll                 wall=3.000s usage=2.914s mem=57336KiB load=1.00 rootload=1.00
(smt.stats   23   2842  40745 124533  2908/2756/548    6129/1064    30  662   55.13)
(sat.ddfw       1      1   31.9693    560001      2745         10            1       57)
(smt.stats   24   2976  43723 135551  2951/2823/555    6654/1349    32  679   55.32)
(sat.ddfw       1      1   29.5223    670001      3284         11            1       68)
(smt.stats   25   3123  46727 152229  3084/2856/555    6926/1354    32  679   55.48)
ramon: poll                 wall=4.000s usage=3.914s mem=57708KiB load=1.00 rootload=1.00
(smt.stats   26   3284  49563 163676  3324/3187/556    7544/1456    33  688   55.58)
(sat.ddfw       1      1   27.4348    790001      3872         12            1       80)
(smt.stats   27   3461  54153 184573  3390/3228/557    8402/1458    33  688   55.77)
(smt.stats   28   3562  55660 190234  3478/3271/557    8772/1707    34  701   55.77)
ramon: poll                 wall=5.000s usage=4.913s mem=58020KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   25.6006    920001      4509         13            1       93)
(smt.stats   29   3673  58109 197014  3658/3439/557    9184/1711    34  701   55.86)
(sat.ddfw       1      1   23.9973   1060001      5196         14            1      108)
(smt.stats   30   3795  60366 203383  3775/3561/557    9528/1712    34  701   55.96)
ramon: poll                 wall=6.000s usage=5.913s mem=58248KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   22.5496   1210001      5931         15            1      123)
(smt.stats   31   3929  64202 208322  3853/3657/557   10033/1716    34  701   56.28)
ramon: poll                 wall=7.000s usage=6.912s mem=58556KiB load=1.00 rootload=0.99
(smt.stats   32   4076  67117 225525  4046/3825/557   10866/1723    34  701   56.38)
(sat.ddfw       1      1   21.2851   1370001      6715         16            1      139)
ramon: poll                 wall=8.000s usage=7.912s mem=58740KiB load=1.00 rootload=1.00
(smt.stats   33   4237  70364 247454  4193/4057/558   11437/2463    35  704   56.47)
(sat.ddfw       1      1   20.1493   1540001      7549         17            1      156)
(smt.stats   34   4414  75341 270521  4304/4062/558   12321/2476    35  704   56.67)
ramon: poll                 wall=9.003s usage=8.914s mem=58948KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   19.1367   1720001      8431         18            1      174)
(smt.stats   35   4608  79980 292661  4551/4191/559   13212/2484    35  704   56.85)
(smt.stats   36   4709  82568 305928  4687/4432/559   13609/2834    36  707   56.85)
ramon: poll                 wall=10.000s usage=9.910s mem=59336KiB load=1.00 rootload=0.99
(smt.stats   37   4820  85904 328760  4725/4587/563   14080/2941    37  718   56.95)
(sat.ddfw       1      1    18.208   1910001      9362         19            1      193)
(smt.stats   38   4942  88270 340542  4793/4596/564   14721/2947    37  718   57.04)
(smt.delete-inactive-clauses  :num-deleted-clauses 80)
ramon: poll                 wall=11.000s usage=10.907s mem=59524KiB load=1.00 rootload=1.00
(smt.stats   39   5076  91774 362953  4935/4798/566   15586/3283    38  724   57.14)
(smt.stats   40   5223  95265 380244  5042/4820/566   15960/3288    38  724   57.41)
(sat.ddfw       1      1   17.3928   2110001     10343         20            1      214)
(smt.stats   41   5384  98882 402446  5250/4922/566   16729/3296    38  724   57.60)
ramon: poll                 wall=12.000s usage=11.907s mem=59684KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5561 101874 417709  5359/5140/567   17306/3584    39  735   57.69)
(sat.ddfw       1      1   16.6759   2320001     11372         21            1      235)
ramon: poll                 wall=13.000s usage=12.906s mem=59888KiB load=1.00 rootload=1.00
(smt.stats   43   5755 105020 433860  5679/5423/569   17953/3589    39  735   57.79)
(sat.ddfw       1      1   16.0151   2540001     12451         22            1      257)
ramon: poll                 wall=14.003s usage=13.910s mem=60060KiB load=1.00 rootload=1.01
(smt.stats   44   5968 108767 460791  5895/5756/571   19316/3897    40  743   57.98)
(smt.stats   45   6069 110799 476134  5902/5766/571   19634/3897    40  743   57.98)
(smt.stats   46   6180 114417 507868  5906/5768/571   20387/3898    40  743   58.17)
(smt.stats   47   6302 118097 538395  5922/5779/576   21150/4501    41  762   58.27)
(sat.ddfw       1      1   15.3661   2770001     13578         23            1      280)
ramon: poll                 wall=15.000s usage=14.906s mem=60472KiB load=1.00 rootload=0.99
(smt.stats   48   6436 122657 566099  5942/5792/582   21796/4668    42  861   58.36)
ramon: poll                 wall=16.000s usage=15.905s mem=60704KiB load=1.00 rootload=1.00
(smt.stats   49   6583 126870 587574  6051/5815/582   23170/4670    42  861   58.46)
(sat.ddfw       1      1   14.7975   3010001     14754         24            1      305)
(smt.stats   50   6744 131103 615583  6149/5933/582   24093/4675    42  861   58.77)
ramon: poll                 wall=17.000s usage=16.904s mem=61108KiB load=1.00 rootload=1.00
(smt.stats   51   6921 134520 641110  6321/6043/582   24737/4861    43  874   58.86)
(sat.ddfw       1      1   14.2369   3260001     15980         25            1      330)
ramon: poll                 wall=18.000s usage=17.904s mem=61352KiB load=1.00 rootload=1.00
(smt.stats   52   7115 140747 684409  6370/6229/583   25435/4863    43  874   59.28)
(smt.stats   53   7328 145865 732736  6440/6244/583   27080/4932    44  880   59.47)
(sat.ddfw       1      1   13.7145   3520001     17254         26            1      356)
ramon: poll                 wall=19.000s usage=18.904s mem=61824KiB load=1.00 rootload=1.00
(smt.stats   54   7562 151290 780864  6675/6415/583   28438/4933    44  880   59.86)
ramon: poll                 wall=20.000s usage=19.904s mem=62096KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:17:27 2024
ramon: root.execname        z3
ramon: root.utime           19.870s
ramon: root.stime           0.030s
ramon: group.total          19.913s
ramon: group.utime          19.877s
ramon: group.stime          0.036s
ramon: group.mempeak        62352KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
