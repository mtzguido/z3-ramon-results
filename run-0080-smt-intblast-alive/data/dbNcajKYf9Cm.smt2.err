ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:43:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25250 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/dbNcajKYf9Cm.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             101334
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 1&18014398509481471
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 1&18014398509481471
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 1 := 55 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 1 := 55 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 1 := 57 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 56&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 56 := 57 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 1 := 56 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 52 := 52&52
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 52 := 56 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 52 := 52&52
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 52 := 56 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 1 := 1&51
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 1 := 55 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 1 := 51&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 51 := 55 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 18014398509481984 := 9223372036854775296 >>l 62
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 18014398509481984 := 9223372036854775296 >>l 62
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 18014398509481984 := 9223372036854775296 >>l 62
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 18014398509481984 := 9223372036854775296 >>l 62
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&0
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 18014398509481984 := 9223372036854775296 >>l 62
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&1
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&1
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 1 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&1
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 1 << 1
(smt.stats    0    104    564    536   173/157/146      87/21    11   34   18.58)
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&1
lshr: (lshr[54] (bv2int %1) (+ 54 (* 18014398509481983 #106))) 18014398509481982 := 18014398509481983 >>l 53
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&1
lshr: (lshr[54] (bv2int %1) (+ 54 (* 18014398509481983 #106))) 18014398509481982 := 18014398509481983 >>l 53
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&1
lshr: (lshr[54] (bv2int %1) (+ 54 (* 18014398509481983 #106))) 18014398509481982 := 18014398509481983 >>l 53
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&1
band: (band[54] (shl[54] (bv2int %0) (mod #104 54)) (lshr[54] (bv2int %1) (+ 54 #146))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&1
lshr: (lshr[54] (bv2int %1) (+ 54 (* 18014398509481983 #106))) 4 := 18014398509481983 >>l 53
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 2&1
band: (band[54] (shl[54] (bv2int %0) (mod #104 54)) (lshr[54] (bv2int %1) (+ 54 #146))) 1 := 2&1
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 0&2
lshr: (lshr[64] (* 512 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 2 := 4611686018427387904 >>l 63
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 4 := 2 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 4&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 4 := 2 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 6&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 6 := 3 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 6&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 6 := 3 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 6&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 6 := 3 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 10&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 10 := 5 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 12&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 12 := 6 << 6
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 10&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 10 := 5 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 10&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 10 := 5 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 12&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 12 := 6 << 6
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 106&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 106 := 53 << 53
(smt.stats    1    205   1447   1577   311/284/194     184/30    15   46   18.86)
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 14&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 14 := 7 << 7
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 106&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 106 := 53 << 53
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 104&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 104 := 52 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 102&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 102 := 51 << 51
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 16&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 16 := 8 << 8
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 100&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 100 := 50 << 50
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 98&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 98 := 49 << 49
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 18&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 18 := 9 << 9
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 96&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 96 := 48 << 48
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 94&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 94 := 47 << 47
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 92&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 92 := 46 << 46
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 90&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 90 := 45 << 45
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 88&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 88 := 44 << 44
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 106&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 106 := 53 << 53
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 104&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 104 := 52 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 106&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 106 := 53 << 53
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 104&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 104 := 52 << 52
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 20&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 20 := 10 << 10
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 22&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 22 := 11 << 11
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 96&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 96 := 48 << 48
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 24&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 24 := 12 << 12
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 26&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 26 := 13 << 13
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 96&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 96 := 48 << 48
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 96&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 96 := 48 << 48
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 20&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 20 := 10 << 10
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 18&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 18 := 9 << 9
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 28&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 28 := 14 << 14
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 30&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 30 := 15 << 15
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 32&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 16 << 16
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 34&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 34 := 17 << 17
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 36&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 36 := 18 << 18
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 38&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 38 := 19 << 19
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 40&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 40 := 20 << 20
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 42&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 42 := 21 << 21
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 40&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 40 := 20 << 20
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 94&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 94 := 47 << 47
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 92&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 92 := 46 << 46
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 42&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 42 := 21 << 21
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 44&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 44 := 22 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 46&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 23 << 23
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 48&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 24 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 50&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 50 := 25 << 25
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 52&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 52 := 26 << 26
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 94&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 94 := 47 << 47
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 90&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 90 := 45 << 45
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 42&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 42 := 21 << 21
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 44&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 44 := 22 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 46&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 23 << 23
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 48&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 24 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 46&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 23 << 23
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 88&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 88 := 44 << 44
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 86&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 86 := 43 << 43
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 88&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 88 := 44 << 44
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 48&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 24 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 50&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 50 := 25 << 25
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 52&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 52 := 26 << 26
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 54&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 54 := 27 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 88&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 88 := 44 << 44
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 88&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 88 := 44 << 44
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 88&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 88 := 44 << 44
(smt.stats    2    316   3658   5030   591/528/313     295/43    19   71   19.73)
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 28&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 28 := 14 << 14
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 30&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 30 := 15 << 15
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 32&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 16 << 16
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 34&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 34 := 17 << 17
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 32&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 16 << 16
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 30&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 30 := 15 << 15
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 28&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 28 := 14 << 14
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 30&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 30 := 15 << 15
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 32&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 16 << 16
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 30&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 30 := 15 << 15
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 30&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 30 := 15 << 15
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 36&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 36 := 18 << 18
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 36&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 36 := 18 << 18
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 48&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 24 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 48&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 24 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 48&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 24 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 50&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 50 := 25 << 25
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 86&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 86 := 43 << 43
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 52&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 52 := 26 << 26
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 54&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 54 := 27 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 56&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 56 := 28 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 86&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 86 := 43 << 43
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 84&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 84 := 42 << 42
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 52&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 52 := 26 << 26
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 54&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 54 := 27 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 56&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 56 := 28 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 56&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 56 := 28 << 28
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 54&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 54 := 27 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 52&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 52 := 26 << 26
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 54&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 54 := 27 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 50&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 50 := 25 << 25
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 50&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 50 := 25 << 25
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 48&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 48 := 24 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 46&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 23 << 23
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 44&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 44 := 22 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 42&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 42 := 21 << 21
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 44&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 44 := 22 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 46&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 46 := 23 << 23
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 44&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 44 := 22 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 44&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 44 := 22 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 40&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 40 := 20 << 20
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 40&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 40 := 20 << 20
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 58&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 58 := 29 << 29
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 60&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 60 := 30 << 30
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 62&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 62 := 31 << 31
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 64 := 32 << 32
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 58&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 58 := 29 << 29
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 60&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 60 := 30 << 30
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 60&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 60 := 30 << 30
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 58&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 58 := 29 << 29
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 62&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 62 := 31 << 31
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 82&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 82 := 41 << 41
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 80&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 80 := 40 << 40
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 64 := 32 << 32
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 78&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 78 := 39 << 39
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 76&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 76 := 38 << 38
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 66&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 66 := 33 << 33
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 74&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 74 := 37 << 37
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 68&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 68 := 34 << 34
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 70&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 70 := 35 << 35
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 72&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72 := 36 << 36
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 70&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 70 := 35 << 35
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 68&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 68 := 34 << 34
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 74&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 74 := 37 << 37
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 74&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 74 := 37 << 37
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 70&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 70 := 35 << 35
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 66&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 66 := 33 << 33
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 76&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 76 := 38 << 38
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 76&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 76 := 38 << 38
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 64 := 32 << 32
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 64&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 64 := 32 << 32
band: (band[54] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 512 #110) (mod #165 64))) 0 := 80&0
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 80 := 40 << 40
(smt.stats    3    417   5270   7732   855/617/345     391/52    21   79   20.31)
ramon: poll                 wall=1.000s usage=0.996s mem=22944KiB load=1.00 rootload=0.97
ramon: poll                 wall=2.000s usage=1.995s mem=23348KiB load=1.00 rootload=1.00
(smt.stats    4    528   7686   9102  1042/859/445     466/91    24  130   21.56)
ramon: poll                 wall=3.000s usage=2.995s mem=23408KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.995s mem=23520KiB load=1.00 rootload=1.00
(smt.stats    5    650  10685  10832  1232/1155/452     595/124    26  133   21.85)
ramon: poll                 wall=5.000s usage=4.995s mem=23684KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    751  13693  12674  1460/1221/453     690/142    27  140   22.03)
ramon: poll                 wall=6.000s usage=5.994s mem=23688KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.994s mem=23688KiB load=1.00 rootload=1.00
(smt.stats    7    862  15986  15260  1693/1405/453     805/157    28  140   22.13)
ramon: poll                 wall=8.000s usage=7.994s mem=23688KiB load=1.00 rootload=1.00
(smt.stats    8    984  18401  17360  1995/1934/454     922/168    29  140   22.22)
(smt.stats    9   1118  22144  21115  2127/2022/460    1036/177    30  144   22.42)
ramon: poll                 wall=9.000s usage=8.994s mem=24032KiB load=1.00 rootload=1.00
(smt.stats   10   1219  25216  24888  2276/2172/461    1120/191    31  150   22.42)
(smt.stats   11   1330  28008  29723  2358/2272/462    1207/201    32  151   22.42)
ramon: poll                 wall=10.000s usage=9.994s mem=23864KiB load=1.00 rootload=1.00
(smt.stats   12   1452  29729  34058  2488/2403/464    1311/211    33  156   22.42)
(smt.stats   13   1586  33593  39486  2592/2506/466    1425/219    35  160   22.51)
ramon: poll                 wall=11.000s usage=10.994s mem=24188KiB load=1.00 rootload=1.00
(smt.stats   14   1733  36609  42897  2920/2544/466    1591/238    35  160   22.70)
ramon: poll                 wall=12.000s usage=11.993s mem=24448KiB load=1.00 rootload=1.00
(smt.stats   15   1834  39433  46267  3085/2938/466    1693/240    35  160   22.79)
(smt.stats   16   1945  42483  51472  3258/3067/466    1813/252    35  160   22.89)
ramon: poll                 wall=13.000s usage=12.993s mem=24552KiB load=1.00 rootload=1.00
(smt.stats   17   2067  47202  55586  3368/3258/467    1937/285    36  161   22.98)
ramon: poll                 wall=14.000s usage=13.993s mem=24724KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.993s mem=24768KiB load=1.00 rootload=1.00
(smt.stats   18   2201  52514  60555  3557/3333/467    2080/301    36  161   23.13)
ramon: poll                 wall=16.000s usage=15.993s mem=25028KiB load=1.00 rootload=1.00
(smt.stats   19   2348  56004  63802  3730/3592/467    2226/310    36  161   23.37)
ramon: poll                 wall=17.000s usage=16.992s mem=24976KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.992s mem=25280KiB load=1.00 rootload=1.00
(smt.stats   20   2509  58561  67267  4124/3831/467    2384/321    36  161   23.57)
ramon: poll                 wall=19.000s usage=18.992s mem=25332KiB load=1.00 rootload=1.00
(smt.stats   21   2610  61783  71700  4350/4149/467    2506/331    36  161   23.66)
ramon: poll                 wall=20.000s usage=19.992s mem=25376KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:43:59 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.001s
ramon: group.utime          19.981s
ramon: group.stime          0.020s
ramon: group.mempeak        25632KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
