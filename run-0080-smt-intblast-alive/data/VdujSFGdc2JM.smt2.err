ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:30:40 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25461 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/VdujSFGdc2JM.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             58333
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2532    337  1331/1118/99     115/12     4   17   19.07)
(smt.stats    1    202   6719   1520  1487/1346/101     238/34     5   20   19.17)
(smt.stats    2    313   9577   2597  2041/1833/101     369/35     5   20   19.26)
(smt.stats    3    414  12744   5481  2434/2218/106     468/50     7   22   19.46)
(smt.stats    4    525  13952   6583  2633/2304/109     570/86     8   25   19.57)
(smt.stats    5    647  15372   7918  2726/2467/109     688/96     9   27   19.66)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  17819   9347  2737/2500/109     790/97     9   27   19.66)
(smt.stats    7    859  19664  11571  2785/2529/109     892/97     9   27   19.76)
(smt.stats    8    981  21303  13692  2817/2577/115    1004/109    11   35   19.76)
(smt.stats    9   1115  22436  15776  2852/2581/116    1138/116    11   35   19.85)
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 1 := 46386065332247&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 1 := 0 << 49
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 1 := 46386065332247&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 1 := 0 << 49
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 1 := 46386065332247&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 1 := 0 << 49
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 46386065332247&3
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 46386065332247&3
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332246 := 46386065332247&92772130664492
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 46386065332247&46386065332244
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 46386065332247&46386065332244
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 46386065332247&46386065332240
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332245 := 46386065332247&92772130664491
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332245 := 46386065332247&92772130664491
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332245 := 46386065332247&92772130664489
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332244 := 46386065332247&92772130664488
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332245 := 46386065332247&92772130664491
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332245 := 46386065332247&92772130664491
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332245 := 46386065332247&92772130664489
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332244 := 46386065332247&92772130664485
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 46386065332244 := 46386065332247&46386065332244
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 46386065332244 := 32770 << 49
(smt.stats   10   1216  23142  17597  2970/2698/141    1234/130    13   43   19.95)
(smt.stats   11   1327  23838  18802  3019/2730/166    1354/135    13   43   20.04)
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 46386065332247&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 46386065332247 := 46386065424384 << 50
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  25033  23911  3055/2786/167    1482/144    14   52   20.04)
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 46386065332247&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 46386065407999 := 46386065408000 << 50
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 46386065332247&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 46386065407999 := 46386065408000 << 50
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772130816001
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772130816008
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772130816008
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772130816016
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772130881536
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772130881536
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772132454400
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772130881536
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772132454400
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772130881536
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772132454400
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92772367335424
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&96757023244288
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&96757023244288
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&96757023244288
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&105553116266496
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&105553116266496
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&140737488355328
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 140737488355328 := 92772130816000 << 50
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&105553116266496
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&105553116266496
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&105553116266496
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&105553116266496
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 65528 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 65520 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 48378511622144 := 92772130664495&92908732547072
(smt.stats   13   1583  26780  27896  3192/2931/264    1633/180    16   73   20.44)
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 57174604644352 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 74766790688768 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 92358976733184 := 92772130664495&92908732547072
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 92908732547072 := 92772130816000 << 50
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 74766790688768 := 92772130664495&92908732547072
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 92358976733184 := 92772130664495&92908732547072
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 92908732547072 := 92772130816000 << 50
(smt.stats   14   1730  30140  32595  3308/2953/279    1795/189    16   73   20.53)
(smt.stats   15   1831  32795  37536  3334/3082/294    1895/202    18   92   20.53)
(smt.stats   16   1942  34356  41366  3363/3118/296    2021/214    19   94   20.63)
(smt.stats   17   2064  36831  44127  3411/3131/298    2158/214    19   94   20.72)
ramon: poll                 wall=1.000s usage=0.994s mem=21912KiB load=0.99 rootload=0.98
(smt.stats   18   2198  38313  47802  3735/3260/300    2293/243    20  102   21.11)
(smt.stats   19   2345  39135  51164  4161/3643/300    2438/251    21  104   21.20)
(smt.stats   20   2506  42395  60356  4321/4067/302    2598/257    22  105   21.20)
(smt.stats   21   2607  43897  64334  4341/4093/303    2711/263    23  106   21.20)
(smt.stats   22   2718  47795  69276  4438/4102/303    2838/275    24  107   21.30)
(smt.stats   23   2840  50098  74086  4530/4226/303    2962/276    24  107   21.29)
(smt.stats   24   2974  55107  82414  4546/4295/303    3096/276    24  107   21.29)
(smt.stats   25   3121  60728  90881  4559/4310/304    3436/287    25  113   21.43)
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2392537302040576
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2392537302040576
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2392537302040576
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2392537302040576
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2392537302040576
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2392537302040576
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2533274790395904
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 20547673299877888 := 92772130783232 << 53
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2533274790395904
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 20547673299877888 := 92772130783232 << 53
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2392537302040576
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2533274790395904
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 20547673299877888 := 92772130783232 << 53
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2251799813685248
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 18430981475013754880 := 92772130783232 << 53
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 742177045315961&2251799813685248
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 20266198323167232 := 92772130783232 << 53
(smt.stats   26   3282  66211 100408  4648/4352/307    3618/486    26  119   21.52)
(smt.stats   27   3459  70618 107835  4720/4462/319    3811/503    27  125   21.62)
ramon: poll                 wall=2.000s usage=1.994s mem=22864KiB load=1.00 rootload=1.00
(smt.stats   28   3560  74903 111646  4723/4465/320    3920/503    27  125   21.62)
(smt.stats   29   3671  80396 118497  4727/4469/320    4049/506    28  128   21.84)
(smt.stats   30   3793  87303 128478  4737/4469/320    4178/506    28  128   21.84)
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 1 := 1&17908845393215488
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 1&17908845393215488
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 35923243902697472 := 35923243902730240 << 4
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 1&17908845393215488
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 35923243902697472 := 35958428274786304 << 4
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 1&17908845393215488
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 35923243902697472 := 35958428274786304 << 4
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 1&17908845393215488
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 35923243902697472 := 35958428274786304 << 4
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 1&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 0 := 92772130930688 << 4
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 1&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 1 := 0 << 5
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 1&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 1 := 0 << 5
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 1&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 1 := 0 << 5
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 1&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 1 := 0 << 5
(smt.stats   31   3927  89721 135530  4848/4585/342    4332/530    29  130   21.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  92911 140482  4862/4598/342    4454/527    30  178   21.94)
(smt.stats   33   4235  98383 150219  4920/4601/343    4641/528    30  178   21.94)
(smt.stats   34   4412 105917 160735  4969/4705/343    4831/561    31  179   22.04)
(smt.stats   35   4606 113347 171586  4978/4714/344    5063/577    32  180   22.13)
(smt.stats   36   4707 117229 179885  4983/4719/344    5173/577    32  180   22.13)
(smt.stats   37   4818 118806 182605  5240/4719/344    5302/579    32  180   22.23)
ramon: poll                 wall=3.000s usage=2.994s mem=23632KiB load=1.00 rootload=1.00
(smt.stats   38   4940 120069 189757  5779/5515/346    5464/679    33  183   22.52)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 122482 196669  5788/5524/349    5652/679    33  183   22.52)
(smt.stats   40   5221 127553 210110  5879/5528/349    5789/832    34  206   22.52)
(smt.stats   41   5382 136636 233684  5911/5620/349    6002/841    34  206   22.52)
(smt.stats   42   5559 139892 241045  5952/5674/349    6253/843    34  206   22.61)
(smt.stats   43   5753 146182 258049  6059/5694/349    6470/845    34  206   22.61)
ramon: poll                 wall=4.000s usage=3.993s mem=23972KiB load=1.00 rootload=1.00
(smt.stats   44   5966 152566 276331  6124/5856/350    6699/941    35  215   22.61)
(smt.stats   45   6067 154989 283200  6125/5861/350    6806/941    35  215   22.71)
(smt.stats   46   6178 158251 292537  6168/5864/350    6923/942    35  215   22.90)
(smt.stats   47   6300 162533 307640  6180/5908/350    7053/946    35  215   22.90)
(smt.stats   48   6434 164184 316400  6195/5931/350    7186/946    35  215   22.90)
(smt.stats   49   6581 167242 327030  6263/5957/350    7386/948    35  215   23.00)
(smt.stats   50   6742 170526 339157  6326/5998/350    7560/952    35  215   23.00)
(smt.stats   51   6919 173609 349306  6400/6069/350    7739/952    35  215   23.00)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 176023 357535  6415/6145/350    7985/952    35  215   23.00)
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 0 := 196608 << 52
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 371088523061446 := 98304 << 53
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 0 := 196608 << 52
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 371088523061446 := 98304 << 53
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 0 := 196608 << 52
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 371088523061446 := 98304 << 53
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 0 := 196608 << 52
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 371088523061446 := 98304 << 53
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 0 := 196608 << 52
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 371088523249863 := 98304 << 53
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 53 #866 #870) 64)) 0 := 196608 << 52
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 0 := 371088522657980&0
shl: (shl[54] (bv2int %1) (+ 54 (* 18014398509481983 #105))) 562949953421311 := 98304 << 53
ramon: poll                 wall=5.003s usage=4.996s mem=24604KiB load=1.00 rootload=1.00
(smt.stats   53   7326 182312 371199  6598/6206/351    8241/1088    36  223   23.29)
(smt.stats   54   7560 186738 390164  6671/6371/356    8546/1088    36  223   23.29)
(smt.stats   55   7661 187337 404623  6706/6409/356    8652/1167    37  224   23.29)
(smt.stats   56   7772 189249 418271  6739/6435/356    8775/1167    37  224   23.39)
(smt.stats   57   7894 194327 434354  6740/6436/356    8898/1167    37  224   23.39)
(smt.stats   58   8028 197319 448170  6767/6455/359    9064/1180    38  226   23.48)
(smt.stats   59   8175 202714 464647  6825/6473/359    9303/1186    38  226   23.48)
(smt.stats   60   8336 206681 480339  6871/6562/359    9567/1245    39  231   23.58)
(smt.stats   61   8513 211811 499011  6886/6581/359    9789/1245    39  231   23.68)
(smt.stats   62   8707 213783 512523  6907/6594/359    9988/1245    39  231   23.68)
ramon: poll                 wall=6.000s usage=5.993s mem=25080KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8920 222173 545706  6956/6619/359   10245/1247    39  231   23.78)
(smt.stats   64   9154 226663 553459  7036/6663/359   10576/1254    39  231   23.87)
(smt.stats   65   9411 230229 562521  7042/6737/359   10955/1254    39  231   23.87)
(smt.stats   66   9512 232025 568743  7074/6743/359   11092/1256    39  231   23.97)
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067321
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276509897
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276509889
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067321
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355368 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355368 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355368 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355496 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355496 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355336 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355368 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355496 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488355496 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488371720 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488371752 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488371752 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488404648 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 140737488371720 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 211106232549416 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 211106232549608 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 211106232549544 := 371088522657980&17979214276067305
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 211106232549544 := 371088522657980&17979214276067305
(smt.stats   67   9623 234078 576440  7229/6781/359   11244/1269    39  231   24.29)
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 351843720888392 := 371088522657980&17979214804484169
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 351843720888328 := 371088522657980&17979214804484425
band: (band[54] (if (or #584 #589 #594 #599) 0 (if #579 1 #848)) (shl[64] (* 2 #373) (mod #874 64))) 351843720888328 := 371088522657980&17979214804484425
(smt.stats   68   9745 235021 580376  7410/6953/420   11443/1434    40  246   24.48)
ramon: poll                 wall=7.000s usage=6.993s mem=26032KiB load=1.00 rootload=1.00
(smt.stats   69   9879 237846 597471  7666/7194/435   11759/1441    40  246   24.57)
(smt.delete-inactive-clauses  :num-deleted-clauses 229)
(smt.stats   70  10026 241565 614114  7756/7405/435   11864/1549    41  249   24.67)
(smt.stats   71  10187 249968 660445  7765/7460/435   12031/1549    41  249   24.67)
(smt.stats   72  10364 259683 702912  7788/7475/435   12565/1551    41  249   24.76)
(smt.stats   73  10558 265435 721431  7867/7501/435   12946/1554    41  249   24.86)
(smt.stats   74  10771 273441 752713  7943/7572/436   13309/2040    42  254   24.86)
ramon: poll                 wall=8.000s usage=7.992s mem=26360KiB load=1.00 rootload=1.00
(smt.stats   75  11005 282393 793880  7993/7688/437   13916/2233    43  255   25.05)
(smt.stats   76  11262 291127 820280  8169/7705/437   14407/2235    43  255   25.14)
(smt.stats   77  11544 299663 851216  8293/7953/437   14711/2237    43  255   25.14)
(smt.stats   78  11645 305775 876688  8316/8006/437   14828/2237    43  255   25.14)
ramon: poll                 wall=9.000s usage=8.992s mem=26592KiB load=1.00 rootload=1.00
(smt.stats   79  11756 313273 903049  8322/8017/437   14982/2237    43  255   25.14)
(smt.stats   80  11878 318832 919679  8500/8018/437   15167/2239    43  255   25.24)
(smt.stats   81  12012 320808 927467  8635/8249/437   15433/2239    43  255   25.24)
(smt.stats   82  12159 328018 969680  8642/8337/437   15684/2239    43  255   25.24)
ramon: poll                 wall=10.000s usage=9.992s mem=26760KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12320 334790 1003973  8698/8390/438   16061/2719    44  255   25.33)
(smt.stats   84  12497 342037 1053386  8708/8403/438   16610/2719    44  255   25.75)
(smt.stats   85  12691 347716 1089484  8810/8406/438   16899/2721    44  255   25.75)
ramon: poll                 wall=11.000s usage=10.992s mem=27328KiB load=1.00 rootload=0.99
(smt.stats   86  12904 358944 1145371  8930/8519/438   17275/2729    44  255   25.85)
(smt.stats   87  13138 364085 1189141  8991/8637/441   17602/3026    45  263   25.85)
(smt.stats   88  13395 371679 1243571  9079/8692/441   17923/3031    45  263   26.02)
ramon: poll                 wall=12.000s usage=11.992s mem=27640KiB load=1.00 rootload=1.00
(smt.stats   89  13677 383144 1305727  9103/8798/441   18308/3031    45  263   26.12)
(smt.stats   90  13987 397535 1389221  9113/8804/441   18777/3031    45  263   26.12)
(smt.stats   91  14088 400744 1408223  9132/8809/441   18880/3031    45  263   26.12)
(smt.stats   92  14199 403455 1429271  9134/8829/441   19021/3031    45  263   26.12)
(smt.stats   93  14321 408888 1469884  9141/8836/442   19280/3180    46  265   26.22)
(smt.stats   94  14455 412141 1498585  9162/8848/443   19409/3216    47  272   26.41)
(smt.stats   95  14602 416291 1527714  9169/8864/443   19579/3216    47  272   26.41)
ramon: poll                 wall=13.000s usage=12.991s mem=28152KiB load=1.00 rootload=1.00
(smt.stats   96  14763 422600 1564149  9237/8872/443   19792/3220    47  272   26.50)
(smt.stats   97  14940 428038 1590524  9404/8942/444   20004/3256    48  274   26.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 57)
(smt.stats   98  15134 434460 1623932  9425/9117/445   20199/3256    48  274   26.50)
ramon: poll                 wall=14.000s usage=13.991s mem=28168KiB load=1.00 rootload=1.00
(smt.stats   99  15347 440397 1650809  9550/9226/446   20444/3318    49  286   26.60)
(smt.stats  100  15581 444508 1675671  9657/9352/448   20745/3347    50  292   26.69)
ramon: poll                 wall=15.000s usage=14.991s mem=28264KiB load=1.00 rootload=1.00
(smt.stats  101  15838 457348 1721242  9887/9356/448   21092/3355    50  292   26.79)
ramon: poll                 wall=16.000s usage=15.990s mem=28496KiB load=1.00 rootload=1.00
(smt.stats  102  16120 468159 1753638 10221/9634/448   21438/3361    50  292   26.98)
ramon: poll                 wall=17.000s usage=16.990s mem=28572KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  103  16430 479635 1797931 10523/10070/451   21880/3472    51  313   26.98)
(smt.stats  104  16770 490872 1840471 10545/10234/451   22312/3472    51  313   27.18)
ramon: poll                 wall=18.000s usage=17.989s mem=28896KiB load=1.00 rootload=1.00
(smt.stats  105  16871 495000 1875862 10572/10244/451   22458/3577    52  314   27.27)
(smt.stats  106  16982 497117 1888082 10615/10278/451   22642/3579    52  314   27.37)
(smt.stats  107  17104 502664 1928728 10634/10329/451   22824/3579    52  314   27.37)
(smt.stats  108  17238 505501 1952756 10643/10332/451   22959/3579    52  314   27.37)
(smt.stats  109  17385 509948 1987081 10659/10344/451   23139/3579    52  314   27.37)
(smt.stats  110  17546 512937 2006834 10669/10364/454   23333/3684    53  349   27.37)
(smt.stats  111  17723 516077 2025058 10695/10375/454   23598/3685    53  349   27.37)
ramon: poll                 wall=19.000s usage=18.989s mem=29040KiB load=1.00 rootload=1.00
(smt.stats  112  17917 520363 2063120 10700/10395/454   23825/3685    53  349   27.46)
(smt.stats  113  18130 522658 2087209 10711/10397/454   24102/3781    54  360   27.56)
(smt.stats  114  18364 528650 2140734 10722/10417/454   24370/3781    54  360   27.46)
(smt.stats  115  18621 533703 2189527 10733/10428/454   24674/3781    54  360   27.56)
ramon: poll                 wall=20.003s usage=19.992s mem=29276KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:31:00 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.998s
ramon: group.utime          19.974s
ramon: group.stime          0.024s
ramon: group.mempeak        29536KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
