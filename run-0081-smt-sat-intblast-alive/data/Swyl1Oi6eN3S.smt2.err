ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:33:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29005 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Swyl1Oi6eN3S.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             427593
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   188/187     0/0  58       0    18.58   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 418 :time 0.00)
(sat.stats    119    760    0   259/257   118/40  63       0    19.46   0.06)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 530 :time 0.00)
(sat.stats    119    760    0   283/281   118/40  70       0    19.46   0.06)
(sat.stats    119    760    0   283/281   118/40  70       0    19.46   0.06)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :elim-bin 35 :time 0.00)
 (sat-probing :cost 477619.46 :time 0.00)
(sat.stats    119    760    0   213/211   122/44  70       0    19.46   0.06)
(sat.stats    299   4146    1   213/211   303/155  70       0    19.55   0.07)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    302   4340    2   213/211   306/155  70       0    19.55   0.07)
(sat.stats    305   4458    3   213/211   309/156  70       0    19.55   0.07)
(sat.stats    308   4575    4   213/211   312/157  70       0    19.55   0.07)
(sat.stats    311   4754    5   213/211   315/157  70       0    19.55   0.07)
(sat.stats    314   4889    6   213/211   318/157  70       0    19.55   0.07)
(sat.stats    317   5022    7   213/211   321/157  70       0    19.55   0.07)
(sat.stats    320   5118    8   213/211   324/158  70       0    19.55   0.07)
(sat.stats    323   5230    9   213/211   327/160  70       0    19.55   0.07)
(sat.stats    326   5446   10   213/211   330/163  70       0    19.55   0.07)
(sat.stats    329   5513   11   213/211   333/166  70       0    19.55   0.07)
(sat.stats    332   5640   12   213/211   336/167  70       0    19.55   0.07)
(sat.stats    335   5732   13   213/211   339/169  70       0    19.65   0.07)
(sat.stats    338   5743   14   213/211   342/172  70       0    19.65   0.07)
shl: (shl[39] (bv2int %0) (+ 39 (* 549755813887 #55))) 3422 := 143 << 13
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2527 :time 0.00)
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 1272 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 3431 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 4096 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 16 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 2624 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 32 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 896 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 768 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 512 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 1024 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 2048 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 4 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 2 := 4096&1171456
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #588 #590) 64)) 0 := 286 << 12
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 2860 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 1184 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 384 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 2304 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 2048 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 4096 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 512 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 1024 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 64 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 19 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 2 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 8 := 1171456&4096
band: (band[39] (if (= #64 38) 1 (if #500 2 #574)) (shl[39] (bv2int %0) (+ 39 #577))) 0 := 4096&1171456
band: (band[39] (shl[64] (* 2 #59) (mod #591 64)) (if (or #598 #599 #600 #601 #602 #603 #604 #605 #606 #607 #608 #609 #610 #611 #612 #613 ...) 0 (if #623 1 #699))) 16 := 1171456&4096
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    549   9901   35  2702/2697   573/239  74       0    20.99   0.13)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4062 :time 0.00)
 (sat-cleaner :elim-literals 20 :elim-clauses 0 :cost 4084 :time 0.00)
(sat.stats    715  12360   51 29577/29572  1373/906 254       0    29.77   0.36)
ramon: poll                 wall=1.003s usage=1.002s mem=52096KiB load=1.00 rootload=0.97
(sat.stats   1065  13914  115 99562/99557  4468/3651 254       0    55.34   1.44)
ramon: poll                 wall=2.000s usage=1.999s mem=61864KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.999s mem=85112KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.998s mem=92596KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.998s mem=97512KiB load=1.00 rootload=1.00
(sat.stats   1598  16315  237 205796/205791  9159/7809 254       0    98.78   5.98)
ramon: poll                 wall=6.000s usage=5.998s mem=98MiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.998s mem=102MiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.997s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.997s mem=109MiB load=1.00 rootload=0.99
ramon: poll                 wall=10.003s usage=9.998s mem=113MiB load=1.00 rootload=1.01
ramon: poll                 wall=11.000s usage=10.994s mem=148MiB load=1.00 rootload=0.98
ramon: poll                 wall=12.003s usage=11.997s mem=152MiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.994s mem=154MiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.993s mem=159MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.993s mem=159MiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.992s mem=162MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.992s mem=164MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.991s mem=166MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.991s mem=168MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.991s mem=170MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:33:20 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.070s
ramon: group.total          20.004s
ramon: group.utime          19.928s
ramon: group.stime          0.076s
ramon: group.mempeak        180MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
