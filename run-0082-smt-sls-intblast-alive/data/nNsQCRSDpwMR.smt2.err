ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:05:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27374 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/nNsQCRSDpwMR.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             922140
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1        80     10000        49          0            1        2)
(smt.stats    0    101   4761    418  1289/1165/98      91/17     6   17   52.18)
(smt.stats    1    202   6425   1251  2568/2328/102     183/19     9   21   52.37)
(sat.ddfw       1      1   40.4899     20001        98          1            1        3)
(smt.stats    2    313   8069   2753  2729/2417/109     287/29    11   23   52.50)
(sat.ddfw       1      1   40.0802     40001       196          2            1        5)
(smt.stats    3    414  10052   4110  2813/2520/113     376/37    13   31   52.60)
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 108086391056891904 := 108086391056891905&108086391056891904
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 9187343239835811841 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 108086391056891904 := 108086391056891905&108086391056891904
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 9331458427911667713 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 108086391056891904 := 108086391056891905&108086391056891904
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 9187343239835811841 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 108086391056891904 := 108086391056891905&108086391056891904
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 9043228051759955969 := 256 >>l 9
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 0&108086391056891904
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 3 := 2 >>l 2
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 0&108086391056891904
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 2 >>l 2
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 0&108086391056891904
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 2 >>l 2
(smt.stats    4    525  11770   5040  2857/2584/117     511/47    14   33   52.70)
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 2 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 8 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 8 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 31 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 24 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 24 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 24 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 24 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 56 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 24 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 56 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 24 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 56 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 56 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 120 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 120 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 120 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 120 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 120 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 120 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 120 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 1272 := 144115188075855871&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 1016 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 1016 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 1016 := 144115188075855866&144115188075855864
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 1016 := 144115188075855866&144115188075855864
(smt.stats    5    647  13348   8102  3029/2769/231     697/95    18   65   53.19)
(sat.ddfw       1      1   34.2466     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.933s mem=55408KiB load=0.93 rootload=0.92
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17295  11130  3098/2774/232     807/102    18   65   53.28)
(smt.stats    7    859  21089  15318  3167/2889/238     925/115    20   70   53.38)
(sat.ddfw       1      1   29.2612    110001       539          4            1       12)
(smt.stats    8    981  23442  20087  3243/2970/249    1126/163    23   92   53.48)
(smt.stats    9   1115  32102  28250  3293/3024/251    1327/194    24   94   53.67)
ramon: poll                 wall=2.000s usage=1.995s mem=55792KiB load=1.06 rootload=1.07
(smt.stats   10   1216  36361  34395  3314/3051/252    1439/260    26  103   53.67)
(sat.ddfw       1      1   25.2393    160000       784          5            1       17)
(smt.stats   11   1327  39075  39991  3354/3074/254    1572/264    27  103   53.77)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  41960  45831  3410/3148/255    1708/295    29  117   53.87)
(sat.ddfw       1      1    23.576    220001      1078          6            1       23)
(smt.stats   13   1583  44804  51937  3438/3164/263    1878/338    30  134   53.87)
ramon: poll                 wall=3.000s usage=3.083s mem=56072KiB load=1.09 rootload=1.08
(smt.stats   14   1730  48538  57829  3458/3184/263    2032/338    30  134   53.99)
(smt.stats   15   1831  52611  64089  3483/3204/263    2137/341    30  134   53.99)
(smt.stats   16   1942  55049  69232  3502/3231/263    2250/341    30  134   53.99)
(sat.ddfw       1      1   20.5279    290001      1421          7            1       30)
(smt.stats   17   2064  56620  76618  3529/3251/264    2397/378    31  134   54.09)
(smt.stats   18   2198  61117  85470  3563/3285/264    2532/381    31  134   54.09)
ramon: poll                 wall=4.000s usage=4.080s mem=56352KiB load=1.00 rootload=1.00
(smt.stats   19   2345  65821  92026  3576/3307/264    2683/382    31  134   54.27)
(smt.stats   20   2506  69410 101294  3660/3399/268    2878/423    32  135   54.36)
(sat.ddfw       1      1   18.2025    370001      1813          8            1       38)
(smt.stats   21   2607  71980 108147  3681/3400/268    3009/423    32  135   54.36)
(smt.stats   22   2718  73974 112139  3700/3426/268    3118/423    32  135   54.46)
ramon: poll                 wall=5.000s usage=5.080s mem=56540KiB load=1.00 rootload=1.00
(smt.stats   23   2840  75586 119063  3774/3450/268    3263/425    32  135   54.46)
(smt.stats   24   2974  78839 126311  3796/3535/269    3435/476    33  138   54.58)
(smt.stats   25   3121  80172 130010  3801/3540/269    3594/476    33  138   54.58)
(sat.ddfw       1      1   16.3428    460001      2254          9            1       47)
(smt.stats   26   3282  84326 139274  3804/3543/269    3756/476    33  138   54.67)
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 16 := 16&72057594037927936
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 6 := 16&72057594037927936
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 4 := 16&72057594037927936
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 16&72057594037927936
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 9223372036854775824 := 65792 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 16&72057594037927936
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 9223372036854775824 := 65792 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 0&72057594037927936
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 9223372036854775808 := 65792 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 0&72057594037927936
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 9223372036854775808 := 65792 >>l 8
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 257&72057594037927936
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 127 := 514 >>l 1
(smt.stats   27   3459  91172 155465  3834/3556/270    3915/500    34  151   54.67)
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 23&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 9223372036854775831 := 65664 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 512&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 512 := 65664 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 512&0
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 7 #98 #344) 64)) 512 := 65664 >>l 7
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 6 := 257&72057594037927936
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 257&72057594037927936
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 129 := 514 >>l 1
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 257&72057594037927936
lshr: (lshr[57] (bv2int %0) (mod (bv2int %0) 57)) 256 := 514 >>l 1
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 257&72057594037927936
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #509 56) 5192296858534827556472902291292160 (if #511 2596148429267413778236451145646080 #621))) 1 := 257&72057594037927936
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 257&72057594037927936
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #509 56) 5192296858534827556472902291292160 (if #511 2596148429267413778236451145646080 #621))) 2 := 257&72057594037927936
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 257&72057594037927936
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #509 56) 5192296858534827556472902291292160 (if #511 2596148429267413778236451145646080 #621))) 2 := 257&72057594037927936
band: (band[57] (lshr[64] (* 128 #98) (mod #345 64)) (if (= #644 63) 1329227995784915854457062986570792960 (if #646 664613997892457927228531493285396480 #770))) 0 := 257&72057594037927936
band: (band[57] (lshr[57] (bv2int %0) (mod #98 57)) (if (= #509 56) 5192296858534827556472902291292160 (if #511 2596148429267413778236451145646080 #621))) 256 := 257&72057594037927936
(smt.stats   28   3560  93786 161036  3892/3624/292    4043/504    35  153   54.92)
ramon: poll                 wall=6.000s usage=6.078s mem=56952KiB load=1.00 rootload=1.00
(smt.stats   29   3671  97808 167335  3985/3711/293    4156/533    36  164   55.02)
(smt.stats   30   3793 103492 176726  4011/3731/293    4282/533    36  164   55.02)
(sat.ddfw       1      1   14.8346    560001      2745         10            1       57)
(smt.stats   31   3927 108012 186822  4044/3751/293    4496/536    36  164   55.02)
ramon: poll                 wall=7.000s usage=7.078s mem=57160KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 110842 196708  4163/3779/293    4661/540    36  164   55.11)
ramon: poll                 wall=8.000s usage=8.077s mem=57272KiB load=1.00 rootload=1.00
(smt.stats   33   4235 114090 209827  4230/3956/294    4840/615    37  169   55.11)
(sat.ddfw       1      1   13.5819    670001      3284         11            1       68)
(smt.stats   34   4412 119099 224574  4249/3964/294    5041/615    37  169   55.11)
(smt.stats   35   4606 123213 234734  4267/3991/295    5238/632    38  175   55.22)
(smt.stats   36   4707 126464 247633  4309/3999/295    5359/633    38  175   55.22)
ramon: poll                 wall=9.006s usage=9.081s mem=57412KiB load=1.00 rootload=0.99
(smt.stats   37   4818 130221 257371  4316/4043/296    5477/645    39  179   55.48)
(smt.stats   38   4940 133551 270211  4345/4045/296    5634/645    39  179   55.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 323)
(sat.ddfw       1      1   12.5183    790001      3872         12            1       80)
(smt.stats   39   5074 136454 279281  4407/4086/296    5469/646    39  179   55.48)
ramon: poll                 wall=10.000s usage=10.075s mem=58000KiB load=1.00 rootload=1.01
(smt.stats   40   5221 140551 293417  4523/4160/296    5662/648    39  179   55.90)
(smt.stats   41   5382 144759 307562  4563/4264/296    5835/648    39  179   55.90)
ramon: poll                 wall=11.000s usage=11.074s mem=57928KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.6237    920001      4509         13            1       93)
(smt.stats   42   5559 147301 315781  4722/4296/296    6081/650    39  179   55.90)
(smt.stats   43   5753 156489 338457  4740/4461/296    6300/650    39  179   56.00)
ramon: poll                 wall=12.000s usage=12.073s mem=58112KiB load=1.00 rootload=1.00
(smt.stats   44   5966 162622 359126  4768/4474/296    6561/651    39  179   56.00)
(smt.stats   45   6067 165041 367195  4773/4500/296    6664/651    39  179   56.00)
(smt.stats   46   6178 168273 374257  4775/4502/296    6782/651    39  179   56.10)
(smt.stats   47   6300 172310 383525  4788/4506/296    6915/651    39  179   56.19)
(smt.stats   48   6434 180780 398484  4793/4520/296    7070/651    39  179   56.19)
(sat.ddfw       1      1   10.8426   1060001      5196         14            1      108)
ramon: poll                 wall=13.000s usage=13.072s mem=58392KiB load=1.00 rootload=1.00
(smt.stats   49   6581 186681 409797  4818/4523/296    7227/651    39  179   56.19)
(smt.stats   50   6742 191631 423458  4819/4546/296    7392/651    39  179   56.19)
(smt.stats   51   6919 198792 444059  4825/4552/297    7581/885    40  194   56.19)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 204837 461735  4827/4554/297    7787/885    40  194   56.19)
ramon: poll                 wall=14.000s usage=14.071s mem=58568KiB load=1.00 rootload=1.00
(smt.stats   53   7326 208044 478487  4906/4554/297    8012/891    40  194   56.70)
(sat.ddfw       1      1   10.1633   1210001      5931         15            1      123)
ramon: poll                 wall=15.000s usage=15.064s mem=58744KiB load=0.99 rootload=1.00
(smt.stats   54   7560 213857 498201  4964/4640/298    8291/897    41  199   56.79)
(smt.stats   55   7661 216664 507757  4973/4693/298    8404/897    41  199   56.79)
(smt.stats   56   7772 218375 515667  4983/4703/298    8529/897    41  199   56.79)
(smt.stats   57   7894 220951 530559  4993/4716/298    8658/897    41  199   56.89)
(smt.stats   58   8028 223174 543761  4995/4722/298    8819/897    41  199   56.89)
ramon: poll                 wall=16.000s usage=16.051s mem=59136KiB load=0.99 rootload=0.98
(smt.stats   59   8175 227944 559477  4997/4724/298    8973/897    41  199   56.89)
(smt.stats   60   8336 231026 576363  5049/4760/298    9194/897    41  199   56.98)
(smt.stats   61   8513 235053 590121  5135/4779/298    9486/899    41  199   56.98)
(sat.ddfw       1      1    9.5648   1370001      6715         16            1      139)
(smt.stats   62   8707 242353 610046  5154/4857/298    9696/899    41  199   57.42)
ramon: poll                 wall=17.000s usage=17.052s mem=59632KiB load=1.00 rootload=1.00
(smt.stats   63   8920 247849 635958  5168/4876/299    9993/957    42  215   57.42)
(smt.stats   64   9154 256004 655953  5170/4885/299   10244/957    42  215   57.51)
ramon: poll                 wall=18.000s usage=18.049s mem=59928KiB load=1.00 rootload=1.00
(smt.stats   65   9411 263187 680211  5172/4887/299   10543/957    42  215   57.51)
(smt.stats   66   9512 264044 686742  5172/4887/299   10653/957    42  215   57.51)
(smt.stats   67   9623 266109 696811  5173/4888/299   10796/957    42  215   57.61)
(smt.stats   68   9745 270749 712753  5174/4889/299   10966/957    42  215   57.61)
(smt.stats   69   9879 275159 730648  5174/4889/299   11139/957    42  215   57.61)
(sat.ddfw       1      1   9.02719   1540001      7549         17            1      156)
(smt.delete-inactive-clauses  :num-deleted-clauses 256)
(smt.stats   70  10026 279084 749026  5184/4893/299   11066/957    42  215   57.61)
ramon: poll                 wall=19.000s usage=19.168s mem=59876KiB load=1.12 rootload=1.12
(smt.stats   71  10187 285953 768957  5187/4902/299   11258/957    42  215   57.61)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 292029 794576  5189/4904/299   11461/957    42  215   57.61)
(smt.stats   73  10558 295692 810621  5192/4907/299   11738/957    42  215   57.61)
ramon: poll                 wall=20.000s usage=20.157s mem=60000KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 23:05:24 2024
ramon: root.execname        z3
ramon: root.utime           20.210s
ramon: root.stime           0.000s
ramon: group.total          20.223s
ramon: group.utime          20.219s
ramon: group.stime          0.004s
ramon: group.mempeak        60400KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.01
