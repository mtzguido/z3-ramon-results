ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:29:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29593 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1VI9eGz1jbBy.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             595161
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   82.6446     10000        49          0            1        2)
(smt.stats    0    101   2042    278  1184/1072/116      92/12     9   19   51.96)
(smt.stats    1    202   3851    922  1718/1552/119     191/27    11   22   52.15)
(sat.ddfw       1      1   37.8826     20001        98          1            1        3)
(sat.ddfw       1      1   37.2439     40001       196          2            1        5)
ramon: poll                 wall=1.000s usage=0.937s mem=54564KiB load=0.94 rootload=0.93
(sat.ddfw       1      1   31.5789     70001       343          3            1        8)
(smt.stats    2    313   6351   1454  2083/1831/120     302/33    12   24   52.34)
(smt.stats    3    414   8398   2317  2196/1984/125     415/35    13   26   52.34)
(smt.stats    4    525  10565   5513  2401/2016/125     515/61    13   26   52.44)
(smt.stats    5    647  13992   6786  2433/2195/125     640/87    14   31   52.63)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  16121   8222  2531/2279/126     758/91    15   33   52.63)
(sat.ddfw       1      1   28.2885    110001       539          4            1       12)
(smt.stats    7    859  18116  10181  2597/2352/126     868/91    15   33   52.73)
(smt.stats    8    981  19666  11719  2688/2432/127     988/96    16   37   52.82)
ramon: poll                 wall=2.000s usage=2.141s mem=55008KiB load=1.20 rootload=1.21
(sat.ddfw       1      1   24.5575    160000       784          5            1       17)
(smt.stats    9   1115  20476  12582  2792/2476/127    1126/98    16   37   53.01)
(sat.ddfw       1      1   23.3104    220001      1078          6            1       23)
(smt.stats   10   1216  21198  13333  2912/2609/127    1251/98    16   37   53.01)
ramon: poll                 wall=3.000s usage=3.428s mem=55064KiB load=1.29 rootload=1.28
(sat.ddfw       1      1   21.4067    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=4.758s mem=55332KiB load=1.33 rootload=1.33
(sat.ddfw       1      1   19.5886    370001      1813          8            1       38)
(smt.stats   11   1327  22867  14385  3072/2841/129    1383/102    17   42   53.18)
ramon: poll                 wall=5.000s usage=5.914s mem=55212KiB load=1.16 rootload=1.16
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  24408  16816  3169/2917/130    1547/132    18   45   53.18)
(sat.ddfw       1      1   17.2745    460001      2254          9            1       47)
(smt.stats   13   1583  27008  19740  3230/2955/130    1760/135    18   45   53.18)
(smt.stats   14   1730  28916  22438  3328/3024/130    1959/137    18   45   53.30)
ramon: poll                 wall=6.000s usage=6.971s mem=55448KiB load=1.06 rootload=1.06
(smt.stats   15   1831  31664  25092  3332/3103/132    2055/176    19   49   53.30)
(smt.stats   16   1942  34477  27249  3333/3104/132    2166/176    19   49   53.55)
(smt.stats   17   2064  36011  28990  3338/3109/132    2353/176    19   49   53.55)
(smt.stats   18   2198  40151  34514  3351/3114/132    2505/176    19   49   53.55)
(smt.stats   19   2345  43009  38011  3384/3137/132    2728/176    19   49   53.66)
(sat.ddfw       1      1   15.8128    560001      2745         10            1       57)
(smt.stats   20   2506  44441  41573  3409/3178/134    2904/261    20   54   53.75)
(smt.stats   21   2607  47021  45132  3419/3180/134    3026/261    20   54   53.75)
(smt.stats   22   2718  49346  48378  3455/3188/134    3161/261    20   54   53.75)
(smt.stats   23   2840  51426  50532  3465/3230/134    3285/261    20   54   53.75)
(smt.stats   24   2974  53755  53289  3491/3251/137    3451/273    21   57   53.85)
(smt.stats   25   3121  56766  57486  3496/3264/137    3604/273    21   57   54.05)
(smt.stats   26   3282  61782  65482  3508/3272/137    3763/273    21   57   54.21)
(smt.stats   27   3459  67630  73626  3527/3281/137    4006/274    21   57   54.21)
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 281474976710656 := 96 << 45
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 35184372088832 := 35184372088832&35184372088832
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 879609302220800 := 96 << 45
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8796093022205 := 35184372088832&140737488355327
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8796093022204 := 35184372088832&140737488355326
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 18155135997837312 := 96 << 45
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 131941395333123 := 48 << 46
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&140737488355327
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&105553116266495
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 18119951625748479 := 96 << 45
(smt.stats   28   3560  69614  79151  3568/3304/137    4123/274    21   57   54.31)
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 3518437208883201 := 96 << 45
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 131941395333124 := 48 << 46
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 35184372088832&0
shl: (shl[47] (bv2int %0) (+ 47 (* 140737488355327 #117))) 131941395333126 := 48 << 46
(smt.stats   29   3671  72058  84204  3605/3362/152    4257/315    22   60   54.40)
ramon: poll                 wall=7.005s usage=8.363s mem=56580KiB load=1.39 rootload=1.37
(smt.stats   30   3793  73982  88157  3620/3379/152    4384/315    22   60   54.40)
(smt.stats   31   3927  75813  92027  3624/3380/152    4517/318    23   60   54.40)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   32   4074  77894  98889  3639/3399/158    4656/320    24   64   54.40)
(smt.stats   33   4235  82236 103815  3639/3399/158    4817/320    24   64   54.40)
(smt.stats   34   4412  86668 110875  3648/3404/158    4992/319    25   68   54.40)
(smt.stats   35   4606  89774 118816  3669/3425/158    5189/319    25   68   54.40)
(smt.stats   36   4707  92620 122875  3681/3438/158    5292/319    25   68   54.68)
(sat.ddfw       1      1   14.5195    670001      3284         11            1       68)
(smt.stats   37   4818  94625 126077  3700/3453/158    5406/319    25   68   54.68)
(smt.stats   38   4940  97564 129788  3709/3469/158    5529/319    25   68   54.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 234)
(smt.stats   39   5074 100116 134973  3715/3470/158    5430/319    25   68   54.68)
ramon: poll                 wall=8.000s usage=9.356s mem=56952KiB load=1.00 rootload=1.00
(smt.stats   40   5221 102914 140978  3730/3482/158    5589/320    25   68   54.78)
(smt.stats   41   5382 106770 148288  3738/3498/158    5760/320    25   68   54.78)
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 0 := 549755813888&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 46 #778 #782) 64)) 140737488355328 := 14 << 39
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 549755813887 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 549755813886 := 549755813888&549755813886
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 549755813884 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 16 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 32 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 64 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 128 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 256 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 512 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1024 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2048 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4096 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 16384 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 32768 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 65536 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 131072 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 262144 := 549755813888&549755813887
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1024 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1024 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2048 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4096 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4096 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4096 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8192 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 32768 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 65536 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 131072 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 524288 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1048576 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2097152 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4194304 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8388608 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 16777216 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 33554432 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 67108864 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 134217728 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 268435456 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 536870912 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1073741824 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2147483648 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4294967296 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8589934592 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17179869184 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 34359738368 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 68719476736 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 137438953472 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 274877906944 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 549755813888 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 274877906944 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1099511627776 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 2199023255552 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4398046511104 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8796093022208 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17592186044416 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 35184372088832 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 8796093022208 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 4398046511104 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 1099511627776 := 35184372088832&70368744177664
(smt.stats   42   5560 108611 152919  3953/3670/352    5997/352    26   81   55.96)
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17592186044416 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17592186044416 := 35184372088832&70368744177664
band: (band[47] (if (= #371 63) 1 (if #589 2 #771)) (shl[64] (* 2 #115) (mod #786 64))) 17592186044416 := 35184372088832&70368744177664
ramon: poll                 wall=9.000s usage=10.356s mem=58312KiB load=1.00 rootload=0.99
(smt.stats   43   5754 113197 158830  4035/3706/373    6269/355    26   81   56.15)
(sat.ddfw       1      1   12.9772    790001      3872         12            1       80)
ramon: poll                 wall=10.000s usage=11.350s mem=58328KiB load=0.99 rootload=1.00
ramon: poll                 wall=11.000s usage=12.330s mem=58348KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   11.6739    920001      4509         13            1       93)
ramon: poll                 wall=12.000s usage=13.397s mem=58352KiB load=1.07 rootload=1.06
ramon: poll                 wall=13.000s usage=14.402s mem=58352KiB load=1.00 rootload=1.01
(sat.ddfw       1      1    10.775   1060001      5196         14            1      108)
ramon: poll                 wall=14.000s usage=15.358s mem=58412KiB load=0.96 rootload=0.96
ramon: poll                 wall=15.000s usage=16.142s mem=58412KiB load=0.78 rootload=0.78
(sat.ddfw       1      1   9.76308   1210001      5931         15            1      123)
ramon: poll                 wall=16.000s usage=17.149s mem=58412KiB load=1.01 rootload=1.01
(smt.stats   44   5967 117518 167118  4354/4102/375    6541/438    27  121   56.24)
ramon: poll                 wall=17.000s usage=18.128s mem=58440KiB load=0.98 rootload=0.98
(smt.stats   45   6068 121516 175691  4451/4162/380    6723/448    27  121   56.24)
(sat.ddfw       1      1   9.06105   1370001      6715         16            1      139)
(smt.stats   46   6179 125480 185836  4541/4288/390    6856/626    29  169   56.34)
ramon: poll                 wall=18.000s usage=19.119s mem=58844KiB load=0.99 rootload=0.99
ramon: poll                 wall=19.000s usage=20.111s mem=58904KiB load=0.99 rootload=0.99
ramon: poll                 wall=20.000s usage=21.113s mem=58688KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:29:57 2024
ramon: root.execname        z3
ramon: root.utime           21.170s
ramon: root.stime           0.000s
ramon: group.total          21.186s
ramon: group.utime          21.178s
ramon: group.stime          0.008s
ramon: group.mempeak        58944KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              1.06
