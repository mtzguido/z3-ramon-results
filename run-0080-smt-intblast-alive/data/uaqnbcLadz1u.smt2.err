ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:08:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24570 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/uaqnbcLadz1u.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             178190
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4923    378  1151/1011/112      93/10    10   16   19.17)
(smt.stats    1    202   6972   1156  1739/1581/113     200/22    11   17   19.36)
(smt.stats    2    313   8013   2299  2018/1817/118     309/32    13   20   19.56)
(smt.stats    3    414   8506   3703  2202/2008/121     411/38    15   25   19.56)
(smt.stats    4    525   9576   4750  2458/2239/127     519/65    16   30   19.66)
(smt.stats    5    647  14160   6563  2528/2259/127     643/77    17   31   19.76)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  18118   9279  2557/2326/127     731/77    17   31   19.76)
(smt.stats    7    859  21245  13263  2581/2348/128     836/78    18   33   19.85)
(smt.stats    8    981  22544  15995  2643/2422/129     949/78    19   36   19.85)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 3 := 3&3
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 3 := 716 << 2
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1 := 1&3
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 1 := 716 << 2
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 3 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 2 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 2864&3
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 2865 := 716 << 2
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 3 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 2 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 2864&3
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 2865 := 716 << 2
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 2 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 2864&3
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 716 := 716 << 2
(smt.stats    9   1115  24842  20090  2686/2454/156    1074/83    21   43   19.96)
(smt.stats   10   1216  27859  23440  2706/2480/167    1173/84    22   45   19.96)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 2864&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 3 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 2864&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 2 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 2864&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 2 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 2864&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 2 := 2864&3
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 2864&3
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 1 := 2864&3
(smt.stats   11   1327  29936  25993  2722/2482/167    1281/85    23   46   20.06)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats   12   1449  33051  30613  2727/2499/182    1402/85    24   49   20.06)
ramon: poll                 wall=1.002s usage=0.952s mem=21236KiB load=0.95 rootload=0.94
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 200665826232 := 2941203292517&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 200665826232 := 2941203292517&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 200665826232 := 2941203292521&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 200665826240 := 2941203292521&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 200665826232 := 2941203292529&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 200665826240 := 2941203292529&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203292545&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547652 := 2941203292545&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203292545&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203294209&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203292545&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203292545&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203294209&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203294209&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203292545&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203294209&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547648 := 2941203298305&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547656 := 2941203296257&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547656 := 2941203292553&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547656 := 2941203294217&214043547662
(smt.stats   13   1583  36234  35613  2790/2560/238    1540/93    26   61   20.36)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547656 := 2941203296267&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547656 := 2941203296265&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547640 := 2941203296265&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547624 := 2941203296265&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043545608 := 2941203296265&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547640 := 2941203296265&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547624 := 2941203296265&214043547662
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 214043547592 := 2941203296265&214043547662
(smt.stats   14   1730  37523  38071  3166/2603/264    1922/108    26   61   20.75)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 200665846729 := 2941203296265&214043547662
(smt.stats   15   1831  39159  40452  3316/2985/270    2182/152    27   69   20.94)
(smt.stats   16   1942  40912  42793  3494/3264/271    2449/152    27   69   21.04)
(smt.stats   17   2064  45137  51905  3510/3280/273    2663/323    28   82   21.13)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 259 := 8193&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 259 := 8193&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 802 := 8193&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 802 := 8195&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 802 := 8193&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 802 := 2019&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 802 := 2019&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 802 := 2019&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 546 := 1187&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 546 := 1187&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 546 := 1187&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 546 := 995&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 4130 := 4131&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 4130 := 4131&856174190650
(smt.stats   18   2198  47110  56655  3760/3281/273    3092/405    29   86   21.25)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 40994 := 41027&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 40994 := 40995&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 40994 := 40995&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 40994 := 40995&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 40994 := 40995&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 40994 := 40995&856174190650
(smt.stats   19   2345  49787  63587  4056/3826/314    3430/519    30   96   21.44)
ramon: poll                 wall=2.000s usage=1.948s mem=22780KiB load=1.00 rootload=0.99
(smt.stats   20   2506  52896  72902  4116/3831/314    3766/519    30   96   21.54)
(smt.stats   21   2607  55491  79350  4328/3914/314    4073/528    30   96   21.63)
ramon: poll                 wall=3.002s usage=2.950s mem=23004KiB load=1.00 rootload=1.00
(smt.stats   22   2718  58467  87571  4577/4337/315    4379/729    31  105   21.74)
(smt.stats   23   2840  61217  99157  4709/4469/317    4708/839    32  115   21.83)
(smt.stats   24   2974  64240 106582  4903/4500/317    5075/841    32  115   21.93)
ramon: poll                 wall=4.000s usage=3.947s mem=23256KiB load=1.00 rootload=1.00
(smt.stats   25   3121  68207 124038  4939/4709/319    5459/988    33  122   21.93)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 22 := 611&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 20 := 579&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 20 := 583&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 80 := 583&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 80 := 599&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 64 := 615&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 967&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 615&13377721728
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 228698418578023 := 34 << 34
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 647&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 775&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 775&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 807&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 1031&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 1095&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 160 := 1031&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 160 := 1031&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 160 := 1031&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 160 := 615&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 128 := 615&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 128 := 615&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 128 := 743&13377721728
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 743 := 34 << 34
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282  72235 133998  5167/4910/375    5816/1167    34  149   22.22)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 4096 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 135 := 34 << 34
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
shl: (shl[42] (bv2int %0) (mod (bv2int %0) 42)) 135 := 34 << 34
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 1 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 1 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 2 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 2 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 4 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 8 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 16 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 32 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 64 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 128 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 256 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 512 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 32 := 584115552256&13377721728
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 584115552256&13377721728
band: (band[42] (shl[42] (bv2int %0) (mod #107 42)) (if (= #587 41) 1 (if #589 3 #704))) 256 := 584115552256&13377721728
(smt.stats   27   3459  76731 154675  5290/5041/431    6426/1289    35  161   22.81)
(smt.stats   28   3560  79521 165649  5361/5108/438    6603/1399    36  170   22.81)
(smt.stats   29   3671  81557 168275  5544/5115/438    6951/1401    36  170   23.01)
(smt.stats   30   3793  84529 182449  5888/5347/438    7317/1408    36  170   23.10)
(smt.stats   31   3927  87154 193513  5997/5742/441    7950/1631    37  200   23.30)
(smt.stats   32   4074  90961 209708  6096/5815/445    8438/1721    38  226   23.40)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 19&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 2 := 19&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 2 := 19&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 2 := 19&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 18 := 27&856174190650
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 26 := 27&856174190650
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 224300372066331 := 40 << 40
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 26 := 26&856174190650
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 8796093022234 := 40 << 40
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 26 := 26&856174190650
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 8796093022234 := 40 << 40
(smt.stats   33   4235  96338 239345  6158/5837/445    9121/1729    38  226   23.62)
(smt.stats   34   4412 102716 254485  6288/6002/452    9685/1821    39  234   23.81)
ramon: poll                 wall=5.000s usage=4.947s mem=25380KiB load=1.00 rootload=1.00
(smt.stats   35   4606 106434 267159  6328/6019/460   10318/1929    40  251   24.03)
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 9 := 393&49
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 457&49
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 0 := 457&49
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1 := 457&49
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 8796093022665 := 6 << 6
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1 := 457&49
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 228698418577865 := 6 << 6
band: (band[42] (shl[64] (bv2int %0) (mod #331 64)) (if (= #723 63) 0 (if #725 1 #869))) 1 := 393&49
shl: (shl[64] (bv2int %0) (mod (+ #107 #330) 64)) 228698418577801 := 6 << 6
(smt.stats   36   4707 108516 279639  6494/6192/471   10535/1931    40  251   24.03)
(smt.stats   37   4818 111605 293231  6547/6193/471   10732/1992    41  313   24.12)
(smt.stats   38   4940 114262 305749  6717/6418/476   11253/2081    42  344   24.22)
(smt.delete-inactive-clauses  :num-deleted-clauses 4)
(smt.stats   39   5074 118628 327652  6748/6424/476   12190/2083    42  344   24.41)
(smt.stats   40   5221 123090 349283  7088/6492/476   12746/2325    43  356   24.61)
ramon: poll                 wall=6.000s usage=5.947s mem=26080KiB load=1.00 rootload=1.00
(smt.stats   41   5382 129139 385694  7484/6863/476   13339/2331    43  356   24.70)
ramon: poll                 wall=7.000s usage=6.947s mem=26672KiB load=1.00 rootload=1.00
(smt.stats   42   5559 135230 403290  7670/7249/476   14122/2336    43  356   25.09)
ramon: poll                 wall=8.000s usage=7.946s mem=26712KiB load=1.00 rootload=1.00
(smt.stats   43   5753 139805 412303  8005/7395/476   14604/2336    43  356   25.28)
ramon: poll                 wall=9.000s usage=8.946s mem=26820KiB load=1.00 rootload=1.00
(smt.stats   44   5966 146350 449674  8214/7819/476   15476/2339    43  356   25.38)
(smt.stats   45   6067 148714 465081  8238/7937/478   15994/2613    44  359   25.47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6178 152547 484274  8291/7951/478   16524/2614    44  359   25.47)
ramon: poll                 wall=10.002s usage=9.948s mem=27116KiB load=1.00 rootload=1.00
(smt.stats   47   6300 155512 498347  8416/8077/479   17065/2860    45  362   25.66)
(smt.stats   48   6434 158919 516911  8522/8200/480   17918/2960    46  379   25.95)
(smt.stats   49   6581 163370 543309  8535/8213/483   18829/2960    46  379   26.15)
ramon: poll                 wall=11.000s usage=10.946s mem=27760KiB load=1.00 rootload=1.00
(smt.stats   50   6742 171825 580303  8547/8223/483   19626/2960    46  379   26.15)
ramon: poll                 wall=12.000s usage=11.946s mem=28084KiB load=1.00 rootload=1.00
(smt.stats   51   6919 181418 623255  8679/8357/484   20383/3409    48  403   26.50)
(smt.stats   52   7113 191050 665560  8708/8377/485   21940/3410    48  403   26.59)
ramon: poll                 wall=13.000s usage=12.945s mem=28396KiB load=1.00 rootload=0.99
(smt.stats   53   7326 202375 733607  8791/8398/485   22430/3669    49  404   26.77)
ramon: poll                 wall=14.000s usage=13.945s mem=28404KiB load=1.00 rootload=1.00
(smt.stats   54   7560 209209 764614  8994/8670/488   23255/3728    50  405   26.77)
(smt.stats   55   7661 213084 781889  9012/8690/489   23707/3973    51  450   26.86)
(smt.stats   56   7772 216991 793320  9030/8693/489   23968/3975    51  450   26.96)
(smt.stats   57   7894 222285 820970  9086/8710/489   24264/3978    51  450   26.96)
ramon: poll                 wall=15.000s usage=14.945s mem=28640KiB load=1.00 rootload=1.00
(smt.stats   58   8028 226231 848141  9113/8774/489   25091/3978    51  450   27.05)
(smt.stats   59   8175 233864 887144  9236/8793/489   26107/3984    51  450   27.25)
(smt.stats   60   8336 240740 926500  9481/8918/489   26934/3986    51  450   27.34)
(smt.stats   61   8513 248807 964645  9572/9250/490   28006/4492    52  459   27.60)
ramon: poll                 wall=16.000s usage=15.945s mem=29128KiB load=1.00 rootload=1.00
(smt.stats   62   8707 257323 997359  9790/9256/490   28769/4508    52  459   27.69)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8921 262703 1043337 10337/9512/490   29523/4510    52  459   27.91)
ramon: poll                 wall=17.002s usage=16.945s mem=29656KiB load=1.00 rootload=1.00
(smt.stats   64   9155 271941 1078633 10443/10053/491   31116/4761    53  466   28.20)
(smt.stats   65   9412 283021 1119568 10807/10130/491   32757/4768    53  466   28.57)
ramon: poll                 wall=18.000s usage=17.943s mem=30332KiB load=1.00 rootload=1.00
(smt.stats   66   9513 285332 1136339 10863/10521/491   34548/4768    53  466   28.76)
(smt.stats   67   9624 291554 1173145 10919/10547/491   35642/4771    53  466   29.05)
ramon: poll                 wall=19.000s usage=18.943s mem=30656KiB load=1.00 rootload=1.00
(smt.stats   68   9746 297156 1201331 11001/10619/491   35996/4773    53  466   29.05)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   69   9880 304504 1232728 11096/10695/491   36668/4778    53  466   29.14)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
ramon: poll                 wall=20.000s usage=19.942s mem=30996KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:08:21 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.999s
ramon: group.utime          19.979s
ramon: group.stime          0.020s
ramon: group.mempeak        31252KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.057s
ramon: loadavg              1.00
