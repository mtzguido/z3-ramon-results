ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:34:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28089 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/UFbQrFYCXMct.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             821115
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   61.7284     10000        49          0            1        2)
(sat.ddfw       1      1   30.3061     20001        98          1            1        3)
(sat.ddfw       1      1   30.7692     40001       196          2            1        5)
(smt.stats    0    101   3493    263  1266/1110/115     103/10     6   20   52.04)
ramon: poll                 wall=1.000s usage=0.777s mem=54076KiB load=0.78 rootload=0.77
(sat.ddfw       1      1   28.0899     70001       343          3            1        8)
(smt.stats    1    202   3907    572  1534/1367/116     211/12     7   22   52.13)
(sat.ddfw       1      1   25.3325    110001       539          4            1       12)
ramon: poll                 wall=2.002s usage=1.753s mem=54308KiB load=0.97 rootload=0.97
(smt.stats    2    313   5393   1689  2304/1795/116     339/42     7   22   52.33)
(smt.stats    3    414   7475   3437  2431/2194/116     452/43     7   22   52.42)
(smt.stats    4    525   9055   4582  2533/2281/120     554/79     8   32   52.42)
(sat.ddfw       1      1   21.9969    160000       784          5            1       17)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #885 #889) 64)) 0 := 4 << 8
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #885 #889) 64)) 0 := 4 << 8
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #885 #889) 64)) 0 := 4 << 8
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #118))) 1 := 17592186044416 << 9
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #118))) 1 := 17592186044416 << 9
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #118))) 1 := 17592186044416 << 9
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&0
shl: (shl[53] (bv2int %0) (+ 53 (* 9007199254740991 #118))) 1 := 17592186044416 << 9
(smt.stats    5    647  14053   7669  2622/2380/132     677/87    10   35   52.64)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 1 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 2 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 2 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 15 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 14 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 12 := 15&512
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  16716   9167  2688/2455/146     767/82    12   52   52.74)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 14 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 12 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 14 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&512
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 14 := 15&512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&70368744177152
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 12 := 15&70368744177152
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&70368744177152
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 8 := 15&70368744177152
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&1536
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 2 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&1536
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 2 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 8 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 2 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 4 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 4 := 15&1536
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 8 := 15&6144
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 8 := 15&6144
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 3 := 15&9216
(smt.stats    7    859  18420  11913  2951/2699/204     889/86    13   65   53.43)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 2 := 15&9728
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 2 := 15&9216
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 15&9216
band: (band[53] (if (or #632 #633 #634 #635 #636) 0 (if #637 1 #772)) (shl[53] (bv2int %0) (+ 53 #788))) 5 := 15&9216
(smt.stats    8    981  21122  14769  3056/2751/220    1025/94    15   70   53.43)
ramon: poll                 wall=3.000s usage=2.681s mem=55712KiB load=0.93 rootload=0.93
(smt.stats    9   1115  26674  19256  3071/2817/230    1183/94    16   74   53.55)
(smt.stats   10   1216  31297  23667  3079/2823/230    1275/112    17   86   53.65)
(sat.ddfw       1      1   19.2743    220001      1078          6            1       23)
(smt.stats   11   1327  37120  28712  3081/2829/230    1384/112    17   86   53.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  41390  32789  3088/2836/234    1517/115    18   89   53.79)
(smt.stats   13   1583  47732  38913  3111/2859/236    1648/131    20   99   53.91)
(smt.stats   14   1730  54637  45797  3120/2860/236    1795/131    20   99   53.91)
(smt.stats   15   1831  58433  50276  3126/2872/236    1897/131    20   99   53.91)
(smt.stats   16   1942  61730  55975  3131/2879/237    2011/131    21  100   54.05)
(smt.stats   17   2064  66484  60253  3139/2882/237    2145/131    21  100   54.05)
(smt.stats   18   2198  71488  65088  3157/2892/237    2277/131    21  100   54.05)
ramon: poll                 wall=4.000s usage=3.635s mem=56220KiB load=0.95 rootload=0.96
(smt.stats   19   2345  75957  70400  3202/2917/238    2428/138    22  100   54.05)
(sat.ddfw       1      1   16.9409    290001      1421          7            1       30)
(smt.stats   20   2506  80341  75286  3206/2954/238    2600/138    22  100   54.15)
(smt.stats   21   2607  83857  78726  3214/2954/238    2701/138    22  100   54.15)
(smt.stats   22   2718  87063  83094  3222/2968/238    2819/139    22  100   54.15)
(smt.stats   23   2840  90176  86750  3270/2975/238    2958/143    22  100   54.25)
(smt.stats   24   2974  92276  93724  3339/3040/238    3142/148    22  100   54.54)
(smt.stats   25   3121  98148 103006  3347/3095/238    3377/148    22  100   54.54)
ramon: poll                 wall=5.000s usage=4.565s mem=56596KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   15.4143    370001      1813          8            1       38)
(smt.stats   26   3282 101815 109535  3471/3102/238    3561/156    22  100   54.64)
(smt.stats   27   3459 106013 115573  3684/3432/239    3851/211    23  105   54.88)
(smt.stats   28   3560 109719 121403  3700/3447/240    4000/211    23  105   54.88)
ramon: poll                 wall=6.000s usage=5.564s mem=56904KiB load=1.00 rootload=1.00
(smt.stats   29   3671 114828 131306  3705/3453/240    4131/243    24  110   54.88)
(smt.stats   30   3793 120793 143671  3731/3454/240    4270/243    24  110   54.88)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 0 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175726593
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175751169
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696175751169
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&52742131154945
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&52742130761729
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&52742130761729
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696176406529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696176406529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696182697985
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696182697985
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33698313404417
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33696182697985
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33698313404417
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33698313404417
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33698313404417
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33706903339009
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33706920116225
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33809982554113
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&33844342292481
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&34084860461057
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&34084860461057
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 1 := 33696175725919&35184372088833
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 52 #885 #889) 64)) 4611721202799476737 := 17944167204257792 << 49
(sat.ddfw       1      1   14.1443    460001      2254          9            1       47)
(smt.stats   31   3927 123165 148983  3996/3485/240    4470/254    24  110   55.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 126548 156538  4006/3750/351    4787/282    25  131   55.28)
(smt.stats   33   4235 131940 165892  4067/3814/354    4951/382    27  157   55.28)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 85899345920 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 85899345920 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 55834574880 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 55834575392 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 55834574880 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607552 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608064 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608096 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539607584 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608064 := 269569405807358&9007199254740512
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608096 := 269569405807358&9007199254740512
(smt.stats   34   4412 138845 181787  4178/3878/360    5167/400    28  160   55.82)
ramon: poll                 wall=7.000s usage=6.564s mem=57756KiB load=1.00 rootload=0.99
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608128 := 269569405807358&9007199254740986
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 51539608128 := 269569405807358&9007199254740986
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 17179871808 := 269569405807358&9007199254740989
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 17179873924 := 269569405807358&9007199254740989
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359742016 := 269569405807358&35459250061313
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359742080 := 269569405807358&35459250061313
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359742208 := 269569405807358&35459250061313
(smt.stats   35   4606 141205 188218  4527/3982/418    5676/420    28  160   56.11)
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838529
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838545
band: (band[53] (if (or #596 #601 #606 #611 #615) 0 (if #591 1 #863)) (shl[64] (* 2 #381) (mod #893 64))) 34359749200 := 269569405807358&35459266838609
(smt.stats   36   4707 143002 197430  4861/4409/443    5991/425    28  160   56.31)
(smt.stats   37   4818 144527 205625  5219/4664/449    6348/607    29  188   56.59)
(smt.stats   38   4940 146968 216079  5343/4986/449    6735/608    29  188   56.69)
(smt.delete-inactive-clauses  :num-deleted-clauses 151)
(sat.ddfw       1      1   13.0565    560001      2745         10            1       57)
(smt.stats   39   5074 155061 246446  5438/5185/451    7248/789    30  188   56.78)
ramon: poll                 wall=8.000s usage=7.564s mem=58876KiB load=1.00 rootload=1.00
(smt.stats   40   5221 167059 303002  5444/5191/451    7981/890    31  191   56.88)
(smt.stats   41   5382 176518 355573  5465/5208/451    8588/890    31  191   56.97)
(smt.stats   42   5559 181187 373238  5501/5243/453    9375/1601    32  204   57.07)
ramon: poll                 wall=9.000s usage=8.563s mem=59372KiB load=1.00 rootload=1.00
(smt.stats   43   5753 190242 416221  5508/5253/454    9745/2026    33  230   57.17)
(sat.ddfw       1      1   12.0892    670001      3284         11            1       68)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5966 198690 444934  5724/5439/460   10386/2194    34  238   57.45)
(smt.stats   45   6067 203453 467728  5731/5446/460   10674/2194    34  238   57.70)
ramon: poll                 wall=10.000s usage=9.563s mem=60024KiB load=1.00 rootload=1.00
(smt.stats   46   6178 208129 490810  5734/5449/460   11149/2273    35  240   58.14)
(smt.stats   47   6300 214646 514931  5776/5451/460   11324/2273    35  240   58.14)
(smt.stats   48   6434 220779 550300  5791/5506/460   11631/2273    35  240   58.14)
(sat.ddfw       1      1   11.2518    790001      3872         12            1       80)
(smt.stats   49   6581 226770 580645  5812/5513/460   12142/2273    35  240   58.35)
ramon: poll                 wall=11.000s usage=10.562s mem=60356KiB load=1.00 rootload=1.00
(smt.stats   50   6742 234306 597725  5882/5546/460   12374/2274    35  240   58.35)
(smt.stats   51   6919 239817 621653  5926/5633/461   12642/2797    36  242   58.45)
(smt.stats   52   7113 248510 654843  5980/5659/462   12983/2799    36  242   58.54)
ramon: poll                 wall=12.000s usage=11.562s mem=60624KiB load=1.00 rootload=1.00
(smt.stats   53   7326 259563 706303  6025/5701/464   13278/2816    37  255   58.64)
(sat.ddfw       1      1   10.5161    920001      4509         13            1       93)
ramon: poll                 wall=13.000s usage=12.561s mem=61892KiB load=1.00 rootload=1.00
(smt.stats   54   7560 264719 735301  6476/5768/464   13589/2826    38  277   59.90)
(smt.stats   55   7661 269622 753531  6478/6171/464   13746/2826    38  277   59.90)
ramon: poll                 wall=14.000s usage=13.561s mem=63808KiB load=1.00 rootload=1.00
(smt.stats   56   7772 273339 777716  6484/6174/465   14014/2856    39  279   60.00)
(sat.ddfw       1      1    9.8668   1060001      5196         14            1      108)
(smt.stats   57   7894 276471 794432  6557/6230/466   14210/2875    40  279   60.00)
(smt.stats   58   8028 279566 820810  6594/6287/469   14725/2875    40  279   60.09)
ramon: poll                 wall=15.000s usage=14.560s mem=63856KiB load=1.00 rootload=1.00
(smt.stats   59   8175 285103 851785  6611/6295/470   14949/2908    41  321   60.09)
(smt.stats   60   8336 293063 904553  6621/6314/471   15264/2975    42  326   60.09)
ramon: poll                 wall=16.000s usage=15.560s mem=63928KiB load=1.00 rootload=1.00
(smt.stats   61   8513 300622 942279  6698/6319/471   15652/2980    42  326   60.19)
(sat.ddfw       1      1   9.28678   1210001      5931         15            1      123)
ramon: poll                 wall=17.000s usage=16.560s mem=63952KiB load=1.00 rootload=1.00
(smt.stats   62   8707 308021 977156  6823/6397/471   15946/2987    42  326   60.29)
ramon: poll                 wall=18.000s usage=17.560s mem=64012KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8920 320017 1055234  6960/6637/471   16477/2989    42  326   60.93)
(sat.ddfw       1      1   8.77001   1370001      6715         16            1      139)
(smt.stats   64   9154 329454 1090190  6973/6664/477   16890/3253    43  353   61.03)
ramon: poll                 wall=19.002s usage=18.562s mem=64076KiB load=1.00 rootload=1.00
(smt.stats   65   9411 342845 1179725  7323/6900/477   17266/3253    43  353   61.12)
(smt.stats   66   9512 346882 1200071  7346/7040/478   17430/3333    44  353   61.12)
ramon: poll                 wall=20.000s usage=19.560s mem=64140KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:35:02 2024
ramon: root.execname        z3
ramon: root.utime           19.610s
ramon: root.stime           0.000s
ramon: group.total          19.620s
ramon: group.utime          19.612s
ramon: group.stime          0.008s
ramon: group.mempeak        64652KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              0.98
