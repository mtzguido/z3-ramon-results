ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:43:32 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25165 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/dRgSGnyebGQc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             100843
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2144    167  1149/999/95     103/21     3   14   19.25)
(smt.stats    1    202   3099    540  1658/1494/96     210/29     4   16   19.34)
(smt.stats    2    313   4640   1229  1890/1724/97     346/51     5   16   19.34)
(smt.stats    3    414   7277   3228  2001/1786/98     459/62     6   17   19.44)
(smt.stats    4    525   9447   5018  2161/2006/104     579/114     9   27   19.54)
(smt.stats    5    647  11964   6137  2623/2420/107     710/151    11   34   19.74)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  17667  11787  2659/2445/108     825/161    12   36   19.74)
ramon: poll                 wall=1.000s usage=0.940s mem=20908KiB load=0.94 rootload=0.93
(smt.stats    7    859  22104  14696  2685/2462/108     960/162    12   36   19.83)
(smt.stats    8    981  25173  16674  2813/2593/111    1077/197    13   46   19.93)
(smt.stats    9   1115  28899  22667  2813/2597/111    1214/197    13   46   19.93)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&2199023255551
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&2198989701119
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 6597036212223 := 1178 << 25
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&2199023255551
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&2199023255551
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&2198989701119
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 6597036212223 := 1178 << 25
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 2199023255553 := 1178 << 25
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 2199023255553 := 1178 << 25
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 33554432 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 33554431 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 33554430 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 33554428 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 1 := 589 << 26
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 588 := 589 << 26
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 588 := 589 << 26
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 588 := 589 << 26
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 1 := 589 << 26
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 33554432 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 33554431 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 33554431 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 33554430 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 4 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 8 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 16 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 32 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 64 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 128 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 256 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 512 := 33554432&39527120896
(smt.stats   10   1216  30319  25786  2970/2642/134    1311/216    14   47   20.52)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 391 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 392 := 33554432&39527120896
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 33554432&39527120896
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 416 := 33554432&39527120896
(smt.stats   11   1327  31065  27969  3069/2744/207    1499/227    15   65   20.42)
(smt.stats   12   1449  32366  34638  3289/3069/208    1855/258    16   73   20.62)
(smt.stats   13   1583  34160  40143  3311/3079/213    2139/412    17   78   20.62)
(smt.stats   14   1730  35947  49516  3414/3121/213    2328/415    17   78   20.71)
(smt.stats   15   1831  37193  53372  3433/3198/215    2427/450    18   86   20.71)
(smt.stats   16   1942  38507  57550  3479/3255/216    2545/453    19   87   20.88)
(smt.stats   17   2064  40836  64891  3493/3269/217    2807/453    19   87   20.88)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 64 := 64&2199023255291
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 2199023255291 := 2199023255290 << 6
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 64 := 64&2199023255291
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 2199023255291 := 2199023255290 << 6
(smt.stats   18   2198  44521  75937  3523/3293/218    3071/564    21   91   20.88)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 64 := 64&1099511627647
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 3298534883199 := 2199023255290 << 6
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 64 := 64&1099511627701
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 64 := 64&1099511627701
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 63 := 64&1099511627700
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 11 := 64&1099511627648
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 63 := 64&1099511628445
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 62 := 64&1099511628444
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 61 := 64&1099511628443
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 10 := 64&1099511628392
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 12 := 64&1099511628392
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 17 := 64&1099511628392
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 16 := 64&1099511628392
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 32 := 64&1099511628392
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 32 := 64&1099511628392
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 16 := 64&1099511628392
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 32 := 64&1099511628392
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 32 := 64&1099511628392
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 64 := 64&1099511628392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 3298534883944 := 2199023255290 << 6
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 8 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 2190231994368 := 1099511627645 << 7
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 8 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 2190231994368 := 1099511627645 << 7
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 2190231994368 := 1099511627645 << 7
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 2190231994368 := 1099511627645 << 7
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 8 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 8 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 8 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 16 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 16 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 32 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 32 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 64 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 64 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 4 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 4 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 4 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 1 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 1 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 1 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 1 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 1 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 64 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 64 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 8 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 8 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 64&2199023238784
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 2 := 64&2199023238784
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 4 := 64&2199023238784
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   19   2345  46844  83823  3649/3395/295    3279/625    22  111   21.10)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 4 := 64&2199023238784
(smt.stats   20   2506  49897  90027  3706/3466/317    3540/625    22  111   21.10)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 2 := 2&1099511627649
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 2 := 2&1099511627650
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 3298534883202 := 2199023255628 << 1
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 2 := 2&2199023255487
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 4398046511039 := 2199023255628 << 1
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 2 := 2&2199023255487
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 4398046511039 := 2199023255628 << 1
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 2 := 2&152
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 2 := 2&152
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 2 := 2&152
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 2 := 2&152
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 2&152
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 128 := 1099511627814 << 2
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 2&152
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 128 := 1099511627814 << 2
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 2&152
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 151 := 1099511627814 << 2
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 2&152
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 151 := 1099511627814 << 2
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 2&152
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 2 := 2&152
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 2&152
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 2 := 2&152
(smt.stats   21   2607  52425  98080  3775/3505/328    3648/703    23  125   21.29)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&140
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 4398046511244 := 2199023255622 << 4
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&140
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 4398046511244 := 2199023255622 << 4
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&140
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 4398046511244 := 2199023255622 << 4
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&141
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 4398046511245 := 2199023255622 << 4
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&1152
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 35184372089984 := 2199023255622 << 4
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&1120
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 1137 := 1099511627811 << 5
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&1120
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 1137 := 1099511627811 << 5
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&1120
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 1137 := 1099511627811 << 5
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&1120
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 1149 := 1099511627811 << 5
(smt.stats   22   2718  56144 104471  3888/3580/338    3785/708    24  129   21.39)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&1120
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 16 := 16&1120
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 16&1120
band: (band[41] (if (= #108 40) 1 (if #572 2 #650)) (shl[41] (bv2int %0) (+ 41 #653))) 16 := 16&1120
ramon: poll                 wall=2.000s usage=1.939s mem=22796KiB load=1.00 rootload=0.98
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 16 := 16&1120
(smt.stats   23   2840  60474 115047  3953/3665/348    3966/718    25  131   21.55)
(smt.stats   24   2974  63644 121913  4023/3709/360    4166/731    26  133   21.94)
(smt.stats   25   3121  68313 132696  4144/3768/362    4527/741    27  137   22.24)
(smt.stats   26   3282  73231 145884  4247/3948/369    4815/900    29  163   22.49)
(smt.stats   27   3459  77683 161757  4274/3992/374    5100/909    30  166   22.49)
(smt.stats   28   3560  80621 172918  4285/4003/375    5330/936    31  172   22.49)
ramon: poll                 wall=3.003s usage=2.941s mem=23916KiB load=1.00 rootload=1.01
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&1153
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 37383395345537 := 12 << 34
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&2199023255441
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&2199023255441
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&2199023255441
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&2199023255441
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&34359738369
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 35218731827201 := 12 << 34
(smt.stats   29   3671  84041 183033  4360/4026/375    5509/937    31  172   22.78)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&2199023255441
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&2199023255441
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&2181843386257
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #729 #733) 64)) 37366215475089 := 12 << 34
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&206158430208
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 20 := 6 << 35
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 0 := 17179869184&206158430208
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #104))) 20 := 6 << 35
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3793  86446 191616  4458/4077/390    5770/1036    32  179   22.87)
(smt.stats   31   3927  87287 194425  4481/4171/396    5923/1036    32  179   23.16)
(smt.stats   32   4074  91271 208027  4897/4556/400    6695/1038    32  179   23.35)
(smt.stats   33   4235  96303 221886  4970/4647/401    6995/1294    33  196   23.35)
(smt.stats   34   4412 103176 240453  5057/4688/401    7820/1373    34  196   23.45)
(smt.stats   35   4606 107947 262812  5118/4818/405    8469/1661    36  210   23.56)
(smt.stats   36   4707 111631 277826  5126/4825/406    8974/1661    36  210   23.69)
(smt.stats   37   4818 116699 290552  5236/4846/406    9258/1663    36  210   23.78)
ramon: poll                 wall=4.000s usage=3.939s mem=25076KiB load=1.00 rootload=0.99
(smt.stats   38   4940 121219 309190  5284/4976/411    9735/1779    37  226   23.88)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
(smt.stats   39   5074 125860 325927  5359/5008/412   10226/1948    38  237   23.88)
(smt.stats   40   5221 132131 346768  5562/5055/412   10657/1952    38  237   23.98)
(smt.stats   41   5382 138136 368005  5691/5301/412   11250/2034    39  246   24.11)
(smt.stats   42   5559 143430 384973  5824/5423/412   11727/2035    39  246   24.30)
ramon: poll                 wall=5.000s usage=4.938s mem=25676KiB load=1.00 rootload=1.00
(smt.stats   43   5753 149618 419408  5959/5557/412   12296/2038    39  246   24.40)
(smt.stats   44   5966 153519 448110  5973/5662/416   12994/2273    40  248   24.49)
ramon: poll                 wall=6.000s usage=5.938s mem=25948KiB load=1.00 rootload=1.00
(smt.stats   45   6067 155508 454346  6052/5663/417   13394/2277    40  248   24.58)
(smt.stats   46   6178 159607 483894  6107/5756/417   13701/2353    41  276   24.68)
(smt.stats   47   6300 165156 521826  6227/5825/417   14209/2358    41  276   24.78)
ramon: poll                 wall=7.000s usage=6.937s mem=26384KiB load=1.00 rootload=1.00
(smt.stats   48   6434 170161 547923  6385/5932/417   15073/2369    41  276   24.87)
(smt.stats   49   6581 176408 581639  6453/6093/418   15856/2537    42  287   24.97)
ramon: poll                 wall=8.000s usage=7.937s mem=26464KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.937s mem=26608KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6742 182068 617298  6654/6151/418   16260/2551    42  287   25.06)
(smt.stats   51   6919 186450 639637  6701/6348/419   16624/2709    43  289   25.26)
(smt.stats   52   7113 191751 667266  6817/6401/420   17472/2714    43  289   25.35)
ramon: poll                 wall=10.000s usage=9.936s mem=26904KiB load=1.00 rootload=1.00
(smt.stats   53   7326 199641 695005  6954/6513/420   17981/2955    44  306   25.45)
ramon: poll                 wall=11.000s usage=10.936s mem=27056KiB load=1.00 rootload=1.00
(smt.stats   54   7560 207047 716371  7054/6688/421   18571/3018    45  320   25.64)
(smt.stats   55   7661 211529 733573  7187/6783/421   18911/3020    45  320   25.74)
ramon: poll                 wall=12.000s usage=11.935s mem=27260KiB load=1.00 rootload=1.00
(smt.stats   56   7772 215888 749417  7265/6897/421   19628/3024    45  320   25.83)
band: (band[41] (if (= #322 63) 1 (if #552 2 #722)) (shl[64] (* 2 #102) (mod #737 64))) 1 := 1&2199023255220
(smt.stats   57   7894 220359 775301  7344/7033/430   20058/3156    46  333   25.93)
(smt.stats   58   8028 223900 786427  7383/7053/430   20458/3156    46  333   26.03)
ramon: poll                 wall=13.000s usage=12.935s mem=27624KiB load=1.00 rootload=1.00
(smt.stats   59   8175 228076 801300  7604/7077/430   20756/3165    46  333   26.12)
(smt.stats   60   8336 231550 811884  7847/7342/430   20979/3167    46  333   26.22)
ramon: poll                 wall=14.000s usage=13.935s mem=27824KiB load=1.00 rootload=1.00
(smt.stats   61   8513 235669 834101  8007/7566/430   21554/3172    46  333   26.31)
(smt.stats   62   8707 241904 863913  8281/7725/430   22059/3175    46  333   26.41)
(smt.stats   63   8920 249335 906527  8667/8353/431   22646/3475    47  334   26.64)
ramon: poll                 wall=15.000s usage=14.934s mem=28228KiB load=1.00 rootload=1.00
(smt.stats   64   9154 262146 977247  8685/8371/431   24036/3475    47  334   26.74)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9411 277169 1075076  8710/8396/432   24521/3882    48  353   26.74)
(smt.stats   66   9512 279688 1090518  8743/8419/432   24842/3883    48  353   26.84)
(smt.stats   67   9623 288057 1163443  8754/8434/432   25129/3883    48  353   26.84)
ramon: poll                 wall=16.000s usage=15.934s mem=28360KiB load=1.00 rootload=1.00
(smt.stats   68   9745 293262 1186543  8805/8437/432   25321/3885    48  353   26.93)
(smt.stats   69   9879 298081 1205393  8930/8532/432   25646/3888    48  353   26.93)
(smt.delete-inactive-clauses  :num-deleted-clauses 525)
(smt.stats   70  10026 301948 1230680  8983/8645/432   25592/3888    48  353   27.03)
(smt.stats   71  10187 307039 1265607  9028/8708/432   25962/3888    48  353   27.03)
(smt.stats   72  10364 314570 1294445  9108/8773/434   26387/4104    49  353   27.03)
ramon: poll                 wall=17.000s usage=16.933s mem=28624KiB load=1.00 rootload=0.99
(smt.stats   73  10558 321355 1323166  9163/8819/435   27053/4105    49  353   27.22)
(smt.stats   74  10771 338683 1365455  9209/8856/436   27609/4173    50  368   27.31)
(smt.stats   75  11005 350737 1440186  9242/8922/436   28283/4173    50  368   27.31)
ramon: poll                 wall=18.000s usage=17.933s mem=28868KiB load=1.00 rootload=1.00
(smt.stats   76  11262 363942 1499183  9403/8930/436   29059/4264    51  369   27.51)
ramon: poll                 wall=19.003s usage=18.934s mem=29188KiB load=1.00 rootload=1.00
(smt.stats   77  11544 373879 1569074  9438/9113/436   30851/4264    51  369   27.70)
(smt.stats   78  11645 379625 1609589  9506/9155/436   31333/4264    51  369   27.70)
(smt.stats   79  11756 391041 1683957  9518/9198/436   32023/4264    51  369   27.79)
(smt.stats   80  11878 396281 1714439  9519/9199/436   32521/4264    51  369   27.79)
ramon: poll                 wall=20.000s usage=19.931s mem=29400KiB load=1.00 rootload=1.00
(smt.stats   81  12012 401234 1736730  9526/9206/437   33061/4508    52  390   27.89)
ramon: end                  Fri Nov  1 18:43:52 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          20.000s
ramon: group.utime          19.972s
ramon: group.stime          0.028s
ramon: group.mempeak        29912KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.00
