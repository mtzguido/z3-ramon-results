ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:06:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24566 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/tPQZSrD9BZka.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             173153
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4062   1354  1182/1065/99      91/5     4   18   19.07)
(smt.stats    1    202   6457   2349  1684/1516/103     190/16     6   23   19.17)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 4 := 226&4
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 226&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #826 #830) 64)) 4 := 4 << 7
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 226&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #826 #830) 64)) 4 := 4 << 7
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 4 := 226&4
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 8 := 226&12
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 16 := 226&28
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 32 := 226&60
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #826 #830) 64)) 60 := 60 << 7
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 32 := 226&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #826 #830) 64)) 32 := 32 << 7
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 16 := 226&16
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 8 := 226&8
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 3 := 226&4
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 2 := 226&4
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 226&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #826 #830) 64)) 4 := 4 << 7
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 226&0
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #105))) 1 := 0 << 8
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 226&0
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #105))) 1 := 0 << 8
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 226&0
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #105))) 1 := 0 << 8
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 226&0
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #105))) 1 := 0 << 8
(smt.stats    2    313   8735   4257  1948/1750/149     316/20     8   35   19.46)
(smt.stats    3    414  10820   6167  2041/1848/156     407/47    11   46   19.55)
(smt.stats    4    528  11382   7260  2514/2277/161     482/78    13   72   19.74)
(smt.stats    5    650  14066  10382  2635/2379/163     606/92    14   76   19.84)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 1&2199023255554
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #105))) 0 := 1099511627777 << 1
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 1&2199023255554
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #105))) 0 := 1099511627777 << 1
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 1&281474976710654
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #105))) 0 := 140737488355327 << 1
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 1&2199023255552
band: (band[48] (if (= #109 47) 1 (if #599 3 #732)) (shl[48] (bv2int %0) (+ 48 #735))) 1 := 1&2199023255552
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 1&2199023255552
band: (band[48] (if (= #109 47) 1 (if #599 3 #732)) (shl[48] (bv2int %0) (+ 48 #735))) 1 := 1&2199023255552
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 1 := 1&2199023255552
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 1 := 1&2199023255552
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    751  16750  14246  2676/2419/192     700/106    15   81   19.95)
(smt.stats    7    862  18786  16987  2733/2459/192     817/109    16   87   20.14)
(smt.stats    8    984  20177  20318  2913/2663/193     920/125    17   89   20.14)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 2 := 248682535433058&248682535433087
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 2 := 248682535433058&248682535433059
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433059
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433059
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433061
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433089
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433215
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433215
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433213
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433059
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433061
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433089
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433217
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433217
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436289
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433217
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433217
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433217
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433217
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535433729
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535434241
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535434241
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436289
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436289
(smt.stats    9   1118  22380  23995  2993/2719/247    1081/143    18   92   20.43)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436289
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436509
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436509
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436509
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436509
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436509
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436509
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436481
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436481
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&248682535436549
(smt.stats   10   1219  23119  25321  3084/2744/268    1213/159    19  106   20.82)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901263501
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901269641
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901269641
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901269645
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901303437
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901286029
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901286029
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901287053
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901173385
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901154953
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&249796339172493
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&249796339172489
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&249796339172489
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&249796339172489
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901632137
(smt.stats   11   1330  24317  29904  3410/3093/329    1479/179    20  118   21.02)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901679241
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901679241
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901679241
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901679241
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901679241
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124901679241
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124902596749
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124902596749
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124902596745
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124902596749
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124903121033
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124903121033
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250124936675465
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 248682535433058&250125006930057
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1452  26573  37369  3640/3387/374    2014/197    21  135   21.30)
(smt.stats   13   1586  29969  46022  3671/3415/375    2352/465    22  140   21.49)
ramon: poll                 wall=1.000s usage=0.935s mem=23256KiB load=0.93 rootload=0.92
(smt.stats   14   1733  39380  74358  3690/3432/375    2643/466    22  140   21.70)
(smt.stats   15   1834  43234  81746  3793/3511/375    2765/468    22  140   21.80)
(smt.stats   16   1945  44223  85555  3804/3526/375    2948/468    22  140   21.89)
(smt.stats   17   2067  47049  95449  3850/3540/384    3304/659    23  143   21.89)
(smt.stats   18   2201  52444 112787  3869/3594/387    3536/836    25  188   21.99)
(smt.stats   19   2348  58406 130796  3874/3596/387    3752/858    26  198   22.20)
(smt.stats   20   2509  63519 140554  3985/3682/387    4047/858    26  198   22.30)
(smt.stats   21   2610  68054 152707  3990/3690/387    4205/859    26  198   22.39)
(smt.stats   22   2721  72489 168109  4024/3727/389    4397/886    27  212   22.49)
(smt.stats   23   2843  76180 184089  4245/3916/390    4617/915    28  227   22.58)
(smt.stats   24   2977  79213 198537  4473/4176/392    5312/919    28  227   22.68)
ramon: poll                 wall=2.000s usage=1.935s mem=24304KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3124  83671 217500  4496/4199/398    6076/1292    30  255   22.87)
(smt.stats   26   3285  92213 254892  4507/4209/398    6569/1292    30  255   22.97)
(smt.stats   27   3462  96714 275612  4700/4397/400    7039/1480    31  273   23.06)
(smt.stats   28   3563 100447 289080  4733/4403/400    7953/1530    32  286   23.25)
(smt.stats   29   3674 103676 299612  4799/4451/400    8098/1530    32  286   23.25)
(smt.stats   30   3796 107084 314221  4878/4522/400    8380/1534    32  286   23.25)
(smt.stats   31   3930 111317 331421  4920/4620/405    8943/1855    33  288   23.35)
ramon: poll                 wall=3.000s usage=2.934s mem=24816KiB load=1.00 rootload=1.00
(smt.stats   32   4077 117509 355330  4953/4623/405    9267/1861    33  288   23.45)
(smt.stats   33   4238 122512 386102  4970/4670/405    9516/1904    34  339   23.54)
(smt.stats   34   4415 122865 392793  4971/4671/405    9727/1904    34  339   23.79)
(smt.stats   35   4609 126665 422305  5058/4677/406   10327/2116    35  342   23.91)
(smt.stats   36   4710 127972 437631  5376/4786/406   10532/2119    35  342   24.00)
(smt.stats   37   4821 129190 446973  5573/5097/406   10764/2119    35  342   24.00)
(smt.stats   38   4943 133509 477846  5649/5349/407   11420/2278    36  344   24.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 159)
(smt.stats   39   5077 138848 495366  5729/5354/408   12037/2286    36  344   24.19)
ramon: poll                 wall=4.000s usage=3.934s mem=25644KiB load=1.00 rootload=1.00
(smt.stats   40   5224 143835 504234  5778/5454/408   12234/2592    37  362   24.29)
(smt.stats   41   5385 150573 538157  6055/5515/408   12652/2604    37  362   24.38)
(smt.stats   42   5562 155834 565367  6204/5848/409   13123/2715    38  365   24.48)
ramon: poll                 wall=5.003s usage=4.938s mem=26156KiB load=1.00 rootload=1.01
(smt.stats   43   5756 163477 618705  6556/5935/409   13537/2723    38  365   24.57)
(smt.stats   44   5969 168587 649160  6914/6307/409   14361/2725    38  365   24.76)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6070 170698 666619  6950/6650/411   14543/2964    39  369   24.76)
ramon: poll                 wall=6.000s usage=5.934s mem=26500KiB load=1.00 rootload=0.99
(smt.stats   46   6181 173342 679798  7073/6653/411   15133/2970    39  369   24.95)
(smt.stats   47   6303 178703 702871  7187/6808/412   15972/3025    40  382   25.05)
(smt.stats   48   6437 183726 728413  7338/6913/412   17123/3033    40  382   25.24)
ramon: poll                 wall=7.000s usage=6.934s mem=26756KiB load=1.00 rootload=1.00
(smt.stats   49   6584 187472 742880  7402/7057/412   18052/3192    41  402   25.44)
(smt.stats   50   6745 192905 781149  7530/7143/413   18418/3197    41  402   25.53)
ramon: poll                 wall=8.000s usage=7.934s mem=27268KiB load=1.00 rootload=1.00
(smt.stats   51   6922 204332 853967  7661/7245/413   19753/3486    42  416   25.72)
(smt.stats   52   7116 212590 911518  7851/7397/414   20644/3794    43  421   25.82)
ramon: poll                 wall=9.000s usage=8.933s mem=27524KiB load=1.00 rootload=1.00
(smt.stats   53   7329 221181 984470  8270/7580/414   21281/3795    43  421   26.01)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 905132683 := 948648587&4536160223232
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 905132683 := 948648587&4536160223232
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 883052714 := 948648587&4536160223232
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   54   7563 226439 1027205  8452/7980/414   21921/3800    43  421   26.11)
(smt.stats   55   7664 228966 1043177  8507/8187/414   22484/3800    43  421   26.11)
(smt.stats   56   7775 232779 1083321  8560/8215/414   23004/3802    43  421   26.20)
(smt.stats   57   7897 238127 1122353  8685/8264/414   23802/3809    43  421   26.41)
(smt.stats   58   8031 241828 1152255  8814/8471/414   25004/3810    43  421   26.41)
ramon: poll                 wall=10.000s usage=9.933s mem=28036KiB load=1.00 rootload=1.00
(smt.stats   59   8178 246439 1181366  8975/8524/415   25422/4605    44  423   26.53)
(smt.stats   60   8339 251624 1242125  9434/8727/415   25896/4610    44  423   26.73)
(smt.stats   61   8516 255074 1274576  9719/9209/415   27014/4612    44  423   26.92)
(smt.stats   62   8710 262239 1332860  9910/9440/415   28524/4615    44  423   27.24)
ramon: poll                 wall=11.000s usage=10.909s mem=28916KiB load=0.98 rootload=0.98
(smt.stats   63   8923 269960 1411657 10037/9661/415   29560/4619    44  423   27.34)
(smt.stats   64   9157 276588 1484885 10096/9795/415   30501/4620    44  423   27.43)
(smt.stats   65   9414 282032 1528463 10269/9798/415   31201/4623    44  423   27.53)
(smt.stats   66   9515 283822 1548196 10278/9978/415   31428/4623    44  423   27.53)
(smt.stats   67   9626 289091 1597220 10308/9988/415   32169/4625    44  423   27.62)
ramon: poll                 wall=12.000s usage=11.909s mem=29172KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   68   9748 294818 1651487 10337/10027/415   33032/4626    44  423   27.72)
(smt.stats   69   9882 299304 1709203 10358/10050/415   33828/4628    44  423   27.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 1739)
(smt.stats   70  10029 303160 1743660 10382/10080/416   33647/6405    45  448   27.91)
(smt.stats   71  10190 309451 1820137 10425/10093/416   34042/6406    45  448   27.91)
ramon: poll                 wall=13.000s usage=12.909s mem=29684KiB load=1.00 rootload=1.00
(smt.stats   72  10367 318474 1938767 10455/10155/416   34324/6406    45  448   27.91)
(smt.stats   73  10561 324520 1998754 10507/10177/416   35117/6406    45  448   28.00)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 248682535129424 := 248682535433058&248682535433059
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 248682535072595 := 248682535433058&248682535433059
(smt.stats   74  10774 329248 2041800 10929/10208/416   35752/6411    45  448   28.19)
(smt.stats   75  11008 333758 2084128 11176/10660/421   37251/6870    46  449   28.71)
ramon: poll                 wall=14.000s usage=13.908s mem=30320KiB load=1.00 rootload=1.00
(smt.stats   76  11265 343932 2195520 11260/10883/422   37911/6871    46  449   28.81)
ramon: poll                 wall=15.000s usage=14.908s mem=30832KiB load=1.00 rootload=1.00
(smt.stats   77  11547 350975 2257053 11824/10996/422   38693/6964    47  454   29.00)
(smt.stats   78  11648 353778 2301178 11859/11531/422   38905/6964    47  454   29.00)
(smt.stats   79  11759 356869 2334492 11861/11561/422   39965/6964    47  454   29.09)
(smt.stats   80  11881 360652 2370931 11881/11562/422   40355/6964    47  454   29.19)
(smt.stats   81  12015 362065 2406191 11892/11592/422   40987/6964    47  454   29.38)
(smt.stats   82  12162 367057 2457958 11908/11592/422   41373/6964    47  454   29.38)
(smt.stats   83  12323 368837 2487320 11918/11618/422   41540/6964    47  454   29.38)
(smt.stats   84  12500 370338 2510309 11920/11620/422   42703/6964    47  454   29.48)
ramon: poll                 wall=16.000s usage=15.908s mem=31088KiB load=1.00 rootload=1.00
(smt.stats   85  12694 377663 2575192 12034/11644/422   43599/6965    47  454   29.67)
(smt.stats   86  13141 382913 2663901 12076/11757/422   44935/6965    47  454   29.76)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 1&255086702362624
band: (band[48] (if (= #109 47) 1 (if #599 3 #732)) (shl[48] (bv2int %0) (+ 48 #735))) 1 := 1&255086702362624
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 1&255086702362624
band: (band[48] (if (= #109 47) 1 (if #599 3 #732)) (shl[48] (bv2int %0) (+ 48 #735))) 1 := 1&255086702362624
(smt.stats   87  13398 387735 2714134 12215/11809/422   45404/6966    47  454   29.87)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   88  13680 393695 2791382 12307/11917/422   46039/6967    47  454   30.06)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 0 := 1&250443785568256
band: (band[48] (if (= #109 47) 1 (if #599 3 #732)) (shl[48] (bv2int %0) (+ 48 #735))) 1 := 1&250443785568256
ramon: poll                 wall=17.000s usage=16.908s mem=31600KiB load=1.00 rootload=1.00
(smt.stats   89  13990 399405 2903561 12641/12149/422   46789/6969    47  454   30.15)
(smt.stats   90  14091 401896 2934733 12747/12339/422   47156/6969    47  454   30.25)
(smt.stats   91  14202 403846 2972616 12854/12458/422   47422/6971    47  454   30.25)
(smt.stats   92  14324 405705 3009771 12867/12539/422   47599/6972    47  454   30.25)
band: (band[48] (if (= #360 63) 1 (if #576 3 #819)) (shl[64] (* 2 #343) (mod #834 64))) 2 := 3&250125005946882
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #826 #830) 64)) 531599982657538 := 536561674354688 << 1
(smt.stats   93  14458 408763 3051336 12893/12554/422   47897/6974    47  454   30.34)
(smt.stats   94  14605 410918 3063274 12910/12590/422   48094/6975    47  454   30.34)
(smt.stats   95  14766 414162 3088143 12942/12601/422   48394/6978    47  454   30.34)
ramon: poll                 wall=18.003s usage=17.912s mem=32112KiB load=1.00 rootload=1.00
(smt.stats   96  14943 418965 3171441 13011/12695/423   48867/9409    48  456   30.44)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   97  15137 421802 3196678 13300/12696/423   49694/9411    48  456   30.63)
(smt.stats   98  15350 427887 3314596 13508/13106/423   50445/9411    48  456   30.63)
ramon: poll                 wall=19.000s usage=18.908s mem=32624KiB load=1.00 rootload=1.00
(smt.stats   99  15584 438618 3419369 13618/13201/423   53673/9415    48  456   31.02)
(smt.stats  100  15841 443419 3484005 13776/13355/423   54184/9420    48  456   31.02)
ramon: poll                 wall=20.000s usage=19.908s mem=32880KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 19:06:43 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.978s
ramon: group.utime          19.966s
ramon: group.stime          0.012s
ramon: group.mempeak        33136KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.00
