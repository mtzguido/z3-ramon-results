ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:32:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28141 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/TIX4M73xn1lN.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             815236
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&1
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&1
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 49411 := 49411&49411
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 49411 := 49412 << 15
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 1 := 49411&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 1 := 4 << 15
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2199023255549
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2199023255548
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2199023255295
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 1 := 49411&2
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 2 := 49411&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 2 := 4 << 15
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 49411 := 49411&131072
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&131072
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 2 << 16
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&131072
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 2 << 16
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&131072
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 2 << 16
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&131072
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 2 << 16
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2199023190016
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 1 := 49411&2199023190016
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 49411 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 49410 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 49408 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 49152 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 2 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 49408 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 512 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 1024 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 2048 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 4096 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 8192 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 16384 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&2198956081152
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 32768 := 49411&2198956081152
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 33554431 := 33554432 << 16
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 49411&65536
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 16384 := 49411&65536
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   66.2252     10000        49          0            1        2)
(smt.stats    0    101   5206    975  1191/1076/184      89/17    12   37   52.33)
(smt.stats    1    202   8835   2206  1869/1666/187     187/26    15   43   52.52)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&207246065664
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&2162688
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&11206656
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&11272192
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&16842752
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&131072
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 262144 := 8 << 37
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&65536
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 65536 := 207246000378&65536
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 2199023321088 := 67108866 << 37
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 1114112 := 207246000378&1114112
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 4398047625216 := 134217762 << 37
(sat.ddfw       1      1   37.8826     20001        98          1            1        3)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&1924145348608
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 2199023255551 << 38
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&1924145348608
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 2199023255551 << 38
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&1924145348608
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 1 := 2199023255551 << 38
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 2 := 201850880 << 38
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 2 := 201850880 << 38
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 2 := 201850880 << 38
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 2 := 207246000378&1924145348608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&1924145348608
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 1 := 207246000378&1924145348608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&1924145348608
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #105))) 2199023190015 := 2199023255551 << 38
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000378 := 207246000378&1924145348608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000376 := 207246000378&1924145348608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000368 := 207246000378&1924145348608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 4 := 207246000378&1924145348608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&1924145348608
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 4 := 207246000378&1924145348608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&1924145348608
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 8 := 207246000378&1924145348608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&1924145348608
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 16 := 207246000378&1924145348608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 207246000378&1924145348608
band: (band[41] (if (= #109 40) 1 (if #578 3 #690)) (shl[41] (bv2int %0) (+ 41 #693))) 32 := 207246000378&1924145348608
(sat.ddfw       1      1   39.8406     40001       196          2            1        5)
(smt.stats    2    313  10950   4115  2219/1971/268     305/32    18   59   53.10)
(sat.ddfw       1      1   36.7197     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.799s mem=55416KiB load=0.80 rootload=0.79
(smt.stats    3    414  12080   5500  2520/2204/268     429/38    19   61   53.20)
(smt.stats    4    525  13449   8957  2786/2465/272     603/64    20   62   53.29)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000380 := 1657968003029&207246000381
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000380 := 1657968003029&207246000382
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000380 := 1657968003029&2199022272511
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000380 := 1657968003029&2199022272510
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000380 := 1657968003029&2199022272511
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000380 := 1657968003029&2199022272510
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&2199022272510
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000380 := 1657968003029&207246000382
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&2199022272510
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&2199022272504
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&2199022272504
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&2199022272510
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&2199022272504
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&2199022272480
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&2199022272480
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&207246000386
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246065664 := 1657968003029&207246065666
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246327808 := 1657968003029&207246327810
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207248949248 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207265726464 := 1657968003029&2199022272480
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207265726464 := 1657968003029&2199022272384
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207265726464 := 1657968003029&2199022272506
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207265726464 := 1657968003029&2199022272506
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207274115072 := 1657968003029&2199022272506
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207265726464 := 1657968003029&2199022272506
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207265726464 := 1657968003029&2199022272506
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207265726464 := 1657968003029&2199022272506
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207265726464 := 1657968003029&2199022272506
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207274115072 := 1657968003029&2199022272506
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207274115088 := 1657968003029&2199022272506
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207265726480 := 1657968003029&2199022338042
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207248949248 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000384 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246000640 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246001152 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246002176 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246004224 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246008320 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246016512 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246032896 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246032896 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246065664 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246327808 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246327808 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246852096 := 1657968003029&207248949250
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246016512 := 1657968003029&207248949376
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246016512 := 1657968003029&207248949504
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246016512 := 1657968003029&207248949760
(smt.stats    5    647  16362  14233  2956/2651/351     771/115    23   83   54.11)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246852096 := 1657968003029&207248949248
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246327808 := 1657968003029&207248949248
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207246327808 := 1657968003029&207248424960
(sat.ddfw       1      1   33.2502    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19568  17873  3004/2728/411     893/118    23   83   54.20)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207266250752 := 1657968003029&2199022272384
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207299805184 := 1657968003029&2199022272256
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207299805184 := 1657968003029&207299805696
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207299805184 := 1657968003029&207299805696
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207266250752 := 1657968003029&207266250784
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207266250752 := 1657968003029&207266250784
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207266250752 := 1657968003029&2199022272384
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207299805184 := 1657968003029&2199022272256
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207299805184 := 1657968003029&207299805696
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207299805184 := 1657968003029&207299806208
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207299805184 := 1657968003029&207299807232
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207308193792 := 1657968003029&2199022272000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207308193792 := 1657968003029&207308194816
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 207308193792 := 1657968003029&207308195840
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 208306438144 := 1657968003029&2199022270464
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 208306438144 := 1657968003029&2199021682688
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 208306438144 := 1657968003029&208306440192
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 208306438144 := 1657968003029&208306440192
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 214757277696 := 1657968003029&2199022270464
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 227667345408 := 1657968003029&231928233984
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 227667345408 := 1657968003029&231927709696
(smt.stats    7    859  22878  22134  3138/2862/475    1095/208    25  108   54.49)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 227667345408 := 1657968003029&231924566016
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 227667345408 := 1657968003029&231911983104
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 227667345408 := 1657968003029&227667347456
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 227667345408 := 1657968003029&227669444608
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 231928758272 := 1657968003029&231928760320
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 300648235008 := 1657968003029&300648237056
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 300648235008 := 1657968003029&300648237056
(smt.stats    8    982  26312  27245  3279/3050/525    1425/423    28  167   54.72)
(sat.ddfw       1      1   29.5677    160000       784          5            1       17)
(smt.stats    9   1116  31638  34247  3349/3073/529    1624/450    29  177   54.82)
ramon: poll                 wall=2.000s usage=1.850s mem=57348KiB load=1.05 rootload=1.03
(smt.stats   10   1217  35996  42769  3409/3180/530    1845/513    30  188   54.92)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207299807232
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207299807232
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207299807232
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207301378048
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207301378048
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207366389760
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446742082052685824 := 4398046511090 << 40
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207366389760
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446742082052685824 := 4398046511090 << 40
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207301378048
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207301378048
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207301378048
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&207366389760
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446742082052685824 := 4398046511090 << 40
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&219045429248
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&219045429248
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&219045429248
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&223338299392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446742098024595456 := 4398046511102 << 40
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&219045429248
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 1657968003029&223340398592
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446742098026694656 := 4398046511102 << 40
(smt.stats   11   1328  39528  48754  3525/3282/553    2016/549    31  200   55.02)
(sat.ddfw       1      1   26.3509    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  44953  61742  3580/3343/557    2179/585    32  205   55.15)
(smt.stats   13   1584  49778  67272  3662/3387/558    2411/684    34  215   55.24)
(smt.stats   14   1731  58343  81783  3731/3488/559    2645/701    35  225   55.34)
ramon: poll                 wall=3.000s usage=2.826s mem=57896KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   23.6486    290001      1421          7            1       30)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 790580&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446741874686296075 := 549794161828 << 19
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 790580&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446741874686296075 := 549794161812 << 19
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 101194336&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446741874686296065 := 549794161812 << 26
(smt.stats   15   1832  64377  90833  3838/3535/561    2809/717    36  225   55.52)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 101194336&1271310319618
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446743145996615682 := 549794611230 << 26
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 0 := 101194336&1271310319618
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #791 #795) 64)) 18446743145996615682 := 549794611236 << 26
(smt.stats   16   1943  68669  99355  3953/3609/571    3002/749    37  228   55.81)
(smt.stats   17   2065  74161 107513  3965/3701/571    3199/791    38  228   55.81)
(sat.ddfw       1      1   21.4362    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.826s mem=58168KiB load=1.00 rootload=0.99
(smt.stats   18   2199  83169 127518  3979/3723/571    3762/791    38  228   55.81)
(sat.ddfw       1      1   20.4313    460001      2254          9            1       47)
(smt.stats   19   2346  93777 144109  4047/3726/571    4074/805    38  228   56.16)
ramon: poll                 wall=5.000s usage=4.903s mem=58404KiB load=1.08 rootload=1.08
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2507  99859 157314  4230/3964/572    4524/1081    39  236   56.35)
(sat.ddfw       1      1   18.6185    560001      2745         10            1       57)
(smt.stats   21   2608 104996 172284  4299/3984/573    4851/1191    40  237   56.55)
(smt.stats   22   2719 110923 187411  4307/4043/574    5081/1254    41  244   56.55)
(smt.stats   23   2841 118610 204462  4318/4054/576    5344/1254    41  244   56.55)
ramon: poll                 wall=6.000s usage=5.902s mem=59104KiB load=1.00 rootload=1.00
(smt.stats   24   2975 122179 216177  4345/4081/576    5724/1286    42  265   56.66)
(sat.ddfw       1      1   17.0728    670001      3284         11            1       68)
(smt.stats   25   3122 130652 239679  4373/4097/576    5993/1287    42  265   56.75)
ramon: poll                 wall=7.002s usage=6.905s mem=59288KiB load=1.00 rootload=1.00
(smt.stats   26   3283 135656 253632  4457/4191/581    6272/1484    43  267   56.85)
(sat.ddfw       1      1   15.9004    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.990s mem=59328KiB load=1.09 rootload=1.09
(smt.stats   27   3460 141873 266278  4657/4199/581    6797/1516    43  267   57.16)
(smt.stats   28   3561 145766 276805  4771/4402/583    7024/1671    44  281   57.35)
(sat.ddfw       1      1   15.2029    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=9.061s mem=59708KiB load=1.07 rootload=1.07
(smt.stats   29   3672 150214 288566  4961/4521/583    7270/1679    44  281   57.35)
(smt.stats   30   3794 155237 298611  5074/4729/583    7513/1788    45  287   57.45)
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909824 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909824 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909824 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909824 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909824 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909824 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909824 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909824 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909824 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909825 := 828984001514&15032916000
band: (band[41] (if (= #325 63) 1 (if #555 3 #784)) (shl[64] (* 2 #308) (mod #799 64))) 15032909826 := 828984001514&15032916000
(smt.stats   31   3928 158291 312716  5365/4897/583    7903/1798    45  287   57.56)
(sat.ddfw       1      1   14.1186   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=10.061s mem=60348KiB load=1.00 rootload=1.00
(smt.stats   32   4075 163243 330444  5524/5157/598    8396/1915    46  290   57.75)
ramon: poll                 wall=11.000s usage=11.063s mem=60392KiB load=1.00 rootload=1.00
(smt.stats   33   4236 170254 359494  5638/5312/601    8911/2198    48  296   57.75)
(sat.ddfw       1      1   13.1915   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=12.062s mem=60168KiB load=1.00 rootload=1.00
(smt.stats   34   4413 175012 382010  6070/5804/604    9333/2287    49  301   57.84)
(smt.stats   35   4607 180620 396409  6110/5822/604    9736/2289    49  301   58.14)
(smt.stats   36   4708 184744 414829  6196/5894/604    9901/2289    49  301   58.14)
(smt.stats   37   4819 187616 430368  6279/5948/605   10204/2574    50  307   58.23)
(smt.stats   38   4941 189875 441636  6386/6076/606   10572/2574    50  307   58.33)
(sat.ddfw       1      1   12.3829   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=13.062s mem=60796KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 279)
(smt.stats   39   5075 197128 457395  6463/6114/607   10628/2642    51  312   58.33)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5222 204677 471977  6545/6162/607   10927/2648    51  312   58.42)
ramon: poll                 wall=14.000s usage=14.060s mem=61124KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.6662   1540001      7549         17            1      156)
(smt.stats   41   5383 215460 503977  6648/6269/608   11409/2774    52  314   59.08)
ramon: poll                 wall=15.002s usage=15.175s mem=61336KiB load=1.11 rootload=1.11
(smt.stats   42   5560 223520 532423  6681/6370/611   11902/2959    53  329   59.18)
ramon: poll                 wall=16.000s usage=16.175s mem=61692KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.1822   1720001      8431         18            1      174)
(smt.stats   43   5754 242490 607642  6690/6380/611   12290/3012    54  337   59.28)
(smt.stats   44   5967 251404 651643  6743/6433/617   12715/3129    56  383   59.62)
(smt.stats   45   6068 253873 669665  6894/6544/617   12968/3130    56  383   59.72)
ramon: poll                 wall=17.000s usage=17.176s mem=62072KiB load=1.00 rootload=1.00
(smt.stats   46   6179 256210 681054  6911/6566/617   13215/3141    57  428   59.81)
(smt.stats   47   6301 261409 697204  7007/6572/618   13629/3143    57  428   59.81)
ramon: poll                 wall=18.000s usage=18.174s mem=62316KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.5814   1910001      9362         19            1      193)
(smt.stats   48   6435 267467 717681  7117/6772/619   14282/3201    58  444   59.91)
(smt.stats   49   6582 270778 734141  7142/6783/619   14824/3267    59  449   60.00)
ramon: poll                 wall=19.000s usage=19.174s mem=62296KiB load=1.00 rootload=1.00
(smt.stats   50   6743 274532 747703  7373/6812/619   15082/3270    59  449   60.10)
(smt.stats   51   6920 278735 757400  7559/7035/619   15294/3271    59  449   60.33)
(sat.ddfw       1      1   10.0482   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.174s mem=62820KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:33:16 2024
ramon: root.execname        z3
ramon: root.utime           20.190s
ramon: root.stime           0.020s
ramon: group.total          20.229s
ramon: group.utime          20.201s
ramon: group.stime          0.028s
ramon: group.mempeak        63076KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.062s
ramon: loadavg              1.01
