ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:00:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28268 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/GdOxUM8FaXM7.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4150843
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3330    273  1258/1116/96      98/13     3   19   19.07)
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1 := 1023&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 1 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1 := 1023&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 1 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1 := 1023&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 1 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 0 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 0 := 196 << 9
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1023 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1022 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 1020 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 8 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 16 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 32 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 64 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 128 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 256 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 512 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 2 := 1023&100352
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 1023&100352
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 97 := 98 << 10
(smt.stats    1    202   6491   1091  1971/1788/149     198/31     6   33   19.46)
(smt.stats    2    313  11421   2512  2289/2062/151     304/38     8   35   19.56)
(smt.stats    3    414  16486   5289  2491/2257/156     400/45     9   35   19.76)
(smt.stats    4    525  17357   6563  2616/2363/158     494/58    10   45   19.85)
(smt.stats    5    647  19863   8264  2732/2481/161     621/67    11   49   19.95)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  21966  10324  2852/2505/161     729/76    11   49   20.04)
(smt.stats    7    859  25861  13189  2899/2633/161     856/88    12   51   20.04)
(smt.stats    8    981  29016  16324  2918/2664/162     967/94    13   53   20.14)
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&484512
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80897
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80897
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80901
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80900
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80897
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 2 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 2 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 2 := 131071&80898
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&81920
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&98304
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&98304
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&131072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 131072 := 105553116266654 << 16
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&98304
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&131072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 131072 := 105553116266654 << 16
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&131072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 131072 := 105553116266654 << 16
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&112640
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&98304
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&131072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 53 #850 #854) 64)) 131072 := 105553116266654 << 16
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 52776558133326 := 52776558133327 << 17
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 52776558133326 := 52776558133327 << 17
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 52776558133326 := 52776558133327 << 17
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
shl: (shl[54] (bv2int %0) (+ 54 (* 18014398509481983 #103))) 17523332087185 := 52776558133327 << 17
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 131071 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 131070 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 131068 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 131064 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 16 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 32 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 64 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 128 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 256 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 512 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 128 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 256 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 512 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 1024 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 2048 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 4096 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 8192 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 16384 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 32768 := 131071&10354688
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 65536 := 131071&10354688
(smt.stats    9   1115  32476  19684  3161/2893/360    1134/113    15   93   20.95)
band: (band[54] (if (= #386 63) 1 (if #590 3 #843)) (shl[64] (* 2 #101) (mod #858 64))) 0 := 131071&10354688
band: (band[54] (if (= #107 53) 1 (if #611 3 #762)) (shl[54] (bv2int %0) (+ 54 #765))) 36 := 131071&10354688
(smt.stats   10   1216  36030  23827  3283/3011/361    1346/172    16   94   21.53)
ramon: poll                 wall=1.000s usage=0.962s mem=22852KiB load=0.96 rootload=0.94
(smt.stats   11   1327  39998  29095  3336/3028/361    1550/182    16   94   21.63)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  43549  33287  3551/3271/364    1844/272    18  105   21.73)
(smt.stats   13   1583  50293  43854  3598/3283/376    2058/287    19  113   21.82)
(smt.stats   14   1730  58667  59257  3666/3324/376    2223/390    20  147   21.82)
ramon: poll                 wall=2.000s usage=1.961s mem=23148KiB load=1.00 rootload=1.00
(smt.stats   15   1831  61451  65607  3769/3472/378    2359/426    21  147   21.92)
(smt.stats   16   1942  65229  72164  3810/3531/381    2555/443    22  151   21.92)
(smt.stats   17   2064  68951  79985  3836/3535/384    2709/445    22  151   22.01)
(smt.stats   18   2198  73683  93271  3927/3618/385    2944/544    24  171   22.30)
ramon: poll                 wall=3.000s usage=2.961s mem=23660KiB load=1.00 rootload=1.00
(smt.stats   19   2345  78270 103814  4071/3760/387    3251/565    25  179   22.30)
(smt.stats   20   2506  81456 117031  4125/3837/392    3587/649    28  195   22.30)
(smt.stats   21   2607  83241 123432  4311/3860/392    3733/653    28  195   22.39)
ramon: poll                 wall=4.000s usage=3.961s mem=24172KiB load=1.00 rootload=1.00
(smt.stats   22   2718  83704 124942  4431/4075/392    3883/656    28  195   22.58)
(smt.stats   23   2840  84034 125834  4769/4337/392    4031/656    28  195   22.67)
ramon: poll                 wall=5.000s usage=4.961s mem=24172KiB load=1.00 rootload=1.00
(smt.stats   24   2974  85078 128281  5189/4762/392    4185/658    28  195   22.86)
(smt.stats   25   3121  87183 133256  5574/5194/395    4350/781    29  196   22.86)
(smt.stats   26   3282  88764 137966  5764/5321/396    4573/783    29  196   22.96)
ramon: poll                 wall=6.000s usage=5.960s mem=24504KiB load=1.00 rootload=0.99
(smt.stats   27   3459  89339 140144  6051/5508/396    4814/806    30  199   23.05)
(smt.stats   28   3560  92806 154451  6241/5961/397    4955/807    30  199   23.05)
(smt.stats   29   3671  97487 180317  6309/5970/397    5105/866    31  204   23.16)
(smt.stats   30   3793  98894 184499  6618/6037/397    5311/869    31  204   23.35)
ramon: poll                 wall=7.000s usage=6.959s mem=25084KiB load=1.00 rootload=1.00
(smt.stats   31   3927 100965 192950  6812/6341/397    5484/872    31  204   23.34)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 103772 201740  6908/6580/399    5789/912    32  208   23.44)
(smt.stats   33   4235 107750 221020  7158/6878/400    6130/1053    34  225   23.44)
ramon: poll                 wall=8.000s usage=7.959s mem=25084KiB load=1.00 rootload=1.00
(smt.stats   34   4412 113810 239585  7275/6899/400    6656/1059    34  225   23.54)
(smt.stats   35   4606 119452 257731  7337/7040/401    7109/1262    35  231   23.63)
(smt.stats   36   4707 121304 271086  7462/7182/404    7296/1269    36  260   23.73)
(smt.stats   37   4818 123048 277440  7605/7223/404    7498/1270    36  260   23.82)
(smt.stats   38   4940 126603 292303  7734/7442/409    7873/1313    37  268   24.25)
ramon: poll                 wall=9.000s usage=8.950s mem=25852KiB load=0.99 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 130555 304191  7839/7477/410    8152/1409    38  309   24.34)
(smt.stats   40   5221 135139 317323  8000/7565/410    8464/1413    38  309   24.53)
ramon: poll                 wall=10.000s usage=9.950s mem=26108KiB load=1.00 rootload=1.00
(smt.stats   41   5382 141002 331536  8230/7763/410    8835/1417    38  309   24.63)
(smt.stats   42   5559 148031 347473  8338/7983/412    9377/1612    39  310   24.82)
ramon: poll                 wall=11.000s usage=10.949s mem=26364KiB load=1.00 rootload=1.00
(smt.stats   43   5753 157378 372416  8551/8047/412    9922/1629    39  310   24.82)
ramon: poll                 wall=12.000s usage=11.949s mem=26620KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   44   5966 165255 404805  8735/8288/413   10601/1832    40  312   24.92)
(smt.stats   45   6067 167543 412951  8778/8441/414   11093/1993    41  316   25.01)
(smt.stats   46   6178 170577 421378  8922/8498/415   11399/2005    41  316   25.15)
(smt.stats   47   6300 172952 431863  9109/8680/415   11578/2061    42  336   25.25)
(smt.stats   48   6434 174483 437291  9347/8892/415   11811/2061    42  336   25.34)
ramon: poll                 wall=13.000s usage=12.949s mem=26876KiB load=1.00 rootload=1.00
(smt.stats   49   6581 178969 448512  9438/9046/415   12369/2065    42  336   25.54)
(smt.stats   50   6742 183867 467842  9515/9155/416   12672/2134    43  345   25.64)
(smt.stats   51   6919 188635 494313  9651/9234/416   13272/2136    43  345   25.73)
ramon: poll                 wall=14.000s usage=13.949s mem=27388KiB load=1.00 rootload=1.00
(smt.stats   52   7113 193549 515348  9706/9358/416   13909/2142    43  345   25.83)
ramon: poll                 wall=15.000s usage=14.949s mem=27644KiB load=1.00 rootload=1.00
(smt.stats   53   7326 199426 542618 10088/9764/417   14715/2390    44  346   25.92)
(smt.stats   54   7560 205202 574042 10296/9823/417   15844/2399    44  346   26.11)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   55   7661 207789 588477 10470/10028/417   16261/2404    44  346   26.11)
ramon: poll                 wall=16.000s usage=15.949s mem=27900KiB load=1.00 rootload=1.00
(smt.stats   56   7772 210549 600447 10549/10170/417   16532/2407    44  346   26.21)
(smt.stats   57   7894 215090 632019 10584/10276/418   16976/2729    45  357   26.21)
(smt.stats   58   8028 219040 647611 10613/10291/419   17781/2729    45  357   26.30)
(smt.stats   59   8175 225735 675451 10731/10312/419   18405/2898    46  362   26.50)
ramon: poll                 wall=17.000s usage=16.949s mem=28156KiB load=1.00 rootload=1.00
(smt.stats   60   8336 230618 699080 10902/10476/419   18817/2899    46  362   26.59)
(smt.stats   61   8513 235014 722295 11038/10618/419   19671/2906    46  362   26.78)
(smt.stats   62   8707 249370 839246 11077/10739/419   20066/2908    46  362   26.78)
ramon: poll                 wall=18.000s usage=17.948s mem=28924KiB load=1.00 rootload=0.99
(smt.stats   63   8920 254995 857709 11320/10799/420   21331/3191    47  362   26.97)
(smt.stats   64   9154 262503 885391 11458/11031/420   22416/3195    47  362   27.06)
ramon: poll                 wall=19.000s usage=18.948s mem=28924KiB load=1.00 rootload=1.00
(smt.stats   65   9411 274685 929881 11630/11166/420   23050/3199    47  362   27.26)
(smt.stats   66   9512 277049 952172 11648/11334/420   23509/3199    47  362   27.35)
(smt.stats   67   9623 280989 970942 11791/11350/420   23917/3200    47  362   27.35)
(smt.stats   68   9745 286532 999527 11923/11495/420   24348/3206    47  362   27.45)
ramon: poll                 wall=20.000s usage=19.948s mem=29180KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:01:06 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.990s
ramon: group.utime          19.958s
ramon: group.stime          0.032s
ramon: group.mempeak        29436KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.040s
ramon: loadavg              1.00
