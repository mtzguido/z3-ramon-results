ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:40:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25230 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/bQEq7kPHPbrb.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             90021
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 11 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 11 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 11 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 11 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767359
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 687194767359 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
(smt.stats    0    101    871    473  1049/935/103      93/11     6   19   18.89)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 14 := 14&137438953472
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 14&137438953472
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 14&137438953472
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953471
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 13 := 14&137438953469
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 12 := 14&137438953469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953469 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 14&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5 := 2 << 40
(smt.stats    1    202   1970   2343  1226/1088/129     195/15    10   29   19.18)
(smt.stats    2    313   3180   4046  1307/1103/131     307/16    11   31   19.37)
(smt.stats    3    414   3513   4500  1572/1430/136     408/18    12   33   19.56)
(smt.stats    4    525   4383   5673  1596/1454/138     502/26    13   41   19.56)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398046511102
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 8796093022206 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398046511102
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 8796093022206 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398046511102
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 8796093022206 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107380142087
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5505426653191 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107380142087
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5505426653191 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107380142087
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5505426653191 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398044413952
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1 := 4398046511103 << 21
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398044413952
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 20 := 4398046511103 << 21
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398044413952
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 20 := 4398046511103 << 21
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398044413952
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 20 := 4398046511103 << 21
(smt.stats    5    647   6722   8256  1649/1499/153     639/46    17   48   19.66)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748   9439  11658  1670/1520/169     553/55    18  235   19.66)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 5 := 7&2892433981440
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 7&2892433981440
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2892433981440
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773050266723024896 := 5505609766696 << 39
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2892433981440
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773050266723024896 := 5505609766696 << 39
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2893667106816
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773050267956150272 := 5505609767872 << 39
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2892874383360
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773050267163426816 := 5505609767116 << 39
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2893331562496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773045869574094848 := 5505605573248 << 39
(smt.stats    7    859  11469  13944  1742/1525/169     666/58    18  235   19.75)
(smt.stats    8    981  12639  16395  1878/1716/175     813/83    20  236   19.85)
(smt.stats    9   1115  16249  19185  1898/1733/176     946/91    21  240   19.85)
ramon: poll                 wall=1.000s usage=0.952s mem=21056KiB load=0.95 rootload=0.94
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 5 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 5 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 28&1107418946948
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5505465458052 := 5505465458052 << 41
(smt.stats   10   1216  18247  23815  1963/1750/176    1059/96    21  240   20.04)
(smt.stats   11   1327  20133  27183  2046/1859/192    1179/120    22  243   20.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  22197  30557  2112/1944/195    1288/144    24  247   20.14)
(smt.stats   13   1583  23328  32067  2288/1961/195    1429/156    24  247   20.23)
(smt.stats   14   1730  23994  33559  2662/2243/195    1584/168    25  249   20.33)
ramon: poll                 wall=2.000s usage=1.952s mem=21564KiB load=1.00 rootload=0.99
(smt.stats   15   1831  24459  34283  2853/2625/195    1693/170    25  249   20.42)
(smt.stats   16   1942  24831  35164  3206/2795/195    1802/174    25  249   20.71)
(smt.stats   17   2064  25585  37261  3447/3090/195    1930/176    25  249   20.71)
ramon: poll                 wall=3.000s usage=2.951s mem=22096KiB load=1.00 rootload=1.00
(smt.stats   18   2198  26189  39318  3994/3466/195    2074/185    25  249   20.80)
(smt.stats   19   2345  26626  39919  4092/3844/195    2222/186    25  249   21.10)
(smt.stats   20   2506  28355  44927  4736/4576/204    2498/195    26  251   21.10)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 5 := 7&2752804883341
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772904991559060365 := 7158183755860 << 39
(smt.stats   21   2607  29819  48109  4769/4620/206    2597/230    28  272   21.10)
(smt.stats   22   2718  34026  52057  4798/4634/206    2712/232    28  272   21.10)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 3 := 3&2752804883341
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 3&2752804883341
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772904991559060365 := 7161681805578 << 38
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 3&2892408097684
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 3&2892408097684
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772905131162274708 := 7161681805494 << 38
(smt.stats   23   2840  35735  55889  4923/4676/206    2892/234    28  272   21.20)
ramon: poll                 wall=4.000s usage=3.951s mem=22500KiB load=1.00 rootload=1.00
(smt.stats   24   2974  37059  59673  5015/4798/211    3088/254    29  273   21.29)
(smt.stats   25   3121  40945  62200  5035/4870/211    3254/264    30  273   21.29)
(smt.stats   26   3282  44939  66585  5070/4887/211    3464/264    30  273   21.29)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902238754177024 := 4419068483456 << 25
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902238754177024 := 4419068483456 << 25
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902238754177024 := 4419068483456 << 25
(smt.stats   27   3459  47771  72036  5116/4935/211    3643/265    30  273   21.46)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 17 := 28&137438953489
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953489
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902376193130513 := 4408325181120 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 25 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953505
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953497
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902376193130521 := 4408325181120 << 41
(smt.stats   28   3560  49987  75857  5173/4999/224    3781/307    31  274   21.46)
(smt.stats   29   3671  54968  91496  5220/5018/240    3909/336    32  280   21.46)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2752950304768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772900593657970688 := 4408325181574 << 24
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2753214545920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772900593922211840 := 4408326749854 << 24
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2753214545920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772900593922211840 := 4408326749854 << 24
(smt.stats   30   3793  59655 101733  5323/5092/240    4113/352    33  280   21.55)
(smt.stats   31   3927  61734 106252  5398/5188/245    4250/369    34  281   21.65)
ramon: poll                 wall=5.000s usage=4.951s mem=23028KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  64403 108837  5499/5280/245    4433/378    35  281   21.74)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2199023255551 := 2748904535371 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2059420041212 := 2748904339399 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2059420041212 := 2748904339399 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2199023255553 := 2748904535371 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2199023255553 := 2748904535371 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2748883088189 := 2748904339399 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 1 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 4 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 8 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 14 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 1 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 4 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 8 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 8 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 4 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
(smt.stats   33   4235  67985 114159  5850/5674/301    4648/448    36  293   22.04)
(smt.stats   34   4412  72035 121603  5999/5716/301    5003/452    36  293   22.14)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 1&1107418939361
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 1&1107418939361
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 12297814363721433057 := 5505606483476 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 1&1107418939361
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 12297814363721433057 := 5505606483476 << 37
ramon: poll                 wall=6.000s usage=5.951s mem=23612KiB load=1.00 rootload=1.00
(smt.stats   35   4606  76961 129501  6164/5985/307    5375/624    37  295   22.24)
(smt.stats   36   4707  79459 134260  6232/6013/312    5527/625    37  295   22.43)
(smt.stats   37   4818  82308 142108  6353/6099/312    5711/650    38  296   22.43)
(smt.stats   38   4940  84434 148679  6507/6311/313    5888/696    39  299   22.53)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
(smt.stats   39   5074  87553 155200  6565/6349/314    6131/696    39  299   22.62)
ramon: poll                 wall=7.000s usage=6.951s mem=23968KiB load=1.00 rootload=1.00
(smt.stats   40   5221  90940 165212  6607/6377/315    6360/727    40  304   22.62)
(smt.stats   41   5382  98421 180817  6635/6424/315    6552/727    40  304   22.62)
(smt.stats   42   5559 104695 191239  6750/6485/317    6900/775    41  310   22.82)
(smt.stats   43   5753 110302 208699  7044/6584/317    7285/792    42  314   23.01)
ramon: poll                 wall=8.000s usage=7.950s mem=24920KiB load=1.00 rootload=0.99
(smt.stats   44   5966 114558 225894  7331/6875/317    7746/795    42  314   23.49)
(smt.stats   45   6067 118575 243739  7353/7139/319    8025/860    43  320   23.49)
(smt.stats   46   6178 122424 256741  7469/7140/319    8311/862    43  320   23.58)
(smt.stats   47   6300 125508 271844  7557/7274/319    8650/864    43  320   23.68)
(smt.stats   48   6434 128249 281310  7643/7429/320    8985/981    44  326   23.68)
ramon: poll                 wall=9.000s usage=8.950s mem=25168KiB load=1.00 rootload=1.00
(smt.stats   49   6581 131489 295201  7684/7445/320    9366/983    44  326   23.77)
(smt.stats   50   6742 135083 306181  7714/7490/320    9605/985    44  326   23.77)
(smt.stats   51   6919 140844 327374  7745/7516/320    9831/985    44  326   23.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   52   7113 144324 343636  7780/7552/320   10311/989    44  326   23.99)
(smt.stats   53   7326 148506 356310  7872/7574/320   10788/993    44  326   24.09)
ramon: poll                 wall=10.000s usage=9.950s mem=25660KiB load=1.00 rootload=1.00
(smt.stats   54   7560 153788 377343  7990/7666/320   11539/995    44  326   24.18)
(smt.stats   55   7661 155825 383604  8026/7796/321   11801/1121    45  341   24.18)
(smt.stats   56   7772 159147 393658  8056/7819/321   12038/1125    45  341   24.28)
ramon: poll                 wall=11.000s usage=10.950s mem=25840KiB load=1.00 rootload=1.00
(smt.stats   57   7894 164120 405608  8072/7846/321   12257/1125    45  341   24.28)
(smt.stats   58   8028 167297 417213  8142/7866/321   12761/1128    45  341   24.37)
(smt.stats   59   8175 172219 431381  8156/7936/322   12932/1222    46  342   24.37)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2199023255552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 17648170977479098368 := 49605350 << 4
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2199023255552
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 17648170977479098368 := 49605350 << 4
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&3847936278688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 17648172626392121504 := 49605350 << 4
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&3847936278688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 17648172626392121504 := 49605350 << 4
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&793685600
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 3636467859456 := 24802675 << 5
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&793685600
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 3636467859456 := 24802675 << 5
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&793685600
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 3636467859456 := 24802675 << 5
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&793685600
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 3636467859456 := 24802675 << 5
(smt.stats   60   8336 176686 461993  8226/8002/333   13295/1258    47  346   24.47)
(smt.stats   61   8513 181036 479530  8323/8099/334   13607/1262    47  346   24.56)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107418939587
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 18446705598709891267 := 268435546 << 30
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107418939587
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 18446705598709891267 := 268435546 << 30
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107418939587
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 18446696802616869059 := 268435546 << 30
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107418939587
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 18446701200663380163 := 268435546 << 30
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107418939587
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 18446701200663380163 := 268435546 << 30
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107418939589
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 18446701200663380165 := 268435546 << 30
(smt.stats   62   8707 186700 497231  8452/8101/334   13919/1344    48  350   24.66)
ramon: poll                 wall=12.000s usage=11.949s mem=26068KiB load=1.00 rootload=1.00
(smt.stats   63   8920 190814 513738  8604/8321/340   14251/1346    48  350   24.66)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107356025040
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 2305839718523207888 := 16777248 << 35
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107356025072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 2305839718523207920 := 16777248 << 35
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107356025072
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 2305839718523207920 := 16777248 << 35
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107380142064
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 2305839718547324912 := 16777248 << 35
(smt.stats   64   9154 194101 526387  8831/8391/341   14871/1409    49  353   24.94)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1099511627776
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 3636466818425 := 8388624 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1099511627776
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 3636466818425 := 8388624 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1099511627776
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 3636466818425 := 8388624 << 36
(smt.stats   65   9411 198847 548951  8964/8670/347   15274/1411    49  353   25.67)
(smt.stats   66   9512 200173 557189  9400/9166/352   15795/1521    50  363   25.67)
(smt.stats   67   9623 202106 572696  9409/9175/352   16328/1521    50  363   25.76)
ramon: poll                 wall=13.000s usage=12.949s mem=27404KiB load=1.00 rootload=1.00
(smt.stats   68   9745 205306 587247  9500/9233/352   16559/1521    50  363   25.76)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 18446713287383973888 := 16777188 << 23
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 18446713287383973888 := 16777188 << 23
(smt.stats   69   9879 208408 602049  9555/9306/358   16783/1625    51  363   25.86)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772937423126265856 := 5250456 << 23
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772937423126265856 := 5250456 << 23
(smt.delete-inactive-clauses  :num-deleted-clauses 490)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10026 210654 612682  9602/9322/358   16520/1627    51  363   25.95)
(smt.stats   71  10187 219021 658692  9688/9417/358   16788/1627    51  363   26.14)
ramon: poll                 wall=14.000s usage=13.949s mem=27748KiB load=1.00 rootload=1.00
(smt.stats   72  10364 224135 678139  9728/9436/358   17091/1677    52  368   26.24)
(smt.stats   73  10558 228662 697098  9761/9468/360   17635/1677    52  368   26.33)
ramon: poll                 wall=15.000s usage=14.949s mem=28228KiB load=1.00 rootload=1.00
(smt.stats   74  10771 233710 718038  9806/9498/360   18931/1692    53  373   26.53)
(smt.stats   75  11005 240641 755045  9843/9573/363   19800/2122    54  392   26.62)
ramon: poll                 wall=16.002s usage=15.950s mem=28400KiB load=1.00 rootload=1.00
(smt.stats   76  11262 247659 780483  9948/9587/364   20503/2123    54  392   26.81)
ramon: poll                 wall=17.000s usage=16.948s mem=28576KiB load=1.00 rootload=1.00
(smt.stats   77  11544 254083 798616 10150/9688/364   20952/2132    54  392   27.00)
(smt.stats   78  11645 257422 816449 10179/9909/364   21223/2235    55  392   27.00)
(smt.stats   79  11756 260603 833673 10225/9909/364   21453/2235    55  392   27.00)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   80  11878 263729 869617 10470/10001/364   22032/2236    55  392   27.10)
ramon: poll                 wall=18.000s usage=17.948s mem=28812KiB load=1.00 rootload=1.00
(smt.stats   81  12012 266550 884669 10600/10230/364   22373/2237    55  392   27.19)
(smt.stats   82  12159 273443 908780 10772/10342/364   22755/2240    55  392   27.29)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2752661425692
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 2752661425692 := 5505605572540 << 15
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2752661425692
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 2752661425692 := 5505605572540 << 15
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2752661425692
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 2752661425692 := 5505605572540 << 15
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2752661425692
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 2752661425692 := 5505605572540 << 15
(smt.stats   83  12320 282201 949984 10991/10716/370   23278/2403    56  394   27.38)
(smt.stats   84  12497 289426 984405 11007/10733/370   23754/2403    56  394   27.48)
ramon: poll                 wall=19.000s usage=18.948s mem=29056KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.948s mem=29412KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:40:27 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.999s
ramon: group.utime          19.975s
ramon: group.stime          0.024s
ramon: group.mempeak        29672KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.052s
ramon: loadavg              1.00
