ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:50:07 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27716 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/dRJ9UYLYcZtQ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             872922
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 99 := 98 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 111 := 110 << 1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 99 := 98 << 7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 144115188075855872 := 100 << 6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 18446744073709551615 := 288230376151711742 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 148 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 9223372036854775806 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 144115188075855928 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 144115188075855928 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 144115188075855928 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 117 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 119 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 2161727821137838081 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 2197756618156802049 := 122 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 2233785415175766017 := 124 << 51
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   66.6667     10000        49          0            1        2)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 2269814212194729985 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 288230376151711743 := 128 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 292733975779082239 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 297237575406452735 := 132 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 301741175033823231 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 324259173170675711 := 144 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 319755573543305215 := 142 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 288230376151711746 := 142 << 42
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 1 := 71 << 43
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 1 := 71 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 589338232487935 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 589338232487935 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 589338232487935 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 615726511554559 := 140 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 598134325510143 := 136 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 598134325510143 := 136 << 45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 606930418532351 := 138 << 44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 615726511554559 := 140 << 43
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 633318697598975 := 144 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 633318697598975 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 71 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 633318697598975 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 71 := 72 << 42
(sat.ddfw       1      1    34.017     20001        98          1            1        3)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 633318697598975 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 71 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 316659348799488 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 71 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 316659348799488 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 0 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 316659348799488 := 144 << 41
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 0 := 72 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 316659348799489 := 144 << 41
(smt.stats    0    101    636    795   205/57/59     103/23     4   11   51.25)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 571746046443519 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 580542139465727 := 132 << 47
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 131 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 131 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 571746046443519 := 130 << 48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 589338232487935 := 134 << 46
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 562949953421311 := 128 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 562949953421311 := 128 << 49
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 536561674354687 := 122 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 536561674354687 := 122 << 52
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 125 := 124 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 125 := 124 << 51
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 554153860399103 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 554153860399103 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 554153860399103 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 0 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 0 := 126 << 50
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 119 := 120 << 53
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 117 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 117 := 118 << 54
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 510173395288063 := 116 << 55
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 510173395288063 := 116 << 55
(smt.stats    1    202   1583   1584   323/284/140     196/37     6   28   51.44)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 501377302265855 := 114 << 56
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 144 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 144 << 41
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 142 << 42
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 148 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 148 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 148 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 151 := 150 << 38
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 329853488332800 := 75 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 41231686041600 := 150 << 38
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 329853488332800 := 75 << 39
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 149 := 148 << 39
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 325455441821696 := 74 << 40
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 325455441821696 := 74 << 40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82463372083201 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82463372083201 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82463372083201 := 150 << 38
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 659706976665599 := 150 << 38
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 329853488332801 := 75 << 39
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 329853488332801 := 75 << 39
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 650910883643392 := 74 << 40
shl: (shl[57] (bv2int %0) (+ 57 (* 144115188075855871 #90))) 325455441821697 := 74 << 40
(smt.stats    2    313   2702   2966   417/365/163     300/51     8   35   51.74)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 154 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 154 << 36
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 156 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 158 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 160 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 170 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 172 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 174 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 174 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 176 << 25
(sat.ddfw       1      1   34.3053     40001       196          2            1        5)
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 104 := 210 << 8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 103 := 208 << 9
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 102 := 206 << 10
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 101 := 204 << 11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 100 := 202 << 12
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 99 := 200 << 13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 75 := 152 << 37
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 77 := 156 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 156 << 35
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 158 << 34
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 160 << 33
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 80 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 80 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 80 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 80 := 162 << 32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 86 := 174 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 85 := 172 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 83 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 84 := 170 << 28
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 83 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 83 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 83 := 168 << 29
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 86 := 174 << 26
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 85 := 172 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 172 << 27
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 164 << 31
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 82 := 166 << 30
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 88 := 178 << 24
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 89 := 180 << 23
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 90 := 182 << 22
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 91 := 184 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 92 := 186 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 92 := 186 << 20
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 1 := 184 << 21
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 56 #123 #127) 64)) 93 := 188 << 19
(smt.stats    3    415   3566   4746   620/429/173     399/65     8   35   52.38)
ramon: poll                 wall=1.003s usage=0.927s mem=54592KiB load=0.92 rootload=0.92
(sat.ddfw       1      1    29.383     70001       343          3            1        8)
(sat.ddfw       1      1   25.0784    110001       539          4            1       12)
ramon: poll                 wall=2.003s usage=1.928s mem=55064KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.6352    160000       784          5            1       17)
(smt.stats    4    526   4731   5130   670/587/256     504/76     9   56   52.95)
ramon: poll                 wall=3.000s usage=2.924s mem=55200KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   18.9218    220001      1078          6            1       23)
ramon: poll                 wall=4.000s usage=3.925s mem=55364KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   16.7464    290001      1421          7            1       30)
(smt.stats    5    648   5311   5718   881/723/256     625/111    10   59   53.24)
ramon: poll                 wall=5.000s usage=4.925s mem=55740KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.0207    370001      1813          8            1       38)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations         :lemmas         :deletions    )
(smt.stats    6    749   5967   6753  1208/981/256     726/121    10   59   53.34)
ramon: poll                 wall=6.000s usage=5.902s mem=55744KiB load=0.98 rootload=0.97
(smt.stats    7    860   7956   9647  1327/1252/256     841/133    10   59   53.43)
(sat.ddfw       1      1   13.4389    460001      2254          9            1       47)
ramon: poll                 wall=7.000s usage=6.853s mem=55748KiB load=0.95 rootload=0.95
ramon: poll                 wall=8.000s usage=7.838s mem=55748KiB load=0.98 rootload=0.99
(sat.ddfw       1      1   12.2895    560001      2745         10            1       57)
(smt.stats    8    982   9013  10664  1624/1405/256     957/170    10   59   53.62)
ramon: poll                 wall=9.000s usage=8.836s mem=56084KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.3134    670001      3284         11            1       68)
ramon: poll                 wall=10.003s usage=9.838s mem=56168KiB load=1.00 rootload=1.00
(smt.stats    9   1116  10069  11658  1945/1786/256    1088/193    10   59   53.72)
ramon: poll                 wall=11.000s usage=10.833s mem=56308KiB load=1.00 rootload=0.99
(smt.stats   10   1217  11897  13412  2065/1997/256    1179/200    10   59   53.81)
(sat.ddfw       1      1   10.4685    790001      3872         12            1       80)
(smt.stats   11   1328  13465  15120  2219/2089/256    1292/224    10   59   53.91)
ramon: poll                 wall=12.000s usage=11.832s mem=56120KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.844s mem=56468KiB load=1.01 rootload=1.02
(sat.ddfw       1      1   9.87317    920001      4509         13            1       93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  15510  18317  2413/2303/261    1407/260    11   72   54.10)
ramon: poll                 wall=14.000s usage=13.923s mem=56724KiB load=1.08 rootload=1.07
ramon: poll                 wall=15.000s usage=14.923s mem=56724KiB load=1.00 rootload=1.00
(smt.stats   13   1584  17213  20684  2819/2599/261    1540/267    11   72   54.20)
(sat.ddfw       1      1   9.24336   1060001      5196         14            1      108)
ramon: poll                 wall=16.000s usage=15.923s mem=56724KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.923s mem=56724KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   8.69162   1210001      5931         15            1      123)
(smt.stats   14   1731  19444  25033  3175/2850/261    1693/273    11   72   54.39)
ramon: poll                 wall=18.000s usage=17.923s mem=56724KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.923s mem=56724KiB load=1.00 rootload=1.00
(smt.stats   15   1832  20845  27319  3412/3189/261    1801/275    11   72   54.48)
(sat.ddfw       1      1   8.20597   1370001      6715         16            1      139)
ramon: poll                 wall=20.000s usage=19.922s mem=56980KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:50:27 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.000s
ramon: group.total          19.980s
ramon: group.utime          19.976s
ramon: group.stime          0.004s
ramon: group.mempeak        57236KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.00
