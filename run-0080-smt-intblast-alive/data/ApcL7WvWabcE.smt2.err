ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:47:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28594 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1268
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ApcL7WvWabcE.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4105970
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3182    498   679/616/98     101/13     2   18   18.67)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&4096
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 2 << 13
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&4096
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 2 << 13
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1 := 1&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&4096
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 2 << 13
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&4096
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 2 << 13
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 8192&4096
shl: (shl[29] (bv2int %0) (mod (bv2int %1) 29)) 524288 := 524289 << 13
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4096 := 8192&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4095 := 8192&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4096 := 1048574&4096
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1048574 := 1048575 << 13
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4096 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4095 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4094 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 524288&4096
shl: (shl[29] (bv2int %0) (mod (bv2int %1) 29)) 524351 := 524352 << 13
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 16 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 64 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 128 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 256 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 512 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1024 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 2048 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4096 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 128 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 128 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 64 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1024 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 2048 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1024 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1024 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 256 := 524288&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 128 := 516096&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 128 := 8192&4096
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 128 := 8192&4096
(smt.stats    1    202   4112   1536  1107/1009/200     219/40     6   42   19.35)
(smt.stats    2    313   5295   3455  1463/1231/201     392/63     7   43   19.45)
(smt.stats    3    414   6406   5317  1528/1399/210     560/78     8   44   19.55)
(smt.stats    4    525   7924   8796  1741/1496/221     977/148    10   83   19.55)
(smt.stats    5    647  10845  14589  1825/1646/222    1266/214    11   90   19.74)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  12683  20699  1860/1723/226    1453/307    13  100   19.74)
(smt.stats    7    859  14190  27098  1939/1766/226    1711/309    13  100   19.83)
(smt.stats    8    981  16000  33755  1989/1814/228    2431/341    14  102   19.93)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 2&1
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 2 := 786463 << 1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 2&1
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 2 := 786528 << 1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 2&1
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 2 := 786528 << 1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 326&1
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 326 := 786463 << 1
(smt.stats    9   1115  19087  43519  2028/1874/235    2750/404    16  103   20.02)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 573440&1
shl: (shl[29] (bv2int %0) (mod (bv2int %1) 29)) 536870911 := 268722176 << 1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 577350&1
shl: (shl[29] (bv2int %0) (mod (bv2int %1) 29)) 536870911 := 268724131 << 1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 577350&1
band: (band[29] (shl[29] (bv2int %0) (mod #104 29)) (if (= #384 28) 1 (if #386 2 #440))) 1 := 577350&1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 573440&1
band: (band[29] (shl[29] (bv2int %0) (mod #104 29)) (if (= #384 28) 1 (if #386 2 #440))) 1 := 573440&1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 573440&1
band: (band[29] (shl[29] (bv2int %0) (mod #104 29)) (if (= #384 28) 1 (if #386 2 #440))) 1 := 573440&1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1 := 535169024&1
(smt.stats   10   1216  20542  48850  2103/1957/256    3008/445    17  112   20.12)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 3276800&1
band: (band[29] (shl[29] (bv2int %0) (mod #104 29)) (if (= #384 28) 1 (if #386 2 #440))) 1 := 3276800&1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 3276800&1
band: (band[29] (shl[29] (bv2int %0) (mod #104 29)) (if (= #384 28) 1 (if #386 2 #440))) 1 := 3276800&1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1 := 3276800&1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1 := 3276800&1
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8192 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8192 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 16384 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32768 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 65536 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 131072 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 262144 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 524288 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1048576 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 2097152 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1048576 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4194304 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8388608 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 16777216 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 16777216 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 33554432 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8388608 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1048576 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 1048576 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8388608 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 16777216 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8388608 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 16777216 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 33554432 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 67108864 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 134217728 := 135528448&134217728
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 135528448 := 67764224 << 28
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8421376 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8650752 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8912896 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8421376 := 135528448&134217728
(smt.stats   11   1328  22282  53909  2239/2073/355    3349/480    18  135   20.61)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8390656 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8389632 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8389632 := 135528448&134217728
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8455168 := 135528448&134217728
(smt.stats   12   1450  22703  54607  2344/2104/365    3571/481    18  135   20.71)
(smt.stats   13   1584  24818  59425  2646/2346/372    4459/481    18  135   21.00)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&134217728
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 0 := 524288 << 28
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&134217728
shl: (shl[29] (bv2int %0) (mod (bv2int %1) 29)) 536870910 := 524288 << 28
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&134217728
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 0 := 524288 << 28
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&134217728
shl: (shl[29] (bv2int %0) (mod (bv2int %1) 29)) 127139842 := 524288 << 28
(smt.stats   14   1731  27053  73949  2677/2517/373    4876/861    19  142   21.20)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&134217728
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 0 := 524288 << 28
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&134217728
shl: (shl[29] (bv2int %0) (mod (bv2int %1) 29)) 1048578 := 524288 << 28
ramon: poll                 wall=1.000s usage=0.920s mem=22488KiB load=0.92 rootload=0.91
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&134217728
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 0 := 268435679 << 28
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&134217728
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 0 := 268435679 << 28
(smt.stats   15   1832  29419  81220  2745/2547/381    5086/865    19  142   21.49)
(smt.stats   16   1943  30970  85798  2843/2684/387    5550/922    20  147   21.49)
(smt.stats   17   2065  32866  98294  2872/2689/393    6288/922    20  147   21.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2199  36271 120752  2971/2807/396    6439/1406    21  225   21.68)
(smt.stats   19   2346  39652 142511  2991/2833/397    7225/1493    23  231   21.88)
(smt.stats   20   2507  43109 160399  3045/2878/402    8401/1525    24  233   22.13)
(smt.stats   21   2608  45121 165260  3281/2978/402    8672/1528    24  233   22.49)
(smt.stats   22   2719  47040 171773  3405/3146/402    8847/1709    25  258   22.49)
ramon: poll                 wall=2.000s usage=1.921s mem=23856KiB load=1.00 rootload=1.00
(smt.stats   23   2841  49329 178530  3619/3292/402    9192/1712    25  258   22.58)
(smt.stats   24   2975  51270 187972  3747/3457/402    9531/1712    25  258   22.58)
(smt.stats   25   3122  56776 208928  3817/3573/406   10748/1850    26  263   22.77)
(smt.stats   26   3283  60357 222632  3852/3654/406   11320/1850    26  263   22.87)
(smt.stats   27   3460  64550 243921  3905/3661/406   11835/2041    27  272   22.96)
(smt.stats   28   3561  66474 254662  3926/3728/406   12168/2041    27  272   23.07)
ramon: poll                 wall=3.000s usage=2.918s mem=24436KiB load=1.00 rootload=1.00
(smt.stats   29   3672  69558 263401  3969/3730/407   12478/2151    28  277   23.17)
(smt.stats   30   3794  76838 306690  4000/3799/408   12821/2152    28  277   23.17)
(smt.stats   31   3928  81642 330983  4028/3829/409   13118/2181    29  279   23.26)
(smt.stats   32   4075  82769 334753  4172/3832/411   13393/2214    30  296   23.26)
(smt.stats   33   4236  84224 346917  4232/3990/411   13745/2223    30  296   23.36)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 2 := 2&8
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 2 := 2&8
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 2 := 2&8
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 2 := 2&8
(smt.stats   34   4413  85935 364169  4311/4056/412   14045/2227    30  296   23.57)
(smt.stats   35   4607  88589 374973  4380/4118/419   14490/2299    31  326   23.57)
ramon: poll                 wall=4.000s usage=3.917s mem=24872KiB load=1.00 rootload=1.00
(smt.stats   36   4708  90435 391260  4449/4230/419   14822/2299    31  326   23.57)
(smt.stats   37   4819  92394 408295  4459/4261/420   15243/2299    31  326   23.57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941  93715 425362  4519/4275/420   15434/2380    32  339   23.57)
(smt.delete-inactive-clauses  :num-deleted-clauses 838)
(smt.stats   39   5075  96064 445516  4650/4336/420   14920/2383    32  339   23.66)
(smt.stats   40   5222  97834 471337  4652/4449/421   15210/2510    33  342   23.66)
(smt.stats   41   5383 100648 503249  4665/4462/422   15673/2535    34  348   23.66)
(smt.stats   42   5560 103141 519034  4742/4471/422   16352/2536    34  348   23.85)
(smt.stats   43   5754 107497 551670  4754/4551/423   16647/2536    34  348   23.85)
ramon: poll                 wall=5.000s usage=4.915s mem=25300KiB load=1.00 rootload=1.00
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 16 := 58720256&32768
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 16 := 58720256&32768
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8 := 58720256&32768
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 12 := 58720256&32768
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8 := 58720256&32768
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 8 := 58720256&32768
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 4 := 58720256&32768
(smt.stats   44   5967 111655 576111  4895/4688/449   17624/2622    35  350   24.14)
(smt.stats   45   6068 114154 586121  4945/4688/449   17918/2625    35  350   24.14)
(smt.stats   46   6179 115608 594025  4990/4760/449   18196/2932    36  376   24.24)
(smt.stats   47   6301 117873 600960  5111/4851/449   18511/2934    36  376   24.34)
(smt.stats   48   6435 120149 613145  5208/4940/449   18868/2936    36  376   24.43)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 536870817&128
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 536870817&128
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 536870817&128
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 536870817&128
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 32 := 536870817&128
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 536870817&128
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 536870817&128
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 536870817&128
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 536863802&128
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 536863802 := 536867361 << 8
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 536865850&128
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 536865850 := 536868385 << 8
(smt.stats   49   6582 122282 623816  5335/5023/449   19225/2947    36  376   24.53)
ramon: poll                 wall=6.000s usage=5.911s mem=26044KiB load=1.00 rootload=0.99
(smt.stats   50   6743 124292 632186  5663/5176/464   19816/3051    37  379   24.81)
(smt.stats   51   6920 126004 645344  5929/5480/465   20422/3057    37  379   24.91)
(smt.stats   52   7114 130836 659726  6100/5872/466   21073/3059    37  379   25.10)
ramon: poll                 wall=7.000s usage=6.909s mem=26496KiB load=1.00 rootload=1.00
(smt.stats   53   7327 135169 670124  6334/5921/466   21612/3239    38  385   25.20)
(smt.stats   54   7561 139232 691261  6711/6246/466   22404/3244    38  385   25.39)
(smt.stats   55   7662 140517 700083  6759/6536/466   22674/3244    38  385   25.39)
(smt.stats   56   7773 141976 716405  6798/6560/466   22908/3244    38  385   25.39)
ramon: poll                 wall=8.000s usage=7.907s mem=26760KiB load=1.00 rootload=1.00
(smt.stats   57   7895 142540 731977  6820/6611/466   23256/3244    38  385   25.39)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8029 146980 745960  6853/6634/466   24662/3244    38  385   25.48)
(smt.stats   59   8176 153682 783007  6988/6674/466   25574/3249    38  385   25.67)
(smt.stats   60   8337 157959 824915  7024/6812/467   26096/4082    39  389   25.77)
(smt.stats   61   8514 159674 849359  7046/6837/468   27866/4273    40  400   26.00)
ramon: poll                 wall=9.000s usage=8.905s mem=27340KiB load=1.00 rootload=1.00
(smt.stats   62   8708 165495 875059  7150/6838/468   28178/4275    40  400   26.09)
(smt.stats   63   8921 171207 931984  7227/7018/470   30052/4700    41  410   26.28)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9155 180891 1042747  7234/7025/470   30441/4700    41  410   26.28)
(smt.stats   65   9412 185091 1072279  7606/7027/470   31108/4703    41  410   26.47)
ramon: poll                 wall=10.000s usage=9.903s mem=28016KiB load=1.00 rootload=0.99
(smt.stats   66   9513 186884 1090093  7715/7495/470   31721/4703    41  410   26.71)
(smt.stats   67   9624 189959 1102936  7773/7508/471   32262/4782    42  411   26.81)
(smt.stats   68   9746 192435 1119067  7865/7583/471   32838/4782    42  411   26.81)
(smt.stats   69   9880 194717 1141332  7911/7655/471   33067/4782    42  411   26.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 2964)
(smt.stats   70  10027 195121 1154242  7922/7709/472   30411/4782    42  411   26.91)
(smt.stats   71  10188 200283 1226750  7925/7709/472   30969/4881    43  413   26.91)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&1048576
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 0 << 21
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&1048576
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 0 << 21
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&1048576
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 0 << 21
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&1048576
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 0 << 21
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&128
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 221 << 8
(smt.stats   72  10365 204944 1280788  7981/7766/481   32594/5042    44  422   27.15)
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 1&256
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 1 := 221 << 9
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&256
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 0 := 221 << 9
band: (band[29] (shl[32] (bv2int %0) (mod #261 32)) (if (= #459 31) 0 (if #461 1 #521))) 0 := 0&256
shl: (shl[32] (bv2int %0) (mod (+ #104 #260) 32)) 0 := 221 << 9
ramon: poll                 wall=11.000s usage=10.899s mem=28924KiB load=1.00 rootload=1.00
(smt.stats   73  10559 207084 1299764  8126/7792/487   33314/5043    44  422   27.25)
(smt.stats   74  10772 209897 1315008  8258/7954/487   33621/5044    44  422   27.25)
(smt.stats   75  11006 212525 1337901  8593/8120/487   34262/5045    44  422   27.45)
(smt.stats   76  11263 216071 1374188  8823/8442/488   34925/5161    45  427   27.63)
ramon: poll                 wall=12.000s usage=11.899s mem=29436KiB load=1.00 rootload=1.00
(smt.stats   77  11545 222578 1456901  8920/8660/488   37102/5162    45  427   27.83)
(smt.stats   78  11646 225086 1479461  8981/8704/488   37749/5394    46  429   27.83)
(smt.stats   79  11757 226957 1490145  9000/8767/488   37962/5394    46  429   27.92)
(smt.stats   80  11879 229158 1525781  9039/8798/488   38428/5394    46  429   27.92)
(smt.stats   81  12013 232079 1560097  9049/8816/488   39093/5396    46  429   28.11)
ramon: poll                 wall=13.000s usage=12.899s mem=29692KiB load=1.00 rootload=1.00
(smt.stats   82  12160 236802 1588575  9193/8830/488   39541/5402    46  429   28.11)
(smt.stats   83  12321 240026 1627828  9266/9007/491   40025/5732    47  446   28.21)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12498 242372 1637660  9376/9048/491   40449/5733    47  446   28.21)
ramon: poll                 wall=14.000s usage=13.899s mem=29948KiB load=1.00 rootload=1.00
(smt.stats   85  12692 246408 1683034  9481/9183/491   42003/5733    47  446   28.46)
(smt.stats   86  12905 249719 1729359  9533/9272/491   43065/5733    47  446   28.66)
(smt.stats   87  13139 252630 1744623  9571/9310/491   43876/6027    48  446   28.75)
(smt.stats   88  13396 256970 1812513  9592/9360/491   44354/6028    48  446   28.75)
ramon: poll                 wall=15.000s usage=14.899s mem=30460KiB load=1.00 rootload=1.00
(smt.stats   89  13678 261260 1871782  9598/9371/491   46044/6028    48  446   28.85)
(smt.stats   90  13988 263679 1919994  9606/9379/491   46861/6028    48  446   28.95)
(smt.stats   91  14089 264670 1928505  9606/9379/491   47011/6028    48  446   28.95)
(smt.stats   92  14200 266176 1972297  9606/9379/491   47141/6028    48  446   29.04)
(smt.stats   93  14322 267495 2008266  9608/9381/491   47563/6028    48  446   29.04)
(smt.stats   94  14456 268241 2031700  9610/9383/491   48468/6028    48  446   29.14)
(smt.stats   95  14603 270146 2062871  9615/9388/494   49302/6820    49  460   29.14)
(smt.stats   96  14764 274913 2107786  9618/9391/494   50213/6820    49  460   29.24)
ramon: poll                 wall=16.000s usage=15.899s mem=30972KiB load=1.00 rootload=1.00
(smt.stats   97  14941 280226 2210499  9624/9393/494   50777/6820    49  460   29.33)
(smt.delete-inactive-clauses  :num-deleted-clauses 3943)
(smt.stats   98  15135 281567 2244044  9627/9400/496   47764/7067    50  499   29.33)
(smt.stats   99  15348 284614 2298080  9629/9402/497   48528/7067    50  499   29.43)
(smt.stats  100  15582 288149 2359995  9635/9408/499   49591/7261    51  569   29.43)
(smt.stats  101  15839 289820 2398525  9637/9410/500   50553/7261    51  569   29.43)
ramon: poll                 wall=17.000s usage=16.899s mem=31228KiB load=1.00 rootload=1.00
(smt.stats  102  16121 293349 2442262  9639/9412/501   52083/7382    52  598   29.62)
(smt.stats  103  16431 302234 2595142  9641/9414/501   53439/7382    52  598   29.72)
ramon: poll                 wall=18.000s usage=17.899s mem=31484KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  104  16771 307982 2675480  9709/9418/501   54060/7383    52  598   29.72)
(smt.stats  105  16872 309961 2696616  9838/9547/501   54289/7384    52  598   29.81)
(smt.stats  106  16983 311725 2737577  9844/9618/504   54899/7694    53  603   29.81)
(smt.stats  107  17105 314820 2778473  9881/9618/504   55523/7696    53  603   29.91)
(smt.stats  108  17239 319571 2823231  9938/9670/504   56067/7696    53  603   30.01)
ramon: poll                 wall=19.000s usage=18.899s mem=31484KiB load=1.00 rootload=1.00
(smt.stats  109  17386 322911 2879297  9964/9714/504   56483/7696    53  603   30.01)
(smt.stats  110  17547 324442 2907345  9976/9750/505   57168/7915    54  621   30.10)
(smt.stats  111  17724 327942 2963696 10112/9757/505   58064/7919    54  621   30.20)
(smt.stats  112  17918 330807 3007279 10182/9925/506   58667/7919    54  621   30.36)
ramon: poll                 wall=20.000s usage=19.898s mem=31996KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:48:03 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.000s
ramon: group.total          19.981s
ramon: group.utime          19.973s
ramon: group.stime          0.008s
ramon: group.mempeak        32252KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.079s
ramon: loadavg              1.00
