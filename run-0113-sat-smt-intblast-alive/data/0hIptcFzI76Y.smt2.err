ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:46:12 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42710 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1290
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0hIptcFzI76Y.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3638555
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   225/223     0/0  61       0    18.53   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1403 :time 0.00)
(sat.stats    209   4604    0   225/223   207/78  62       0    19.39   0.12)
(sat.stats    209   4604    0   225/223   207/78  62       0    19.29   0.12)
(sat.stats    209   4604    0   225/223   207/78  62       0    19.29   0.12)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 4 :time 0.00)
 (sat-probing :cost 611419.29 :time 0.00)
(sat.stats    209   4604    0   229/227   200/79  62       0    19.29   0.12)
(sat.stats    352   6572    1   229/227   343/197  62       0    19.39   0.14)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    358   6588    2   229/227   349/197  62       0    19.39   0.14)
(sat.stats    369   6601    3   229/227   360/202  62       0    19.39   0.14)
(sat.stats    372   6610    4   229/227   363/205  62       0    19.39   0.14)
(sat.stats    375   6619    5   229/227   366/208  62       0    19.39   0.14)
(sat.stats    378   6641    6   229/227   369/211  62       0    19.39   0.14)
(sat.stats    383   6679    7   229/227   374/214  62       0    19.39   0.14)
(sat.stats    386   6693    8   229/227   377/214  62       0    19.39   0.14)
(sat.stats    391   6731    9   229/227   382/216  62       0    19.39   0.14)
(sat.stats    394   6761   10   229/227   385/217  62       0    19.39   0.14)
(sat.stats    400   6855   11   229/227   391/222  62       0    19.39   0.14)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2979 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3382 :time 0.00)
(sat.stats    536   8378   12   287/284   521/264  73       0    19.56   0.45)
(sat.stats    539   8513   13   287/284   524/265  73       0    19.56   0.45)
shl: (shl[48] (bv2int %0) (mod (bv2int %0) 48)) 0 := 184 << 40
(sat.stats    542   8597   14   297/293   527/266  73       0    19.56   0.45)
(sat.stats    549   8702   15   300/296   534/266  73       0    19.56   0.45)
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 13081 := 51198455733&26388279066624
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 36526 := 51198455733&8796093022208
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 51198355920 := 51198455733&8796093022208
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 51198441504 := 51198455733&8796093022208
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 51198455488 := 51198455733&8796093022208
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 1204608 := 51198455733&8796093022208
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 9708544 := 51198455733&8796093022208
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 768 := 51198455733&8796093022208
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
shl: (shl[64] (bv2int %0) (mod (+ #59 #318) 64)) 8796093057506 := 520 << 40
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 16300 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 179387 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 2 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 8 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 310528 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 268816 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 7007392 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 10921024 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 512 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 12892160 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 1024 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 84496384 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 118661120 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 82493440 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 930086912 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 32768 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 720896 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 524288 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 262144 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 131072 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 34091302912 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 264241152 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 2097152 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 209715200 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 201326592 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 33554432 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 16777216 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 134217728 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 25232932864 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 4294967296 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 1073741824 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 2147483648 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 25769803776 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 17179869184 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 34359738368 := 8796093022208&51198455733
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 4 := 51198455733&8796093022208
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 8 := 51198455733&8796093022208
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    712  14550   57  1723/1717   725/279  86       0    21.91   0.61)
ramon: poll                 wall=1.000s usage=0.992s mem=30664KiB load=0.99 rootload=0.98
ramon: poll                 wall=2.000s usage=1.992s mem=43844KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.992s mem=45524KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.992s mem=49876KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.992s mem=51820KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.991s mem=52588KiB load=1.00 rootload=1.00
band: (band[48] (if (or #565 #566 #567 #568) 0 (if #569 1 #692)) (shl[48] (bv2int %0) (mod #59 48))) 0 := 51198455733&8796093022208
band: (band[48] (shl[64] (bv2int %0) (mod #319 64)) (if (or #722 #723 #724 #725 #726) 0 (if #727 1 #857))) 128 := 8796093022208&51198455733
ramon: poll                 wall=7.000s usage=6.991s mem=54636KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.991s mem=57196KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.991s mem=57196KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.991s mem=57196KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.991s mem=57196KiB load=1.00 rootload=1.00
(sat.stats   1237  30604   97 227137/227131  3635/1882  86       0    55.85  11.48)
ramon: poll                 wall=12.000s usage=11.991s mem=57708KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.991s mem=58476KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.991s mem=58968KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.990s mem=61784KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.990s mem=61784KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.990s mem=61784KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.990s mem=61784KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.990s mem=64088KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.990s mem=64088KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:46:32 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.020s
ramon: group.total          20.010s
ramon: group.utime          19.982s
ramon: group.stime          0.028s
ramon: group.mempeak        64284KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.019s
ramon: loadavg              1.00
