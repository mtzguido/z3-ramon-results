ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:04:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28789 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FvpI8F2M7m5b.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             718727
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 1&1
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&2
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 4&4
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 8&8
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 16&16
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&16
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 39 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&69
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 37 << 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 36&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 36&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 (sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      164)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
      62.5     10000        49          0            1        2)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&132
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 37 << 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 33&132
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 33 := 37 << 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 36&132
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&132
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 37 << 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&132
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 36 << 36
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&132
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 33 << 33
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&132
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 34 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&132
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 35 << 35
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&132
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 36 << 36
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 32&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 34 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 32&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 35 << 35
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 32&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 34 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 32&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 33 << 33
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 32&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 32&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 32 := 33 << 33
(smt.stats    0    101    953    830   235/225/200     114/24    11   36   51.56)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 35 := 35&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 34 := 35&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 35&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 35 := 36 << 36
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 35&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 35 := 36 << 36
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 31&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 27&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 27 := 34 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 18&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 18 := 34 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 31&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 18&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 18 := 34 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 32 << 32
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 31 << 31
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 30 << 30
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 29 << 29
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 28 << 28
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 28 << 28
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 28 << 28
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 30 << 30
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 2 := 30 << 30
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 10&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 10 := 31 << 31
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 10&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 10 := 32 << 32
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 3&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 3 := 31 << 31
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 7&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 32 << 32
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 29 << 29
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 29 << 29
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 6 := 6&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 6&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 6&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 6 := 7 << 7
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 7&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 27 << 27
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
(sat.ddfw       1      1   36.2355     20001        98          1            1        3)
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 26 << 26
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 6&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 6 := 7 << 7
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 8 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 25 << 25
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 24 << 24
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 23 << 23
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 22 << 22
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 21 << 21
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 20 << 20
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 19 << 19
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 18 << 18
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 9 << 9
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 17 << 17
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 16 << 16
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 7&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 7 := 15 << 15
(smt.stats    1    202   2351   2409   408/390/285     211/32    13   61   52.15)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 15&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 15&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 15 := 27 << 27
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 0&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 0 := 27 << 27
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 25&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 25 := 27 << 27
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 29&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 29&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 29 := 27 << 27
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4 := 29&100
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 29 := 27 << 27
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 36 := 3623878656&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 40 := 3623878656&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 48 := 3623878656&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 64 := 3623878656&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 40 := 3623878656&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 64 := 3623878656&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 48 := 3623878656&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 64 := 3623878656&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 64 := 3623878656&100
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 128 := 3623878656&164
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 256 := 3623878656&292
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 3623878656&548
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 1024 := 3623878656&1060
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 2048 := 3623878656&2084
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4096 := 3623878656&4132
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 8192 := 3623878656&8292
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 16384 := 3623878656&16420
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32768 := 3623878656&32804
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 65536 := 3623878656&65572
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 131072 := 3623878656&131108
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 262144 := 3623878656&262180
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 524288 := 3623878656&524324
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 1048576 := 3623878656&1048612
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 2097152 := 3623878656&2097188
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4194304 := 3623878656&4194340
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 2097152 := 3623878656&2097188
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 4194304 := 3623878656&4194340
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 8388608 := 3623878656&8388644
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 16777216 := 3623878656&16777252
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 33554432 := 3623878656&33554468
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 67108864 := 3623878656&67108900
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 134217728 := 3623878656&134217764
lshr: (lshr[64] (* 33554432 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 134217764 := 9223372036821221376 >>l 36
(smt.stats    2    313   4153   4315   597/563/387     384/66    14   70   52.75)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 3623878656&996
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 137438953600&996
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 137438953600&996
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 137438954496&548
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 137438953984&548
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 137438953984 := 1 << 1
(sat.ddfw       1      1   41.6667     40001       196          2            1        5)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 8589934592&676
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 8589935104&676
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 8589935104 := 3 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 8589935104&676
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 8589935104 := 3 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 8589934336&612
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 8589934336 := 2 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 4294967297&676
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 4294967297&612
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 4294967297&612
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 4294967808&612
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 4294967808 := 2 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 6442451456&612
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 6442451456 := 3 << 3
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 4294967808&804
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 4294967808 := 2 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 512 := 4294967808&804
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 4294967808 := 2 << 2
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 1024 := 6442450945&1060
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 8192 := 6442450953&8228
(smt.stats    3    416   6438   7459   702/678/422     593/157    17   97   53.32)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 1&768
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 1924145348609 := 26 << 26
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 1&768
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 1924145348609 := 28 << 28
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 1&768
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 1924145348609 := 28 << 28
(sat.ddfw       1      1   39.4737     70001       343          3            1        8)
(smt.stats    4    527   9636  12194   754/714/439     738/222    20  120   53.61)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 34 := 78&768
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 78&768
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 78&768
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 78&768
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 32 := 78&768
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 2 := 78&768
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 2 := 78&768
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&768
lshr: (lshr[64] (* 33554432 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 768 := 9223372036821221376 >>l 62
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&768
lshr: (lshr[64] (* 33554432 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 768 := 9223372036821221376 >>l 62
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&704
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&640
lshr: (lshr[64] (* 33554432 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 640 := 4611686018427387904 >>l 62
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&640
lshr: (lshr[64] (* 33554432 (bv2int %1)) (mod (+ 63 #157 #161) 64)) 640 := 9223372036821221376 >>l 62
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906943 := 39 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906943 := 39 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 1 := 78&1
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 274877906943 := 39 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
lshr: (lshr[38] (bv2int %1) (+ 38 (* 274877906943 #106))) 274877906943 := 274877906942 >>l 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
lshr: (lshr[38] (bv2int %1) (+ 38 (* 274877906943 #106))) 137438953473 := 137438953472 >>l 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
lshr: (lshr[38] (bv2int %1) (+ 38 (* 274877906943 #106))) 137438953473 := 137438953472 >>l 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
lshr: (lshr[38] (bv2int %1) (+ 38 (* 274877906943 #106))) 137438953473 := 137438953472 >>l 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
lshr: (lshr[38] (bv2int %1) (+ 38 (* 274877906943 #106))) 137438953473 := 137438953472 >>l 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
lshr: (lshr[38] (bv2int %1) (+ 38 (* 274877906943 #106))) 274877906943 := 274877906942 >>l 37
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (lshr[38] (bv2int %1) (+ 38 #146))) 1 := 78&1
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 78&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (lshr[38] (bv2int %1) (+ 38 #146))) 1 := 78&1
ramon: poll                 wall=1.000s usage=0.926s mem=56076KiB load=0.93 rootload=0.90
(sat.ddfw       1      1   35.3982    110001       539          4            1       12)
(smt.stats    5    649  12249  15229   846/788/474     914/288    23  136   53.80)
(sat.ddfw       1      1   31.2104    160000       784          5            1       17)
(smt.stats :restarts :decisions     :clauses/bin/units        :simplify    :memory)
(smt.stats      :conflicts  :propagations         :lemmas         :deletions     )
(smt.stats    6    750  15764  19942   969/911/476    1074/298    24  137   53.99)
ramon: poll                 wall=2.000s usage=1.893s mem=56144KiB load=0.97 rootload=0.97
(sat.ddfw       1      1    27.663    220001      1078          6            1       23)
(sat.ddfw       1      1   24.3817    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.867s mem=56896KiB load=0.97 rootload=0.97
(smt.stats    7    861  18937  21956  1099/1004/479    1231/326    25  139   54.36)
(sat.ddfw       1      1   22.0629    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.812s mem=56896KiB load=0.95 rootload=0.95
(smt.stats    8    983  23045  28322  1153/1102/494    1472/398    28  164   54.46)
(sat.ddfw       1      1   19.3424    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.732s mem=57152KiB load=0.92 rootload=0.92
(sat.ddfw       1      1    17.646    560001      2745         10            1       57)
(smt.stats    9   1117  29043  33874  1391/1245/497    1755/470    30  173   54.65)
ramon: poll                 wall=6.000s usage=5.676s mem=57028KiB load=0.94 rootload=0.94
(sat.ddfw       1      1    16.241    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.626s mem=57036KiB load=0.95 rootload=0.95
(smt.stats   10   1218  33081  39300  1582/1356/497    1946/477    30  173   54.84)
(sat.ddfw       1      1   15.2246    790001      3872         12            1       80)
ramon: poll                 wall=8.000s usage=7.624s mem=57380KiB load=1.00 rootload=1.00
(smt.stats   11   1329  37281  47273  1845/1684/498    2343/576    31  180   54.93)
ramon: poll                 wall=9.000s usage=8.625s mem=57256KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.2513    920001      4509         13            1       93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1451  41231  54155  1992/1942/500    2957/687    32  181   55.12)
(smt.stats   13   1585  47282  65368  2119/2043/503    3545/823    33  192   55.20)
ramon: poll                 wall=10.000s usage=9.623s mem=58172KiB load=1.00 rootload=1.00
(smt.stats   14   1732  54267  78336  2262/2207/507    4155/922    35  201   55.40)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 0&1766
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057594037927936 := 134217728 << 18
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 0&1766
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057594037927936 := 134217728 << 18
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 267361714176&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057586521735168 := 134217714 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 267898585088&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057587058606080 := 134217715 << 5
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 268435456000&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057587595476992 := 134217716 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 268972326912&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057588132347904 := 134217717 << 7
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 268972326912&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057588132347904 := 134217717 << 7
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 269509197824&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057588669218816 := 134217718 << 8
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 270046068736&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057589206089728 := 134217719 << 9
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 270582939648&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057589742960640 := 134217720 << 10
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 271119810560&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057590279831552 := 134217721 << 11
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 271656681472&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057590816702464 := 134217722 << 12
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 272193552384&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057591353573376 := 134217723 << 13
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 272730423296&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057591890444288 := 134217724 << 14
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 273267294208&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057592427315200 := 134217725 << 15
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 272730423296&1318
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057591890444288 := 134217724 << 14
(smt.stats   15   1833  57047  83200  2435/2252/509    4388/929    35  201   55.63)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 271656681472&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057590816702464 := 134217722 << 12
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 272193552384&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057591353573376 := 134217723 << 13
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 271119810560&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057590279831552 := 134217721 << 11
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 270582939648&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057589742960640 := 134217720 << 10
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 270582939648&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057589742960640 := 134217720 << 10
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 270582939648&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057589742960640 := 134217720 << 10
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 270046068736&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057589206089728 := 134217719 << 9
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 270046068736&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057589206089728 := 134217719 << 9
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 274341036032&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057593501057024 := 134217727 << 17
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 273804165120&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057592964186112 := 134217726 << 16
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 3758096384&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057597796024320 := 134217735 << 25
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 3758096384&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057597796024320 := 134217735 << 25
(sat.ddfw       1      1   13.4823   1060001      5196         14            1      108)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 3758096384&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057597796024320 := 134217735 << 25
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 3221225472&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057597259153408 := 134217734 << 24
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 3221225472&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057597259153408 := 134217734 << 24
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2684354560&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057596722282496 := 134217733 << 23
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2684354560&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057596722282496 := 134217733 << 23
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 3221225472&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057597259153408 := 134217734 << 24
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2684354560&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057596722282496 := 134217733 << 23
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 0 := 2684354560&1958
shl: (shl[64] (bv2int %0) (mod (+ #104 #123) 64)) 72057596722282496 := 134217733 << 23
(smt.stats   16   1944  60829  98201  2562/2416/544    4918/970    36  213   55.73)
ramon: poll                 wall=11.000s usage=10.750s mem=58396KiB load=1.13 rootload=1.13
(sat.ddfw       1      1   12.8888   1210001      5931         15            1      123)
ramon: poll                 wall=12.000s usage=11.736s mem=58548KiB load=0.99 rootload=0.98
ramon: poll                 wall=13.000s usage=12.594s mem=58556KiB load=0.86 rootload=0.86
(smt.stats   17   2066  64510 105723  2712/2518/565    5268/1128    37  219   56.13)
(sat.ddfw       1      1   12.0527   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=13.521s mem=58568KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   11.3591   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=14.482s mem=58632KiB load=0.96 rootload=0.96
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2200  69860 124334  3007/2859/567    5676/1155    38  219   56.32)
ramon: poll                 wall=16.000s usage=15.401s mem=58692KiB load=0.92 rootload=0.92
(sat.ddfw       1      1   10.7476   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=16.363s mem=58780KiB load=0.96 rootload=0.96
(smt.stats   19   2347  76629 139661  3240/2953/568    6227/1191    39  222   56.51)
(smt.stats   20   2508  83021 161417  3352/3235/569    7108/1220    40  224   56.74)
(smt.stats   21   2609  85874 166259  3572/3305/569    7398/1220    40  224   56.74)
band: (band[38] (shl[64] (bv2int %0) (mod #124 64)) (lshr[64] (* 33554432 #110) (mod #165 64))) 12 := 152&3616
(smt.stats   22   2720  88164 175130  3967/3588/570    7682/1434    41  225   56.84)
ramon: poll                 wall=18.000s usage=17.272s mem=59220KiB load=0.91 rootload=0.91
(sat.ddfw       1      1   10.1795   1910001      9362         19            1      193)
(smt.stats   23   2842  90692 179558  4070/3924/573    7795/1440    41  225   56.93)
ramon: poll                 wall=19.000s usage=18.268s mem=59272KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.232s mem=59436KiB load=0.96 rootload=0.97
ramon: end                  Fri Nov  1 22:05:16 2024
ramon: root.execname        z3
ramon: root.utime           19.220s
ramon: root.stime           0.010s
ramon: group.total          19.242s
ramon: group.utime          19.222s
ramon: group.stime          0.020s
ramon: group.mempeak        59692KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              0.96
