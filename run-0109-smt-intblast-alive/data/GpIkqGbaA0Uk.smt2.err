ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:56:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42149 MiB
ramon: sys.mem.avail        61713 MiB
ramon: sys.nprocs           1250
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/GpIkqGbaA0Uk.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2887117
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   6066   1186  1297/1171/89      99/3     2   13   19.12)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 22589&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 1 := 92 << 14
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 22589&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 1 := 92 << 14
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 22589&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 1 := 92 << 14
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 22589&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 1 := 214 << 14
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&1
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&1
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 2305843009213693952 := 4611686018427387870 << 14
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 2305843009213693952 := 4611686018427387870 << 14
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 2305843009213693952 := 4611686018427387870 << 14
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 2305843009213693952 := 4611686018427387870 << 14
(smt.stats    1    202   8738   2995  2147/1925/109     193/6     4   15   19.41)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&22590
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&22592
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&22590
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&22592
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&22590
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&22592
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&24576
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&24576
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&32768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 2305843009213726720 := 2305983746702049292 << 14
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 196609 := 1152991873351024646 << 15
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 196609 := 1152991873351024646 << 15
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 196609 := 1152991873351024646 << 15
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 196609 := 1152991873351024646 << 15
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 22589 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 1152991873351024645 := 1152991873351024646 << 15
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 22589 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 2 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 4 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 8 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 32 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 64 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 128 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
shl: (shl[61] (bv2int %0) (+ 61 (* 2305843009213693951 #116))) 219200 := 1152991873351024646 << 15
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 8 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 32 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 64 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 128 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 256 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 512 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 1024 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 2048 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 4096 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 8192 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16384 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 8 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 16 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 32 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 64 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 128 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 256 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 512 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 1024 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2048 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4096 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 8192 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 16384 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 8256 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 8256 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 8192 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 8192 := 22589&196608
(smt.stats    2    313  10753   5967  2366/2090/234     327/21     7   48   20.23)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 6144 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 16 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 16 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 32 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 32 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 32 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4096 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 4096 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2048 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2048 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2048 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 2048 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 128 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 256 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 128 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 128 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 128 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 512 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 16 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 8 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 8 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 22589&196608
band: (band[61] (if (= #120 60) 1 (if #584 2 #756)) (shl[61] (bv2int %0) (+ 61 #759))) 8 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 512 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 512 := 22589&196608
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 1024 := 22589&196608
(smt.stats    3    414  13532  11063  2453/2235/356     526/81    10   72   20.71)
(smt.stats    4    525  13725  14503  2895/2254/360     643/143    11   87   20.71)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172490
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172496
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172544
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172544
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172496
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172496
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172496
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172496
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172496
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172496
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172496
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172544
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3072 := 1589606593992172489&1589606593992172544
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 2048 := 1589606593992172489&1589606593992172544
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992172544
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992179712
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992179712
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992196096
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992179712
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992196096
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992179712
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992196096
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992327168
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992327168
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594000191488
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594000191488
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992179712
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992196096
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606593992327168
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594000191488
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594268626944
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594268626944
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606600711077888
(smt.stats    5    647  17096  19437  3041/2711/401     804/180    15  101   21.25)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594268626944
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594268626944
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606600711077888
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594268626944
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594268626944
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606600711077888
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606594268626944
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606600711077888
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606841229246464
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606824049377280
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606600711077888
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606841229246464
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606841229246464
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589607940740874240
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606841229246464
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589607940740874240
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606841229246464
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589607940740874240
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589612338787385344
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589606841229246464
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589607940740874240
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589612338787385344
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589629930973429760
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589612338787385344
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589629930973429760
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589629930973429760
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589770668461785088
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589770668461785088
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589770668461785088
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1729382256910270464
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589629930973429760
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589629930973429760
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589629930973429760
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&1589770668461785088
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&562949953421312
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 6917529027641606144 := 122 << 60
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&128
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 6917529027641081872 := 140737488355250 << 60
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&7516192768
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 9223372036855300096 := 140737488355250 << 60
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 9223372036855300096 := 140737488355250 << 60
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&524288
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 9223372036855300096 := 140737488355006 << 60
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&6442450944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 9223372043297226752 := 976 << 60
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&6442450944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 9223372043297226752 := 244 << 60
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  21221  29772  3172/2881/560     896/202    20  145   21.57)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&6962544640
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 1589606593992172489&6442450944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 9223372043297226752 := 244 << 60
(smt.stats    7    859  27281  38991  3227/2947/577    1047/268    24  173   21.92)
(smt.stats    8    981  32558  47040  3326/3025/589    1243/333    28  198   22.11)
(smt.stats    9   1115  41030  54338  3353/3048/594    1399/333    28  198   22.23)
(smt.stats   10   1216  46302  62005  3456/3061/595    1552/395    29  209   22.33)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3 := 11843492045&3
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 3 := 11843492045&3
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 1 := 11843492045&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 6917529027641081857 := 54 << 33
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 11843492045&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 6917529027641081858 := 54 << 33
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 0 := 11843492045&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 60 #905 #907) 64)) 6917529027641081858 := 54 << 33
(smt.stats   11   1327  51919  72039  3601/3269/609    1855/433    31  212   22.52)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 4096 := 11843492045&463856467968
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 4096 := 11843492045&463856467968
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 4096 := 11843492045&463856467968
ramon: poll                 wall=1.000s usage=0.879s mem=24048KiB load=0.88 rootload=0.85
(smt.stats   12   1449  56492  84336  3689/3384/622    2270/618    33  217   22.81)
(smt.stats   13   1583  66010  98149  3864/3473/622    2493/625    33  217   23.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   14   1730  81270 118623  3993/3553/622    2912/672    34  233   23.19)
(smt.stats   15   1831  85528 125877  4074/3686/623    3048/804    35  234   23.30)
(smt.stats   16   1942  88841 132439  4333/3808/624    3295/806    35  234   23.51)
(smt.stats   17   2064  95763 144853  4352/4007/628    3688/843    36  236   23.61)
ramon: poll                 wall=2.000s usage=1.878s mem=25228KiB load=1.00 rootload=1.00
(smt.stats   18   2198 108144 169046  4410/4051/628    3926/982    37  243   23.71)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16390 := 5921746022&528474112
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16390 := 5921746022&528474112
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16390 := 5921746022&528474114
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16390 := 5921746022&528474112
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16390 := 5921746022&528474114
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16390 := 5921746022&528474112
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16390 := 5921746022&528474114
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16390 := 5921746022&528474372
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16390 := 5921746022&528474626
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16404 := 5921746022&528474900
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16404 := 5921746022&528474900
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16396 := 5921746022&528475140
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16420 := 5921746022&528475140
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16420 := 5921746022&528475140
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16420 := 5921746022&528475140
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16420 := 5921746022&528475140
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16420 := 5921746022&528475172
(smt.stats   19   2345 115779 185416  4606/4093/630    4210/1095    38  248   23.90)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16420 := 5921746022&528474372
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 16420 := 5921746022&528474148
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 12324 := 5921746022&528474148
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 8228 := 5921746022&528474164
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 8228 := 5921746022&528474148
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 8224 := 5921746022&528474144
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2506 121264 201961  4756/4401/675    4788/1223    40  258   24.19)
(smt.stats   21   2607 127873 214225  4792/4433/676    5008/1324    42  268   24.28)
(smt.stats   22   2718 137928 243786  4892/4494/676    5242/1329    42  268   24.38)
(smt.stats   23   2840 147868 259906  4951/4538/676    5568/1331    42  268   24.48)
(smt.stats   24   2974 153641 272488  5008/4621/679    5988/1449    43  273   24.67)
ramon: poll                 wall=3.000s usage=2.877s mem=26192KiB load=1.00 rootload=0.99
(smt.stats   25   3121 161418 291340  5069/4670/681    6206/1536    44  286   24.67)
(smt.stats   26   3282 171804 306911  5314/4921/683    6698/1566    45  286   24.86)
ramon: poll                 wall=4.000s usage=3.877s mem=26452KiB load=1.00 rootload=1.00
(smt.stats   27   3459 180095 325956  5517/4958/683    7280/1577    45  286   25.06)
(smt.stats   28   3560 185907 341102  5544/5151/684    7714/1764    46  297   25.06)
(smt.stats   29   3671 192074 359871  5570/5183/685    7963/1856    47  305   25.25)
(smt.stats   30   3793 198228 380489  5753/5332/691    8201/1884    48  309   25.44)
(smt.stats   31   3927 203847 396004  5774/5352/697    8506/1891    49  311   25.44)
(smt.stats   32   4074 214519 421260  5801/5379/703    8764/1968    50  346   25.67)
ramon: poll                 wall=5.000s usage=4.877s mem=27896KiB load=1.00 rootload=1.00
(smt.stats   33   4235 226354 447171  5960/5386/703    9289/1975    50  346   25.96)
ramon: poll                 wall=6.000s usage=5.877s mem=28080KiB load=1.00 rootload=1.00
(smt.stats   34   4412 236197 470794  6333/5551/704    9966/2106    51  349   26.28)
(smt.stats   35   4606 246489 501621  6408/5951/707   10836/2221    52  351   26.47)
(smt.stats   36   4707 254372 522858  6504/6044/709   11586/2323    53  353   26.66)
ramon: poll                 wall=7.000s usage=6.876s mem=28352KiB load=1.00 rootload=1.00
(smt.stats   37   4818 262156 552574  6536/6114/719   11991/2446    54  368   26.76)
(smt.stats   38   4940 271128 595162  6563/6141/731   12272/2460    56  417   26.86)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 278230 613166  6595/6161/732   12649/2460    56  417   26.86)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5221 290810 647108  6651/6185/733   12907/2620    57  503   26.99)
ramon: poll                 wall=8.000s usage=7.875s mem=28720KiB load=1.00 rootload=1.00
(smt.stats   41   5382 299893 676339  6886/6235/733   13312/2652    58  503   27.18)
(smt.stats   42   5559 309181 705712  6964/6491/733   14052/2653    58  503   27.36)
(smt.stats   43   5753 324803 768372  7033/6555/734   14465/2745    59  508   27.36)
ramon: poll                 wall=9.000s usage=8.875s mem=29056KiB load=1.00 rootload=1.00
(smt.stats   44   5966 335894 800079  7303/6638/734   15634/2754    59  508   27.55)
(smt.stats   45   6067 341139 822359  7328/6901/737   16048/2984    60  513   27.64)
(smt.stats   46   6180 352288 864303  7378/6916/737   16386/2987    60  513   27.64)
ramon: poll                 wall=10.002s usage=9.879s mem=29216KiB load=1.00 rootload=1.00
(smt.stats   47   6302 358826 883154  7480/6960/737   16940/3028    61  533   27.74)
(smt.stats   48   6436 363716 898391  7653/7081/738   17668/3044    61  533   27.83)
(smt.stats   49   6583 371830 920183  7672/7239/738   18023/3319    62  535   27.96)
(smt.stats   50   6744 382141 946416  7801/7261/738   18732/3327    62  535   28.05)
ramon: poll                 wall=11.000s usage=10.874s mem=29796KiB load=1.00 rootload=1.00
(smt.stats   51   6921 394389 998075  7881/7423/738   19343/3330    62  535   28.05)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   52   7115 406263 1037822  7924/7499/740   20294/3647    63  539   28.18)
(smt.stats   53   7328 419463 1072152  8301/7501/740   20925/3854    64  548   28.57)
ramon: poll                 wall=12.000s usage=11.874s mem=30196KiB load=1.00 rootload=1.00
(smt.stats   54   7562 430384 1104030  8531/7932/740   21646/3858    64  548   28.66)
(smt.stats   55   7663 434526 1117121  8724/8142/740   21874/3861    64  548   28.76)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 5120 := 5647&868068834643288065
ramon: poll                 wall=13.000s usage=12.874s mem=30452KiB load=1.00 rootload=1.00
(smt.stats   56   7774 437507 1130634  8977/8457/741   22268/4027    65  560   28.85)
band: (band[61] (if (or #771 #772 #773) 0 (if #774 1 #894)) (shl[64] (* 2 #114) (mod #908 64))) 5633 := 5647&869203199921971457
(smt.stats   57   7896 440850 1140773  9227/8604/741   22573/4031    65  560   28.95)
(smt.stats   58   8030 445664 1158793  9406/8974/746   23442/4031    65  560   29.04)
(smt.stats   59   8177 454646 1195686  9440/8990/746   24060/4034    65  560   29.04)
(smt.stats   60   8338 467634 1241153  9464/9036/746   24480/4473    66  561   29.15)
ramon: poll                 wall=14.000s usage=13.874s mem=30964KiB load=1.00 rootload=1.00
(smt.stats   61   8515 476460 1280516  9476/9051/747   24863/4544    67  567   29.25)
(smt.stats   62   8709 488319 1324568  9499/9074/748   25132/4544    67  567   29.25)
(smt.stats   63   8922 505878 1389434  9532/9089/750   25588/4571    68  574   29.47)
(smt.stats   64   9156 517241 1421610  9561/9128/752   26667/4607    69  581   29.47)
ramon: poll                 wall=15.000s usage=14.874s mem=31220KiB load=1.00 rootload=1.00
(smt.stats   65   9413 533698 1511226  9648/9199/753   27849/4608    69  581   29.69)
(smt.stats   66   9514 537882 1530037  9660/9235/753   28263/4982    70  634   29.80)
(smt.stats   67   9625 549649 1593406  9719/9236/753   28506/4985    70  634   29.80)
(smt.stats   68   9747 557823 1629682  9851/9303/753   28905/4992    70  634   29.80)
ramon: poll                 wall=16.000s usage=15.874s mem=31476KiB load=1.00 rootload=1.00
(smt.stats   69   9881 564510 1677632  9956/9443/753   29364/4996    70  634   29.95)
(smt.delete-inactive-clauses  :num-deleted-clauses 806)
(smt.stats   70  10028 573037 1708268  9999/9554/753   29256/4996    70  634   29.95)
(smt.stats   71  10189 586571 1790088 10067/9583/753   29766/5000    70  634   29.95)
ramon: poll                 wall=17.000s usage=16.873s mem=31732KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   72  10366 597635 1838507 10386/9657/753   30447/5008    70  634   30.06)
(smt.stats   73  10560 607704 1872475 10459/9993/753   31356/5010    70  634   30.35)
ramon: poll                 wall=18.000s usage=17.873s mem=31988KiB load=1.00 rootload=1.00
(smt.stats   74  10773 626948 1933466 10669/10058/753   32449/5023    70  634   30.44)
ramon: poll                 wall=19.000s usage=18.873s mem=32464KiB load=1.00 rootload=1.00
(smt.stats   75  11007 640965 1996601 10835/10405/755   33442/5712    71  641   30.63)
(smt.stats   76  11264 662191 2087534 10898/10450/755   34495/5713    71  641   30.73)
ramon: poll                 wall=20.000s usage=19.873s mem=32464KiB load=1.00 rootload=1.00
(smt.stats   77  11546 679244 2153963 10983/10544/756   35464/5936    72  659   30.82)
ramon: end                  Tue Dec 24 14:56:47 2024
ramon: root.execname        z3
ramon: root.utime           19.920s
ramon: root.stime           0.030s
ramon: group.total          19.960s
ramon: group.utime          19.928s
ramon: group.stime          0.032s
ramon: group.mempeak        32976KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              0.99
