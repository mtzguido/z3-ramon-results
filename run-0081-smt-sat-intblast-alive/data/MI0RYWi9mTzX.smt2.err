ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:18:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29361 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/MI0RYWi9mTzX.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             382645
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   244/244     0/0  69       0    18.53   0.00)
(sat.stats    101    901    0   244/244   101/24  69       0    18.79   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 811 :time 0.00)
(sat.stats    101    901    0   244/244   101/24  69       0    18.79   0.00)
(sat.stats    101    901    0   244/244   101/24  69       0    18.79   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 458818.89 :time 0.00)
(sat.stats    101    901    0   244/244   101/24  69       0    18.89   0.01)
(sat.stats    348   3929    1   248/248   348/185  69       0    19.57   0.04)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    351   4022    2   248/248   351/185  69       0    19.57   0.04)
(sat.stats    354   4103    3   248/248   354/185  69       0    19.57   0.04)
(sat.stats    357   4221    4   248/248   357/185  69       0    19.57   0.04)
(sat.stats    360   4346    5   248/248   360/185  69       0    19.57   0.04)
(sat.stats    363   4486    6   248/248   363/186  69       0    19.57   0.04)
(sat.stats    366   4548    7   248/248   366/186  69       0    19.57   0.04)
(sat.stats    369   4628    8   248/248   369/186  69       0    19.57   0.04)
(sat.stats    372   4722    9   248/248   372/186  69       0    19.57   0.04)
(sat.stats    375   4818   10   248/248   375/186  69       0    19.57   0.05)
(sat.stats    378   4943   11   262/262   378/187  69       0    19.67   0.06)
(sat.stats    381   4951   12   271/271   381/188  69       0    19.67   0.07)
(sat.stats    384   4990   13   298/298   384/190  69       0    19.76   0.08)
(sat.stats    387   5088   14   298/298   387/190  69       0    19.76   0.09)
 (sat-cleaner :elim-literals 59 :elim-clauses 0 :cost 3950 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    671  11384   19  1903/1903   691/213  80       0    20.14   0.37)
 (sat-cleaner :elim-literals 61 :elim-clauses 0 :cost 4944 :time 0.00)
(sat.stats    796  18244   31  2852/2852   823/235  81       0    20.34   0.55)
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #76))) 0 := 0 >>l 34
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 0&72057594033733632
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #608 #612) 64)) 1152921504606846975 := 0 >>l 41
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 6235 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 6793 :time 0.00)
(sat.stats   1064  27067   61  3273/3271  1092/333  91       0    20.55   0.64)
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 1 := 1&72057594033733632
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 1&72057594033733632
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 1 := 72057594033733632&1
 (sat-cleaner :elim-literals 8 :elim-clauses 0 :cost 8265 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11211 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 11672 :time 0.00)
(sat.stats   1642  49911  137  3574/3571  1693/619 107       0    21.03   0.91)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 15855 :time 0.00)
ramon: poll                 wall=1.000s usage=0.997s mem=22264KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 18471 :time 0.00)
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #76))) 0 := 0 >>l 37
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 0&72057594037403648
lshr: (lshr[64] (* 128 (bv2int %0)) (mod (+ 63 #608 #612) 64)) 15060037153926938623 := 0 >>l 44
 (sat-cleaner :elim-literals 31 :elim-clauses 0 :cost 20938 :time 0.00)
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 2 := 2&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 4 := 4&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 8 := 8&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 16 := 16&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 32 := 32&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 64 := 64&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 128 := 128&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 256 := 256&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 512 := 512&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 1024 := 1024&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 2048 := 2048&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 4096 := 4096&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 8192 := 8192&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 16384 := 16384&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 32768 := 32768&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 65536 := 65536&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 131072 := 131072&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 262144 := 262144&72057594037403648
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 42392 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 2 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 4 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 266544 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 256576 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 32 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 144256 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 229120 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 82432 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 330752 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 83968 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 483328 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 4096 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 131072 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 16384 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 32768 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 65536 := 72057594037403648&524287
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #485)) (if (= #85 55) 1298074214633706871103827063341056 (if #489 649037107316853435551913531670528 #597))) 0 := 524287&72057594037403648
band: (band[56] (if (= #323 63) 332306998946228959002579728215310336 (if #461 166153499473114479501289864107655168 #458)) (lshr[64] (* 128 #64) (mod #615 64))) 262144 := 72057594037403648&524287
(sat.stats   2465  83399  183  7034/7029  2618/897 118       0    23.02   1.41)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 23783 :time 0.00)
ramon: poll                 wall=2.000s usage=1.995s mem=25284KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 30938 :time 0.00)
ramon: poll                 wall=3.000s usage=2.995s mem=27092KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.994s mem=31976KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 33682 :time 0.00)
ramon: poll                 wall=5.000s usage=4.994s mem=32652KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.994s mem=32676KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.993s mem=32880KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.993s mem=33240KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.993s mem=33264KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.002s usage=9.995s mem=33376KiB load=1.00 rootload=1.00
(sat.stats   4903 160242  253 69406/69400  4937/1527 378       0    33.71  10.17)
ramon: poll                 wall=11.000s usage=10.992s mem=43216KiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts          :learned/bin          :gc         :time )
(sat.stats     :decisions    :clauses/bin            :units         :memory       )
(sat.stats   5414 163317  295 134586/134580  5227/1530 378       0    52.04  11.37)
ramon: poll                 wall=12.000s usage=11.992s mem=58248KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.992s mem=62916KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.992s mem=67568KiB load=1.00 rootload=0.99
ramon: poll                 wall=15.000s usage=14.992s mem=70408KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.991s mem=73224KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.991s mem=92160KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.991s mem=94520KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.991s mem=96376KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.991s mem=98968KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:18:20 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.040s
ramon: group.total          20.003s
ramon: group.utime          19.955s
ramon: group.stime          0.048s
ramon: group.mempeak        105MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
