ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:31:37 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28161 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Sc7PAQEAx3V8.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             810839
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 1&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 1&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 2&722869
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 2 := 2305843009213693951 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 2&722869
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 2 := 2305843009213693951 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 1&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 2&722869
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 2 := 2305843009213693951 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 17592202821632&722869
shl: (shl[61] (bv2int %1) (mod (bv2int %0) 61)) 17592202821647 := 17592202821648 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 17592202821632&722869
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 17592202821632 := 17592202821648 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 17592202821632&722869
shl: (shl[61] (bv2int %1) (mod (bv2int %0) 61)) 17592202821647 := 17592202821648 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 1 := 2&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 2&722869
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 2 := 3 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 1048576&722869
shl: (shl[61] (bv2int %1) (mod (bv2int %0) 61)) 1048575 := 17592186044417 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2 := 1048576&722869
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   66.2252     10000        49          0            1        2)
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 1048576&722869
shl: (shl[61] (bv2int %1) (mod (bv2int %0) 61)) 1048575 := 17592186044417 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 2&722869
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 2 := 15393162788865 << 20
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2 := 17592202821632&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 17592202821632&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 8 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 16 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 32 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 32 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 32 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 64 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 128 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 256 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 512 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 128 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 256 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 512 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 1024 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2048 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4096 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 8192 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 16384 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 32768 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 65536 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 131072 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 262144 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 524288 := 1048576&722869
(smt.stats    0    101   5217   1014  1507/1244/165      90/13    11   30   52.62)
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 262144 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 524288 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 524288 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 65536 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 65536 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 65536 := 1048576&722869
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 65536 := 2097152&722869
(sat.ddfw       1      1   36.9041     20001        98          1            1        3)
(smt.stats    1    202   6089   1335  2252/2010/226     206/29    13   43   53.34)
(sat.ddfw       1      1   40.0802     40001       196          2            1        5)
(smt.stats    2    313   9077   4173  2513/2259/247     397/64    15   50   53.63)
(sat.ddfw       1      1   35.5872     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.880s mem=56420KiB load=0.88 rootload=0.87
(smt.stats    3    414   9830   5079  2730/2518/247     501/64    15   50   54.30)
(smt.stats    4    525  11207   6332  3504/3239/251     688/149    17   58   54.01)
(sat.ddfw       1      1   30.8166    110001       539          4            1       12)
(sat.ddfw       1      1   26.7089    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.881s mem=56500KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    23.493    220001      1078          6            1       23)
(smt.stats    5    647  12330   6720  3667/3298/251     812/151    17   58   54.21)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  12749   7174  3904/3586/252     920/202    18   60   54.21)
ramon: poll                 wall=3.000s usage=2.880s mem=56756KiB load=1.00 rootload=1.00
(smt.stats    7    859  17785  15957  4013/3736/254    1341/511    19   61   54.21)
(sat.ddfw       1      1   20.8831    290001      1421          7            1       30)
(smt.stats    8    981  20488  26219  4092/3817/261    1458/530    22   74   54.30)
(smt.stats    9   1115  24140  31615  4144/3863/273    1580/536    24   85   54.40)
(smt.stats   10   1216  26198  34984  4195/3926/275    1696/555    25   88   54.40)
(smt.stats   11   1327  30714  39662  4242/3939/275    1821/556    25   88   54.51)
ramon: poll                 wall=4.000s usage=3.880s mem=56924KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  36496  46580  4294/4018/283    1907/566    27  120   54.66)
(smt.stats   13   1583  41002  53982  4312/4038/283    2050/566    27  120   54.66)
(sat.ddfw       1      1   18.7793    370001      1813          8            1       38)
(smt.stats   14   1730  45458  60616  4352/4046/284    2196/568    28  121   54.77)
(smt.stats   15   1831  46458  62369  4376/4090/284    2300/572    28  121   54.86)
ramon: poll                 wall=5.000s usage=4.881s mem=57388KiB load=1.00 rootload=1.00
(smt.stats   16   1942  49725  68133  4501/4232/287    2496/575    29  125   54.86)
(smt.stats   17   2064  54120  74988  4519/4233/287    2621/575    29  125   54.86)
(sat.ddfw       1      1   17.0681    460001      2254          9            1       47)
(smt.stats   18   2198  61882  84087  4529/4258/287    2751/575    29  125   55.03)
(smt.stats   19   2345  68515  99308  4549/4269/287    3035/575    29  125   55.03)
(smt.stats   20   2506  74387 109717  4563/4284/287    3193/575    29  125   55.03)
(smt.stats   21   2607  76077 116392  4593/4310/287    3310/575    29  125   55.03)
ramon: poll                 wall=6.000s usage=5.881s mem=57476KiB load=1.00 rootload=1.00
(smt.stats   22   2718  77532 119617  4655/4324/287    3430/575    29  125   55.12)
(sat.ddfw       1      1   15.6055    560001      2745         10            1       57)
(smt.stats   23   2840  79756 128583  4764/4420/287    3555/575    29  125   55.12)
(smt.stats   24   2974  82039 136824  4812/4503/287    3692/576    29  125   55.22)
ramon: poll                 wall=7.000s usage=6.881s mem=57540KiB load=1.00 rootload=1.00
(smt.stats   25   3121  83910 148115  4872/4559/287    3881/577    29  125   55.22)
(smt.stats   26   3282  85904 157801  4923/4608/287    4057/577    29  125   55.22)
(sat.ddfw       1      1   14.3641    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.882s mem=57756KiB load=1.00 rootload=1.00
(smt.stats   27   3459  86522 160084  5105/4661/287    4246/580    29  125   55.41)
(smt.stats   28   3560  87269 162107  5272/4969/287    4361/580    29  125   55.41)
ramon: poll                 wall=9.000s usage=8.882s mem=57904KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.3097    790001      3872         12            1       80)
(smt.stats   29   3671  88206 167724  5402/5011/287    4475/581    29  125   55.51)
(smt.stats   30   3793  88835 170117  5546/5207/287    4613/581    29  125   55.60)
ramon: poll                 wall=10.000s usage=9.882s mem=57992KiB load=1.00 rootload=1.00
(smt.stats   31   3927  89741 175380  5726/5387/287    4753/581    29  125   55.60)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  94552 190542  5878/5583/289    4967/868    30  130   55.97)
(sat.ddfw       1      1   12.4022    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.883s mem=58312KiB load=1.00 rootload=1.00
(smt.stats   33   4235  95871 194439  5980/5609/289    5132/876    31  139   56.16)
(smt.stats   34   4412  97369 197970  6191/5882/289    5320/876    31  139   56.16)
(smt.stats   35   4606 107524 233501  6294/5949/290    5559/876    31  139   56.16)
(smt.stats   36   4707 111699 248407  6362/6076/290    5664/897    32  140   56.16)
ramon: poll                 wall=12.000s usage=11.883s mem=58668KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.6096   1060001      5196         14            1      108)
(smt.stats   37   4818 115379 263462  6389/6103/290    5788/897    32  140   56.16)
(smt.stats   38   4940 118995 278534  6436/6164/291    5911/905    33  144   56.26)
(smt.delete-inactive-clauses  :num-deleted-clauses 31)
(smt.stats   39   5074 123563 303086  6442/6168/291    6015/905    33  144   56.26)
(smt.stats   40   5221 127918 311814  6461/6184/292    6156/908    34  150   56.26)
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2 := 54975581388800&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2 := 54975581388800&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2 := 54975582437378&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 54975581388808&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 8 := 54975581388808&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 8 := 54975581388808&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 8 := 54975581388808&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 54975582437376&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 54975581388808&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 57174604644352&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 57174604644352&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 54975633817650&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 54975633817600&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 54975633817600&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 54975633817600&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 54975581388808&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 57174604644352&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 61572651155456&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 57174604644352&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 61572651155456&24255471710085
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 70368744177666&24255471710085
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 70368744177666 := 70368744177666 << 45
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 70368744177666&24255471710085
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 70368744177666 := 70368744177666 << 45
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 70368744177666&24255471710085
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 70368744177666 := 70368744177666 << 45
(smt.stats   41   5382 132738 328123  6538/6246/360    6514/914    35  153   56.56)
band: (band[61] (shl[64] (bv2int %1) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 70368744177672&24255471710085
shl: (shl[64] (bv2int %1) (mod (+ #117 #843) 64)) 70368744177672 := 70368744177672 << 45
ramon: poll                 wall=13.000s usage=12.883s mem=59012KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   42   5559 136350 344387  6552/6265/371    6755/1114    36  168   56.65)
(smt.stats   43   5753 138122 348717  6870/6370/372    7066/1190    37  169   56.85)
(sat.ddfw       1      1   10.9004   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.884s mem=59400KiB load=1.00 rootload=1.00
(smt.stats   44   5966 139712 354248  7221/6646/372    7329/1195    37  169   57.31)
(smt.stats   45   6067 143131 362311  7428/7146/373    7492/1237    38  170   57.31)
(smt.stats   46   6178 146297 377326  7435/7149/373    7869/1237    38  170   57.41)
(smt.stats   47   6300 148529 389897  7450/7160/373    8036/1237    38  170   57.41)
ramon: poll                 wall=15.000s usage=15.030s mem=59736KiB load=1.15 rootload=1.15
(smt.stats   48   6434 154119 415543  7517/7172/373    8244/1239    38  170   57.51)
(smt.stats   49   6581 160253 449446  7531/7244/376    8615/1405    39  180   57.51)
(smt.stats   50   6742 163840 476740  7557/7254/382    8787/1566    40  183   57.51)
(sat.ddfw       1      1   10.4712   1370001      6715         16            1      139)
ramon: poll                 wall=16.000s usage=16.210s mem=60044KiB load=1.18 rootload=1.18
(smt.stats   51   6919 167668 488773  7704/7275/382    9349/1626    41  222   57.71)
(smt.stats   52   7113 171136 518256  7859/7560/382    9922/1627    41  222   57.80)
ramon: poll                 wall=17.000s usage=17.069s mem=60064KiB load=0.86 rootload=0.86
(smt.stats   53   7326 175729 555383  7920/7583/383   10293/2145    42  225   57.80)
(sat.ddfw       1      1   9.79376   1540001      7549         17            1      156)
(smt.stats   54   7560 180521 585973  7968/7679/387   10830/2568    43  230   58.00)
(smt.stats   55   7661 182577 611702  7972/7690/387   10937/2568    43  230   58.21)
(smt.stats   56   7772 185278 630588  7994/7707/388   11051/2569    44  239   58.21)
(smt.stats   57   7894 188597 651502  8012/7715/388   11198/2569    44  239   58.21)
ramon: poll                 wall=18.000s usage=18.047s mem=60668KiB load=0.98 rootload=0.97
(smt.stats   58   8028 193201 681254  8064/7735/388   11464/2604    45  242   58.31)
(smt.stats   59   8175 197914 722449  8123/7837/389   11626/2731    46  249   58.31)
(smt.stats   60   8336 202858 779661  8132/7846/389   11799/2731    46  249   58.40)
(smt.stats   61   8513 205637 805471  8141/7859/389   12083/2731    46  249   58.40)
ramon: poll                 wall=19.000s usage=19.045s mem=60900KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8707 212383 867816  8158/7876/390   12343/2839    47  253   58.88)
(sat.ddfw       1      1   9.26832   1720001      8431         18            1      174)
(smt.stats   63   8920 222154 929622  8174/7892/391   12612/2933    48  260   58.97)
(smt.stats   64   9154 227108 963694  8229/7898/392   12858/2933    48  260   59.50)
ramon: poll                 wall=20.000s usage=20.046s mem=61792KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:31:57 2024
ramon: root.execname        z3
ramon: root.utime           20.090s
ramon: root.stime           0.000s
ramon: group.total          20.104s
ramon: group.utime          20.096s
ramon: group.stime          0.008s
ramon: group.mempeak        62048KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.059s
ramon: loadavg              1.00
