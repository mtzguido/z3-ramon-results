ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:34:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29653 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1398
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5Ls2WkIIYVss.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             251410
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   124/124     0/0  69       0    18.24   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 383 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 1740 :time 0.00)
(sat.stats    400   5203    0   584/584   403/161  82       0    19.32   0.22)
(sat.stats    400   5203    0   630/630   403/161  82       0    19.32   0.22)
(sat.stats    400   5203    0   630/630   403/161  82       0    19.32   0.22)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 6 :elim-bin 166 :time 0.00)
 (sat-probing :cost 1025819.32 :time 0.00)
(sat.stats    400   5203    0   214/214   332/160  82       0    19.32   0.22)
(sat.stats    601   6845    1  1284/1284   550/174  82       0    19.61   0.47)
(sat.stats :conflicts    :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin        :units        :memory       )
(sat.stats    604   6876    2  1292/1292   553/174  82       0    19.61   0.47)
(sat.stats    607   6957    3  1304/1304   556/174  82       0    19.61   0.48)
(sat.stats    610   7080    4  1314/1314   560/175  82       0    19.61   0.48)
(sat.stats    613   7150    5  1322/1322   563/175  82       0    19.61   0.48)
(sat.stats    616   7351    6  1340/1340   569/178  82       0    19.61   0.48)
(sat.stats    620   7545    7  1352/1352   573/178  82       0    19.61   0.49)
(sat.stats    623   7681    8  1371/1371   576/179  82       0    19.61   0.49)
(sat.stats    627   7753    9  1387/1387   580/180  82       0    19.61   0.49)
lshr: (lshr[28] (bv2int %0) (+ 28 (* 268435455 #64))) 28248 := 28248 >>l 3
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 3201 := 13275&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 7520 := 13275&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 4448 := 13247&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 24 := 9279&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 6 := 13178&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 5625&33554432
lshr: (lshr[32] (* 8 (bv2int %0)) (mod (+ 31 #359 #363) 32)) 0 := 360032 >>l 6
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 3523 :time 0.00)
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 5648 := 5663&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 5632 := 5661&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 5568 := 5633&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 5376 := 5688&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 4 := 5695&33554432
(sat.stats    789  11755   10  3047/3043   748/197 124       0    20.18   0.59)
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 33553728 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 33553664 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 33553408 := 33553919&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 33552384 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 32026624 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 1400832 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 16924672 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 30310400 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 19857408 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 11272192 := 33554431&33554432
(sat.stats    824  12678   11  3686/3682   790/204 124       0    20.59   0.61)
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 3899 :time 0.00)
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 17301504 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 20971520 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 1048576 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 2097152 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 8388608 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 16777216 := 33554431&33554432
 (sat-cleaner :elim-literals 18 :elim-clauses 0 :cost 4058 :time 0.00)
(sat.stats    902  15957   12  4295/4291   866/230 246       0    20.98   0.66)
(sat.stats    905  15963   13  4295/4291   869/232 246       0    20.98   0.66)
(sat.stats    908  15982   14  4295/4291   872/234 246       0    20.98   0.66)
(sat.stats :conflicts   :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   1202  22770   15 22546/22542  1334/461 246       0    23.43   0.87)
(sat.stats   1205  22887   16 24374/24370  1337/461 246       0    23.52   0.88)
(sat.stats   1208  23010   17 24374/24370  1340/461 246       0    23.52   0.88)
ramon: poll                 wall=1.000s usage=0.925s mem=24876KiB load=0.92 rootload=0.91
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6462 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6600 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 6640 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 6817 :time 0.00)
(sat.stats   1948  38972   70 33029/33025  2134/665 251       0    25.07   1.47)
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 1&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 1 := 33554432&1
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 2&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 2 := 33554432&2
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 29&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 24 := 33554432&29
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 26&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 4 := 33554432&26
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 30&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 16 := 33554432&30
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 32&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 32 := 33554432&32
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 94&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 64 := 33554432&94
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 189&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 128 := 33554432&189
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 376&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 256 := 33554432&376
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 583&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 512 := 33554432&583
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 1089&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 1024 := 33554432&1089
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 2121&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 2048 := 33554432&2121
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 4177&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 4096 := 33554432&4177
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 8276&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 8192 := 33554432&8276
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 16464&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 16384 := 33554432&16464
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 32839&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 32768 := 33554432&32839
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 65601&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 65536 := 33554432&65601
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 131150&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 131072 := 33554432&131150
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 262237&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 262144 := 33554432&262237
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 524362&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 524288 := 33554432&524362
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 1048650&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 1048576 := 33554432&1048650
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 2097234&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 2097152 := 33554432&2097234
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 4194397&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 4194304 := 33554432&4194397
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 8388696&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 8388608 := 33554432&8388696
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 0 := 16777280&33554432
band: (band[28] (if (= #204 31) 2147483648 (if #269 1073741824 #266)) (lshr[32] (* 8 #55) (mod #366 32))) 16777216 := 33554432&16777280
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 128 := 33554431&33554432
band: (band[28] (lshr[28] (bv2int %0) (+ 28 #292)) (if (= #69 27) 134217728 (if #296 67108864 #348))) 131072 := 33554431&33554432
ramon: poll                 wall=2.000s usage=1.925s mem=28104KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 13334 :time 0.00)
(sat.stats   2729  54628   86 39699/39695  3002/777 421       0    26.94   2.01)
ramon: poll                 wall=3.000s usage=2.924s mem=28712KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 18965 :time 0.00)
(sat.stats   3599  77287  190 46289/46285  4048/928 436       0    27.91   3.91)
ramon: poll                 wall=4.000s usage=3.924s mem=29164KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.924s mem=29736KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.002s usage=5.926s mem=30216KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.002s usage=6.925s mem=30492KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.923s mem=30848KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   6443 131091  259 59610/59606  5868/1022 436       0    29.58   8.07)
ramon: poll                 wall=9.002s usage=8.925s mem=32028KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.923s mem=32424KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.922s mem=33552KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.922s mem=35108KiB load=1.00 rootload=1.00
(sat.stats   9192 166593  410 82647/82643  7465/1117 436       0    34.65  12.50)
ramon: poll                 wall=13.000s usage=12.922s mem=35736KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.922s mem=36648KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 40883 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 41200 :time 0.00)
ramon: poll                 wall=15.000s usage=14.922s mem=38640KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.921s mem=38824KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.921s mem=39068KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.921s mem=39260KiB load=1.00 rootload=1.00
(sat.stats  13096 271951  603 104264/104260  9980/1384 446       0    38.61  18.89)
ramon: poll                 wall=19.000s usage=18.921s mem=39920KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.002s usage=19.922s mem=40068KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:34:35 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.001s
ramon: group.utime          19.981s
ramon: group.stime          0.020s
ramon: group.mempeak        40580KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              1.00
