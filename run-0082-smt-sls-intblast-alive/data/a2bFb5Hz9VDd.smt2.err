ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:44:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27835 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/a2bFb5Hz9VDd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             854693
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   74.0741     10000        49          0            1        2)
(sat.ddfw       1      1   35.7179     20001        98          1            1        3)
(smt.stats    0    101   4757    390  1132/985/115     103/10     6   17   51.94)
(sat.ddfw       1      1   34.3053     40001       196          2            1        5)
(smt.stats    1    202   5717    736  1594/1394/117     218/12     7   22   52.13)
ramon: poll                 wall=1.004s usage=0.802s mem=54112KiB load=0.80 rootload=0.79
(sat.ddfw       1      1   31.8471     70001       343          3            1        8)
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&4
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&4
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&8
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 549755813888 := 0 << 31
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 549755813888 := 0 << 31
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&0
shl: (shl[39] (bv2int %1) (+ 39 (* 549755813887 #118))) 549755813887 := 128 << 32
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 549755813888 := 0 << 31
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 549755813888 := 0 << 31
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&0
shl: (shl[39] (bv2int %1) (+ 39 (* 549755813887 #118))) 549755813887 := 128 << 32
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&8
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&8
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 14 := 4294967295&16
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&16
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&16
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&32
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&32
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&64
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&16
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&32
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&64
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&128
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&128
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&256
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&256
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&512
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&512
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1024
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&512
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1024
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2048
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&1024
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2048
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&4096
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2048
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 2048 := 4294967295&2048
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 2048 := 0 << 31
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2048
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 2048 := 4294967295&2048
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 2048 := 0 << 31
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 4294967295&2048
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 2048 := 4294967295&2048
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 18446743523953739776 := 1099511627772 << 31
(smt.stats    2    313   8374   2801  2016/1837/245     335/46    10   50   52.61)
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 2048 := 4294967295&2048
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 2048 := 0 << 31
(smt.stats    3    414  10163   4015  2408/2202/256     452/60    12   66   52.71)
(smt.stats    4    525  14117   6019  2496/2280/261     573/62    15   78   52.81)
(smt.stats    5    647  18828   9451  2545/2288/261     709/64    15   78   53.01)
(sat.ddfw       1      1   28.2686    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  22255  11837  2578/2354/261     837/64    15   78   53.10)
(smt.stats    7    859  26724  14900  2608/2370/261     960/64    15   78   53.20)
(smt.stats    8    981  28737  16683  2635/2420/264    1102/70    16   79   53.29)
(smt.stats    9   1115  32541  20722  2652/2425/265    1239/95    18   82   53.29)
(smt.stats   10   1216  35483  24184  2672/2445/265    1360/95    18   82   53.39)
(smt.stats   11   1327  38624  29207  2687/2458/265    1483/95    18   82   53.39)
ramon: poll                 wall=2.000s usage=1.802s mem=55780KiB load=1.00 rootload=1.00
(smt.stats   12   1449  42978  34895  2692/2475/265    1628/95    18   82   53.50)
(sat.ddfw       1      1   24.9496    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   13   1583  46152  38802  2725/2503/266    1790/108    19   82   53.61)
(smt.stats   14   1730  51778  45671  2739/2515/266    1948/109    19   82   53.87)
(smt.stats   15   1831  58337  54857  2751/2534/266    2054/109    19   82   53.87)
(smt.stats   16   1942  61326  60114  2753/2536/267    2175/128    20   85   54.13)
(smt.stats   17   2064  62743  63540  2758/2540/268    2317/143    21   87   54.26)
(sat.ddfw       1      1   22.1406    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.801s mem=56352KiB load=1.00 rootload=1.00
(smt.stats   18   2198  64947  69105  2908/2563/268    2474/147    21   87   54.36)
(smt.stats   19   2345  67836  76036  2917/2700/269    2642/152    22   92   54.36)
(smt.stats   20   2506  71070  83967  2943/2724/279    2829/202    24  130   54.46)
(sat.ddfw       1      1   19.7684    290001      1421          7            1       30)
(smt.stats   21   2607  73088  87564  2953/2732/280    2953/202    24  130   54.46)
ramon: poll                 wall=4.000s usage=3.801s mem=57024KiB load=1.00 rootload=1.00
(smt.stats   22   2718  78588  97875  2996/2732/281    3075/208    25  143   54.75)
(smt.stats   23   2840  79636 100804  3057/2822/281    3231/208    25  143   54.75)
(smt.stats   24   2974  82455 105597  3069/2846/284    3449/229    26  144   54.75)
(sat.ddfw       1      1   18.1447    370001      1813          8            1       38)
(smt.stats   25   3121  86688 114729  3079/2856/284    3630/229    26  144   54.84)
ramon: poll                 wall=5.000s usage=4.796s mem=57384KiB load=0.99 rootload=0.99
(smt.stats   26   3282  91331 121611  3133/2862/284    3797/297    27  146   54.94)
(smt.stats   27   3459  95296 130045  3164/2944/285    4012/308    28  146   55.19)
(smt.stats   28   3560  98474 136240  3167/2947/285    4118/308    28  146   55.63)
(smt.stats   29   3671 103418 145683  3168/2948/285    4228/308    28  146   55.73)
(smt.stats   30   3793 107519 153111  3174/2953/285    4345/308    28  146   55.73)
(smt.stats   31   3927 109366 157969  3178/2957/285    4506/308    28  146   55.82)
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 8589934591&1
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 2 := 8589934591&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 2 := 8589934596 << 32
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 3 := 8589934591&3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 3 := 8589934596 << 32
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 3 := 8589934591&3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 3 := 8589934596 << 32
(smt.stats   32   4074 111847 162787  3235/2989/293    4681/353    29  153   55.82)
(sat.ddfw       1      1   16.1261    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   33   4235 114921 169588  3297/3037/294    4900/362    29  153   55.92)
ramon: poll                 wall=6.000s usage=5.796s mem=58212KiB load=1.00 rootload=1.00
(smt.stats   34   4412 115596 171177  3575/3133/294    5145/366    29  153   56.11)
(smt.stats   35   4606 116694 174424  4155/3436/294    5450/459    30  155   56.36)
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 15 := 549755813856&16
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 14 := 549755813856&16
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 12 := 549755813856&16
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8 := 549755813856&16
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 549755813856&16
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 16 := 536870912000 << 38
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 549755813856&16
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 16 := 528280977408 << 38
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 549755813856&16
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 16 := 528280977408 << 38
(smt.stats   36   4707 117481 176202  4236/3969/294    5620/465    30  155   56.36)
(smt.stats   37   4818 118536 179454  4276/4034/306    5740/465    30  155   56.36)
(sat.ddfw       1      1   14.7601    560001      2745         10            1       57)
(smt.stats   38   4940 120314 184693  4349/4065/306    6002/465    30  155   56.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 48)
ramon: poll                 wall=7.000s usage=6.847s mem=58988KiB load=1.05 rootload=1.05
(smt.stats   39   5074 123033 194072  4357/4129/306    6097/657    31  162   56.45)
(smt.stats   40   5221 125263 201630  4358/4130/306    6272/657    31  162   56.55)
(smt.stats   41   5382 128338 207596  4422/4134/306    6488/657    31  162   56.55)
(smt.stats   42   5559 131168 213518  4424/4196/306    6677/657    31  162   56.64)
(smt.stats   43   5753 133581 222600  4507/4199/306    6914/657    31  162   56.64)
(smt.stats   44   5966 136966 233486  4565/4291/306    7139/657    31  162   56.64)
ramon: poll                 wall=8.000s usage=7.843s mem=59320KiB load=1.00 rootload=1.00
(smt.stats   45   6067 138252 235709  4659/4372/306    7253/666    31  162   56.74)
(sat.ddfw       1      1   13.5836    670001      3284         11            1       68)
(smt.stats   46   6178 140834 240495  4710/4469/306    7377/671    31  162   57.01)
(smt.stats   47   6300 145402 256976  4738/4502/306    7517/671    31  162   57.01)
ramon: poll                 wall=9.000s usage=8.845s mem=59256KiB load=1.00 rootload=1.00
(smt.stats   48   6434 151887 277724  4763/4530/306    7730/671    31  162   57.10)
(smt.stats   49   6581 154581 285806  4820/4541/307    7876/833    32  165   57.20)
(sat.ddfw       1      1   12.5918    790001      3872         12            1       80)
(smt.stats   50   6742 156109 291292  5391/4659/307    8226/833    32  165   57.39)
(smt.stats   51   6919 158084 301005  5816/5174/307    8707/833    32  165   57.59)
ramon: poll                 wall=10.004s usage=9.851s mem=59760KiB load=1.00 rootload=1.00
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 137438953463 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 137438953462 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 137438953456 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 137438953440 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 137438953408 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8192 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8704 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 10752 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 10240 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 10752 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8192 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8704 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 10752 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 14848 := 137438953464&223338355202
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 23040 := 137438953464&223338355202
(smt.stats   52   7113 162917 324663  6041/5669/333    9628/1088    33  171   57.77)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   53   7326 166623 335490  6717/5817/333    9990/1091    33  171   57.97)
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 274877906928&25769807872
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 4096 := 274877906928&25769807872
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 4096 := 274877906928&25769807872
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 274877906928&25769805328
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 274877906928&25769805328
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 274877906928&25769805328
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 16 := 274877906928&25769805328
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 1024 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 2048 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 3072 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589937664 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589937664 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589970432 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589970935 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589970432 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8590003200 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589954048 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589937664 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589954048 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589937664 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589954550 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8589937664 := 274877906928&25769806848
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 25769806848 := 274877906928&25769806848
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 25769806848 := 721554505736 << 37
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 25769806848 := 274877906928&25769806848
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 25769806848 := 721554505736 << 37
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 25769806848 := 274877906928&25769806848
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 25769806848 := 721554505738 << 37
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 25769806848 := 274877906928&25769806848
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 25769806848 := 721554505738 << 37
(smt.stats   54   7560 171398 351603  7185/6853/357   10677/1251    34  178   58.17)
ramon: poll                 wall=11.000s usage=10.947s mem=60780KiB load=1.10 rootload=1.10
(smt.stats   55   7661 173519 361275  7250/6979/404   10985/1461    35  196   58.36)
(sat.ddfw       1      1   11.7329    920001      4509         13            1       93)
(smt.stats   56   7772 176455 367914  7305/7029/404   11260/1463    35  196   58.46)
(smt.stats   57   7894 179569 384339  7406/7108/405   12250/2000    36  196   58.66)
(smt.stats   58   8028 183295 394895  7452/7204/405   12603/2000    36  196   58.75)
ramon: poll                 wall=12.000s usage=11.947s mem=61212KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.9761   1060001      5196         14            1      108)
(smt.stats   59   8175 190520 462426  7462/7224/405   12940/2000    36  196   58.75)
ramon: poll                 wall=13.000s usage=12.947s mem=61248KiB load=1.00 rootload=1.00
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 12288 := 8388607&119789322240
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 8192 := 8388607&119789322240
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 8388607&119789322240
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 119789322240 := 119789322240 << 22
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 8388607&119789322240
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 669545136128 := 669545136128 << 22
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 8388607&119789322240
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 669545136128 := 669545136128 << 22
(smt.stats   60   8336 194845 494266  7557/7320/416   13262/2424    37  202   58.75)
band: (band[39] (if (= #335 63) 1 (if #569 3 #793)) (shl[64] (* 2 #311) (mod #808 64))) 0 := 33554431&119789322240
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 38 #800 #804) 64)) 669545136128 := 156 << 24
(smt.stats   61   8513 199326 510083  7631/7332/417   13732/2436    37  202   58.94)
(smt.stats   62   8707 203192 545229  7672/7416/423   14018/2438    37  202   59.04)
ramon: poll                 wall=14.000s usage=13.947s mem=61688KiB load=1.00 rootload=1.00
(smt.stats   63   8920 209149 590586  8062/7566/425   15072/2740    38  209   59.63)
(smt.stats   64   9154 218378 647733  8141/7890/427   15866/3059    40  227   59.73)
(sat.ddfw       1      1   10.3128   1210001      5931         15            1      123)
ramon: poll                 wall=15.004s usage=14.954s mem=62160KiB load=1.00 rootload=1.00
(smt.stats   65   9411 228293 685869  8227/7930/427   16796/3062    40  227   59.92)
(smt.stats   66   9512 230122 699157  8291/8039/430   17401/3389    41  234   60.02)
ramon: poll                 wall=16.000s usage=15.946s mem=62280KiB load=1.00 rootload=1.00
(smt.stats   67   9623 235948 745652  8317/8048/430   17569/3391    41  234   60.11)
(sat.ddfw       1      1   9.72644   1370001      6715         16            1      139)
(smt.stats   68   9745 242167 776060  8424/8096/430   17762/3587    42  246   60.11)
ramon: poll                 wall=17.000s usage=16.946s mem=62384KiB load=1.00 rootload=1.00
(smt.stats   69   9879 251650 850212  8552/8248/430   18076/3590    42  246   60.11)
(smt.delete-inactive-clauses  :num-deleted-clauses 160)
(smt.stats   70  10026 256158 893840  8581/8329/432   18506/3651    43  247   60.25)
(smt.stats   71  10187 260984 922142  8636/8344/432   18782/3652    43  247   60.44)
ramon: poll                 wall=18.000s usage=17.946s mem=62776KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.20063   1540001      7549         17            1      156)
(smt.stats   72  10364 264856 985610  8755/8450/433   19109/3854    44  253   60.55)
ramon: poll                 wall=19.000s usage=18.919s mem=63016KiB load=0.97 rootload=0.97
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10558 268798 1028959  8796/8517/433   20001/3892    45  261   60.74)
(smt.stats   74  10771 274492 1091370  8847/8577/433   20412/3892    45  261   61.52)
ramon: poll                 wall=20.000s usage=19.894s mem=64084KiB load=0.98 rootload=0.97
ramon: end                  Fri Nov  1 22:44:54 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.956s
ramon: group.utime          19.940s
ramon: group.stime          0.016s
ramon: group.mempeak        64904KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.066s
ramon: loadavg              0.99
