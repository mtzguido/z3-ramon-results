ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:54:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28515 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/eGcxPxs5ztzI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             489793
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   232/232     0/0  69       0    18.51   0.00)
(sat.stats    103    605    0   232/232   103/31  69       0    18.86   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    605    0   232/232   103/31  69       0    18.86   0.01)
(sat.stats    103    605    0   232/232   103/31  69       0    18.86   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 365618.86 :time 0.00)
(sat.stats    103    605    0   234/234    39/30  69       0    18.86   0.01)
(sat.stats    173   1691    1   234/234   109/86  69       0    18.96   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    176   1740    2   234/234   112/86  69       0    18.96   0.01)
(sat.stats    179   1789    3   234/234   115/86  69       0    18.96   0.01)
(sat.stats    182   1836    4   234/234   118/86  69       0    18.96   0.01)
(sat.stats    185   1889    5   234/234   121/86  69       0    18.96   0.01)
(sat.stats    188   1966    6   234/234   124/86  69       0    18.96   0.01)
(sat.stats    191   2024    7   234/234   127/89  69       0    18.96   0.01)
(sat.stats    194   2068    8   234/234   130/92  69       0    18.96   0.01)
(sat.stats    197   2127    9   234/234   133/95  69       0    18.96   0.01)
(sat.stats    200   2208   10   234/234   136/97  69       0    18.96   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    203   2274   11   234/234   139/100  69       0    18.96   0.01)
(sat.stats    206   2383   12   234/234   142/103  69       0    18.96   0.01)
(sat.stats    295   4213   13   239/239   231/154  69       0    19.56   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1986 :time 0.00)
(sat.stats    316   4950   20   238/238   252/158  75       0    19.56   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2605 :time 0.00)
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 2837 :time 0.00)
(sat.stats    561  11233   46   638/638   492/215  82       0    19.85   0.23)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 4320 :time 0.00)
(sat.stats    801  17826   54  1438/1438   740/255  83       0    20.14   0.43)
lshr: (lshr[50] (bv2int %0) (+ 50 (* 1125899906842623 #68))) 10 := 10 >>l 32
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
lshr: (lshr[64] (* 8192 (bv2int %0)) (mod (+ 63 #576 #580) 64)) 9223372036854767616 := 9223372036854767616 >>l 45
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 5816 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 6493 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1076  26326   75  2224/2223  1027/285  94       0    20.34   0.63)
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 1 := 1&524288
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 7874 :time 0.00)
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 26352 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 262126 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 36960 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 211776 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 90368 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 128 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 105984 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 185344 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 129024 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 110592 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 155648 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 32768 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 16384 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 65536 := 262142&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 131072 := 262142&524288
 (sat-cleaner :elim-literals 6 :elim-clauses 0 :cost 8364 :time 0.00)
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 12 := 262143&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 8 := 262143&524288
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 16694 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 118365 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 36716 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 90336 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 8 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 16 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 119680 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 64 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 64768 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 171520 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 147456 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 1024 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 2048 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 12288 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 8192 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 32768 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 65536 := 524288&262143
band: (band[50] (lshr[50] (bv2int %0) (+ 50 #465)) (if (= #67 49) 1125899906842624 (if #469 562949953421312 #565))) 0 := 262143&524288
band: (band[50] (if (= #293 63) 18446744073709551616 (if #443 9223372036854775808 #440)) (lshr[64] (* 8192 #64) (mod #583 64))) 131072 := 524288&262143
 (sat-cleaner :elim-literals 8 :elim-clauses 1 :cost 9512 :time 0.00)
ramon: poll                 wall=1.000s usage=0.938s mem=23368KiB load=0.94 rootload=0.92
 (sat-cleaner :elim-literals 1 :elim-clauses 5 :cost 11331 :time 0.00)
(sat.stats   2000  43524  140  6353/6351  1994/365 321       0    22.81   1.52)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 14925 :time 0.00)
ramon: poll                 wall=2.000s usage=1.937s mem=26388KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.004s usage=2.941s mem=28676KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 27901 :time 0.00)
ramon: poll                 wall=4.000s usage=3.936s mem=30896KiB load=1.00 rootload=0.99
(sat.stats   4422 162403  216 27203/27201  4517/808 358       0    29.80   4.38)
(sat.stats   4425 162471  217 27203/27201  4518/808 358       0    29.80   4.38)
ramon: poll                 wall=5.000s usage=4.936s mem=31268KiB load=1.00 rootload=1.00
(sat.stats   5871 185562  294 27404/27402  5362/940 358       0    30.04   5.24)
ramon: poll                 wall=6.000s usage=5.936s mem=31860KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 44146 :time 0.00)
ramon: poll                 wall=7.000s usage=6.935s mem=32108KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 13 :elim-clauses 0 :cost 46781 :time 0.00)
ramon: poll                 wall=8.000s usage=7.935s mem=32532KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.935s mem=32752KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.935s mem=32988KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.934s mem=33076KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.934s mem=33268KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.934s mem=33404KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.934s mem=33780KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.934s mem=33808KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.933s mem=33940KiB load=1.00 rootload=1.00
(sat.stats  14385 417323  478 45108/45106 10392/1309 362       0    32.83  16.71)
(sat.stats :conflicts  :restarts       :learned/bin           :gc         :time )
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats  14391 417330  479 45108/45106 10398/1309 362       0    32.83  16.71)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 68035 :time 0.00)
ramon: poll                 wall=17.000s usage=16.933s mem=34076KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 69488 :time 0.00)
ramon: poll                 wall=18.000s usage=17.933s mem=34416KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.004s usage=18.937s mem=35112KiB load=1.00 rootload=1.00
(sat.stats  18208 483521  947 60463/60461 12610/1694 364       0    34.18  19.52)
ramon: poll                 wall=20.000s usage=19.933s mem=35656KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:54:26 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          20.000s
ramon: group.utime          19.972s
ramon: group.stime          0.028s
ramon: group.mempeak        36168KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.067s
ramon: loadavg              1.00
