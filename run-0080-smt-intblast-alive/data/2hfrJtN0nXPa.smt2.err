ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:27:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30987 MiB
ramon: sys.mem.avail        61767 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2hfrJtN0nXPa.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4036671
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4492   2591  1168/1053/90      97/8     3   14   19.11)
(smt.stats    1    202   5703   3618  1774/1576/90     193/10     3   14   19.20)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&11
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&11
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&11
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&0
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 562949953421312 := 10 << 10
(smt.stats    2    313   7055   5044  1948/1751/103     296/13     5   19   19.30)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10238
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10236
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&12
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&16
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&12
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&16
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&32
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&30
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&28
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&12
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&16
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&64
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&14
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&12
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 511&12
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&12
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 511&12
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&12
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 511&12
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 12 := 511&12
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 12 := 10 << 10
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 480 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 448 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 384 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 32 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 256 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 64 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 64 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 128 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 64 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 64 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 64 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 256 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 32 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 32 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 16 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 7 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 6 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 4 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 10241 := 10 << 10
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 10241 := 10 << 10
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 10241 := 10 << 10
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 1 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 2 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 2 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 508 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 504 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 16 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 480 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 448 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 384 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 256 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 10495 := 10 << 10
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 256 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 384 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 256 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 256 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 128 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 128 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 128 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 1 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 2 := 10240&511
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 3 := 511&10240
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 511&10240
band: (band[49] (shl[49] (bv2int %0) (mod #110 49)) (if (= #609 48) 0 (if #611 1 #745))) 4 := 10240&511
(smt.stats    3    414   8074   6729  2110/1868/237     410/23     6   40   20.03)
(smt.stats    4    525   9099   9067  2367/2145/286     489/64    10   92   20.32)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&16
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842640 := 549755813895 << 1
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&16
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842640 := 549755813944 << 1
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&16
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842640 := 549755813895 << 1
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&16
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842640 := 1099511627740 << 1
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&16
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842640 := 549755813895 << 1
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&16
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842640 := 549755813895 << 1
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&16
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842640 := 1099511627740 << 1
(smt.stats    5    647  12509  14216  2420/2181/294     610/70    12   99   20.42)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&2
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 512 := 1 << 1
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748  14343  16784  2611/2332/295     772/79    14  103   20.90)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&2
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2687 := 1 << 1
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&2
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 2943 := 1 << 1
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 0 := 0&2
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 1149 := 1 << 1
(smt.stats    7    859  16957  23782  2692/2417/306     936/100    16  105   21.11)
(smt.stats    8    982  19385  28912  2772/2483/327    1129/128    19  167   21.32)
(smt.stats    9   1116  24471  38480  2797/2506/327    1401/128    19  167   21.32)
(smt.stats   10   1217  28651  49099  2805/2514/327    1558/136    20  167   21.43)
(smt.stats   11   1328  35847  66430  2810/2518/327    1669/136    20  167   21.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  38958  73821  2820/2528/329    1865/155    21  169   21.43)
(smt.stats   13   1584  45667  83437  2830/2529/329    2025/155    21  169   21.52)
(smt.stats   14   1731  52726  99181  2841/2549/329    2263/161    22  172   21.52)
(smt.stats   15   1832  56476 109505  2848/2556/331    2399/183    23  178   21.52)
(smt.stats   16   1943  60008 120242  2851/2559/331    2512/187    24  178   21.52)
(smt.stats   17   2065  65910 132003  2855/2563/332    2649/193    25  182   21.62)
(smt.stats   18   2199  73117 147208  2859/2567/332    2789/193    25  182   21.62)
ramon: poll                 wall=1.000s usage=0.926s mem=23416KiB load=0.93 rootload=0.91
(smt.stats   19   2346  78748 157681  2897/2601/334    3072/212    26  182   21.81)
(smt.stats   20   2507  82561 163111  3064/2652/335    3402/216    26  182   21.91)
(smt.stats   21   2608  85046 166494  3217/2776/335    3684/218    26  182   22.10)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 128 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 129 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 128 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 129 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 192 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 192 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 193 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 193 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 192 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 192 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 192 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 192 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 193 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 320 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 321 := 8796093022207&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 562949953421633 := 281483566645346 << 44
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 320 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 320 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 321 := 8796093022207&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 562949953421633 := 281483566645346 << 44
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 321 := 8796093022207&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 562949953421633 := 281483566645346 << 44
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 321 := 8796093022207&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 288793326105133377 := 281483566645346 << 44
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 321 := 8796093022207&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 288793326105133377 := 281483566645346 << 44
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 320 := 8796093022207&321
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 321 := 8796093022207&321
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 288793326105133377 := 281483566645346 << 44
(smt.stats   22   2719  88333 174191  3328/2933/335    4128/271    27  187   22.20)
(smt.stats   23   2841  93488 181366  3376/3053/351    4510/327    28  192   22.20)
(smt.stats   24   2975  97315 190429  3513/3125/351    5107/330    28  192   22.29)
(smt.stats   25   3122 102313 203030  3535/3241/352    5582/471    29  197   22.40)
(smt.stats   26   3283 111321 220385  3539/3245/353    5851/519    30  197   22.54)
ramon: poll                 wall=2.000s usage=1.926s mem=23896KiB load=1.00 rootload=1.00
(smt.stats   27   3460 118246 240275  3610/3314/354    6218/592    31  197   22.63)
(smt.stats   28   3561 120746 246876  3659/3323/359    6477/592    31  197   22.63)
(smt.stats   29   3672 123582 256644  3782/3390/359    6740/593    31  197   22.73)
(smt.stats   30   3794 128989 275176  3807/3488/359    6951/665    32  214   22.73)
(smt.stats   31   3928 132612 284584  3867/3533/360    7344/696    33  214   22.82)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 135913 294683  3930/3585/362    7644/696    33  214   22.98)
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 70368744177663&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842625 := 549755813892 << 47
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 70368744177663&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842625 := 549755813892 << 47
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 70368744177663&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1125899906842625 := 549755813892 << 47
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 70368744177663&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1688849860263937 := 549755813892 << 47
band: (band[49] (if (or #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 #775 #776 ...) 0 (if #778 1 #870)) (shl[64] (bv2int %0) (mod #935 64))) 1 := 70368744177663&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #934) 64)) 1688849860263937 := 549755813892 << 47
(smt.stats   33   4236 140231 306665  4011/3644/362    8087/806    34  220   22.98)
ramon: poll                 wall=3.000s usage=2.925s mem=24572KiB load=1.00 rootload=1.00
(smt.stats   34   4413 145754 324308  4218/3723/367    8577/813    34  220   23.17)
(smt.stats   35   4607 150688 337476  4278/3926/367    9078/892    35  221   23.36)
(smt.stats   36   4708 154018 349074  4340/4005/367    9407/893    35  221   23.36)
(smt.stats   37   4819 159201 366466  4368/4054/367    9789/895    35  221   23.36)
(smt.stats   38   4941 162275 376103  4470/4075/367   10449/895    35  221   23.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 113)
ramon: poll                 wall=4.000s usage=3.925s mem=24912KiB load=1.00 rootload=1.00
(smt.stats   39   5075 167169 389645  4495/4182/367   10881/899    35  221   23.55)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   40   5222 174036 414366  4561/4218/368   11287/1223    36  221   23.75)
(smt.stats   41   5383 175594 417369  4858/4280/368   11544/1225    36  221   24.13)
ramon: poll                 wall=5.000s usage=4.925s mem=25652KiB load=1.00 rootload=1.00
(smt.stats   42   5560 179631 425923  5202/4904/371   12064/1226    36  221   24.23)
(smt.stats   43   5754 185852 449838  5322/4943/373   12642/1233    36  221   24.32)
(smt.stats   44   5967 190540 472588  5592/5284/375   13301/1422    37  239   24.42)
(smt.stats   45   6068 194645 480084  5595/5287/381   13582/1422    37  239   24.52)
(smt.stats   46   6179 198135 497272  5602/5293/381   13947/1535    38  258   24.52)
ramon: poll                 wall=6.000s usage=5.924s mem=26064KiB load=1.00 rootload=0.99
(smt.stats   47   6301 202050 507552  5712/5390/383   14316/1541    38  258   24.61)
(smt.stats   48   6435 206587 523915  5816/5498/384   14844/1701    39  259   24.71)
(smt.stats   49   6582 210305 536689  5833/5516/384   15282/1703    39  259   24.71)
(smt.stats   50   6743 218028 579551  5855/5532/385   15742/1752    40  259   24.81)
(smt.stats   51   6920 227458 628017  5872/5558/385   16508/1819    41  260   24.81)
ramon: poll                 wall=7.000s usage=6.924s mem=26384KiB load=1.00 rootload=1.00
(smt.stats   52   7114 234413 666620  5884/5578/389   17260/1913    42  274   25.02)
(smt.stats   53   7327 238946 689126  6055/5744/391   17984/2051    43  290   25.21)
(smt.stats   54   7561 242466 707562  6522/5790/391   18621/2054    43  290   25.40)
ramon: poll                 wall=8.000s usage=7.924s mem=26824KiB load=1.00 rootload=1.00
(smt.stats   55   7662 245317 723807  6587/6271/391   18978/2054    43  290   25.40)
(smt.stats   56   7773 247480 736791  6600/6280/391   19323/2217    44  292   25.50)
(smt.stats   57   7895 251280 755456  6619/6300/393   19555/2217    44  292   25.59)
(smt.stats   58   8029 254802 768304  6626/6307/393   19826/2217    44  292   25.59)
(smt.stats   59   8176 260689 804346  6638/6319/393   20223/2279    45  304   25.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8337 270539 860790  6642/6322/393   20405/2279    45  304   25.59)
(smt.stats   61   8514 275626 884763  6654/6334/394   20811/2358    46  307   25.59)
ramon: poll                 wall=9.000s usage=8.923s mem=27092KiB load=1.00 rootload=1.00
(smt.stats   62   8708 281620 920236  6697/6371/394   21571/2359    46  307   25.78)
(smt.stats   63   8921 286647 946910  6709/6388/396   22319/2522    47  310   25.88)
(smt.stats   64   9155 291039 967270  6782/6417/396   22982/2529    47  310   25.97)
(smt.stats   65   9412 302934 1045620  6793/6464/398   23616/2529    47  310   26.07)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   66   9513 305226 1056399  6798/6469/399   23962/2665    48  315   26.07)
(smt.stats   67   9624 312283 1082532  6801/6471/399   24121/2666    48  315   26.07)
ramon: poll                 wall=10.000s usage=9.923s mem=27664KiB load=1.00 rootload=1.00
(smt.stats   68   9746 317275 1103895  6865/6485/399   24420/2667    48  315   26.17)
(smt.stats   69   9880 321018 1116300  6893/6539/399   24777/2669    48  315   26.17)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 324142 1133192  6933/6583/401   25433/2792    49  320   26.26)
ramon: poll                 wall=11.000s usage=10.923s mem=28104KiB load=1.00 rootload=1.00
(smt.stats   71  10188 327590 1143234  7148/6619/401   25957/2799    49  320   26.45)
(smt.stats   72  10365 331785 1161956  7408/6886/406   26604/2802    49  320   26.45)
ramon: poll                 wall=12.000s usage=11.922s mem=28176KiB load=1.00 rootload=1.00
(smt.stats   73  10559 335650 1175181  7612/7113/406   27157/2804    49  320   26.64)
(smt.stats   74  10772 340509 1203980  7848/7299/406   27570/2804    49  320   26.83)
ramon: poll                 wall=13.000s usage=12.922s mem=28364KiB load=1.00 rootload=1.00
(smt.stats   75  11006 344351 1221306  8365/8038/407   28304/3013    50  328   27.02)
ramon: poll                 wall=14.000s usage=13.922s mem=28504KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.921s mem=28860KiB load=1.00 rootload=1.00
(smt.stats   76  11263 353524 1274691  8747/8044/407   29086/3016    50  328   27.22)
ramon: poll                 wall=16.000s usage=15.921s mem=29044KiB load=1.00 rootload=1.00
(smt.stats   77  11545 358582 1295625  9184/8465/407   29728/3017    50  328   27.65)
(smt.stats   78  11646 361331 1312469  9369/8871/408   29975/3185    51  332   27.84)
ramon: poll                 wall=17.000s usage=16.921s mem=29512KiB load=1.00 rootload=1.00
(smt.stats   79  11757 363592 1316001  9388/9055/408   30225/3185    51  332   27.84)
ramon: poll                 wall=18.000s usage=17.920s mem=29572KiB load=1.00 rootload=1.00
(smt.stats   80  11879 366058 1323981  9461/9066/408   30564/3185    51  332   27.94)
(smt.stats   81  12013 368054 1335377  9495/9147/408   31353/3185    51  332   27.94)
(smt.stats   82  12160 377093 1380191  9506/9179/408   31929/3185    51  332   28.03)
ramon: poll                 wall=19.000s usage=18.920s mem=29784KiB load=1.00 rootload=1.00
(smt.stats   83  12321 384466 1421446  9597/9186/408   32651/3185    51  332   28.13)
(smt.stats   84  12498 389201 1443600  9641/9281/408   33499/3185    51  332   28.13)
(smt.stats   85  12692 398261 1494662  9671/9328/408   35224/3185    51  332   28.33)
ramon: poll                 wall=20.001s usage=19.920s mem=30012KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:28:08 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.976s
ramon: group.stime          0.020s
ramon: group.mempeak        30524KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.077s
ramon: loadavg              1.00
