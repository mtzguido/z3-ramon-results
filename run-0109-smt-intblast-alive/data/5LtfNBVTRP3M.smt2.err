ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:29:38 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42796 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/5LtfNBVTRP3M.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2794560
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   2688    220  1336/1201/117     106/16     7   21   19.44)
(smt.stats    1    202   5868    997  2044/1770/117     268/19     7   21   19.54)
(smt.stats    2    313   7886   1862  2111/1886/117     405/19     7   21   19.54)
(smt.stats    3    414  10141   6037  2225/2047/118     536/69     8   22   19.75)
(smt.stats    4    525  12549   7922  2906/2665/122     718/111    10   24   19.85)
(smt.stats    5    647  13714  11833  2991/2685/123     853/131    11   24   19.95)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  15994  17750  3015/2753/128     970/146    14   25   20.07)
(smt.stats    7    859  16961  18957  3225/2882/128    1104/146    14   25   20.07)
ramon: poll                 wall=1.000s usage=0.999s mem=21196KiB load=1.00 rootload=0.99
(smt.stats    8    981  19053  21000  3279/3025/133    1233/171    16   29   20.17)
(smt.stats    9   1115  21380  25676  3304/3031/135    1433/171    16   29   20.17)
(smt.stats   10   1216  23153  30664  3332/3061/138    1547/198    18   34   20.32)
(smt.stats   11   1327  24029  32370  3451/3094/138    1673/198    18   34   20.32)
(smt.stats   12   1449  25935  37033  3536/3220/138    1810/202    19   36   20.41)
(smt.stats   13   1583  27527  43351  3552/3288/139    1944/206    20   37   20.41)
(smt.stats   14   1730  28342  44621  3609/3302/139    2122/206    20   37   20.41)
(smt.stats   15   1831  29419  46198  3648/3368/139    2278/206    20   37   20.41)
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 2305842734335787008 := 2305842734335787010&2305842734335787008
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 2305842734335787010 := 0 >>l 26
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 1&2305842734335787008
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 1 := 8 >>l 26
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 1&2305842734335787008
lshr: (lshr[61] (bv2int %1) (mod (bv2int %0) 61)) 8388609 := 8388608 >>l 23
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 1&2305842734335787008
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 1 := 8 >>l 26
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 1&2305842734335787008
lshr: (lshr[61] (bv2int %1) (mod (bv2int %0) 61)) 1 := 8388608 >>l 23
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 1&2305842734335787008
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 1 := 1&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 1 := 1&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 274877906943 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 274877906942 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 274877906940 := 274877906940&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 274877906940 := 274877906940&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 274877906936 := 274877906936&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 274877906928 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 32 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 64 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 128 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 256 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 512 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 1024 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 2048 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 4096 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 8192 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 16384 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 32768 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 4096 := 274877906943&2305842734335787008
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 8192 := 274877906943&2305842734335787008
(smt.stats   16   1942  30150  48740  3800/3441/156    2407/252    21   38   20.90)
(smt.stats   17   2064  31205  52423  3844/3579/237    2573/303    22   60   20.90)
(smt.stats   18   2198  33086  57076  3850/3587/237    2766/303    23   64   21.14)
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 32 := 2305843009213693945&2305843009213693888
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 32 := 2305843009213693945&2305843009213693888
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 32 := 2305843009213693449&2305843009213693888
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 32 := 2305843009213693503&2305843009213693888
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 32 := 2305843009213693503&2305843009213693888
(smt.stats   19   2345  34707  60747  3955/3605/245    3039/324    24   64   21.14)
(smt.stats   20   2506  35356  61979  4288/3723/245    3361/327    24   64   21.33)
(smt.stats   21   2607  36449  66024  4623/4122/247    3646/330    24   64   21.53)
ramon: poll                 wall=2.000s usage=1.998s mem=22800KiB load=1.00 rootload=1.00
(smt.stats   22   2718  38731  72612  5144/4445/247    3958/406    25   72   21.63)
(smt.stats   23   2840  39715  75261  5663/4926/247    4285/410    25   72   21.93)
(smt.stats   24   2974  42012  84789  6114/5850/248    4799/469    26   74   22.03)
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 67108865&0
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 67108865 := 67108864 >>l 3
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 1&0
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 1 := 134217728 >>l 3
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 1&0
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 1 := 134217728 >>l 3
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions    )
(smt.stats   25   3121  45392 123511  6165/5898/262    6618/1300    27   87   22.23)
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 1&0
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 1 := 134217728 >>l 3
(smt.stats   26   3282  48894 172904  6201/5929/265    7561/2306    28   96   22.32)
(smt.stats   27   3459  51358 201512  6305/5938/265    8561/2309    28   96   22.42)
(smt.stats   28   3560  52606 215949  6346/6068/269    8776/2826    29   97   22.51)
(smt.stats   29   3671  55156 252331  6381/6076/269    9216/2828    29   97   22.51)
(smt.stats   30   3793  57260 290043  6468/6122/270    9565/3136    30  109   22.51)
(smt.stats   31   3927  60583 338927  6475/6199/270   10215/3272    31  109   22.61)
ramon: poll                 wall=3.000s usage=2.998s mem=23904KiB load=1.00 rootload=0.99
(smt.stats   32   4074  64114 389012  6493/6200/270   11004/3272    31  109   22.70)
(smt.stats   33   4235  66838 406344  6577/6231/270   11235/3273    31  109   22.82)
(smt.stats   34   4412  68962 411025  6699/6355/270   11435/3275    31  109   22.82)
(smt.stats   35   4606  71533 425290  6784/6462/270   11794/3276    31  109   22.92)
(smt.stats   36   4707  71989 426720  6900/6565/270   11924/3277    31  109   22.92)
(smt.stats   37   4818  77224 470892  6950/6664/270   12870/3278    31  109   23.03)
(smt.stats   38   4940  81111 503225  6974/6684/270   13133/3278    31  109   23.12)
ramon: poll                 wall=4.000s usage=3.997s mem=24388KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 207)
(smt.stats   39   5074  85725 556203  6989/6705/270   13191/3280    31  109   23.12)
(smt.stats   40   5221  88495 591038  7050/6717/270   13429/3281    31  109   23.40)
(smt.stats   41   5382  90598 645273  7079/6776/270   13651/3282    31  109   23.40)
(smt.stats   42   5559  94072 668707  7124/6809/270   14047/3282    31  109   23.49)
(smt.stats   43   5753  98223 711737  7222/6911/270   14307/3282    31  109   23.49)
ramon: poll                 wall=5.000s usage=4.997s mem=24832KiB load=1.00 rootload=1.00
(smt.stats   44   5966 105592 766642  7274/6956/270   14653/3284    31  109   23.59)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6067 106570 772439  7340/7062/270   14764/3284    31  109   23.68)
(smt.stats   46   6178 109124 809874  7344/7066/270   14923/3284    31  109   23.68)
(smt.stats   47   6300 109813 825437  7346/7068/270   15063/3284    31  109   23.68)
(smt.stats   48   6434 112067 850022  7349/7071/272   15296/5019    32  117   23.78)
(smt.stats   49   6581 115258 896452  7361/7072/272   15506/5019    32  117   23.78)
(smt.stats   50   6742 117780 951963  7364/7086/272   15710/5044    33  120   23.78)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   51   6919 122449 1030056  7370/7090/272   16032/5044    33  120   23.88)
(smt.stats   52   7113 125328 1064424  7382/7098/272   16447/5044    33  120   24.31)
ramon: poll                 wall=6.003s usage=6.000s mem=25744KiB load=1.00 rootload=1.01
(smt.stats   53   7326 130907 1125324  7388/7110/272   16879/5044    33  120   24.40)
(smt.stats   54   7560 134602 1190965  7389/7111/272   17150/5044    33  120   24.40)
(smt.stats   55   7661 136574 1246720  7389/7111/272   17273/5044    33  120   24.50)
(smt.stats   56   7772 139828 1308282  7389/7111/272   17440/5044    33  120   24.50)
(smt.stats   57   7894 143843 1364270  7391/7113/272   17602/5044    33  120   24.60)
(smt.stats   58   8028 146487 1408296  7392/7114/272   17829/5044    33  120   24.60)
(smt.stats   59   8175 148099 1443056  7393/7115/272   18002/5044    33  120   24.69)
(smt.stats   60   8336 151756 1514638  7403/7115/272   18191/5044    33  120   24.69)
(smt.stats   61   8513 155591 1573871  7412/7134/272   18545/5044    33  120   24.82)
ramon: poll                 wall=7.000s usage=6.996s mem=26356KiB load=1.00 rootload=0.99
(smt.stats   62   8707 161836 1651598  7413/7135/272   18896/5044    33  120   24.92)
(smt.stats   63   8920 165488 1712380  7414/7136/272   19167/5044    33  120   25.02)
(smt.stats   64   9154 175490 1782645  7427/7136/272   19609/5044    33  120   25.84)
(smt.stats   65   9411 185968 1860692  7438/7160/273   19868/5932    34  132   25.94)
(smt.stats   66   9512 189055 1885856  7442/7164/273   19971/5932    34  132   26.03)
(smt.stats   67   9623 194630 1930514  7442/7164/273   20082/5932    34  132   26.03)
(smt.stats   68   9745 199342 1975676  7442/7164/273   20204/5932    34  132   26.13)
(smt.stats   69   9879 203681 2025762  7446/7164/273   20341/5933    34  132   26.13)
(smt.delete-inactive-clauses  :num-deleted-clauses 273)
(smt.stats   70  10026 205481 2047504  7447/7169/273   20353/5933    34  132   26.22)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   71  10187 210748 2099419  7453/7169/273   20654/5933    34  132   26.22)
(smt.stats   72  10364 217970 2174799  7458/7180/273   20910/5933    34  132   26.22)
ramon: poll                 wall=8.000s usage=7.996s mem=27788KiB load=1.00 rootload=1.00
(smt.stats   73  10558 227086 2269494  7458/7180/273   21236/5933    34  132   26.22)
(smt.stats   74  10771 237354 2373790  7458/7180/273   21456/5933    34  132   26.32)
(smt.stats   75  11005 249299 2493748  7458/7180/273   21737/5933    34  132   26.32)
(smt.stats   76  11262 260951 2642562  7459/7181/273   22114/5933    34  132   26.42)
ramon: poll                 wall=9.000s usage=8.996s mem=28136KiB load=1.00 rootload=1.00
(smt.stats   77  11544 266741 2680526  7576/7298/275   23195/6296    35  132   26.52)
(smt.stats   78  11645 268618 2690458  7599/7305/277   23346/6297    35  132   26.52)
(smt.stats   79  11756 270331 2716120  7617/7331/277   23591/6297    35  132   26.61)
(smt.stats   80  11878 272487 2756067  7653/7353/277   23729/6297    35  132   26.61)
(smt.stats   81  12159 278621 2790883  7665/7378/277   24030/6342    36  143   26.61)
(smt.stats   82  12320 282562 2857132  7690/7404/277   24222/6342    36  143   26.61)
ramon: poll                 wall=10.000s usage=9.995s mem=28276KiB load=1.00 rootload=1.00
(smt.stats   83  12497 286389 2908972  7694/7416/277   24528/6342    36  143   26.71)
(smt.stats   84  12691 290335 2992636  7703/7421/278   24777/6396    37  144   26.71)
(smt.stats   85  12904 297566 3121903  7703/7425/278   25059/6396    37  144   26.71)
(smt.stats   86  13138 301750 3184158  7732/7430/279   25372/6485    38  144   26.81)
(smt.stats   87  13395 308352 3335450  7734/7456/279   25662/6485    38  144   26.90)
ramon: poll                 wall=11.000s usage=10.995s mem=28584KiB load=1.00 rootload=1.00
(smt.stats   88  13677 313882 3450232  7739/7459/279   25977/6485    38  144   27.00)
(smt.stats   89  13987 321432 3588647  7768/7467/279   26409/6486    38  144   27.00)
(smt.stats   90  14088 322375 3593520  7778/7496/279   26566/6486    38  144   27.09)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   91  14199 324670 3596862  7778/7500/279   26764/6486    38  144   27.09)
(smt.stats   92  14321 327058 3599787  7781/7500/279   26894/6486    38  144   27.09)
(smt.stats   93  14455 328522 3604376  7812/7505/279   27032/6486    38  144   27.09)
(smt.stats   94  14602 331339 3667716  7819/7541/279   27196/6486    38  144   27.19)
(smt.stats   95  14763 335261 3766553  7823/7545/279   27370/6486    38  144   27.38)
(smt.stats   96  14940 341796 3868956  7823/7545/279   27664/6486    38  144   27.48)
(smt.delete-inactive-clauses  :num-deleted-clauses 80)
ramon: poll                 wall=12.000s usage=11.995s mem=29128KiB load=1.00 rootload=1.00
(smt.stats   97  15134 346825 3978902  7823/7545/279   27825/6486    38  144   27.48)
(smt.stats   98  15347 351628 4029417  7986/7546/279   28094/6490    38  144   27.57)
(smt.stats   99  15581 354938 4048924  8172/7795/279   28473/6494    38  144   27.67)
(smt.stats  100  15838 360970 4138731  8193/7896/279   29166/6494    38  144   29.28)
ramon: poll                 wall=13.000s usage=12.994s mem=31064KiB load=1.00 rootload=1.00
(smt.stats  101  16120 364674 4222038  8226/7932/279   29648/6495    38  144   29.38)
(smt.stats  102  16430 373818 4457440  8228/7950/279   30013/6495    38  144   29.38)
(smt.stats  103  16770 382847 4688856  8235/7950/279   30466/6495    38  144   29.47)
(smt.stats  104  16871 386237 4745440  8237/7958/279   30588/6495    38  144   29.47)
(smt.stats  105  16982 388675 4786043  8238/7960/279   30710/6495    38  144   29.47)
(smt.stats  106  17104 391032 4837701  8238/7960/279   30872/6495    38  144   29.47)
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 6 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 9 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 9 := 35&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 8 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 8 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 8 := 35&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 8 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 8 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 8 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 8 := 40&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 34&2305843008945258496
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 2305843009213693986 := 288 >>l 36
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 338&2305843008945258496
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 338 := 280 >>l 36
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 290&2305843008945258496
lshr: (lshr[64] (* 8 (bv2int %1)) (mod (+ 3 #113 #382) 64)) 290 := 280 >>l 36
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 34&2305843008945258496
lshr: (lshr[61] (bv2int %1) (mod (bv2int %0) 61)) 34 := 292057776128 >>l 33
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 34&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 34 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 34&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 33 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 34&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 1 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 34&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 4 := 34&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 34&2305843008945258496
lshr: (lshr[61] (bv2int %1) (mod (bv2int %0) 61)) 74 := 292057776128 >>l 33
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 50&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 45 := 50&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 50&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 44 := 50&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 50&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 40 := 50&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 50&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 48 := 50&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 66&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 64 := 66&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 66&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 64 := 66&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 130&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 128 := 130&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 258&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 256 := 258&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 514&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 512 := 514&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 258&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 257 := 258&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 258&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 256 := 258&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 514&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 512 := 514&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 1042&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 1024 := 1042&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 2066&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 2048 := 2066&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 2082&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 2048 := 2082&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 4098&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 4096 := 4098&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 8194&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 8192 := 8194&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 16386&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 16384 := 16386&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 6130&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 1024 := 6130&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 6130&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 1024 := 6130&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 8210&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 8192 := 8210&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 6130&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 2048 := 6130&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 6146&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 2048 := 6146&2305843008945258496
(smt.stats  107  17238 392700 4872350  8473/8155/414   31110/7279    39  147   30.07)
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 0 := 4114&2305843008945258496
band: (band[61] (lshr[61] (bv2int %1) (mod #113 61)) (if (= #540 60) 1329227995784915871750885555673497600 (if #542 664613997892457935875442777836748800 #660))) 4096 := 4114&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 2424832 := 2457602&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 2424832 := 2457602&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 2424832 := 2457602&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 2424832 := 2457602&2305843008945258496
band: (band[61] (lshr[64] (* 8 #112) (mod #383 64)) (if (= #683 63) 21267647932558653948014168890775961600 (if #685 10633823966279326974007084445387980800 #809))) 2424832 := 2457602&2305843008945258496
ramon: poll                 wall=14.000s usage=13.989s mem=31988KiB load=0.99 rootload=0.98
(smt.stats  108  17385 395152 4903143  8870/8505/446   31689/7285    39  147   30.60)
(smt.stats  109  17546 402205 4947855  8873/8562/447   32156/7285    39  147   30.60)
(smt.stats  110  17723 410387 5046892  8851/8567/447   32450/7621    40  185   30.71)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  111  17917 419249 5133699  8916/8618/447   32921/7621    40  185   30.80)
ramon: poll                 wall=15.000s usage=14.988s mem=32668KiB load=1.00 rootload=1.00
(smt.stats  112  18130 425555 5200809  9218/8620/447   33616/7621    40  185   30.99)
ramon: poll                 wall=16.000s usage=15.988s mem=33504KiB load=1.00 rootload=1.00
(smt.stats  113  18364 430622 5255197  9769/9000/447   34468/7627    40  185   31.38)
(smt.stats  114  18621 434271 5270444 10025/9526/447   35009/7634    40  185   31.47)
ramon: poll                 wall=17.000s usage=16.988s mem=33524KiB load=1.00 rootload=1.00
(smt.stats  115  18903 439837 5346282 10323/9765/447   35677/7641    40  185   31.62)
ramon: poll                 wall=18.000s usage=17.987s mem=33580KiB load=1.00 rootload=1.00
(smt.stats  116  19213 454080 5400945 10661/10237/449   36487/8264    41  185   31.72)
ramon: poll                 wall=19.000s usage=18.987s mem=33904KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  117  19553 467212 5501009 10928/10442/450   37602/8267    41  185   32.02)
(smt.stats  118  19926 477473 5572158 11236/10652/452   38260/8533    42  185   32.11)
(smt.delete-inactive-clauses  :num-deleted-clauses 145)
(smt.stats  119  20027 480593 5600057 11401/11073/452   39385/8535    42  185   32.30)
ramon: poll                 wall=20.000s usage=19.987s mem=34308KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:29:58 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.972s
ramon: group.stime          0.024s
ramon: group.mempeak        34568KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.010s
ramon: loadavg              1.00
