ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:03:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24630 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rSsbSFXqwgbw.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             165425
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2244    537  1354/1203/116     100/9     7   17   19.45)
(smt.stats    1    202   2598    875  1958/1754/116     235/11     7   17   19.45)
(smt.stats    2    313   5997   2198  2016/1813/119     376/25     8   22   19.55)
(smt.stats    3    414   8922   6346  2318/2119/124     498/58    11   31   19.65)
(smt.stats    4    525  10257   9483  2862/2287/124     608/90    12   32   19.84)
(smt.stats    5    647  16096  14085  2870/2618/124     731/90    12   32   19.84)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  19129  15959  2871/2619/125     829/89    13   35   19.95)
(smt.stats    7    859  21304  18041  2871/2619/125     940/89    13   35   20.05)
(smt.stats    8    981  23043  20949  2871/2619/125    1062/89    13   35   20.05)
(smt.stats    9   1115  25792  23605  2871/2619/125    1196/89    13   35   20.05)
(smt.stats   10   1216  27875  26264  2871/2619/125    1297/89    13   35   20.05)
(smt.stats   11   1327  30428  28713  2871/2619/125    1408/89    13   35   20.05)
(smt.stats   12   1449  33027  32168  2871/2619/125    1530/89    13   35   20.14)
(smt.stats   13   1583  34698  35659  2871/2619/125    1664/89    13   35   20.14)
(smt.stats   14   1730  37549  41759  2871/2619/125    1811/89    13   35   20.14)
(smt.stats   15   1831  39574  44356  2871/2619/125    1912/89    13   35   20.24)
(smt.stats   16   1942  41671  46612  2890/2629/125    2023/89    13   35   20.24)
(smt.stats   17   2064  44041  48662  2916/2660/125    2144/89    13   35   20.24)
(smt.stats   18   2198  46140  51737  2916/2660/125    2278/89    13   35   20.24)
ramon: poll                 wall=1.002s usage=0.963s mem=21376KiB load=0.96 rootload=0.96
(smt.stats   19   2345  48338  56567  2916/2660/125    2425/89    13   35   20.24)
(smt.stats   20   2506  50885  61164  2916/2660/125    2586/89    13   35   20.24)
(smt.stats   21   2607  52308  63924  2919/2663/125    2698/89    13   35   20.34)
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&2
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&1
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&1
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&2
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #931 #932) 64)) 9223372036854775808 := 9223372036854775810 << 22
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #931 #932) 64)) 9223372036854775808 := 9223372036854775810 << 22
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #931 #932) 64)) 9223372036854775808 := 9223372036854775810 << 22
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&0
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #131))) 1 := 4611687117939015680 << 23
(smt.stats   22   2718  54117  67363  2943/2687/141    2808/99    14   39   20.34)
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&2
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 4 := 4194303&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #931 #932) 64)) 4 := 6 << 22
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #131))) 8388607 := 2199023255553 << 23
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #931 #932) 64)) 9223372036854775808 := 9223374235878031362 << 22
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #131))) 1 := 2199023255553 << 23
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4194303 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4194302 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4194300 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4194296 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4194288 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4194272 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4194240 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4194176 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4194048 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 256 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 512 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 1024 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 1024 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 2048 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 4096 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 8192 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 16384 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 32768 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 65536 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 131072 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 131072 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 262144 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 524288 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 1048576 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 2097152 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 524288 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 1048576 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 2097152 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 131071 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 131073 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 131072 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&16777216
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 262144 := 4194303&16777216
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&16777216
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 262144 := 4194303&16777216
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&16777216
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 262144 := 4194303&16777216
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 4194303 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 4194302 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 4194300 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 4194296 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 65536 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4194303&8388608
band: (band[63] (if (= #135 62) 0 (if #675 1 #852)) (shl[63] (bv2int %0) (+ 63 #855))) 65536 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 51328 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 51456 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 51328 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 51456 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 51712 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 52224 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 53248 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 57344 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 65536 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 131072 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 262144 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 524288 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 1048576 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 2097152 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 2097152 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 2097152 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 2097152 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 3932160 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 3670016 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 2097152 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 262144 := 4194303&8388608
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 1048576 := 4194303&8388608
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   23   2840  55125  69717  3189/2865/297    3019/121    14   39   21.31)
(smt.stats   24   2974  55839  71800  3267/2913/313    3185/121    14   39   21.42)
(smt.stats   25   3121  59730  75508  3846/3495/316    3366/127    14   39   21.52)
ramon: poll                 wall=2.000s usage=1.961s mem=22696KiB load=1.00 rootload=0.99
(smt.stats   26   3282  64506  83080  3943/3683/322    3533/274    16  101   21.65)
(smt.stats   27   3459  70910  91459  3979/3696/326    3734/283    17  102   21.65)
(smt.stats   28   3560  72381  95617  4028/3766/327    3840/301    18  121   21.65)
(smt.stats   29   3671  74471  99557  4190/3777/329    3948/305    18  121   21.75)
ramon: poll                 wall=3.000s usage=2.961s mem=22960KiB load=1.00 rootload=1.00
(smt.stats   30   3793  76621 102744  4360/3944/329    4075/307    18  121   21.75)
(smt.stats   31   3927  79351 108545  4467/4113/329    4192/319    19  152   21.87)
(smt.stats   32   4074  82886 114731  4608/4232/329    4390/327    19  152   21.87)
(smt.stats   33   4235  88590 123433  4842/4403/329    4565/328    19  152   21.97)
ramon: poll                 wall=4.000s usage=3.961s mem=23240KiB load=1.00 rootload=1.00
(smt.stats   34   4412  91496 128492  5164/4592/329    4755/328    19  152   22.16)
(smt.stats   35   4606  96432 135583  5549/5121/329    4939/360    19  152   22.16)
(smt.stats   36   4707  99046 140841  5682/5313/329    5045/367    19  152   22.26)
(smt.stats   37   4818 102090 146763  5737/5431/329    5160/367    19  152   22.26)
(smt.stats   38   4940 105197 153700  5752/5486/329    5320/367    19  152   22.51)
ramon: poll                 wall=5.000s usage=4.961s mem=23836KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 269)
(smt.stats   39   5074 109173 164044  5793/5523/338    5308/491    20  195   22.51)
(smt.stats   40   5221 114050 177027  5810/5541/341    5443/527    22  201   22.51)
(smt.stats   41   5382 119307 193080  5891/5604/342    5701/538    23  201   22.61)
(smt.stats   42   5559 121783 202715  5921/5628/342    5895/538    23  201   22.61)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   43   5753 125695 217696  5937/5662/343    6114/583    24  202   22.70)
(smt.stats   44   5966 130084 230254  6007/5684/343    6473/584    24  202   22.94)
ramon: poll                 wall=6.000s usage=5.960s mem=24280KiB load=1.00 rootload=1.00
(smt.stats   45   6067 132083 235413  6026/5750/344    6632/597    25  204   22.94)
(smt.stats   46   6178 136617 247580  6028/5756/344    6749/597    25  204   22.94)
(smt.stats   47   6300 141813 263116  6040/5760/344    6867/597    25  204   23.03)
(smt.stats   48   6434 143493 268488  6050/5776/344    7006/597    25  204   23.03)
(smt.stats   49   6581 144052 273692  6052/5780/344    7176/597    25  204   23.03)
(smt.stats   50   6742 144940 280718  6052/5780/344    7337/597    25  204   23.03)
(smt.stats   51   6919 147372 288614  6053/5781/344    7520/597    25  204   23.03)
(smt.stats   52   7113 152864 303990  6085/5796/347    7799/634    26  205   23.13)
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4611686018427387903&4611686018427387904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #931 #932) 64)) 13835058055282163712 := 2 << 62
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4611686018427387903&4611686018427387904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #931 #932) 64)) 13835058055282163712 := 2 << 62
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4611686018427387903&4611686018429485054
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4611686018427387903&4611686018429485052
band: (band[63] (if (= #466 63) 0 (if #654 1 #924)) (shl[64] (* 2 #444) (mod #937 64))) 0 := 4611686018427387903&4611686018427387904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #931 #932) 64)) 13835058055282163712 := 2 << 62
(smt.stats   53   7326 157621 314382  6148/5847/353    8086/661    27  210   23.25)
ramon: poll                 wall=7.000s usage=6.960s mem=24676KiB load=1.00 rootload=1.00
(smt.stats   54   7560 163025 332854  6227/5901/353    8394/661    27  210   23.35)
(smt.stats   55   7661 166036 343336  6264/5952/355    8619/687    28  212   23.35)
(smt.stats   56   7772 167137 346810  6305/6017/355    8781/687    28  212   23.35)
ramon: poll                 wall=8.000s usage=7.960s mem=24732KiB load=1.00 rootload=1.00
(smt.stats   57   7894 168873 353664  6319/6029/359    9056/784    29  219   23.35)
(smt.stats   58   8028 172444 363116  6355/6042/360    9229/784    29  219   23.46)
ramon: poll                 wall=9.000s usage=8.960s mem=24768KiB load=1.00 rootload=1.00
(smt.stats   59   8175 178403 382763  6413/6118/360    9372/831    30  232   23.46)
ramon: poll                 wall=10.000s usage=9.960s mem=24808KiB load=1.00 rootload=1.00
(smt.stats   60   8336 183099 398211  6457/6148/360    9579/831    30  232   23.46)
ramon: poll                 wall=11.002s usage=10.961s mem=24816KiB load=1.00 rootload=1.00
(smt.stats   61   8513 185445 407794  6515/6203/361    9837/848    31  236   23.55)
ramon: poll                 wall=12.000s usage=11.959s mem=24856KiB load=1.00 rootload=1.00
(smt.stats   62   8707 189538 420884  6547/6252/363   10036/849    31  236   23.55)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   63   8920 197737 446255  6583/6297/367   10320/882    33  252   23.55)
(smt.stats   64   9154 204666 464062  6631/6300/367   10703/886    33  252   23.65)
ramon: poll                 wall=13.000s usage=12.959s mem=25052KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.959s mem=25080KiB load=1.00 rootload=1.00
(smt.stats   65   9411 211456 489480  6760/6365/367   11047/887    33  252   23.74)
(smt.stats   66   9512 213745 498518  6788/6502/369   11176/962    34  254   23.84)
(smt.stats   67   9623 217658 507490  6790/6504/369   11302/962    34  254   23.84)
(smt.stats   68   9745 225074 532601  6790/6504/369   11436/962    34  254   23.84)
(smt.stats   69   9879 232161 548954  6792/6506/369   11566/980    35  261   23.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 490)
(smt.stats   70  10026 236324 562030  6795/6509/369   11343/980    35  261   23.94)
ramon: poll                 wall=15.000s usage=14.959s mem=25308KiB load=1.00 rootload=1.00
(smt.stats   71  10187 242773 573294  6799/6509/369   11533/980    35  261   23.84)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   72  10364 252584 593498  6803/6517/370   11733/1032    36  265   24.27)
(smt.stats   73  10558 256837 604444  6882/6522/372   11958/1055    37  272   24.27)
(smt.stats   74  10771 261897 618015  6999/6611/372   12175/1055    37  272   24.40)
(smt.stats   75  11005 265992 628937  7176/6727/372   12426/1058    37  272   24.40)
ramon: poll                 wall=16.000s usage=15.959s mem=25920KiB load=1.00 rootload=1.00
(smt.stats   76  11262 271621 646447  7246/6915/373   12693/1114    38  274   24.49)
(smt.stats   77  11544 280119 674675  7281/6980/376   12991/1114    38  274   24.49)
(smt.stats   78  11645 281918 680456  7306/6988/376   13092/1136    39  277   24.59)
(smt.stats   79  11756 284231 687182  7339/7046/377   13208/1136    39  277   24.59)
(smt.stats   80  11878 286014 692641  7370/7047/377   13332/1136    39  277   24.59)
(smt.stats   81  12012 289643 703233  7395/7081/377   13501/1136    39  277   24.59)
(smt.stats   82  12159 294426 717140  7411/7112/377   13652/1141    40  280   24.59)
(smt.stats   83  12320 302601 738259  7415/7122/377   13832/1141    40  280   24.68)
ramon: poll                 wall=17.000s usage=16.958s mem=26052KiB load=1.00 rootload=1.00
(smt.stats   84  12497 308213 757887  7416/7123/377   14012/1141    40  280   24.68)
(smt.stats   85  12691 309844 762297  7436/7129/377   14212/1145    40  280   24.68)
(smt.stats   86  12904 313664 776341  7513/7153/377   14429/1147    40  280   24.78)
(smt.stats   87  13138 316222 786197  7586/7292/377   14669/1147    40  280   24.78)
(smt.stats   88  13395 321482 805607  7611/7295/377   14951/1147    40  280   24.87)
ramon: poll                 wall=18.000s usage=17.958s mem=26392KiB load=1.00 rootload=1.00
(smt.stats   89  13677 329726 829646  7625/7326/377   15276/1147    40  280   24.97)
(smt.stats   90  13987 335505 859681  7634/7337/377   15881/1147    40  280   25.06)
(smt.stats   91  14088 337296 869940  7652/7352/377   16058/1147    40  280   25.06)
ramon: poll                 wall=19.000s usage=18.958s mem=26580KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   92  14199 340336 879937  7660/7361/377   16175/1147    40  280   25.16)
(smt.stats   93  14321 345108 891220  7671/7367/377   16314/1147    40  280   25.16)
(smt.stats   94  14455 348556 903121  7677/7379/377   16474/1149    40  280   25.16)
(smt.stats   95  14602 351607 911030  7691/7391/377   16655/1150    40  280   25.16)
(smt.stats   96  14763 354397 922845  7697/7403/377   16873/1150    40  280   25.16)
(smt.stats   97  14940 360699 942935  7699/7405/377   17054/1150    40  280   25.26)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 362937 950877  7756/7406/377   17296/1155    40  280   25.26)
ramon: poll                 wall=20.002s usage=19.960s mem=26788KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:04:13 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.001s
ramon: group.utime          19.993s
ramon: group.stime          0.008s
ramon: group.mempeak        27044KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.044s
ramon: loadavg              1.00
