ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:06:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41859 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LnwvquxJYXXL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2922761
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2753    217  1201/1031/96     107/15     4   14   19.33)
(smt.stats    1    202   5009    896  1794/1547/97     244/23     5   15   19.42)
(smt.stats    2    313   7790   2351  1884/1714/100     368/32     7   22   19.42)
(smt.stats    3    414  11388   3214  2046/1747/100     474/47     7   22   19.61)
(smt.stats    4    525  13165   5232  2431/2183/112     643/127    11   32   19.74)
(smt.stats    5    647  16186   7113  2797/2304/113     768/170    13   32   19.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  19237   9619  2842/2579/113     881/173    13   32   19.84)
(smt.stats    7    859  23116  12209  2886/2621/113     998/175    13   32   19.93)
(smt.stats    8    983  24943  15500  2933/2707/120    1152/233    15   36   19.93)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 3783&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305807824841608903 := 2477 << 2
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 3783&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 3783 := 2477 << 2
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 2476 := 2477 << 2
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 2476 := 2477 << 2
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 9908&1
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 9908&1
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 9908&1
(smt.stats    9   1117  30145  18309  2988/2756/153    1290/253    17   52   20.03)
(smt.stats   10   1218  34094  21553  3016/2777/153    1386/253    17   52   20.13)
ramon: poll                 wall=1.000s usage=0.919s mem=21260KiB load=0.92 rootload=0.91
(smt.stats   11   1329  38437  24058  3036/2798/153    1500/253    17   52   20.26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1451  41288  31081  3039/2801/153    1632/253    17   52   20.26)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 88 := 462&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 88 := 462&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 92 := 464&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 96 := 464&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 96 := 464&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 106 := 480&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 108 := 480&2047
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 128 := 480&2047
(smt.stats   13   1585  44010  33833  3068/2830/185    1766/265    18   59   20.55)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2144 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2144 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2145 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2147 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2147 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2147 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2147 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2151 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2159 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2159 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2151 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2159 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2151 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2151 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2247 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2247 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2247 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2383 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2255 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2247 := 2503&134217727
(smt.stats   14   1732  47476  37914  3151/2835/185    1923/272    19   64   20.79)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2375 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2255 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2183 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1991 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1223 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1735 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1735 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1735 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1991 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1479 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1479 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1479 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1479 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 455 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 199 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 455 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 455 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 455 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 199 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 199 := 2503&134217727
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2503 := 2503&134217727
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2503 := 2503 << 28
(smt.stats   15   1833  49283  43077  3277/2978/267    2116/286    20   76   21.18)
(smt.stats   16   1944  53169  50194  3322/3083/301    2476/501    22   99   21.27)
(smt.stats   17   2066  56270  55998  3352/3112/311    2596/515    23  127   21.37)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843009213693954 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 35184372088834 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2 := 2&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 35184372088834 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2 := 384&3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 461 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 461 := 48 << 3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1 := 384&3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 384&3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1 := 384&3
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 384&3
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 2 := 384&3
(smt.stats   18   2200  61832  64926  3411/3126/311    2765/520    23  127   21.47)
(smt.stats   19   2347  63999  71419  3453/3187/337    2902/552    24  152   21.47)
(smt.stats   20   2508  65764  78741  3478/3232/338    3082/556    25  175   21.56)
(smt.stats   21   2609  70299  82771  3481/3232/338    3183/587    26  179   21.56)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 8&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 8&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 8&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 0&33554431
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843009213693952 := 116 << 26
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 0&33554431
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843009213693952 := 116 << 26
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 0&33554431
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843009213693952 := 116 << 26
(smt.stats   22   2720  72636  88293  3557/3257/340    3383/611    27  179   21.66)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 35184372088830 := 116 << 26
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
shl: (shl[45] (bv2int %0) (mod (bv2int %0) 45)) 35184372088630 := 116 << 26
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 2 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 4 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 8 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 16 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 32 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 64 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 128 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 256 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 512 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1024 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 2048 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 4096 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 8192 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1024 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 4096 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 8192 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 16384 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 32768 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 65536 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 131072 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 262144 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 524288 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 1048576 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 2097152 := 7784628224&33554431
(smt.stats   23   2842  75401  98181  3714/3450/501    3619/659    28  211   22.27)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 72 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 80 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 96 := 7784628224&33554431
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 0 := 7784628224&33554431
band: (band[45] (shl[45] (bv2int %0) (mod #101 45)) (if (= #588 44) 0 (if #590 1 #713))) 96 := 7784628224&33554431
(smt.stats   24   2976  77972 105919  3799/3535/512    3942/785    29  221   22.59)
(smt.stats   25   3123  82217 112510  3935/3553/513    4289/792    29  221   22.97)
ramon: poll                 wall=2.000s usage=1.919s mem=24404KiB load=1.00 rootload=1.00
(smt.stats   26   3284  89090 130843  4164/3753/513    4881/896    30  223   23.16)
(smt.stats   27   3461  95042 147257  4364/4096/514    5599/999    31  225   23.35)
(smt.stats   28   3562  98643 156252  4394/4099/514    5885/1002    31  225   23.45)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   29   3673 103273 167828  4540/4149/514    6399/1008    31  225   23.45)
(smt.stats   30   3795 107628 178420  4703/4290/515    6738/1308    32  226   23.55)
ramon: poll                 wall=3.000s usage=2.919s mem=24860KiB load=1.00 rootload=1.00
(smt.stats   31   3929 110278 190351  4954/4464/515    7730/1310    32  226   23.74)
(smt.stats   32   4076 115265 205273  5183/4691/515    8703/1328    32  226   23.84)
(smt.stats   33   4237 118222 218217  5624/4938/515    9324/1341    32  226   24.08)
(smt.stats   34   4414 122997 240832  6039/5404/515   10575/1342    32  226   24.18)
(smt.stats   35   4608 127973 268126  6107/5798/517   11453/1859    33  227   24.27)
(smt.stats   36   4709 131067 280346  6236/5849/517   11944/1902    34  228   24.37)
(smt.stats   37   4820 134774 295389  6442/6009/517   12429/1908    34  228   24.59)
ramon: poll                 wall=4.000s usage=3.919s mem=26188KiB load=1.00 rootload=1.00
(smt.stats   38   4942 136659 306035  6690/6189/517   12686/1912    34  228   24.69)
(smt.delete-inactive-clauses  :num-deleted-clauses 591)
(smt.stats   39   5076 139762 323117  6875/6570/517   12765/1915    34  228   24.69)
(smt.stats   40   5223 144191 343797  7050/6637/517   13373/1916    34  228   24.78)
(smt.stats   41   5384 147627 359204  7522/6911/517   13830/1918    34  228   24.88)
(smt.stats   42   5561 153353 385613  7834/7353/517   15010/1922    34  228   25.07)
(smt.stats   43   5755 158621 413782  8263/7571/517   16113/1923    34  228   25.17)
(smt.stats   44   5968 163953 438144  8481/8000/517   17179/1924    34  228   25.36)
ramon: poll                 wall=5.000s usage=4.918s mem=26784KiB load=1.00 rootload=1.00
(smt.stats   45   6069 166559 451175  8623/8212/517   17769/1925    34  228   25.45)
(smt.stats   46   6180 170656 480341  8860/8377/517   18289/1932    34  228   25.80)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 2510 := 8796093117951&16383
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1487 := 8796093044223&16383
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 479 := 8796093044223&16383
(smt.stats   47   6303 174095 504072  9188/8595/519   18724/2210    35  241   25.99)
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 511 := 35183164098047&16383
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843008005703167 := 35184372088830 << 15
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843008005703167 := 35184372088830 << 15
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305843008005703167 := 35184372088830 << 15
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305878192377791999 := 35184372088830 << 15
band: (band[45] (shl[64] (bv2int %0) (mod #338 64)) (if (or #733 #734) 0 (if #735 1 #874))) 1535 := 35183164098047&16383
shl: (shl[64] (bv2int %0) (mod (+ #101 #337) 64)) 2305878192377791999 := 35184372088830 << 15
(smt.stats   48   6437 177301 526723  9270/8926/535   19232/2212    35  241   25.99)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   49   6584 181592 550730  9408/9081/549   21796/2263    36  249   26.48)
ramon: poll                 wall=6.000s usage=5.918s mem=27988KiB load=1.00 rootload=1.00
(smt.stats   50   6745 191447 585962  9665/9209/549   22242/2266    36  249   26.67)
ramon: poll                 wall=7.000s usage=6.918s mem=28360KiB load=1.00 rootload=1.00
(smt.stats   51   6922 198265 611768  9835/9515/559   23123/3883    37  283   26.95)
ramon: poll                 wall=8.000s usage=7.918s mem=28672KiB load=1.00 rootload=1.00
(smt.stats   52   7116 206760 646449 10010/9519/559   24050/3883    37  283   27.15)
ramon: poll                 wall=9.000s usage=8.918s mem=28864KiB load=1.00 rootload=1.00
(smt.stats   53   7329 217381 702741 10239/9901/560   25026/4223    38  290   27.24)
ramon: poll                 wall=10.000s usage=9.917s mem=29076KiB load=1.00 rootload=1.00
(smt.stats   54   7563 229654 760715 10408/9936/560   26763/4571    39  294   27.53)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   55   7664 235819 788672 10494/10101/560   27119/4576    39  294   27.62)
(smt.stats   56   7775 241892 809153 10613/10246/560   27461/4580    39  294   27.72)
ramon: poll                 wall=11.000s usage=10.917s mem=29284KiB load=1.00 rootload=1.00
(smt.stats   57   7897 250775 842571 10749/10315/560   28127/4592    39  294   27.81)
(smt.stats   58   8031 255103 864779 10793/10469/564   28771/5356    40  299   28.00)
(smt.stats   59   8178 262880 903756 10863/10478/564   29318/5362    40  299   28.00)
ramon: poll                 wall=12.000s usage=11.917s mem=29592KiB load=1.00 rootload=1.00
(smt.stats   60   8339 270528 938684 11000/10623/565   29758/5777    41  302   28.10)
(smt.stats   61   8516 275434 957937 11198/10729/565   30251/5790    41  302   28.19)
ramon: poll                 wall=13.000s usage=12.917s mem=29780KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   62   8710 284894 1027549 11408/10918/566   31200/5956    42  311   28.39)
ramon: poll                 wall=14.000s usage=13.917s mem=29964KiB load=1.00 rootload=1.00
(smt.stats   63   8923 297409 1088012 11702/11097/566   32285/6054    43  320   28.58)
ramon: poll                 wall=15.004s usage=14.920s mem=30216KiB load=1.00 rootload=1.01
(smt.stats   64   9157 308383 1150513 11910/11424/570   33915/6353    44  325   28.67)
ramon: poll                 wall=16.000s usage=15.916s mem=30632KiB load=1.00 rootload=0.99
(smt.stats   65   9415 315400 1193986 12403/12085/576   35388/6564    45  345   29.05)
(smt.stats   66   9516 317979 1217808 12417/12099/576   35810/6564    45  345   29.05)
(smt.stats   67   9627 326703 1267999 12457/12103/576   36269/6816    46  352   29.14)
ramon: poll                 wall=17.000s usage=16.916s mem=30752KiB load=1.00 rootload=1.00
(smt.stats   68   9749 331923 1340872 12485/12159/576   36533/6816    46  352   29.14)
(smt.stats   69   9883 337501 1374497 12621/12178/576   36815/6822    46  352   29.46)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10030 340910 1397085 12724/12400/582   38051/7081    47  357   29.56)
ramon: poll                 wall=18.000s usage=17.916s mem=31328KiB load=1.00 rootload=1.00
(smt.stats   71  10191 348451 1448778 12930/12417/582   38555/7090    47  357   29.75)
ramon: poll                 wall=19.000s usage=18.916s mem=31576KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.915s mem=31624KiB load=1.00 rootload=1.00
(smt.stats   72  10368 353670 1466348 13190/12719/583   39160/7385    48  368   29.84)
ramon: end                  Tue Dec 24 15:07:08 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.989s
ramon: group.utime          19.989s
ramon: group.stime          0.000s
ramon: group.mempeak        31880KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
