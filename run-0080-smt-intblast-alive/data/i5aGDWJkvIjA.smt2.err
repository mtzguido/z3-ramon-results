ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:50:35 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24975 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/i5aGDWJkvIjA.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             123395
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3438   3117  1287/1164/112      90/11     7   18   19.27)
(smt.stats    1    202   5344   4459  1956/1751/112     194/12     7   18   19.46)
(smt.stats    2    313   6819   7955  2312/2097/118     314/32     9   24   19.65)
(smt.stats    3    414   7869  10845  2398/2127/121     414/39    10   27   19.65)
(smt.stats    4    525   8985  12808  2705/2445/129     519/77    12   35   19.75)
(smt.stats    5    647  11015  15286  2729/2461/129     650/93    13   41   19.75)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  12023  17284  2735/2482/130     750/102    14   41   19.85)
(smt.stats    7    859  13225  23205  2739/2487/130     876/102    14   41   19.96)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 288230376151711746 := 288230376151711743 << 1
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 288230376151711746 := 288230376151711743 << 1
(smt.stats    8    981  13996  26493  2751/2498/131    1011/115    15   41   19.96)
(smt.stats    9   1115  14950  28566  2793/2510/132    1153/125    16   43   20.05)
(smt.stats   10   1216  15730  31099  2941/2625/132    1251/128    16   43   20.05)
(smt.stats   11   1327  18006  34006  2956/2695/132    1364/128    16   43   20.15)
(smt.stats   12   1449  19269  37877  2978/2712/135    1481/144    17   44   20.15)
(smt.stats   13   1583  20200  40076  3035/2740/137    1601/147    18   46   20.15)
(smt.stats   14   1730  21117  42801  3091/2778/137    1750/152    19   47   20.15)
(smt.stats   15   1831  21779  46387  3110/2843/140    1846/156    20   54   20.24)
(smt.stats   16   1942  23929  50755  3110/2847/141    1954/156    21   56   20.24)
(smt.stats   17   2064  24578  53912  3122/2858/141    2071/156    21   56   20.24)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 80 := 81&80
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 81 := 82 << 8
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 80 := 81&80
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 81 := 82 << 8
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 80 := 81&80
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 81 := 82 << 8
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 80 := 256&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 79 := 256&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 78 := 256&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 256&80
shl: (shl[58] (bv2int %0) (mod (bv2int %1) 58)) 79 := 72057594037927937 << 8
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 256&80
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 256 := 74309393851613183 << 8
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 80 := 256&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 80 := 256&80
ramon: poll                 wall=1.000s usage=0.997s mem=21688KiB load=1.00 rootload=0.99
(smt.stats   18   2198  25371  57045  3154/2858/141    2212/158    21   56   20.62)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 80 := 768&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 79 := 768&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 76 := 768&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 72 := 768&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 768&80
shl: (shl[58] (bv2int %0) (mod (bv2int %1) 58)) 0 := 144115188075855875 << 8
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 1 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 80 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 78 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 64 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 64 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 64 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 64 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 64 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 44 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 32 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 44 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 32 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 4 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 32 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 1792&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 1792&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2560&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 2560&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 2816&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 8 := 2816&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 5888&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 32 := 5888&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 5888&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 32 := 5888&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 7936&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 7936&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 7936&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 7936&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 7936&80
band: (band[58] (shl[58] (bv2int %0) (mod #109 58)) (if (= #639 57) 0 (if #641 1 #803))) 2 := 7936&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 32 := 7424&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 64 := 7424&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 4 := 7424&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 4 := 7424&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 32 := 7424&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 4 := 7424&80
(smt.stats   19   2345  26766  66429  3427/3149/268    2387/182    23   83   20.83)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 7424&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 8 := 7424&80
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 13568&80
(smt.stats   20   2506  28389  71396  3527/3250/286    2587/184    23   83   21.03)
(smt.stats   21   2607  30396  74707  3537/3260/290    2685/198    24   91   21.31)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   22   2718  33455  80322  3547/3274/292    2815/206    25  104   21.31)
(smt.stats   23   2840  36207  88165  3556/3281/294    2975/212    26  104   21.31)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&323
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 0 := 1 << 10
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&323
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 0 := 1 << 10
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&323
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 0 := 1 << 10
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&323
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 0 := 1125899906842623 << 10
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&323
shl: (shl[58] (bv2int %0) (mod (bv2int %1) 58)) 288230376151711631 := 18014398509481984 << 10
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 0&323
shl: (shl[58] (bv2int %0) (mod (bv2int %1) 58)) 288230376151711631 := 36028797018963968 << 10
(smt.stats   24   2974  38303  96652  3687/3393/309    3165/245    28  114   21.51)
(smt.stats   25   3121  43095 102376  3736/3438/311    3308/270    29  119   21.51)
(smt.stats   26   3282  49641 113077  3778/3446/311    3492/271    29  119   21.76)
(smt.stats   27   3459  53389 125270  3808/3512/314    3899/292    30  122   21.76)
(smt.stats   28   3560  54261 129302  3811/3515/314    4012/292    30  122   21.76)
(smt.stats   29   3671  54747 132813  3811/3515/314    4123/292    30  122   21.76)
(smt.stats   30   3793  56263 136553  3844/3516/314    4303/310    31  136   21.76)
(smt.stats   31   3927  59154 150917  3964/3637/317    4678/353    32  149   21.95)
ramon: poll                 wall=2.000s usage=1.995s mem=23408KiB load=1.00 rootload=0.99
(smt.stats   32   4074  60401 156420  3978/3678/317    4847/353    32  149   21.95)
(smt.stats   33   4235  62726 166721  3995/3687/318    5065/393    33  150   22.04)
(smt.stats   34   4412  66238 180208  4027/3700/318    5371/394    33  150   22.04)
(smt.stats   35   4606  69915 194149  4027/3731/321    5665/417    34  154   22.04)
(smt.stats   36   4707  73371 202907  4050/3738/321    5833/417    34  154   22.04)
(smt.stats   37   4818  77127 219436  4103/3795/323    5951/458    35  167   22.04)
(smt.stats   38   4940  79545 227446  4107/3799/323    6120/471    36  168   22.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5074  84093 232900  4183/3853/324    6311/471    36  168   22.34)
(smt.stats   40   5221  91750 249255  4189/3863/324    6458/496    37  168   22.54)
(smt.stats   41   5382  95882 259716  4226/3869/324    6656/499    37  168   22.64)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   42   5559 101157 274310  4236/3907/324    6946/499    37  168   22.64)
ramon: poll                 wall=3.000s usage=2.994s mem=23956KiB load=1.00 rootload=1.00
(smt.stats   43   5753 108684 283949  4301/3911/324    7428/502    37  168   22.93)
(smt.stats   44   5966 118335 307801  4345/4005/324    7728/502    37  168   22.93)
(smt.stats   45   6067 119801 313312  4351/4025/324    7905/502    37  168   22.93)
(smt.stats   46   6178 122350 321760  4408/4027/324    8086/506    37  168   23.02)
(smt.stats   47   6300 127457 339443  4417/4091/324    8245/506    37  168   23.02)
ramon: poll                 wall=4.000s usage=3.988s mem=24404KiB load=0.99 rootload=1.00
(smt.stats   48   6434 132752 353375  4425/4099/324    8535/506    37  168   23.02)
(smt.stats   49   6581 138193 370248  4429/4103/324    8740/506    37  168   23.12)
(smt.stats   50   6742 140577 374813  4551/4108/324    8982/511    37  168   23.12)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 72057594037928192&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 360287970189639936 := 72057594037927936 << 1
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 72057594037928064&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 360287970189639808 := 72057594037927936 << 1
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 72057594037928064&0
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 360287970189639808 := 72057594037927936 << 1
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 144115188075855872&0
shl: (shl[58] (bv2int %0) (mod (bv2int %1) 58)) 144115188075855744 := 72057594037927936 << 1
(smt.stats   51   6919 143306 398696  4776/4442/330    9670/715    38  170   23.31)
(smt.stats   52   7113 149463 424649  4807/4477/337   10323/779    39  187   23.31)
(smt.stats   53   7326 154944 446105  4960/4622/341   10839/785    39  187   23.50)
ramon: poll                 wall=5.000s usage=4.987s mem=24944KiB load=1.00 rootload=0.99
(smt.stats   54   7560 160059 468545  5021/4691/347   11409/918    40  236   23.61)
(smt.stats   55   7661 164535 490206  5050/4711/350   11577/977    41  249   23.80)
(smt.stats   56   7772 168772 513943  5052/4716/350   11688/977    41  249   23.80)
(smt.stats   57   7894 171455 530249  5095/4721/352   11972/984    42  251   23.80)
(smt.stats   58   8028 175110 544084  5155/4812/352   12261/984    42  251   23.80)
(smt.stats   59   8175 178777 558501  5268/4822/352   12914/986    42  251   23.89)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8336 181904 584444  5665/4950/353   13389/1054    43  252   24.08)
ramon: poll                 wall=6.000s usage=5.985s mem=25584KiB load=1.00 rootload=1.00
(smt.stats   61   8513 184777 607230  5742/5350/353   13899/1055    43  252   24.18)
(smt.stats   62   8707 188728 632798  5767/5421/353   14402/1056    43  252   24.27)
(smt.stats   63   8920 197273 681269  5860/5435/353   15120/1057    43  252   24.27)
(smt.stats   64   9154 200592 697300  5868/5527/353   15418/1058    43  252   24.37)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 37 := 3616&82932
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 37 := 3616&82932
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 36 := 3616&82932
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 3616&82932
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 3616&22796220968092065
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 3616&22796220968092065
(smt.stats   65   9411 206124 734402  5910/5565/358   15979/1345    44  266   24.48)
ramon: poll                 wall=7.000s usage=6.983s mem=25860KiB load=1.00 rootload=1.00
(smt.stats   66   9512 207697 741694  5935/5575/363   16183/1345    44  266   24.58)
(smt.stats   67   9623 212720 783813  5945/5605/363   16315/1345    44  266   24.58)
(smt.stats   68   9745 214603 819661  5951/5611/366   16530/1459    45  269   24.58)
(smt.stats   69   9879 218589 868301  5965/5623/366   16885/1460    45  269   24.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10026 222144 888061  5974/5632/368   17114/1473    46  321   24.68)
(smt.stats   71  10187 227413 920119  5983/5641/368   17299/1473    46  321   24.68)
(smt.stats   72  10364 232255 967465  5985/5643/368   17490/1504    47  361   25.13)
(smt.stats   73  10558 237715 993677  6005/5658/368   17933/1504    47  361   25.13)
ramon: poll                 wall=8.000s usage=7.982s mem=26748KiB load=1.00 rootload=1.00
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 54043195528451720&22796220968092065
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   74  10771 242625 1013086  6310/5667/368   18553/1516    47  361   25.51)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 54043195528451087&22796220968092065
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 54043195528451087&45592441936184130
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 54043195528451087&45592441936184130
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 2 := 54043195528451087&45592441936184130
(smt.stats   75  11005 248664 1028904  6366/5997/368   18850/1516    47  361   25.61)
(smt.stats   76  11262 255157 1077315  6480/6124/390   19739/1659    48  364   25.70)
ramon: poll                 wall=9.000s usage=8.980s mem=27172KiB load=1.00 rootload=1.00
(smt.stats   77  11544 263799 1120742  6648/6300/391   20677/1914    49  392   25.80)
(smt.stats   78  11645 266021 1137124  6705/6315/391   20789/1918    49  392   25.89)
(smt.stats   79  11756 271016 1178309  6719/6369/391   20950/1918    49  392   25.89)
(smt.stats   80  11878 273920 1201437  6760/6386/391   21188/1918    49  392   25.99)
ramon: poll                 wall=10.000s usage=9.980s mem=27356KiB load=1.00 rootload=1.00
(smt.stats   81  12012 276027 1220928  6817/6439/391   21654/1918    49  392   25.99)
(smt.stats   82  12159 281236 1245775  6865/6486/391   21865/1919    49  392   25.99)
(smt.stats   83  12320 288052 1290597  6924/6578/393   22274/2049    50  400   26.08)
(smt.stats   84  12497 293572 1316988  6930/6584/393   22654/2049    50  400   26.18)
ramon: poll                 wall=11.004s usage=10.982s mem=27580KiB load=1.00 rootload=1.00
(smt.stats   85  12691 302011 1344030  6946/6600/393   22986/2049    50  400   26.18)
(smt.stats   86  12904 313808 1394171  7126/6600/393   23695/2052    50  400   26.27)
(smt.stats   87  13138 318927 1420915  7277/6807/393   24268/2056    50  400   26.37)
ramon: poll                 wall=12.000s usage=11.978s mem=27916KiB load=1.00 rootload=0.99
(smt.stats   88  13395 327884 1490738  7433/6932/393   25044/2057    50  400   26.46)
(smt.stats   89  13677 337961 1552732  7485/7118/393   26471/2060    50  400   26.56)
(smt.stats   90  13987 344786 1625218  7543/7151/393   27183/2061    50  400   26.66)
(smt.stats   91  14088 345892 1637016  7546/7198/393   27323/2061    50  400   26.83)
ramon: poll                 wall=13.000s usage=12.976s mem=28364KiB load=1.00 rootload=1.00
(smt.stats   92  14199 349284 1668605  7573/7199/393   27557/2062    50  400   26.83)
(smt.stats   93  14321 356009 1726528  7583/7235/393   27777/2062    50  400   26.83)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   94  14455 361123 1758697  7587/7239/393   28144/2062    50  400   26.92)
(smt.stats   95  14602 365649 1776604  7590/7242/393   28493/2062    50  400   26.92)
(smt.stats   96  14763 371228 1811212  7593/7245/394   28765/2644    51  406   27.02)
(smt.stats   97  14940 377284 1847555  7650/7281/395   29385/2646    51  406   27.02)
(smt.delete-inactive-clauses  :num-deleted-clauses 5734)
ramon: poll                 wall=14.000s usage=13.975s mem=28504KiB load=1.00 rootload=1.00
(smt.stats   98  15134 381977 1886725  7655/7307/395   24654/2646    51  406   27.12)
(smt.stats   99  15347 387308 1907460  7668/7310/395   24973/2742    52  406   27.12)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 234179792837298180&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 522410168989009924 := 287948626028396288 << 2
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 234179792837298180&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 522410168989009924 := 287948626028396288 << 2
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 234179792837297668&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 522410168989009412 := 287948626028396290 << 2
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 0 := 234179792837297668&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #412) 64)) 522410168989009412 := 287948626028396290 << 2
(smt.stats  100  15581 392604 1941019  7950/7581/403   25459/2819    53  410   27.31)
(smt.stats  101  15838 399598 1979300  8033/7638/403   25763/2819    53  410   27.40)
(smt.stats  102  16120 409145 2036941  8094/7678/403   26825/2820    53  410   27.40)
ramon: poll                 wall=15.000s usage=14.975s mem=28844KiB load=1.00 rootload=1.00
(smt.stats  103  16430 429839 2162803  8103/7732/403   28012/2820    53  410   27.50)
(smt.stats  104  16770 447423 2214497  8111/7737/403   28628/2820    53  410   27.59)
ramon: poll                 wall=16.000s usage=15.975s mem=29052KiB load=1.00 rootload=1.00
(smt.stats  105  16871 452235 2244229  8114/7743/403   28944/2820    53  410   27.59)
(smt.stats  106  16982 454927 2264481  8122/7751/403   29416/2820    53  410   27.69)
(smt.stats  107  17104 456839 2280396  8126/7755/403   29546/2820    53  410   27.78)
(smt.stats  108  17238 458614 2294578  8135/7764/403   29700/2820    53  410   27.78)
(smt.stats  109  17385 465980 2348447  8184/7766/403   30006/2822    53  410   27.78)
(smt.stats  110  17546 469819 2368012  8189/7818/403   30459/2822    53  410   27.78)
band: (band[58] (shl[64] (bv2int %0) (mod #413 64)) (if (or #823 #824) 0 (if #825 1 #951))) 45592441936184130 := 234179792837297283&45592441936184130
ramon: poll                 wall=17.004s usage=16.977s mem=29320KiB load=1.00 rootload=1.00
(smt.stats  111  17723 476904 2405865  8286/7844/403   30886/2823    53  410   27.78)
(smt.stats  112  17917 482682 2426696  8405/7942/403   31288/2828    53  410   27.88)
(smt.stats  113  18130 488985 2456362  8479/8050/408   32067/3416    54  413   27.98)
ramon: poll                 wall=18.000s usage=17.973s mem=29444KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  114  18364 496785 2530292  8545/8121/408   32445/3416    54  413   27.98)
(smt.stats  115  18621 502707 2594436  8571/8193/409   33238/3493    55  417   27.98)
(smt.stats  116  18903 511320 2669809  8583/8203/409   33702/3493    55  417   28.07)
ramon: poll                 wall=19.000s usage=18.968s mem=29628KiB load=1.00 rootload=1.00
(smt.stats  117  19213 526103 2801720  8587/8207/411   34280/3600    56  425   28.17)
(smt.stats  118  19553 545140 2977544  8597/8217/411   35283/3655    57  427   28.26)
ramon: poll                 wall=20.000s usage=19.967s mem=29776KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 18:50:55 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.974s
ramon: group.utime          19.966s
ramon: group.stime          0.008s
ramon: group.mempeak        30032KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.006s
ramon: loadavg              1.00
