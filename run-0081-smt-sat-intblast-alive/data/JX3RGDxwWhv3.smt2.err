ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:11:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29413 MiB
ramon: sys.mem.avail        62091 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JX3RGDxwWhv3.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             362889
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts     :learned/bin    :gc          :time)
(sat.stats          :decisions   :clauses/bin :units       :memory       )
(sat.stats      0      0    0     4/4     0/0  35       0    17.84   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 61 := 61 >>l 1
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 20 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 35 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 4 :cost 48 :time 0.00)
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 62 := 62 >>l 61
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 118 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 2 :cost 199 :time 0.00)
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 185319 := 370639 >>l 59
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 0 := 288230376151918507 >>l 58
 (sat-cleaner :elim-literals 17 :elim-clauses 1 :cost 260 :time 0.00)
 (sat-cleaner :elim-literals 19 :elim-clauses 0 :cost 353 :time 0.00)
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 124 := 249 >>l 61
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 0 := 2017612633062891754 >>l 60
 (sat-cleaner :elim-literals 7 :elim-clauses 0 :cost 765 :time 0.00)
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2305843009213694076 := 2305843009213694076 >>l 60
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 0 := 1152921504606847038 >>l 59
 (sat-cleaner :elim-literals 53 :elim-clauses 36 :cost 1015 :time 0.00)
(sat.stats    313   2552    0  1530/1526   265/60  91       0    18.57   0.11)
(sat.stats    313   2552    0  1583/1579   265/60  91       0    18.57   0.11)
(sat.stats    313   2552    0  1583/1579   265/60  91       0    18.57   0.11)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 27 :elim-bin 581 :time 0.00)
 (sat-probing :probing-assigned 1 :cost 2460318.67 :time 0.00)
(sat.stats    313   2552    0   243/239   202/43 102       0    18.67   0.11)
 (sat-cleaner :elim-literals 12 :elim-clauses 12 :cost 615 :time 0.00)
(sat.stats    317   2627    1   258/256   224/74 102       0    18.67   0.12)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin    :units         :memory       )
(sat.stats    320   2685    2   266/264   227/74 102       0    18.67   0.12)
 (sat-cleaner :elim-literals 12 :elim-clauses 14 :cost 667 :time 0.00)
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2 := 2882303761517117898 >>l 20
(sat.stats    398   3584    3   988/986   302/97 110       0    18.87   0.17)
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2 := 2882303761517117894 >>l 24
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2 := 2882303761517117896 >>l 22
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 1441151880758559071 := 1441151880758558949 >>l 19
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2748779069440 := 2882303761517117900 >>l 18
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2748779069440 := 2882303761517117902 >>l 16
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2748779069440 := 2882303761517117916 >>l 2
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2748779069440 := 2882303761517117904 >>l 14
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2748779069440 := 2882303761517117862 >>l 56
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2748779069440 := 2882303761517117892 >>l 26
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 2748779069440 := 2882303761517117890 >>l 28
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 1441151880758559070 := 1441151880758558946 >>l 25
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117888 >>l 30
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117886 >>l 32
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117884 >>l 34
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117882 >>l 36
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117880 >>l 38
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117868 >>l 50
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117870 >>l 48
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117874 >>l 44
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117872 >>l 46
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117876 >>l 42
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117878 >>l 40
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117866 >>l 52
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117864 >>l 54
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 42949672960 := 2882303761517117860 >>l 58
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 24 := 1441151880758558932 >>l 53
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 160 := 1441151880758558931 >>l 55
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 40 := 1441151880758558930 >>l 57
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 10 := 2882303761517117906 >>l 12
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 10 := 2882303761517117908 >>l 10
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 10 := 2882303761517117910 >>l 8
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 10 := 2882303761517117914 >>l 4
lshr: (lshr[62] (bv2int %0) (+ 62 (* 4611686018427387903 #38))) 10 := 2882303761517117912 >>l 6
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 32 := 1441151880758558939 >>l 39
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 2621440 := 1441151880758558935 >>l 47
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 10240 := 1441151880758558934 >>l 49
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 10240 := 1441151880758558940 >>l 37
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 10240 := 1441151880758558933 >>l 51
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 10240 := 1441151880758558938 >>l 41
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 10240 := 1441151880758558936 >>l 45
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 10240 := 1441151880758558937 >>l 43
(sat.stats    902  10284    4  5236/5194   876/173 110       0    20.79   0.43)
(sat.stats    905  10443    5  5241/5199   879/173 110       0    20.79   0.43)
(sat.stats    908  10589    6  5241/5199   882/173 110       0    20.79   0.44)
(sat.stats    911  10637    7  5241/5199   885/173 110       0    20.79   0.44)
(sat.stats :conflicts    :restarts      :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    914  10659    8  5246/5204   888/173 110       0    20.79   0.44)
(sat.stats    917  10669    9  5246/5204   891/173 110       0    20.79   0.44)
(sat.stats    921  10679   10  5246/5204   895/173 110       0    20.79   0.44)
(sat.stats    924  10689   11  5246/5204   898/173 110       0    20.79   0.44)
(sat.stats    927  10701   12  5246/5204   901/173 110       0    20.98   0.44)
(sat.stats    931  10709   13  5246/5204   905/173 110       0    20.98   0.44)
(sat.stats    934  10853   14  5246/5204   908/173 110       0    20.98   0.44)
(sat.stats    937  11004   15  5246/5204   911/173 110       0    20.98   0.44)
(sat.stats    940  11152   16  5246/5204   914/173 110       0    20.98   0.44)
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558941 >>l 35
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558942 >>l 33
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558943 >>l 31
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558944 >>l 29
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558945 >>l 27
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558952 >>l 13
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558948 >>l 21
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558947 >>l 23
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558950 >>l 17
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 640 := 1441151880758558951 >>l 15
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 175921860444160 := 1441151880758558956 >>l 5
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 175921860444160 := 1441151880758558954 >>l 9
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 175921860444160 := 1441151880758558955 >>l 7
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 175921860444160 := 1441151880758558953 >>l 11
lshr: (lshr[64] (mod (div #55 2) 2305843009213693952) (mod (+ 61 #93 #95) 64)) 175921860444160 := 1441151880758558957 >>l 3
(sat.stats   1200  15361   30  6229/6181  1177/185 110       0    21.97   0.55)
 (sat-cleaner :elim-literals 28 :elim-clauses 46 :cost 6340 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   1599  24922   63 11668/11621  1600/278 282       0    23.06   0.88)
ramon: poll                 wall=1.003s usage=1.003s mem=24468KiB load=1.00 rootload=0.98
ramon: poll                 wall=2.000s usage=2.000s mem=31108KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.999s mem=34192KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.999s mem=36384KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.999s mem=42708KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.999s mem=50284KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.999s mem=55216KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.998s mem=69304KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.998s mem=69928KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.998s mem=75416KiB load=1.00 rootload=0.98
ramon: poll                 wall=11.003s usage=10.999s mem=77816KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.995s mem=82032KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.995s mem=85020KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.994s mem=86672KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.994s mem=88296KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.994s mem=90156KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.994s mem=92168KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.994s mem=108MiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.993s mem=111MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.993s mem=112MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:11:41 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.070s
ramon: group.total          20.008s
ramon: group.utime          19.936s
ramon: group.stime          0.072s
ramon: group.mempeak        123MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              1.00
