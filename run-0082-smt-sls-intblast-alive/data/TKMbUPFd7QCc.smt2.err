ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:33:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28164 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/TKMbUPFd7QCc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             815536
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   56.4972     10000        49          0            1        2)
(sat.ddfw       1      1   31.3511     20001        98          1            1        3)
(smt.stats    0    101   5659    725  1234/1108/111     100/13     8   19   52.27)
(smt.stats    1    202   8001   1702  2382/2161/115     196/22    10   22   52.36)
(sat.ddfw       1      1   35.2734     40001       196          2            1        5)
(smt.stats    2    313  10728   3449  2473/2239/116     308/23    11   25   52.52)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 70368744177664&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 9080382748685762561 := 106 << 46
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 70368744177664&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 9080382748685762561 := 106 << 46
(smt.stats    3    414  12715   4715  2485/2253/118     417/25    12   28   52.65)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 1&198
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 99 << 1
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 1&198
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 99 << 1
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 1&198
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 99 << 1
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 1&198
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 1 := 1&198
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 1 := 1&198
(smt.stats    4    525  13971   6083  2533/2293/137     516/37    13   34   52.75)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 110 := 8796093022208&110
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 110 := 8796093022208&110
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 108 := 8796093022208&108
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 104 := 8796093022208&104
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 96 := 8796093022208&96
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 64 := 8796093022208&64
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 110 := 8796093022208&110
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 108 := 8796093022208&108
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 110 := 8796093022208&110
(smt.stats    5    647  16989   8164  2563/2307/137     634/42    14   41   52.97)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 56 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 64 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 64 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 60 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 56 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 56 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 56 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 64 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 64 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 48 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 32 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&111
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 1125899906842735 := 112 << 43
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 48 := 8796093022208&111
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&111
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 1125899906842735 := 112 << 43
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 70931694131085425 := 112 << 43
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&113
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 1125899906842737 := 112 << 43
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 112 := 56 << 44
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 112 := 56 << 44
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 112 := 56 << 44
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 111 := 56 << 44
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 111 := 56 << 44
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 2 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 8796093022208 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 8796093022208 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 8796093022206 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 2 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 4 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 8 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 16 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 32 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 32 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 64 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 128 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 256 := 8796093022208&985162418487296
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 8796093022208&985162418487296
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 512 := 8796093022208&985162418487296
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  17820  10199  2736/2364/191     757/51    15   46   53.37)
(smt.stats    7    859  18773  14310  2876/2480/248    1063/60    16   69   53.46)
(sat.ddfw       1      1   32.6797     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.843s mem=55792KiB load=0.84 rootload=0.83
(smt.stats    8    981  19992  19256  3072/2823/256    1496/336    19   80   53.56)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 2097152 := 2097152&2097152
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 1125899908939776 := 156 << 21
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 128 := 2097152&179
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 128 := 2097152&179
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 128 := 2097152&179
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 256 := 2097152&258
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 512 := 2097152&514
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 1024 := 2097152&1026
(smt.stats    9   1116  23525  31670  3164/2916/287    1657/346    20  104   53.95)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 15632 := 2097152&327155712
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 15632 := 2097152&327155712
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 15652 := 2097152&327155712
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 15652 := 2097152&327155712
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 15652 := 2097152&327155712
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 15652 := 2097152&327155712
(smt.stats   10   1217  24892  37063  3235/2926/287    1953/349    20  104   54.06)
(smt.stats   11   1328  25877  41196  3550/3058/292    2142/480    21  105   54.06)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  28160  52570  3687/3324/292    2536/487    22  105   54.22)
(smt.stats   13   1584  30175  63840  3801/3481/296    3392/640    23  111   54.39)
(sat.ddfw       1      1   28.8184    110001       539          4            1       12)
(smt.stats   14   1731  34306  86735  3914/3590/296    3849/957    24  123   54.49)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&198
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 70931694131085512 := 196 << 1
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&198
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 2251799813685448 := 196 << 1
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&198
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 2251799813685448 := 196 << 1
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&392
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 391 := 98 << 2
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&392
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 391 := 98 << 2
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&392
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 391 := 98 << 2
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 2&392
band: (band[50] (if (= #113 49) 1 (if #606 2 #702)) (shl[50] (bv2int %0) (+ 50 #705))) 2 := 2&392
(smt.stats   15   1832  37248 101554  3981/3724/318    4192/1314    25  124   54.61)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 1 := 2&392
(smt.stats   16   1943  39234 113295  4011/3757/324    4380/1333    26  132   54.72)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 128 := 17179869184&128
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 128 := 17179869184&128
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 128 := 17179869184&128
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 34 := 17179869184&128
(smt.stats   17   2065  41405 132325  4116/3776/324    4699/1336    26  132   54.87)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2199  44921 149846  4156/3897/325    4949/1467    27  133   54.97)
ramon: poll                 wall=2.000s usage=1.843s mem=57284KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   25.4189    160000       784          5            1       17)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 4398046511104&29360128
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 29360128 := 14 << 42
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 4398046511104&61572651155456
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 13 := 7 << 43
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 4398046511104&29360128
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 29360128 := 14 << 42
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 4398046511104&61572651155456
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 13 := 7 << 43
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 4398046511104&61572651155456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 61572651155456 := 14 << 42
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 4398046511104&61572651155456
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 13 := 7 << 43
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 4398046511104&61572651155457
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #781 #785) 64)) 61572651155457 := 14 << 42
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 4398046511104&61572651155456
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 7 << 43
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 0 := 4398046511104&61572651155456
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #109))) 0 := 7 << 43
(smt.stats   19   2346  49721 180494  4204/3917/327    5305/1619    29  135   55.07)
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 1 := 4398046511104&61572651155456
band: (band[50] (if (= #374 63) 1 (if #586 2 #774)) (shl[64] (* 2 #107) (mod #789 64))) 1 := 4398046511104&61572651155456
(smt.stats   20   2507  52976 203487  4309/4017/341    6266/1627    30  152   55.36)
(sat.ddfw       1      1   22.5314    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.847s mem=57724KiB load=1.00 rootload=1.01
(smt.stats   21   2608  56608 214257  4395/4049/342    6590/1750    31  160   55.48)
(sat.ddfw       1      1   20.1555    290001      1421          7            1       30)
(smt.stats   22   2719  60455 227620  4550/4183/343    6909/1815    32  160   55.58)
ramon: poll                 wall=4.004s usage=3.846s mem=57832KiB load=1.00 rootload=1.00
(smt.stats   23   2841  64354 238828  4652/4318/343    7190/1821    32  160   55.69)
(sat.ddfw       1      1   18.1736    370001      1813          8            1       38)
(smt.stats   24   2975  68705 252191  4729/4447/345    7502/1885    33  169   55.83)
ramon: poll                 wall=5.000s usage=4.846s mem=58268KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.5107    460001      2254          9            1       47)
(smt.stats   25   3122  71839 265666  4847/4459/346    8168/1939    34  170   55.92)
ramon: poll                 wall=6.004s usage=5.845s mem=58176KiB load=1.00 rootload=0.99
(smt.stats   26   3283  79195 284434  4989/4582/346    8543/2058    35  174   56.03)
(sat.ddfw       1      1    15.124    560001      2745         10            1       57)
ramon: poll                 wall=7.004s usage=6.849s mem=58692KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   13.9382    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.845s mem=58492KiB load=1.00 rootload=0.99
(smt.stats   27   3460  82891 299416  5122/4760/346    9560/2064    35  174   56.31)
(smt.stats   28   3561  86245 309598  5202/4908/347   10050/2576    36  174   56.41)
(smt.stats   29   3672  91331 340189  5219/4934/348   10241/2626    37  179   56.41)
ramon: poll                 wall=9.000s usage=8.843s mem=58964KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.9241    790001      3872         12            1       80)
ramon: poll                 wall=10.004s usage=9.851s mem=58964KiB load=1.00 rootload=1.01
(smt.stats   30   3794  93885 348315  5278/4956/349   10506/2631    37  179   56.78)
(sat.ddfw       1      1   12.0448    920001      4509         13            1       93)
ramon: poll                 wall=11.004s usage=10.850s mem=58976KiB load=1.00 rootload=1.00
(smt.stats   31   3928  95458 354017  5525/5086/349   10686/2633    37  179   56.78)
ramon: poll                 wall=12.004s usage=11.850s mem=59052KiB load=1.00 rootload=1.00
(smt.stats   32   4075  99162 374138  5636/5326/352   11183/2690    38  180   56.88)
(sat.ddfw       1      1   11.2749   1060001      5196         14            1      108)
ramon: poll                 wall=13.004s usage=12.850s mem=59172KiB load=1.00 rootload=1.00
(smt.stats   33   4236 103339 398279  5867/5379/352   11439/2792    39  200   56.97)
ramon: poll                 wall=14.000s usage=13.975s mem=59276KiB load=1.13 rootload=1.12
(sat.ddfw       1      1    10.725   1210001      5931         15            1      123)
(smt.stats   34   4413 107300 412970  6102/5658/352   11705/2795    39  200   57.09)
(smt.stats   35   4607 111766 435018  6225/5826/352   12338/2797    39  200   57.28)
ramon: poll                 wall=15.004s usage=15.186s mem=59924KiB load=1.21 rootload=1.21
(smt.stats   36   4708 114926 450134  6282/5960/354   12767/2899    40  217   57.28)
(sat.ddfw       1      1   10.1865   1370001      6715         16            1      139)
(smt.stats   37   4819 117592 454523  6393/5999/354   12990/2911    40  217   57.37)
ramon: poll                 wall=16.004s usage=16.186s mem=59956KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 119962 464542  6675/6387/355   13213/2945    41  217   57.37)
ramon: poll                 wall=17.004s usage=17.185s mem=59984KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(sat.ddfw       1      1   9.62409   1540001      7549         17            1      156)
(smt.stats   39   5075 124114 479101  6833/6400/355   13613/2945    41  217   57.61)
ramon: poll                 wall=18.000s usage=18.179s mem=60200KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=19.179s mem=60216KiB load=1.00 rootload=1.00
(smt.stats   40   5222 127308 491982  7085/6570/355   13893/3002    42  218   57.70)
(sat.ddfw       1      1   9.11808   1720001      8431         18            1      174)
ramon: poll                 wall=20.000s usage=20.150s mem=60108KiB load=0.97 rootload=0.97
ramon: end                  Fri Nov  1 22:33:20 2024
ramon: root.execname        z3
ramon: root.utime           20.170s
ramon: root.stime           0.020s
ramon: group.total          20.204s
ramon: group.utime          20.180s
ramon: group.stime          0.024s
ramon: group.mempeak        62364KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.01
